; ModuleID = 'blender/source/blender/blenkernel/intern/object.c'
source_filename = "blender/source/blender/blenkernel/intern/object.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.EvaluationContext = type { i32 }
%struct.MainLock = type opaque
%struct.ListBase = type { i8*, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.AnimData = type { %struct.bAction*, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.NlaStrip*, %struct.ListBase, %struct.ListBase, i32, i32, i16, i16, float }
%struct.AnimMapper = type { %struct.AnimMapper*, %struct.AnimMapper*, %struct.bAction*, %struct.ListBase }
%struct.NlaStrip = type { %struct.NlaStrip*, %struct.NlaStrip*, %struct.ListBase, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.ListBase, [64 x i8], float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i8*, i32, i32 }
%struct.SculptSession = type { %struct.MultiresModifierData*, %struct.MVert*, %struct.MPoly*, %struct.MLoop*, i32, i32, [3 x float]*, %struct.KeyBlock*, float*, %struct.MeshElemMap*, %struct.BMesh*, i32, i32, i8, %struct.BMLog*, %struct.PBVH*, i8, i8, [3 x float]*, [3 x float]*, [3 x [3 x float]]*, i8, i32, i32*, i32, %struct.ImagePool*, [3 x float]*, %struct.SculptStroke*, %struct.StrokeCache*, i8, [3 x float], [3 x float], i32 }
%struct.MultiresModifierData = type { %struct.ModifierData, i8, i8, i8, i8, i8, i8, [2 x i8] }
%struct.ModifierData = type { %struct.ModifierData*, %struct.ModifierData*, i32, i32, i32, i32, [64 x i8], %struct.Scene*, i8* }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type opaque
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.rctf = type { float, float, float, float }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type opaque
%struct.StructRNA = type opaque
%struct.bNodeInstanceHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Mask = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type { %struct.ID, %struct.BrushClone, %struct.CurveMapping*, %struct.MTex, %struct.MTex, %struct.Brush*, %struct.ImBuf*, %struct.PreviewImage*, %struct.ColorBand*, %struct.PaintCurve*, [1024 x i8], float, i16, i16, float, i32, i32, i32, float, i32, i32, i32, i32, float, float, [3 x float], float, [3 x float], i32, float, float, i32, i32, i32, i8, i8, i8, i8, float, float, float, float, float, i32, i32, i32, float, float, i32, i32, float, [3 x float], [3 x float], [2 x float], [2 x float], [2 x float], [2 x float] }
%struct.BrushClone = type { %struct.Image*, [2 x float], float, float }
%struct.PaintCurve = type { %struct.ID, %struct.PaintCurvePoint*, i32, i32 }
%struct.PaintCurvePoint = type { %struct.BezTriple, float }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.Palette = type { %struct.ID, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type { %struct.EffectorWeights*, %struct.Group*, %struct.Object**, %struct.Group*, i32, float, %struct.PointCache*, %struct.ListBase, i32, i16, i16, i32, float, i8* }
%struct.EffectorWeights = type { %struct.Group*, [14 x float], float, i16, [3 x i16], i32 }
%struct.PointCache = type { %struct.PointCache*, %struct.PointCache*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, [64 x i8], [64 x i8], [64 x i8], [1024 x i8], i8*, %struct.ListBase, %struct.PTCacheEdit*, void (%struct.PTCacheEdit*)* }
%struct.PTCacheEdit = type { %struct.ListBase, %struct.PTCacheUndo*, %struct.PTCacheEditPoint*, %struct.PTCacheID, %struct.ParticleSystem*, %struct.ParticleData*, %struct.KDTree*, float*, i32*, %struct.ParticleCacheKey**, %struct.ListBase, i32, i32, i32, i32, [3 x i8], [3 x i8] }
%struct.PTCacheUndo = type { %struct.PTCacheUndo*, %struct.PTCacheUndo*, %struct.PTCacheEditPoint*, %struct.ParticleData*, %struct.KDTree*, float*, i32, %struct.ListBase, i32, [64 x i8] }
%struct.PTCacheEditPoint = type { %struct.PTCacheEditKey*, i32, i16 }
%struct.PTCacheEditKey = type { float*, float*, float*, float*, [3 x float], float, float, i16 }
%struct.PTCacheID = type { %struct.PTCacheID*, %struct.PTCacheID*, %struct.Scene*, %struct.Object*, i8*, i32, i32, i32, i32, i32, i32, i32, i32 (i32, i8*, i8**, i32)*, void (i32, i8*, i8**, float, float*)*, void (i32, i8*, i8**, float, float, float, float*)*, i32 (%struct.PTCacheFile*, i8*)*, i32 (%struct.PTCacheFile*, i8*)*, void (i8*, %struct.PTCacheMem*, i32)*, void (i8*, %struct.PTCacheMem*, float)*, void (i8*, %struct.PTCacheMem*, float, float, float)*, i32 (i8*, i32)*, void (i8*, i8*)*, i32 (i8*, i32)*, i32 (%struct.PTCacheFile*)*, i32 (%struct.PTCacheFile*)*, %struct.PointCache*, %struct.PointCache**, %struct.ListBase* }
%struct.PTCacheFile = type { %struct._IO_FILE*, i32, i32, i32, i32, i32, i32, %struct.PTCacheData, [8 x i8*] }
%struct.PTCacheData = type { i32, [3 x float], [3 x float], [4 x float], [3 x float], float, [3 x float], %struct.BoidData }
%struct.BoidData = type { float, [3 x float], i16, i16 }
%struct.PTCacheMem = type { %struct.PTCacheMem*, %struct.PTCacheMem*, i32, i32, i32, i32, [8 x i8*], [8 x i8*], %struct.ListBase }
%struct.ParticleSystem = type { %struct.ParticleSystem*, %struct.ParticleSystem*, %struct.ParticleSettings*, %struct.ParticleData*, %struct.ChildParticle*, %struct.PTCacheEdit*, void (%struct.PTCacheEdit*)*, %struct.ParticleCacheKey**, %struct.ParticleCacheKey**, %struct.ListBase, %struct.ListBase, %struct.ClothModifierData*, %struct.DerivedMesh*, %struct.DerivedMesh*, %struct.Object*, %struct.LatticeDeformData*, %struct.Object*, %struct.ListBase, [64 x i8], [4 x [4 x float]], float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, [3 x [64 x i8]], [12 x i16], i16, i16, i8*, %struct.PointCache*, %struct.ListBase, %struct.ListBase*, %struct.ParticleSpring*, i32, i32, %struct.KDTree*, %struct.BVHTree*, %struct.ParticleDrawData*, float, float }
%struct.ParticleSettings = type { %struct.ID, %struct.AnimData*, %struct.BoidSettings*, %struct.SPHFluidSettings*, %struct.EffectorWeights*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, [2 x float], [2 x float], float, float, float, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, [1 x float], i32, i32, i32, i32, i16, [3 x i16], float, float, float, float, float, float, float, [3 x float], float, float, float, float, float, float, float, [3 x float], float, float, float, float, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, [2 x float], float, float, i32, i32, [18 x %struct.MTex*], %struct.Group*, %struct.ListBase, %struct.Group*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.PartDeflect*, %struct.PartDeflect*, i16, [3 x i16] }
%struct.BoidSettings = type { i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.ListBase }
%struct.SPHFluidSettings = type { float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, i16, [3 x i16] }
%struct.ChildParticle = type { i32, i32, [4 x i32], [4 x float], [4 x float], float, float }
%struct.ClothModifierData = type { %struct.ModifierData, %struct.Scene*, %struct.Cloth*, %struct.ClothSimSettings*, %struct.ClothCollSettings*, %struct.PointCache*, %struct.ListBase }
%struct.Cloth = type opaque
%struct.ClothSimSettings = type opaque
%struct.ClothCollSettings = type opaque
%struct.LatticeDeformData = type opaque
%struct.ParticleSpring = type { float, [2 x i32], i32 }
%struct.BVHTree = type opaque
%struct.ParticleDrawData = type { float*, float*, float*, float*, float*, float*, float*, float*, float*, i32, i32, i32, i32 }
%struct.ParticleData = type { %struct.ParticleKey, %struct.ParticleKey, %struct.HairKey*, %struct.ParticleKey*, %struct.BoidParticle*, i32, float, float, float, i32, i32, [4 x float], float, float, float, i32, i32, i16, i16 }
%struct.ParticleKey = type { [3 x float], [3 x float], [4 x float], [3 x float], float }
%struct.HairKey = type { [3 x float], float, float, i16, i16 }
%struct.BoidParticle = type { %struct.Object*, %struct.BoidData, [3 x float], [3 x float], float }
%struct.KDTree = type opaque
%struct.ParticleCacheKey = type { [3 x float], [3 x float], [4 x float], [3 x float], float, i32 }
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.MLoop = type { i32, i32 }
%struct.KeyBlock = type { %struct.KeyBlock*, %struct.KeyBlock*, float, float, i16, i16, i16, i16, i32, i32, i8*, [64 x i8], [64 x i8], float, float }
%struct.MeshElemMap = type opaque
%struct.BMesh = type { i32, i32, i32, i32, i32, i32, i32, i8, i8, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BMVert**, %struct.BMEdge**, %struct.BMFace**, i32, i32, i32, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, i32, %struct.BMOperator*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i16, i32, i32, i32, %struct.ListBase, %struct.BMFace*, %struct.ListBase, i8* }
%struct.BMVert = type { %struct.BMHeader, %struct.BMFlagLayer*, [3 x float], [3 x float], %struct.BMEdge* }
%struct.BMHeader = type { i8*, i32, i8, i8, i8 }
%struct.BMFlagLayer = type { i16 }
%struct.BMEdge = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMVert*, %struct.BMVert*, %struct.BMLoop*, %struct.BMDiskLink, %struct.BMDiskLink }
%struct.BMLoop = type { %struct.BMHeader, %struct.BMVert*, %struct.BMEdge*, %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMDiskLink = type { %struct.BMEdge*, %struct.BMEdge* }
%struct.BLI_mempool = type opaque
%struct.BMOperator = type { [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot], void (%struct.BMesh*, %struct.BMOperator*)*, %struct.MemArena*, i32, i32, i32 }
%struct.BMOpSlot = type { i8*, i32, %union.eBMOpSlotSubType_Union, i32, %union.anon }
%union.eBMOpSlotSubType_Union = type { i32 }
%union.anon = type { i8*, [8 x i8] }
%struct.MemArena = type opaque
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.BMFace = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMLoop*, i32, [3 x float], i16 }
%struct.BMLog = type opaque
%struct.PBVH = type opaque
%struct.ImagePool = type opaque
%struct.SculptStroke = type opaque
%struct.StrokeCache = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.BulletSoftBody = type { i32, float, float, float, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, float, float }
%struct.PartDeflect = type { i32, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.Tex*, %struct.RNG*, float, i32, %struct.Object* }
%struct.RNG = type opaque
%struct.SoftBody = type { i32, i32, %struct.BodyPoint*, %struct.BodySpring*, i8, i8, i16, float, [64 x i8], float, float, float, float, float, float, float, float, float, i16, [64 x i8], i16, float, float, [64 x i8], i32, i32, i32, i16, i16, %struct.SBVertex**, i32, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.SBScratch*, float, float, %struct.PointCache*, %struct.ListBase, %struct.EffectorWeights*, [3 x float], [3 x [3 x float]], [3 x [3 x float]], i32 }
%struct.BodyPoint = type { [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], i32, i32*, float, float, float, float, i16, float, float }
%struct.BodySpring = type opaque
%struct.SBVertex = type { [4 x float] }
%struct.SBScratch = type opaque
%struct.Group = type { %struct.ID, %struct.ListBase, i32, [3 x float] }
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type { %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Path* }
%struct.Path = type { %struct.PathPoint*, i32, float }
%struct.PathPoint = type { [4 x float], [4 x float], float, float }
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, %struct.LinkNode*, %struct.GPUDrawObject*, i32, float, i32, i32, %struct.Material**, i8, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, float)*, void (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MEdge*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MPoly*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.DMGridAdjacency* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)*, %struct.DMFlagMat* (%struct.DerivedMesh*)*, i32** (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i8, i8)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*)* }
%struct.LinkNode = type { %struct.LinkNode*, i8* }
%struct.GPUDrawObject = type opaque
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.CCGElem = type opaque
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.CCGKey = type opaque
%struct.DMFlagMat = type { i16, i8 }
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.RigidBodyOb = type { i8*, i8*, i16, i16, i32, i32, i16, i16, float, float, float, float, float, float, float, float, [4 x float], [3 x float], float }
%struct.RigidBodyCon = type { %struct.Object*, %struct.Object*, i16, i16, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i8* }
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.HookModifierData = type { %struct.ModifierData, %struct.Object*, [64 x i8], [4 x [4 x float]], [3 x float], float, i32*, i32, float, [64 x i8] }
%struct.bPoseChannel = type { %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.IDProperty*, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i8, i8, [6 x i8], %struct.Bone*, %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.ListBase, %struct.ListBase, %struct.bMotionPath*, %struct.Object*, %struct.bPoseChannel*, [3 x float], [3 x float], [3 x float], [4 x float], [3 x float], float, i16, i16, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, float, i8* }
%struct.Bone = type { %struct.Bone*, %struct.Bone*, %struct.IDProperty*, %struct.Bone*, %struct.ListBase, [64 x i8], float, [3 x float], [3 x float], [3 x [3 x float]], i32, [3 x float], [3 x float], [4 x [4 x float]], float, float, float, float, float, float, float, float, float, float, [3 x float], i32, i16, [1 x i16] }
%struct.ModifierTypeInfo = type { [32 x i8], [32 x i8], i32, i32, i32, void (%struct.ModifierData*, %struct.ModifierData*)*, void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, i32, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, [3 x float]*, [3 x [3 x float]]*, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, [3 x float]*, i32)*, void (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, [3 x float]*, [3 x [3 x float]]*, i32)*, %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.DerivedMesh*, i32)*, %struct.DerivedMesh* (%struct.ModifierData*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh*, i32)*, void (%struct.ModifierData*)*, i64 (%struct.Object*, %struct.ModifierData*)*, void (%struct.ModifierData*)*, i8 (%struct.ModifierData*, i32)*, void (%struct.ModifierData*, %struct.DagForest*, %struct.Scene*, %struct.Object*, %struct.DagNode*)*, i8 (%struct.ModifierData*)*, i8 (%struct.ModifierData*)*, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.Object**)*, i8*)*, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.ID**)*, i8*)*, void (%struct.ModifierData*, %struct.Object*, void (i8*, %struct.Object*, %struct.ModifierData*, i8*)*, i8*)* }
%struct.BMEditMesh = type { %struct.BMesh*, %struct.BMEditMesh*, i32, [3 x %struct.BMLoop*]*, i32, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, [4 x i8]*, i32, [4 x i8]*, i32, i16, i16, %struct.Object*, i32 }
%struct.DagNode = type opaque
%struct.Mesh = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.Ipo*, %struct.Key*, %struct.Material**, %struct.MSelect*, %struct.MPoly*, %struct.MTexPoly*, %struct.MLoop*, %struct.MLoopUV*, %struct.MLoopCol*, %struct.MFace*, %struct.MTFace*, %struct.TFace*, %struct.MVert*, %struct.MEdge*, %struct.MDeformVert*, %struct.MCol*, %struct.Mesh*, %struct.BMEditMesh*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, %struct.Multires* }
%struct.Key = type { %struct.ID, %struct.AnimData*, %struct.KeyBlock*, [32 x i8], i32, i32, %struct.ListBase, %struct.Ipo*, %struct.ID*, i16, i16, i16, i16, float, i32 }
%struct.MSelect = type { i32, i32 }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.MLoopCol = type { i8, i8, i8, i8 }
%struct.TFace = type { i8*, [4 x [2 x float]], [4 x i32], i8, i8, i16, i16, i16 }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.Multires = type { %struct.ListBase, %struct.MVert*, i8, i8, i8, i8, i8, i8, i8, i8, %struct.CustomData, %struct.CustomData, i16*, i8* }
%struct.ParticleSystemModifierData = type { %struct.ModifierData, %struct.ParticleSystem*, %struct.DerivedMesh*, i32, i32, i32, i16, i16 }
%struct.DynamicPaintModifierData = type { %struct.ModifierData, %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintBrushSettings*, i32, i32 }
%struct.DynamicPaintCanvasSettings = type { %struct.DynamicPaintModifierData*, %struct.DerivedMesh*, %struct.ListBase, i16, i16, i32, [64 x i8] }
%struct.DynamicPaintBrushSettings = type { %struct.DynamicPaintModifierData*, %struct.DerivedMesh*, %struct.ParticleSystem*, %struct.Material*, i32, i32, float, float, float, float, float, float, float, float, %struct.ColorBand*, %struct.ColorBand*, i16, i16, i16, i16, float, float, float, float }
%struct.SmokeModifierData = type { %struct.ModifierData, %struct.SmokeDomainSettings*, %struct.SmokeFlowSettings*, %struct.SmokeCollSettings*, float, i32 }
%struct.SmokeDomainSettings = type { %struct.SmokeModifierData*, %struct.FLUID_3D*, i8*, %struct.Group*, %struct.Group*, %struct.Group*, %struct.WTURBULENCE*, %struct.GPUTexture*, %struct.GPUTexture*, %struct.GPUTexture*, %struct.GPUTexture*, float*, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x i32], [3 x float], [3 x float], [4 x [4 x float]], [4 x [4 x float]], [3 x i32], [3 x i32], [3 x i32], [3 x i32], i32, float, float, i32, i32, float, float, float, i32, i32, i32, i32, i16, i16, i32, float, [3 x i32], float, i32, i32, [2 x %struct.PointCache*], [2 x %struct.ListBase], %struct.EffectorWeights*, i32, float, float, i32, [3 x float], i32, float, float, float, float, float, [3 x float] }
%struct.FLUID_3D = type opaque
%struct.WTURBULENCE = type opaque
%struct.SmokeFlowSettings = type { %struct.SmokeModifierData*, %struct.DerivedMesh*, %struct.ParticleSystem*, %struct.Tex*, float*, i32, float, float, float, float, [3 x float], float, float, float, float, float, i32, float, float, i32, [64 x i8], i16, i16, i16, i16, i32 }
%struct.SmokeCollSettings = type { %struct.SmokeModifierData*, %struct.DerivedMesh*, float*, i32, i16, i16 }
%struct.Curve = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.ListBase, %struct.EditNurb*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.Key*, %struct.Material**, [3 x float], [3 x float], [3 x float], i16, i16, i16, i16, float, float, i32, i16, i16, i32, float, float, float, i16, i16, i16, i16, i32, i32, [4 x i8], i16, i8, i8, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i8*, %struct.EditFont*, [64 x i8], %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.TextBox*, i32, i32, %struct.CharInfo*, %struct.CharInfo, float, float, float, i8, i8, [2 x i8] }
%struct.EditNurb = type { %struct.ListBase, %struct.GHash*, i32, [4 x i8] }
%struct.EditFont = type opaque
%struct.VFont = type opaque
%struct.TextBox = type { float, float, float, float }
%struct.CharInfo = type { i16, i16, i8, i8, i16 }
%struct.MetaBall = type { %struct.ID, %struct.AnimData*, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.Ipo*, %struct.Material**, i8, i8, i16, i16, i16, [3 x float], [3 x float], [3 x float], float, float, float, %struct.MetaElem* }
%struct.MetaElem = type { %struct.MetaElem*, %struct.MetaElem*, %struct.BoundBox*, i16, i16, i16, i16, float, float, float, [4 x float], float, float, float, float, float, float, float, float*, float* }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.wmTimer = type opaque
%struct.SceneRenderLayer = type { %struct.SceneRenderLayer*, %struct.SceneRenderLayer*, [64 x i8], %struct.Material*, %struct.Group*, i32, i32, i32, i32, i32, i32, i32, float, %struct.FreestyleConfig }
%struct.FreestyleConfig = type { %struct.ListBase, i32, i32, i32, float, float, float, %struct.ListBase }
%struct.FreestyleLineSet = type { %struct.FreestyleLineSet*, %struct.FreestyleLineSet*, [64 x i8], i32, i32, i16, i16, i32, i32, i32, i32, i32, %struct.Group*, %struct.FreestyleLineStyle* }
%struct.FreestyleLineStyle = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, i32, float, i32, i32, i32, i32, float, float, float, float, float, i32, i16, i16, i16, i16, i16, i16, i32, i32, float, i16, i16, i16, [3 x i16], i16, i16, i16, i16, i16, i16, i32, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.Camera = type { %struct.ID, %struct.AnimData*, i8, i8, i16, float, float, float, float, float, float, float, float, float, float, float, %struct.Ipo*, %struct.Object*, i8, [7 x i8] }
%struct.bConstraint = type { %struct.bConstraint*, %struct.bConstraint*, i8*, i16, i16, i8, i8, [64 x i8], i16, float, float, %struct.Ipo*, float, float }
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.ARegionType = type opaque
%struct.RegionView3D = type { [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [6 x [4 x float]], [6 x [4 x float]], %struct.BoundBox*, %struct.RegionView3D*, %struct.RenderEngine*, %struct.ViewDepths*, i8*, %struct.SmoothView3DStore*, %struct.wmTimer*, [4 x [4 x float]], [4 x float], float, float, float, float, [3 x float], float, i8, i8, i8, i8, i8, [3 x i8], [2 x float], i16, i16, [4 x float], i16, i16, float, [3 x float], float, [3 x float] }
%struct.RenderEngine = type opaque
%struct.ViewDepths = type opaque
%struct.SmoothView3DStore = type opaque
%struct.bConstraintTypeInfo = type { i16, i16, [32 x i8], [32 x i8], void (%struct.bConstraint*)*, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)*, void (%struct.bConstraint*, %struct.bConstraint*)*, void (i8*)*, i32 (%struct.bConstraint*, %struct.ListBase*)*, void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* }
%struct.bConstraintOb = type { %struct.Scene*, %struct.Object*, %struct.bPoseChannel*, [4 x [4 x float]], [4 x [4 x float]], i16, i16 }
%struct.bConstraintTarget = type { %struct.bConstraintTarget*, %struct.bConstraintTarget*, %struct.Object*, [64 x i8], [4 x [4 x float]], i16, i16, i16, i16 }
%struct.BoidState = type { %struct.BoidState*, %struct.BoidState*, %struct.ListBase, %struct.ListBase, %struct.ListBase, [32 x i8], i32, i32, i32, float, i32, i32, float, float }
%struct.BoidRule = type { %struct.BoidRule*, %struct.BoidRule*, i32, i32, [32 x i8] }
%struct.ParticleTarget = type { %struct.ParticleTarget*, %struct.ParticleTarget*, %struct.Object*, i32, i16, i16, float, float }
%struct.BoidRuleGoalAvoid = type { %struct.BoidRule, %struct.Object*, i32, float, i32, i32 }
%struct.BoidRuleFollowLeader = type { %struct.BoidRule, %struct.Object*, [3 x float], [3 x float], float, float, i32, i32 }
%struct.TimeMarker = type { %struct.TimeMarker*, %struct.TimeMarker*, i32, [64 x i8], i32, %struct.Object* }
%struct.SeqIterator = type { %struct.Sequence**, i32, i32, %struct.Sequence*, i32 }
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.SpaceType = type opaque
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.View3D = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], [4 x float], float, float, i8, [3 x i8], i32, i32, i16, i16, %struct.Object*, %struct.Object*, %struct.rctf, %struct.ListBase, %struct.BGpic*, %struct.View3D*, [64 x i8], i32, i32, i16, i16, i16, i16, i16, i16, float, float, float, float, [3 x float], [3 x float], i16, i16, i16, i8, i8, i8, i8, [2 x i8], %struct.ListBase, %struct.ListBase, %struct.ListBase, i8, i8, i8, [5 x i8], i8*, %struct.Material*, %struct.bGPdata* }
%struct.BGpic = type { %struct.BGpic*, %struct.BGpic*, %struct.Image*, %struct.ImageUser, %struct.MovieClip*, %struct.MovieClipUser, float, float, float, float, i16, i16, i16, i16 }
%struct.MovieClipUser = type { i32, i16, i16 }
%struct.SpaceOops = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], %struct.View2D, %struct.ListBase, %struct.BLI_mempool*, [32 x i8], %struct.TreeStoreElem, i16, i16, i16, i16, i8* }
%struct.TreeStoreElem = type { i16, i16, i16, i16, %struct.ID* }
%struct.BLI_mempool_iter = type { %struct.BLI_mempool*, %struct.BLI_mempool_chunk*, i32 }
%struct.BLI_mempool_chunk = type opaque
%struct.SpaceButs = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], %struct.View2D, i16, i16, i16, i16, i16, i16, i16, i16, i8, [7 x i8], i8*, i32, i32, %struct.ID*, i8* }
%struct.SpaceNode = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], %struct.View2D, %struct.ID*, %struct.ID*, i16, i16, float, float, float, float, float, [2 x float], %struct.ListBase, %struct.bNodeTree*, %struct.bNodeTree*, [64 x i8], i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.bGPdata* }
%struct.bArmature = type { %struct.ID, %struct.AnimData*, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.Bone*, %struct.EditBone*, i8*, i32, i32, i32, i32, i16, i16, i32, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, i32, i32 }
%struct.EditBone = type opaque
%struct.Lattice = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i32, float, float, float, float, float, float, %struct.BPoint*, %struct.Ipo*, %struct.Key*, %struct.MDeformVert*, [64 x i8], %struct.EditLatt* }
%struct.BPoint = type { [4 x float], float, float, i16, i16, float, float }
%struct.EditLatt = type { %struct.Lattice*, i32, [4 x i8] }
%struct.Lamp = type { %struct.ID, %struct.AnimData*, i16, i16, i32, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.CurveMapping*, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i8, i8, i16, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, [2 x i8], %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [4 x i8], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.FCurve = type { %struct.FCurve*, %struct.FCurve*, %struct.bActionGroup*, %struct.ChannelDriver*, %struct.ListBase, %struct.BezTriple*, %struct.FPoint*, i32, float, i16, i16, i32, i8*, i32, [3 x float], float, float }
%struct.bActionGroup = type { %struct.bActionGroup*, %struct.bActionGroup*, %struct.ListBase, i32, i32, [64 x i8], %struct.ThemeWireColor }
%struct.ThemeWireColor = type { [4 x i8], [4 x i8], [4 x i8], i16, i16 }
%struct.ChannelDriver = type { %struct.ListBase, [256 x i8], i8*, float, float, i32, i32 }
%struct.FPoint = type { [2 x float], i32, i32 }
%struct.DriverVar = type { %struct.DriverVar*, %struct.DriverVar*, [64 x i8], [8 x %struct.DriverTarget], i16, i16, float }
%struct.DriverTarget = type { %struct.ID*, i8*, [32 x i8], i16, i16, i32 }
%struct.ObjectTfmProtectedChannels = type { [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float }
%struct.DupliObject = type { %struct.DupliObject*, %struct.DupliObject*, %struct.Object*, [4 x [4 x float]], [3 x float], [2 x float], i16, i8, i8, [8 x i32], %struct.ParticleSystem* }
%struct.DispList = type { %struct.DispList*, %struct.DispList*, i16, i16, i32, i32, i16, i16, float*, float*, i32*, i32, i32, i32* }
%struct.ObTfmBack = type { [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]] }
%struct.PBVHNode = type opaque
%struct.LinkData = type { %struct.LinkData*, %struct.LinkData*, i8* }
%struct.VirtualModifierData = type { %struct.ArmatureModifierData, %struct.CurveModifierData, %struct.LatticeModifierData, %struct.ShapeKeyModifierData }
%struct.ArmatureModifierData = type { %struct.ModifierData, i16, i16, i32, %struct.Object*, float*, [64 x i8] }
%struct.CurveModifierData = type { %struct.ModifierData, %struct.Object*, [64 x i8], i16, [6 x i8] }
%struct.LatticeModifierData = type { %struct.ModifierData, %struct.Object*, [64 x i8], float, [4 x i8] }
%struct.ShapeKeyModifierData = type { %struct.ModifierData }
%struct.bCameraSolverConstraint = type { %struct.MovieClip*, i32, i32 }
%struct.Nurb = type { %struct.Nurb*, %struct.Nurb*, i16, i16, i16, i16, i32, i32, [2 x i16], i16, i16, i16, i16, i16, i16, float*, float*, %struct.BPoint*, %struct.BezTriple*, i16, i16, i32 }

@MEM_freeN = external dso_local global void (i8*)*, align 8
@G = external dso_local global %struct.Global, align 8
@.str = private unnamed_addr constant [5 x i8] c"Mesh\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"Curve\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"Surf\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"Text\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"Meta\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"Camera\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"Lamp\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"Lattice\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"Armature\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"Speaker\00", align 1
@.str.10 = private unnamed_addr constant [63 x i8] c"BKE_object_obdata_add_from_type: Internal error, bad type: %d\0A\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@.str.11 = private unnamed_addr constant [19 x i8] c"cannot make proxy\0A\00", align 1
@enable_cu_speed = dso_local global i32 1, align 4, !dbg !0
@__const.BKE_boundbox_alloc_unit.min = private unnamed_addr constant [3 x float] [float -1.000000e+00, float -1.000000e+00, float -1.000000e+00], align 4
@__const.BKE_boundbox_alloc_unit.max = private unnamed_addr constant [3 x float] [float -1.000000e+00, float -1.000000e+00, float -1.000000e+00], align 4
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.12 = private unnamed_addr constant [12 x i8] c"OB-BoundBox\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"image user\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.14 = private unnamed_addr constant [10 x i8] c"ObTfmBack\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"recalcob %s\0A\00", align 1
@.str.16 = private unnamed_addr constant [15 x i8] c"recalcdata %s\0A\00", align 1
@CD_MASK_BAREMESH = external dso_local constant i64, align 8
@.str.17 = private unnamed_addr constant [51 x i8] c"Proxy copy error, lib Object: %s proxy Object: %s\0A\00", align 1
@__const.BKE_boundbox_ray_hit_check.triangle_indexes = private unnamed_addr constant [12 x [3 x i32]] [[3 x i32] [i32 0, i32 1, i32 2], [3 x i32] [i32 0, i32 2, i32 3], [3 x i32] [i32 3, i32 2, i32 6], [3 x i32] [i32 3, i32 6, i32 7], [3 x i32] [i32 1, i32 2, i32 6], [3 x i32] [i32 1, i32 6, i32 5], [3 x i32] [i32 5, i32 6, i32 7], [3 x i32] [i32 4, i32 5, i32 7], [3 x i32] [i32 0, i32 3, i32 7], [3 x i32] [i32 0, i32 4, i32 7], [3 x i32] [i32 0, i32 1, i32 5], [3 x i32] [i32 0, i32 4, i32 5]], align 16
@.str.18 = private unnamed_addr constant [7 x i8] c"PCLink\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"Mball\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"Empty\00", align 1
@.str.21 = private unnamed_addr constant [50 x i8] c"get_obdata_defname: Internal error, bad type: %d\0A\00", align 1
@.str.22 = private unnamed_addr constant [51 x i8] c"Object %s with Bone parent: bone %s doesn't exist\0A\00", align 1
@vparent_lock = internal global i32 0, align 4, !dbg !5273
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.23 = private unnamed_addr constant [80 x i8] c"%s: DerivedMesh is needed to solve parenting, object position can be wrong now\0A\00", align 1
@__func__.give_parvert = private unnamed_addr constant [13 x i8] c"give_parvert\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_workob_clear(%struct.Object* %workob) #0 !dbg !5283 {
entry:
  %workob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %workob, %struct.Object** %workob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %workob.addr, metadata !5287, metadata !DIExpression()), !dbg !5288
  %0 = load %struct.Object*, %struct.Object** %workob.addr, align 8, !dbg !5289
  %1 = bitcast %struct.Object* %0 to i8*, !dbg !5290
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 1424, i1 false), !dbg !5290
  %2 = load %struct.Object*, %struct.Object** %workob.addr, align 8, !dbg !5291
  %size = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 36, !dbg !5292
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !5291
  store float 1.000000e+00, float* %arrayidx, align 4, !dbg !5293
  %3 = load %struct.Object*, %struct.Object** %workob.addr, align 8, !dbg !5294
  %size1 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 36, !dbg !5295
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %size1, i64 0, i64 1, !dbg !5294
  store float 1.000000e+00, float* %arrayidx2, align 4, !dbg !5296
  %4 = load %struct.Object*, %struct.Object** %workob.addr, align 8, !dbg !5297
  %size3 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 36, !dbg !5298
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %size3, i64 0, i64 0, !dbg !5297
  store float 1.000000e+00, float* %arrayidx4, align 4, !dbg !5299
  %5 = load %struct.Object*, %struct.Object** %workob.addr, align 8, !dbg !5300
  %dscale = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 38, !dbg !5301
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %dscale, i64 0, i64 2, !dbg !5300
  store float 1.000000e+00, float* %arrayidx5, align 4, !dbg !5302
  %6 = load %struct.Object*, %struct.Object** %workob.addr, align 8, !dbg !5303
  %dscale6 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 38, !dbg !5304
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %dscale6, i64 0, i64 1, !dbg !5303
  store float 1.000000e+00, float* %arrayidx7, align 4, !dbg !5305
  %7 = load %struct.Object*, %struct.Object** %workob.addr, align 8, !dbg !5306
  %dscale8 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 38, !dbg !5307
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %dscale8, i64 0, i64 0, !dbg !5306
  store float 1.000000e+00, float* %arrayidx9, align 4, !dbg !5308
  %8 = load %struct.Object*, %struct.Object** %workob.addr, align 8, !dbg !5309
  %rotmode = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 83, !dbg !5310
  store i16 1, i16* %rotmode, align 8, !dbg !5311
  ret void, !dbg !5312
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_update_base_layer(%struct.Scene* %scene, %struct.Object* %ob) #0 !dbg !5313 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %base = alloca %struct.Base*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !5316, metadata !DIExpression()), !dbg !5317
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5318, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !5320, metadata !DIExpression()), !dbg !5323
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5324
  %base1 = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 5, !dbg !5325
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base1, i32 0, i32 0, !dbg !5326
  %1 = load i8*, i8** %first, align 8, !dbg !5326
  %2 = bitcast i8* %1 to %struct.Base*, !dbg !5324
  store %struct.Base* %2, %struct.Base** %base, align 8, !dbg !5323
  br label %while.cond, !dbg !5327

while.cond:                                       ; preds = %if.end, %entry
  %3 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !5328
  %tobool = icmp ne %struct.Base* %3, null, !dbg !5327
  br i1 %tobool, label %while.body, label %while.end, !dbg !5327

while.body:                                       ; preds = %while.cond
  %4 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !5329
  %object = getelementptr inbounds %struct.Base, %struct.Base* %4, i32 0, i32 7, !dbg !5332
  %5 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !5332
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5333
  %cmp = icmp eq %struct.Object* %5, %6, !dbg !5334
  br i1 %cmp, label %if.then, label %if.end, !dbg !5335

if.then:                                          ; preds = %while.body
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5336
  %lay = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 52, !dbg !5337
  %8 = load i32, i32* %lay, align 8, !dbg !5337
  %9 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !5338
  %lay2 = getelementptr inbounds %struct.Base, %struct.Base* %9, i32 0, i32 2, !dbg !5339
  store i32 %8, i32* %lay2, align 8, !dbg !5340
  br label %if.end, !dbg !5338

if.end:                                           ; preds = %if.then, %while.body
  %10 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !5341
  %next = getelementptr inbounds %struct.Base, %struct.Base* %10, i32 0, i32 0, !dbg !5342
  %11 = load %struct.Base*, %struct.Base** %next, align 8, !dbg !5342
  store %struct.Base* %11, %struct.Base** %base, align 8, !dbg !5343
  br label %while.cond, !dbg !5327, !llvm.loop !5344

while.end:                                        ; preds = %while.cond
  ret void, !dbg !5346
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_free_particlesystems(%struct.Object* %ob) #0 !dbg !5347 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5348, metadata !DIExpression()), !dbg !5349
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !5350, metadata !DIExpression()), !dbg !5353
  br label %while.cond, !dbg !5354

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5355
  %particlesystem = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 109, !dbg !5356
  %call = call i8* @BLI_pophead(%struct.ListBase* %particlesystem), !dbg !5357
  %1 = bitcast i8* %call to %struct.ParticleSystem*, !dbg !5357
  store %struct.ParticleSystem* %1, %struct.ParticleSystem** %psys, align 8, !dbg !5358
  %tobool = icmp ne %struct.ParticleSystem* %1, null, !dbg !5354
  br i1 %tobool, label %while.body, label %while.end, !dbg !5354

while.body:                                       ; preds = %while.cond
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5359
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5361
  call void @psys_free(%struct.Object* %2, %struct.ParticleSystem* %3), !dbg !5362
  br label %while.cond, !dbg !5354, !llvm.loop !5363

while.end:                                        ; preds = %while.cond
  ret void, !dbg !5365
}

declare dso_local i8* @BLI_pophead(%struct.ListBase*) #3

declare dso_local void @psys_free(%struct.Object*, %struct.ParticleSystem*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_free_softbody(%struct.Object* %ob) #0 !dbg !5366 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5367, metadata !DIExpression()), !dbg !5368
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5369
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 111, !dbg !5371
  %1 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !5371
  %tobool = icmp ne %struct.SoftBody* %1, null, !dbg !5369
  br i1 %tobool, label %if.then, label %if.end, !dbg !5372

if.then:                                          ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5373
  %soft1 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 111, !dbg !5375
  %3 = load %struct.SoftBody*, %struct.SoftBody** %soft1, align 8, !dbg !5375
  call void @sbFree(%struct.SoftBody* %3), !dbg !5376
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5377
  %soft2 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 111, !dbg !5378
  store %struct.SoftBody* null, %struct.SoftBody** %soft2, align 8, !dbg !5379
  br label %if.end, !dbg !5380

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5381
}

declare dso_local void @sbFree(%struct.SoftBody*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_free_bulletsoftbody(%struct.Object* %ob) #0 !dbg !5382 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5383, metadata !DIExpression()), !dbg !5384
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5385
  %bsoft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 101, !dbg !5387
  %1 = load %struct.BulletSoftBody*, %struct.BulletSoftBody** %bsoft, align 8, !dbg !5387
  %tobool = icmp ne %struct.BulletSoftBody* %1, null, !dbg !5385
  br i1 %tobool, label %if.then, label %if.end, !dbg !5388

if.then:                                          ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5389
  %bsoft1 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 101, !dbg !5391
  %3 = load %struct.BulletSoftBody*, %struct.BulletSoftBody** %bsoft1, align 8, !dbg !5391
  call void @bsbFree(%struct.BulletSoftBody* %3), !dbg !5392
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5393
  %bsoft2 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 101, !dbg !5394
  store %struct.BulletSoftBody* null, %struct.BulletSoftBody** %bsoft2, align 8, !dbg !5395
  br label %if.end, !dbg !5396

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5397
}

declare dso_local void @bsbFree(%struct.BulletSoftBody*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_free_curve_cache(%struct.Object* %ob) #0 !dbg !5398 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5399, metadata !DIExpression()), !dbg !5400
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5401
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 118, !dbg !5403
  %1 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !5403
  %tobool = icmp ne %struct.CurveCache* %1, null, !dbg !5401
  br i1 %tobool, label %if.then, label %if.end11, !dbg !5404

if.then:                                          ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5405
  %curve_cache1 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 118, !dbg !5407
  %3 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache1, align 8, !dbg !5407
  %disp = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %3, i32 0, i32 0, !dbg !5408
  call void @BKE_displist_free(%struct.ListBase* %disp), !dbg !5409
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5410
  %curve_cache2 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 118, !dbg !5411
  %5 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache2, align 8, !dbg !5411
  %bev = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %5, i32 0, i32 1, !dbg !5412
  call void @BKE_curve_bevelList_free(%struct.ListBase* %bev), !dbg !5413
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5414
  %curve_cache3 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 118, !dbg !5416
  %7 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache3, align 8, !dbg !5416
  %path = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %7, i32 0, i32 3, !dbg !5417
  %8 = load %struct.Path*, %struct.Path** %path, align 8, !dbg !5417
  %tobool4 = icmp ne %struct.Path* %8, null, !dbg !5414
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !5418

if.then5:                                         ; preds = %if.then
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5419
  %curve_cache6 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 118, !dbg !5421
  %10 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache6, align 8, !dbg !5421
  %path7 = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %10, i32 0, i32 3, !dbg !5422
  %11 = load %struct.Path*, %struct.Path** %path7, align 8, !dbg !5422
  call void @free_path(%struct.Path* %11), !dbg !5423
  br label %if.end, !dbg !5424

if.end:                                           ; preds = %if.then5, %if.then
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5425
  %curve_cache8 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 118, !dbg !5426
  %13 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache8, align 8, !dbg !5426
  %deformed_nurbs = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %13, i32 0, i32 2, !dbg !5427
  call void @BKE_nurbList_free(%struct.ListBase* %deformed_nurbs), !dbg !5428
  %14 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5429
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5430
  %curve_cache9 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 118, !dbg !5431
  %16 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache9, align 8, !dbg !5431
  %17 = bitcast %struct.CurveCache* %16 to i8*, !dbg !5430
  call void %14(i8* %17), !dbg !5429
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5432
  %curve_cache10 = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 118, !dbg !5433
  store %struct.CurveCache* null, %struct.CurveCache** %curve_cache10, align 8, !dbg !5434
  br label %if.end11, !dbg !5435

if.end11:                                         ; preds = %if.end, %entry
  ret void, !dbg !5436
}

declare dso_local void @BKE_displist_free(%struct.ListBase*) #3

declare dso_local void @BKE_curve_bevelList_free(%struct.ListBase*) #3

declare dso_local void @free_path(%struct.Path*) #3

declare dso_local void @BKE_nurbList_free(%struct.ListBase*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_free_modifiers(%struct.Object* %ob) #0 !dbg !5437 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %md = alloca %struct.ModifierData*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5438, metadata !DIExpression()), !dbg !5439
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !5440, metadata !DIExpression()), !dbg !5441
  br label %while.cond, !dbg !5442

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5443
  %modifiers = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 26, !dbg !5444
  %call = call i8* @BLI_pophead(%struct.ListBase* %modifiers), !dbg !5445
  %1 = bitcast i8* %call to %struct.ModifierData*, !dbg !5445
  store %struct.ModifierData* %1, %struct.ModifierData** %md, align 8, !dbg !5446
  %tobool = icmp ne %struct.ModifierData* %1, null, !dbg !5442
  br i1 %tobool, label %while.body, label %while.end, !dbg !5442

while.body:                                       ; preds = %while.cond
  %2 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5447
  call void @modifier_free(%struct.ModifierData* %2), !dbg !5449
  br label %while.cond, !dbg !5442, !llvm.loop !5450

while.end:                                        ; preds = %while.cond
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5452
  call void @BKE_object_free_particlesystems(%struct.Object* %3), !dbg !5453
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5454
  call void @BKE_object_free_softbody(%struct.Object* %4), !dbg !5455
  ret void, !dbg !5456
}

declare dso_local void @modifier_free(%struct.ModifierData*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_modifier_hook_reset(%struct.Object* %ob, %struct.HookModifierData* %hmd) #0 !dbg !5457 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %hmd.addr = alloca %struct.HookModifierData*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  %imat = alloca [4 x [4 x float]], align 16
  %mat = alloca [4 x [4 x float]], align 16
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5474, metadata !DIExpression()), !dbg !5475
  store %struct.HookModifierData* %hmd, %struct.HookModifierData** %hmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.HookModifierData** %hmd.addr, metadata !5476, metadata !DIExpression()), !dbg !5477
  %0 = load %struct.HookModifierData*, %struct.HookModifierData** %hmd.addr, align 8, !dbg !5478
  %object = getelementptr inbounds %struct.HookModifierData, %struct.HookModifierData* %0, i32 0, i32 1, !dbg !5480
  %1 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !5480
  %tobool = icmp ne %struct.Object* %1, null, !dbg !5478
  br i1 %tobool, label %if.then, label %if.end31, !dbg !5481

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !5482, metadata !DIExpression()), !dbg !5529
  %2 = load %struct.HookModifierData*, %struct.HookModifierData** %hmd.addr, align 8, !dbg !5530
  %object1 = getelementptr inbounds %struct.HookModifierData, %struct.HookModifierData* %2, i32 0, i32 1, !dbg !5531
  %3 = load %struct.Object*, %struct.Object** %object1, align 8, !dbg !5531
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 18, !dbg !5532
  %4 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !5532
  %5 = load %struct.HookModifierData*, %struct.HookModifierData** %hmd.addr, align 8, !dbg !5533
  %subtarget = getelementptr inbounds %struct.HookModifierData, %struct.HookModifierData* %5, i32 0, i32 2, !dbg !5534
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !5533
  %call = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %4, i8* %arraydecay), !dbg !5535
  store %struct.bPoseChannel* %call, %struct.bPoseChannel** %pchan, align 8, !dbg !5529
  %6 = load %struct.HookModifierData*, %struct.HookModifierData** %hmd.addr, align 8, !dbg !5536
  %subtarget2 = getelementptr inbounds %struct.HookModifierData, %struct.HookModifierData* %6, i32 0, i32 2, !dbg !5538
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget2, i64 0, i64 0, !dbg !5536
  %7 = load i8, i8* %arrayidx, align 8, !dbg !5536
  %conv = zext i8 %7 to i32, !dbg !5536
  %tobool3 = icmp ne i32 %conv, 0, !dbg !5536
  br i1 %tobool3, label %land.lhs.true, label %if.else, !dbg !5539

land.lhs.true:                                    ; preds = %if.then
  %8 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !5540
  %tobool4 = icmp ne %struct.bPoseChannel* %8, null, !dbg !5540
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !5541

if.then5:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %imat, metadata !5542, metadata !DIExpression()), !dbg !5544
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !5545, metadata !DIExpression()), !dbg !5546
  %arraydecay6 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !5547
  %9 = load %struct.HookModifierData*, %struct.HookModifierData** %hmd.addr, align 8, !dbg !5548
  %object7 = getelementptr inbounds %struct.HookModifierData, %struct.HookModifierData* %9, i32 0, i32 1, !dbg !5549
  %10 = load %struct.Object*, %struct.Object** %object7, align 8, !dbg !5549
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 47, !dbg !5550
  %arraydecay8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !5548
  %11 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !5551
  %pose_mat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %11, i32 0, i32 29, !dbg !5552
  %arraydecay9 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat, i64 0, i64 0, !dbg !5551
  call void @mul_m4_m4m4([4 x float]* %arraydecay6, [4 x float]* %arraydecay8, [4 x float]* %arraydecay9), !dbg !5553
  %arraydecay10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !5554
  %arraydecay11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !5555
  %call12 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay10, [4 x float]* %arraydecay11), !dbg !5556
  %12 = load %struct.HookModifierData*, %struct.HookModifierData** %hmd.addr, align 8, !dbg !5557
  %parentinv = getelementptr inbounds %struct.HookModifierData, %struct.HookModifierData* %12, i32 0, i32 3, !dbg !5558
  %arraydecay13 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %parentinv, i64 0, i64 0, !dbg !5557
  %arraydecay14 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !5559
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5560
  %obmat15 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 47, !dbg !5561
  %arraydecay16 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat15, i64 0, i64 0, !dbg !5560
  call void @mul_m4_m4m4([4 x float]* %arraydecay13, [4 x float]* %arraydecay14, [4 x float]* %arraydecay16), !dbg !5562
  br label %if.end, !dbg !5563

if.else:                                          ; preds = %land.lhs.true, %if.then
  %14 = load %struct.HookModifierData*, %struct.HookModifierData** %hmd.addr, align 8, !dbg !5564
  %object17 = getelementptr inbounds %struct.HookModifierData, %struct.HookModifierData* %14, i32 0, i32 1, !dbg !5566
  %15 = load %struct.Object*, %struct.Object** %object17, align 8, !dbg !5566
  %imat18 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 50, !dbg !5567
  %arraydecay19 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat18, i64 0, i64 0, !dbg !5564
  %16 = load %struct.HookModifierData*, %struct.HookModifierData** %hmd.addr, align 8, !dbg !5568
  %object20 = getelementptr inbounds %struct.HookModifierData, %struct.HookModifierData* %16, i32 0, i32 1, !dbg !5569
  %17 = load %struct.Object*, %struct.Object** %object20, align 8, !dbg !5569
  %obmat21 = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 47, !dbg !5570
  %arraydecay22 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat21, i64 0, i64 0, !dbg !5568
  %call23 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay19, [4 x float]* %arraydecay22), !dbg !5571
  %18 = load %struct.HookModifierData*, %struct.HookModifierData** %hmd.addr, align 8, !dbg !5572
  %parentinv24 = getelementptr inbounds %struct.HookModifierData, %struct.HookModifierData* %18, i32 0, i32 3, !dbg !5573
  %arraydecay25 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %parentinv24, i64 0, i64 0, !dbg !5572
  %19 = load %struct.HookModifierData*, %struct.HookModifierData** %hmd.addr, align 8, !dbg !5574
  %object26 = getelementptr inbounds %struct.HookModifierData, %struct.HookModifierData* %19, i32 0, i32 1, !dbg !5575
  %20 = load %struct.Object*, %struct.Object** %object26, align 8, !dbg !5575
  %imat27 = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 50, !dbg !5576
  %arraydecay28 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat27, i64 0, i64 0, !dbg !5574
  %21 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5577
  %obmat29 = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 47, !dbg !5578
  %arraydecay30 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat29, i64 0, i64 0, !dbg !5577
  call void @mul_m4_m4m4([4 x float]* %arraydecay25, [4 x float]* %arraydecay28, [4 x float]* %arraydecay30), !dbg !5579
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %if.end31, !dbg !5580

if.end31:                                         ; preds = %if.end, %entry
  ret void, !dbg !5581
}

declare dso_local %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose*, i8*) #3

declare dso_local void @mul_m4_m4m4([4 x float]*, [4 x float]*, [4 x float]*) #3

declare dso_local zeroext i8 @invert_m4_m4([4 x float]*, [4 x float]*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_object_support_modifier_type_check(%struct.Object* %ob, i32 %modifier_type) #0 !dbg !5582 {
entry:
  %retval = alloca i8, align 1
  %ob.addr = alloca %struct.Object*, align 8
  %modifier_type.addr = alloca i32, align 4
  %mti = alloca %struct.ModifierTypeInfo*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5585, metadata !DIExpression()), !dbg !5586
  store i32 %modifier_type, i32* %modifier_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %modifier_type.addr, metadata !5587, metadata !DIExpression()), !dbg !5588
  call void @llvm.dbg.declare(metadata %struct.ModifierTypeInfo** %mti, metadata !5589, metadata !DIExpression()), !dbg !5679
  %0 = load i32, i32* %modifier_type.addr, align 4, !dbg !5680
  %call = call %struct.ModifierTypeInfo* @modifierType_getInfo(i32 %0), !dbg !5681
  store %struct.ModifierTypeInfo* %call, %struct.ModifierTypeInfo** %mti, align 8, !dbg !5682
  %1 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !5683
  %flags = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %1, i32 0, i32 4, !dbg !5685
  %2 = load i32, i32* %flags, align 8, !dbg !5685
  %and = and i32 %2, 2, !dbg !5686
  %tobool = icmp ne i32 %and, 0, !dbg !5686
  br i1 %tobool, label %if.end, label %lor.lhs.false, !dbg !5687

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5688
  %type = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 3, !dbg !5689
  %4 = load i16, i16* %type, align 8, !dbg !5689
  %conv = sext i16 %4 to i32, !dbg !5688
  %cmp = icmp eq i32 %conv, 1, !dbg !5690
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !5691

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !5692
  %flags2 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %5, i32 0, i32 4, !dbg !5693
  %6 = load i32, i32* %flags2, align 8, !dbg !5693
  %and3 = and i32 %6, 1, !dbg !5694
  %tobool4 = icmp ne i32 %and3, 0, !dbg !5694
  br i1 %tobool4, label %if.end, label %if.then, !dbg !5695

if.then:                                          ; preds = %land.lhs.true, %lor.lhs.false
  store i8 0, i8* %retval, align 1, !dbg !5696
  br label %return, !dbg !5696

if.end:                                           ; preds = %land.lhs.true, %entry
  store i8 1, i8* %retval, align 1, !dbg !5698
  br label %return, !dbg !5698

return:                                           ; preds = %if.end, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !5699
  ret i8 %7, !dbg !5699
}

declare dso_local %struct.ModifierTypeInfo* @modifierType_getInfo(i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_link_modifiers(%struct.Object* %ob_dst, %struct.Object* %ob_src) #0 !dbg !5700 {
entry:
  %ob_dst.addr = alloca %struct.Object*, align 8
  %ob_src.addr = alloca %struct.Object*, align 8
  %md = alloca %struct.ModifierData*, align 8
  %nmd = alloca %struct.ModifierData*, align 8
  store %struct.Object* %ob_dst, %struct.Object** %ob_dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob_dst.addr, metadata !5703, metadata !DIExpression()), !dbg !5704
  store %struct.Object* %ob_src, %struct.Object** %ob_src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob_src.addr, metadata !5705, metadata !DIExpression()), !dbg !5706
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !5707, metadata !DIExpression()), !dbg !5708
  %0 = load %struct.Object*, %struct.Object** %ob_dst.addr, align 8, !dbg !5709
  call void @BKE_object_free_modifiers(%struct.Object* %0), !dbg !5710
  %1 = load %struct.Object*, %struct.Object** %ob_dst.addr, align 8, !dbg !5711
  %type = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 3, !dbg !5711
  %2 = load i16, i16* %type, align 8, !dbg !5711
  %conv = sext i16 %2 to i32, !dbg !5711
  %cmp = icmp eq i32 %conv, 1, !dbg !5711
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !5711

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.Object*, %struct.Object** %ob_dst.addr, align 8, !dbg !5711
  %type2 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 3, !dbg !5711
  %4 = load i16, i16* %type2, align 8, !dbg !5711
  %conv3 = sext i16 %4 to i32, !dbg !5711
  %cmp4 = icmp eq i32 %conv3, 2, !dbg !5711
  br i1 %cmp4, label %if.end, label %lor.lhs.false6, !dbg !5711

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %5 = load %struct.Object*, %struct.Object** %ob_dst.addr, align 8, !dbg !5711
  %type7 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 3, !dbg !5711
  %6 = load i16, i16* %type7, align 8, !dbg !5711
  %conv8 = sext i16 %6 to i32, !dbg !5711
  %cmp9 = icmp eq i32 %conv8, 3, !dbg !5711
  br i1 %cmp9, label %if.end, label %lor.lhs.false11, !dbg !5711

lor.lhs.false11:                                  ; preds = %lor.lhs.false6
  %7 = load %struct.Object*, %struct.Object** %ob_dst.addr, align 8, !dbg !5711
  %type12 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 3, !dbg !5711
  %8 = load i16, i16* %type12, align 8, !dbg !5711
  %conv13 = sext i16 %8 to i32, !dbg !5711
  %cmp14 = icmp eq i32 %conv13, 4, !dbg !5711
  br i1 %cmp14, label %if.end, label %lor.lhs.false16, !dbg !5711

lor.lhs.false16:                                  ; preds = %lor.lhs.false11
  %9 = load %struct.Object*, %struct.Object** %ob_dst.addr, align 8, !dbg !5711
  %type17 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 3, !dbg !5711
  %10 = load i16, i16* %type17, align 8, !dbg !5711
  %conv18 = sext i16 %10 to i32, !dbg !5711
  %cmp19 = icmp eq i32 %conv18, 22, !dbg !5711
  br i1 %cmp19, label %if.end, label %if.then, !dbg !5713

if.then:                                          ; preds = %lor.lhs.false16
  br label %return, !dbg !5714

if.end:                                           ; preds = %lor.lhs.false16, %lor.lhs.false11, %lor.lhs.false6, %lor.lhs.false, %entry
  %11 = load %struct.Object*, %struct.Object** %ob_src.addr, align 8, !dbg !5716
  %modifiers = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 26, !dbg !5718
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %modifiers, i32 0, i32 0, !dbg !5719
  %12 = load i8*, i8** %first, align 8, !dbg !5719
  %13 = bitcast i8* %12 to %struct.ModifierData*, !dbg !5716
  store %struct.ModifierData* %13, %struct.ModifierData** %md, align 8, !dbg !5720
  br label %for.cond, !dbg !5721

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5722
  %tobool = icmp ne %struct.ModifierData* %14, null, !dbg !5724
  br i1 %tobool, label %for.body, label %for.end, !dbg !5724

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %nmd, metadata !5725, metadata !DIExpression()), !dbg !5727
  store %struct.ModifierData* null, %struct.ModifierData** %nmd, align 8, !dbg !5727
  %15 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5728
  %type21 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %15, i32 0, i32 2, !dbg !5728
  %16 = load i32, i32* %type21, align 8, !dbg !5728
  %cmp22 = icmp eq i32 %16, 9, !dbg !5728
  br i1 %cmp22, label %if.then36, label %lor.lhs.false24, !dbg !5728

lor.lhs.false24:                                  ; preds = %for.body
  %17 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5728
  %type25 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %17, i32 0, i32 2, !dbg !5728
  %18 = load i32, i32* %type25, align 8, !dbg !5728
  %cmp26 = icmp eq i32 %18, 10, !dbg !5728
  br i1 %cmp26, label %if.then36, label %lor.lhs.false28, !dbg !5728

lor.lhs.false28:                                  ; preds = %lor.lhs.false24
  %19 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5728
  %type29 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %19, i32 0, i32 2, !dbg !5728
  %20 = load i32, i32* %type29, align 8, !dbg !5728
  %cmp30 = icmp eq i32 %20, 20, !dbg !5728
  br i1 %cmp30, label %if.then36, label %lor.lhs.false32, !dbg !5728

lor.lhs.false32:                                  ; preds = %lor.lhs.false28
  %21 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5728
  %type33 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %21, i32 0, i32 2, !dbg !5728
  %22 = load i32, i32* %type33, align 8, !dbg !5728
  %cmp34 = icmp eq i32 %22, 23, !dbg !5728
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !5730

if.then36:                                        ; preds = %lor.lhs.false32, %lor.lhs.false28, %lor.lhs.false24, %for.body
  br label %for.inc, !dbg !5731

if.end37:                                         ; preds = %lor.lhs.false32
  %23 = load %struct.Object*, %struct.Object** %ob_dst.addr, align 8, !dbg !5733
  %24 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5735
  %type38 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %24, i32 0, i32 2, !dbg !5736
  %25 = load i32, i32* %type38, align 8, !dbg !5736
  %call = call zeroext i8 @BKE_object_support_modifier_type_check(%struct.Object* %23, i32 %25), !dbg !5737
  %tobool39 = icmp ne i8 %call, 0, !dbg !5737
  br i1 %tobool39, label %if.end41, label %if.then40, !dbg !5738

if.then40:                                        ; preds = %if.end37
  br label %for.inc, !dbg !5739

if.end41:                                         ; preds = %if.end37
  %26 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5740
  %type42 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %26, i32 0, i32 2, !dbg !5742
  %27 = load i32, i32* %type42, align 8, !dbg !5742
  %cmp43 = icmp eq i32 %27, 42, !dbg !5743
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !5744

if.then45:                                        ; preds = %if.end41
  %28 = load %struct.Object*, %struct.Object** %ob_dst.addr, align 8, !dbg !5745
  %data = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 19, !dbg !5747
  %29 = load i8*, i8** %data, align 8, !dbg !5747
  %30 = bitcast i8* %29 to %struct.Mesh*, !dbg !5745
  call void @BKE_mesh_ensure_skin_customdata(%struct.Mesh* %30), !dbg !5748
  br label %if.end46, !dbg !5749

if.end46:                                         ; preds = %if.then45, %if.end41
  %31 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5750
  %type47 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %31, i32 0, i32 2, !dbg !5751
  %32 = load i32, i32* %type47, align 8, !dbg !5751
  %call48 = call %struct.ModifierData* @modifier_new(i32 %32), !dbg !5752
  store %struct.ModifierData* %call48, %struct.ModifierData** %nmd, align 8, !dbg !5753
  %33 = load %struct.ModifierData*, %struct.ModifierData** %nmd, align 8, !dbg !5754
  %name = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %33, i32 0, i32 6, !dbg !5755
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !5754
  %34 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5756
  %name49 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %34, i32 0, i32 6, !dbg !5757
  %arraydecay50 = getelementptr inbounds [64 x i8], [64 x i8]* %name49, i64 0, i64 0, !dbg !5756
  %call51 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay50, i64 64), !dbg !5758
  %35 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5759
  %36 = load %struct.ModifierData*, %struct.ModifierData** %nmd, align 8, !dbg !5760
  call void @modifier_copyData(%struct.ModifierData* %35, %struct.ModifierData* %36), !dbg !5761
  %37 = load %struct.Object*, %struct.Object** %ob_dst.addr, align 8, !dbg !5762
  %modifiers52 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 26, !dbg !5763
  %38 = load %struct.ModifierData*, %struct.ModifierData** %nmd, align 8, !dbg !5764
  %39 = bitcast %struct.ModifierData* %38 to i8*, !dbg !5764
  call void @BLI_addtail(%struct.ListBase* %modifiers52, i8* %39), !dbg !5765
  %40 = load %struct.Object*, %struct.Object** %ob_dst.addr, align 8, !dbg !5766
  %modifiers53 = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 26, !dbg !5767
  %41 = load %struct.ModifierData*, %struct.ModifierData** %nmd, align 8, !dbg !5768
  call void @modifier_unique_name(%struct.ListBase* %modifiers53, %struct.ModifierData* %41), !dbg !5769
  br label %for.inc, !dbg !5770

for.inc:                                          ; preds = %if.end46, %if.then40, %if.then36
  %42 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5771
  %next = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %42, i32 0, i32 0, !dbg !5772
  %43 = load %struct.ModifierData*, %struct.ModifierData** %next, align 8, !dbg !5772
  store %struct.ModifierData* %43, %struct.ModifierData** %md, align 8, !dbg !5773
  br label %for.cond, !dbg !5774, !llvm.loop !5775

for.end:                                          ; preds = %for.cond
  %44 = load %struct.Object*, %struct.Object** %ob_dst.addr, align 8, !dbg !5777
  %45 = load %struct.Object*, %struct.Object** %ob_src.addr, align 8, !dbg !5778
  call void @BKE_object_copy_particlesystems(%struct.Object* %44, %struct.Object* %45), !dbg !5779
  %46 = load %struct.Object*, %struct.Object** %ob_dst.addr, align 8, !dbg !5780
  %47 = load %struct.Object*, %struct.Object** %ob_src.addr, align 8, !dbg !5781
  call void @BKE_object_copy_softbody(%struct.Object* %46, %struct.Object* %47), !dbg !5782
  br label %return, !dbg !5783

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !5783
}

declare dso_local void @BKE_mesh_ensure_skin_customdata(%struct.Mesh*) #3

declare dso_local %struct.ModifierData* @modifier_new(i32) #3

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #3

declare dso_local void @modifier_copyData(%struct.ModifierData*, %struct.ModifierData*) #3

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #3

declare dso_local void @modifier_unique_name(%struct.ListBase*, %struct.ModifierData*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_copy_particlesystems(%struct.Object* %obn, %struct.Object* %ob) #0 !dbg !5784 {
entry:
  %obn.addr = alloca %struct.Object*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  %npsys = alloca %struct.ParticleSystem*, align 8
  %md = alloca %struct.ModifierData*, align 8
  %psmd = alloca %struct.ParticleSystemModifierData*, align 8
  %pmd = alloca %struct.DynamicPaintModifierData*, align 8
  %smd = alloca %struct.SmokeModifierData*, align 8
  store %struct.Object* %obn, %struct.Object** %obn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obn.addr, metadata !5787, metadata !DIExpression()), !dbg !5788
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5789, metadata !DIExpression()), !dbg !5790
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !5791, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %npsys, metadata !5793, metadata !DIExpression()), !dbg !5794
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !5795, metadata !DIExpression()), !dbg !5796
  %0 = load %struct.Object*, %struct.Object** %obn.addr, align 8, !dbg !5797
  %type = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 3, !dbg !5799
  %1 = load i16, i16* %type, align 8, !dbg !5799
  %conv = sext i16 %1 to i32, !dbg !5797
  %cmp = icmp ne i32 %conv, 1, !dbg !5800
  br i1 %cmp, label %if.then, label %if.end, !dbg !5801

if.then:                                          ; preds = %entry
  br label %for.end59, !dbg !5802

if.end:                                           ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %obn.addr, align 8, !dbg !5804
  %particlesystem = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 109, !dbg !5805
  call void @BLI_listbase_clear(%struct.ListBase* %particlesystem), !dbg !5806
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5807
  %particlesystem2 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 109, !dbg !5809
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem2, i32 0, i32 0, !dbg !5810
  %4 = load i8*, i8** %first, align 8, !dbg !5810
  %5 = bitcast i8* %4 to %struct.ParticleSystem*, !dbg !5807
  store %struct.ParticleSystem* %5, %struct.ParticleSystem** %psys, align 8, !dbg !5811
  br label %for.cond, !dbg !5812

for.cond:                                         ; preds = %for.inc57, %if.end
  %6 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5813
  %tobool = icmp ne %struct.ParticleSystem* %6, null, !dbg !5815
  br i1 %tobool, label %for.body, label %for.end59, !dbg !5815

for.body:                                         ; preds = %for.cond
  %7 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5816
  %call = call %struct.ParticleSystem* @copy_particlesystem(%struct.ParticleSystem* %7), !dbg !5818
  store %struct.ParticleSystem* %call, %struct.ParticleSystem** %npsys, align 8, !dbg !5819
  %8 = load %struct.Object*, %struct.Object** %obn.addr, align 8, !dbg !5820
  %particlesystem3 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 109, !dbg !5821
  %9 = load %struct.ParticleSystem*, %struct.ParticleSystem** %npsys, align 8, !dbg !5822
  %10 = bitcast %struct.ParticleSystem* %9 to i8*, !dbg !5822
  call void @BLI_addtail(%struct.ListBase* %particlesystem3, i8* %10), !dbg !5823
  %11 = load %struct.Object*, %struct.Object** %obn.addr, align 8, !dbg !5824
  %modifiers = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 26, !dbg !5826
  %first4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %modifiers, i32 0, i32 0, !dbg !5827
  %12 = load i8*, i8** %first4, align 8, !dbg !5827
  %13 = bitcast i8* %12 to %struct.ModifierData*, !dbg !5824
  store %struct.ModifierData* %13, %struct.ModifierData** %md, align 8, !dbg !5828
  br label %for.cond5, !dbg !5829

for.cond5:                                        ; preds = %for.inc, %for.body
  %14 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5830
  %tobool6 = icmp ne %struct.ModifierData* %14, null, !dbg !5832
  br i1 %tobool6, label %for.body7, label %for.end, !dbg !5832

for.body7:                                        ; preds = %for.cond5
  %15 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5833
  %type8 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %15, i32 0, i32 2, !dbg !5836
  %16 = load i32, i32* %type8, align 8, !dbg !5836
  %cmp9 = icmp eq i32 %16, 19, !dbg !5837
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !5838

if.then11:                                        ; preds = %for.body7
  call void @llvm.dbg.declare(metadata %struct.ParticleSystemModifierData** %psmd, metadata !5839, metadata !DIExpression()), !dbg !5841
  %17 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5842
  %18 = bitcast %struct.ModifierData* %17 to %struct.ParticleSystemModifierData*, !dbg !5843
  store %struct.ParticleSystemModifierData* %18, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !5841
  %19 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !5844
  %psys12 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %19, i32 0, i32 1, !dbg !5846
  %20 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys12, align 8, !dbg !5846
  %21 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5847
  %cmp13 = icmp eq %struct.ParticleSystem* %20, %21, !dbg !5848
  br i1 %cmp13, label %if.then15, label %if.end17, !dbg !5849

if.then15:                                        ; preds = %if.then11
  %22 = load %struct.ParticleSystem*, %struct.ParticleSystem** %npsys, align 8, !dbg !5850
  %23 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !5851
  %psys16 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %23, i32 0, i32 1, !dbg !5852
  store %struct.ParticleSystem* %22, %struct.ParticleSystem** %psys16, align 8, !dbg !5853
  br label %if.end17, !dbg !5851

if.end17:                                         ; preds = %if.then15, %if.then11
  br label %if.end56, !dbg !5854

if.else:                                          ; preds = %for.body7
  %24 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5855
  %type18 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %24, i32 0, i32 2, !dbg !5857
  %25 = load i32, i32* %type18, align 8, !dbg !5857
  %cmp19 = icmp eq i32 %25, 40, !dbg !5858
  br i1 %cmp19, label %if.then21, label %if.else33, !dbg !5859

if.then21:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintModifierData** %pmd, metadata !5860, metadata !DIExpression()), !dbg !5862
  %26 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5863
  %27 = bitcast %struct.ModifierData* %26 to %struct.DynamicPaintModifierData*, !dbg !5864
  store %struct.DynamicPaintModifierData* %27, %struct.DynamicPaintModifierData** %pmd, align 8, !dbg !5862
  %28 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd, align 8, !dbg !5865
  %brush = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %28, i32 0, i32 2, !dbg !5867
  %29 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !5867
  %tobool22 = icmp ne %struct.DynamicPaintBrushSettings* %29, null, !dbg !5865
  br i1 %tobool22, label %if.then23, label %if.end32, !dbg !5868

if.then23:                                        ; preds = %if.then21
  %30 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd, align 8, !dbg !5869
  %brush24 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %30, i32 0, i32 2, !dbg !5872
  %31 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush24, align 8, !dbg !5872
  %psys25 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %31, i32 0, i32 2, !dbg !5873
  %32 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys25, align 8, !dbg !5873
  %33 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5874
  %cmp26 = icmp eq %struct.ParticleSystem* %32, %33, !dbg !5875
  br i1 %cmp26, label %if.then28, label %if.end31, !dbg !5876

if.then28:                                        ; preds = %if.then23
  %34 = load %struct.ParticleSystem*, %struct.ParticleSystem** %npsys, align 8, !dbg !5877
  %35 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd, align 8, !dbg !5879
  %brush29 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %35, i32 0, i32 2, !dbg !5880
  %36 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush29, align 8, !dbg !5880
  %psys30 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %36, i32 0, i32 2, !dbg !5881
  store %struct.ParticleSystem* %34, %struct.ParticleSystem** %psys30, align 8, !dbg !5882
  br label %if.end31, !dbg !5883

if.end31:                                         ; preds = %if.then28, %if.then23
  br label %if.end32, !dbg !5884

if.end32:                                         ; preds = %if.end31, %if.then21
  br label %if.end55, !dbg !5885

if.else33:                                        ; preds = %if.else
  %37 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5886
  %type34 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %37, i32 0, i32 2, !dbg !5888
  %38 = load i32, i32* %type34, align 8, !dbg !5888
  %cmp35 = icmp eq i32 %38, 31, !dbg !5889
  br i1 %cmp35, label %if.then37, label %if.end54, !dbg !5890

if.then37:                                        ; preds = %if.else33
  call void @llvm.dbg.declare(metadata %struct.SmokeModifierData** %smd, metadata !5891, metadata !DIExpression()), !dbg !5893
  %39 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5894
  %40 = bitcast %struct.ModifierData* %39 to %struct.SmokeModifierData*, !dbg !5895
  store %struct.SmokeModifierData* %40, %struct.SmokeModifierData** %smd, align 8, !dbg !5893
  %41 = load %struct.SmokeModifierData*, %struct.SmokeModifierData** %smd, align 8, !dbg !5896
  %type38 = getelementptr inbounds %struct.SmokeModifierData, %struct.SmokeModifierData* %41, i32 0, i32 5, !dbg !5898
  %42 = load i32, i32* %type38, align 4, !dbg !5898
  %cmp39 = icmp eq i32 %42, 2, !dbg !5899
  br i1 %cmp39, label %if.then41, label %if.end53, !dbg !5900

if.then41:                                        ; preds = %if.then37
  %43 = load %struct.SmokeModifierData*, %struct.SmokeModifierData** %smd, align 8, !dbg !5901
  %flow = getelementptr inbounds %struct.SmokeModifierData, %struct.SmokeModifierData* %43, i32 0, i32 2, !dbg !5904
  %44 = load %struct.SmokeFlowSettings*, %struct.SmokeFlowSettings** %flow, align 8, !dbg !5904
  %tobool42 = icmp ne %struct.SmokeFlowSettings* %44, null, !dbg !5901
  br i1 %tobool42, label %if.then43, label %if.end52, !dbg !5905

if.then43:                                        ; preds = %if.then41
  %45 = load %struct.SmokeModifierData*, %struct.SmokeModifierData** %smd, align 8, !dbg !5906
  %flow44 = getelementptr inbounds %struct.SmokeModifierData, %struct.SmokeModifierData* %45, i32 0, i32 2, !dbg !5909
  %46 = load %struct.SmokeFlowSettings*, %struct.SmokeFlowSettings** %flow44, align 8, !dbg !5909
  %psys45 = getelementptr inbounds %struct.SmokeFlowSettings, %struct.SmokeFlowSettings* %46, i32 0, i32 2, !dbg !5910
  %47 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys45, align 8, !dbg !5910
  %48 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5911
  %cmp46 = icmp eq %struct.ParticleSystem* %47, %48, !dbg !5912
  br i1 %cmp46, label %if.then48, label %if.end51, !dbg !5913

if.then48:                                        ; preds = %if.then43
  %49 = load %struct.ParticleSystem*, %struct.ParticleSystem** %npsys, align 8, !dbg !5914
  %50 = load %struct.SmokeModifierData*, %struct.SmokeModifierData** %smd, align 8, !dbg !5915
  %flow49 = getelementptr inbounds %struct.SmokeModifierData, %struct.SmokeModifierData* %50, i32 0, i32 2, !dbg !5916
  %51 = load %struct.SmokeFlowSettings*, %struct.SmokeFlowSettings** %flow49, align 8, !dbg !5916
  %psys50 = getelementptr inbounds %struct.SmokeFlowSettings, %struct.SmokeFlowSettings* %51, i32 0, i32 2, !dbg !5917
  store %struct.ParticleSystem* %49, %struct.ParticleSystem** %psys50, align 8, !dbg !5918
  br label %if.end51, !dbg !5915

if.end51:                                         ; preds = %if.then48, %if.then43
  br label %if.end52, !dbg !5919

if.end52:                                         ; preds = %if.end51, %if.then41
  br label %if.end53, !dbg !5920

if.end53:                                         ; preds = %if.end52, %if.then37
  br label %if.end54, !dbg !5921

if.end54:                                         ; preds = %if.end53, %if.else33
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.end32
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end17
  br label %for.inc, !dbg !5922

for.inc:                                          ; preds = %if.end56
  %52 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !5923
  %next = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %52, i32 0, i32 0, !dbg !5924
  %53 = load %struct.ModifierData*, %struct.ModifierData** %next, align 8, !dbg !5924
  store %struct.ModifierData* %53, %struct.ModifierData** %md, align 8, !dbg !5925
  br label %for.cond5, !dbg !5926, !llvm.loop !5927

for.end:                                          ; preds = %for.cond5
  br label %for.inc57, !dbg !5929

for.inc57:                                        ; preds = %for.end
  %54 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5930
  %next58 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %54, i32 0, i32 0, !dbg !5931
  %55 = load %struct.ParticleSystem*, %struct.ParticleSystem** %next58, align 8, !dbg !5931
  store %struct.ParticleSystem* %55, %struct.ParticleSystem** %psys, align 8, !dbg !5932
  br label %for.cond, !dbg !5933, !llvm.loop !5934

for.end59:                                        ; preds = %if.then, %for.cond
  ret void, !dbg !5936
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_copy_softbody(%struct.Object* %obn, %struct.Object* %ob) #0 !dbg !5937 {
entry:
  %obn.addr = alloca %struct.Object*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %obn, %struct.Object** %obn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obn.addr, metadata !5938, metadata !DIExpression()), !dbg !5939
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5940, metadata !DIExpression()), !dbg !5941
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5942
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 111, !dbg !5944
  %1 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !5944
  %tobool = icmp ne %struct.SoftBody* %1, null, !dbg !5942
  br i1 %tobool, label %if.then, label %if.end, !dbg !5945

if.then:                                          ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5946
  %soft1 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 111, !dbg !5947
  %3 = load %struct.SoftBody*, %struct.SoftBody** %soft1, align 8, !dbg !5947
  %call = call %struct.SoftBody* @copy_softbody(%struct.SoftBody* %3, i8 zeroext 0), !dbg !5948
  %4 = load %struct.Object*, %struct.Object** %obn.addr, align 8, !dbg !5949
  %soft2 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 111, !dbg !5950
  store %struct.SoftBody* %call, %struct.SoftBody** %soft2, align 8, !dbg !5951
  br label %if.end, !dbg !5949

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5952
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_free_derived_caches(%struct.Object* %ob) #0 !dbg !5953 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %cu = alloca %struct.Curve*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5954, metadata !DIExpression()), !dbg !5955
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5956
  %type = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 3, !dbg !5958
  %1 = load i16, i16* %type, align 8, !dbg !5958
  %conv = sext i16 %1 to i32, !dbg !5956
  %cmp = icmp eq i32 %conv, 1, !dbg !5959
  br i1 %cmp, label %if.then, label %if.else, !dbg !5960

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !5961, metadata !DIExpression()), !dbg !5963
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5964
  %data = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !5965
  %3 = load i8*, i8** %data, align 8, !dbg !5965
  %4 = bitcast i8* %3 to %struct.Mesh*, !dbg !5964
  store %struct.Mesh* %4, %struct.Mesh** %me, align 8, !dbg !5963
  %5 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5966
  %bb = getelementptr inbounds %struct.Mesh, %struct.Mesh* %5, i32 0, i32 2, !dbg !5968
  %6 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !5968
  %tobool = icmp ne %struct.BoundBox* %6, null, !dbg !5966
  br i1 %tobool, label %if.then2, label %if.end, !dbg !5969

if.then2:                                         ; preds = %if.then
  %7 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !5970
  %bb3 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 2, !dbg !5972
  %8 = load %struct.BoundBox*, %struct.BoundBox** %bb3, align 8, !dbg !5972
  %flag = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %8, i32 0, i32 1, !dbg !5973
  %9 = load i32, i32* %flag, align 4, !dbg !5974
  %or = or i32 %9, 2, !dbg !5974
  store i32 %or, i32* %flag, align 4, !dbg !5974
  br label %if.end, !dbg !5975

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end27, !dbg !5976

if.else:                                          ; preds = %entry
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5977
  %type4 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 3, !dbg !5977
  %11 = load i16, i16* %type4, align 8, !dbg !5977
  %conv5 = sext i16 %11 to i32, !dbg !5977
  %cmp6 = icmp eq i32 %conv5, 3, !dbg !5977
  br i1 %cmp6, label %if.then17, label %lor.lhs.false, !dbg !5977

lor.lhs.false:                                    ; preds = %if.else
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5977
  %type8 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 3, !dbg !5977
  %13 = load i16, i16* %type8, align 8, !dbg !5977
  %conv9 = sext i16 %13 to i32, !dbg !5977
  %cmp10 = icmp eq i32 %conv9, 2, !dbg !5977
  br i1 %cmp10, label %if.then17, label %lor.lhs.false12, !dbg !5977

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5977
  %type13 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 3, !dbg !5977
  %15 = load i16, i16* %type13, align 8, !dbg !5977
  %conv14 = sext i16 %15 to i32, !dbg !5977
  %cmp15 = icmp eq i32 %conv14, 4, !dbg !5977
  br i1 %cmp15, label %if.then17, label %if.end26, !dbg !5979

if.then17:                                        ; preds = %lor.lhs.false12, %lor.lhs.false, %if.else
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !5980, metadata !DIExpression()), !dbg !5982
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5983
  %data18 = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 19, !dbg !5984
  %17 = load i8*, i8** %data18, align 8, !dbg !5984
  %18 = bitcast i8* %17 to %struct.Curve*, !dbg !5983
  store %struct.Curve* %18, %struct.Curve** %cu, align 8, !dbg !5982
  %19 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5985
  %bb19 = getelementptr inbounds %struct.Curve, %struct.Curve* %19, i32 0, i32 2, !dbg !5987
  %20 = load %struct.BoundBox*, %struct.BoundBox** %bb19, align 8, !dbg !5987
  %tobool20 = icmp ne %struct.BoundBox* %20, null, !dbg !5985
  br i1 %tobool20, label %if.then21, label %if.end25, !dbg !5988

if.then21:                                        ; preds = %if.then17
  %21 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !5989
  %bb22 = getelementptr inbounds %struct.Curve, %struct.Curve* %21, i32 0, i32 2, !dbg !5991
  %22 = load %struct.BoundBox*, %struct.BoundBox** %bb22, align 8, !dbg !5991
  %flag23 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %22, i32 0, i32 1, !dbg !5992
  %23 = load i32, i32* %flag23, align 4, !dbg !5993
  %or24 = or i32 %23, 2, !dbg !5993
  store i32 %or24, i32* %flag23, align 4, !dbg !5993
  br label %if.end25, !dbg !5994

if.end25:                                         ; preds = %if.then21, %if.then17
  br label %if.end26, !dbg !5995

if.end26:                                         ; preds = %if.end25, %lor.lhs.false12
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5996
  %bb28 = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 15, !dbg !5998
  %25 = load %struct.BoundBox*, %struct.BoundBox** %bb28, align 8, !dbg !5998
  %tobool29 = icmp ne %struct.BoundBox* %25, null, !dbg !5996
  br i1 %tobool29, label %if.then30, label %if.end33, !dbg !5999

if.then30:                                        ; preds = %if.end27
  %26 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6000
  %27 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6002
  %bb31 = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 15, !dbg !6003
  %28 = load %struct.BoundBox*, %struct.BoundBox** %bb31, align 8, !dbg !6003
  %29 = bitcast %struct.BoundBox* %28 to i8*, !dbg !6002
  call void %26(i8* %29), !dbg !6000
  %30 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6004
  %bb32 = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 15, !dbg !6005
  store %struct.BoundBox* null, %struct.BoundBox** %bb32, align 8, !dbg !6006
  br label %if.end33, !dbg !6007

if.end33:                                         ; preds = %if.then30, %if.end27
  %31 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6008
  %derivedFinal = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 120, !dbg !6010
  %32 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !6010
  %tobool34 = icmp ne %struct.DerivedMesh* %32, null, !dbg !6008
  br i1 %tobool34, label %if.then35, label %if.end40, !dbg !6011

if.then35:                                        ; preds = %if.end33
  %33 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6012
  %derivedFinal36 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 120, !dbg !6014
  %34 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal36, align 8, !dbg !6014
  %needsFree = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %34, i32 0, i32 10, !dbg !6015
  store i32 1, i32* %needsFree, align 4, !dbg !6016
  %35 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6017
  %derivedFinal37 = getelementptr inbounds %struct.Object, %struct.Object* %35, i32 0, i32 120, !dbg !6018
  %36 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal37, align 8, !dbg !6018
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %36, i32 0, i32 95, !dbg !6019
  %37 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !6019
  %38 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6020
  %derivedFinal38 = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 120, !dbg !6021
  %39 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal38, align 8, !dbg !6021
  call void %37(%struct.DerivedMesh* %39), !dbg !6017
  %40 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6022
  %derivedFinal39 = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 120, !dbg !6023
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %derivedFinal39, align 8, !dbg !6024
  br label %if.end40, !dbg !6025

if.end40:                                         ; preds = %if.then35, %if.end33
  %41 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6026
  %derivedDeform = getelementptr inbounds %struct.Object, %struct.Object* %41, i32 0, i32 119, !dbg !6028
  %42 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedDeform, align 8, !dbg !6028
  %tobool41 = icmp ne %struct.DerivedMesh* %42, null, !dbg !6026
  br i1 %tobool41, label %if.then42, label %if.end49, !dbg !6029

if.then42:                                        ; preds = %if.end40
  %43 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6030
  %derivedDeform43 = getelementptr inbounds %struct.Object, %struct.Object* %43, i32 0, i32 119, !dbg !6032
  %44 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedDeform43, align 8, !dbg !6032
  %needsFree44 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %44, i32 0, i32 10, !dbg !6033
  store i32 1, i32* %needsFree44, align 4, !dbg !6034
  %45 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6035
  %derivedDeform45 = getelementptr inbounds %struct.Object, %struct.Object* %45, i32 0, i32 119, !dbg !6036
  %46 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedDeform45, align 8, !dbg !6036
  %release46 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %46, i32 0, i32 95, !dbg !6037
  %47 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release46, align 8, !dbg !6037
  %48 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6038
  %derivedDeform47 = getelementptr inbounds %struct.Object, %struct.Object* %48, i32 0, i32 119, !dbg !6039
  %49 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedDeform47, align 8, !dbg !6039
  call void %47(%struct.DerivedMesh* %49), !dbg !6035
  %50 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6040
  %derivedDeform48 = getelementptr inbounds %struct.Object, %struct.Object* %50, i32 0, i32 119, !dbg !6041
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %derivedDeform48, align 8, !dbg !6042
  br label %if.end49, !dbg !6043

if.end49:                                         ; preds = %if.then42, %if.end40
  %51 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6044
  call void @BKE_object_free_curve_cache(%struct.Object* %51), !dbg !6045
  ret void, !dbg !6046
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_free_ex(%struct.Object* %ob, i8 zeroext %do_id_user) #0 !dbg !6047 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %do_id_user.addr = alloca i8, align 1
  %a = alloca i32, align 4
  %id = alloca %struct.ID*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6050, metadata !DIExpression()), !dbg !6051
  store i8 %do_id_user, i8* %do_id_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_id_user.addr, metadata !6052, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6054, metadata !DIExpression()), !dbg !6055
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6056
  call void @BKE_object_free_derived_caches(%struct.Object* %0), !dbg !6057
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6058
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !6060
  %2 = load i8*, i8** %data, align 8, !dbg !6060
  %tobool = icmp ne i8* %2, null, !dbg !6058
  br i1 %tobool, label %if.then, label %if.end8, !dbg !6061

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ID** %id, metadata !6062, metadata !DIExpression()), !dbg !6064
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6065
  %data1 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !6066
  %4 = load i8*, i8** %data1, align 8, !dbg !6066
  %5 = bitcast i8* %4 to %struct.ID*, !dbg !6065
  store %struct.ID* %5, %struct.ID** %id, align 8, !dbg !6064
  %6 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6067
  %us = getelementptr inbounds %struct.ID, %struct.ID* %6, i32 0, i32 6, !dbg !6068
  %7 = load i32, i32* %us, align 4, !dbg !6069
  %dec = add nsw i32 %7, -1, !dbg !6069
  store i32 %dec, i32* %us, align 4, !dbg !6069
  %8 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6070
  %us2 = getelementptr inbounds %struct.ID, %struct.ID* %8, i32 0, i32 6, !dbg !6072
  %9 = load i32, i32* %us2, align 4, !dbg !6072
  %cmp = icmp eq i32 %9, 0, !dbg !6073
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6074

land.lhs.true:                                    ; preds = %if.then
  %10 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6075
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %10, i32 0, i32 3, !dbg !6076
  %11 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !6076
  %cmp3 = icmp eq %struct.Library* %11, null, !dbg !6077
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !6078

if.then4:                                         ; preds = %land.lhs.true
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6079
  %type = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 3, !dbg !6081
  %13 = load i16, i16* %type, align 8, !dbg !6081
  %conv = sext i16 %13 to i32, !dbg !6079
  switch i32 %conv, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb5
    i32 5, label %sw.bb6
  ], !dbg !6082

sw.bb:                                            ; preds = %if.then4
  %14 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6083
  %15 = bitcast %struct.ID* %14 to %struct.Mesh*, !dbg !6085
  call void @BKE_mesh_unlink(%struct.Mesh* %15), !dbg !6086
  br label %sw.epilog, !dbg !6087

sw.bb5:                                           ; preds = %if.then4
  %16 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6088
  %17 = bitcast %struct.ID* %16 to %struct.Curve*, !dbg !6089
  call void @BKE_curve_unlink(%struct.Curve* %17), !dbg !6090
  br label %sw.epilog, !dbg !6091

sw.bb6:                                           ; preds = %if.then4
  %18 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !6092
  %19 = bitcast %struct.ID* %18 to %struct.MetaBall*, !dbg !6093
  call void @BKE_mball_unlink(%struct.MetaBall* %19), !dbg !6094
  br label %sw.epilog, !dbg !6095

sw.epilog:                                        ; preds = %if.then4, %sw.bb6, %sw.bb5, %sw.bb
  br label %if.end, !dbg !6096

if.end:                                           ; preds = %sw.epilog, %land.lhs.true, %if.then
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6097
  %data7 = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 19, !dbg !6098
  store i8* null, i8** %data7, align 8, !dbg !6099
  br label %if.end8, !dbg !6100

if.end8:                                          ; preds = %if.end, %entry
  %21 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6101
  %mat = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 29, !dbg !6103
  %22 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !6103
  %tobool9 = icmp ne %struct.Material** %22, null, !dbg !6101
  br i1 %tobool9, label %if.then10, label %if.end24, !dbg !6104

if.then10:                                        ; preds = %if.end8
  store i32 0, i32* %a, align 4, !dbg !6105
  br label %for.cond, !dbg !6108

for.cond:                                         ; preds = %for.inc, %if.then10
  %23 = load i32, i32* %a, align 4, !dbg !6109
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6111
  %totcol = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 31, !dbg !6112
  %25 = load i32, i32* %totcol, align 8, !dbg !6112
  %cmp11 = icmp slt i32 %23, %25, !dbg !6113
  br i1 %cmp11, label %for.body, label %for.end, !dbg !6114

for.body:                                         ; preds = %for.cond
  %26 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6115
  %mat13 = getelementptr inbounds %struct.Object, %struct.Object* %26, i32 0, i32 29, !dbg !6118
  %27 = load %struct.Material**, %struct.Material*** %mat13, align 8, !dbg !6118
  %28 = load i32, i32* %a, align 4, !dbg !6119
  %idxprom = sext i32 %28 to i64, !dbg !6115
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %27, i64 %idxprom, !dbg !6115
  %29 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !6115
  %tobool14 = icmp ne %struct.Material* %29, null, !dbg !6115
  br i1 %tobool14, label %if.then15, label %if.end22, !dbg !6120

if.then15:                                        ; preds = %for.body
  %30 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6121
  %mat16 = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 29, !dbg !6122
  %31 = load %struct.Material**, %struct.Material*** %mat16, align 8, !dbg !6122
  %32 = load i32, i32* %a, align 4, !dbg !6123
  %idxprom17 = sext i32 %32 to i64, !dbg !6121
  %arrayidx18 = getelementptr inbounds %struct.Material*, %struct.Material** %31, i64 %idxprom17, !dbg !6121
  %33 = load %struct.Material*, %struct.Material** %arrayidx18, align 8, !dbg !6121
  %id19 = getelementptr inbounds %struct.Material, %struct.Material* %33, i32 0, i32 0, !dbg !6124
  %us20 = getelementptr inbounds %struct.ID, %struct.ID* %id19, i32 0, i32 6, !dbg !6125
  %34 = load i32, i32* %us20, align 4, !dbg !6126
  %dec21 = add nsw i32 %34, -1, !dbg !6126
  store i32 %dec21, i32* %us20, align 4, !dbg !6126
  br label %if.end22, !dbg !6121

if.end22:                                         ; preds = %if.then15, %for.body
  br label %for.inc, !dbg !6127

for.inc:                                          ; preds = %if.end22
  %35 = load i32, i32* %a, align 4, !dbg !6128
  %inc = add nsw i32 %35, 1, !dbg !6128
  store i32 %inc, i32* %a, align 4, !dbg !6128
  br label %for.cond, !dbg !6129, !llvm.loop !6130

for.end:                                          ; preds = %for.cond
  %36 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6132
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6133
  %mat23 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 29, !dbg !6134
  %38 = load %struct.Material**, %struct.Material*** %mat23, align 8, !dbg !6134
  %39 = bitcast %struct.Material** %38 to i8*, !dbg !6133
  call void %36(i8* %39), !dbg !6132
  br label %if.end24, !dbg !6135

if.end24:                                         ; preds = %for.end, %if.end8
  %40 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6136
  %matbits = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 30, !dbg !6138
  %41 = load i8*, i8** %matbits, align 8, !dbg !6138
  %tobool25 = icmp ne i8* %41, null, !dbg !6136
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !6139

if.then26:                                        ; preds = %if.end24
  %42 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6140
  %43 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6141
  %matbits27 = getelementptr inbounds %struct.Object, %struct.Object* %43, i32 0, i32 30, !dbg !6142
  %44 = load i8*, i8** %matbits27, align 8, !dbg !6142
  call void %42(i8* %44), !dbg !6140
  br label %if.end28, !dbg !6140

if.end28:                                         ; preds = %if.then26, %if.end24
  %45 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6143
  %mat29 = getelementptr inbounds %struct.Object, %struct.Object* %45, i32 0, i32 29, !dbg !6144
  store %struct.Material** null, %struct.Material*** %mat29, align 8, !dbg !6145
  %46 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6146
  %matbits30 = getelementptr inbounds %struct.Object, %struct.Object* %46, i32 0, i32 30, !dbg !6147
  store i8* null, i8** %matbits30, align 8, !dbg !6148
  %47 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6149
  %iuser = getelementptr inbounds %struct.Object, %struct.Object* %47, i32 0, i32 131, !dbg !6151
  %48 = load %struct.ImageUser*, %struct.ImageUser** %iuser, align 8, !dbg !6151
  %tobool31 = icmp ne %struct.ImageUser* %48, null, !dbg !6149
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !6152

if.then32:                                        ; preds = %if.end28
  %49 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6153
  %50 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6154
  %iuser33 = getelementptr inbounds %struct.Object, %struct.Object* %50, i32 0, i32 131, !dbg !6155
  %51 = load %struct.ImageUser*, %struct.ImageUser** %iuser33, align 8, !dbg !6155
  %52 = bitcast %struct.ImageUser* %51 to i8*, !dbg !6154
  call void %49(i8* %52), !dbg !6153
  br label %if.end34, !dbg !6153

if.end34:                                         ; preds = %if.then32, %if.end28
  %53 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6156
  %iuser35 = getelementptr inbounds %struct.Object, %struct.Object* %53, i32 0, i32 131, !dbg !6157
  store %struct.ImageUser* null, %struct.ImageUser** %iuser35, align 8, !dbg !6158
  %54 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6159
  %bb = getelementptr inbounds %struct.Object, %struct.Object* %54, i32 0, i32 15, !dbg !6161
  %55 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !6161
  %tobool36 = icmp ne %struct.BoundBox* %55, null, !dbg !6159
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !6162

if.then37:                                        ; preds = %if.end34
  %56 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6163
  %57 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6164
  %bb38 = getelementptr inbounds %struct.Object, %struct.Object* %57, i32 0, i32 15, !dbg !6165
  %58 = load %struct.BoundBox*, %struct.BoundBox** %bb38, align 8, !dbg !6165
  %59 = bitcast %struct.BoundBox* %58 to i8*, !dbg !6164
  call void %56(i8* %59), !dbg !6163
  br label %if.end39, !dbg !6163

if.end39:                                         ; preds = %if.then37, %if.end34
  %60 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6166
  %bb40 = getelementptr inbounds %struct.Object, %struct.Object* %60, i32 0, i32 15, !dbg !6167
  store %struct.BoundBox* null, %struct.BoundBox** %bb40, align 8, !dbg !6168
  %61 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6169
  %adt = getelementptr inbounds %struct.Object, %struct.Object* %61, i32 0, i32 1, !dbg !6171
  %62 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !6171
  %tobool41 = icmp ne %struct.AnimData* %62, null, !dbg !6169
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !6172

if.then42:                                        ; preds = %if.end39
  %63 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6173
  %64 = bitcast %struct.Object* %63 to %struct.ID*, !dbg !6174
  call void @BKE_free_animdata(%struct.ID* %64), !dbg !6175
  br label %if.end43, !dbg !6175

if.end43:                                         ; preds = %if.then42, %if.end39
  %65 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6176
  %poselib = getelementptr inbounds %struct.Object, %struct.Object* %65, i32 0, i32 17, !dbg !6178
  %66 = load %struct.bAction*, %struct.bAction** %poselib, align 8, !dbg !6178
  %tobool44 = icmp ne %struct.bAction* %66, null, !dbg !6176
  br i1 %tobool44, label %if.then45, label %if.end50, !dbg !6179

if.then45:                                        ; preds = %if.end43
  %67 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6180
  %poselib46 = getelementptr inbounds %struct.Object, %struct.Object* %67, i32 0, i32 17, !dbg !6181
  %68 = load %struct.bAction*, %struct.bAction** %poselib46, align 8, !dbg !6181
  %id47 = getelementptr inbounds %struct.bAction, %struct.bAction* %68, i32 0, i32 0, !dbg !6182
  %us48 = getelementptr inbounds %struct.ID, %struct.ID* %id47, i32 0, i32 6, !dbg !6183
  %69 = load i32, i32* %us48, align 4, !dbg !6184
  %dec49 = add nsw i32 %69, -1, !dbg !6184
  store i32 %dec49, i32* %us48, align 4, !dbg !6184
  br label %if.end50, !dbg !6180

if.end50:                                         ; preds = %if.then45, %if.end43
  %70 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6185
  %gpd = getelementptr inbounds %struct.Object, %struct.Object* %70, i32 0, i32 20, !dbg !6187
  %71 = load %struct.bGPdata*, %struct.bGPdata** %gpd, align 8, !dbg !6187
  %tobool51 = icmp ne %struct.bGPdata* %71, null, !dbg !6185
  br i1 %tobool51, label %if.then52, label %if.end56, !dbg !6188

if.then52:                                        ; preds = %if.end50
  %72 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6189
  %gpd53 = getelementptr inbounds %struct.Object, %struct.Object* %72, i32 0, i32 20, !dbg !6190
  %73 = load %struct.bGPdata*, %struct.bGPdata** %gpd53, align 8, !dbg !6190
  %74 = bitcast %struct.bGPdata* %73 to %struct.ID*, !dbg !6191
  %us54 = getelementptr inbounds %struct.ID, %struct.ID* %74, i32 0, i32 6, !dbg !6191
  %75 = load i32, i32* %us54, align 4, !dbg !6192
  %dec55 = add nsw i32 %75, -1, !dbg !6192
  store i32 %dec55, i32* %us54, align 4, !dbg !6192
  br label %if.end56, !dbg !6193

if.end56:                                         ; preds = %if.then52, %if.end50
  %76 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6194
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %76, i32 0, i32 25, !dbg !6196
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %defbase, i32 0, i32 0, !dbg !6197
  %77 = load i8*, i8** %first, align 8, !dbg !6197
  %tobool57 = icmp ne i8* %77, null, !dbg !6194
  br i1 %tobool57, label %if.then58, label %if.end60, !dbg !6198

if.then58:                                        ; preds = %if.end56
  %78 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6199
  %defbase59 = getelementptr inbounds %struct.Object, %struct.Object* %78, i32 0, i32 25, !dbg !6200
  call void @BLI_freelistN(%struct.ListBase* %defbase59), !dbg !6201
  br label %if.end60, !dbg !6201

if.end60:                                         ; preds = %if.then58, %if.end56
  %79 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6202
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %79, i32 0, i32 18, !dbg !6204
  %80 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !6204
  %tobool61 = icmp ne %struct.bPose* %80, null, !dbg !6202
  br i1 %tobool61, label %if.then62, label %if.end64, !dbg !6205

if.then62:                                        ; preds = %if.end60
  %81 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6206
  %pose63 = getelementptr inbounds %struct.Object, %struct.Object* %81, i32 0, i32 18, !dbg !6207
  %82 = load %struct.bPose*, %struct.bPose** %pose63, align 8, !dbg !6207
  %83 = load i8, i8* %do_id_user.addr, align 1, !dbg !6208
  call void @BKE_pose_free_ex(%struct.bPose* %82, i8 zeroext %83), !dbg !6209
  br label %if.end64, !dbg !6209

if.end64:                                         ; preds = %if.then62, %if.end60
  %84 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6210
  %mpath = getelementptr inbounds %struct.Object, %struct.Object* %84, i32 0, i32 22, !dbg !6212
  %85 = load %struct.bMotionPath*, %struct.bMotionPath** %mpath, align 8, !dbg !6212
  %tobool65 = icmp ne %struct.bMotionPath* %85, null, !dbg !6210
  br i1 %tobool65, label %if.then66, label %if.end68, !dbg !6213

if.then66:                                        ; preds = %if.end64
  %86 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6214
  %mpath67 = getelementptr inbounds %struct.Object, %struct.Object* %86, i32 0, i32 22, !dbg !6215
  %87 = load %struct.bMotionPath*, %struct.bMotionPath** %mpath67, align 8, !dbg !6215
  call void @animviz_free_motionpath(%struct.bMotionPath* %87), !dbg !6216
  br label %if.end68, !dbg !6216

if.end68:                                         ; preds = %if.then66, %if.end64
  %88 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6217
  %prop = getelementptr inbounds %struct.Object, %struct.Object* %88, i32 0, i32 91, !dbg !6218
  call void @BKE_bproperty_free_list(%struct.ListBase* %prop), !dbg !6219
  %89 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6220
  call void @BKE_object_free_modifiers(%struct.Object* %89), !dbg !6221
  %90 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6222
  %sensors = getelementptr inbounds %struct.Object, %struct.Object* %90, i32 0, i32 92, !dbg !6223
  call void @free_sensors(%struct.ListBase* %sensors), !dbg !6224
  %91 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6225
  %controllers = getelementptr inbounds %struct.Object, %struct.Object* %91, i32 0, i32 93, !dbg !6226
  call void @free_controllers(%struct.ListBase* %controllers), !dbg !6227
  %92 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6228
  %actuators = getelementptr inbounds %struct.Object, %struct.Object* %92, i32 0, i32 94, !dbg !6229
  call void @free_actuators(%struct.ListBase* %actuators), !dbg !6230
  %93 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6231
  %constraints = getelementptr inbounds %struct.Object, %struct.Object* %93, i32 0, i32 106, !dbg !6232
  call void @BKE_constraints_free(%struct.ListBase* %constraints), !dbg !6233
  %94 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6234
  %pd = getelementptr inbounds %struct.Object, %struct.Object* %94, i32 0, i32 110, !dbg !6235
  %95 = load %struct.PartDeflect*, %struct.PartDeflect** %pd, align 8, !dbg !6235
  call void @free_partdeflect(%struct.PartDeflect* %95), !dbg !6236
  %96 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6237
  call void @BKE_rigidbody_free_object(%struct.Object* %96), !dbg !6238
  %97 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6239
  call void @BKE_rigidbody_free_constraint(%struct.Object* %97), !dbg !6240
  %98 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6241
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %98, i32 0, i32 111, !dbg !6243
  %99 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !6243
  %tobool69 = icmp ne %struct.SoftBody* %99, null, !dbg !6241
  br i1 %tobool69, label %if.then70, label %if.end72, !dbg !6244

if.then70:                                        ; preds = %if.end68
  %100 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6245
  %soft71 = getelementptr inbounds %struct.Object, %struct.Object* %100, i32 0, i32 111, !dbg !6246
  %101 = load %struct.SoftBody*, %struct.SoftBody** %soft71, align 8, !dbg !6246
  call void @sbFree(%struct.SoftBody* %101), !dbg !6247
  br label %if.end72, !dbg !6247

if.end72:                                         ; preds = %if.then70, %if.end68
  %102 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6248
  %bsoft = getelementptr inbounds %struct.Object, %struct.Object* %102, i32 0, i32 101, !dbg !6250
  %103 = load %struct.BulletSoftBody*, %struct.BulletSoftBody** %bsoft, align 8, !dbg !6250
  %tobool73 = icmp ne %struct.BulletSoftBody* %103, null, !dbg !6248
  br i1 %tobool73, label %if.then74, label %if.end76, !dbg !6251

if.then74:                                        ; preds = %if.end72
  %104 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6252
  %bsoft75 = getelementptr inbounds %struct.Object, %struct.Object* %104, i32 0, i32 101, !dbg !6253
  %105 = load %struct.BulletSoftBody*, %struct.BulletSoftBody** %bsoft75, align 8, !dbg !6253
  call void @bsbFree(%struct.BulletSoftBody* %105), !dbg !6254
  br label %if.end76, !dbg !6254

if.end76:                                         ; preds = %if.then74, %if.end72
  %106 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6255
  %gpulamp = getelementptr inbounds %struct.Object, %struct.Object* %106, i32 0, i32 125, !dbg !6257
  %first77 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %gpulamp, i32 0, i32 0, !dbg !6258
  %107 = load i8*, i8** %first77, align 8, !dbg !6258
  %tobool78 = icmp ne i8* %107, null, !dbg !6255
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !6259

if.then79:                                        ; preds = %if.end76
  %108 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6260
  call void @GPU_lamp_free(%struct.Object* %108), !dbg !6261
  br label %if.end80, !dbg !6261

if.end80:                                         ; preds = %if.then79, %if.end76
  %109 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6262
  call void @BKE_free_sculptsession(%struct.Object* %109), !dbg !6263
  %110 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6264
  %pc_ids = getelementptr inbounds %struct.Object, %struct.Object* %110, i32 0, i32 126, !dbg !6266
  %first81 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %pc_ids, i32 0, i32 0, !dbg !6267
  %111 = load i8*, i8** %first81, align 8, !dbg !6267
  %tobool82 = icmp ne i8* %111, null, !dbg !6264
  br i1 %tobool82, label %if.then83, label %if.end85, !dbg !6268

if.then83:                                        ; preds = %if.end80
  %112 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6269
  %pc_ids84 = getelementptr inbounds %struct.Object, %struct.Object* %112, i32 0, i32 126, !dbg !6270
  call void @BLI_freelistN(%struct.ListBase* %pc_ids84), !dbg !6271
  br label %if.end85, !dbg !6271

if.end85:                                         ; preds = %if.then83, %if.end80
  %113 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6272
  %lodlevels = getelementptr inbounds %struct.Object, %struct.Object* %113, i32 0, i32 132, !dbg !6273
  call void @BLI_freelistN(%struct.ListBase* %lodlevels), !dbg !6274
  %114 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6275
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %114, i32 0, i32 118, !dbg !6277
  %115 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !6277
  %tobool86 = icmp ne %struct.CurveCache* %115, null, !dbg !6275
  br i1 %tobool86, label %if.then87, label %if.end96, !dbg !6278

if.then87:                                        ; preds = %if.end85
  %116 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6279
  %curve_cache88 = getelementptr inbounds %struct.Object, %struct.Object* %116, i32 0, i32 118, !dbg !6281
  %117 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache88, align 8, !dbg !6281
  %bev = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %117, i32 0, i32 1, !dbg !6282
  call void @BKE_curve_bevelList_free(%struct.ListBase* %bev), !dbg !6283
  %118 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6284
  %curve_cache89 = getelementptr inbounds %struct.Object, %struct.Object* %118, i32 0, i32 118, !dbg !6286
  %119 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache89, align 8, !dbg !6286
  %path = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %119, i32 0, i32 3, !dbg !6287
  %120 = load %struct.Path*, %struct.Path** %path, align 8, !dbg !6287
  %tobool90 = icmp ne %struct.Path* %120, null, !dbg !6284
  br i1 %tobool90, label %if.then91, label %if.end94, !dbg !6288

if.then91:                                        ; preds = %if.then87
  %121 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6289
  %curve_cache92 = getelementptr inbounds %struct.Object, %struct.Object* %121, i32 0, i32 118, !dbg !6290
  %122 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache92, align 8, !dbg !6290
  %path93 = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %122, i32 0, i32 3, !dbg !6291
  %123 = load %struct.Path*, %struct.Path** %path93, align 8, !dbg !6291
  call void @free_path(%struct.Path* %123), !dbg !6292
  br label %if.end94, !dbg !6292

if.end94:                                         ; preds = %if.then91, %if.then87
  %124 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6293
  %125 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6294
  %curve_cache95 = getelementptr inbounds %struct.Object, %struct.Object* %125, i32 0, i32 118, !dbg !6295
  %126 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache95, align 8, !dbg !6295
  %127 = bitcast %struct.CurveCache* %126 to i8*, !dbg !6294
  call void %124(i8* %127), !dbg !6293
  br label %if.end96, !dbg !6296

if.end96:                                         ; preds = %if.end94, %if.end85
  ret void, !dbg !6297
}

declare dso_local void @BKE_mesh_unlink(%struct.Mesh*) #3

declare dso_local void @BKE_curve_unlink(%struct.Curve*) #3

declare dso_local void @BKE_mball_unlink(%struct.MetaBall*) #3

declare dso_local void @BKE_free_animdata(%struct.ID*) #3

declare dso_local void @BLI_freelistN(%struct.ListBase*) #3

declare dso_local void @BKE_pose_free_ex(%struct.bPose*, i8 zeroext) #3

declare dso_local void @animviz_free_motionpath(%struct.bMotionPath*) #3

declare dso_local void @BKE_bproperty_free_list(%struct.ListBase*) #3

declare dso_local void @free_sensors(%struct.ListBase*) #3

declare dso_local void @free_controllers(%struct.ListBase*) #3

declare dso_local void @free_actuators(%struct.ListBase*) #3

declare dso_local void @BKE_constraints_free(%struct.ListBase*) #3

declare dso_local void @free_partdeflect(%struct.PartDeflect*) #3

declare dso_local void @BKE_rigidbody_free_object(%struct.Object*) #3

declare dso_local void @BKE_rigidbody_free_constraint(%struct.Object*) #3

declare dso_local void @GPU_lamp_free(%struct.Object*) #3

declare dso_local void @BKE_free_sculptsession(%struct.Object*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_free(%struct.Object* %ob) #0 !dbg !6298 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6299, metadata !DIExpression()), !dbg !6300
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6301
  call void @BKE_object_free_ex(%struct.Object* %0, i8 zeroext 1), !dbg !6302
  ret void, !dbg !6303
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_unlink(%struct.Object* %ob) #0 !dbg !6304 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %bmain = alloca %struct.Main*, align 8
  %obt = alloca %struct.Object*, align 8
  %mat = alloca %struct.Material*, align 8
  %wrld = alloca %struct.World*, align 8
  %sc = alloca %struct.bScreen*, align 8
  %sce = alloca %struct.Scene*, align 8
  %srl = alloca %struct.SceneRenderLayer*, align 8
  %lineset = alloca %struct.FreestyleLineSet*, align 8
  %cu = alloca %struct.Curve*, align 8
  %tex = alloca %struct.Tex*, align 8
  %group = alloca %struct.Group*, align 8
  %camera = alloca %struct.Camera*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %md = alloca %struct.ModifierData*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %rv3d = alloca %struct.RegionView3D*, align 8
  %lod = alloca %struct.LodLevel*, align 8
  %a = alloca i32, align 4
  %found = alloca i32, align 4
  %pchan = alloca %struct.bPoseChannel*, align 8
  %cti = alloca %struct.bConstraintTypeInfo*, align 8
  %targets = alloca %struct.ListBase, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %cti109 = alloca %struct.bConstraintTypeInfo*, align 8
  %targets111 = alloca %struct.ListBase, align 8
  %ct112 = alloca %struct.bConstraintTarget*, align 8
  %tpsys = alloca %struct.ParticleSystem*, align 8
  %state = alloca %struct.BoidState*, align 8
  %rule = alloca %struct.BoidRule*, align 8
  %pt = alloca %struct.ParticleTarget*, align 8
  %pa = alloca %struct.ParticleData*, align 8
  %bpa = alloca %struct.BoidParticle*, align 8
  %p = alloca i32, align 4
  %gabr = alloca %struct.BoidRuleGoalAvoid*, align 8
  %flbr = alloca %struct.BoidRuleFollowLeader*, align 8
  %m = alloca %struct.TimeMarker*, align 8
  %seq = alloca %struct.Sequence*, align 8
  %iter_macro = alloca %struct.SeqIterator, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %sl = alloca %struct.SpaceLink*, align 8
  %v3d = alloca %struct.View3D*, align 8
  %so = alloca %struct.SpaceOops*, align 8
  %tselem = alloca %struct.TreeStoreElem*, align 8
  %iter = alloca %struct.BLI_mempool_iter, align 8
  %sbuts = alloca %struct.SpaceButs*, align 8
  %snode = alloca %struct.SpaceNode*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6305, metadata !DIExpression()), !dbg !6306
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !6307, metadata !DIExpression()), !dbg !6369
  %0 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !6370
  store %struct.Main* %0, %struct.Main** %bmain, align 8, !dbg !6369
  call void @llvm.dbg.declare(metadata %struct.Object** %obt, metadata !6371, metadata !DIExpression()), !dbg !6372
  call void @llvm.dbg.declare(metadata %struct.Material** %mat, metadata !6373, metadata !DIExpression()), !dbg !6376
  call void @llvm.dbg.declare(metadata %struct.World** %wrld, metadata !6377, metadata !DIExpression()), !dbg !6380
  call void @llvm.dbg.declare(metadata %struct.bScreen** %sc, metadata !6381, metadata !DIExpression()), !dbg !6409
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce, metadata !6410, metadata !DIExpression()), !dbg !6413
  call void @llvm.dbg.declare(metadata %struct.SceneRenderLayer** %srl, metadata !6414, metadata !DIExpression()), !dbg !6444
  call void @llvm.dbg.declare(metadata %struct.FreestyleLineSet** %lineset, metadata !6445, metadata !DIExpression()), !dbg !6446
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !6447, metadata !DIExpression()), !dbg !6448
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex, metadata !6449, metadata !DIExpression()), !dbg !6452
  call void @llvm.dbg.declare(metadata %struct.Group** %group, metadata !6453, metadata !DIExpression()), !dbg !6456
  call void @llvm.dbg.declare(metadata %struct.Camera** %camera, metadata !6457, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !6484, metadata !DIExpression()), !dbg !6504
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !6505, metadata !DIExpression()), !dbg !6506
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !6507, metadata !DIExpression()), !dbg !6546
  call void @llvm.dbg.declare(metadata %struct.RegionView3D** %rv3d, metadata !6547, metadata !DIExpression()), !dbg !6548
  call void @llvm.dbg.declare(metadata %struct.LodLevel** %lod, metadata !6549, metadata !DIExpression()), !dbg !6550
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6551, metadata !DIExpression()), !dbg !6552
  call void @llvm.dbg.declare(metadata i32* %found, metadata !6553, metadata !DIExpression()), !dbg !6554
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6555
  %controllers = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 93, !dbg !6556
  call void @unlink_controllers(%struct.ListBase* %controllers), !dbg !6557
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6558
  %actuators = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 94, !dbg !6559
  call void @unlink_actuators(%struct.ListBase* %actuators), !dbg !6560
  %3 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !6561
  %object = getelementptr inbounds %struct.Main, %struct.Main* %3, i32 0, i32 13, !dbg !6562
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object, i32 0, i32 0, !dbg !6563
  %4 = load i8*, i8** %first, align 8, !dbg !6563
  %5 = bitcast i8* %4 to %struct.Object*, !dbg !6561
  store %struct.Object* %5, %struct.Object** %obt, align 8, !dbg !6564
  br label %while.cond, !dbg !6565

while.cond:                                       ; preds = %for.end286, %entry
  %6 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6566
  %tobool = icmp ne %struct.Object* %6, null, !dbg !6565
  br i1 %tobool, label %while.body, label %while.end, !dbg !6565

while.body:                                       ; preds = %while.cond
  %7 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6567
  %proxy = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 11, !dbg !6570
  %8 = load %struct.Object*, %struct.Object** %proxy, align 8, !dbg !6570
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6571
  %cmp = icmp eq %struct.Object* %8, %9, !dbg !6572
  br i1 %cmp, label %if.then, label %if.end, !dbg !6573

if.then:                                          ; preds = %while.body
  %10 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6574
  %proxy1 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 11, !dbg !6575
  store %struct.Object* null, %struct.Object** %proxy1, align 8, !dbg !6576
  br label %if.end, !dbg !6574

if.end:                                           ; preds = %if.then, %while.body
  %11 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6577
  %proxy_from = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 13, !dbg !6579
  %12 = load %struct.Object*, %struct.Object** %proxy_from, align 8, !dbg !6579
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6580
  %cmp2 = icmp eq %struct.Object* %12, %13, !dbg !6581
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !6582

if.then3:                                         ; preds = %if.end
  %14 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6583
  %proxy_from4 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 13, !dbg !6585
  store %struct.Object* null, %struct.Object** %proxy_from4, align 8, !dbg !6586
  %15 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6587
  %id = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 0, !dbg !6588
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 1), !dbg !6589
  br label %if.end5, !dbg !6590

if.end5:                                          ; preds = %if.then3, %if.end
  %16 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6591
  %proxy_group = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 12, !dbg !6593
  %17 = load %struct.Object*, %struct.Object** %proxy_group, align 8, !dbg !6593
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6594
  %cmp6 = icmp eq %struct.Object* %17, %18, !dbg !6595
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !6596

if.then7:                                         ; preds = %if.end5
  %19 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6597
  %proxy_group8 = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 12, !dbg !6598
  store %struct.Object* null, %struct.Object** %proxy_group8, align 8, !dbg !6599
  br label %if.end9, !dbg !6597

if.end9:                                          ; preds = %if.then7, %if.end5
  %20 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6600
  %parent = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 9, !dbg !6602
  %21 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !6602
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6603
  %cmp10 = icmp eq %struct.Object* %21, %22, !dbg !6604
  br i1 %cmp10, label %if.then11, label %if.end14, !dbg !6605

if.then11:                                        ; preds = %if.end9
  %23 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6606
  %parent12 = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 9, !dbg !6608
  store %struct.Object* null, %struct.Object** %parent12, align 8, !dbg !6609
  %24 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6610
  %id13 = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 0, !dbg !6611
  call void @DAG_id_tag_update(%struct.ID* %id13, i16 signext 7), !dbg !6612
  br label %if.end14, !dbg !6613

if.end14:                                         ; preds = %if.then11, %if.end9
  %25 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6614
  %26 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6615
  %27 = bitcast %struct.Object* %26 to i8*, !dbg !6615
  call void @modifiers_foreachObjectLink(%struct.Object* %25, void (i8*, %struct.Object*, %struct.Object**)* @unlink_object__unlinkModifierLinks, i8* %27), !dbg !6616
  %28 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6617
  %type = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 3, !dbg !6617
  %29 = load i16, i16* %type, align 8, !dbg !6617
  %conv = sext i16 %29 to i32, !dbg !6617
  %cmp15 = icmp eq i32 %conv, 2, !dbg !6617
  br i1 %cmp15, label %if.then21, label %lor.lhs.false, !dbg !6617

lor.lhs.false:                                    ; preds = %if.end14
  %30 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6617
  %type17 = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 3, !dbg !6617
  %31 = load i16, i16* %type17, align 8, !dbg !6617
  %conv18 = sext i16 %31 to i32, !dbg !6617
  %cmp19 = icmp eq i32 %conv18, 4, !dbg !6617
  br i1 %cmp19, label %if.then21, label %if.else, !dbg !6619

if.then21:                                        ; preds = %lor.lhs.false, %if.end14
  %32 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6620
  %data = getelementptr inbounds %struct.Object, %struct.Object* %32, i32 0, i32 19, !dbg !6622
  %33 = load i8*, i8** %data, align 8, !dbg !6622
  %34 = bitcast i8* %33 to %struct.Curve*, !dbg !6620
  store %struct.Curve* %34, %struct.Curve** %cu, align 8, !dbg !6623
  %35 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6624
  %bevobj = getelementptr inbounds %struct.Curve, %struct.Curve* %35, i32 0, i32 5, !dbg !6626
  %36 = load %struct.Object*, %struct.Object** %bevobj, align 8, !dbg !6626
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6627
  %cmp22 = icmp eq %struct.Object* %36, %37, !dbg !6628
  br i1 %cmp22, label %if.then24, label %if.end27, !dbg !6629

if.then24:                                        ; preds = %if.then21
  %38 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6630
  %bevobj25 = getelementptr inbounds %struct.Curve, %struct.Curve* %38, i32 0, i32 5, !dbg !6632
  store %struct.Object* null, %struct.Object** %bevobj25, align 8, !dbg !6633
  %39 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6634
  %id26 = getelementptr inbounds %struct.Object, %struct.Object* %39, i32 0, i32 0, !dbg !6635
  call void @DAG_id_tag_update(%struct.ID* %id26, i16 signext 7), !dbg !6636
  br label %if.end27, !dbg !6637

if.end27:                                         ; preds = %if.then24, %if.then21
  %40 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6638
  %taperobj = getelementptr inbounds %struct.Curve, %struct.Curve* %40, i32 0, i32 6, !dbg !6640
  %41 = load %struct.Object*, %struct.Object** %taperobj, align 8, !dbg !6640
  %42 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6641
  %cmp28 = icmp eq %struct.Object* %41, %42, !dbg !6642
  br i1 %cmp28, label %if.then30, label %if.end33, !dbg !6643

if.then30:                                        ; preds = %if.end27
  %43 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6644
  %taperobj31 = getelementptr inbounds %struct.Curve, %struct.Curve* %43, i32 0, i32 6, !dbg !6646
  store %struct.Object* null, %struct.Object** %taperobj31, align 8, !dbg !6647
  %44 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6648
  %id32 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 0, !dbg !6649
  call void @DAG_id_tag_update(%struct.ID* %id32, i16 signext 7), !dbg !6650
  br label %if.end33, !dbg !6651

if.end33:                                         ; preds = %if.then30, %if.end27
  %45 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6652
  %textoncurve = getelementptr inbounds %struct.Curve, %struct.Curve* %45, i32 0, i32 7, !dbg !6654
  %46 = load %struct.Object*, %struct.Object** %textoncurve, align 8, !dbg !6654
  %47 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6655
  %cmp34 = icmp eq %struct.Object* %46, %47, !dbg !6656
  br i1 %cmp34, label %if.then36, label %if.end39, !dbg !6657

if.then36:                                        ; preds = %if.end33
  %48 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !6658
  %textoncurve37 = getelementptr inbounds %struct.Curve, %struct.Curve* %48, i32 0, i32 7, !dbg !6660
  store %struct.Object* null, %struct.Object** %textoncurve37, align 8, !dbg !6661
  %49 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6662
  %id38 = getelementptr inbounds %struct.Object, %struct.Object* %49, i32 0, i32 0, !dbg !6663
  call void @DAG_id_tag_update(%struct.ID* %id38, i16 signext 7), !dbg !6664
  br label %if.end39, !dbg !6665

if.end39:                                         ; preds = %if.then36, %if.end33
  br label %if.end103, !dbg !6666

if.else:                                          ; preds = %lor.lhs.false
  %50 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6667
  %type40 = getelementptr inbounds %struct.Object, %struct.Object* %50, i32 0, i32 3, !dbg !6669
  %51 = load i16, i16* %type40, align 8, !dbg !6669
  %conv41 = sext i16 %51 to i32, !dbg !6667
  %cmp42 = icmp eq i32 %conv41, 25, !dbg !6670
  br i1 %cmp42, label %land.lhs.true, label %if.else85, !dbg !6671

land.lhs.true:                                    ; preds = %if.else
  %52 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6672
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %52, i32 0, i32 18, !dbg !6673
  %53 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !6673
  %tobool44 = icmp ne %struct.bPose* %53, null, !dbg !6672
  br i1 %tobool44, label %if.then45, label %if.else85, !dbg !6674

if.then45:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !6675, metadata !DIExpression()), !dbg !6677
  %54 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6678
  %pose46 = getelementptr inbounds %struct.Object, %struct.Object* %54, i32 0, i32 18, !dbg !6680
  %55 = load %struct.bPose*, %struct.bPose** %pose46, align 8, !dbg !6680
  %chanbase = getelementptr inbounds %struct.bPose, %struct.bPose* %55, i32 0, i32 0, !dbg !6681
  %first47 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase, i32 0, i32 0, !dbg !6682
  %56 = load i8*, i8** %first47, align 8, !dbg !6682
  %57 = bitcast i8* %56 to %struct.bPoseChannel*, !dbg !6678
  store %struct.bPoseChannel* %57, %struct.bPoseChannel** %pchan, align 8, !dbg !6683
  br label %for.cond, !dbg !6684

for.cond:                                         ; preds = %for.inc82, %if.then45
  %58 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6685
  %tobool48 = icmp ne %struct.bPoseChannel* %58, null, !dbg !6687
  br i1 %tobool48, label %for.body, label %for.end84, !dbg !6687

for.body:                                         ; preds = %for.cond
  %59 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6688
  %constraints = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %59, i32 0, i32 3, !dbg !6691
  %first49 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints, i32 0, i32 0, !dbg !6692
  %60 = load i8*, i8** %first49, align 8, !dbg !6692
  %61 = bitcast i8* %60 to %struct.bConstraint*, !dbg !6688
  store %struct.bConstraint* %61, %struct.bConstraint** %con, align 8, !dbg !6693
  br label %for.cond50, !dbg !6694

for.cond50:                                       ; preds = %for.inc74, %for.body
  %62 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6695
  %tobool51 = icmp ne %struct.bConstraint* %62, null, !dbg !6697
  br i1 %tobool51, label %for.body52, label %for.end76, !dbg !6697

for.body52:                                       ; preds = %for.cond50
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %cti, metadata !6698, metadata !DIExpression()), !dbg !6764
  %63 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6765
  %call = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint* %63), !dbg !6766
  store %struct.bConstraintTypeInfo* %call, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !6764
  call void @llvm.dbg.declare(metadata %struct.ListBase* %targets, metadata !6767, metadata !DIExpression()), !dbg !6768
  %64 = bitcast %struct.ListBase* %targets to i8*, !dbg !6768
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 16, i1 false), !dbg !6768
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !6769, metadata !DIExpression()), !dbg !6772
  %65 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !6773
  %tobool53 = icmp ne %struct.bConstraintTypeInfo* %65, null, !dbg !6773
  br i1 %tobool53, label %land.lhs.true54, label %if.end73, !dbg !6775

land.lhs.true54:                                  ; preds = %for.body52
  %66 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !6776
  %get_constraint_targets = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %66, i32 0, i32 8, !dbg !6777
  %67 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets, align 8, !dbg !6777
  %tobool55 = icmp ne i32 (%struct.bConstraint*, %struct.ListBase*)* %67, null, !dbg !6776
  br i1 %tobool55, label %if.then56, label %if.end73, !dbg !6778

if.then56:                                        ; preds = %land.lhs.true54
  %68 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !6779
  %get_constraint_targets57 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %68, i32 0, i32 8, !dbg !6781
  %69 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets57, align 8, !dbg !6781
  %70 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6782
  %call58 = call i32 %69(%struct.bConstraint* %70, %struct.ListBase* %targets), !dbg !6779
  %first59 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets, i32 0, i32 0, !dbg !6783
  %71 = load i8*, i8** %first59, align 8, !dbg !6783
  %72 = bitcast i8* %71 to %struct.bConstraintTarget*, !dbg !6785
  store %struct.bConstraintTarget* %72, %struct.bConstraintTarget** %ct, align 8, !dbg !6786
  br label %for.cond60, !dbg !6787

for.cond60:                                       ; preds = %for.inc, %if.then56
  %73 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6788
  %tobool61 = icmp ne %struct.bConstraintTarget* %73, null, !dbg !6790
  br i1 %tobool61, label %for.body62, label %for.end, !dbg !6790

for.body62:                                       ; preds = %for.cond60
  %74 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6791
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %74, i32 0, i32 2, !dbg !6794
  %75 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !6794
  %76 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6795
  %cmp63 = icmp eq %struct.Object* %75, %76, !dbg !6796
  br i1 %cmp63, label %if.then65, label %if.end68, !dbg !6797

if.then65:                                        ; preds = %for.body62
  %77 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6798
  %tar66 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %77, i32 0, i32 2, !dbg !6800
  store %struct.Object* null, %struct.Object** %tar66, align 8, !dbg !6801
  %78 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6802
  %subtarget = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %78, i32 0, i32 3, !dbg !6803
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget, i64 0, i64 0, !dbg !6802
  store i8 0, i8* %arrayidx, align 8, !dbg !6804
  %79 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6805
  %id67 = getelementptr inbounds %struct.Object, %struct.Object* %79, i32 0, i32 0, !dbg !6806
  call void @DAG_id_tag_update(%struct.ID* %id67, i16 signext 2), !dbg !6807
  br label %if.end68, !dbg !6808

if.end68:                                         ; preds = %if.then65, %for.body62
  br label %for.inc, !dbg !6809

for.inc:                                          ; preds = %if.end68
  %80 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6810
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %80, i32 0, i32 0, !dbg !6811
  %81 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !6811
  store %struct.bConstraintTarget* %81, %struct.bConstraintTarget** %ct, align 8, !dbg !6812
  br label %for.cond60, !dbg !6813, !llvm.loop !6814

for.end:                                          ; preds = %for.cond60
  %82 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !6816
  %flush_constraint_targets = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %82, i32 0, i32 9, !dbg !6818
  %83 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets, align 8, !dbg !6818
  %tobool69 = icmp ne void (%struct.bConstraint*, %struct.ListBase*, i8)* %83, null, !dbg !6816
  br i1 %tobool69, label %if.then70, label %if.end72, !dbg !6819

if.then70:                                        ; preds = %for.end
  %84 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !6820
  %flush_constraint_targets71 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %84, i32 0, i32 9, !dbg !6821
  %85 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets71, align 8, !dbg !6821
  %86 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6822
  call void %85(%struct.bConstraint* %86, %struct.ListBase* %targets, i8 zeroext 0), !dbg !6820
  br label %if.end72, !dbg !6820

if.end72:                                         ; preds = %if.then70, %for.end
  br label %if.end73, !dbg !6823

if.end73:                                         ; preds = %if.end72, %land.lhs.true54, %for.body52
  br label %for.inc74, !dbg !6824

for.inc74:                                        ; preds = %if.end73
  %87 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6825
  %next75 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %87, i32 0, i32 0, !dbg !6826
  %88 = load %struct.bConstraint*, %struct.bConstraint** %next75, align 8, !dbg !6826
  store %struct.bConstraint* %88, %struct.bConstraint** %con, align 8, !dbg !6827
  br label %for.cond50, !dbg !6828, !llvm.loop !6829

for.end76:                                        ; preds = %for.cond50
  %89 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6831
  %custom = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %89, i32 0, i32 18, !dbg !6833
  %90 = load %struct.Object*, %struct.Object** %custom, align 8, !dbg !6833
  %91 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6834
  %cmp77 = icmp eq %struct.Object* %90, %91, !dbg !6835
  br i1 %cmp77, label %if.then79, label %if.end81, !dbg !6836

if.then79:                                        ; preds = %for.end76
  %92 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6837
  %custom80 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %92, i32 0, i32 18, !dbg !6838
  store %struct.Object* null, %struct.Object** %custom80, align 8, !dbg !6839
  br label %if.end81, !dbg !6837

if.end81:                                         ; preds = %if.then79, %for.end76
  br label %for.inc82, !dbg !6840

for.inc82:                                        ; preds = %if.end81
  %93 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6841
  %next83 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %93, i32 0, i32 0, !dbg !6842
  %94 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next83, align 8, !dbg !6842
  store %struct.bPoseChannel* %94, %struct.bPoseChannel** %pchan, align 8, !dbg !6843
  br label %for.cond, !dbg !6844, !llvm.loop !6845

for.end84:                                        ; preds = %for.cond
  br label %if.end102, !dbg !6847

if.else85:                                        ; preds = %land.lhs.true, %if.else
  %95 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6848
  %type86 = getelementptr inbounds %struct.Object, %struct.Object* %95, i32 0, i32 3, !dbg !6848
  %96 = load i16, i16* %type86, align 8, !dbg !6848
  %conv87 = sext i16 %96 to i32, !dbg !6848
  %cmp88 = icmp eq i32 5, %conv87, !dbg !6848
  br i1 %cmp88, label %if.then95, label %lor.lhs.false90, !dbg !6848

lor.lhs.false90:                                  ; preds = %if.else85
  %97 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6848
  %type91 = getelementptr inbounds %struct.Object, %struct.Object* %97, i32 0, i32 3, !dbg !6848
  %98 = load i16, i16* %type91, align 8, !dbg !6848
  %conv92 = sext i16 %98 to i32, !dbg !6848
  %cmp93 = icmp eq i32 5, %conv92, !dbg !6848
  br i1 %cmp93, label %if.then95, label %if.end101, !dbg !6850

if.then95:                                        ; preds = %lor.lhs.false90, %if.else85
  %99 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6851
  %100 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6854
  %call96 = call zeroext i8 @BKE_mball_is_basis_for(%struct.Object* %99, %struct.Object* %100), !dbg !6855
  %tobool97 = icmp ne i8 %call96, 0, !dbg !6855
  br i1 %tobool97, label %if.then98, label %if.end100, !dbg !6856

if.then98:                                        ; preds = %if.then95
  %101 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6857
  %id99 = getelementptr inbounds %struct.Object, %struct.Object* %101, i32 0, i32 0, !dbg !6858
  call void @DAG_id_tag_update(%struct.ID* %id99, i16 signext 2), !dbg !6859
  br label %if.end100, !dbg !6859

if.end100:                                        ; preds = %if.then98, %if.then95
  br label %if.end101, !dbg !6860

if.end101:                                        ; preds = %if.end100, %lor.lhs.false90
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %for.end84
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.end39
  %102 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6861
  %103 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6862
  call void @sca_remove_ob_poin(%struct.Object* %102, %struct.Object* %103), !dbg !6863
  %104 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6864
  %constraints104 = getelementptr inbounds %struct.Object, %struct.Object* %104, i32 0, i32 106, !dbg !6866
  %first105 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints104, i32 0, i32 0, !dbg !6867
  %105 = load i8*, i8** %first105, align 8, !dbg !6867
  %106 = bitcast i8* %105 to %struct.bConstraint*, !dbg !6864
  store %struct.bConstraint* %106, %struct.bConstraint** %con, align 8, !dbg !6868
  br label %for.cond106, !dbg !6869

for.cond106:                                      ; preds = %for.inc142, %if.end103
  %107 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6870
  %tobool107 = icmp ne %struct.bConstraint* %107, null, !dbg !6872
  br i1 %tobool107, label %for.body108, label %for.end144, !dbg !6872

for.body108:                                      ; preds = %for.cond106
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %cti109, metadata !6873, metadata !DIExpression()), !dbg !6875
  %108 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6876
  %call110 = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint* %108), !dbg !6877
  store %struct.bConstraintTypeInfo* %call110, %struct.bConstraintTypeInfo** %cti109, align 8, !dbg !6875
  call void @llvm.dbg.declare(metadata %struct.ListBase* %targets111, metadata !6878, metadata !DIExpression()), !dbg !6879
  %109 = bitcast %struct.ListBase* %targets111 to i8*, !dbg !6879
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 16, i1 false), !dbg !6879
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct112, metadata !6880, metadata !DIExpression()), !dbg !6881
  %110 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti109, align 8, !dbg !6882
  %tobool113 = icmp ne %struct.bConstraintTypeInfo* %110, null, !dbg !6882
  br i1 %tobool113, label %land.lhs.true114, label %if.end141, !dbg !6884

land.lhs.true114:                                 ; preds = %for.body108
  %111 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti109, align 8, !dbg !6885
  %get_constraint_targets115 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %111, i32 0, i32 8, !dbg !6886
  %112 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets115, align 8, !dbg !6886
  %tobool116 = icmp ne i32 (%struct.bConstraint*, %struct.ListBase*)* %112, null, !dbg !6885
  br i1 %tobool116, label %if.then117, label %if.end141, !dbg !6887

if.then117:                                       ; preds = %land.lhs.true114
  %113 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti109, align 8, !dbg !6888
  %get_constraint_targets118 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %113, i32 0, i32 8, !dbg !6890
  %114 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets118, align 8, !dbg !6890
  %115 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6891
  %call119 = call i32 %114(%struct.bConstraint* %115, %struct.ListBase* %targets111), !dbg !6888
  %first120 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets111, i32 0, i32 0, !dbg !6892
  %116 = load i8*, i8** %first120, align 8, !dbg !6892
  %117 = bitcast i8* %116 to %struct.bConstraintTarget*, !dbg !6894
  store %struct.bConstraintTarget* %117, %struct.bConstraintTarget** %ct112, align 8, !dbg !6895
  br label %for.cond121, !dbg !6896

for.cond121:                                      ; preds = %for.inc133, %if.then117
  %118 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct112, align 8, !dbg !6897
  %tobool122 = icmp ne %struct.bConstraintTarget* %118, null, !dbg !6899
  br i1 %tobool122, label %for.body123, label %for.end135, !dbg !6899

for.body123:                                      ; preds = %for.cond121
  %119 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct112, align 8, !dbg !6900
  %tar124 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %119, i32 0, i32 2, !dbg !6903
  %120 = load %struct.Object*, %struct.Object** %tar124, align 8, !dbg !6903
  %121 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6904
  %cmp125 = icmp eq %struct.Object* %120, %121, !dbg !6905
  br i1 %cmp125, label %if.then127, label %if.end132, !dbg !6906

if.then127:                                       ; preds = %for.body123
  %122 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct112, align 8, !dbg !6907
  %tar128 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %122, i32 0, i32 2, !dbg !6909
  store %struct.Object* null, %struct.Object** %tar128, align 8, !dbg !6910
  %123 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct112, align 8, !dbg !6911
  %subtarget129 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %123, i32 0, i32 3, !dbg !6912
  %arrayidx130 = getelementptr inbounds [64 x i8], [64 x i8]* %subtarget129, i64 0, i64 0, !dbg !6911
  store i8 0, i8* %arrayidx130, align 8, !dbg !6913
  %124 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6914
  %id131 = getelementptr inbounds %struct.Object, %struct.Object* %124, i32 0, i32 0, !dbg !6915
  call void @DAG_id_tag_update(%struct.ID* %id131, i16 signext 2), !dbg !6916
  br label %if.end132, !dbg !6917

if.end132:                                        ; preds = %if.then127, %for.body123
  br label %for.inc133, !dbg !6918

for.inc133:                                       ; preds = %if.end132
  %125 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct112, align 8, !dbg !6919
  %next134 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %125, i32 0, i32 0, !dbg !6920
  %126 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next134, align 8, !dbg !6920
  store %struct.bConstraintTarget* %126, %struct.bConstraintTarget** %ct112, align 8, !dbg !6921
  br label %for.cond121, !dbg !6922, !llvm.loop !6923

for.end135:                                       ; preds = %for.cond121
  %127 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti109, align 8, !dbg !6925
  %flush_constraint_targets136 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %127, i32 0, i32 9, !dbg !6927
  %128 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets136, align 8, !dbg !6927
  %tobool137 = icmp ne void (%struct.bConstraint*, %struct.ListBase*, i8)* %128, null, !dbg !6925
  br i1 %tobool137, label %if.then138, label %if.end140, !dbg !6928

if.then138:                                       ; preds = %for.end135
  %129 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti109, align 8, !dbg !6929
  %flush_constraint_targets139 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %129, i32 0, i32 9, !dbg !6930
  %130 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets139, align 8, !dbg !6930
  %131 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6931
  call void %130(%struct.bConstraint* %131, %struct.ListBase* %targets111, i8 zeroext 0), !dbg !6929
  br label %if.end140, !dbg !6929

if.end140:                                        ; preds = %if.then138, %for.end135
  br label %if.end141, !dbg !6932

if.end141:                                        ; preds = %if.end140, %land.lhs.true114, %for.body108
  br label %for.inc142, !dbg !6933

for.inc142:                                       ; preds = %if.end141
  %132 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6934
  %next143 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %132, i32 0, i32 0, !dbg !6935
  %133 = load %struct.bConstraint*, %struct.bConstraint** %next143, align 8, !dbg !6935
  store %struct.bConstraint* %133, %struct.bConstraint** %con, align 8, !dbg !6936
  br label %for.cond106, !dbg !6937, !llvm.loop !6938

for.end144:                                       ; preds = %for.cond106
  %134 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6940
  %pd = getelementptr inbounds %struct.Object, %struct.Object* %134, i32 0, i32 110, !dbg !6942
  %135 = load %struct.PartDeflect*, %struct.PartDeflect** %pd, align 8, !dbg !6942
  %tobool145 = icmp ne %struct.PartDeflect* %135, null, !dbg !6940
  br i1 %tobool145, label %if.then146, label %if.end164, !dbg !6943

if.then146:                                       ; preds = %for.end144
  %136 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6944
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %136, i32 0, i32 111, !dbg !6947
  %137 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !6947
  %tobool147 = icmp ne %struct.SoftBody* %137, null, !dbg !6944
  br i1 %tobool147, label %if.then148, label %if.end150, !dbg !6948

if.then148:                                       ; preds = %if.then146
  %138 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6949
  %id149 = getelementptr inbounds %struct.Object, %struct.Object* %138, i32 0, i32 0, !dbg !6950
  call void @DAG_id_tag_update(%struct.ID* %id149, i16 signext 2), !dbg !6951
  br label %if.end150, !dbg !6951

if.end150:                                        ; preds = %if.then148, %if.then146
  %139 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6952
  %modifiers = getelementptr inbounds %struct.Object, %struct.Object* %139, i32 0, i32 26, !dbg !6954
  %first151 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %modifiers, i32 0, i32 0, !dbg !6955
  %140 = load i8*, i8** %first151, align 8, !dbg !6955
  %141 = bitcast i8* %140 to %struct.ModifierData*, !dbg !6952
  store %struct.ModifierData* %141, %struct.ModifierData** %md, align 8, !dbg !6956
  br label %for.cond152, !dbg !6957

for.cond152:                                      ; preds = %for.inc161, %if.end150
  %142 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6958
  %tobool153 = icmp ne %struct.ModifierData* %142, null, !dbg !6960
  br i1 %tobool153, label %for.body154, label %for.end163, !dbg !6960

for.body154:                                      ; preds = %for.cond152
  %143 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6961
  %type155 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %143, i32 0, i32 2, !dbg !6963
  %144 = load i32, i32* %type155, align 8, !dbg !6963
  %cmp156 = icmp eq i32 %144, 22, !dbg !6964
  br i1 %cmp156, label %if.then158, label %if.end160, !dbg !6965

if.then158:                                       ; preds = %for.body154
  %145 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6966
  %id159 = getelementptr inbounds %struct.Object, %struct.Object* %145, i32 0, i32 0, !dbg !6967
  call void @DAG_id_tag_update(%struct.ID* %id159, i16 signext 2), !dbg !6968
  br label %if.end160, !dbg !6968

if.end160:                                        ; preds = %if.then158, %for.body154
  br label %for.inc161, !dbg !6969

for.inc161:                                       ; preds = %if.end160
  %146 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !6970
  %next162 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %146, i32 0, i32 0, !dbg !6971
  %147 = load %struct.ModifierData*, %struct.ModifierData** %next162, align 8, !dbg !6971
  store %struct.ModifierData* %147, %struct.ModifierData** %md, align 8, !dbg !6972
  br label %for.cond152, !dbg !6973, !llvm.loop !6974

for.end163:                                       ; preds = %for.cond152
  br label %if.end164, !dbg !6976

if.end164:                                        ; preds = %for.end163, %for.end144
  %148 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6977
  %particlesystem = getelementptr inbounds %struct.Object, %struct.Object* %148, i32 0, i32 109, !dbg !6979
  %first165 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem, i32 0, i32 0, !dbg !6980
  %149 = load i8*, i8** %first165, align 8, !dbg !6980
  %tobool166 = icmp ne i8* %149, null, !dbg !6977
  br i1 %tobool166, label %if.then167, label %if.end274, !dbg !6981

if.then167:                                       ; preds = %if.end164
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %tpsys, metadata !6982, metadata !DIExpression()), !dbg !6984
  %150 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !6985
  %particlesystem168 = getelementptr inbounds %struct.Object, %struct.Object* %150, i32 0, i32 109, !dbg !6986
  %first169 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem168, i32 0, i32 0, !dbg !6987
  %151 = load i8*, i8** %first169, align 8, !dbg !6987
  %152 = bitcast i8* %151 to %struct.ParticleSystem*, !dbg !6985
  store %struct.ParticleSystem* %152, %struct.ParticleSystem** %tpsys, align 8, !dbg !6984
  br label %for.cond170, !dbg !6988

for.cond170:                                      ; preds = %for.inc266, %if.then167
  %153 = load %struct.ParticleSystem*, %struct.ParticleSystem** %tpsys, align 8, !dbg !6989
  %tobool171 = icmp ne %struct.ParticleSystem* %153, null, !dbg !6992
  br i1 %tobool171, label %for.body172, label %for.end268, !dbg !6992

for.body172:                                      ; preds = %for.cond170
  call void @llvm.dbg.declare(metadata %struct.BoidState** %state, metadata !6993, metadata !DIExpression()), !dbg !7014
  store %struct.BoidState* null, %struct.BoidState** %state, align 8, !dbg !7014
  call void @llvm.dbg.declare(metadata %struct.BoidRule** %rule, metadata !7015, metadata !DIExpression()), !dbg !7017
  store %struct.BoidRule* null, %struct.BoidRule** %rule, align 8, !dbg !7017
  call void @llvm.dbg.declare(metadata %struct.ParticleTarget** %pt, metadata !7018, metadata !DIExpression()), !dbg !7032
  %154 = load %struct.ParticleSystem*, %struct.ParticleSystem** %tpsys, align 8, !dbg !7033
  %targets173 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %154, i32 0, i32 17, !dbg !7034
  %first174 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets173, i32 0, i32 0, !dbg !7035
  %155 = load i8*, i8** %first174, align 8, !dbg !7035
  %156 = bitcast i8* %155 to %struct.ParticleTarget*, !dbg !7033
  store %struct.ParticleTarget* %156, %struct.ParticleTarget** %pt, align 8, !dbg !7032
  br label %for.cond175, !dbg !7036

for.cond175:                                      ; preds = %for.inc185, %for.body172
  %157 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !7037
  %tobool176 = icmp ne %struct.ParticleTarget* %157, null, !dbg !7040
  br i1 %tobool176, label %for.body177, label %for.end187, !dbg !7040

for.body177:                                      ; preds = %for.cond175
  %158 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !7041
  %ob178 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %158, i32 0, i32 2, !dbg !7044
  %159 = load %struct.Object*, %struct.Object** %ob178, align 8, !dbg !7044
  %160 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7045
  %cmp179 = icmp eq %struct.Object* %159, %160, !dbg !7046
  br i1 %cmp179, label %if.then181, label %if.end184, !dbg !7047

if.then181:                                       ; preds = %for.body177
  %161 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !7048
  %ob182 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %161, i32 0, i32 2, !dbg !7050
  store %struct.Object* null, %struct.Object** %ob182, align 8, !dbg !7051
  %162 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !7052
  %id183 = getelementptr inbounds %struct.Object, %struct.Object* %162, i32 0, i32 0, !dbg !7053
  call void @DAG_id_tag_update(%struct.ID* %id183, i16 signext 2), !dbg !7054
  br label %for.end187, !dbg !7055

if.end184:                                        ; preds = %for.body177
  br label %for.inc185, !dbg !7056

for.inc185:                                       ; preds = %if.end184
  %163 = load %struct.ParticleTarget*, %struct.ParticleTarget** %pt, align 8, !dbg !7057
  %next186 = getelementptr inbounds %struct.ParticleTarget, %struct.ParticleTarget* %163, i32 0, i32 0, !dbg !7058
  %164 = load %struct.ParticleTarget*, %struct.ParticleTarget** %next186, align 8, !dbg !7058
  store %struct.ParticleTarget* %164, %struct.ParticleTarget** %pt, align 8, !dbg !7059
  br label %for.cond175, !dbg !7060, !llvm.loop !7061

for.end187:                                       ; preds = %if.then181, %for.cond175
  %165 = load %struct.ParticleSystem*, %struct.ParticleSystem** %tpsys, align 8, !dbg !7063
  %target_ob = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %165, i32 0, i32 14, !dbg !7065
  %166 = load %struct.Object*, %struct.Object** %target_ob, align 8, !dbg !7065
  %167 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7066
  %cmp188 = icmp eq %struct.Object* %166, %167, !dbg !7067
  br i1 %cmp188, label %if.then190, label %if.end193, !dbg !7068

if.then190:                                       ; preds = %for.end187
  %168 = load %struct.ParticleSystem*, %struct.ParticleSystem** %tpsys, align 8, !dbg !7069
  %target_ob191 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %168, i32 0, i32 14, !dbg !7071
  store %struct.Object* null, %struct.Object** %target_ob191, align 8, !dbg !7072
  %169 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !7073
  %id192 = getelementptr inbounds %struct.Object, %struct.Object* %169, i32 0, i32 0, !dbg !7074
  call void @DAG_id_tag_update(%struct.ID* %id192, i16 signext 2), !dbg !7075
  br label %if.end193, !dbg !7076

if.end193:                                        ; preds = %if.then190, %for.end187
  %170 = load %struct.ParticleSystem*, %struct.ParticleSystem** %tpsys, align 8, !dbg !7077
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %170, i32 0, i32 2, !dbg !7079
  %171 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !7079
  %dup_ob = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %171, i32 0, i32 125, !dbg !7080
  %172 = load %struct.Object*, %struct.Object** %dup_ob, align 8, !dbg !7080
  %173 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7081
  %cmp194 = icmp eq %struct.Object* %172, %173, !dbg !7082
  br i1 %cmp194, label %if.then196, label %if.end199, !dbg !7083

if.then196:                                       ; preds = %if.end193
  %174 = load %struct.ParticleSystem*, %struct.ParticleSystem** %tpsys, align 8, !dbg !7084
  %part197 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %174, i32 0, i32 2, !dbg !7085
  %175 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part197, align 8, !dbg !7085
  %dup_ob198 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %175, i32 0, i32 125, !dbg !7086
  store %struct.Object* null, %struct.Object** %dup_ob198, align 8, !dbg !7087
  br label %if.end199, !dbg !7084

if.end199:                                        ; preds = %if.then196, %if.end193
  %176 = load %struct.ParticleSystem*, %struct.ParticleSystem** %tpsys, align 8, !dbg !7088
  %part200 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %176, i32 0, i32 2, !dbg !7090
  %177 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part200, align 8, !dbg !7090
  %phystype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %177, i32 0, i32 11, !dbg !7091
  %178 = load i16, i16* %phystype, align 8, !dbg !7091
  %conv201 = sext i16 %178 to i32, !dbg !7088
  %cmp202 = icmp eq i32 %conv201, 3, !dbg !7092
  br i1 %cmp202, label %if.then204, label %if.end216, !dbg !7093

if.then204:                                       ; preds = %if.end199
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !7094, metadata !DIExpression()), !dbg !7096
  call void @llvm.dbg.declare(metadata %struct.BoidParticle** %bpa, metadata !7097, metadata !DIExpression()), !dbg !7098
  call void @llvm.dbg.declare(metadata i32* %p, metadata !7099, metadata !DIExpression()), !dbg !7100
  store i32 0, i32* %p, align 4, !dbg !7101
  %179 = load %struct.ParticleSystem*, %struct.ParticleSystem** %tpsys, align 8, !dbg !7103
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %179, i32 0, i32 3, !dbg !7104
  %180 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !7104
  store %struct.ParticleData* %180, %struct.ParticleData** %pa, align 8, !dbg !7105
  br label %for.cond205, !dbg !7106

for.cond205:                                      ; preds = %for.inc214, %if.then204
  %181 = load i32, i32* %p, align 4, !dbg !7107
  %182 = load %struct.ParticleSystem*, %struct.ParticleSystem** %tpsys, align 8, !dbg !7109
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %182, i32 0, i32 26, !dbg !7110
  %183 = load i32, i32* %totpart, align 8, !dbg !7110
  %cmp206 = icmp slt i32 %181, %183, !dbg !7111
  br i1 %cmp206, label %for.body208, label %for.end215, !dbg !7112

for.body208:                                      ; preds = %for.cond205
  %184 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !7113
  %boid = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %184, i32 0, i32 4, !dbg !7115
  %185 = load %struct.BoidParticle*, %struct.BoidParticle** %boid, align 8, !dbg !7115
  store %struct.BoidParticle* %185, %struct.BoidParticle** %bpa, align 8, !dbg !7116
  %186 = load %struct.BoidParticle*, %struct.BoidParticle** %bpa, align 8, !dbg !7117
  %ground = getelementptr inbounds %struct.BoidParticle, %struct.BoidParticle* %186, i32 0, i32 0, !dbg !7119
  %187 = load %struct.Object*, %struct.Object** %ground, align 8, !dbg !7119
  %188 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7120
  %cmp209 = icmp eq %struct.Object* %187, %188, !dbg !7121
  br i1 %cmp209, label %if.then211, label %if.end213, !dbg !7122

if.then211:                                       ; preds = %for.body208
  %189 = load %struct.BoidParticle*, %struct.BoidParticle** %bpa, align 8, !dbg !7123
  %ground212 = getelementptr inbounds %struct.BoidParticle, %struct.BoidParticle* %189, i32 0, i32 0, !dbg !7124
  store %struct.Object* null, %struct.Object** %ground212, align 8, !dbg !7125
  br label %if.end213, !dbg !7123

if.end213:                                        ; preds = %if.then211, %for.body208
  br label %for.inc214, !dbg !7126

for.inc214:                                       ; preds = %if.end213
  %190 = load i32, i32* %p, align 4, !dbg !7127
  %inc = add nsw i32 %190, 1, !dbg !7127
  store i32 %inc, i32* %p, align 4, !dbg !7127
  %191 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !7128
  %incdec.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %191, i32 1, !dbg !7128
  store %struct.ParticleData* %incdec.ptr, %struct.ParticleData** %pa, align 8, !dbg !7128
  br label %for.cond205, !dbg !7129, !llvm.loop !7130

for.end215:                                       ; preds = %for.cond205
  br label %if.end216, !dbg !7132

if.end216:                                        ; preds = %for.end215, %if.end199
  %192 = load %struct.ParticleSystem*, %struct.ParticleSystem** %tpsys, align 8, !dbg !7133
  %part217 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %192, i32 0, i32 2, !dbg !7135
  %193 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part217, align 8, !dbg !7135
  %boids = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %193, i32 0, i32 2, !dbg !7136
  %194 = load %struct.BoidSettings*, %struct.BoidSettings** %boids, align 8, !dbg !7136
  %tobool218 = icmp ne %struct.BoidSettings* %194, null, !dbg !7133
  br i1 %tobool218, label %if.then219, label %if.end259, !dbg !7137

if.then219:                                       ; preds = %if.end216
  %195 = load %struct.ParticleSystem*, %struct.ParticleSystem** %tpsys, align 8, !dbg !7138
  %part220 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %195, i32 0, i32 2, !dbg !7141
  %196 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part220, align 8, !dbg !7141
  %boids221 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %196, i32 0, i32 2, !dbg !7142
  %197 = load %struct.BoidSettings*, %struct.BoidSettings** %boids221, align 8, !dbg !7142
  %states = getelementptr inbounds %struct.BoidSettings, %struct.BoidSettings* %197, i32 0, i32 22, !dbg !7143
  %first222 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %states, i32 0, i32 0, !dbg !7144
  %198 = load i8*, i8** %first222, align 8, !dbg !7144
  %199 = bitcast i8* %198 to %struct.BoidState*, !dbg !7138
  store %struct.BoidState* %199, %struct.BoidState** %state, align 8, !dbg !7145
  br label %for.cond223, !dbg !7146

for.cond223:                                      ; preds = %for.inc256, %if.then219
  %200 = load %struct.BoidState*, %struct.BoidState** %state, align 8, !dbg !7147
  %tobool224 = icmp ne %struct.BoidState* %200, null, !dbg !7149
  br i1 %tobool224, label %for.body225, label %for.end258, !dbg !7149

for.body225:                                      ; preds = %for.cond223
  %201 = load %struct.BoidState*, %struct.BoidState** %state, align 8, !dbg !7150
  %rules = getelementptr inbounds %struct.BoidState, %struct.BoidState* %201, i32 0, i32 2, !dbg !7153
  %first226 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %rules, i32 0, i32 0, !dbg !7154
  %202 = load i8*, i8** %first226, align 8, !dbg !7154
  %203 = bitcast i8* %202 to %struct.BoidRule*, !dbg !7150
  store %struct.BoidRule* %203, %struct.BoidRule** %rule, align 8, !dbg !7155
  br label %for.cond227, !dbg !7156

for.cond227:                                      ; preds = %for.inc253, %for.body225
  %204 = load %struct.BoidRule*, %struct.BoidRule** %rule, align 8, !dbg !7157
  %tobool228 = icmp ne %struct.BoidRule* %204, null, !dbg !7159
  br i1 %tobool228, label %for.body229, label %for.end255, !dbg !7159

for.body229:                                      ; preds = %for.cond227
  %205 = load %struct.BoidRule*, %struct.BoidRule** %rule, align 8, !dbg !7160
  %type230 = getelementptr inbounds %struct.BoidRule, %struct.BoidRule* %205, i32 0, i32 2, !dbg !7163
  %206 = load i32, i32* %type230, align 8, !dbg !7163
  %cmp231 = icmp eq i32 %206, 2, !dbg !7164
  br i1 %cmp231, label %if.then233, label %if.else240, !dbg !7165

if.then233:                                       ; preds = %for.body229
  call void @llvm.dbg.declare(metadata %struct.BoidRuleGoalAvoid** %gabr, metadata !7166, metadata !DIExpression()), !dbg !7168
  %207 = load %struct.BoidRule*, %struct.BoidRule** %rule, align 8, !dbg !7169
  %208 = bitcast %struct.BoidRule* %207 to %struct.BoidRuleGoalAvoid*, !dbg !7170
  store %struct.BoidRuleGoalAvoid* %208, %struct.BoidRuleGoalAvoid** %gabr, align 8, !dbg !7168
  %209 = load %struct.BoidRuleGoalAvoid*, %struct.BoidRuleGoalAvoid** %gabr, align 8, !dbg !7171
  %ob234 = getelementptr inbounds %struct.BoidRuleGoalAvoid, %struct.BoidRuleGoalAvoid* %209, i32 0, i32 1, !dbg !7173
  %210 = load %struct.Object*, %struct.Object** %ob234, align 8, !dbg !7173
  %211 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7174
  %cmp235 = icmp eq %struct.Object* %210, %211, !dbg !7175
  br i1 %cmp235, label %if.then237, label %if.end239, !dbg !7176

if.then237:                                       ; preds = %if.then233
  %212 = load %struct.BoidRuleGoalAvoid*, %struct.BoidRuleGoalAvoid** %gabr, align 8, !dbg !7177
  %ob238 = getelementptr inbounds %struct.BoidRuleGoalAvoid, %struct.BoidRuleGoalAvoid* %212, i32 0, i32 1, !dbg !7178
  store %struct.Object* null, %struct.Object** %ob238, align 8, !dbg !7179
  br label %if.end239, !dbg !7177

if.end239:                                        ; preds = %if.then237, %if.then233
  br label %if.end252, !dbg !7180

if.else240:                                       ; preds = %for.body229
  %213 = load %struct.BoidRule*, %struct.BoidRule** %rule, align 8, !dbg !7181
  %type241 = getelementptr inbounds %struct.BoidRule, %struct.BoidRule* %213, i32 0, i32 2, !dbg !7183
  %214 = load i32, i32* %type241, align 8, !dbg !7183
  %cmp242 = icmp eq i32 %214, 6, !dbg !7184
  br i1 %cmp242, label %if.then244, label %if.end251, !dbg !7185

if.then244:                                       ; preds = %if.else240
  call void @llvm.dbg.declare(metadata %struct.BoidRuleFollowLeader** %flbr, metadata !7186, metadata !DIExpression()), !dbg !7188
  %215 = load %struct.BoidRule*, %struct.BoidRule** %rule, align 8, !dbg !7189
  %216 = bitcast %struct.BoidRule* %215 to %struct.BoidRuleFollowLeader*, !dbg !7190
  store %struct.BoidRuleFollowLeader* %216, %struct.BoidRuleFollowLeader** %flbr, align 8, !dbg !7188
  %217 = load %struct.BoidRuleFollowLeader*, %struct.BoidRuleFollowLeader** %flbr, align 8, !dbg !7191
  %ob245 = getelementptr inbounds %struct.BoidRuleFollowLeader, %struct.BoidRuleFollowLeader* %217, i32 0, i32 1, !dbg !7193
  %218 = load %struct.Object*, %struct.Object** %ob245, align 8, !dbg !7193
  %219 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7194
  %cmp246 = icmp eq %struct.Object* %218, %219, !dbg !7195
  br i1 %cmp246, label %if.then248, label %if.end250, !dbg !7196

if.then248:                                       ; preds = %if.then244
  %220 = load %struct.BoidRuleFollowLeader*, %struct.BoidRuleFollowLeader** %flbr, align 8, !dbg !7197
  %ob249 = getelementptr inbounds %struct.BoidRuleFollowLeader, %struct.BoidRuleFollowLeader* %220, i32 0, i32 1, !dbg !7198
  store %struct.Object* null, %struct.Object** %ob249, align 8, !dbg !7199
  br label %if.end250, !dbg !7197

if.end250:                                        ; preds = %if.then248, %if.then244
  br label %if.end251, !dbg !7200

if.end251:                                        ; preds = %if.end250, %if.else240
  br label %if.end252

if.end252:                                        ; preds = %if.end251, %if.end239
  br label %for.inc253, !dbg !7201

for.inc253:                                       ; preds = %if.end252
  %221 = load %struct.BoidRule*, %struct.BoidRule** %rule, align 8, !dbg !7202
  %next254 = getelementptr inbounds %struct.BoidRule, %struct.BoidRule* %221, i32 0, i32 0, !dbg !7203
  %222 = load %struct.BoidRule*, %struct.BoidRule** %next254, align 8, !dbg !7203
  store %struct.BoidRule* %222, %struct.BoidRule** %rule, align 8, !dbg !7204
  br label %for.cond227, !dbg !7205, !llvm.loop !7206

for.end255:                                       ; preds = %for.cond227
  br label %for.inc256, !dbg !7208

for.inc256:                                       ; preds = %for.end255
  %223 = load %struct.BoidState*, %struct.BoidState** %state, align 8, !dbg !7209
  %next257 = getelementptr inbounds %struct.BoidState, %struct.BoidState* %223, i32 0, i32 0, !dbg !7210
  %224 = load %struct.BoidState*, %struct.BoidState** %next257, align 8, !dbg !7210
  store %struct.BoidState* %224, %struct.BoidState** %state, align 8, !dbg !7211
  br label %for.cond223, !dbg !7212, !llvm.loop !7213

for.end258:                                       ; preds = %for.cond223
  br label %if.end259, !dbg !7215

if.end259:                                        ; preds = %for.end258, %if.end216
  %225 = load %struct.ParticleSystem*, %struct.ParticleSystem** %tpsys, align 8, !dbg !7216
  %parent260 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %225, i32 0, i32 16, !dbg !7218
  %226 = load %struct.Object*, %struct.Object** %parent260, align 8, !dbg !7218
  %227 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7219
  %cmp261 = icmp eq %struct.Object* %226, %227, !dbg !7220
  br i1 %cmp261, label %if.then263, label %if.end265, !dbg !7221

if.then263:                                       ; preds = %if.end259
  %228 = load %struct.ParticleSystem*, %struct.ParticleSystem** %tpsys, align 8, !dbg !7222
  %parent264 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %228, i32 0, i32 16, !dbg !7223
  store %struct.Object* null, %struct.Object** %parent264, align 8, !dbg !7224
  br label %if.end265, !dbg !7222

if.end265:                                        ; preds = %if.then263, %if.end259
  br label %for.inc266, !dbg !7225

for.inc266:                                       ; preds = %if.end265
  %229 = load %struct.ParticleSystem*, %struct.ParticleSystem** %tpsys, align 8, !dbg !7226
  %next267 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %229, i32 0, i32 0, !dbg !7227
  %230 = load %struct.ParticleSystem*, %struct.ParticleSystem** %next267, align 8, !dbg !7227
  store %struct.ParticleSystem* %230, %struct.ParticleSystem** %tpsys, align 8, !dbg !7228
  br label %for.cond170, !dbg !7229, !llvm.loop !7230

for.end268:                                       ; preds = %for.cond170
  %231 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7232
  %pd269 = getelementptr inbounds %struct.Object, %struct.Object* %231, i32 0, i32 110, !dbg !7234
  %232 = load %struct.PartDeflect*, %struct.PartDeflect** %pd269, align 8, !dbg !7234
  %tobool270 = icmp ne %struct.PartDeflect* %232, null, !dbg !7232
  br i1 %tobool270, label %if.then271, label %if.end273, !dbg !7235

if.then271:                                       ; preds = %for.end268
  %233 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !7236
  %id272 = getelementptr inbounds %struct.Object, %struct.Object* %233, i32 0, i32 0, !dbg !7237
  call void @DAG_id_tag_update(%struct.ID* %id272, i16 signext 2), !dbg !7238
  br label %if.end273, !dbg !7238

if.end273:                                        ; preds = %if.then271, %for.end268
  br label %if.end274, !dbg !7239

if.end274:                                        ; preds = %if.end273, %if.end164
  %234 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !7240
  %lodlevels = getelementptr inbounds %struct.Object, %struct.Object* %234, i32 0, i32 132, !dbg !7242
  %first275 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lodlevels, i32 0, i32 0, !dbg !7243
  %235 = load i8*, i8** %first275, align 8, !dbg !7243
  %236 = bitcast i8* %235 to %struct.LodLevel*, !dbg !7240
  store %struct.LodLevel* %236, %struct.LodLevel** %lod, align 8, !dbg !7244
  br label %for.cond276, !dbg !7245

for.cond276:                                      ; preds = %for.inc284, %if.end274
  %237 = load %struct.LodLevel*, %struct.LodLevel** %lod, align 8, !dbg !7246
  %tobool277 = icmp ne %struct.LodLevel* %237, null, !dbg !7248
  br i1 %tobool277, label %for.body278, label %for.end286, !dbg !7248

for.body278:                                      ; preds = %for.cond276
  %238 = load %struct.LodLevel*, %struct.LodLevel** %lod, align 8, !dbg !7249
  %source = getelementptr inbounds %struct.LodLevel, %struct.LodLevel* %238, i32 0, i32 2, !dbg !7252
  %239 = load %struct.Object*, %struct.Object** %source, align 8, !dbg !7252
  %240 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7253
  %cmp279 = icmp eq %struct.Object* %239, %240, !dbg !7254
  br i1 %cmp279, label %if.then281, label %if.end283, !dbg !7255

if.then281:                                       ; preds = %for.body278
  %241 = load %struct.LodLevel*, %struct.LodLevel** %lod, align 8, !dbg !7256
  %source282 = getelementptr inbounds %struct.LodLevel, %struct.LodLevel* %241, i32 0, i32 2, !dbg !7257
  store %struct.Object* null, %struct.Object** %source282, align 8, !dbg !7258
  br label %if.end283, !dbg !7256

if.end283:                                        ; preds = %if.then281, %for.body278
  br label %for.inc284, !dbg !7259

for.inc284:                                       ; preds = %if.end283
  %242 = load %struct.LodLevel*, %struct.LodLevel** %lod, align 8, !dbg !7260
  %next285 = getelementptr inbounds %struct.LodLevel, %struct.LodLevel* %242, i32 0, i32 0, !dbg !7261
  %243 = load %struct.LodLevel*, %struct.LodLevel** %next285, align 8, !dbg !7261
  store %struct.LodLevel* %243, %struct.LodLevel** %lod, align 8, !dbg !7262
  br label %for.cond276, !dbg !7263, !llvm.loop !7264

for.end286:                                       ; preds = %for.cond276
  %244 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !7266
  %id287 = getelementptr inbounds %struct.Object, %struct.Object* %244, i32 0, i32 0, !dbg !7267
  %next288 = getelementptr inbounds %struct.ID, %struct.ID* %id287, i32 0, i32 0, !dbg !7268
  %245 = load i8*, i8** %next288, align 8, !dbg !7268
  %246 = bitcast i8* %245 to %struct.Object*, !dbg !7266
  store %struct.Object* %246, %struct.Object** %obt, align 8, !dbg !7269
  br label %while.cond, !dbg !6565, !llvm.loop !7270

while.end:                                        ; preds = %while.cond
  %247 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !7272
  %mat289 = getelementptr inbounds %struct.Main, %struct.Main* %247, i32 0, i32 17, !dbg !7273
  %first290 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mat289, i32 0, i32 0, !dbg !7274
  %248 = load i8*, i8** %first290, align 8, !dbg !7274
  %249 = bitcast i8* %248 to %struct.Material*, !dbg !7272
  store %struct.Material* %249, %struct.Material** %mat, align 8, !dbg !7275
  br label %while.cond291, !dbg !7276

while.cond291:                                    ; preds = %for.end315, %while.end
  %250 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !7277
  %tobool292 = icmp ne %struct.Material* %250, null, !dbg !7276
  br i1 %tobool292, label %while.body293, label %while.end318, !dbg !7276

while.body293:                                    ; preds = %while.cond291
  store i32 0, i32* %a, align 4, !dbg !7278
  br label %for.cond294, !dbg !7281

for.cond294:                                      ; preds = %for.inc313, %while.body293
  %251 = load i32, i32* %a, align 4, !dbg !7282
  %cmp295 = icmp slt i32 %251, 18, !dbg !7284
  br i1 %cmp295, label %for.body297, label %for.end315, !dbg !7285

for.body297:                                      ; preds = %for.cond294
  %252 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !7286
  %mtex = getelementptr inbounds %struct.Material, %struct.Material* %252, i32 0, i32 102, !dbg !7289
  %253 = load i32, i32* %a, align 4, !dbg !7290
  %idxprom = sext i32 %253 to i64, !dbg !7286
  %arrayidx298 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex, i64 0, i64 %idxprom, !dbg !7286
  %254 = load %struct.MTex*, %struct.MTex** %arrayidx298, align 8, !dbg !7286
  %tobool299 = icmp ne %struct.MTex* %254, null, !dbg !7286
  br i1 %tobool299, label %land.lhs.true300, label %if.end312, !dbg !7291

land.lhs.true300:                                 ; preds = %for.body297
  %255 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7292
  %256 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !7293
  %mtex301 = getelementptr inbounds %struct.Material, %struct.Material* %256, i32 0, i32 102, !dbg !7294
  %257 = load i32, i32* %a, align 4, !dbg !7295
  %idxprom302 = sext i32 %257 to i64, !dbg !7293
  %arrayidx303 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex301, i64 0, i64 %idxprom302, !dbg !7293
  %258 = load %struct.MTex*, %struct.MTex** %arrayidx303, align 8, !dbg !7293
  %object304 = getelementptr inbounds %struct.MTex, %struct.MTex* %258, i32 0, i32 4, !dbg !7296
  %259 = load %struct.Object*, %struct.Object** %object304, align 8, !dbg !7296
  %cmp305 = icmp eq %struct.Object* %255, %259, !dbg !7297
  br i1 %cmp305, label %if.then307, label %if.end312, !dbg !7298

if.then307:                                       ; preds = %land.lhs.true300
  %260 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !7299
  %mtex308 = getelementptr inbounds %struct.Material, %struct.Material* %260, i32 0, i32 102, !dbg !7301
  %261 = load i32, i32* %a, align 4, !dbg !7302
  %idxprom309 = sext i32 %261 to i64, !dbg !7299
  %arrayidx310 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex308, i64 0, i64 %idxprom309, !dbg !7299
  %262 = load %struct.MTex*, %struct.MTex** %arrayidx310, align 8, !dbg !7299
  %object311 = getelementptr inbounds %struct.MTex, %struct.MTex* %262, i32 0, i32 4, !dbg !7303
  store %struct.Object* null, %struct.Object** %object311, align 8, !dbg !7304
  br label %if.end312, !dbg !7305

if.end312:                                        ; preds = %if.then307, %land.lhs.true300, %for.body297
  br label %for.inc313, !dbg !7306

for.inc313:                                       ; preds = %if.end312
  %263 = load i32, i32* %a, align 4, !dbg !7307
  %inc314 = add nsw i32 %263, 1, !dbg !7307
  store i32 %inc314, i32* %a, align 4, !dbg !7307
  br label %for.cond294, !dbg !7308, !llvm.loop !7309

for.end315:                                       ; preds = %for.cond294
  %264 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !7311
  %id316 = getelementptr inbounds %struct.Material, %struct.Material* %264, i32 0, i32 0, !dbg !7312
  %next317 = getelementptr inbounds %struct.ID, %struct.ID* %id316, i32 0, i32 0, !dbg !7313
  %265 = load i8*, i8** %next317, align 8, !dbg !7313
  %266 = bitcast i8* %265 to %struct.Material*, !dbg !7311
  store %struct.Material* %266, %struct.Material** %mat, align 8, !dbg !7314
  br label %while.cond291, !dbg !7276, !llvm.loop !7315

while.end318:                                     ; preds = %while.cond291
  %267 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !7317
  %tex319 = getelementptr inbounds %struct.Main, %struct.Main* %267, i32 0, i32 18, !dbg !7319
  %first320 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %tex319, i32 0, i32 0, !dbg !7320
  %268 = load i8*, i8** %first320, align 8, !dbg !7320
  %269 = bitcast i8* %268 to %struct.Tex*, !dbg !7317
  store %struct.Tex* %269, %struct.Tex** %tex, align 8, !dbg !7321
  br label %for.cond321, !dbg !7322

for.cond321:                                      ; preds = %for.inc355, %while.end318
  %270 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !7323
  %tobool322 = icmp ne %struct.Tex* %270, null, !dbg !7325
  br i1 %tobool322, label %for.body323, label %for.end358, !dbg !7325

for.body323:                                      ; preds = %for.cond321
  %271 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !7326
  %env = getelementptr inbounds %struct.Tex, %struct.Tex* %271, i32 0, i32 56, !dbg !7329
  %272 = load %struct.EnvMap*, %struct.EnvMap** %env, align 8, !dbg !7329
  %tobool324 = icmp ne %struct.EnvMap* %272, null, !dbg !7326
  br i1 %tobool324, label %land.lhs.true325, label %if.end333, !dbg !7330

land.lhs.true325:                                 ; preds = %for.body323
  %273 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7331
  %274 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !7332
  %env326 = getelementptr inbounds %struct.Tex, %struct.Tex* %274, i32 0, i32 56, !dbg !7333
  %275 = load %struct.EnvMap*, %struct.EnvMap** %env326, align 8, !dbg !7333
  %object327 = getelementptr inbounds %struct.EnvMap, %struct.EnvMap* %275, i32 0, i32 0, !dbg !7334
  %276 = load %struct.Object*, %struct.Object** %object327, align 8, !dbg !7334
  %cmp328 = icmp eq %struct.Object* %273, %276, !dbg !7335
  br i1 %cmp328, label %if.then330, label %if.end333, !dbg !7336

if.then330:                                       ; preds = %land.lhs.true325
  %277 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !7337
  %env331 = getelementptr inbounds %struct.Tex, %struct.Tex* %277, i32 0, i32 56, !dbg !7338
  %278 = load %struct.EnvMap*, %struct.EnvMap** %env331, align 8, !dbg !7338
  %object332 = getelementptr inbounds %struct.EnvMap, %struct.EnvMap* %278, i32 0, i32 0, !dbg !7339
  store %struct.Object* null, %struct.Object** %object332, align 8, !dbg !7340
  br label %if.end333, !dbg !7337

if.end333:                                        ; preds = %if.then330, %land.lhs.true325, %for.body323
  %279 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !7341
  %pd334 = getelementptr inbounds %struct.Tex, %struct.Tex* %279, i32 0, i32 58, !dbg !7343
  %280 = load %struct.PointDensity*, %struct.PointDensity** %pd334, align 8, !dbg !7343
  %tobool335 = icmp ne %struct.PointDensity* %280, null, !dbg !7341
  br i1 %tobool335, label %land.lhs.true336, label %if.end344, !dbg !7344

land.lhs.true336:                                 ; preds = %if.end333
  %281 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7345
  %282 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !7346
  %pd337 = getelementptr inbounds %struct.Tex, %struct.Tex* %282, i32 0, i32 58, !dbg !7347
  %283 = load %struct.PointDensity*, %struct.PointDensity** %pd337, align 8, !dbg !7347
  %object338 = getelementptr inbounds %struct.PointDensity, %struct.PointDensity* %283, i32 0, i32 8, !dbg !7348
  %284 = load %struct.Object*, %struct.Object** %object338, align 8, !dbg !7348
  %cmp339 = icmp eq %struct.Object* %281, %284, !dbg !7349
  br i1 %cmp339, label %if.then341, label %if.end344, !dbg !7350

if.then341:                                       ; preds = %land.lhs.true336
  %285 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !7351
  %pd342 = getelementptr inbounds %struct.Tex, %struct.Tex* %285, i32 0, i32 58, !dbg !7352
  %286 = load %struct.PointDensity*, %struct.PointDensity** %pd342, align 8, !dbg !7352
  %object343 = getelementptr inbounds %struct.PointDensity, %struct.PointDensity* %286, i32 0, i32 8, !dbg !7353
  store %struct.Object* null, %struct.Object** %object343, align 8, !dbg !7354
  br label %if.end344, !dbg !7351

if.end344:                                        ; preds = %if.then341, %land.lhs.true336, %if.end333
  %287 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !7355
  %vd = getelementptr inbounds %struct.Tex, %struct.Tex* %287, i32 0, i32 59, !dbg !7357
  %288 = load %struct.VoxelData*, %struct.VoxelData** %vd, align 8, !dbg !7357
  %tobool345 = icmp ne %struct.VoxelData* %288, null, !dbg !7355
  br i1 %tobool345, label %land.lhs.true346, label %if.end354, !dbg !7358

land.lhs.true346:                                 ; preds = %if.end344
  %289 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7359
  %290 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !7360
  %vd347 = getelementptr inbounds %struct.Tex, %struct.Tex* %290, i32 0, i32 59, !dbg !7361
  %291 = load %struct.VoxelData*, %struct.VoxelData** %vd347, align 8, !dbg !7361
  %object348 = getelementptr inbounds %struct.VoxelData, %struct.VoxelData* %291, i32 0, i32 9, !dbg !7362
  %292 = load %struct.Object*, %struct.Object** %object348, align 8, !dbg !7362
  %cmp349 = icmp eq %struct.Object* %289, %292, !dbg !7363
  br i1 %cmp349, label %if.then351, label %if.end354, !dbg !7364

if.then351:                                       ; preds = %land.lhs.true346
  %293 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !7365
  %vd352 = getelementptr inbounds %struct.Tex, %struct.Tex* %293, i32 0, i32 59, !dbg !7366
  %294 = load %struct.VoxelData*, %struct.VoxelData** %vd352, align 8, !dbg !7366
  %object353 = getelementptr inbounds %struct.VoxelData, %struct.VoxelData* %294, i32 0, i32 9, !dbg !7367
  store %struct.Object* null, %struct.Object** %object353, align 8, !dbg !7368
  br label %if.end354, !dbg !7365

if.end354:                                        ; preds = %if.then351, %land.lhs.true346, %if.end344
  br label %for.inc355, !dbg !7369

for.inc355:                                       ; preds = %if.end354
  %295 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !7370
  %id356 = getelementptr inbounds %struct.Tex, %struct.Tex* %295, i32 0, i32 0, !dbg !7371
  %next357 = getelementptr inbounds %struct.ID, %struct.ID* %id356, i32 0, i32 0, !dbg !7372
  %296 = load i8*, i8** %next357, align 8, !dbg !7372
  %297 = bitcast i8* %296 to %struct.Tex*, !dbg !7370
  store %struct.Tex* %297, %struct.Tex** %tex, align 8, !dbg !7373
  br label %for.cond321, !dbg !7374, !llvm.loop !7375

for.end358:                                       ; preds = %for.cond321
  %298 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !7377
  %world = getelementptr inbounds %struct.Main, %struct.Main* %298, i32 0, i32 25, !dbg !7378
  %first359 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %world, i32 0, i32 0, !dbg !7379
  %299 = load i8*, i8** %first359, align 8, !dbg !7379
  %300 = bitcast i8* %299 to %struct.World*, !dbg !7377
  store %struct.World* %300, %struct.World** %wrld, align 8, !dbg !7380
  br label %while.cond360, !dbg !7381

while.cond360:                                    ; preds = %if.end391, %for.end358
  %301 = load %struct.World*, %struct.World** %wrld, align 8, !dbg !7382
  %tobool361 = icmp ne %struct.World* %301, null, !dbg !7381
  br i1 %tobool361, label %while.body362, label %while.end394, !dbg !7381

while.body362:                                    ; preds = %while.cond360
  %302 = load %struct.World*, %struct.World** %wrld, align 8, !dbg !7383
  %id363 = getelementptr inbounds %struct.World, %struct.World* %302, i32 0, i32 0, !dbg !7386
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id363, i32 0, i32 3, !dbg !7387
  %303 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !7387
  %cmp364 = icmp eq %struct.Library* %303, null, !dbg !7388
  br i1 %cmp364, label %if.then366, label %if.end391, !dbg !7389

if.then366:                                       ; preds = %while.body362
  store i32 0, i32* %a, align 4, !dbg !7390
  br label %for.cond367, !dbg !7393

for.cond367:                                      ; preds = %for.inc388, %if.then366
  %304 = load i32, i32* %a, align 4, !dbg !7394
  %cmp368 = icmp slt i32 %304, 18, !dbg !7396
  br i1 %cmp368, label %for.body370, label %for.end390, !dbg !7397

for.body370:                                      ; preds = %for.cond367
  %305 = load %struct.World*, %struct.World** %wrld, align 8, !dbg !7398
  %mtex371 = getelementptr inbounds %struct.World, %struct.World* %305, i32 0, i32 70, !dbg !7401
  %306 = load i32, i32* %a, align 4, !dbg !7402
  %idxprom372 = sext i32 %306 to i64, !dbg !7398
  %arrayidx373 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex371, i64 0, i64 %idxprom372, !dbg !7398
  %307 = load %struct.MTex*, %struct.MTex** %arrayidx373, align 8, !dbg !7398
  %tobool374 = icmp ne %struct.MTex* %307, null, !dbg !7398
  br i1 %tobool374, label %land.lhs.true375, label %if.end387, !dbg !7403

land.lhs.true375:                                 ; preds = %for.body370
  %308 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7404
  %309 = load %struct.World*, %struct.World** %wrld, align 8, !dbg !7405
  %mtex376 = getelementptr inbounds %struct.World, %struct.World* %309, i32 0, i32 70, !dbg !7406
  %310 = load i32, i32* %a, align 4, !dbg !7407
  %idxprom377 = sext i32 %310 to i64, !dbg !7405
  %arrayidx378 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex376, i64 0, i64 %idxprom377, !dbg !7405
  %311 = load %struct.MTex*, %struct.MTex** %arrayidx378, align 8, !dbg !7405
  %object379 = getelementptr inbounds %struct.MTex, %struct.MTex* %311, i32 0, i32 4, !dbg !7408
  %312 = load %struct.Object*, %struct.Object** %object379, align 8, !dbg !7408
  %cmp380 = icmp eq %struct.Object* %308, %312, !dbg !7409
  br i1 %cmp380, label %if.then382, label %if.end387, !dbg !7410

if.then382:                                       ; preds = %land.lhs.true375
  %313 = load %struct.World*, %struct.World** %wrld, align 8, !dbg !7411
  %mtex383 = getelementptr inbounds %struct.World, %struct.World* %313, i32 0, i32 70, !dbg !7412
  %314 = load i32, i32* %a, align 4, !dbg !7413
  %idxprom384 = sext i32 %314 to i64, !dbg !7411
  %arrayidx385 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex383, i64 0, i64 %idxprom384, !dbg !7411
  %315 = load %struct.MTex*, %struct.MTex** %arrayidx385, align 8, !dbg !7411
  %object386 = getelementptr inbounds %struct.MTex, %struct.MTex* %315, i32 0, i32 4, !dbg !7414
  store %struct.Object* null, %struct.Object** %object386, align 8, !dbg !7415
  br label %if.end387, !dbg !7411

if.end387:                                        ; preds = %if.then382, %land.lhs.true375, %for.body370
  br label %for.inc388, !dbg !7416

for.inc388:                                       ; preds = %if.end387
  %316 = load i32, i32* %a, align 4, !dbg !7417
  %inc389 = add nsw i32 %316, 1, !dbg !7417
  store i32 %inc389, i32* %a, align 4, !dbg !7417
  br label %for.cond367, !dbg !7418, !llvm.loop !7419

for.end390:                                       ; preds = %for.cond367
  br label %if.end391, !dbg !7421

if.end391:                                        ; preds = %for.end390, %while.body362
  %317 = load %struct.World*, %struct.World** %wrld, align 8, !dbg !7422
  %id392 = getelementptr inbounds %struct.World, %struct.World* %317, i32 0, i32 0, !dbg !7423
  %next393 = getelementptr inbounds %struct.ID, %struct.ID* %id392, i32 0, i32 0, !dbg !7424
  %318 = load i8*, i8** %next393, align 8, !dbg !7424
  %319 = bitcast i8* %318 to %struct.World*, !dbg !7422
  store %struct.World* %319, %struct.World** %wrld, align 8, !dbg !7425
  br label %while.cond360, !dbg !7381, !llvm.loop !7426

while.end394:                                     ; preds = %while.cond360
  %320 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !7428
  %scene = getelementptr inbounds %struct.Main, %struct.Main* %320, i32 0, i32 11, !dbg !7429
  %first395 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %scene, i32 0, i32 0, !dbg !7430
  %321 = load i8*, i8** %first395, align 8, !dbg !7430
  %322 = bitcast i8* %321 to %struct.Scene*, !dbg !7428
  store %struct.Scene* %322, %struct.Scene** %sce, align 8, !dbg !7431
  br label %while.cond396, !dbg !7432

while.cond396:                                    ; preds = %if.end471, %while.end394
  %323 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !7433
  %tobool397 = icmp ne %struct.Scene* %323, null, !dbg !7432
  br i1 %tobool397, label %while.body398, label %while.end474, !dbg !7432

while.body398:                                    ; preds = %while.cond396
  %324 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !7434
  %id399 = getelementptr inbounds %struct.Scene, %struct.Scene* %324, i32 0, i32 0, !dbg !7437
  %lib400 = getelementptr inbounds %struct.ID, %struct.ID* %id399, i32 0, i32 3, !dbg !7438
  %325 = load %struct.Library*, %struct.Library** %lib400, align 8, !dbg !7438
  %cmp401 = icmp eq %struct.Library* %325, null, !dbg !7439
  br i1 %cmp401, label %if.then403, label %if.end471, !dbg !7440

if.then403:                                       ; preds = %while.body398
  %326 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !7441
  %camera404 = getelementptr inbounds %struct.Scene, %struct.Scene* %326, i32 0, i32 2, !dbg !7444
  %327 = load %struct.Object*, %struct.Object** %camera404, align 8, !dbg !7444
  %328 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7445
  %cmp405 = icmp eq %struct.Object* %327, %328, !dbg !7446
  br i1 %cmp405, label %if.then407, label %if.end409, !dbg !7447

if.then407:                                       ; preds = %if.then403
  %329 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !7448
  %camera408 = getelementptr inbounds %struct.Scene, %struct.Scene* %329, i32 0, i32 2, !dbg !7449
  store %struct.Object* null, %struct.Object** %camera408, align 8, !dbg !7450
  br label %if.end409, !dbg !7448

if.end409:                                        ; preds = %if.then407, %if.then403
  %330 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !7451
  %toolsettings = getelementptr inbounds %struct.Scene, %struct.Scene* %330, i32 0, i32 20, !dbg !7453
  %331 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings, align 8, !dbg !7453
  %skgen_template = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %331, i32 0, i32 41, !dbg !7454
  %332 = load %struct.Object*, %struct.Object** %skgen_template, align 8, !dbg !7454
  %333 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7455
  %cmp410 = icmp eq %struct.Object* %332, %333, !dbg !7456
  br i1 %cmp410, label %if.then412, label %if.end415, !dbg !7457

if.then412:                                       ; preds = %if.end409
  %334 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !7458
  %toolsettings413 = getelementptr inbounds %struct.Scene, %struct.Scene* %334, i32 0, i32 20, !dbg !7459
  %335 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings413, align 8, !dbg !7459
  %skgen_template414 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %335, i32 0, i32 41, !dbg !7460
  store %struct.Object* null, %struct.Object** %skgen_template414, align 8, !dbg !7461
  br label %if.end415, !dbg !7458

if.end415:                                        ; preds = %if.then412, %if.end409
  %336 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !7462
  %toolsettings416 = getelementptr inbounds %struct.Scene, %struct.Scene* %336, i32 0, i32 20, !dbg !7464
  %337 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings416, align 8, !dbg !7464
  %particle = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %337, i32 0, i32 18, !dbg !7465
  %object417 = getelementptr inbounds %struct.ParticleEditSettings, %struct.ParticleEditSettings* %particle, i32 0, i32 13, !dbg !7466
  %338 = load %struct.Object*, %struct.Object** %object417, align 8, !dbg !7466
  %339 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7467
  %cmp418 = icmp eq %struct.Object* %338, %339, !dbg !7468
  br i1 %cmp418, label %if.then420, label %if.end424, !dbg !7469

if.then420:                                       ; preds = %if.end415
  %340 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !7470
  %toolsettings421 = getelementptr inbounds %struct.Scene, %struct.Scene* %340, i32 0, i32 20, !dbg !7471
  %341 = load %struct.ToolSettings*, %struct.ToolSettings** %toolsettings421, align 8, !dbg !7471
  %particle422 = getelementptr inbounds %struct.ToolSettings, %struct.ToolSettings* %341, i32 0, i32 18, !dbg !7472
  %object423 = getelementptr inbounds %struct.ParticleEditSettings, %struct.ParticleEditSettings* %particle422, i32 0, i32 13, !dbg !7473
  store %struct.Object* null, %struct.Object** %object423, align 8, !dbg !7474
  br label %if.end424, !dbg !7470

if.end424:                                        ; preds = %if.then420, %if.end415
  call void @llvm.dbg.declare(metadata %struct.TimeMarker** %m, metadata !7475, metadata !DIExpression()), !dbg !7488
  %342 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !7489
  %markers = getelementptr inbounds %struct.Scene, %struct.Scene* %342, i32 0, i32 24, !dbg !7491
  %first425 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %markers, i32 0, i32 0, !dbg !7492
  %343 = load i8*, i8** %first425, align 8, !dbg !7492
  %344 = bitcast i8* %343 to %struct.TimeMarker*, !dbg !7489
  store %struct.TimeMarker* %344, %struct.TimeMarker** %m, align 8, !dbg !7493
  br label %for.cond426, !dbg !7494

for.cond426:                                      ; preds = %for.inc435, %if.end424
  %345 = load %struct.TimeMarker*, %struct.TimeMarker** %m, align 8, !dbg !7495
  %tobool427 = icmp ne %struct.TimeMarker* %345, null, !dbg !7497
  br i1 %tobool427, label %for.body428, label %for.end437, !dbg !7497

for.body428:                                      ; preds = %for.cond426
  %346 = load %struct.TimeMarker*, %struct.TimeMarker** %m, align 8, !dbg !7498
  %camera429 = getelementptr inbounds %struct.TimeMarker, %struct.TimeMarker* %346, i32 0, i32 5, !dbg !7501
  %347 = load %struct.Object*, %struct.Object** %camera429, align 8, !dbg !7501
  %348 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7502
  %cmp430 = icmp eq %struct.Object* %347, %348, !dbg !7503
  br i1 %cmp430, label %if.then432, label %if.end434, !dbg !7504

if.then432:                                       ; preds = %for.body428
  %349 = load %struct.TimeMarker*, %struct.TimeMarker** %m, align 8, !dbg !7505
  %camera433 = getelementptr inbounds %struct.TimeMarker, %struct.TimeMarker* %349, i32 0, i32 5, !dbg !7506
  store %struct.Object* null, %struct.Object** %camera433, align 8, !dbg !7507
  br label %if.end434, !dbg !7505

if.end434:                                        ; preds = %if.then432, %for.body428
  br label %for.inc435, !dbg !7508

for.inc435:                                       ; preds = %if.end434
  %350 = load %struct.TimeMarker*, %struct.TimeMarker** %m, align 8, !dbg !7509
  %next436 = getelementptr inbounds %struct.TimeMarker, %struct.TimeMarker* %350, i32 0, i32 0, !dbg !7510
  %351 = load %struct.TimeMarker*, %struct.TimeMarker** %next436, align 8, !dbg !7510
  store %struct.TimeMarker* %351, %struct.TimeMarker** %m, align 8, !dbg !7511
  br label %for.cond426, !dbg !7512, !llvm.loop !7513

for.end437:                                       ; preds = %for.cond426
  %352 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !7515
  %ed = getelementptr inbounds %struct.Scene, %struct.Scene* %352, i32 0, i32 19, !dbg !7517
  %353 = load %struct.Editing*, %struct.Editing** %ed, align 8, !dbg !7517
  %tobool438 = icmp ne %struct.Editing* %353, null, !dbg !7515
  br i1 %tobool438, label %if.then439, label %if.end452, !dbg !7518

if.then439:                                       ; preds = %for.end437
  call void @llvm.dbg.declare(metadata %struct.Sequence** %seq, metadata !7519, metadata !DIExpression()), !dbg !7521
  call void @llvm.dbg.declare(metadata %struct.SeqIterator* %iter_macro, metadata !7522, metadata !DIExpression()), !dbg !7534
  %354 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !7535
  %ed440 = getelementptr inbounds %struct.Scene, %struct.Scene* %354, i32 0, i32 19, !dbg !7535
  %355 = load %struct.Editing*, %struct.Editing** %ed440, align 8, !dbg !7535
  call void @BKE_sequence_iterator_begin(%struct.Editing* %355, %struct.SeqIterator* %iter_macro, i8 zeroext 0), !dbg !7535
  br label %for.cond441, !dbg !7535

for.cond441:                                      ; preds = %for.inc450, %if.then439
  %valid = getelementptr inbounds %struct.SeqIterator, %struct.SeqIterator* %iter_macro, i32 0, i32 4, !dbg !7537
  %356 = load i32, i32* %valid, align 8, !dbg !7537
  %tobool442 = icmp ne i32 %356, 0, !dbg !7535
  br i1 %tobool442, label %for.body443, label %for.end451, !dbg !7535

for.body443:                                      ; preds = %for.cond441
  %seq444 = getelementptr inbounds %struct.SeqIterator, %struct.SeqIterator* %iter_macro, i32 0, i32 3, !dbg !7539
  %357 = load %struct.Sequence*, %struct.Sequence** %seq444, align 8, !dbg !7539
  store %struct.Sequence* %357, %struct.Sequence** %seq, align 8, !dbg !7539
  %358 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !7541
  %scene_camera = getelementptr inbounds %struct.Sequence, %struct.Sequence* %358, i32 0, i32 27, !dbg !7544
  %359 = load %struct.Object*, %struct.Object** %scene_camera, align 8, !dbg !7544
  %360 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7545
  %cmp445 = icmp eq %struct.Object* %359, %360, !dbg !7546
  br i1 %cmp445, label %if.then447, label %if.end449, !dbg !7547

if.then447:                                       ; preds = %for.body443
  %361 = load %struct.Sequence*, %struct.Sequence** %seq, align 8, !dbg !7548
  %scene_camera448 = getelementptr inbounds %struct.Sequence, %struct.Sequence* %361, i32 0, i32 27, !dbg !7550
  store %struct.Object* null, %struct.Object** %scene_camera448, align 8, !dbg !7551
  br label %if.end449, !dbg !7552

if.end449:                                        ; preds = %if.then447, %for.body443
  br label %for.inc450, !dbg !7553

for.inc450:                                       ; preds = %if.end449
  call void @BKE_sequence_iterator_next(%struct.SeqIterator* %iter_macro), !dbg !7537
  br label %for.cond441, !dbg !7537, !llvm.loop !7554

for.end451:                                       ; preds = %for.cond441
  call void @BKE_sequence_iterator_end(%struct.SeqIterator* %iter_macro), !dbg !7556
  br label %if.end452, !dbg !7557

if.end452:                                        ; preds = %for.end451, %for.end437
  %362 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !7558
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %362, i32 0, i32 22, !dbg !7560
  %layers = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 60, !dbg !7561
  %first453 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layers, i32 0, i32 0, !dbg !7562
  %363 = load i8*, i8** %first453, align 8, !dbg !7562
  %364 = bitcast i8* %363 to %struct.SceneRenderLayer*, !dbg !7558
  store %struct.SceneRenderLayer* %364, %struct.SceneRenderLayer** %srl, align 8, !dbg !7563
  br label %for.cond454, !dbg !7564

for.cond454:                                      ; preds = %for.inc468, %if.end452
  %365 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !7565
  %tobool455 = icmp ne %struct.SceneRenderLayer* %365, null, !dbg !7567
  br i1 %tobool455, label %for.body456, label %for.end470, !dbg !7567

for.body456:                                      ; preds = %for.cond454
  %366 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !7568
  %freestyleConfig = getelementptr inbounds %struct.SceneRenderLayer, %struct.SceneRenderLayer* %366, i32 0, i32 13, !dbg !7571
  %linesets = getelementptr inbounds %struct.FreestyleConfig, %struct.FreestyleConfig* %freestyleConfig, i32 0, i32 7, !dbg !7572
  %first457 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %linesets, i32 0, i32 0, !dbg !7573
  %367 = load i8*, i8** %first457, align 8, !dbg !7573
  %368 = bitcast i8* %367 to %struct.FreestyleLineSet*, !dbg !7574
  store %struct.FreestyleLineSet* %368, %struct.FreestyleLineSet** %lineset, align 8, !dbg !7575
  br label %for.cond458, !dbg !7576

for.cond458:                                      ; preds = %for.inc465, %for.body456
  %369 = load %struct.FreestyleLineSet*, %struct.FreestyleLineSet** %lineset, align 8, !dbg !7577
  %tobool459 = icmp ne %struct.FreestyleLineSet* %369, null, !dbg !7579
  br i1 %tobool459, label %for.body460, label %for.end467, !dbg !7579

for.body460:                                      ; preds = %for.cond458
  %370 = load %struct.FreestyleLineSet*, %struct.FreestyleLineSet** %lineset, align 8, !dbg !7580
  %linestyle = getelementptr inbounds %struct.FreestyleLineSet, %struct.FreestyleLineSet* %370, i32 0, i32 13, !dbg !7583
  %371 = load %struct.FreestyleLineStyle*, %struct.FreestyleLineStyle** %linestyle, align 8, !dbg !7583
  %tobool461 = icmp ne %struct.FreestyleLineStyle* %371, null, !dbg !7580
  br i1 %tobool461, label %if.then462, label %if.end464, !dbg !7584

if.then462:                                       ; preds = %for.body460
  %372 = load %struct.FreestyleLineSet*, %struct.FreestyleLineSet** %lineset, align 8, !dbg !7585
  %linestyle463 = getelementptr inbounds %struct.FreestyleLineSet, %struct.FreestyleLineSet* %372, i32 0, i32 13, !dbg !7587
  %373 = load %struct.FreestyleLineStyle*, %struct.FreestyleLineStyle** %linestyle463, align 8, !dbg !7587
  %374 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7588
  call void @BKE_linestyle_target_object_unlink(%struct.FreestyleLineStyle* %373, %struct.Object* %374), !dbg !7589
  br label %if.end464, !dbg !7590

if.end464:                                        ; preds = %if.then462, %for.body460
  br label %for.inc465, !dbg !7591

for.inc465:                                       ; preds = %if.end464
  %375 = load %struct.FreestyleLineSet*, %struct.FreestyleLineSet** %lineset, align 8, !dbg !7592
  %next466 = getelementptr inbounds %struct.FreestyleLineSet, %struct.FreestyleLineSet* %375, i32 0, i32 0, !dbg !7593
  %376 = load %struct.FreestyleLineSet*, %struct.FreestyleLineSet** %next466, align 8, !dbg !7593
  store %struct.FreestyleLineSet* %376, %struct.FreestyleLineSet** %lineset, align 8, !dbg !7594
  br label %for.cond458, !dbg !7595, !llvm.loop !7596

for.end467:                                       ; preds = %for.cond458
  br label %for.inc468, !dbg !7598

for.inc468:                                       ; preds = %for.end467
  %377 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !7599
  %next469 = getelementptr inbounds %struct.SceneRenderLayer, %struct.SceneRenderLayer* %377, i32 0, i32 0, !dbg !7600
  %378 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %next469, align 8, !dbg !7600
  store %struct.SceneRenderLayer* %378, %struct.SceneRenderLayer** %srl, align 8, !dbg !7601
  br label %for.cond454, !dbg !7602, !llvm.loop !7603

for.end470:                                       ; preds = %for.cond454
  br label %if.end471, !dbg !7605

if.end471:                                        ; preds = %for.end470, %while.body398
  %379 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !7606
  %id472 = getelementptr inbounds %struct.Scene, %struct.Scene* %379, i32 0, i32 0, !dbg !7607
  %next473 = getelementptr inbounds %struct.ID, %struct.ID* %id472, i32 0, i32 0, !dbg !7608
  %380 = load i8*, i8** %next473, align 8, !dbg !7608
  %381 = bitcast i8* %380 to %struct.Scene*, !dbg !7606
  store %struct.Scene* %381, %struct.Scene** %sce, align 8, !dbg !7609
  br label %while.cond396, !dbg !7432, !llvm.loop !7610

while.end474:                                     ; preds = %while.cond396
  %382 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !7612
  %screen = getelementptr inbounds %struct.Main, %struct.Main* %382, i32 0, i32 26, !dbg !7613
  %first475 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %screen, i32 0, i32 0, !dbg !7614
  %383 = load i8*, i8** %first475, align 8, !dbg !7614
  %384 = bitcast i8* %383 to %struct.bScreen*, !dbg !7612
  store %struct.bScreen* %384, %struct.bScreen** %sc, align 8, !dbg !7615
  br label %while.cond476, !dbg !7616

while.cond476:                                    ; preds = %while.end633, %while.end474
  %385 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7617
  %tobool477 = icmp ne %struct.bScreen* %385, null, !dbg !7616
  br i1 %tobool477, label %while.body478, label %while.end636, !dbg !7616

while.body478:                                    ; preds = %while.cond476
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !7618, metadata !DIExpression()), !dbg !7666
  %386 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7667
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %386, i32 0, i32 3, !dbg !7668
  %first479 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !7669
  %387 = load i8*, i8** %first479, align 8, !dbg !7669
  %388 = bitcast i8* %387 to %struct.ScrArea*, !dbg !7667
  store %struct.ScrArea* %388, %struct.ScrArea** %sa, align 8, !dbg !7666
  br label %while.cond480, !dbg !7670

while.cond480:                                    ; preds = %for.end631, %while.body478
  %389 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7671
  %tobool481 = icmp ne %struct.ScrArea* %389, null, !dbg !7670
  br i1 %tobool481, label %while.body482, label %while.end633, !dbg !7670

while.body482:                                    ; preds = %while.cond480
  call void @llvm.dbg.declare(metadata %struct.SpaceLink** %sl, metadata !7672, metadata !DIExpression()), !dbg !7674
  %390 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7675
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %390, i32 0, i32 19, !dbg !7677
  %first483 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !7678
  %391 = load i8*, i8** %first483, align 8, !dbg !7678
  %392 = bitcast i8* %391 to %struct.SpaceLink*, !dbg !7675
  store %struct.SpaceLink* %392, %struct.SpaceLink** %sl, align 8, !dbg !7679
  br label %for.cond484, !dbg !7680

for.cond484:                                      ; preds = %for.inc629, %while.body482
  %393 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7681
  %tobool485 = icmp ne %struct.SpaceLink* %393, null, !dbg !7683
  br i1 %tobool485, label %for.body486, label %for.end631, !dbg !7683

for.body486:                                      ; preds = %for.cond484
  %394 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7684
  %spacetype = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %394, i32 0, i32 3, !dbg !7687
  %395 = load i32, i32* %spacetype, align 8, !dbg !7687
  %cmp487 = icmp eq i32 %395, 1, !dbg !7688
  br i1 %cmp487, label %if.then489, label %if.else579, !dbg !7689

if.then489:                                       ; preds = %for.body486
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d, metadata !7690, metadata !DIExpression()), !dbg !7692
  %396 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7693
  %397 = bitcast %struct.SpaceLink* %396 to %struct.View3D*, !dbg !7694
  store %struct.View3D* %397, %struct.View3D** %v3d, align 8, !dbg !7692
  %398 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !7695
  %ob_centre = getelementptr inbounds %struct.View3D, %struct.View3D* %398, i32 0, i32 16, !dbg !7697
  %399 = load %struct.Object*, %struct.Object** %ob_centre, align 8, !dbg !7697
  %400 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7698
  %cmp490 = icmp eq %struct.Object* %399, %400, !dbg !7699
  br i1 %cmp490, label %if.then492, label %if.end495, !dbg !7700

if.then492:                                       ; preds = %if.then489
  %401 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !7701
  %ob_centre493 = getelementptr inbounds %struct.View3D, %struct.View3D* %401, i32 0, i32 16, !dbg !7703
  store %struct.Object* null, %struct.Object** %ob_centre493, align 8, !dbg !7704
  %402 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !7705
  %ob_centre_bone = getelementptr inbounds %struct.View3D, %struct.View3D* %402, i32 0, i32 21, !dbg !7706
  %arrayidx494 = getelementptr inbounds [64 x i8], [64 x i8]* %ob_centre_bone, i64 0, i64 0, !dbg !7705
  store i8 0, i8* %arrayidx494, align 8, !dbg !7707
  br label %if.end495, !dbg !7708

if.end495:                                        ; preds = %if.then492, %if.then489
  %403 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !7709
  %localvd = getelementptr inbounds %struct.View3D, %struct.View3D* %403, i32 0, i32 20, !dbg !7711
  %404 = load %struct.View3D*, %struct.View3D** %localvd, align 8, !dbg !7711
  %tobool496 = icmp ne %struct.View3D* %404, null, !dbg !7709
  br i1 %tobool496, label %land.lhs.true497, label %if.end508, !dbg !7712

land.lhs.true497:                                 ; preds = %if.end495
  %405 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !7713
  %localvd498 = getelementptr inbounds %struct.View3D, %struct.View3D* %405, i32 0, i32 20, !dbg !7714
  %406 = load %struct.View3D*, %struct.View3D** %localvd498, align 8, !dbg !7714
  %ob_centre499 = getelementptr inbounds %struct.View3D, %struct.View3D* %406, i32 0, i32 16, !dbg !7715
  %407 = load %struct.Object*, %struct.Object** %ob_centre499, align 8, !dbg !7715
  %408 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7716
  %cmp500 = icmp eq %struct.Object* %407, %408, !dbg !7717
  br i1 %cmp500, label %if.then502, label %if.end508, !dbg !7718

if.then502:                                       ; preds = %land.lhs.true497
  %409 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !7719
  %localvd503 = getelementptr inbounds %struct.View3D, %struct.View3D* %409, i32 0, i32 20, !dbg !7721
  %410 = load %struct.View3D*, %struct.View3D** %localvd503, align 8, !dbg !7721
  %ob_centre504 = getelementptr inbounds %struct.View3D, %struct.View3D* %410, i32 0, i32 16, !dbg !7722
  store %struct.Object* null, %struct.Object** %ob_centre504, align 8, !dbg !7723
  %411 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !7724
  %localvd505 = getelementptr inbounds %struct.View3D, %struct.View3D* %411, i32 0, i32 20, !dbg !7725
  %412 = load %struct.View3D*, %struct.View3D** %localvd505, align 8, !dbg !7725
  %ob_centre_bone506 = getelementptr inbounds %struct.View3D, %struct.View3D* %412, i32 0, i32 21, !dbg !7726
  %arrayidx507 = getelementptr inbounds [64 x i8], [64 x i8]* %ob_centre_bone506, i64 0, i64 0, !dbg !7724
  store i8 0, i8* %arrayidx507, align 8, !dbg !7727
  br label %if.end508, !dbg !7728

if.end508:                                        ; preds = %if.then502, %land.lhs.true497, %if.end495
  store i32 0, i32* %found, align 4, !dbg !7729
  %413 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !7730
  %camera509 = getelementptr inbounds %struct.View3D, %struct.View3D* %413, i32 0, i32 15, !dbg !7732
  %414 = load %struct.Object*, %struct.Object** %camera509, align 8, !dbg !7732
  %415 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7733
  %cmp510 = icmp eq %struct.Object* %414, %415, !dbg !7734
  br i1 %cmp510, label %if.then512, label %if.end514, !dbg !7735

if.then512:                                       ; preds = %if.end508
  %416 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !7736
  %camera513 = getelementptr inbounds %struct.View3D, %struct.View3D* %416, i32 0, i32 15, !dbg !7738
  store %struct.Object* null, %struct.Object** %camera513, align 8, !dbg !7739
  store i32 1, i32* %found, align 4, !dbg !7740
  br label %if.end514, !dbg !7741

if.end514:                                        ; preds = %if.then512, %if.end508
  %417 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !7742
  %localvd515 = getelementptr inbounds %struct.View3D, %struct.View3D* %417, i32 0, i32 20, !dbg !7744
  %418 = load %struct.View3D*, %struct.View3D** %localvd515, align 8, !dbg !7744
  %tobool516 = icmp ne %struct.View3D* %418, null, !dbg !7742
  br i1 %tobool516, label %land.lhs.true517, label %if.end525, !dbg !7745

land.lhs.true517:                                 ; preds = %if.end514
  %419 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !7746
  %localvd518 = getelementptr inbounds %struct.View3D, %struct.View3D* %419, i32 0, i32 20, !dbg !7747
  %420 = load %struct.View3D*, %struct.View3D** %localvd518, align 8, !dbg !7747
  %camera519 = getelementptr inbounds %struct.View3D, %struct.View3D* %420, i32 0, i32 15, !dbg !7748
  %421 = load %struct.Object*, %struct.Object** %camera519, align 8, !dbg !7748
  %422 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7749
  %cmp520 = icmp eq %struct.Object* %421, %422, !dbg !7750
  br i1 %cmp520, label %if.then522, label %if.end525, !dbg !7751

if.then522:                                       ; preds = %land.lhs.true517
  %423 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !7752
  %localvd523 = getelementptr inbounds %struct.View3D, %struct.View3D* %423, i32 0, i32 20, !dbg !7754
  %424 = load %struct.View3D*, %struct.View3D** %localvd523, align 8, !dbg !7754
  %camera524 = getelementptr inbounds %struct.View3D, %struct.View3D* %424, i32 0, i32 15, !dbg !7755
  store %struct.Object* null, %struct.Object** %camera524, align 8, !dbg !7756
  %425 = load i32, i32* %found, align 4, !dbg !7757
  %add = add nsw i32 %425, 2, !dbg !7757
  store i32 %add, i32* %found, align 4, !dbg !7757
  br label %if.end525, !dbg !7758

if.end525:                                        ; preds = %if.then522, %land.lhs.true517, %if.end514
  %426 = load i32, i32* %found, align 4, !dbg !7759
  %tobool526 = icmp ne i32 %426, 0, !dbg !7759
  br i1 %tobool526, label %if.then527, label %if.end578, !dbg !7761

if.then527:                                       ; preds = %if.end525
  %427 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7762
  %spacetype528 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %427, i32 0, i32 8, !dbg !7765
  %428 = load i8, i8* %spacetype528, align 8, !dbg !7765
  %conv529 = zext i8 %428 to i32, !dbg !7762
  %cmp530 = icmp eq i32 %conv529, 1, !dbg !7766
  br i1 %cmp530, label %if.then532, label %if.end577, !dbg !7767

if.then532:                                       ; preds = %if.then527
  %429 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7768
  %regionbase = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %429, i32 0, i32 20, !dbg !7771
  %first533 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %regionbase, i32 0, i32 0, !dbg !7772
  %430 = load i8*, i8** %first533, align 8, !dbg !7772
  %431 = bitcast i8* %430 to %struct.ARegion*, !dbg !7768
  store %struct.ARegion* %431, %struct.ARegion** %ar, align 8, !dbg !7773
  br label %for.cond534, !dbg !7774

for.cond534:                                      ; preds = %for.inc574, %if.then532
  %432 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7775
  %tobool535 = icmp ne %struct.ARegion* %432, null, !dbg !7777
  br i1 %tobool535, label %for.body536, label %for.end576, !dbg !7777

for.body536:                                      ; preds = %for.cond534
  %433 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7778
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %433, i32 0, i32 8, !dbg !7781
  %434 = load i16, i16* %regiontype, align 2, !dbg !7781
  %conv537 = sext i16 %434 to i32, !dbg !7778
  %cmp538 = icmp eq i32 %conv537, 0, !dbg !7782
  br i1 %cmp538, label %if.then540, label %if.end573, !dbg !7783

if.then540:                                       ; preds = %for.body536
  %435 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7784
  %regiondata = getelementptr inbounds %struct.ARegion, %struct.ARegion* %435, i32 0, i32 30, !dbg !7786
  %436 = load i8*, i8** %regiondata, align 8, !dbg !7786
  %437 = bitcast i8* %436 to %struct.RegionView3D*, !dbg !7787
  store %struct.RegionView3D* %437, %struct.RegionView3D** %rv3d, align 8, !dbg !7788
  %438 = load i32, i32* %found, align 4, !dbg !7789
  %cmp541 = icmp eq i32 %438, 1, !dbg !7791
  br i1 %cmp541, label %if.then546, label %lor.lhs.false543, !dbg !7792

lor.lhs.false543:                                 ; preds = %if.then540
  %439 = load i32, i32* %found, align 4, !dbg !7793
  %cmp544 = icmp eq i32 %439, 3, !dbg !7794
  br i1 %cmp544, label %if.then546, label %if.end553, !dbg !7795

if.then546:                                       ; preds = %lor.lhs.false543, %if.then540
  %440 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !7796
  %persp = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %440, i32 0, i32 25, !dbg !7799
  %441 = load i8, i8* %persp, align 1, !dbg !7799
  %conv547 = zext i8 %441 to i32, !dbg !7796
  %cmp548 = icmp eq i32 %conv547, 2, !dbg !7800
  br i1 %cmp548, label %if.then550, label %if.end552, !dbg !7801

if.then550:                                       ; preds = %if.then546
  %442 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !7802
  %persp551 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %442, i32 0, i32 25, !dbg !7803
  store i8 1, i8* %persp551, align 1, !dbg !7804
  br label %if.end552, !dbg !7802

if.end552:                                        ; preds = %if.then550, %if.then546
  br label %if.end553, !dbg !7805

if.end553:                                        ; preds = %if.end552, %lor.lhs.false543
  %443 = load i32, i32* %found, align 4, !dbg !7806
  %cmp554 = icmp eq i32 %443, 2, !dbg !7808
  br i1 %cmp554, label %if.then559, label %lor.lhs.false556, !dbg !7809

lor.lhs.false556:                                 ; preds = %if.end553
  %444 = load i32, i32* %found, align 4, !dbg !7810
  %cmp557 = icmp eq i32 %444, 3, !dbg !7811
  br i1 %cmp557, label %if.then559, label %if.end572, !dbg !7812

if.then559:                                       ; preds = %lor.lhs.false556, %if.end553
  %445 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !7813
  %localvd560 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %445, i32 0, i32 10, !dbg !7816
  %446 = load %struct.RegionView3D*, %struct.RegionView3D** %localvd560, align 8, !dbg !7816
  %tobool561 = icmp ne %struct.RegionView3D* %446, null, !dbg !7813
  br i1 %tobool561, label %land.lhs.true562, label %if.end571, !dbg !7817

land.lhs.true562:                                 ; preds = %if.then559
  %447 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !7818
  %localvd563 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %447, i32 0, i32 10, !dbg !7819
  %448 = load %struct.RegionView3D*, %struct.RegionView3D** %localvd563, align 8, !dbg !7819
  %persp564 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %448, i32 0, i32 25, !dbg !7820
  %449 = load i8, i8* %persp564, align 1, !dbg !7820
  %conv565 = zext i8 %449 to i32, !dbg !7818
  %cmp566 = icmp eq i32 %conv565, 2, !dbg !7821
  br i1 %cmp566, label %if.then568, label %if.end571, !dbg !7822

if.then568:                                       ; preds = %land.lhs.true562
  %450 = load %struct.RegionView3D*, %struct.RegionView3D** %rv3d, align 8, !dbg !7823
  %localvd569 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %450, i32 0, i32 10, !dbg !7824
  %451 = load %struct.RegionView3D*, %struct.RegionView3D** %localvd569, align 8, !dbg !7824
  %persp570 = getelementptr inbounds %struct.RegionView3D, %struct.RegionView3D* %451, i32 0, i32 25, !dbg !7825
  store i8 1, i8* %persp570, align 1, !dbg !7826
  br label %if.end571, !dbg !7823

if.end571:                                        ; preds = %if.then568, %land.lhs.true562, %if.then559
  br label %if.end572, !dbg !7827

if.end572:                                        ; preds = %if.end571, %lor.lhs.false556
  br label %if.end573, !dbg !7828

if.end573:                                        ; preds = %if.end572, %for.body536
  br label %for.inc574, !dbg !7829

for.inc574:                                       ; preds = %if.end573
  %452 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !7830
  %next575 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %452, i32 0, i32 0, !dbg !7831
  %453 = load %struct.ARegion*, %struct.ARegion** %next575, align 8, !dbg !7831
  store %struct.ARegion* %453, %struct.ARegion** %ar, align 8, !dbg !7832
  br label %for.cond534, !dbg !7833, !llvm.loop !7834

for.end576:                                       ; preds = %for.cond534
  br label %if.end577, !dbg !7836

if.end577:                                        ; preds = %for.end576, %if.then527
  br label %if.end578, !dbg !7837

if.end578:                                        ; preds = %if.end577, %if.end525
  br label %if.end628, !dbg !7838

if.else579:                                       ; preds = %for.body486
  %454 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7839
  %spacetype580 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %454, i32 0, i32 3, !dbg !7841
  %455 = load i32, i32* %spacetype580, align 8, !dbg !7841
  %cmp581 = icmp eq i32 %455, 3, !dbg !7842
  br i1 %cmp581, label %if.then583, label %if.else599, !dbg !7843

if.then583:                                       ; preds = %if.else579
  call void @llvm.dbg.declare(metadata %struct.SpaceOops** %so, metadata !7844, metadata !DIExpression()), !dbg !7846
  %456 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7847
  %457 = bitcast %struct.SpaceLink* %456 to %struct.SpaceOops*, !dbg !7848
  store %struct.SpaceOops* %457, %struct.SpaceOops** %so, align 8, !dbg !7846
  %458 = load %struct.SpaceOops*, %struct.SpaceOops** %so, align 8, !dbg !7849
  %treestore = getelementptr inbounds %struct.SpaceOops, %struct.SpaceOops* %458, i32 0, i32 8, !dbg !7851
  %459 = load %struct.BLI_mempool*, %struct.BLI_mempool** %treestore, align 8, !dbg !7851
  %tobool584 = icmp ne %struct.BLI_mempool* %459, null, !dbg !7849
  br i1 %tobool584, label %if.then585, label %if.end598, !dbg !7852

if.then585:                                       ; preds = %if.then583
  call void @llvm.dbg.declare(metadata %struct.TreeStoreElem** %tselem, metadata !7853, metadata !DIExpression()), !dbg !7857
  call void @llvm.dbg.declare(metadata %struct.BLI_mempool_iter* %iter, metadata !7858, metadata !DIExpression()), !dbg !7870
  %460 = load %struct.SpaceOops*, %struct.SpaceOops** %so, align 8, !dbg !7871
  %treestore586 = getelementptr inbounds %struct.SpaceOops, %struct.SpaceOops* %460, i32 0, i32 8, !dbg !7872
  %461 = load %struct.BLI_mempool*, %struct.BLI_mempool** %treestore586, align 8, !dbg !7872
  call void @BLI_mempool_iternew(%struct.BLI_mempool* %461, %struct.BLI_mempool_iter* %iter), !dbg !7873
  br label %while.cond587, !dbg !7874

while.cond587:                                    ; preds = %if.end596, %if.then585
  %call588 = call i8* @BLI_mempool_iterstep(%struct.BLI_mempool_iter* %iter), !dbg !7875
  %462 = bitcast i8* %call588 to %struct.TreeStoreElem*, !dbg !7875
  store %struct.TreeStoreElem* %462, %struct.TreeStoreElem** %tselem, align 8, !dbg !7876
  %tobool589 = icmp ne %struct.TreeStoreElem* %462, null, !dbg !7874
  br i1 %tobool589, label %while.body590, label %while.end597, !dbg !7874

while.body590:                                    ; preds = %while.cond587
  %463 = load %struct.TreeStoreElem*, %struct.TreeStoreElem** %tselem, align 8, !dbg !7877
  %id591 = getelementptr inbounds %struct.TreeStoreElem, %struct.TreeStoreElem* %463, i32 0, i32 4, !dbg !7880
  %464 = load %struct.ID*, %struct.ID** %id591, align 8, !dbg !7880
  %465 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7881
  %466 = bitcast %struct.Object* %465 to %struct.ID*, !dbg !7882
  %cmp592 = icmp eq %struct.ID* %464, %466, !dbg !7883
  br i1 %cmp592, label %if.then594, label %if.end596, !dbg !7884

if.then594:                                       ; preds = %while.body590
  %467 = load %struct.TreeStoreElem*, %struct.TreeStoreElem** %tselem, align 8, !dbg !7885
  %id595 = getelementptr inbounds %struct.TreeStoreElem, %struct.TreeStoreElem* %467, i32 0, i32 4, !dbg !7886
  store %struct.ID* null, %struct.ID** %id595, align 8, !dbg !7887
  br label %if.end596, !dbg !7885

if.end596:                                        ; preds = %if.then594, %while.body590
  br label %while.cond587, !dbg !7874, !llvm.loop !7888

while.end597:                                     ; preds = %while.cond587
  br label %if.end598, !dbg !7890

if.end598:                                        ; preds = %while.end597, %if.then583
  br label %if.end627, !dbg !7891

if.else599:                                       ; preds = %if.else579
  %468 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7892
  %spacetype600 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %468, i32 0, i32 3, !dbg !7894
  %469 = load i32, i32* %spacetype600, align 8, !dbg !7894
  %cmp601 = icmp eq i32 %469, 4, !dbg !7895
  br i1 %cmp601, label %if.then603, label %if.else611, !dbg !7896

if.then603:                                       ; preds = %if.else599
  call void @llvm.dbg.declare(metadata %struct.SpaceButs** %sbuts, metadata !7897, metadata !DIExpression()), !dbg !7899
  %470 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7900
  %471 = bitcast %struct.SpaceLink* %470 to %struct.SpaceButs*, !dbg !7901
  store %struct.SpaceButs* %471, %struct.SpaceButs** %sbuts, align 8, !dbg !7899
  %472 = load %struct.SpaceButs*, %struct.SpaceButs** %sbuts, align 8, !dbg !7902
  %pinid = getelementptr inbounds %struct.SpaceButs, %struct.SpaceButs* %472, i32 0, i32 20, !dbg !7904
  %473 = load %struct.ID*, %struct.ID** %pinid, align 8, !dbg !7904
  %474 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7905
  %475 = bitcast %struct.Object* %474 to %struct.ID*, !dbg !7906
  %cmp604 = icmp eq %struct.ID* %473, %475, !dbg !7907
  br i1 %cmp604, label %if.then606, label %if.end610, !dbg !7908

if.then606:                                       ; preds = %if.then603
  %476 = load %struct.SpaceButs*, %struct.SpaceButs** %sbuts, align 8, !dbg !7909
  %flag = getelementptr inbounds %struct.SpaceButs, %struct.SpaceButs* %476, i32 0, i32 15, !dbg !7911
  %477 = load i8, i8* %flag, align 8, !dbg !7912
  %conv607 = zext i8 %477 to i32, !dbg !7912
  %and = and i32 %conv607, -3, !dbg !7912
  %conv608 = trunc i32 %and to i8, !dbg !7912
  store i8 %conv608, i8* %flag, align 8, !dbg !7912
  %478 = load %struct.SpaceButs*, %struct.SpaceButs** %sbuts, align 8, !dbg !7913
  %pinid609 = getelementptr inbounds %struct.SpaceButs, %struct.SpaceButs* %478, i32 0, i32 20, !dbg !7914
  store %struct.ID* null, %struct.ID** %pinid609, align 8, !dbg !7915
  br label %if.end610, !dbg !7916

if.end610:                                        ; preds = %if.then606, %if.then603
  br label %if.end626, !dbg !7917

if.else611:                                       ; preds = %if.else599
  %479 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7918
  %spacetype612 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %479, i32 0, i32 3, !dbg !7920
  %480 = load i32, i32* %spacetype612, align 8, !dbg !7920
  %cmp613 = icmp eq i32 %480, 16, !dbg !7921
  br i1 %cmp613, label %if.then615, label %if.end625, !dbg !7922

if.then615:                                       ; preds = %if.else611
  call void @llvm.dbg.declare(metadata %struct.SpaceNode** %snode, metadata !7923, metadata !DIExpression()), !dbg !7925
  %481 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7926
  %482 = bitcast %struct.SpaceLink* %481 to %struct.SpaceNode*, !dbg !7927
  store %struct.SpaceNode* %482, %struct.SpaceNode** %snode, align 8, !dbg !7925
  %483 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !7928
  %from = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %483, i32 0, i32 8, !dbg !7930
  %484 = load %struct.ID*, %struct.ID** %from, align 8, !dbg !7930
  %485 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7931
  %486 = bitcast %struct.Object* %485 to %struct.ID*, !dbg !7932
  %cmp616 = icmp eq %struct.ID* %484, %486, !dbg !7933
  br i1 %cmp616, label %if.then618, label %if.end624, !dbg !7934

if.then618:                                       ; preds = %if.then615
  %487 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !7935
  %flag619 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %487, i32 0, i32 9, !dbg !7937
  %488 = load i16, i16* %flag619, align 8, !dbg !7938
  %conv620 = sext i16 %488 to i32, !dbg !7938
  %and621 = and i32 %conv620, -4097, !dbg !7938
  %conv622 = trunc i32 %and621 to i16, !dbg !7938
  store i16 %conv622, i16* %flag619, align 8, !dbg !7938
  %489 = load %struct.SpaceNode*, %struct.SpaceNode** %snode, align 8, !dbg !7939
  %from623 = getelementptr inbounds %struct.SpaceNode, %struct.SpaceNode* %489, i32 0, i32 8, !dbg !7940
  store %struct.ID* null, %struct.ID** %from623, align 8, !dbg !7941
  br label %if.end624, !dbg !7942

if.end624:                                        ; preds = %if.then618, %if.then615
  br label %if.end625, !dbg !7943

if.end625:                                        ; preds = %if.end624, %if.else611
  br label %if.end626

if.end626:                                        ; preds = %if.end625, %if.end610
  br label %if.end627

if.end627:                                        ; preds = %if.end626, %if.end598
  br label %if.end628

if.end628:                                        ; preds = %if.end627, %if.end578
  br label %for.inc629, !dbg !7944

for.inc629:                                       ; preds = %if.end628
  %490 = load %struct.SpaceLink*, %struct.SpaceLink** %sl, align 8, !dbg !7945
  %next630 = getelementptr inbounds %struct.SpaceLink, %struct.SpaceLink* %490, i32 0, i32 0, !dbg !7946
  %491 = load %struct.SpaceLink*, %struct.SpaceLink** %next630, align 8, !dbg !7946
  store %struct.SpaceLink* %491, %struct.SpaceLink** %sl, align 8, !dbg !7947
  br label %for.cond484, !dbg !7948, !llvm.loop !7949

for.end631:                                       ; preds = %for.cond484
  %492 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !7951
  %next632 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %492, i32 0, i32 0, !dbg !7952
  %493 = load %struct.ScrArea*, %struct.ScrArea** %next632, align 8, !dbg !7952
  store %struct.ScrArea* %493, %struct.ScrArea** %sa, align 8, !dbg !7953
  br label %while.cond480, !dbg !7670, !llvm.loop !7954

while.end633:                                     ; preds = %while.cond480
  %494 = load %struct.bScreen*, %struct.bScreen** %sc, align 8, !dbg !7956
  %id634 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %494, i32 0, i32 0, !dbg !7957
  %next635 = getelementptr inbounds %struct.ID, %struct.ID* %id634, i32 0, i32 0, !dbg !7958
  %495 = load i8*, i8** %next635, align 8, !dbg !7958
  %496 = bitcast i8* %495 to %struct.bScreen*, !dbg !7956
  store %struct.bScreen* %496, %struct.bScreen** %sc, align 8, !dbg !7959
  br label %while.cond476, !dbg !7616, !llvm.loop !7960

while.end636:                                     ; preds = %while.cond476
  %497 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !7962
  %group637 = getelementptr inbounds %struct.Main, %struct.Main* %497, i32 0, i32 32, !dbg !7963
  %first638 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %group637, i32 0, i32 0, !dbg !7964
  %498 = load i8*, i8** %first638, align 8, !dbg !7964
  %499 = bitcast i8* %498 to %struct.Group*, !dbg !7962
  store %struct.Group* %499, %struct.Group** %group, align 8, !dbg !7965
  br label %while.cond639, !dbg !7966

while.cond639:                                    ; preds = %while.body641, %while.end636
  %500 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !7967
  %tobool640 = icmp ne %struct.Group* %500, null, !dbg !7966
  br i1 %tobool640, label %while.body641, label %while.end645, !dbg !7966

while.body641:                                    ; preds = %while.cond639
  %501 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !7968
  %502 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7970
  %call642 = call zeroext i8 @BKE_group_object_unlink(%struct.Group* %501, %struct.Object* %502, %struct.Scene* null, %struct.Base* null), !dbg !7971
  %503 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !7972
  %id643 = getelementptr inbounds %struct.Group, %struct.Group* %503, i32 0, i32 0, !dbg !7973
  %next644 = getelementptr inbounds %struct.ID, %struct.ID* %id643, i32 0, i32 0, !dbg !7974
  %504 = load i8*, i8** %next644, align 8, !dbg !7974
  %505 = bitcast i8* %504 to %struct.Group*, !dbg !7972
  store %struct.Group* %505, %struct.Group** %group, align 8, !dbg !7975
  br label %while.cond639, !dbg !7966, !llvm.loop !7976

while.end645:                                     ; preds = %while.cond639
  %506 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !7978
  %camera646 = getelementptr inbounds %struct.Main, %struct.Main* %506, i32 0, i32 22, !dbg !7979
  %first647 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %camera646, i32 0, i32 0, !dbg !7980
  %507 = load i8*, i8** %first647, align 8, !dbg !7980
  %508 = bitcast i8* %507 to %struct.Camera*, !dbg !7978
  store %struct.Camera* %508, %struct.Camera** %camera, align 8, !dbg !7981
  br label %while.cond648, !dbg !7982

while.cond648:                                    ; preds = %if.end655, %while.end645
  %509 = load %struct.Camera*, %struct.Camera** %camera, align 8, !dbg !7983
  %tobool649 = icmp ne %struct.Camera* %509, null, !dbg !7982
  br i1 %tobool649, label %while.body650, label %while.end658, !dbg !7982

while.body650:                                    ; preds = %while.cond648
  %510 = load %struct.Camera*, %struct.Camera** %camera, align 8, !dbg !7984
  %dof_ob = getelementptr inbounds %struct.Camera, %struct.Camera* %510, i32 0, i32 17, !dbg !7987
  %511 = load %struct.Object*, %struct.Object** %dof_ob, align 8, !dbg !7987
  %512 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7988
  %cmp651 = icmp eq %struct.Object* %511, %512, !dbg !7989
  br i1 %cmp651, label %if.then653, label %if.end655, !dbg !7990

if.then653:                                       ; preds = %while.body650
  %513 = load %struct.Camera*, %struct.Camera** %camera, align 8, !dbg !7991
  %dof_ob654 = getelementptr inbounds %struct.Camera, %struct.Camera* %513, i32 0, i32 17, !dbg !7993
  store %struct.Object* null, %struct.Object** %dof_ob654, align 8, !dbg !7994
  br label %if.end655, !dbg !7995

if.end655:                                        ; preds = %if.then653, %while.body650
  %514 = load %struct.Camera*, %struct.Camera** %camera, align 8, !dbg !7996
  %id656 = getelementptr inbounds %struct.Camera, %struct.Camera* %514, i32 0, i32 0, !dbg !7997
  %next657 = getelementptr inbounds %struct.ID, %struct.ID* %id656, i32 0, i32 0, !dbg !7998
  %515 = load i8*, i8** %next657, align 8, !dbg !7998
  %516 = bitcast i8* %515 to %struct.Camera*, !dbg !7996
  store %struct.Camera* %516, %struct.Camera** %camera, align 8, !dbg !7999
  br label %while.cond648, !dbg !7982, !llvm.loop !8000

while.end658:                                     ; preds = %while.cond648
  ret void, !dbg !8002
}

declare dso_local void @unlink_controllers(%struct.ListBase*) #3

declare dso_local void @unlink_actuators(%struct.ListBase*) #3

declare dso_local void @DAG_id_tag_update(%struct.ID*, i16 signext) #3

declare dso_local void @modifiers_foreachObjectLink(%struct.Object*, void (i8*, %struct.Object*, %struct.Object**)*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @unlink_object__unlinkModifierLinks(i8* %userData, %struct.Object* %ob, %struct.Object** %obpoin) #0 !dbg !8003 {
entry:
  %userData.addr = alloca i8*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %obpoin.addr = alloca %struct.Object**, align 8
  %unlinkOb = alloca %struct.Object*, align 8
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !8007, metadata !DIExpression()), !dbg !8008
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8009, metadata !DIExpression()), !dbg !8010
  store %struct.Object** %obpoin, %struct.Object*** %obpoin.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object*** %obpoin.addr, metadata !8011, metadata !DIExpression()), !dbg !8012
  call void @llvm.dbg.declare(metadata %struct.Object** %unlinkOb, metadata !8013, metadata !DIExpression()), !dbg !8014
  %0 = load i8*, i8** %userData.addr, align 8, !dbg !8015
  %1 = bitcast i8* %0 to %struct.Object*, !dbg !8015
  store %struct.Object* %1, %struct.Object** %unlinkOb, align 8, !dbg !8014
  %2 = load %struct.Object**, %struct.Object*** %obpoin.addr, align 8, !dbg !8016
  %3 = load %struct.Object*, %struct.Object** %2, align 8, !dbg !8018
  %4 = load %struct.Object*, %struct.Object** %unlinkOb, align 8, !dbg !8019
  %cmp = icmp eq %struct.Object* %3, %4, !dbg !8020
  br i1 %cmp, label %if.then, label %if.end, !dbg !8021

if.then:                                          ; preds = %entry
  %5 = load %struct.Object**, %struct.Object*** %obpoin.addr, align 8, !dbg !8022
  store %struct.Object* null, %struct.Object** %5, align 8, !dbg !8024
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8025
  %id = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 0, !dbg !8026
  call void @DAG_id_tag_update(%struct.ID* %id, i16 signext 7), !dbg !8027
  br label %if.end, !dbg !8028

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8029
}

declare dso_local %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint*) #3

declare dso_local zeroext i8 @BKE_mball_is_basis_for(%struct.Object*, %struct.Object*) #3

declare dso_local void @sca_remove_ob_poin(%struct.Object*, %struct.Object*) #3

declare dso_local void @BKE_sequence_iterator_begin(%struct.Editing*, %struct.SeqIterator*, i8 zeroext) #3

declare dso_local void @BKE_sequence_iterator_next(%struct.SeqIterator*) #3

declare dso_local void @BKE_sequence_iterator_end(%struct.SeqIterator*) #3

declare dso_local void @BKE_linestyle_target_object_unlink(%struct.FreestyleLineStyle*, %struct.Object*) #3

declare dso_local void @BLI_mempool_iternew(%struct.BLI_mempool*, %struct.BLI_mempool_iter*) #3

declare dso_local i8* @BLI_mempool_iterstep(%struct.BLI_mempool_iter*) #3

declare dso_local zeroext i8 @BKE_group_object_unlink(%struct.Group*, %struct.Object*, %struct.Scene*, %struct.Base*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_object_is_in_editmode(%struct.Object* %ob) #0 !dbg !8030 {
entry:
  %retval = alloca i8, align 1
  %ob.addr = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %arm = alloca %struct.bArmature*, align 8
  %cu = alloca %struct.Curve*, align 8
  %mb = alloca %struct.MetaBall*, align 8
  %lt = alloca %struct.Lattice*, align 8
  %cu56 = alloca %struct.Curve*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8033, metadata !DIExpression()), !dbg !8034
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8035
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !8037
  %1 = load i8*, i8** %data, align 8, !dbg !8037
  %cmp = icmp eq i8* %1, null, !dbg !8038
  br i1 %cmp, label %if.then, label %if.end, !dbg !8039

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !8040
  br label %return, !dbg !8040

if.end:                                           ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8041
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !8043
  %3 = load i16, i16* %type, align 8, !dbg !8043
  %conv = sext i16 %3 to i32, !dbg !8041
  %cmp1 = icmp eq i32 %conv, 1, !dbg !8044
  br i1 %cmp1, label %if.then3, label %if.else, !dbg !8045

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !8046, metadata !DIExpression()), !dbg !8048
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8049
  %data4 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 19, !dbg !8050
  %5 = load i8*, i8** %data4, align 8, !dbg !8050
  %6 = bitcast i8* %5 to %struct.Mesh*, !dbg !8049
  store %struct.Mesh* %6, %struct.Mesh** %me, align 8, !dbg !8048
  %7 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8051
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 20, !dbg !8053
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !8053
  %tobool = icmp ne %struct.BMEditMesh* %8, null, !dbg !8051
  br i1 %tobool, label %if.then5, label %if.end6, !dbg !8054

if.then5:                                         ; preds = %if.then3
  store i8 1, i8* %retval, align 1, !dbg !8055
  br label %return, !dbg !8055

if.end6:                                          ; preds = %if.then3
  br label %if.end66, !dbg !8056

if.else:                                          ; preds = %if.end
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8057
  %type7 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 3, !dbg !8059
  %10 = load i16, i16* %type7, align 8, !dbg !8059
  %conv8 = sext i16 %10 to i32, !dbg !8057
  %cmp9 = icmp eq i32 %conv8, 25, !dbg !8060
  br i1 %cmp9, label %if.then11, label %if.else16, !dbg !8061

if.then11:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !8062, metadata !DIExpression()), !dbg !8064
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8065
  %data12 = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 19, !dbg !8066
  %12 = load i8*, i8** %data12, align 8, !dbg !8066
  %13 = bitcast i8* %12 to %struct.bArmature*, !dbg !8065
  store %struct.bArmature* %13, %struct.bArmature** %arm, align 8, !dbg !8064
  %14 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !8067
  %edbo = getelementptr inbounds %struct.bArmature, %struct.bArmature* %14, i32 0, i32 4, !dbg !8069
  %15 = load %struct.ListBase*, %struct.ListBase** %edbo, align 8, !dbg !8069
  %tobool13 = icmp ne %struct.ListBase* %15, null, !dbg !8067
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !8070

if.then14:                                        ; preds = %if.then11
  store i8 1, i8* %retval, align 1, !dbg !8071
  br label %return, !dbg !8071

if.end15:                                         ; preds = %if.then11
  br label %if.end65, !dbg !8072

if.else16:                                        ; preds = %if.else
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8073
  %type17 = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 3, !dbg !8075
  %17 = load i16, i16* %type17, align 8, !dbg !8075
  %conv18 = sext i16 %17 to i32, !dbg !8073
  %cmp19 = icmp eq i32 %conv18, 4, !dbg !8076
  br i1 %cmp19, label %if.then21, label %if.else26, !dbg !8077

if.then21:                                        ; preds = %if.else16
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !8078, metadata !DIExpression()), !dbg !8080
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8081
  %data22 = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 19, !dbg !8082
  %19 = load i8*, i8** %data22, align 8, !dbg !8082
  %20 = bitcast i8* %19 to %struct.Curve*, !dbg !8081
  store %struct.Curve* %20, %struct.Curve** %cu, align 8, !dbg !8080
  %21 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !8083
  %editfont = getelementptr inbounds %struct.Curve, %struct.Curve* %21, i32 0, i32 53, !dbg !8085
  %22 = load %struct.EditFont*, %struct.EditFont** %editfont, align 8, !dbg !8085
  %tobool23 = icmp ne %struct.EditFont* %22, null, !dbg !8083
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !8086

if.then24:                                        ; preds = %if.then21
  store i8 1, i8* %retval, align 1, !dbg !8087
  br label %return, !dbg !8087

if.end25:                                         ; preds = %if.then21
  br label %if.end64, !dbg !8088

if.else26:                                        ; preds = %if.else16
  %23 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8089
  %type27 = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 3, !dbg !8091
  %24 = load i16, i16* %type27, align 8, !dbg !8091
  %conv28 = sext i16 %24 to i32, !dbg !8089
  %cmp29 = icmp eq i32 %conv28, 5, !dbg !8092
  br i1 %cmp29, label %if.then31, label %if.else36, !dbg !8093

if.then31:                                        ; preds = %if.else26
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb, metadata !8094, metadata !DIExpression()), !dbg !8096
  %25 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8097
  %data32 = getelementptr inbounds %struct.Object, %struct.Object* %25, i32 0, i32 19, !dbg !8098
  %26 = load i8*, i8** %data32, align 8, !dbg !8098
  %27 = bitcast i8* %26 to %struct.MetaBall*, !dbg !8097
  store %struct.MetaBall* %27, %struct.MetaBall** %mb, align 8, !dbg !8096
  %28 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !8099
  %editelems = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %28, i32 0, i32 4, !dbg !8101
  %29 = load %struct.ListBase*, %struct.ListBase** %editelems, align 8, !dbg !8101
  %tobool33 = icmp ne %struct.ListBase* %29, null, !dbg !8099
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !8102

if.then34:                                        ; preds = %if.then31
  store i8 1, i8* %retval, align 1, !dbg !8103
  br label %return, !dbg !8103

if.end35:                                         ; preds = %if.then31
  br label %if.end63, !dbg !8104

if.else36:                                        ; preds = %if.else26
  %30 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8105
  %type37 = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 3, !dbg !8107
  %31 = load i16, i16* %type37, align 8, !dbg !8107
  %conv38 = sext i16 %31 to i32, !dbg !8105
  %cmp39 = icmp eq i32 %conv38, 22, !dbg !8108
  br i1 %cmp39, label %if.then41, label %if.else46, !dbg !8109

if.then41:                                        ; preds = %if.else36
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !8110, metadata !DIExpression()), !dbg !8161
  %32 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8162
  %data42 = getelementptr inbounds %struct.Object, %struct.Object* %32, i32 0, i32 19, !dbg !8163
  %33 = load i8*, i8** %data42, align 8, !dbg !8163
  %34 = bitcast i8* %33 to %struct.Lattice*, !dbg !8162
  store %struct.Lattice* %34, %struct.Lattice** %lt, align 8, !dbg !8161
  %35 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !8164
  %editlatt = getelementptr inbounds %struct.Lattice, %struct.Lattice* %35, i32 0, i32 26, !dbg !8166
  %36 = load %struct.EditLatt*, %struct.EditLatt** %editlatt, align 8, !dbg !8166
  %tobool43 = icmp ne %struct.EditLatt* %36, null, !dbg !8164
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !8167

if.then44:                                        ; preds = %if.then41
  store i8 1, i8* %retval, align 1, !dbg !8168
  br label %return, !dbg !8168

if.end45:                                         ; preds = %if.then41
  br label %if.end62, !dbg !8169

if.else46:                                        ; preds = %if.else36
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8170
  %type47 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 3, !dbg !8172
  %38 = load i16, i16* %type47, align 8, !dbg !8172
  %conv48 = sext i16 %38 to i32, !dbg !8170
  %cmp49 = icmp eq i32 %conv48, 3, !dbg !8173
  br i1 %cmp49, label %if.then55, label %lor.lhs.false, !dbg !8174

lor.lhs.false:                                    ; preds = %if.else46
  %39 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8175
  %type51 = getelementptr inbounds %struct.Object, %struct.Object* %39, i32 0, i32 3, !dbg !8176
  %40 = load i16, i16* %type51, align 8, !dbg !8176
  %conv52 = sext i16 %40 to i32, !dbg !8175
  %cmp53 = icmp eq i32 %conv52, 2, !dbg !8177
  br i1 %cmp53, label %if.then55, label %if.end61, !dbg !8178

if.then55:                                        ; preds = %lor.lhs.false, %if.else46
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu56, metadata !8179, metadata !DIExpression()), !dbg !8181
  %41 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8182
  %data57 = getelementptr inbounds %struct.Object, %struct.Object* %41, i32 0, i32 19, !dbg !8183
  %42 = load i8*, i8** %data57, align 8, !dbg !8183
  %43 = bitcast i8* %42 to %struct.Curve*, !dbg !8182
  store %struct.Curve* %43, %struct.Curve** %cu56, align 8, !dbg !8181
  %44 = load %struct.Curve*, %struct.Curve** %cu56, align 8, !dbg !8184
  %editnurb = getelementptr inbounds %struct.Curve, %struct.Curve* %44, i32 0, i32 4, !dbg !8186
  %45 = load %struct.EditNurb*, %struct.EditNurb** %editnurb, align 8, !dbg !8186
  %tobool58 = icmp ne %struct.EditNurb* %45, null, !dbg !8184
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !8187

if.then59:                                        ; preds = %if.then55
  store i8 1, i8* %retval, align 1, !dbg !8188
  br label %return, !dbg !8188

if.end60:                                         ; preds = %if.then55
  br label %if.end61, !dbg !8189

if.end61:                                         ; preds = %if.end60, %lor.lhs.false
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.end45
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.end35
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.end25
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.end15
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.end6
  store i8 0, i8* %retval, align 1, !dbg !8190
  br label %return, !dbg !8190

return:                                           ; preds = %if.end66, %if.then59, %if.then44, %if.then34, %if.then24, %if.then14, %if.then5, %if.then
  %46 = load i8, i8* %retval, align 1, !dbg !8191
  ret i8 %46, !dbg !8191
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_object_is_in_editmode_vgroup(%struct.Object* %ob) #0 !dbg !8192 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8193, metadata !DIExpression()), !dbg !8194
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8195
  %type = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 3, !dbg !8195
  %1 = load i16, i16* %type, align 8, !dbg !8195
  %conv = sext i16 %1 to i32, !dbg !8195
  %cmp = icmp eq i32 %conv, 1, !dbg !8195
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !8195

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8195
  %type2 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !8195
  %3 = load i16, i16* %type2, align 8, !dbg !8195
  %conv3 = sext i16 %3 to i32, !dbg !8195
  %cmp4 = icmp eq i32 %conv3, 22, !dbg !8195
  br i1 %cmp4, label %land.rhs, label %land.end, !dbg !8196

land.rhs:                                         ; preds = %lor.lhs.false, %entry
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8197
  %call = call zeroext i8 @BKE_object_is_in_editmode(%struct.Object* %4), !dbg !8198
  %conv6 = zext i8 %call to i32, !dbg !8198
  %tobool = icmp ne i32 %conv6, 0, !dbg !8196
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %5 = phi i1 [ false, %lor.lhs.false ], [ %tobool, %land.rhs ], !dbg !8199
  %land.ext = zext i1 %5 to i32, !dbg !8196
  %conv7 = trunc i32 %land.ext to i8, !dbg !8200
  ret i8 %conv7, !dbg !8201
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_object_is_in_wpaint_select_vert(%struct.Object* %ob) #0 !dbg !8202 {
entry:
  %retval = alloca i8, align 1
  %ob.addr = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8203, metadata !DIExpression()), !dbg !8204
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8205
  %type = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 3, !dbg !8207
  %1 = load i16, i16* %type, align 8, !dbg !8207
  %conv = sext i16 %1 to i32, !dbg !8205
  %cmp = icmp eq i32 %conv, 1, !dbg !8208
  br i1 %cmp, label %if.then, label %if.end, !dbg !8209

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !8210, metadata !DIExpression()), !dbg !8212
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8213
  %data = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !8214
  %3 = load i8*, i8** %data, align 8, !dbg !8214
  %4 = bitcast i8* %3 to %struct.Mesh*, !dbg !8213
  store %struct.Mesh* %4, %struct.Mesh** %me, align 8, !dbg !8212
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8215
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 27, !dbg !8216
  %6 = load i32, i32* %mode, align 8, !dbg !8216
  %and = and i32 %6, 8, !dbg !8217
  %tobool = icmp ne i32 %and, 0, !dbg !8217
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !8218

land.lhs.true:                                    ; preds = %if.then
  %7 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8219
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %7, i32 0, i32 20, !dbg !8220
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !8220
  %cmp2 = icmp eq %struct.BMEditMesh* %8, null, !dbg !8221
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !8222

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8223
  %editflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 46, !dbg !8223
  %10 = load i8, i8* %editflag, align 1, !dbg !8223
  %conv4 = zext i8 %10 to i32, !dbg !8223
  %and5 = and i32 %conv4, 8, !dbg !8223
  %tobool6 = icmp ne i32 %and5, 0, !dbg !8223
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !8223

cond.true:                                        ; preds = %land.rhs
  br label %cond.end, !dbg !8223

cond.false:                                       ; preds = %land.rhs
  %11 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8223
  %editflag7 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 46, !dbg !8223
  %12 = load i8, i8* %editflag7, align 1, !dbg !8223
  %conv8 = zext i8 %12 to i32, !dbg !8223
  %and9 = and i32 %conv8, 32, !dbg !8223
  %tobool10 = icmp ne i32 %and9, 0, !dbg !8223
  %13 = zext i1 %tobool10 to i64, !dbg !8223
  %cond = select i1 %tobool10, i32 1, i32 0, !dbg !8223
  br label %cond.end, !dbg !8223

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond11 = phi i32 [ 4, %cond.true ], [ %cond, %cond.false ], !dbg !8223
  %cmp12 = icmp eq i32 %cond11, 1, !dbg !8224
  br label %land.end

land.end:                                         ; preds = %cond.end, %land.lhs.true, %if.then
  %14 = phi i1 [ false, %land.lhs.true ], [ false, %if.then ], [ %cmp12, %cond.end ], !dbg !8225
  %land.ext = zext i1 %14 to i32, !dbg !8222
  %conv14 = trunc i32 %land.ext to i8, !dbg !8226
  store i8 %conv14, i8* %retval, align 1, !dbg !8227
  br label %return, !dbg !8227

if.end:                                           ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !8228
  br label %return, !dbg !8228

return:                                           ; preds = %if.end, %land.end
  %15 = load i8, i8* %retval, align 1, !dbg !8229
  ret i8 %15, !dbg !8229
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_object_exists_check(%struct.Object* %obtest) #0 !dbg !8230 {
entry:
  %retval = alloca i8, align 1
  %obtest.addr = alloca %struct.Object*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.Object* %obtest, %struct.Object** %obtest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obtest.addr, metadata !8231, metadata !DIExpression()), !dbg !8232
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8233, metadata !DIExpression()), !dbg !8234
  %0 = load %struct.Object*, %struct.Object** %obtest.addr, align 8, !dbg !8235
  %cmp = icmp eq %struct.Object* %0, null, !dbg !8237
  br i1 %cmp, label %if.then, label %if.end, !dbg !8238

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !8239
  br label %return, !dbg !8239

if.end:                                           ; preds = %entry
  %1 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !8240
  %object = getelementptr inbounds %struct.Main, %struct.Main* %1, i32 0, i32 13, !dbg !8241
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object, i32 0, i32 0, !dbg !8242
  %2 = load i8*, i8** %first, align 8, !dbg !8242
  %3 = bitcast i8* %2 to %struct.Object*, !dbg !8243
  store %struct.Object* %3, %struct.Object** %ob, align 8, !dbg !8244
  br label %while.cond, !dbg !8245

while.cond:                                       ; preds = %if.end3, %if.end
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8246
  %tobool = icmp ne %struct.Object* %4, null, !dbg !8245
  br i1 %tobool, label %while.body, label %while.end, !dbg !8245

while.body:                                       ; preds = %while.cond
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8247
  %6 = load %struct.Object*, %struct.Object** %obtest.addr, align 8, !dbg !8250
  %cmp1 = icmp eq %struct.Object* %5, %6, !dbg !8251
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !8252

if.then2:                                         ; preds = %while.body
  store i8 1, i8* %retval, align 1, !dbg !8253
  br label %return, !dbg !8253

if.end3:                                          ; preds = %while.body
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8254
  %id = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 0, !dbg !8255
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 0, !dbg !8256
  %8 = load i8*, i8** %next, align 8, !dbg !8256
  %9 = bitcast i8* %8 to %struct.Object*, !dbg !8254
  store %struct.Object* %9, %struct.Object** %ob, align 8, !dbg !8257
  br label %while.cond, !dbg !8245, !llvm.loop !8258

while.end:                                        ; preds = %while.cond
  store i8 0, i8* %retval, align 1, !dbg !8260
  br label %return, !dbg !8260

return:                                           ; preds = %while.end, %if.then2, %if.then
  %10 = load i8, i8* %retval, align 1, !dbg !8261
  ret i8 %10, !dbg !8261
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BKE_object_obdata_add_from_type(%struct.Main* %bmain, i32 %type) #0 !dbg !8262 {
entry:
  %retval = alloca i8*, align 8
  %bmain.addr = alloca %struct.Main*, align 8
  %type.addr = alloca i32, align 4
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !8265, metadata !DIExpression()), !dbg !8266
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8267, metadata !DIExpression()), !dbg !8268
  %0 = load i32, i32* %type.addr, align 4, !dbg !8269
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb3
    i32 4, label %sw.bb5
    i32 5, label %sw.bb7
    i32 11, label %sw.bb9
    i32 10, label %sw.bb11
    i32 22, label %sw.bb13
    i32 25, label %sw.bb15
    i32 12, label %sw.bb17
    i32 0, label %sw.bb19
  ], !dbg !8270

sw.bb:                                            ; preds = %entry
  %1 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8271
  %call = call %struct.Mesh* @BKE_mesh_add(%struct.Main* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)), !dbg !8273
  %2 = bitcast %struct.Mesh* %call to i8*, !dbg !8273
  store i8* %2, i8** %retval, align 8, !dbg !8274
  br label %return, !dbg !8274

sw.bb1:                                           ; preds = %entry
  %3 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8275
  %call2 = call %struct.Curve* @BKE_curve_add(%struct.Main* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32 2), !dbg !8276
  %4 = bitcast %struct.Curve* %call2 to i8*, !dbg !8276
  store i8* %4, i8** %retval, align 8, !dbg !8277
  br label %return, !dbg !8277

sw.bb3:                                           ; preds = %entry
  %5 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8278
  %call4 = call %struct.Curve* @BKE_curve_add(%struct.Main* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i32 3), !dbg !8279
  %6 = bitcast %struct.Curve* %call4 to i8*, !dbg !8279
  store i8* %6, i8** %retval, align 8, !dbg !8280
  br label %return, !dbg !8280

sw.bb5:                                           ; preds = %entry
  %7 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8281
  %call6 = call %struct.Curve* @BKE_curve_add(%struct.Main* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i32 4), !dbg !8282
  %8 = bitcast %struct.Curve* %call6 to i8*, !dbg !8282
  store i8* %8, i8** %retval, align 8, !dbg !8283
  br label %return, !dbg !8283

sw.bb7:                                           ; preds = %entry
  %9 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8284
  %call8 = call %struct.MetaBall* @BKE_mball_add(%struct.Main* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0)), !dbg !8285
  %10 = bitcast %struct.MetaBall* %call8 to i8*, !dbg !8285
  store i8* %10, i8** %retval, align 8, !dbg !8286
  br label %return, !dbg !8286

sw.bb9:                                           ; preds = %entry
  %11 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8287
  %call10 = call i8* @BKE_camera_add(%struct.Main* %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0)), !dbg !8288
  store i8* %call10, i8** %retval, align 8, !dbg !8289
  br label %return, !dbg !8289

sw.bb11:                                          ; preds = %entry
  %12 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8290
  %call12 = call %struct.Lamp* @BKE_lamp_add(%struct.Main* %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0)), !dbg !8291
  %13 = bitcast %struct.Lamp* %call12 to i8*, !dbg !8291
  store i8* %13, i8** %retval, align 8, !dbg !8292
  br label %return, !dbg !8292

sw.bb13:                                          ; preds = %entry
  %14 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8293
  %call14 = call %struct.Lattice* @BKE_lattice_add(%struct.Main* %14, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0)), !dbg !8294
  %15 = bitcast %struct.Lattice* %call14 to i8*, !dbg !8294
  store i8* %15, i8** %retval, align 8, !dbg !8295
  br label %return, !dbg !8295

sw.bb15:                                          ; preds = %entry
  %16 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8296
  %call16 = call %struct.bArmature* @BKE_armature_add(%struct.Main* %16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0)), !dbg !8297
  %17 = bitcast %struct.bArmature* %call16 to i8*, !dbg !8297
  store i8* %17, i8** %retval, align 8, !dbg !8298
  br label %return, !dbg !8298

sw.bb17:                                          ; preds = %entry
  %18 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8299
  %call18 = call i8* @BKE_speaker_add(%struct.Main* %18, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)), !dbg !8300
  store i8* %call18, i8** %retval, align 8, !dbg !8301
  br label %return, !dbg !8301

sw.bb19:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !8302
  br label %return, !dbg !8302

sw.default:                                       ; preds = %entry
  %19 = load i32, i32* %type.addr, align 4, !dbg !8303
  %call20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.10, i64 0, i64 0), i32 %19), !dbg !8304
  store i8* null, i8** %retval, align 8, !dbg !8305
  br label %return, !dbg !8305

return:                                           ; preds = %sw.default, %sw.bb19, %sw.bb17, %sw.bb15, %sw.bb13, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  %20 = load i8*, i8** %retval, align 8, !dbg !8306
  ret i8* %20, !dbg !8306
}

declare dso_local %struct.Mesh* @BKE_mesh_add(%struct.Main*, i8*) #3

declare dso_local %struct.Curve* @BKE_curve_add(%struct.Main*, i8*, i32) #3

declare dso_local %struct.MetaBall* @BKE_mball_add(%struct.Main*, i8*) #3

declare dso_local i8* @BKE_camera_add(%struct.Main*, i8*) #3

declare dso_local %struct.Lamp* @BKE_lamp_add(%struct.Main*, i8*) #3

declare dso_local %struct.Lattice* @BKE_lattice_add(%struct.Main*, i8*) #3

declare dso_local %struct.bArmature* @BKE_armature_add(%struct.Main*, i8*) #3

declare dso_local i8* @BKE_speaker_add(%struct.Main*, i8*) #3

declare dso_local i32 @printf(i8*, ...) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Object* @BKE_object_add_only_object(%struct.Main* %bmain, i32 %type, i8* %name) #0 !dbg !8307 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %type.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !8310, metadata !DIExpression()), !dbg !8311
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8312, metadata !DIExpression()), !dbg !8313
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8314, metadata !DIExpression()), !dbg !8315
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8316, metadata !DIExpression()), !dbg !8317
  %0 = load i8*, i8** %name.addr, align 8, !dbg !8318
  %tobool = icmp ne i8* %0, null, !dbg !8318
  br i1 %tobool, label %if.end, label %if.then, !dbg !8320

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %type.addr, align 4, !dbg !8321
  %call = call i8* @get_obdata_defname(i32 %1), !dbg !8322
  store i8* %call, i8** %name.addr, align 8, !dbg !8323
  br label %if.end, !dbg !8324

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8325
  %3 = load i8*, i8** %name.addr, align 8, !dbg !8326
  %call1 = call i8* @BKE_libblock_alloc(%struct.Main* %2, i16 signext 16975, i8* %3), !dbg !8327
  %4 = bitcast i8* %call1 to %struct.Object*, !dbg !8327
  store %struct.Object* %4, %struct.Object** %ob, align 8, !dbg !8328
  %5 = load i32, i32* %type.addr, align 4, !dbg !8329
  %conv = trunc i32 %5 to i16, !dbg !8329
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8330
  %type2 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 3, !dbg !8331
  store i16 %conv, i16* %type2, align 8, !dbg !8332
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8333
  %col = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 98, !dbg !8334
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %col, i64 0, i64 2, !dbg !8333
  store float 1.000000e+00, float* %arrayidx, align 8, !dbg !8335
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8336
  %col3 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 98, !dbg !8337
  %arrayidx4 = getelementptr inbounds [4 x float], [4 x float]* %col3, i64 0, i64 1, !dbg !8336
  store float 1.000000e+00, float* %arrayidx4, align 4, !dbg !8338
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8339
  %col5 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 98, !dbg !8340
  %arrayidx6 = getelementptr inbounds [4 x float], [4 x float]* %col5, i64 0, i64 0, !dbg !8339
  store float 1.000000e+00, float* %arrayidx6, align 8, !dbg !8341
  %10 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8342
  %col7 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 98, !dbg !8343
  %arrayidx8 = getelementptr inbounds [4 x float], [4 x float]* %col7, i64 0, i64 3, !dbg !8342
  store float 1.000000e+00, float* %arrayidx8, align 4, !dbg !8344
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8345
  %size = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 36, !dbg !8346
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !8345
  store float 1.000000e+00, float* %arrayidx9, align 4, !dbg !8347
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8348
  %size10 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 36, !dbg !8349
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %size10, i64 0, i64 1, !dbg !8348
  store float 1.000000e+00, float* %arrayidx11, align 4, !dbg !8350
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8351
  %size12 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 36, !dbg !8352
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %size12, i64 0, i64 0, !dbg !8351
  store float 1.000000e+00, float* %arrayidx13, align 4, !dbg !8353
  %14 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8354
  %dscale = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 38, !dbg !8355
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %dscale, i64 0, i64 2, !dbg !8354
  store float 1.000000e+00, float* %arrayidx14, align 4, !dbg !8356
  %15 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8357
  %dscale15 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 38, !dbg !8358
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %dscale15, i64 0, i64 1, !dbg !8357
  store float 1.000000e+00, float* %arrayidx16, align 4, !dbg !8359
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8360
  %dscale17 = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 38, !dbg !8361
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %dscale17, i64 0, i64 0, !dbg !8360
  store float 1.000000e+00, float* %arrayidx18, align 4, !dbg !8362
  %17 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8363
  %rotmode = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 83, !dbg !8364
  store i16 1, i16* %rotmode, align 8, !dbg !8365
  %18 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8366
  %rotAxis = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 43, !dbg !8367
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %rotAxis, i64 0, i64 0, !dbg !8366
  %19 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8368
  %rotAngle = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 45, !dbg !8369
  call void @unit_axis_angle(float* %arraydecay, float* %rotAngle), !dbg !8370
  %20 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8371
  %drotAxis = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 44, !dbg !8372
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %drotAxis, i64 0, i64 0, !dbg !8371
  %21 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8373
  %drotAngle = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 46, !dbg !8374
  call void @unit_axis_angle(float* %arraydecay19, float* %drotAngle), !dbg !8375
  %22 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8376
  %quat = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 41, !dbg !8377
  %arraydecay20 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !8376
  call void @unit_qt(float* %arraydecay20), !dbg !8378
  %23 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8379
  %dquat = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 42, !dbg !8380
  %arraydecay21 = getelementptr inbounds [4 x float], [4 x float]* %dquat, i64 0, i64 0, !dbg !8379
  call void @unit_qt(float* %arraydecay21), !dbg !8381
  %24 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8382
  %protectflag = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 56, !dbg !8383
  store i16 1024, i16* %protectflag, align 2, !dbg !8384
  %25 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8385
  %constinv = getelementptr inbounds %struct.Object, %struct.Object* %25, i32 0, i32 49, !dbg !8386
  %arraydecay22 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %constinv, i64 0, i64 0, !dbg !8385
  call void @unit_m4([4 x float]* %arraydecay22), !dbg !8387
  %26 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8388
  %parentinv = getelementptr inbounds %struct.Object, %struct.Object* %26, i32 0, i32 48, !dbg !8389
  %arraydecay23 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %parentinv, i64 0, i64 0, !dbg !8388
  call void @unit_m4([4 x float]* %arraydecay23), !dbg !8390
  %27 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8391
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 47, !dbg !8392
  %arraydecay24 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !8391
  call void @unit_m4([4 x float]* %arraydecay24), !dbg !8393
  %28 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8394
  %dt = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 87, !dbg !8395
  store i8 5, i8* %dt, align 2, !dbg !8396
  %29 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8397
  %empty_drawtype = getelementptr inbounds %struct.Object, %struct.Object* %29, i32 0, i32 88, !dbg !8398
  store i8 2, i8* %empty_drawtype, align 1, !dbg !8399
  %30 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8400
  %empty_drawsize = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 89, !dbg !8401
  store float 1.000000e+00, float* %empty_drawsize, align 8, !dbg !8402
  %31 = load i32, i32* %type.addr, align 4, !dbg !8403
  %cmp = icmp eq i32 %31, 10, !dbg !8403
  br i1 %cmp, label %if.then31, label %lor.lhs.false, !dbg !8403

lor.lhs.false:                                    ; preds = %if.end
  %32 = load i32, i32* %type.addr, align 4, !dbg !8403
  %cmp26 = icmp eq i32 %32, 11, !dbg !8403
  br i1 %cmp26, label %if.then31, label %lor.lhs.false28, !dbg !8403

lor.lhs.false28:                                  ; preds = %lor.lhs.false
  %33 = load i32, i32* %type.addr, align 4, !dbg !8403
  %cmp29 = icmp eq i32 %33, 12, !dbg !8403
  br i1 %cmp29, label %if.then31, label %if.else, !dbg !8405

if.then31:                                        ; preds = %lor.lhs.false28, %lor.lhs.false, %if.end
  %34 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8406
  %trackflag = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 57, !dbg !8408
  store i16 5, i16* %trackflag, align 4, !dbg !8409
  %35 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8410
  %upflag = getelementptr inbounds %struct.Object, %struct.Object* %35, i32 0, i32 58, !dbg !8411
  store i16 1, i16* %upflag, align 2, !dbg !8412
  br label %if.end34, !dbg !8413

if.else:                                          ; preds = %lor.lhs.false28
  %36 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8414
  %trackflag32 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 57, !dbg !8416
  store i16 1, i16* %trackflag32, align 4, !dbg !8417
  %37 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8418
  %upflag33 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 58, !dbg !8419
  store i16 2, i16* %upflag33, align 2, !dbg !8420
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then31
  %38 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8421
  %dupon = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 64, !dbg !8422
  store i32 1, i32* %dupon, align 8, !dbg !8423
  %39 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8424
  %dupoff = getelementptr inbounds %struct.Object, %struct.Object* %39, i32 0, i32 65, !dbg !8425
  store i32 0, i32* %dupoff, align 4, !dbg !8426
  %40 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8427
  %dupsta = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 66, !dbg !8428
  store i32 1, i32* %dupsta, align 8, !dbg !8429
  %41 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8430
  %dupend = getelementptr inbounds %struct.Object, %struct.Object* %41, i32 0, i32 67, !dbg !8431
  store i32 100, i32* %dupend, align 4, !dbg !8432
  %42 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8433
  %dupfacesca = getelementptr inbounds %struct.Object, %struct.Object* %42, i32 0, i32 90, !dbg !8434
  store float 1.000000e+00, float* %dupfacesca, align 4, !dbg !8435
  %43 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8436
  %inertia = getelementptr inbounds %struct.Object, %struct.Object* %43, i32 0, i32 71, !dbg !8437
  store float 1.000000e+00, float* %inertia, align 4, !dbg !8438
  %44 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8439
  %mass = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 69, !dbg !8440
  store float 1.000000e+00, float* %mass, align 4, !dbg !8441
  %45 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8442
  %formfactor = getelementptr inbounds %struct.Object, %struct.Object* %45, i32 0, i32 72, !dbg !8443
  store float 0x3FD99999A0000000, float* %formfactor, align 8, !dbg !8444
  %46 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8445
  %damping = getelementptr inbounds %struct.Object, %struct.Object* %46, i32 0, i32 70, !dbg !8446
  store float 0x3FA47AE140000000, float* %damping, align 8, !dbg !8447
  %47 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8448
  %rdamping = getelementptr inbounds %struct.Object, %struct.Object* %47, i32 0, i32 73, !dbg !8449
  store float 0x3FB99999A0000000, float* %rdamping, align 4, !dbg !8450
  %48 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8451
  %anisotropicFriction = getelementptr inbounds %struct.Object, %struct.Object* %48, i32 0, i32 105, !dbg !8452
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %anisotropicFriction, i64 0, i64 0, !dbg !8451
  store float 1.000000e+00, float* %arrayidx35, align 4, !dbg !8453
  %49 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8454
  %anisotropicFriction36 = getelementptr inbounds %struct.Object, %struct.Object* %49, i32 0, i32 105, !dbg !8455
  %arrayidx37 = getelementptr inbounds [3 x float], [3 x float]* %anisotropicFriction36, i64 0, i64 1, !dbg !8454
  store float 1.000000e+00, float* %arrayidx37, align 4, !dbg !8456
  %50 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8457
  %anisotropicFriction38 = getelementptr inbounds %struct.Object, %struct.Object* %50, i32 0, i32 105, !dbg !8458
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %anisotropicFriction38, i64 0, i64 2, !dbg !8457
  store float 1.000000e+00, float* %arrayidx39, align 4, !dbg !8459
  %51 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8460
  %gameflag = getelementptr inbounds %struct.Object, %struct.Object* %51, i32 0, i32 99, !dbg !8461
  store i32 81920, i32* %gameflag, align 8, !dbg !8462
  %52 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8463
  %margin = getelementptr inbounds %struct.Object, %struct.Object* %52, i32 0, i32 74, !dbg !8464
  store float 0x3FA47AE140000000, float* %margin, align 8, !dbg !8465
  %53 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8466
  %init_state = getelementptr inbounds %struct.Object, %struct.Object* %53, i32 0, i32 124, !dbg !8467
  store i32 1, i32* %init_state, align 4, !dbg !8468
  %54 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8469
  %state = getelementptr inbounds %struct.Object, %struct.Object* %54, i32 0, i32 123, !dbg !8470
  store i32 1, i32* %state, align 8, !dbg !8471
  %55 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8472
  %obstacleRad = getelementptr inbounds %struct.Object, %struct.Object* %55, i32 0, i32 77, !dbg !8473
  store float 1.000000e+00, float* %obstacleRad, align 4, !dbg !8474
  %56 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8475
  %step_height = getelementptr inbounds %struct.Object, %struct.Object* %56, i32 0, i32 78, !dbg !8476
  store float 0x3FC3333340000000, float* %step_height, align 8, !dbg !8477
  %57 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8478
  %jump_speed = getelementptr inbounds %struct.Object, %struct.Object* %57, i32 0, i32 79, !dbg !8479
  store float 1.000000e+01, float* %jump_speed, align 4, !dbg !8480
  %58 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8481
  %fall_speed = getelementptr inbounds %struct.Object, %struct.Object* %58, i32 0, i32 80, !dbg !8482
  store float 5.500000e+01, float* %fall_speed, align 8, !dbg !8483
  %59 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8484
  %col_group = getelementptr inbounds %struct.Object, %struct.Object* %59, i32 0, i32 81, !dbg !8485
  store i16 1, i16* %col_group, align 4, !dbg !8486
  %60 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8487
  %col_mask = getelementptr inbounds %struct.Object, %struct.Object* %60, i32 0, i32 82, !dbg !8488
  store i16 255, i16* %col_mask, align 2, !dbg !8489
  %61 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8490
  %fluidsimSettings = getelementptr inbounds %struct.Object, %struct.Object* %61, i32 0, i32 117, !dbg !8491
  store %struct.FluidsimSettings* null, %struct.FluidsimSettings** %fluidsimSettings, align 8, !dbg !8492
  %62 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8493
  %pc_ids = getelementptr inbounds %struct.Object, %struct.Object* %62, i32 0, i32 126, !dbg !8494
  call void @BLI_listbase_clear(%struct.ListBase* %pc_ids), !dbg !8495
  %63 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8496
  %avs = getelementptr inbounds %struct.Object, %struct.Object* %63, i32 0, i32 21, !dbg !8497
  call void @animviz_settings_init(%struct.bAnimVizSettings* %avs), !dbg !8498
  %64 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8499
  ret %struct.Object* %64, !dbg !8500
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @get_obdata_defname(i32 %type) #0 !dbg !8501 {
entry:
  %retval = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8504, metadata !DIExpression()), !dbg !8505
  %0 = load i32, i32* %type.addr, align 4, !dbg !8506
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
    i32 4, label %sw.bb3
    i32 5, label %sw.bb4
    i32 11, label %sw.bb5
    i32 10, label %sw.bb6
    i32 22, label %sw.bb7
    i32 25, label %sw.bb8
    i32 12, label %sw.bb9
    i32 0, label %sw.bb10
  ], !dbg !8507

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %retval, align 8, !dbg !8508
  br label %return, !dbg !8508

sw.bb1:                                           ; preds = %entry
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i8** %retval, align 8, !dbg !8510
  br label %return, !dbg !8510

sw.bb2:                                           ; preds = %entry
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8** %retval, align 8, !dbg !8511
  br label %return, !dbg !8511

sw.bb3:                                           ; preds = %entry
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8** %retval, align 8, !dbg !8512
  br label %return, !dbg !8512

sw.bb4:                                           ; preds = %entry
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i8** %retval, align 8, !dbg !8513
  br label %return, !dbg !8513

sw.bb5:                                           ; preds = %entry
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i8** %retval, align 8, !dbg !8514
  br label %return, !dbg !8514

sw.bb6:                                           ; preds = %entry
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i8** %retval, align 8, !dbg !8515
  br label %return, !dbg !8515

sw.bb7:                                           ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i8** %retval, align 8, !dbg !8516
  br label %return, !dbg !8516

sw.bb8:                                           ; preds = %entry
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0), i8** %retval, align 8, !dbg !8517
  br label %return, !dbg !8517

sw.bb9:                                           ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8** %retval, align 8, !dbg !8518
  br label %return, !dbg !8518

sw.bb10:                                          ; preds = %entry
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0), i8** %retval, align 8, !dbg !8519
  br label %return, !dbg !8519

sw.default:                                       ; preds = %entry
  %1 = load i32, i32* %type.addr, align 4, !dbg !8520
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.21, i64 0, i64 0), i32 %1), !dbg !8521
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0), i8** %retval, align 8, !dbg !8522
  br label %return, !dbg !8522

return:                                           ; preds = %sw.default, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %2 = load i8*, i8** %retval, align 8, !dbg !8523
  ret i8* %2, !dbg !8523
}

declare dso_local i8* @BKE_libblock_alloc(%struct.Main*, i16 signext, i8*) #3

declare dso_local void @unit_axis_angle(float*, float*) #3

declare dso_local void @unit_qt(float*) #3

declare dso_local void @unit_m4([4 x float]*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_listbase_clear(%struct.ListBase* %lb) #0 !dbg !8524 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !8528, metadata !DIExpression()), !dbg !8529
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !8530
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 1, !dbg !8531
  store i8* null, i8** %last, align 8, !dbg !8532
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !8533
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !8534
  store i8* null, i8** %first, align 8, !dbg !8535
  ret void, !dbg !8536
}

declare dso_local void @animviz_settings_init(%struct.bAnimVizSettings*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Object* @BKE_object_add(%struct.Main* %bmain, %struct.Scene* %scene, i32 %type) #0 !dbg !8537 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %type.addr = alloca i32, align 4
  %ob = alloca %struct.Object*, align 8
  %base = alloca %struct.Base*, align 8
  %name = alloca [66 x i8], align 16
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !8540, metadata !DIExpression()), !dbg !8541
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !8542, metadata !DIExpression()), !dbg !8543
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8544, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !8546, metadata !DIExpression()), !dbg !8547
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !8548, metadata !DIExpression()), !dbg !8549
  call void @llvm.dbg.declare(metadata [66 x i8]* %name, metadata !8550, metadata !DIExpression()), !dbg !8551
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !8552
  %0 = load i32, i32* %type.addr, align 4, !dbg !8553
  %call = call i8* @get_obdata_defname(i32 %0), !dbg !8554
  %call1 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %call, i64 66), !dbg !8555
  %1 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8556
  %2 = load i32, i32* %type.addr, align 4, !dbg !8557
  %arraydecay2 = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !8558
  %call3 = call %struct.Object* @BKE_object_add_only_object(%struct.Main* %1, i32 %2, i8* %arraydecay2), !dbg !8559
  store %struct.Object* %call3, %struct.Object** %ob, align 8, !dbg !8560
  %3 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8561
  %4 = load i32, i32* %type.addr, align 4, !dbg !8562
  %call4 = call i8* @BKE_object_obdata_add_from_type(%struct.Main* %3, i32 %4), !dbg !8563
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8564
  %data = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 19, !dbg !8565
  store i8* %call4, i8** %data, align 8, !dbg !8566
  %6 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8567
  %lay = getelementptr inbounds %struct.Scene, %struct.Scene* %6, i32 0, i32 12, !dbg !8568
  %7 = load i32, i32* %lay, align 8, !dbg !8568
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8569
  %lay5 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 52, !dbg !8570
  store i32 %7, i32* %lay5, align 8, !dbg !8571
  %9 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8572
  %10 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8573
  %call6 = call %struct.Base* @BKE_scene_base_add(%struct.Scene* %9, %struct.Object* %10), !dbg !8574
  store %struct.Base* %call6, %struct.Base** %base, align 8, !dbg !8575
  %11 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8576
  call void @BKE_scene_base_deselect_all(%struct.Scene* %11), !dbg !8577
  %12 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8578
  %13 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !8579
  call void @BKE_scene_base_select(%struct.Scene* %12, %struct.Base* %13), !dbg !8580
  %14 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !8581
  %15 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8582
  %id = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 0, !dbg !8583
  call void @DAG_id_tag_update_ex(%struct.Main* %14, %struct.ID* %id, i16 signext 7), !dbg !8584
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8585
  ret %struct.Object* %16, !dbg !8586
}

declare dso_local %struct.Base* @BKE_scene_base_add(%struct.Scene*, %struct.Object*) #3

declare dso_local void @BKE_scene_base_deselect_all(%struct.Scene*) #3

declare dso_local void @BKE_scene_base_select(%struct.Scene*, %struct.Base*) #3

declare dso_local void @DAG_id_tag_update_ex(%struct.Main*, %struct.ID*, i16 signext) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.SoftBody* @copy_softbody(%struct.SoftBody* %sb, i8 zeroext %copy_caches) #0 !dbg !8587 {
entry:
  %retval = alloca %struct.SoftBody*, align 8
  %sb.addr = alloca %struct.SoftBody*, align 8
  %copy_caches.addr = alloca i8, align 1
  %sbn = alloca %struct.SoftBody*, align 8
  %i = alloca i32, align 4
  store %struct.SoftBody* %sb, %struct.SoftBody** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sb.addr, metadata !8592, metadata !DIExpression()), !dbg !8593
  store i8 %copy_caches, i8* %copy_caches.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %copy_caches.addr, metadata !8594, metadata !DIExpression()), !dbg !8595
  call void @llvm.dbg.declare(metadata %struct.SoftBody** %sbn, metadata !8596, metadata !DIExpression()), !dbg !8597
  %0 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !8598
  %cmp = icmp eq %struct.SoftBody* %0, null, !dbg !8600
  br i1 %cmp, label %if.then, label %if.end, !dbg !8601

if.then:                                          ; preds = %entry
  store %struct.SoftBody* null, %struct.SoftBody** %retval, align 8, !dbg !8602
  br label %return, !dbg !8602

if.end:                                           ; preds = %entry
  %1 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !8603
  %2 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !8604
  %3 = bitcast %struct.SoftBody* %2 to i8*, !dbg !8604
  %call = call i8* %1(i8* %3), !dbg !8603
  %4 = bitcast i8* %call to %struct.SoftBody*, !dbg !8603
  store %struct.SoftBody* %4, %struct.SoftBody** %sbn, align 8, !dbg !8605
  %5 = load i8, i8* %copy_caches.addr, align 1, !dbg !8606
  %conv = zext i8 %5 to i32, !dbg !8606
  %cmp1 = icmp eq i32 %conv, 0, !dbg !8608
  br i1 %cmp1, label %if.then3, label %if.else, !dbg !8609

if.then3:                                         ; preds = %if.end
  %6 = load %struct.SoftBody*, %struct.SoftBody** %sbn, align 8, !dbg !8610
  %totpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %6, i32 0, i32 0, !dbg !8612
  store i32 0, i32* %totpoint, align 8, !dbg !8613
  %7 = load %struct.SoftBody*, %struct.SoftBody** %sbn, align 8, !dbg !8614
  %totspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %7, i32 0, i32 1, !dbg !8615
  store i32 0, i32* %totspring, align 4, !dbg !8616
  %8 = load %struct.SoftBody*, %struct.SoftBody** %sbn, align 8, !dbg !8617
  %bpoint = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %8, i32 0, i32 2, !dbg !8618
  store %struct.BodyPoint* null, %struct.BodyPoint** %bpoint, align 8, !dbg !8619
  %9 = load %struct.SoftBody*, %struct.SoftBody** %sbn, align 8, !dbg !8620
  %bspring = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %9, i32 0, i32 3, !dbg !8621
  store %struct.BodySpring* null, %struct.BodySpring** %bspring, align 8, !dbg !8622
  br label %if.end37, !dbg !8623

if.else:                                          ; preds = %if.end
  %10 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !8624
  %totspring4 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %10, i32 0, i32 1, !dbg !8626
  %11 = load i32, i32* %totspring4, align 4, !dbg !8626
  %12 = load %struct.SoftBody*, %struct.SoftBody** %sbn, align 8, !dbg !8627
  %totspring5 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %12, i32 0, i32 1, !dbg !8628
  store i32 %11, i32* %totspring5, align 4, !dbg !8629
  %13 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !8630
  %totpoint6 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %13, i32 0, i32 0, !dbg !8631
  %14 = load i32, i32* %totpoint6, align 8, !dbg !8631
  %15 = load %struct.SoftBody*, %struct.SoftBody** %sbn, align 8, !dbg !8632
  %totpoint7 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %15, i32 0, i32 0, !dbg !8633
  store i32 %14, i32* %totpoint7, align 8, !dbg !8634
  %16 = load %struct.SoftBody*, %struct.SoftBody** %sbn, align 8, !dbg !8635
  %bpoint8 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %16, i32 0, i32 2, !dbg !8637
  %17 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint8, align 8, !dbg !8637
  %tobool = icmp ne %struct.BodyPoint* %17, null, !dbg !8635
  br i1 %tobool, label %if.then9, label %if.end29, !dbg !8638

if.then9:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8639, metadata !DIExpression()), !dbg !8641
  %18 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !8642
  %19 = load %struct.SoftBody*, %struct.SoftBody** %sbn, align 8, !dbg !8643
  %bpoint10 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %19, i32 0, i32 2, !dbg !8644
  %20 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint10, align 8, !dbg !8644
  %21 = bitcast %struct.BodyPoint* %20 to i8*, !dbg !8643
  %call11 = call i8* %18(i8* %21), !dbg !8642
  %22 = bitcast i8* %call11 to %struct.BodyPoint*, !dbg !8642
  %23 = load %struct.SoftBody*, %struct.SoftBody** %sbn, align 8, !dbg !8645
  %bpoint12 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %23, i32 0, i32 2, !dbg !8646
  store %struct.BodyPoint* %22, %struct.BodyPoint** %bpoint12, align 8, !dbg !8647
  store i32 0, i32* %i, align 4, !dbg !8648
  br label %for.cond, !dbg !8650

for.cond:                                         ; preds = %for.inc, %if.then9
  %24 = load i32, i32* %i, align 4, !dbg !8651
  %25 = load %struct.SoftBody*, %struct.SoftBody** %sbn, align 8, !dbg !8653
  %totpoint13 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %25, i32 0, i32 0, !dbg !8654
  %26 = load i32, i32* %totpoint13, align 8, !dbg !8654
  %cmp14 = icmp slt i32 %24, %26, !dbg !8655
  br i1 %cmp14, label %for.body, label %for.end, !dbg !8656

for.body:                                         ; preds = %for.cond
  %27 = load %struct.SoftBody*, %struct.SoftBody** %sbn, align 8, !dbg !8657
  %bpoint16 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %27, i32 0, i32 2, !dbg !8660
  %28 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint16, align 8, !dbg !8660
  %29 = load i32, i32* %i, align 4, !dbg !8661
  %idxprom = sext i32 %29 to i64, !dbg !8657
  %arrayidx = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %28, i64 %idxprom, !dbg !8657
  %springs = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx, i32 0, i32 14, !dbg !8662
  %30 = load i32*, i32** %springs, align 8, !dbg !8662
  %tobool17 = icmp ne i32* %30, null, !dbg !8657
  br i1 %tobool17, label %if.then18, label %if.end28, !dbg !8663

if.then18:                                        ; preds = %for.body
  %31 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !8664
  %32 = load %struct.SoftBody*, %struct.SoftBody** %sbn, align 8, !dbg !8665
  %bpoint19 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %32, i32 0, i32 2, !dbg !8666
  %33 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint19, align 8, !dbg !8666
  %34 = load i32, i32* %i, align 4, !dbg !8667
  %idxprom20 = sext i32 %34 to i64, !dbg !8665
  %arrayidx21 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %33, i64 %idxprom20, !dbg !8665
  %springs22 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx21, i32 0, i32 14, !dbg !8668
  %35 = load i32*, i32** %springs22, align 8, !dbg !8668
  %36 = bitcast i32* %35 to i8*, !dbg !8665
  %call23 = call i8* %31(i8* %36), !dbg !8664
  %37 = bitcast i8* %call23 to i32*, !dbg !8664
  %38 = load %struct.SoftBody*, %struct.SoftBody** %sbn, align 8, !dbg !8669
  %bpoint24 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %38, i32 0, i32 2, !dbg !8670
  %39 = load %struct.BodyPoint*, %struct.BodyPoint** %bpoint24, align 8, !dbg !8670
  %40 = load i32, i32* %i, align 4, !dbg !8671
  %idxprom25 = sext i32 %40 to i64, !dbg !8669
  %arrayidx26 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %39, i64 %idxprom25, !dbg !8669
  %springs27 = getelementptr inbounds %struct.BodyPoint, %struct.BodyPoint* %arrayidx26, i32 0, i32 14, !dbg !8672
  store i32* %37, i32** %springs27, align 8, !dbg !8673
  br label %if.end28, !dbg !8669

if.end28:                                         ; preds = %if.then18, %for.body
  br label %for.inc, !dbg !8674

for.inc:                                          ; preds = %if.end28
  %41 = load i32, i32* %i, align 4, !dbg !8675
  %inc = add nsw i32 %41, 1, !dbg !8675
  store i32 %inc, i32* %i, align 4, !dbg !8675
  br label %for.cond, !dbg !8676, !llvm.loop !8677

for.end:                                          ; preds = %for.cond
  br label %if.end29, !dbg !8679

if.end29:                                         ; preds = %for.end, %if.else
  %42 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !8680
  %bspring30 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %42, i32 0, i32 3, !dbg !8682
  %43 = load %struct.BodySpring*, %struct.BodySpring** %bspring30, align 8, !dbg !8682
  %tobool31 = icmp ne %struct.BodySpring* %43, null, !dbg !8680
  br i1 %tobool31, label %if.then32, label %if.end36, !dbg !8683

if.then32:                                        ; preds = %if.end29
  %44 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !8684
  %45 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !8685
  %bspring33 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %45, i32 0, i32 3, !dbg !8686
  %46 = load %struct.BodySpring*, %struct.BodySpring** %bspring33, align 8, !dbg !8686
  %47 = bitcast %struct.BodySpring* %46 to i8*, !dbg !8685
  %call34 = call i8* %44(i8* %47), !dbg !8684
  %48 = bitcast i8* %call34 to %struct.BodySpring*, !dbg !8684
  %49 = load %struct.SoftBody*, %struct.SoftBody** %sbn, align 8, !dbg !8687
  %bspring35 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %49, i32 0, i32 3, !dbg !8688
  store %struct.BodySpring* %48, %struct.BodySpring** %bspring35, align 8, !dbg !8689
  br label %if.end36, !dbg !8687

if.end36:                                         ; preds = %if.then32, %if.end29
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then3
  %50 = load %struct.SoftBody*, %struct.SoftBody** %sbn, align 8, !dbg !8690
  %keys = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %50, i32 0, i32 29, !dbg !8691
  store %struct.SBVertex** null, %struct.SBVertex*** %keys, align 8, !dbg !8692
  %51 = load %struct.SoftBody*, %struct.SoftBody** %sbn, align 8, !dbg !8693
  %totpointkey = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %51, i32 0, i32 30, !dbg !8694
  store i32 0, i32* %totpointkey, align 8, !dbg !8695
  %52 = load %struct.SoftBody*, %struct.SoftBody** %sbn, align 8, !dbg !8696
  %totkey = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %52, i32 0, i32 31, !dbg !8697
  store i32 0, i32* %totkey, align 4, !dbg !8698
  %53 = load %struct.SoftBody*, %struct.SoftBody** %sbn, align 8, !dbg !8699
  %scratch = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %53, i32 0, i32 44, !dbg !8700
  store %struct.SBScratch* null, %struct.SBScratch** %scratch, align 8, !dbg !8701
  %54 = load %struct.SoftBody*, %struct.SoftBody** %sbn, align 8, !dbg !8702
  %ptcaches = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %54, i32 0, i32 48, !dbg !8703
  %55 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !8704
  %ptcaches38 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %55, i32 0, i32 48, !dbg !8705
  %56 = load i8, i8* %copy_caches.addr, align 1, !dbg !8706
  %call39 = call %struct.PointCache* @BKE_ptcache_copy_list(%struct.ListBase* %ptcaches, %struct.ListBase* %ptcaches38, i8 zeroext %56), !dbg !8707
  %57 = load %struct.SoftBody*, %struct.SoftBody** %sbn, align 8, !dbg !8708
  %pointcache = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %57, i32 0, i32 47, !dbg !8709
  store %struct.PointCache* %call39, %struct.PointCache** %pointcache, align 8, !dbg !8710
  %58 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !8711
  %effector_weights = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %58, i32 0, i32 49, !dbg !8713
  %59 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights, align 8, !dbg !8713
  %tobool40 = icmp ne %struct.EffectorWeights* %59, null, !dbg !8711
  br i1 %tobool40, label %if.then41, label %if.end45, !dbg !8714

if.then41:                                        ; preds = %if.end37
  %60 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !8715
  %61 = load %struct.SoftBody*, %struct.SoftBody** %sb.addr, align 8, !dbg !8716
  %effector_weights42 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %61, i32 0, i32 49, !dbg !8717
  %62 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights42, align 8, !dbg !8717
  %63 = bitcast %struct.EffectorWeights* %62 to i8*, !dbg !8716
  %call43 = call i8* %60(i8* %63), !dbg !8715
  %64 = bitcast i8* %call43 to %struct.EffectorWeights*, !dbg !8715
  %65 = load %struct.SoftBody*, %struct.SoftBody** %sbn, align 8, !dbg !8718
  %effector_weights44 = getelementptr inbounds %struct.SoftBody, %struct.SoftBody* %65, i32 0, i32 49, !dbg !8719
  store %struct.EffectorWeights* %64, %struct.EffectorWeights** %effector_weights44, align 8, !dbg !8720
  br label %if.end45, !dbg !8718

if.end45:                                         ; preds = %if.then41, %if.end37
  %66 = load %struct.SoftBody*, %struct.SoftBody** %sbn, align 8, !dbg !8721
  store %struct.SoftBody* %66, %struct.SoftBody** %retval, align 8, !dbg !8722
  br label %return, !dbg !8722

return:                                           ; preds = %if.end45, %if.then
  %67 = load %struct.SoftBody*, %struct.SoftBody** %retval, align 8, !dbg !8723
  ret %struct.SoftBody* %67, !dbg !8723
}

declare dso_local %struct.PointCache* @BKE_ptcache_copy_list(%struct.ListBase*, %struct.ListBase*, i8 zeroext) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.BulletSoftBody* @copy_bulletsoftbody(%struct.BulletSoftBody* %bsb) #0 !dbg !8724 {
entry:
  %retval = alloca %struct.BulletSoftBody*, align 8
  %bsb.addr = alloca %struct.BulletSoftBody*, align 8
  %bsbn = alloca %struct.BulletSoftBody*, align 8
  store %struct.BulletSoftBody* %bsb, %struct.BulletSoftBody** %bsb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BulletSoftBody** %bsb.addr, metadata !8729, metadata !DIExpression()), !dbg !8730
  call void @llvm.dbg.declare(metadata %struct.BulletSoftBody** %bsbn, metadata !8731, metadata !DIExpression()), !dbg !8732
  %0 = load %struct.BulletSoftBody*, %struct.BulletSoftBody** %bsb.addr, align 8, !dbg !8733
  %cmp = icmp eq %struct.BulletSoftBody* %0, null, !dbg !8735
  br i1 %cmp, label %if.then, label %if.end, !dbg !8736

if.then:                                          ; preds = %entry
  store %struct.BulletSoftBody* null, %struct.BulletSoftBody** %retval, align 8, !dbg !8737
  br label %return, !dbg !8737

if.end:                                           ; preds = %entry
  %1 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !8738
  %2 = load %struct.BulletSoftBody*, %struct.BulletSoftBody** %bsb.addr, align 8, !dbg !8739
  %3 = bitcast %struct.BulletSoftBody* %2 to i8*, !dbg !8739
  %call = call i8* %1(i8* %3), !dbg !8738
  %4 = bitcast i8* %call to %struct.BulletSoftBody*, !dbg !8738
  store %struct.BulletSoftBody* %4, %struct.BulletSoftBody** %bsbn, align 8, !dbg !8740
  %5 = load %struct.BulletSoftBody*, %struct.BulletSoftBody** %bsbn, align 8, !dbg !8741
  store %struct.BulletSoftBody* %5, %struct.BulletSoftBody** %retval, align 8, !dbg !8742
  br label %return, !dbg !8742

return:                                           ; preds = %if.end, %if.then
  %6 = load %struct.BulletSoftBody*, %struct.BulletSoftBody** %retval, align 8, !dbg !8743
  ret %struct.BulletSoftBody* %6, !dbg !8743
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ParticleSystem* @copy_particlesystem(%struct.ParticleSystem* %psys) #0 !dbg !8744 {
entry:
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %psysn = alloca %struct.ParticleSystem*, align 8
  %pa = alloca %struct.ParticleData*, align 8
  %p = alloca i32, align 4
  %key = alloca %struct.ParticleKey*, align 8
  %boid19 = alloca %struct.BoidParticle*, align 8
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !8747, metadata !DIExpression()), !dbg !8748
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psysn, metadata !8749, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !8751, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.declare(metadata i32* %p, metadata !8753, metadata !DIExpression()), !dbg !8754
  %0 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !8755
  %1 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8756
  %2 = bitcast %struct.ParticleSystem* %1 to i8*, !dbg !8756
  %call = call i8* %0(i8* %2), !dbg !8755
  %3 = bitcast i8* %call to %struct.ParticleSystem*, !dbg !8755
  store %struct.ParticleSystem* %3, %struct.ParticleSystem** %psysn, align 8, !dbg !8757
  %4 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !8758
  %5 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8759
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %5, i32 0, i32 3, !dbg !8760
  %6 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !8760
  %7 = bitcast %struct.ParticleData* %6 to i8*, !dbg !8759
  %call1 = call i8* %4(i8* %7), !dbg !8758
  %8 = bitcast i8* %call1 to %struct.ParticleData*, !dbg !8758
  %9 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8761
  %particles2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %9, i32 0, i32 3, !dbg !8762
  store %struct.ParticleData* %8, %struct.ParticleData** %particles2, align 8, !dbg !8763
  %10 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !8764
  %11 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8765
  %child = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %11, i32 0, i32 4, !dbg !8766
  %12 = load %struct.ChildParticle*, %struct.ChildParticle** %child, align 8, !dbg !8766
  %13 = bitcast %struct.ChildParticle* %12 to i8*, !dbg !8765
  %call3 = call i8* %10(i8* %13), !dbg !8764
  %14 = bitcast i8* %call3 to %struct.ChildParticle*, !dbg !8764
  %15 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8767
  %child4 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %15, i32 0, i32 4, !dbg !8768
  store %struct.ChildParticle* %14, %struct.ChildParticle** %child4, align 8, !dbg !8769
  %16 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8770
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %16, i32 0, i32 2, !dbg !8772
  %17 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8772
  %type = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %17, i32 0, i32 7, !dbg !8773
  %18 = load i16, i16* %type, align 8, !dbg !8773
  %conv = sext i16 %18 to i32, !dbg !8770
  %cmp = icmp eq i32 %conv, 2, !dbg !8774
  br i1 %cmp, label %if.then, label %if.end, !dbg !8775

if.then:                                          ; preds = %entry
  store i32 0, i32* %p, align 4, !dbg !8776
  %19 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8779
  %particles6 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %19, i32 0, i32 3, !dbg !8780
  %20 = load %struct.ParticleData*, %struct.ParticleData** %particles6, align 8, !dbg !8780
  store %struct.ParticleData* %20, %struct.ParticleData** %pa, align 8, !dbg !8781
  br label %for.cond, !dbg !8782

for.cond:                                         ; preds = %for.inc, %if.then
  %21 = load i32, i32* %p, align 4, !dbg !8783
  %22 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8785
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %22, i32 0, i32 26, !dbg !8786
  %23 = load i32, i32* %totpart, align 8, !dbg !8786
  %cmp7 = icmp slt i32 %21, %23, !dbg !8787
  br i1 %cmp7, label %for.body, label %for.end, !dbg !8788

for.body:                                         ; preds = %for.cond
  %24 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !8789
  %25 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !8790
  %hair = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %25, i32 0, i32 2, !dbg !8791
  %26 = load %struct.HairKey*, %struct.HairKey** %hair, align 8, !dbg !8791
  %27 = bitcast %struct.HairKey* %26 to i8*, !dbg !8790
  %call9 = call i8* %24(i8* %27), !dbg !8789
  %28 = bitcast i8* %call9 to %struct.HairKey*, !dbg !8789
  %29 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !8792
  %hair10 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %29, i32 0, i32 2, !dbg !8793
  store %struct.HairKey* %28, %struct.HairKey** %hair10, align 8, !dbg !8794
  br label %for.inc, !dbg !8792

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %p, align 4, !dbg !8795
  %inc = add nsw i32 %30, 1, !dbg !8795
  store i32 %inc, i32* %p, align 4, !dbg !8795
  %31 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !8796
  %incdec.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %31, i32 1, !dbg !8796
  store %struct.ParticleData* %incdec.ptr, %struct.ParticleData** %pa, align 8, !dbg !8796
  br label %for.cond, !dbg !8797, !llvm.loop !8798

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !8800

if.end:                                           ; preds = %for.end, %entry
  %32 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8801
  %particles11 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %32, i32 0, i32 3, !dbg !8803
  %33 = load %struct.ParticleData*, %struct.ParticleData** %particles11, align 8, !dbg !8803
  %tobool = icmp ne %struct.ParticleData* %33, null, !dbg !8801
  br i1 %tobool, label %land.lhs.true, label %if.end49, !dbg !8804

land.lhs.true:                                    ; preds = %if.end
  %34 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8805
  %particles12 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %34, i32 0, i32 3, !dbg !8806
  %35 = load %struct.ParticleData*, %struct.ParticleData** %particles12, align 8, !dbg !8806
  %keys = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %35, i32 0, i32 3, !dbg !8807
  %36 = load %struct.ParticleKey*, %struct.ParticleKey** %keys, align 8, !dbg !8807
  %tobool13 = icmp ne %struct.ParticleKey* %36, null, !dbg !8805
  br i1 %tobool13, label %if.then16, label %lor.lhs.false, !dbg !8808

lor.lhs.false:                                    ; preds = %land.lhs.true
  %37 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8809
  %particles14 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %37, i32 0, i32 3, !dbg !8810
  %38 = load %struct.ParticleData*, %struct.ParticleData** %particles14, align 8, !dbg !8810
  %boid = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %38, i32 0, i32 4, !dbg !8811
  %39 = load %struct.BoidParticle*, %struct.BoidParticle** %boid, align 8, !dbg !8811
  %tobool15 = icmp ne %struct.BoidParticle* %39, null, !dbg !8809
  br i1 %tobool15, label %if.then16, label %if.end49, !dbg !8812

if.then16:                                        ; preds = %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.ParticleKey** %key, metadata !8813, metadata !DIExpression()), !dbg !8815
  %40 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8816
  %particles17 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %40, i32 0, i32 3, !dbg !8817
  %41 = load %struct.ParticleData*, %struct.ParticleData** %particles17, align 8, !dbg !8817
  %keys18 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %41, i32 0, i32 3, !dbg !8818
  %42 = load %struct.ParticleKey*, %struct.ParticleKey** %keys18, align 8, !dbg !8818
  store %struct.ParticleKey* %42, %struct.ParticleKey** %key, align 8, !dbg !8815
  call void @llvm.dbg.declare(metadata %struct.BoidParticle** %boid19, metadata !8819, metadata !DIExpression()), !dbg !8820
  %43 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8821
  %particles20 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %43, i32 0, i32 3, !dbg !8822
  %44 = load %struct.ParticleData*, %struct.ParticleData** %particles20, align 8, !dbg !8822
  %boid21 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %44, i32 0, i32 4, !dbg !8823
  %45 = load %struct.BoidParticle*, %struct.BoidParticle** %boid21, align 8, !dbg !8823
  store %struct.BoidParticle* %45, %struct.BoidParticle** %boid19, align 8, !dbg !8820
  %46 = load %struct.ParticleKey*, %struct.ParticleKey** %key, align 8, !dbg !8824
  %tobool22 = icmp ne %struct.ParticleKey* %46, null, !dbg !8824
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !8826

if.then23:                                        ; preds = %if.then16
  %47 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !8827
  %48 = load %struct.ParticleKey*, %struct.ParticleKey** %key, align 8, !dbg !8828
  %49 = bitcast %struct.ParticleKey* %48 to i8*, !dbg !8828
  %call24 = call i8* %47(i8* %49), !dbg !8827
  %50 = bitcast i8* %call24 to %struct.ParticleKey*, !dbg !8827
  store %struct.ParticleKey* %50, %struct.ParticleKey** %key, align 8, !dbg !8829
  br label %if.end25, !dbg !8830

if.end25:                                         ; preds = %if.then23, %if.then16
  %51 = load %struct.BoidParticle*, %struct.BoidParticle** %boid19, align 8, !dbg !8831
  %tobool26 = icmp ne %struct.BoidParticle* %51, null, !dbg !8831
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !8833

if.then27:                                        ; preds = %if.end25
  %52 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !8834
  %53 = load %struct.BoidParticle*, %struct.BoidParticle** %boid19, align 8, !dbg !8835
  %54 = bitcast %struct.BoidParticle* %53 to i8*, !dbg !8835
  %call28 = call i8* %52(i8* %54), !dbg !8834
  %55 = bitcast i8* %call28 to %struct.BoidParticle*, !dbg !8834
  store %struct.BoidParticle* %55, %struct.BoidParticle** %boid19, align 8, !dbg !8836
  br label %if.end29, !dbg !8837

if.end29:                                         ; preds = %if.then27, %if.end25
  store i32 0, i32* %p, align 4, !dbg !8838
  %56 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8840
  %particles30 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %56, i32 0, i32 3, !dbg !8841
  %57 = load %struct.ParticleData*, %struct.ParticleData** %particles30, align 8, !dbg !8841
  store %struct.ParticleData* %57, %struct.ParticleData** %pa, align 8, !dbg !8842
  br label %for.cond31, !dbg !8843

for.cond31:                                       ; preds = %for.inc45, %if.end29
  %58 = load i32, i32* %p, align 4, !dbg !8844
  %59 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8846
  %totpart32 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %59, i32 0, i32 26, !dbg !8847
  %60 = load i32, i32* %totpart32, align 8, !dbg !8847
  %cmp33 = icmp slt i32 %58, %60, !dbg !8848
  br i1 %cmp33, label %for.body35, label %for.end48, !dbg !8849

for.body35:                                       ; preds = %for.cond31
  %61 = load %struct.BoidParticle*, %struct.BoidParticle** %boid19, align 8, !dbg !8850
  %tobool36 = icmp ne %struct.BoidParticle* %61, null, !dbg !8850
  br i1 %tobool36, label %if.then37, label %if.end40, !dbg !8853

if.then37:                                        ; preds = %for.body35
  %62 = load %struct.BoidParticle*, %struct.BoidParticle** %boid19, align 8, !dbg !8854
  %incdec.ptr38 = getelementptr inbounds %struct.BoidParticle, %struct.BoidParticle* %62, i32 1, !dbg !8854
  store %struct.BoidParticle* %incdec.ptr38, %struct.BoidParticle** %boid19, align 8, !dbg !8854
  %63 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !8855
  %boid39 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %63, i32 0, i32 4, !dbg !8856
  store %struct.BoidParticle* %62, %struct.BoidParticle** %boid39, align 8, !dbg !8857
  br label %if.end40, !dbg !8855

if.end40:                                         ; preds = %if.then37, %for.body35
  %64 = load %struct.ParticleKey*, %struct.ParticleKey** %key, align 8, !dbg !8858
  %tobool41 = icmp ne %struct.ParticleKey* %64, null, !dbg !8858
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !8860

if.then42:                                        ; preds = %if.end40
  %65 = load %struct.ParticleKey*, %struct.ParticleKey** %key, align 8, !dbg !8861
  %66 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !8863
  %keys43 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %66, i32 0, i32 3, !dbg !8864
  store %struct.ParticleKey* %65, %struct.ParticleKey** %keys43, align 8, !dbg !8865
  %67 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !8866
  %totkey = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %67, i32 0, i32 5, !dbg !8867
  %68 = load i32, i32* %totkey, align 8, !dbg !8867
  %69 = load %struct.ParticleKey*, %struct.ParticleKey** %key, align 8, !dbg !8868
  %idx.ext = sext i32 %68 to i64, !dbg !8868
  %add.ptr = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %69, i64 %idx.ext, !dbg !8868
  store %struct.ParticleKey* %add.ptr, %struct.ParticleKey** %key, align 8, !dbg !8868
  br label %if.end44, !dbg !8869

if.end44:                                         ; preds = %if.then42, %if.end40
  br label %for.inc45, !dbg !8870

for.inc45:                                        ; preds = %if.end44
  %70 = load i32, i32* %p, align 4, !dbg !8871
  %inc46 = add nsw i32 %70, 1, !dbg !8871
  store i32 %inc46, i32* %p, align 4, !dbg !8871
  %71 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !8872
  %incdec.ptr47 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %71, i32 1, !dbg !8872
  store %struct.ParticleData* %incdec.ptr47, %struct.ParticleData** %pa, align 8, !dbg !8872
  br label %for.cond31, !dbg !8873, !llvm.loop !8874

for.end48:                                        ; preds = %for.cond31
  br label %if.end49, !dbg !8876

if.end49:                                         ; preds = %for.end48, %lor.lhs.false, %if.end
  %72 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8877
  %clmd = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %72, i32 0, i32 11, !dbg !8879
  %73 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd, align 8, !dbg !8879
  %tobool50 = icmp ne %struct.ClothModifierData* %73, null, !dbg !8877
  br i1 %tobool50, label %if.then51, label %if.end56, !dbg !8880

if.then51:                                        ; preds = %if.end49
  %call52 = call %struct.ModifierData* @modifier_new(i32 22), !dbg !8881
  %74 = bitcast %struct.ModifierData* %call52 to %struct.ClothModifierData*, !dbg !8883
  %75 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8884
  %clmd53 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %75, i32 0, i32 11, !dbg !8885
  store %struct.ClothModifierData* %74, %struct.ClothModifierData** %clmd53, align 8, !dbg !8886
  %76 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8887
  %clmd54 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %76, i32 0, i32 11, !dbg !8888
  %77 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd54, align 8, !dbg !8888
  %78 = bitcast %struct.ClothModifierData* %77 to %struct.ModifierData*, !dbg !8889
  %79 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8890
  %clmd55 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %79, i32 0, i32 11, !dbg !8891
  %80 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd55, align 8, !dbg !8891
  %81 = bitcast %struct.ClothModifierData* %80 to %struct.ModifierData*, !dbg !8892
  call void @modifier_copyData(%struct.ModifierData* %78, %struct.ModifierData* %81), !dbg !8893
  %82 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8894
  %hair_out_dm = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %82, i32 0, i32 13, !dbg !8895
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %hair_out_dm, align 8, !dbg !8896
  %83 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8897
  %hair_in_dm = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %83, i32 0, i32 12, !dbg !8898
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %hair_in_dm, align 8, !dbg !8899
  br label %if.end56, !dbg !8900

if.end56:                                         ; preds = %if.then51, %if.end49
  %84 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8901
  %targets = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %84, i32 0, i32 17, !dbg !8902
  %85 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8903
  %targets57 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %85, i32 0, i32 17, !dbg !8904
  call void @BLI_duplicatelist(%struct.ListBase* %targets, %struct.ListBase* %targets57), !dbg !8905
  %86 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8906
  %pathcache = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %86, i32 0, i32 7, !dbg !8907
  store %struct.ParticleCacheKey** null, %struct.ParticleCacheKey*** %pathcache, align 8, !dbg !8908
  %87 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8909
  %childcache = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %87, i32 0, i32 8, !dbg !8910
  store %struct.ParticleCacheKey** null, %struct.ParticleCacheKey*** %childcache, align 8, !dbg !8911
  %88 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8912
  %edit = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %88, i32 0, i32 5, !dbg !8913
  store %struct.PTCacheEdit* null, %struct.PTCacheEdit** %edit, align 8, !dbg !8914
  %89 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8915
  %pdd = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %89, i32 0, i32 48, !dbg !8916
  store %struct.ParticleDrawData* null, %struct.ParticleDrawData** %pdd, align 8, !dbg !8917
  %90 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8918
  %effectors = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %90, i32 0, i32 42, !dbg !8919
  store %struct.ListBase* null, %struct.ListBase** %effectors, align 8, !dbg !8920
  %91 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8921
  %tree = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %91, i32 0, i32 46, !dbg !8922
  store %struct.KDTree* null, %struct.KDTree** %tree, align 8, !dbg !8923
  %92 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8924
  %bvhtree = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %92, i32 0, i32 47, !dbg !8925
  store %struct.BVHTree* null, %struct.BVHTree** %bvhtree, align 8, !dbg !8926
  %93 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8927
  %pathcachebufs = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %93, i32 0, i32 9, !dbg !8928
  call void @BLI_listbase_clear(%struct.ListBase* %pathcachebufs), !dbg !8929
  %94 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8930
  %childcachebufs = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %94, i32 0, i32 10, !dbg !8931
  call void @BLI_listbase_clear(%struct.ListBase* %childcachebufs), !dbg !8932
  %95 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8933
  %renderdata = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %95, i32 0, i32 39, !dbg !8934
  store i8* null, i8** %renderdata, align 8, !dbg !8935
  %96 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8936
  %ptcaches = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %96, i32 0, i32 41, !dbg !8937
  %97 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !8938
  %ptcaches58 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %97, i32 0, i32 41, !dbg !8939
  %call59 = call %struct.PointCache* @BKE_ptcache_copy_list(%struct.ListBase* %ptcaches, %struct.ListBase* %ptcaches58, i8 zeroext 0), !dbg !8940
  %98 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8941
  %pointcache = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %98, i32 0, i32 40, !dbg !8942
  store %struct.PointCache* %call59, %struct.PointCache** %pointcache, align 8, !dbg !8943
  %99 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8944
  %clmd60 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %99, i32 0, i32 11, !dbg !8946
  %100 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd60, align 8, !dbg !8946
  %tobool61 = icmp ne %struct.ClothModifierData* %100, null, !dbg !8944
  br i1 %tobool61, label %if.then62, label %if.end65, !dbg !8947

if.then62:                                        ; preds = %if.end56
  %101 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8948
  %pointcache63 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %101, i32 0, i32 40, !dbg !8950
  %102 = load %struct.PointCache*, %struct.PointCache** %pointcache63, align 8, !dbg !8950
  %103 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8951
  %clmd64 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %103, i32 0, i32 11, !dbg !8952
  %104 = load %struct.ClothModifierData*, %struct.ClothModifierData** %clmd64, align 8, !dbg !8952
  %point_cache = getelementptr inbounds %struct.ClothModifierData, %struct.ClothModifierData* %104, i32 0, i32 5, !dbg !8953
  store %struct.PointCache* %102, %struct.PointCache** %point_cache, align 8, !dbg !8954
  br label %if.end65, !dbg !8955

if.end65:                                         ; preds = %if.then62, %if.end56
  %105 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8956
  %part66 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %105, i32 0, i32 2, !dbg !8957
  %106 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part66, align 8, !dbg !8957
  %107 = bitcast %struct.ParticleSettings* %106 to %struct.ID*, !dbg !8958
  call void @id_us_plus(%struct.ID* %107), !dbg !8959
  %108 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psysn, align 8, !dbg !8960
  ret %struct.ParticleSystem* %108, !dbg !8961
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_object_pose_context_check(%struct.Object* %ob) #0 !dbg !8962 {
entry:
  %retval = alloca i8, align 1
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8963, metadata !DIExpression()), !dbg !8964
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8965
  %tobool = icmp ne %struct.Object* %0, null, !dbg !8967
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !8968

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8969
  %type = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 3, !dbg !8970
  %2 = load i16, i16* %type, align 8, !dbg !8970
  %conv = sext i16 %2 to i32, !dbg !8969
  %cmp = icmp eq i32 %conv, 25, !dbg !8971
  br i1 %cmp, label %land.lhs.true2, label %if.else, !dbg !8972

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8973
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 18, !dbg !8974
  %4 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !8974
  %tobool3 = icmp ne %struct.bPose* %4, null, !dbg !8975
  br i1 %tobool3, label %land.lhs.true4, label %if.else, !dbg !8976

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8977
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 27, !dbg !8978
  %6 = load i32, i32* %mode, align 8, !dbg !8978
  %and = and i32 %6, 64, !dbg !8979
  %tobool5 = icmp ne i32 %and, 0, !dbg !8979
  br i1 %tobool5, label %if.then, label %if.else, !dbg !8980

if.then:                                          ; preds = %land.lhs.true4
  store i8 1, i8* %retval, align 1, !dbg !8981
  br label %return, !dbg !8981

if.else:                                          ; preds = %land.lhs.true4, %land.lhs.true2, %land.lhs.true, %entry
  store i8 0, i8* %retval, align 1, !dbg !8983
  br label %return, !dbg !8983

return:                                           ; preds = %if.else, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !8985
  ret i8 %7, !dbg !8985
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Object* @BKE_object_pose_armature_get(%struct.Object* %ob) #0 !dbg !8986 {
entry:
  %retval = alloca %struct.Object*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8989, metadata !DIExpression()), !dbg !8990
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8991
  %cmp = icmp eq %struct.Object* %0, null, !dbg !8993
  br i1 %cmp, label %if.then, label %if.end, !dbg !8994

if.then:                                          ; preds = %entry
  store %struct.Object* null, %struct.Object** %retval, align 8, !dbg !8995
  br label %return, !dbg !8995

if.end:                                           ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8996
  %call = call zeroext i8 @BKE_object_pose_context_check(%struct.Object* %1), !dbg !8998
  %tobool = icmp ne i8 %call, 0, !dbg !8998
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !8999

if.then1:                                         ; preds = %if.end
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9000
  store %struct.Object* %2, %struct.Object** %retval, align 8, !dbg !9001
  br label %return, !dbg !9001

if.end2:                                          ; preds = %if.end
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9002
  %call3 = call %struct.Object* @modifiers_isDeformedByArmature(%struct.Object* %3), !dbg !9003
  store %struct.Object* %call3, %struct.Object** %ob.addr, align 8, !dbg !9004
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9005
  %call4 = call zeroext i8 @BKE_object_pose_context_check(%struct.Object* %4), !dbg !9007
  %tobool5 = icmp ne i8 %call4, 0, !dbg !9007
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !9008

if.then6:                                         ; preds = %if.end2
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9009
  store %struct.Object* %5, %struct.Object** %retval, align 8, !dbg !9010
  br label %return, !dbg !9010

if.end7:                                          ; preds = %if.end2
  store %struct.Object* null, %struct.Object** %retval, align 8, !dbg !9011
  br label %return, !dbg !9011

return:                                           ; preds = %if.end7, %if.then6, %if.then1, %if.then
  %6 = load %struct.Object*, %struct.Object** %retval, align 8, !dbg !9012
  ret %struct.Object* %6, !dbg !9012
}

declare dso_local %struct.Object* @modifiers_isDeformedByArmature(%struct.Object*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_transform_copy(%struct.Object* %ob_tar, %struct.Object* %ob_src) #0 !dbg !9013 {
entry:
  %ob_tar.addr = alloca %struct.Object*, align 8
  %ob_src.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob_tar, %struct.Object** %ob_tar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob_tar.addr, metadata !9018, metadata !DIExpression()), !dbg !9019
  store %struct.Object* %ob_src, %struct.Object** %ob_src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob_src.addr, metadata !9020, metadata !DIExpression()), !dbg !9021
  %0 = load %struct.Object*, %struct.Object** %ob_tar.addr, align 8, !dbg !9022
  %loc = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 33, !dbg !9023
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !9022
  %1 = load %struct.Object*, %struct.Object** %ob_src.addr, align 8, !dbg !9024
  %loc1 = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 33, !dbg !9025
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %loc1, i64 0, i64 0, !dbg !9024
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay2), !dbg !9026
  %2 = load %struct.Object*, %struct.Object** %ob_tar.addr, align 8, !dbg !9027
  %rot = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 39, !dbg !9028
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %rot, i64 0, i64 0, !dbg !9027
  %3 = load %struct.Object*, %struct.Object** %ob_src.addr, align 8, !dbg !9029
  %rot4 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 39, !dbg !9030
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %rot4, i64 0, i64 0, !dbg !9029
  call void @copy_v3_v3(float* %arraydecay3, float* %arraydecay5), !dbg !9031
  %4 = load %struct.Object*, %struct.Object** %ob_tar.addr, align 8, !dbg !9032
  %quat = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 41, !dbg !9033
  %arraydecay6 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !9032
  %5 = load %struct.Object*, %struct.Object** %ob_src.addr, align 8, !dbg !9034
  %quat7 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 41, !dbg !9035
  %arraydecay8 = getelementptr inbounds [4 x float], [4 x float]* %quat7, i64 0, i64 0, !dbg !9034
  call void @copy_v3_v3(float* %arraydecay6, float* %arraydecay8), !dbg !9036
  %6 = load %struct.Object*, %struct.Object** %ob_tar.addr, align 8, !dbg !9037
  %rotAxis = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 43, !dbg !9038
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %rotAxis, i64 0, i64 0, !dbg !9037
  %7 = load %struct.Object*, %struct.Object** %ob_src.addr, align 8, !dbg !9039
  %rotAxis10 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 43, !dbg !9040
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %rotAxis10, i64 0, i64 0, !dbg !9039
  call void @copy_v3_v3(float* %arraydecay9, float* %arraydecay11), !dbg !9041
  %8 = load %struct.Object*, %struct.Object** %ob_src.addr, align 8, !dbg !9042
  %rotAngle = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 45, !dbg !9043
  %9 = load float, float* %rotAngle, align 8, !dbg !9043
  %10 = load %struct.Object*, %struct.Object** %ob_tar.addr, align 8, !dbg !9044
  %rotAngle12 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 45, !dbg !9045
  store float %9, float* %rotAngle12, align 8, !dbg !9046
  %11 = load %struct.Object*, %struct.Object** %ob_src.addr, align 8, !dbg !9047
  %rotmode = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 83, !dbg !9048
  %12 = load i16, i16* %rotmode, align 8, !dbg !9048
  %13 = load %struct.Object*, %struct.Object** %ob_tar.addr, align 8, !dbg !9049
  %rotmode13 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 83, !dbg !9050
  store i16 %12, i16* %rotmode13, align 8, !dbg !9051
  %14 = load %struct.Object*, %struct.Object** %ob_tar.addr, align 8, !dbg !9052
  %size = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 36, !dbg !9053
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !9052
  %15 = load %struct.Object*, %struct.Object** %ob_src.addr, align 8, !dbg !9054
  %size15 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 36, !dbg !9055
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %size15, i64 0, i64 0, !dbg !9054
  call void @copy_v3_v3(float* %arraydecay14, float* %arraydecay16), !dbg !9056
  ret void, !dbg !9057
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !9058 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9062, metadata !DIExpression()), !dbg !9063
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9064, metadata !DIExpression()), !dbg !9065
  %0 = load float*, float** %a.addr, align 8, !dbg !9066
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9066
  %1 = load float, float* %arrayidx, align 4, !dbg !9066
  %2 = load float*, float** %r.addr, align 8, !dbg !9067
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9067
  store float %1, float* %arrayidx1, align 4, !dbg !9068
  %3 = load float*, float** %a.addr, align 8, !dbg !9069
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !9069
  %4 = load float, float* %arrayidx2, align 4, !dbg !9069
  %5 = load float*, float** %r.addr, align 8, !dbg !9070
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !9070
  store float %4, float* %arrayidx3, align 4, !dbg !9071
  %6 = load float*, float** %a.addr, align 8, !dbg !9072
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !9072
  %7 = load float, float* %arrayidx4, align 4, !dbg !9072
  %8 = load float*, float** %r.addr, align 8, !dbg !9073
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !9073
  store float %7, float* %arrayidx5, align 4, !dbg !9074
  ret void, !dbg !9075
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Object* @BKE_object_copy_ex(%struct.Main* %bmain, %struct.Object* %ob, i8 zeroext %copy_caches) #0 !dbg !9076 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %copy_caches.addr = alloca i8, align 1
  %obn = alloca %struct.Object*, align 8
  %md = alloca %struct.ModifierData*, align 8
  %a = alloca i32, align 4
  %nmd = alloca %struct.ModifierData*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !9079, metadata !DIExpression()), !dbg !9080
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9081, metadata !DIExpression()), !dbg !9082
  store i8 %copy_caches, i8* %copy_caches.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %copy_caches.addr, metadata !9083, metadata !DIExpression()), !dbg !9084
  call void @llvm.dbg.declare(metadata %struct.Object** %obn, metadata !9085, metadata !DIExpression()), !dbg !9086
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !9087, metadata !DIExpression()), !dbg !9088
  call void @llvm.dbg.declare(metadata i32* %a, metadata !9089, metadata !DIExpression()), !dbg !9090
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !9091
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9092
  %id = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 0, !dbg !9093
  %call = call i8* @BKE_libblock_copy_ex(%struct.Main* %0, %struct.ID* %id), !dbg !9094
  %2 = bitcast i8* %call to %struct.Object*, !dbg !9094
  store %struct.Object* %2, %struct.Object** %obn, align 8, !dbg !9095
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9096
  %totcol = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 31, !dbg !9098
  %4 = load i32, i32* %totcol, align 8, !dbg !9098
  %tobool = icmp ne i32 %4, 0, !dbg !9096
  br i1 %tobool, label %if.then, label %if.end, !dbg !9099

if.then:                                          ; preds = %entry
  %5 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !9100
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9102
  %mat = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 29, !dbg !9103
  %7 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !9103
  %8 = bitcast %struct.Material** %7 to i8*, !dbg !9102
  %call1 = call i8* %5(i8* %8), !dbg !9100
  %9 = bitcast i8* %call1 to %struct.Material**, !dbg !9100
  %10 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9104
  %mat2 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 29, !dbg !9105
  store %struct.Material** %9, %struct.Material*** %mat2, align 8, !dbg !9106
  %11 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !9107
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9108
  %matbits = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 30, !dbg !9109
  %13 = load i8*, i8** %matbits, align 8, !dbg !9109
  %call3 = call i8* %11(i8* %13), !dbg !9107
  %14 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9110
  %matbits4 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 30, !dbg !9111
  store i8* %call3, i8** %matbits4, align 8, !dbg !9112
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9113
  %totcol5 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 31, !dbg !9114
  %16 = load i32, i32* %totcol5, align 8, !dbg !9114
  %17 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9115
  %totcol6 = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 31, !dbg !9116
  store i32 %16, i32* %totcol6, align 8, !dbg !9117
  br label %if.end, !dbg !9118

if.end:                                           ; preds = %if.then, %entry
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9119
  %iuser = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 131, !dbg !9121
  %19 = load %struct.ImageUser*, %struct.ImageUser** %iuser, align 8, !dbg !9121
  %tobool7 = icmp ne %struct.ImageUser* %19, null, !dbg !9119
  br i1 %tobool7, label %if.then8, label %if.end12, !dbg !9122

if.then8:                                         ; preds = %if.end
  %20 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !9123
  %21 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9124
  %iuser9 = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 131, !dbg !9125
  %22 = load %struct.ImageUser*, %struct.ImageUser** %iuser9, align 8, !dbg !9125
  %23 = bitcast %struct.ImageUser* %22 to i8*, !dbg !9124
  %call10 = call i8* %20(i8* %23), !dbg !9123
  %24 = bitcast i8* %call10 to %struct.ImageUser*, !dbg !9123
  %25 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9126
  %iuser11 = getelementptr inbounds %struct.Object, %struct.Object* %25, i32 0, i32 131, !dbg !9127
  store %struct.ImageUser* %24, %struct.ImageUser** %iuser11, align 8, !dbg !9128
  br label %if.end12, !dbg !9126

if.end12:                                         ; preds = %if.then8, %if.end
  %26 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9129
  %bb = getelementptr inbounds %struct.Object, %struct.Object* %26, i32 0, i32 15, !dbg !9131
  %27 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !9131
  %tobool13 = icmp ne %struct.BoundBox* %27, null, !dbg !9129
  br i1 %tobool13, label %if.then14, label %if.end18, !dbg !9132

if.then14:                                        ; preds = %if.end12
  %28 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !9133
  %29 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9134
  %bb15 = getelementptr inbounds %struct.Object, %struct.Object* %29, i32 0, i32 15, !dbg !9135
  %30 = load %struct.BoundBox*, %struct.BoundBox** %bb15, align 8, !dbg !9135
  %31 = bitcast %struct.BoundBox* %30 to i8*, !dbg !9134
  %call16 = call i8* %28(i8* %31), !dbg !9133
  %32 = bitcast i8* %call16 to %struct.BoundBox*, !dbg !9133
  %33 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9136
  %bb17 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 15, !dbg !9137
  store %struct.BoundBox* %32, %struct.BoundBox** %bb17, align 8, !dbg !9138
  br label %if.end18, !dbg !9136

if.end18:                                         ; preds = %if.then14, %if.end12
  %34 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9139
  %flag = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 53, !dbg !9140
  %35 = load i16, i16* %flag, align 4, !dbg !9141
  %conv = sext i16 %35 to i32, !dbg !9141
  %and = and i32 %conv, -4097, !dbg !9141
  %conv19 = trunc i32 %and to i16, !dbg !9141
  store i16 %conv19, i16* %flag, align 4, !dbg !9141
  %36 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9142
  %modifiers = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 26, !dbg !9143
  call void @BLI_listbase_clear(%struct.ListBase* %modifiers), !dbg !9144
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9145
  %modifiers20 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 26, !dbg !9147
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %modifiers20, i32 0, i32 0, !dbg !9148
  %38 = load i8*, i8** %first, align 8, !dbg !9148
  %39 = bitcast i8* %38 to %struct.ModifierData*, !dbg !9145
  store %struct.ModifierData* %39, %struct.ModifierData** %md, align 8, !dbg !9149
  br label %for.cond, !dbg !9150

for.cond:                                         ; preds = %for.inc, %if.end18
  %40 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !9151
  %tobool21 = icmp ne %struct.ModifierData* %40, null, !dbg !9153
  br i1 %tobool21, label %for.body, label %for.end, !dbg !9153

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %nmd, metadata !9154, metadata !DIExpression()), !dbg !9156
  %41 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !9157
  %type = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %41, i32 0, i32 2, !dbg !9158
  %42 = load i32, i32* %type, align 8, !dbg !9158
  %call22 = call %struct.ModifierData* @modifier_new(i32 %42), !dbg !9159
  store %struct.ModifierData* %call22, %struct.ModifierData** %nmd, align 8, !dbg !9156
  %43 = load %struct.ModifierData*, %struct.ModifierData** %nmd, align 8, !dbg !9160
  %name = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %43, i32 0, i32 6, !dbg !9161
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !9160
  %44 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !9162
  %name23 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %44, i32 0, i32 6, !dbg !9163
  %arraydecay24 = getelementptr inbounds [64 x i8], [64 x i8]* %name23, i64 0, i64 0, !dbg !9162
  %call25 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay24, i64 64), !dbg !9164
  %45 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !9165
  %46 = load %struct.ModifierData*, %struct.ModifierData** %nmd, align 8, !dbg !9166
  call void @modifier_copyData(%struct.ModifierData* %45, %struct.ModifierData* %46), !dbg !9167
  %47 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9168
  %modifiers26 = getelementptr inbounds %struct.Object, %struct.Object* %47, i32 0, i32 26, !dbg !9169
  %48 = load %struct.ModifierData*, %struct.ModifierData** %nmd, align 8, !dbg !9170
  %49 = bitcast %struct.ModifierData* %48 to i8*, !dbg !9170
  call void @BLI_addtail(%struct.ListBase* %modifiers26, i8* %49), !dbg !9171
  br label %for.inc, !dbg !9172

for.inc:                                          ; preds = %for.body
  %50 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !9173
  %next = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %50, i32 0, i32 0, !dbg !9174
  %51 = load %struct.ModifierData*, %struct.ModifierData** %next, align 8, !dbg !9174
  store %struct.ModifierData* %51, %struct.ModifierData** %md, align 8, !dbg !9175
  br label %for.cond, !dbg !9176, !llvm.loop !9177

for.end:                                          ; preds = %for.cond
  %52 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9179
  %prop = getelementptr inbounds %struct.Object, %struct.Object* %52, i32 0, i32 91, !dbg !9180
  call void @BLI_listbase_clear(%struct.ListBase* %prop), !dbg !9181
  %53 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9182
  %prop27 = getelementptr inbounds %struct.Object, %struct.Object* %53, i32 0, i32 91, !dbg !9183
  %54 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9184
  %prop28 = getelementptr inbounds %struct.Object, %struct.Object* %54, i32 0, i32 91, !dbg !9185
  call void @BKE_bproperty_copy_list(%struct.ListBase* %prop27, %struct.ListBase* %prop28), !dbg !9186
  %55 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9187
  %sensors = getelementptr inbounds %struct.Object, %struct.Object* %55, i32 0, i32 92, !dbg !9188
  %56 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9189
  %sensors29 = getelementptr inbounds %struct.Object, %struct.Object* %56, i32 0, i32 92, !dbg !9190
  call void @copy_sensors(%struct.ListBase* %sensors, %struct.ListBase* %sensors29), !dbg !9191
  %57 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9192
  %controllers = getelementptr inbounds %struct.Object, %struct.Object* %57, i32 0, i32 93, !dbg !9193
  %58 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9194
  %controllers30 = getelementptr inbounds %struct.Object, %struct.Object* %58, i32 0, i32 93, !dbg !9195
  call void @copy_controllers(%struct.ListBase* %controllers, %struct.ListBase* %controllers30), !dbg !9196
  %59 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9197
  %actuators = getelementptr inbounds %struct.Object, %struct.Object* %59, i32 0, i32 94, !dbg !9198
  %60 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9199
  %actuators31 = getelementptr inbounds %struct.Object, %struct.Object* %60, i32 0, i32 94, !dbg !9200
  call void @copy_actuators(%struct.ListBase* %actuators, %struct.ListBase* %actuators31), !dbg !9201
  %61 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9202
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %61, i32 0, i32 18, !dbg !9204
  %62 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !9204
  %tobool32 = icmp ne %struct.bPose* %62, null, !dbg !9202
  br i1 %tobool32, label %if.then33, label %if.end39, !dbg !9205

if.then33:                                        ; preds = %for.end
  %63 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9206
  %64 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9208
  call void @copy_object_pose(%struct.Object* %63, %struct.Object* %64), !dbg !9209
  %65 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9210
  %type34 = getelementptr inbounds %struct.Object, %struct.Object* %65, i32 0, i32 3, !dbg !9212
  %66 = load i16, i16* %type34, align 8, !dbg !9212
  %conv35 = sext i16 %66 to i32, !dbg !9210
  %cmp = icmp eq i32 %conv35, 25, !dbg !9213
  br i1 %cmp, label %if.then37, label %if.end38, !dbg !9214

if.then37:                                        ; preds = %if.then33
  %67 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9215
  %68 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9216
  %data = getelementptr inbounds %struct.Object, %struct.Object* %68, i32 0, i32 19, !dbg !9217
  %69 = load i8*, i8** %data, align 8, !dbg !9217
  %70 = bitcast i8* %69 to %struct.bArmature*, !dbg !9216
  call void @BKE_pose_rebuild(%struct.Object* %67, %struct.bArmature* %70), !dbg !9218
  br label %if.end38, !dbg !9218

if.end38:                                         ; preds = %if.then37, %if.then33
  br label %if.end39, !dbg !9219

if.end39:                                         ; preds = %if.end38, %for.end
  %71 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9220
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %71, i32 0, i32 25, !dbg !9221
  %72 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9222
  %defbase40 = getelementptr inbounds %struct.Object, %struct.Object* %72, i32 0, i32 25, !dbg !9223
  call void @defgroup_copy_list(%struct.ListBase* %defbase, %struct.ListBase* %defbase40), !dbg !9224
  %73 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9225
  %constraints = getelementptr inbounds %struct.Object, %struct.Object* %73, i32 0, i32 106, !dbg !9226
  %74 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9227
  %constraints41 = getelementptr inbounds %struct.Object, %struct.Object* %74, i32 0, i32 106, !dbg !9228
  call void @BKE_constraints_copy(%struct.ListBase* %constraints, %struct.ListBase* %constraints41, i8 zeroext 1), !dbg !9229
  %75 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9230
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %75, i32 0, i32 27, !dbg !9231
  store i32 0, i32* %mode, align 8, !dbg !9232
  %76 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9233
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %76, i32 0, i32 2, !dbg !9234
  store %struct.SculptSession* null, %struct.SculptSession** %sculpt, align 8, !dbg !9235
  %77 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9236
  %data42 = getelementptr inbounds %struct.Object, %struct.Object* %77, i32 0, i32 19, !dbg !9237
  %78 = load i8*, i8** %data42, align 8, !dbg !9237
  %79 = bitcast i8* %78 to %struct.ID*, !dbg !9238
  call void @id_us_plus(%struct.ID* %79), !dbg !9239
  %80 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9240
  %gpd = getelementptr inbounds %struct.Object, %struct.Object* %80, i32 0, i32 20, !dbg !9241
  %81 = load %struct.bGPdata*, %struct.bGPdata** %gpd, align 8, !dbg !9241
  %82 = bitcast %struct.bGPdata* %81 to %struct.ID*, !dbg !9242
  call void @id_us_plus(%struct.ID* %82), !dbg !9243
  %83 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9244
  %dup_group = getelementptr inbounds %struct.Object, %struct.Object* %83, i32 0, i32 112, !dbg !9245
  %84 = load %struct.Group*, %struct.Group** %dup_group, align 8, !dbg !9245
  %85 = bitcast %struct.Group* %84 to %struct.ID*, !dbg !9246
  call void @id_lib_extern(%struct.ID* %85), !dbg !9247
  store i32 0, i32* %a, align 4, !dbg !9248
  br label %for.cond43, !dbg !9250

for.cond43:                                       ; preds = %for.inc49, %if.end39
  %86 = load i32, i32* %a, align 4, !dbg !9251
  %87 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9253
  %totcol44 = getelementptr inbounds %struct.Object, %struct.Object* %87, i32 0, i32 31, !dbg !9254
  %88 = load i32, i32* %totcol44, align 8, !dbg !9254
  %cmp45 = icmp slt i32 %86, %88, !dbg !9255
  br i1 %cmp45, label %for.body47, label %for.end50, !dbg !9256

for.body47:                                       ; preds = %for.cond43
  %89 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9257
  %mat48 = getelementptr inbounds %struct.Object, %struct.Object* %89, i32 0, i32 29, !dbg !9258
  %90 = load %struct.Material**, %struct.Material*** %mat48, align 8, !dbg !9258
  %91 = load i32, i32* %a, align 4, !dbg !9259
  %idxprom = sext i32 %91 to i64, !dbg !9257
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %90, i64 %idxprom, !dbg !9257
  %92 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !9257
  %93 = bitcast %struct.Material* %92 to %struct.ID*, !dbg !9260
  call void @id_us_plus(%struct.ID* %93), !dbg !9261
  br label %for.inc49, !dbg !9261

for.inc49:                                        ; preds = %for.body47
  %94 = load i32, i32* %a, align 4, !dbg !9262
  %inc = add nsw i32 %94, 1, !dbg !9262
  store i32 %inc, i32* %a, align 4, !dbg !9262
  br label %for.cond43, !dbg !9263, !llvm.loop !9264

for.end50:                                        ; preds = %for.cond43
  %95 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9266
  %pd = getelementptr inbounds %struct.Object, %struct.Object* %95, i32 0, i32 110, !dbg !9268
  %96 = load %struct.PartDeflect*, %struct.PartDeflect** %pd, align 8, !dbg !9268
  %tobool51 = icmp ne %struct.PartDeflect* %96, null, !dbg !9266
  br i1 %tobool51, label %if.then52, label %if.end72, !dbg !9269

if.then52:                                        ; preds = %for.end50
  %97 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !9270
  %98 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9272
  %pd53 = getelementptr inbounds %struct.Object, %struct.Object* %98, i32 0, i32 110, !dbg !9273
  %99 = load %struct.PartDeflect*, %struct.PartDeflect** %pd53, align 8, !dbg !9273
  %100 = bitcast %struct.PartDeflect* %99 to i8*, !dbg !9272
  %call54 = call i8* %97(i8* %100), !dbg !9270
  %101 = bitcast i8* %call54 to %struct.PartDeflect*, !dbg !9270
  %102 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9274
  %pd55 = getelementptr inbounds %struct.Object, %struct.Object* %102, i32 0, i32 110, !dbg !9275
  store %struct.PartDeflect* %101, %struct.PartDeflect** %pd55, align 8, !dbg !9276
  %103 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9277
  %pd56 = getelementptr inbounds %struct.Object, %struct.Object* %103, i32 0, i32 110, !dbg !9279
  %104 = load %struct.PartDeflect*, %struct.PartDeflect** %pd56, align 8, !dbg !9279
  %tex = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %104, i32 0, i32 36, !dbg !9280
  %105 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !9280
  %tobool57 = icmp ne %struct.Tex* %105, null, !dbg !9277
  br i1 %tobool57, label %if.then58, label %if.end62, !dbg !9281

if.then58:                                        ; preds = %if.then52
  %106 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9282
  %pd59 = getelementptr inbounds %struct.Object, %struct.Object* %106, i32 0, i32 110, !dbg !9283
  %107 = load %struct.PartDeflect*, %struct.PartDeflect** %pd59, align 8, !dbg !9283
  %tex60 = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %107, i32 0, i32 36, !dbg !9284
  %108 = load %struct.Tex*, %struct.Tex** %tex60, align 8, !dbg !9284
  %id61 = getelementptr inbounds %struct.Tex, %struct.Tex* %108, i32 0, i32 0, !dbg !9285
  call void @id_us_plus(%struct.ID* %id61), !dbg !9286
  br label %if.end62, !dbg !9286

if.end62:                                         ; preds = %if.then58, %if.then52
  %109 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9287
  %pd63 = getelementptr inbounds %struct.Object, %struct.Object* %109, i32 0, i32 110, !dbg !9289
  %110 = load %struct.PartDeflect*, %struct.PartDeflect** %pd63, align 8, !dbg !9289
  %rng = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %110, i32 0, i32 37, !dbg !9290
  %111 = load %struct.RNG*, %struct.RNG** %rng, align 8, !dbg !9290
  %tobool64 = icmp ne %struct.RNG* %111, null, !dbg !9287
  br i1 %tobool64, label %if.then65, label %if.end71, !dbg !9291

if.then65:                                        ; preds = %if.end62
  %112 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !9292
  %113 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9293
  %pd66 = getelementptr inbounds %struct.Object, %struct.Object* %113, i32 0, i32 110, !dbg !9294
  %114 = load %struct.PartDeflect*, %struct.PartDeflect** %pd66, align 8, !dbg !9294
  %rng67 = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %114, i32 0, i32 37, !dbg !9295
  %115 = load %struct.RNG*, %struct.RNG** %rng67, align 8, !dbg !9295
  %116 = bitcast %struct.RNG* %115 to i8*, !dbg !9293
  %call68 = call i8* %112(i8* %116), !dbg !9292
  %117 = bitcast i8* %call68 to %struct.RNG*, !dbg !9292
  %118 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9296
  %pd69 = getelementptr inbounds %struct.Object, %struct.Object* %118, i32 0, i32 110, !dbg !9297
  %119 = load %struct.PartDeflect*, %struct.PartDeflect** %pd69, align 8, !dbg !9297
  %rng70 = getelementptr inbounds %struct.PartDeflect, %struct.PartDeflect* %119, i32 0, i32 37, !dbg !9298
  store %struct.RNG* %117, %struct.RNG** %rng70, align 8, !dbg !9299
  br label %if.end71, !dbg !9296

if.end71:                                         ; preds = %if.then65, %if.end62
  br label %if.end72, !dbg !9300

if.end72:                                         ; preds = %if.end71, %for.end50
  %120 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9301
  %soft = getelementptr inbounds %struct.Object, %struct.Object* %120, i32 0, i32 111, !dbg !9302
  %121 = load %struct.SoftBody*, %struct.SoftBody** %soft, align 8, !dbg !9302
  %122 = load i8, i8* %copy_caches.addr, align 1, !dbg !9303
  %call73 = call %struct.SoftBody* @copy_softbody(%struct.SoftBody* %121, i8 zeroext %122), !dbg !9304
  %123 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9305
  %soft74 = getelementptr inbounds %struct.Object, %struct.Object* %123, i32 0, i32 111, !dbg !9306
  store %struct.SoftBody* %call73, %struct.SoftBody** %soft74, align 8, !dbg !9307
  %124 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9308
  %bsoft = getelementptr inbounds %struct.Object, %struct.Object* %124, i32 0, i32 101, !dbg !9309
  %125 = load %struct.BulletSoftBody*, %struct.BulletSoftBody** %bsoft, align 8, !dbg !9309
  %call75 = call %struct.BulletSoftBody* @copy_bulletsoftbody(%struct.BulletSoftBody* %125), !dbg !9310
  %126 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9311
  %bsoft76 = getelementptr inbounds %struct.Object, %struct.Object* %126, i32 0, i32 101, !dbg !9312
  store %struct.BulletSoftBody* %call75, %struct.BulletSoftBody** %bsoft76, align 8, !dbg !9313
  %127 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9314
  %call77 = call %struct.RigidBodyOb* @BKE_rigidbody_copy_object(%struct.Object* %127), !dbg !9315
  %128 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9316
  %rigidbody_object = getelementptr inbounds %struct.Object, %struct.Object* %128, i32 0, i32 128, !dbg !9317
  store %struct.RigidBodyOb* %call77, %struct.RigidBodyOb** %rigidbody_object, align 8, !dbg !9318
  %129 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9319
  %call78 = call %struct.RigidBodyCon* @BKE_rigidbody_copy_constraint(%struct.Object* %129), !dbg !9320
  %130 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9321
  %rigidbody_constraint = getelementptr inbounds %struct.Object, %struct.Object* %130, i32 0, i32 129, !dbg !9322
  store %struct.RigidBodyCon* %call78, %struct.RigidBodyCon** %rigidbody_constraint, align 8, !dbg !9323
  %131 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9324
  %132 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9325
  call void @BKE_object_copy_particlesystems(%struct.Object* %131, %struct.Object* %132), !dbg !9326
  %133 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9327
  %derivedDeform = getelementptr inbounds %struct.Object, %struct.Object* %133, i32 0, i32 119, !dbg !9328
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %derivedDeform, align 8, !dbg !9329
  %134 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9330
  %derivedFinal = getelementptr inbounds %struct.Object, %struct.Object* %134, i32 0, i32 120, !dbg !9331
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !9332
  %135 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9333
  %gpulamp = getelementptr inbounds %struct.Object, %struct.Object* %135, i32 0, i32 125, !dbg !9334
  call void @BLI_listbase_clear(%struct.ListBase* %gpulamp), !dbg !9335
  %136 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9336
  %pc_ids = getelementptr inbounds %struct.Object, %struct.Object* %136, i32 0, i32 126, !dbg !9337
  call void @BLI_listbase_clear(%struct.ListBase* %pc_ids), !dbg !9338
  %137 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9339
  %mpath = getelementptr inbounds %struct.Object, %struct.Object* %137, i32 0, i32 22, !dbg !9340
  store %struct.bMotionPath* null, %struct.bMotionPath** %mpath, align 8, !dbg !9341
  %138 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9342
  %139 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9343
  call void @copy_object_lod(%struct.Object* %138, %struct.Object* %139), !dbg !9344
  %140 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9345
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %140, i32 0, i32 118, !dbg !9346
  store %struct.CurveCache* null, %struct.CurveCache** %curve_cache, align 8, !dbg !9347
  %141 = load %struct.Object*, %struct.Object** %obn, align 8, !dbg !9348
  ret %struct.Object* %141, !dbg !9349
}

declare dso_local i8* @BKE_libblock_copy_ex(%struct.Main*, %struct.ID*) #3

declare dso_local void @BKE_bproperty_copy_list(%struct.ListBase*, %struct.ListBase*) #3

declare dso_local void @copy_sensors(%struct.ListBase*, %struct.ListBase*) #3

declare dso_local void @copy_controllers(%struct.ListBase*, %struct.ListBase*) #3

declare dso_local void @copy_actuators(%struct.ListBase*, %struct.ListBase*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @copy_object_pose(%struct.Object* %obn, %struct.Object* %ob) #0 !dbg !9350 {
entry:
  %obn.addr = alloca %struct.Object*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %chan = alloca %struct.bPoseChannel*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %cti = alloca %struct.bConstraintTypeInfo*, align 8
  %targets = alloca %struct.ListBase, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  store %struct.Object* %obn, %struct.Object** %obn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obn.addr, metadata !9351, metadata !DIExpression()), !dbg !9352
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9353, metadata !DIExpression()), !dbg !9354
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %chan, metadata !9355, metadata !DIExpression()), !dbg !9356
  %0 = load %struct.Object*, %struct.Object** %obn.addr, align 8, !dbg !9357
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 18, !dbg !9358
  store %struct.bPose* null, %struct.bPose** %pose, align 8, !dbg !9359
  %1 = load %struct.Object*, %struct.Object** %obn.addr, align 8, !dbg !9360
  %pose1 = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 18, !dbg !9361
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9362
  %pose2 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 18, !dbg !9363
  %3 = load %struct.bPose*, %struct.bPose** %pose2, align 8, !dbg !9363
  call void @BKE_pose_copy_data(%struct.bPose** %pose1, %struct.bPose* %3, i8 zeroext 1), !dbg !9364
  %4 = load %struct.Object*, %struct.Object** %obn.addr, align 8, !dbg !9365
  %pose3 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 18, !dbg !9367
  %5 = load %struct.bPose*, %struct.bPose** %pose3, align 8, !dbg !9367
  %chanbase = getelementptr inbounds %struct.bPose, %struct.bPose* %5, i32 0, i32 0, !dbg !9368
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase, i32 0, i32 0, !dbg !9369
  %6 = load i8*, i8** %first, align 8, !dbg !9369
  %7 = bitcast i8* %6 to %struct.bPoseChannel*, !dbg !9365
  store %struct.bPoseChannel* %7, %struct.bPoseChannel** %chan, align 8, !dbg !9370
  br label %for.cond, !dbg !9371

for.cond:                                         ; preds = %for.inc28, %entry
  %8 = load %struct.bPoseChannel*, %struct.bPoseChannel** %chan, align 8, !dbg !9372
  %tobool = icmp ne %struct.bPoseChannel* %8, null, !dbg !9374
  br i1 %tobool, label %for.body, label %for.end30, !dbg !9374

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !9375, metadata !DIExpression()), !dbg !9377
  %9 = load %struct.bPoseChannel*, %struct.bPoseChannel** %chan, align 8, !dbg !9378
  %flag = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %9, i32 0, i32 5, !dbg !9379
  %10 = load i16, i16* %flag, align 8, !dbg !9380
  %conv = sext i16 %10 to i32, !dbg !9380
  %and = and i32 %conv, -8, !dbg !9380
  %conv4 = trunc i32 %and to i16, !dbg !9380
  store i16 %conv4, i16* %flag, align 8, !dbg !9380
  %11 = load %struct.bPoseChannel*, %struct.bPoseChannel** %chan, align 8, !dbg !9381
  %constraints = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %11, i32 0, i32 3, !dbg !9383
  %first5 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints, i32 0, i32 0, !dbg !9384
  %12 = load i8*, i8** %first5, align 8, !dbg !9384
  %13 = bitcast i8* %12 to %struct.bConstraint*, !dbg !9381
  store %struct.bConstraint* %13, %struct.bConstraint** %con, align 8, !dbg !9385
  br label %for.cond6, !dbg !9386

for.cond6:                                        ; preds = %for.inc25, %for.body
  %14 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !9387
  %tobool7 = icmp ne %struct.bConstraint* %14, null, !dbg !9389
  br i1 %tobool7, label %for.body8, label %for.end27, !dbg !9389

for.body8:                                        ; preds = %for.cond6
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %cti, metadata !9390, metadata !DIExpression()), !dbg !9392
  %15 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !9393
  %call = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint* %15), !dbg !9394
  store %struct.bConstraintTypeInfo* %call, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !9392
  call void @llvm.dbg.declare(metadata %struct.ListBase* %targets, metadata !9395, metadata !DIExpression()), !dbg !9396
  %16 = bitcast %struct.ListBase* %targets to i8*, !dbg !9396
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false), !dbg !9396
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !9397, metadata !DIExpression()), !dbg !9398
  %17 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !9399
  %tobool9 = icmp ne %struct.bConstraintTypeInfo* %17, null, !dbg !9399
  br i1 %tobool9, label %land.lhs.true, label %if.end24, !dbg !9401

land.lhs.true:                                    ; preds = %for.body8
  %18 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !9402
  %get_constraint_targets = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %18, i32 0, i32 8, !dbg !9403
  %19 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets, align 8, !dbg !9403
  %tobool10 = icmp ne i32 (%struct.bConstraint*, %struct.ListBase*)* %19, null, !dbg !9402
  br i1 %tobool10, label %if.then, label %if.end24, !dbg !9404

if.then:                                          ; preds = %land.lhs.true
  %20 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !9405
  %get_constraint_targets11 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %20, i32 0, i32 8, !dbg !9407
  %21 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets11, align 8, !dbg !9407
  %22 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !9408
  %call12 = call i32 %21(%struct.bConstraint* %22, %struct.ListBase* %targets), !dbg !9405
  %first13 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets, i32 0, i32 0, !dbg !9409
  %23 = load i8*, i8** %first13, align 8, !dbg !9409
  %24 = bitcast i8* %23 to %struct.bConstraintTarget*, !dbg !9411
  store %struct.bConstraintTarget* %24, %struct.bConstraintTarget** %ct, align 8, !dbg !9412
  br label %for.cond14, !dbg !9413

for.cond14:                                       ; preds = %for.inc, %if.then
  %25 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9414
  %tobool15 = icmp ne %struct.bConstraintTarget* %25, null, !dbg !9416
  br i1 %tobool15, label %for.body16, label %for.end, !dbg !9416

for.body16:                                       ; preds = %for.cond14
  %26 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9417
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %26, i32 0, i32 2, !dbg !9420
  %27 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !9420
  %28 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9421
  %cmp = icmp eq %struct.Object* %27, %28, !dbg !9422
  br i1 %cmp, label %if.then18, label %if.end, !dbg !9423

if.then18:                                        ; preds = %for.body16
  %29 = load %struct.Object*, %struct.Object** %obn.addr, align 8, !dbg !9424
  %30 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9425
  %tar19 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %30, i32 0, i32 2, !dbg !9426
  store %struct.Object* %29, %struct.Object** %tar19, align 8, !dbg !9427
  br label %if.end, !dbg !9425

if.end:                                           ; preds = %if.then18, %for.body16
  br label %for.inc, !dbg !9428

for.inc:                                          ; preds = %if.end
  %31 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !9429
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %31, i32 0, i32 0, !dbg !9430
  %32 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !9430
  store %struct.bConstraintTarget* %32, %struct.bConstraintTarget** %ct, align 8, !dbg !9431
  br label %for.cond14, !dbg !9432, !llvm.loop !9433

for.end:                                          ; preds = %for.cond14
  %33 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !9435
  %flush_constraint_targets = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %33, i32 0, i32 9, !dbg !9437
  %34 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets, align 8, !dbg !9437
  %tobool20 = icmp ne void (%struct.bConstraint*, %struct.ListBase*, i8)* %34, null, !dbg !9435
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !9438

if.then21:                                        ; preds = %for.end
  %35 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !9439
  %flush_constraint_targets22 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %35, i32 0, i32 9, !dbg !9440
  %36 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets22, align 8, !dbg !9440
  %37 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !9441
  call void %36(%struct.bConstraint* %37, %struct.ListBase* %targets, i8 zeroext 0), !dbg !9439
  br label %if.end23, !dbg !9439

if.end23:                                         ; preds = %if.then21, %for.end
  br label %if.end24, !dbg !9442

if.end24:                                         ; preds = %if.end23, %land.lhs.true, %for.body8
  br label %for.inc25, !dbg !9443

for.inc25:                                        ; preds = %if.end24
  %38 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !9444
  %next26 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %38, i32 0, i32 0, !dbg !9445
  %39 = load %struct.bConstraint*, %struct.bConstraint** %next26, align 8, !dbg !9445
  store %struct.bConstraint* %39, %struct.bConstraint** %con, align 8, !dbg !9446
  br label %for.cond6, !dbg !9447, !llvm.loop !9448

for.end27:                                        ; preds = %for.cond6
  br label %for.inc28, !dbg !9450

for.inc28:                                        ; preds = %for.end27
  %40 = load %struct.bPoseChannel*, %struct.bPoseChannel** %chan, align 8, !dbg !9451
  %next29 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %40, i32 0, i32 0, !dbg !9452
  %41 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next29, align 8, !dbg !9452
  store %struct.bPoseChannel* %41, %struct.bPoseChannel** %chan, align 8, !dbg !9453
  br label %for.cond, !dbg !9454, !llvm.loop !9455

for.end30:                                        ; preds = %for.cond
  ret void, !dbg !9457
}

declare dso_local void @BKE_pose_rebuild(%struct.Object*, %struct.bArmature*) #3

declare dso_local void @defgroup_copy_list(%struct.ListBase*, %struct.ListBase*) #3

declare dso_local void @BKE_constraints_copy(%struct.ListBase*, %struct.ListBase*, i8 zeroext) #3

declare dso_local void @id_us_plus(%struct.ID*) #3

declare dso_local void @id_lib_extern(%struct.ID*) #3

declare dso_local %struct.RigidBodyOb* @BKE_rigidbody_copy_object(%struct.Object*) #3

declare dso_local %struct.RigidBodyCon* @BKE_rigidbody_copy_constraint(%struct.Object*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @copy_object_lod(%struct.Object* %obn, %struct.Object* %ob) #0 !dbg !9458 {
entry:
  %obn.addr = alloca %struct.Object*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %obn, %struct.Object** %obn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obn.addr, metadata !9459, metadata !DIExpression()), !dbg !9460
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9461, metadata !DIExpression()), !dbg !9462
  %0 = load %struct.Object*, %struct.Object** %obn.addr, align 8, !dbg !9463
  %lodlevels = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 132, !dbg !9464
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9465
  %lodlevels1 = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 132, !dbg !9466
  call void @BLI_duplicatelist(%struct.ListBase* %lodlevels, %struct.ListBase* %lodlevels1), !dbg !9467
  %2 = load %struct.Object*, %struct.Object** %obn.addr, align 8, !dbg !9468
  %lodlevels2 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 132, !dbg !9470
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lodlevels2, i32 0, i32 0, !dbg !9471
  %3 = load i8*, i8** %first, align 8, !dbg !9471
  %tobool = icmp ne i8* %3, null, !dbg !9468
  br i1 %tobool, label %if.then, label %if.end, !dbg !9472

if.then:                                          ; preds = %entry
  %4 = load %struct.Object*, %struct.Object** %obn.addr, align 8, !dbg !9473
  %5 = load %struct.Object*, %struct.Object** %obn.addr, align 8, !dbg !9474
  %lodlevels3 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 132, !dbg !9475
  %first4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lodlevels3, i32 0, i32 0, !dbg !9476
  %6 = load i8*, i8** %first4, align 8, !dbg !9476
  %7 = bitcast i8* %6 to %struct.LodLevel*, !dbg !9477
  %source = getelementptr inbounds %struct.LodLevel, %struct.LodLevel* %7, i32 0, i32 2, !dbg !9478
  store %struct.Object* %4, %struct.Object** %source, align 8, !dbg !9479
  br label %if.end, !dbg !9480

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.Object*, %struct.Object** %obn.addr, align 8, !dbg !9481
  %lodlevels5 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 132, !dbg !9482
  %first6 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lodlevels5, i32 0, i32 0, !dbg !9483
  %9 = load i8*, i8** %first6, align 8, !dbg !9483
  %10 = bitcast i8* %9 to %struct.LodLevel*, !dbg !9484
  %11 = load %struct.Object*, %struct.Object** %obn.addr, align 8, !dbg !9485
  %currentlod = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 133, !dbg !9486
  store %struct.LodLevel* %10, %struct.LodLevel** %currentlod, align 8, !dbg !9487
  ret void, !dbg !9488
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Object* @BKE_object_copy(%struct.Object* %ob) #0 !dbg !9489 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9490, metadata !DIExpression()), !dbg !9491
  %0 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !9492
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9493
  %call = call %struct.Object* @BKE_object_copy_ex(%struct.Main* %0, %struct.Object* %1, i8 zeroext 0), !dbg !9494
  ret %struct.Object* %call, !dbg !9495
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_make_local(%struct.Object* %ob) #0 !dbg !9496 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %bmain = alloca %struct.Main*, align 8
  %sce = alloca %struct.Scene*, align 8
  %base = alloca %struct.Base*, align 8
  %is_local = alloca i8, align 1
  %is_lib = alloca i8, align 1
  %ob_new = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9497, metadata !DIExpression()), !dbg !9498
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !9499, metadata !DIExpression()), !dbg !9500
  %0 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !9501
  store %struct.Main* %0, %struct.Main** %bmain, align 8, !dbg !9500
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce, metadata !9502, metadata !DIExpression()), !dbg !9503
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !9504, metadata !DIExpression()), !dbg !9505
  call void @llvm.dbg.declare(metadata i8* %is_local, metadata !9506, metadata !DIExpression()), !dbg !9507
  store i8 0, i8* %is_local, align 1, !dbg !9507
  call void @llvm.dbg.declare(metadata i8* %is_lib, metadata !9508, metadata !DIExpression()), !dbg !9509
  store i8 0, i8* %is_lib, align 1, !dbg !9509
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9510
  %id = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 0, !dbg !9512
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !9513
  %2 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !9513
  %cmp = icmp eq %struct.Library* %2, null, !dbg !9514
  br i1 %cmp, label %if.then, label %if.end, !dbg !9515

if.then:                                          ; preds = %entry
  br label %if.end69, !dbg !9516

if.end:                                           ; preds = %entry
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9517
  %proxy_from = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 13, !dbg !9518
  store %struct.Object* null, %struct.Object** %proxy_from, align 8, !dbg !9519
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9520
  %proxy = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 11, !dbg !9521
  store %struct.Object* null, %struct.Object** %proxy, align 8, !dbg !9522
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9523
  %id1 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 0, !dbg !9525
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id1, i32 0, i32 6, !dbg !9526
  %6 = load i32, i32* %us, align 4, !dbg !9526
  %cmp2 = icmp eq i32 %6, 1, !dbg !9527
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !9528

if.then3:                                         ; preds = %if.end
  %7 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !9529
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9531
  %id4 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 0, !dbg !9532
  call void @id_clear_lib_data(%struct.Main* %7, %struct.ID* %id4), !dbg !9533
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9534
  call void @extern_local_object(%struct.Object* %9), !dbg !9535
  br label %if.end69, !dbg !9536

if.else:                                          ; preds = %if.end
  %10 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !9537
  %scene = getelementptr inbounds %struct.Main, %struct.Main* %10, i32 0, i32 11, !dbg !9540
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %scene, i32 0, i32 0, !dbg !9541
  %11 = load i8*, i8** %first, align 8, !dbg !9541
  %12 = bitcast i8* %11 to %struct.Scene*, !dbg !9537
  store %struct.Scene* %12, %struct.Scene** %sce, align 8, !dbg !9542
  br label %for.cond, !dbg !9543

for.cond:                                         ; preds = %for.inc, %if.else
  %13 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9544
  %tobool = icmp ne %struct.Scene* %13, null, !dbg !9544
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !9546

land.rhs:                                         ; preds = %for.cond
  %14 = load i8, i8* %is_lib, align 1, !dbg !9547
  %conv = zext i8 %14 to i32, !dbg !9547
  %cmp5 = icmp eq i32 0, %conv, !dbg !9547
  br i1 %cmp5, label %lor.end, label %lor.rhs, !dbg !9547

lor.rhs:                                          ; preds = %land.rhs
  %15 = load i8, i8* %is_local, align 1, !dbg !9547
  %conv7 = zext i8 %15 to i32, !dbg !9547
  %cmp8 = icmp eq i32 0, %conv7, !dbg !9547
  br label %lor.end, !dbg !9547

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %16 = phi i1 [ true, %land.rhs ], [ %cmp8, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %for.cond
  %17 = phi i1 [ false, %for.cond ], [ %16, %lor.end ], !dbg !9548
  br i1 %17, label %for.body, label %for.end, !dbg !9549

for.body:                                         ; preds = %land.end
  %18 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9550
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9553
  %call = call %struct.Base* @BKE_scene_base_find(%struct.Scene* %18, %struct.Object* %19), !dbg !9554
  %tobool10 = icmp ne %struct.Base* %call, null, !dbg !9554
  br i1 %tobool10, label %if.then11, label %if.end18, !dbg !9555

if.then11:                                        ; preds = %for.body
  %20 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9556
  %id12 = getelementptr inbounds %struct.Scene, %struct.Scene* %20, i32 0, i32 0, !dbg !9559
  %lib13 = getelementptr inbounds %struct.ID, %struct.ID* %id12, i32 0, i32 3, !dbg !9560
  %21 = load %struct.Library*, %struct.Library** %lib13, align 8, !dbg !9560
  %tobool14 = icmp ne %struct.Library* %21, null, !dbg !9556
  br i1 %tobool14, label %if.then15, label %if.else16, !dbg !9561

if.then15:                                        ; preds = %if.then11
  store i8 1, i8* %is_lib, align 1, !dbg !9562
  br label %if.end17, !dbg !9563

if.else16:                                        ; preds = %if.then11
  store i8 1, i8* %is_local, align 1, !dbg !9564
  br label %if.end17

if.end17:                                         ; preds = %if.else16, %if.then15
  br label %if.end18, !dbg !9565

if.end18:                                         ; preds = %if.end17, %for.body
  br label %for.inc, !dbg !9566

for.inc:                                          ; preds = %if.end18
  %22 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9567
  %id19 = getelementptr inbounds %struct.Scene, %struct.Scene* %22, i32 0, i32 0, !dbg !9568
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id19, i32 0, i32 0, !dbg !9569
  %23 = load i8*, i8** %next, align 8, !dbg !9569
  %24 = bitcast i8* %23 to %struct.Scene*, !dbg !9567
  store %struct.Scene* %24, %struct.Scene** %sce, align 8, !dbg !9570
  br label %for.cond, !dbg !9571, !llvm.loop !9572

for.end:                                          ; preds = %land.end
  %25 = load i8, i8* %is_local, align 1, !dbg !9574
  %conv20 = zext i8 %25 to i32, !dbg !9574
  %tobool21 = icmp ne i32 %conv20, 0, !dbg !9574
  br i1 %tobool21, label %land.lhs.true, label %if.else27, !dbg !9576

land.lhs.true:                                    ; preds = %for.end
  %26 = load i8, i8* %is_lib, align 1, !dbg !9577
  %conv22 = zext i8 %26 to i32, !dbg !9577
  %cmp23 = icmp eq i32 %conv22, 0, !dbg !9578
  br i1 %cmp23, label %if.then25, label %if.else27, !dbg !9579

if.then25:                                        ; preds = %land.lhs.true
  %27 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !9580
  %28 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9582
  %id26 = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 0, !dbg !9583
  call void @id_clear_lib_data(%struct.Main* %27, %struct.ID* %id26), !dbg !9584
  %29 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9585
  call void @extern_local_object(%struct.Object* %29), !dbg !9586
  br label %if.end68, !dbg !9587

if.else27:                                        ; preds = %land.lhs.true, %for.end
  %30 = load i8, i8* %is_local, align 1, !dbg !9588
  %conv28 = zext i8 %30 to i32, !dbg !9588
  %tobool29 = icmp ne i32 %conv28, 0, !dbg !9588
  br i1 %tobool29, label %land.lhs.true30, label %if.end67, !dbg !9590

land.lhs.true30:                                  ; preds = %if.else27
  %31 = load i8, i8* %is_lib, align 1, !dbg !9591
  %conv31 = zext i8 %31 to i32, !dbg !9591
  %tobool32 = icmp ne i32 %conv31, 0, !dbg !9591
  br i1 %tobool32, label %if.then33, label %if.end67, !dbg !9592

if.then33:                                        ; preds = %land.lhs.true30
  call void @llvm.dbg.declare(metadata %struct.Object** %ob_new, metadata !9593, metadata !DIExpression()), !dbg !9595
  %32 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9596
  %call34 = call %struct.Object* @BKE_object_copy(%struct.Object* %32), !dbg !9597
  store %struct.Object* %call34, %struct.Object** %ob_new, align 8, !dbg !9595
  %33 = load %struct.Object*, %struct.Object** %ob_new, align 8, !dbg !9598
  %id35 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 0, !dbg !9599
  %us36 = getelementptr inbounds %struct.ID, %struct.ID* %id35, i32 0, i32 6, !dbg !9600
  store i32 0, i32* %us36, align 4, !dbg !9601
  %34 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !9602
  %35 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9603
  %id37 = getelementptr inbounds %struct.Object, %struct.Object* %35, i32 0, i32 0, !dbg !9604
  %lib38 = getelementptr inbounds %struct.ID, %struct.ID* %id37, i32 0, i32 3, !dbg !9605
  %36 = load %struct.Library*, %struct.Library** %lib38, align 8, !dbg !9605
  %37 = load %struct.Object*, %struct.Object** %ob_new, align 8, !dbg !9606
  %id39 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 0, !dbg !9607
  call void @BKE_id_lib_local_paths(%struct.Main* %34, %struct.Library* %36, %struct.ID* %id39), !dbg !9608
  %38 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !9609
  %scene40 = getelementptr inbounds %struct.Main, %struct.Main* %38, i32 0, i32 11, !dbg !9610
  %first41 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %scene40, i32 0, i32 0, !dbg !9611
  %39 = load i8*, i8** %first41, align 8, !dbg !9611
  %40 = bitcast i8* %39 to %struct.Scene*, !dbg !9609
  store %struct.Scene* %40, %struct.Scene** %sce, align 8, !dbg !9612
  br label %while.cond, !dbg !9613

while.cond:                                       ; preds = %if.end63, %if.then33
  %41 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9614
  %tobool42 = icmp ne %struct.Scene* %41, null, !dbg !9613
  br i1 %tobool42, label %while.body, label %while.end66, !dbg !9613

while.body:                                       ; preds = %while.cond
  %42 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9615
  %id43 = getelementptr inbounds %struct.Scene, %struct.Scene* %42, i32 0, i32 0, !dbg !9618
  %lib44 = getelementptr inbounds %struct.ID, %struct.ID* %id43, i32 0, i32 3, !dbg !9619
  %43 = load %struct.Library*, %struct.Library** %lib44, align 8, !dbg !9619
  %cmp45 = icmp eq %struct.Library* %43, null, !dbg !9620
  br i1 %cmp45, label %if.then47, label %if.end63, !dbg !9621

if.then47:                                        ; preds = %while.body
  %44 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9622
  %base48 = getelementptr inbounds %struct.Scene, %struct.Scene* %44, i32 0, i32 5, !dbg !9624
  %first49 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base48, i32 0, i32 0, !dbg !9625
  %45 = load i8*, i8** %first49, align 8, !dbg !9625
  %46 = bitcast i8* %45 to %struct.Base*, !dbg !9622
  store %struct.Base* %46, %struct.Base** %base, align 8, !dbg !9626
  br label %while.cond50, !dbg !9627

while.cond50:                                     ; preds = %if.end61, %if.then47
  %47 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9628
  %tobool51 = icmp ne %struct.Base* %47, null, !dbg !9627
  br i1 %tobool51, label %while.body52, label %while.end, !dbg !9627

while.body52:                                     ; preds = %while.cond50
  %48 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9629
  %object = getelementptr inbounds %struct.Base, %struct.Base* %48, i32 0, i32 7, !dbg !9632
  %49 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !9632
  %50 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9633
  %cmp53 = icmp eq %struct.Object* %49, %50, !dbg !9634
  br i1 %cmp53, label %if.then55, label %if.end61, !dbg !9635

if.then55:                                        ; preds = %while.body52
  %51 = load %struct.Object*, %struct.Object** %ob_new, align 8, !dbg !9636
  %52 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9638
  %object56 = getelementptr inbounds %struct.Base, %struct.Base* %52, i32 0, i32 7, !dbg !9639
  store %struct.Object* %51, %struct.Object** %object56, align 8, !dbg !9640
  %53 = load %struct.Object*, %struct.Object** %ob_new, align 8, !dbg !9641
  %id57 = getelementptr inbounds %struct.Object, %struct.Object* %53, i32 0, i32 0, !dbg !9642
  %us58 = getelementptr inbounds %struct.ID, %struct.ID* %id57, i32 0, i32 6, !dbg !9643
  %54 = load i32, i32* %us58, align 4, !dbg !9644
  %inc = add nsw i32 %54, 1, !dbg !9644
  store i32 %inc, i32* %us58, align 4, !dbg !9644
  %55 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9645
  %id59 = getelementptr inbounds %struct.Object, %struct.Object* %55, i32 0, i32 0, !dbg !9646
  %us60 = getelementptr inbounds %struct.ID, %struct.ID* %id59, i32 0, i32 6, !dbg !9647
  %56 = load i32, i32* %us60, align 4, !dbg !9648
  %dec = add nsw i32 %56, -1, !dbg !9648
  store i32 %dec, i32* %us60, align 4, !dbg !9648
  br label %if.end61, !dbg !9649

if.end61:                                         ; preds = %if.then55, %while.body52
  %57 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !9650
  %next62 = getelementptr inbounds %struct.Base, %struct.Base* %57, i32 0, i32 0, !dbg !9651
  %58 = load %struct.Base*, %struct.Base** %next62, align 8, !dbg !9651
  store %struct.Base* %58, %struct.Base** %base, align 8, !dbg !9652
  br label %while.cond50, !dbg !9627, !llvm.loop !9653

while.end:                                        ; preds = %while.cond50
  br label %if.end63, !dbg !9655

if.end63:                                         ; preds = %while.end, %while.body
  %59 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !9656
  %id64 = getelementptr inbounds %struct.Scene, %struct.Scene* %59, i32 0, i32 0, !dbg !9657
  %next65 = getelementptr inbounds %struct.ID, %struct.ID* %id64, i32 0, i32 0, !dbg !9658
  %60 = load i8*, i8** %next65, align 8, !dbg !9658
  %61 = bitcast i8* %60 to %struct.Scene*, !dbg !9656
  store %struct.Scene* %61, %struct.Scene** %sce, align 8, !dbg !9659
  br label %while.cond, !dbg !9613, !llvm.loop !9660

while.end66:                                      ; preds = %while.cond
  br label %if.end67, !dbg !9662

if.end67:                                         ; preds = %while.end66, %land.lhs.true30, %if.else27
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then25
  br label %if.end69

if.end69:                                         ; preds = %if.then, %if.end68, %if.then3
  ret void, !dbg !9663
}

declare dso_local void @id_clear_lib_data(%struct.Main*, %struct.ID*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @extern_local_object(%struct.Object* %ob) #0 !dbg !9664 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9665, metadata !DIExpression()), !dbg !9666
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !9667, metadata !DIExpression()), !dbg !9668
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9669
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !9670
  %1 = load i8*, i8** %data, align 8, !dbg !9670
  %2 = bitcast i8* %1 to %struct.ID*, !dbg !9671
  call void @id_lib_extern(%struct.ID* %2), !dbg !9672
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9673
  %dup_group = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 112, !dbg !9674
  %4 = load %struct.Group*, %struct.Group** %dup_group, align 8, !dbg !9674
  %5 = bitcast %struct.Group* %4 to %struct.ID*, !dbg !9675
  call void @id_lib_extern(%struct.ID* %5), !dbg !9676
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9677
  %poselib = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 17, !dbg !9678
  %7 = load %struct.bAction*, %struct.bAction** %poselib, align 8, !dbg !9678
  %8 = bitcast %struct.bAction* %7 to %struct.ID*, !dbg !9679
  call void @id_lib_extern(%struct.ID* %8), !dbg !9680
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9681
  %gpd = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 20, !dbg !9682
  %10 = load %struct.bGPdata*, %struct.bGPdata** %gpd, align 8, !dbg !9682
  %11 = bitcast %struct.bGPdata* %10 to %struct.ID*, !dbg !9683
  call void @id_lib_extern(%struct.ID* %11), !dbg !9684
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9685
  %mat = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 29, !dbg !9686
  %13 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !9686
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9687
  %totcol = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 31, !dbg !9688
  %15 = load i32, i32* %totcol, align 8, !dbg !9688
  %conv = trunc i32 %15 to i16, !dbg !9687
  call void @extern_local_matarar(%struct.Material** %13, i16 signext %conv), !dbg !9689
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9690
  %particlesystem = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 109, !dbg !9692
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem, i32 0, i32 0, !dbg !9693
  %17 = load i8*, i8** %first, align 8, !dbg !9693
  %18 = bitcast i8* %17 to %struct.ParticleSystem*, !dbg !9690
  store %struct.ParticleSystem* %18, %struct.ParticleSystem** %psys, align 8, !dbg !9694
  br label %for.cond, !dbg !9695

for.cond:                                         ; preds = %for.inc, %entry
  %19 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9696
  %tobool = icmp ne %struct.ParticleSystem* %19, null, !dbg !9698
  br i1 %tobool, label %for.body, label %for.end, !dbg !9698

for.body:                                         ; preds = %for.cond
  %20 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9699
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %20, i32 0, i32 2, !dbg !9700
  %21 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !9700
  %22 = bitcast %struct.ParticleSettings* %21 to %struct.ID*, !dbg !9701
  call void @id_lib_extern(%struct.ID* %22), !dbg !9702
  br label %for.inc, !dbg !9702

for.inc:                                          ; preds = %for.body
  %23 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !9703
  %next = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %23, i32 0, i32 0, !dbg !9704
  %24 = load %struct.ParticleSystem*, %struct.ParticleSystem** %next, align 8, !dbg !9704
  store %struct.ParticleSystem* %24, %struct.ParticleSystem** %psys, align 8, !dbg !9705
  br label %for.cond, !dbg !9706, !llvm.loop !9707

for.end:                                          ; preds = %for.cond
  %25 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9709
  call void @modifiers_foreachIDLink(%struct.Object* %25, void (i8*, %struct.Object*, %struct.ID**)* @extern_local_object__modifiersForeachIDLink, i8* null), !dbg !9710
  ret void, !dbg !9711
}

declare dso_local %struct.Base* @BKE_scene_base_find(%struct.Scene*, %struct.Object*) #3

declare dso_local void @BKE_id_lib_local_paths(%struct.Main*, %struct.Library*, %struct.ID*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_object_is_libdata(%struct.Object* %ob) #0 !dbg !9712 {
entry:
  %retval = alloca i8, align 1
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9713, metadata !DIExpression()), !dbg !9714
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9715
  %tobool = icmp ne %struct.Object* %0, null, !dbg !9715
  br i1 %tobool, label %if.end, label %if.then, !dbg !9717

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !9718
  br label %return, !dbg !9718

if.end:                                           ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9719
  %proxy = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 11, !dbg !9721
  %2 = load %struct.Object*, %struct.Object** %proxy, align 8, !dbg !9721
  %tobool1 = icmp ne %struct.Object* %2, null, !dbg !9719
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !9722

if.then2:                                         ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !9723
  br label %return, !dbg !9723

if.end3:                                          ; preds = %if.end
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9724
  %id = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 0, !dbg !9726
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !9727
  %4 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !9727
  %tobool4 = icmp ne %struct.Library* %4, null, !dbg !9724
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !9728

if.then5:                                         ; preds = %if.end3
  store i8 1, i8* %retval, align 1, !dbg !9729
  br label %return, !dbg !9729

if.end6:                                          ; preds = %if.end3
  store i8 0, i8* %retval, align 1, !dbg !9730
  br label %return, !dbg !9730

return:                                           ; preds = %if.end6, %if.then5, %if.then2, %if.then
  %5 = load i8, i8* %retval, align 1, !dbg !9731
  ret i8 %5, !dbg !9731
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_object_obdata_is_libdata(%struct.Object* %ob) #0 !dbg !9732 {
entry:
  %retval = alloca i8, align 1
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9733, metadata !DIExpression()), !dbg !9734
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9735
  %tobool = icmp ne %struct.Object* %0, null, !dbg !9735
  br i1 %tobool, label %if.end, label %if.then, !dbg !9737

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !9738
  br label %return, !dbg !9738

if.end:                                           ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9739
  %proxy = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 11, !dbg !9741
  %2 = load %struct.Object*, %struct.Object** %proxy, align 8, !dbg !9741
  %tobool1 = icmp ne %struct.Object* %2, null, !dbg !9739
  br i1 %tobool1, label %land.lhs.true, label %if.end5, !dbg !9742

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9743
  %data = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !9744
  %4 = load i8*, i8** %data, align 8, !dbg !9744
  %cmp = icmp eq i8* %4, null, !dbg !9745
  br i1 %cmp, label %if.then4, label %lor.lhs.false, !dbg !9746

lor.lhs.false:                                    ; preds = %land.lhs.true
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9747
  %data2 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 19, !dbg !9748
  %6 = load i8*, i8** %data2, align 8, !dbg !9748
  %7 = bitcast i8* %6 to %struct.ID*, !dbg !9749
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %7, i32 0, i32 3, !dbg !9750
  %8 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !9750
  %cmp3 = icmp eq %struct.Library* %8, null, !dbg !9751
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !9752

if.then4:                                         ; preds = %lor.lhs.false, %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !9753
  br label %return, !dbg !9753

if.end5:                                          ; preds = %lor.lhs.false, %if.end
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9754
  %id = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 0, !dbg !9756
  %lib6 = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !9757
  %10 = load %struct.Library*, %struct.Library** %lib6, align 8, !dbg !9757
  %tobool7 = icmp ne %struct.Library* %10, null, !dbg !9754
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !9758

if.then8:                                         ; preds = %if.end5
  store i8 1, i8* %retval, align 1, !dbg !9759
  br label %return, !dbg !9759

if.end9:                                          ; preds = %if.end5
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9760
  %data10 = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 19, !dbg !9762
  %12 = load i8*, i8** %data10, align 8, !dbg !9762
  %cmp11 = icmp eq i8* %12, null, !dbg !9763
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !9764

if.then12:                                        ; preds = %if.end9
  store i8 0, i8* %retval, align 1, !dbg !9765
  br label %return, !dbg !9765

if.end13:                                         ; preds = %if.end9
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9766
  %data14 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 19, !dbg !9768
  %14 = load i8*, i8** %data14, align 8, !dbg !9768
  %15 = bitcast i8* %14 to %struct.ID*, !dbg !9769
  %lib15 = getelementptr inbounds %struct.ID, %struct.ID* %15, i32 0, i32 3, !dbg !9770
  %16 = load %struct.Library*, %struct.Library** %lib15, align 8, !dbg !9770
  %tobool16 = icmp ne %struct.Library* %16, null, !dbg !9771
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !9772

if.then17:                                        ; preds = %if.end13
  store i8 1, i8* %retval, align 1, !dbg !9773
  br label %return, !dbg !9773

if.end18:                                         ; preds = %if.end13
  store i8 0, i8* %retval, align 1, !dbg !9774
  br label %return, !dbg !9774

return:                                           ; preds = %if.end18, %if.then17, %if.then12, %if.then8, %if.then4, %if.then
  %17 = load i8, i8* %retval, align 1, !dbg !9775
  ret i8 %17, !dbg !9775
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_copy_proxy_drivers(%struct.Object* %ob, %struct.Object* %target) #0 !dbg !9776 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %target.addr = alloca %struct.Object*, align 8
  %fcu = alloca %struct.FCurve*, align 8
  %driver = alloca %struct.ChannelDriver*, align 8
  %dvar = alloca %struct.DriverVar*, align 8
  %dtar = alloca %struct.DriverTarget*, align 8
  %tarIndex = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9777, metadata !DIExpression()), !dbg !9778
  store %struct.Object* %target, %struct.Object** %target.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %target.addr, metadata !9779, metadata !DIExpression()), !dbg !9780
  %0 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !9781
  %adt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 1, !dbg !9783
  %1 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !9783
  %tobool = icmp ne %struct.AnimData* %1, null, !dbg !9784
  br i1 %tobool, label %land.lhs.true, label %if.end43, !dbg !9785

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !9786
  %adt1 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 1, !dbg !9787
  %3 = load %struct.AnimData*, %struct.AnimData** %adt1, align 8, !dbg !9787
  %drivers = getelementptr inbounds %struct.AnimData, %struct.AnimData* %3, i32 0, i32 5, !dbg !9788
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %drivers, i32 0, i32 0, !dbg !9789
  %4 = load i8*, i8** %first, align 8, !dbg !9789
  %tobool2 = icmp ne i8* %4, null, !dbg !9790
  br i1 %tobool2, label %if.then, label %if.end43, !dbg !9791

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.FCurve** %fcu, metadata !9792, metadata !DIExpression()), !dbg !9856
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9857
  %adt3 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 1, !dbg !9859
  %6 = load %struct.AnimData*, %struct.AnimData** %adt3, align 8, !dbg !9859
  %tobool4 = icmp ne %struct.AnimData* %6, null, !dbg !9857
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !9860

if.then5:                                         ; preds = %if.then
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9861
  %id = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 0, !dbg !9862
  %call = call %struct.AnimData* @BKE_id_add_animdata(%struct.ID* %id), !dbg !9863
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9864
  %adt6 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 1, !dbg !9865
  store %struct.AnimData* %call, %struct.AnimData** %adt6, align 8, !dbg !9866
  br label %if.end, !dbg !9864

if.end:                                           ; preds = %if.then5, %if.then
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9867
  %adt7 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 1, !dbg !9868
  %10 = load %struct.AnimData*, %struct.AnimData** %adt7, align 8, !dbg !9868
  %drivers8 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %10, i32 0, i32 5, !dbg !9869
  call void @free_fcurves(%struct.ListBase* %drivers8), !dbg !9870
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9871
  %adt9 = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 1, !dbg !9872
  %12 = load %struct.AnimData*, %struct.AnimData** %adt9, align 8, !dbg !9872
  %drivers10 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %12, i32 0, i32 5, !dbg !9873
  %13 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !9874
  %adt11 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 1, !dbg !9875
  %14 = load %struct.AnimData*, %struct.AnimData** %adt11, align 8, !dbg !9875
  %drivers12 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %14, i32 0, i32 5, !dbg !9876
  call void @copy_fcurves(%struct.ListBase* %drivers10, %struct.ListBase* %drivers12), !dbg !9877
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9878
  %adt13 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 1, !dbg !9880
  %16 = load %struct.AnimData*, %struct.AnimData** %adt13, align 8, !dbg !9880
  %drivers14 = getelementptr inbounds %struct.AnimData, %struct.AnimData* %16, i32 0, i32 5, !dbg !9881
  %first15 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %drivers14, i32 0, i32 0, !dbg !9882
  %17 = load i8*, i8** %first15, align 8, !dbg !9882
  %18 = bitcast i8* %17 to %struct.FCurve*, !dbg !9878
  store %struct.FCurve* %18, %struct.FCurve** %fcu, align 8, !dbg !9883
  br label %for.cond, !dbg !9884

for.cond:                                         ; preds = %for.inc40, %if.end
  %19 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !9885
  %tobool16 = icmp ne %struct.FCurve* %19, null, !dbg !9887
  br i1 %tobool16, label %for.body, label %for.end42, !dbg !9887

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ChannelDriver** %driver, metadata !9888, metadata !DIExpression()), !dbg !9890
  %20 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !9891
  %driver17 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %20, i32 0, i32 3, !dbg !9892
  %21 = load %struct.ChannelDriver*, %struct.ChannelDriver** %driver17, align 8, !dbg !9892
  store %struct.ChannelDriver* %21, %struct.ChannelDriver** %driver, align 8, !dbg !9890
  call void @llvm.dbg.declare(metadata %struct.DriverVar** %dvar, metadata !9893, metadata !DIExpression()), !dbg !9916
  %22 = load %struct.ChannelDriver*, %struct.ChannelDriver** %driver, align 8, !dbg !9917
  %variables = getelementptr inbounds %struct.ChannelDriver, %struct.ChannelDriver* %22, i32 0, i32 0, !dbg !9919
  %first18 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %variables, i32 0, i32 0, !dbg !9920
  %23 = load i8*, i8** %first18, align 8, !dbg !9920
  %24 = bitcast i8* %23 to %struct.DriverVar*, !dbg !9917
  store %struct.DriverVar* %24, %struct.DriverVar** %dvar, align 8, !dbg !9921
  br label %for.cond19, !dbg !9922

for.cond19:                                       ; preds = %for.inc38, %for.body
  %25 = load %struct.DriverVar*, %struct.DriverVar** %dvar, align 8, !dbg !9923
  %tobool20 = icmp ne %struct.DriverVar* %25, null, !dbg !9925
  br i1 %tobool20, label %for.body21, label %for.end39, !dbg !9925

for.body21:                                       ; preds = %for.cond19
  call void @llvm.dbg.declare(metadata %struct.DriverTarget** %dtar, metadata !9926, metadata !DIExpression()), !dbg !9930
  %26 = load %struct.DriverVar*, %struct.DriverVar** %dvar, align 8, !dbg !9930
  %targets = getelementptr inbounds %struct.DriverVar, %struct.DriverVar* %26, i32 0, i32 3, !dbg !9930
  %arrayidx = getelementptr inbounds [8 x %struct.DriverTarget], [8 x %struct.DriverTarget]* %targets, i64 0, i64 0, !dbg !9930
  store %struct.DriverTarget* %arrayidx, %struct.DriverTarget** %dtar, align 8, !dbg !9930
  call void @llvm.dbg.declare(metadata i32* %tarIndex, metadata !9931, metadata !DIExpression()), !dbg !9930
  store i32 0, i32* %tarIndex, align 4, !dbg !9930
  br label %for.cond22, !dbg !9930

for.cond22:                                       ; preds = %for.inc, %for.body21
  %27 = load i32, i32* %tarIndex, align 4, !dbg !9932
  %cmp = icmp slt i32 %27, 8, !dbg !9932
  br i1 %cmp, label %for.body23, label %for.end, !dbg !9935

for.body23:                                       ; preds = %for.cond22
  %28 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !9936
  %id24 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %28, i32 0, i32 0, !dbg !9939
  %29 = load %struct.ID*, %struct.ID** %id24, align 8, !dbg !9939
  %tobool25 = icmp ne %struct.ID* %29, null, !dbg !9936
  br i1 %tobool25, label %if.then26, label %if.end37, !dbg !9940

if.then26:                                        ; preds = %for.body23
  %30 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !9941
  %id27 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %30, i32 0, i32 0, !dbg !9944
  %31 = load %struct.ID*, %struct.ID** %id27, align 8, !dbg !9944
  %32 = bitcast %struct.ID* %31 to %struct.Object*, !dbg !9945
  %33 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !9946
  %cmp28 = icmp eq %struct.Object* %32, %33, !dbg !9947
  br i1 %cmp28, label %if.then29, label %if.else, !dbg !9948

if.then29:                                        ; preds = %if.then26
  %34 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9949
  %35 = bitcast %struct.Object* %34 to %struct.ID*, !dbg !9950
  %36 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !9951
  %id30 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %36, i32 0, i32 0, !dbg !9952
  store %struct.ID* %35, %struct.ID** %id30, align 8, !dbg !9953
  br label %if.end36, !dbg !9951

if.else:                                          ; preds = %if.then26
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9954
  %id31 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 0, !dbg !9957
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id31, i32 0, i32 3, !dbg !9958
  %38 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !9958
  %cmp32 = icmp eq %struct.Library* %38, null, !dbg !9959
  br i1 %cmp32, label %if.then33, label %if.end35, !dbg !9960

if.then33:                                        ; preds = %if.else
  %39 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !9961
  %id34 = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %39, i32 0, i32 0, !dbg !9962
  %40 = load %struct.ID*, %struct.ID** %id34, align 8, !dbg !9962
  call void @id_lib_extern(%struct.ID* %40), !dbg !9963
  br label %if.end35, !dbg !9963

if.end35:                                         ; preds = %if.then33, %if.else
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then29
  br label %if.end37, !dbg !9964

if.end37:                                         ; preds = %if.end36, %for.body23
  br label %for.inc, !dbg !9965

for.inc:                                          ; preds = %if.end37
  %41 = load i32, i32* %tarIndex, align 4, !dbg !9932
  %inc = add nsw i32 %41, 1, !dbg !9932
  store i32 %inc, i32* %tarIndex, align 4, !dbg !9932
  %42 = load %struct.DriverTarget*, %struct.DriverTarget** %dtar, align 8, !dbg !9932
  %incdec.ptr = getelementptr inbounds %struct.DriverTarget, %struct.DriverTarget* %42, i32 1, !dbg !9932
  store %struct.DriverTarget* %incdec.ptr, %struct.DriverTarget** %dtar, align 8, !dbg !9932
  br label %for.cond22, !dbg !9932, !llvm.loop !9966

for.end:                                          ; preds = %for.cond22
  br label %for.inc38, !dbg !9968

for.inc38:                                        ; preds = %for.end
  %43 = load %struct.DriverVar*, %struct.DriverVar** %dvar, align 8, !dbg !9969
  %next = getelementptr inbounds %struct.DriverVar, %struct.DriverVar* %43, i32 0, i32 0, !dbg !9970
  %44 = load %struct.DriverVar*, %struct.DriverVar** %next, align 8, !dbg !9970
  store %struct.DriverVar* %44, %struct.DriverVar** %dvar, align 8, !dbg !9971
  br label %for.cond19, !dbg !9972, !llvm.loop !9973

for.end39:                                        ; preds = %for.cond19
  br label %for.inc40, !dbg !9975

for.inc40:                                        ; preds = %for.end39
  %45 = load %struct.FCurve*, %struct.FCurve** %fcu, align 8, !dbg !9976
  %next41 = getelementptr inbounds %struct.FCurve, %struct.FCurve* %45, i32 0, i32 0, !dbg !9977
  %46 = load %struct.FCurve*, %struct.FCurve** %next41, align 8, !dbg !9977
  store %struct.FCurve* %46, %struct.FCurve** %fcu, align 8, !dbg !9978
  br label %for.cond, !dbg !9979, !llvm.loop !9980

for.end42:                                        ; preds = %for.cond
  br label %if.end43, !dbg !9982

if.end43:                                         ; preds = %for.end42, %land.lhs.true, %entry
  ret void, !dbg !9983
}

declare dso_local %struct.AnimData* @BKE_id_add_animdata(%struct.ID*) #3

declare dso_local void @free_fcurves(%struct.ListBase*) #3

declare dso_local void @copy_fcurves(%struct.ListBase*, %struct.ListBase*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_make_proxy(%struct.Object* %ob, %struct.Object* %target, %struct.Object* %gob) #0 !dbg !9984 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %target.addr = alloca %struct.Object*, align 8
  %gob.addr = alloca %struct.Object*, align 8
  %tvec = alloca [3 x float], align 4
  %i = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9987, metadata !DIExpression()), !dbg !9988
  store %struct.Object* %target, %struct.Object** %target.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %target.addr, metadata !9989, metadata !DIExpression()), !dbg !9990
  store %struct.Object* %gob, %struct.Object** %gob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %gob.addr, metadata !9991, metadata !DIExpression()), !dbg !9992
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9993
  %id = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 0, !dbg !9995
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !9996
  %1 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !9996
  %tobool = icmp ne %struct.Library* %1, null, !dbg !9993
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !9997

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !9998
  %id1 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 0, !dbg !9999
  %lib2 = getelementptr inbounds %struct.ID, %struct.ID* %id1, i32 0, i32 3, !dbg !10000
  %3 = load %struct.Library*, %struct.Library** %lib2, align 8, !dbg !10000
  %cmp = icmp eq %struct.Library* %3, null, !dbg !10001
  br i1 %cmp, label %if.then, label %if.end, !dbg !10002

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0)), !dbg !10003
  br label %return, !dbg !10005

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10006
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10007
  %proxy = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 11, !dbg !10008
  store %struct.Object* %4, %struct.Object** %proxy, align 8, !dbg !10009
  %6 = load %struct.Object*, %struct.Object** %gob.addr, align 8, !dbg !10010
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10011
  %proxy_group = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 12, !dbg !10012
  store %struct.Object* %6, %struct.Object** %proxy_group, align 8, !dbg !10013
  %8 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10014
  %id3 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 0, !dbg !10015
  call void @id_lib_extern(%struct.ID* %id3), !dbg !10016
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10017
  %id4 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 0, !dbg !10018
  call void @DAG_id_tag_update(%struct.ID* %id4, i16 signext 7), !dbg !10019
  %10 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10020
  %id5 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 0, !dbg !10021
  call void @DAG_id_tag_update(%struct.ID* %id5, i16 signext 7), !dbg !10022
  %11 = load %struct.Object*, %struct.Object** %gob.addr, align 8, !dbg !10023
  %tobool6 = icmp ne %struct.Object* %11, null, !dbg !10023
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !10025

if.then7:                                         ; preds = %if.end
  %12 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10026
  %rotmode = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 83, !dbg !10028
  %13 = load i16, i16* %rotmode, align 8, !dbg !10028
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10029
  %rotmode8 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 83, !dbg !10030
  store i16 %13, i16* %rotmode8, align 8, !dbg !10031
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10032
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 47, !dbg !10033
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !10032
  %16 = load %struct.Object*, %struct.Object** %gob.addr, align 8, !dbg !10034
  %obmat9 = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 47, !dbg !10035
  %arraydecay10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat9, i64 0, i64 0, !dbg !10034
  %17 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10036
  %obmat11 = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 47, !dbg !10037
  %arraydecay12 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat11, i64 0, i64 0, !dbg !10036
  call void @mul_m4_m4m4([4 x float]* %arraydecay, [4 x float]* %arraydecay10, [4 x float]* %arraydecay12), !dbg !10038
  %18 = load %struct.Object*, %struct.Object** %gob.addr, align 8, !dbg !10039
  %dup_group = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 112, !dbg !10041
  %19 = load %struct.Group*, %struct.Group** %dup_group, align 8, !dbg !10041
  %tobool13 = icmp ne %struct.Group* %19, null, !dbg !10039
  br i1 %tobool13, label %if.then14, label %if.end24, !dbg !10042

if.then14:                                        ; preds = %if.then7
  call void @llvm.dbg.declare(metadata [3 x float]* %tvec, metadata !10043, metadata !DIExpression()), !dbg !10045
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !10046
  %20 = load %struct.Object*, %struct.Object** %gob.addr, align 8, !dbg !10047
  %dup_group16 = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 112, !dbg !10048
  %21 = load %struct.Group*, %struct.Group** %dup_group16, align 8, !dbg !10048
  %dupli_ofs = getelementptr inbounds %struct.Group, %struct.Group* %21, i32 0, i32 3, !dbg !10049
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %dupli_ofs, i64 0, i64 0, !dbg !10047
  call void @copy_v3_v3(float* %arraydecay15, float* %arraydecay17), !dbg !10050
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10051
  %obmat18 = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 47, !dbg !10052
  %arraydecay19 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat18, i64 0, i64 0, !dbg !10051
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !10053
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay19, float* %arraydecay20), !dbg !10054
  %23 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10055
  %obmat21 = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 47, !dbg !10056
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat21, i64 0, i64 3, !dbg !10055
  %arraydecay22 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !10055
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !10057
  call void @sub_v3_v3(float* %arraydecay22, float* %arraydecay23), !dbg !10058
  br label %if.end24, !dbg !10059

if.end24:                                         ; preds = %if.then14, %if.then7
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10060
  %25 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10061
  %obmat25 = getelementptr inbounds %struct.Object, %struct.Object* %25, i32 0, i32 47, !dbg !10062
  %arraydecay26 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat25, i64 0, i64 0, !dbg !10061
  call void @BKE_object_apply_mat4(%struct.Object* %24, [4 x float]* %arraydecay26, i8 zeroext 0, i8 zeroext 1), !dbg !10063
  br label %if.end31, !dbg !10064

if.else:                                          ; preds = %if.end
  %26 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10065
  %27 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10067
  call void @BKE_object_transform_copy(%struct.Object* %26, %struct.Object* %27), !dbg !10068
  %28 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10069
  %parent = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 9, !dbg !10070
  %29 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !10070
  %30 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10071
  %parent27 = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 9, !dbg !10072
  store %struct.Object* %29, %struct.Object** %parent27, align 8, !dbg !10073
  %31 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10074
  %parentinv = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 48, !dbg !10075
  %arraydecay28 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %parentinv, i64 0, i64 0, !dbg !10074
  %32 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10076
  %parentinv29 = getelementptr inbounds %struct.Object, %struct.Object* %32, i32 0, i32 48, !dbg !10077
  %arraydecay30 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %parentinv29, i64 0, i64 0, !dbg !10076
  call void @copy_m4_m4([4 x float]* %arraydecay28, [4 x float]* %arraydecay30), !dbg !10078
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.end24
  %33 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10079
  %34 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10080
  call void @BKE_object_copy_proxy_drivers(%struct.Object* %33, %struct.Object* %34), !dbg !10081
  %35 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10082
  %type = getelementptr inbounds %struct.Object, %struct.Object* %35, i32 0, i32 3, !dbg !10083
  %36 = load i16, i16* %type, align 8, !dbg !10083
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10084
  %type32 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 3, !dbg !10085
  store i16 %36, i16* %type32, align 8, !dbg !10086
  %38 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10087
  %data = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 19, !dbg !10088
  %39 = load i8*, i8** %data, align 8, !dbg !10088
  %40 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10089
  %data33 = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 19, !dbg !10090
  store i8* %39, i8** %data33, align 8, !dbg !10091
  %41 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10092
  %data34 = getelementptr inbounds %struct.Object, %struct.Object* %41, i32 0, i32 19, !dbg !10093
  %42 = load i8*, i8** %data34, align 8, !dbg !10093
  %43 = bitcast i8* %42 to %struct.ID*, !dbg !10094
  call void @id_us_plus(%struct.ID* %43), !dbg !10095
  %44 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10096
  %totcol = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 31, !dbg !10097
  store i32 0, i32* %totcol, align 8, !dbg !10098
  %45 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10099
  %actcol = getelementptr inbounds %struct.Object, %struct.Object* %45, i32 0, i32 32, !dbg !10100
  store i32 0, i32* %actcol, align 4, !dbg !10101
  %46 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10102
  %mat = getelementptr inbounds %struct.Object, %struct.Object* %46, i32 0, i32 29, !dbg !10104
  %47 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !10104
  %tobool35 = icmp ne %struct.Material** %47, null, !dbg !10102
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !10105

if.then36:                                        ; preds = %if.end31
  %48 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10106
  %49 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10107
  %mat37 = getelementptr inbounds %struct.Object, %struct.Object* %49, i32 0, i32 29, !dbg !10108
  %50 = load %struct.Material**, %struct.Material*** %mat37, align 8, !dbg !10108
  %51 = bitcast %struct.Material** %50 to i8*, !dbg !10107
  call void %48(i8* %51), !dbg !10106
  br label %if.end38, !dbg !10106

if.end38:                                         ; preds = %if.then36, %if.end31
  %52 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10109
  %matbits = getelementptr inbounds %struct.Object, %struct.Object* %52, i32 0, i32 30, !dbg !10111
  %53 = load i8*, i8** %matbits, align 8, !dbg !10111
  %tobool39 = icmp ne i8* %53, null, !dbg !10109
  br i1 %tobool39, label %if.then40, label %if.end42, !dbg !10112

if.then40:                                        ; preds = %if.end38
  %54 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10113
  %55 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10114
  %matbits41 = getelementptr inbounds %struct.Object, %struct.Object* %55, i32 0, i32 30, !dbg !10115
  %56 = load i8*, i8** %matbits41, align 8, !dbg !10115
  call void %54(i8* %56), !dbg !10113
  br label %if.end42, !dbg !10113

if.end42:                                         ; preds = %if.then40, %if.end38
  %57 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10116
  %mat43 = getelementptr inbounds %struct.Object, %struct.Object* %57, i32 0, i32 29, !dbg !10117
  store %struct.Material** null, %struct.Material*** %mat43, align 8, !dbg !10118
  %58 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10119
  %matbits44 = getelementptr inbounds %struct.Object, %struct.Object* %58, i32 0, i32 30, !dbg !10120
  store i8* null, i8** %matbits44, align 8, !dbg !10121
  %59 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10122
  %totcol45 = getelementptr inbounds %struct.Object, %struct.Object* %59, i32 0, i32 31, !dbg !10124
  %60 = load i32, i32* %totcol45, align 8, !dbg !10124
  %tobool46 = icmp ne i32 %60, 0, !dbg !10125
  br i1 %tobool46, label %land.lhs.true, label %if.end74, !dbg !10126

land.lhs.true:                                    ; preds = %if.end42
  %61 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10127
  %mat47 = getelementptr inbounds %struct.Object, %struct.Object* %61, i32 0, i32 29, !dbg !10128
  %62 = load %struct.Material**, %struct.Material*** %mat47, align 8, !dbg !10128
  %tobool48 = icmp ne %struct.Material** %62, null, !dbg !10129
  br i1 %tobool48, label %land.lhs.true49, label %if.end74, !dbg !10130

land.lhs.true49:                                  ; preds = %land.lhs.true
  %63 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10131
  %type50 = getelementptr inbounds %struct.Object, %struct.Object* %63, i32 0, i32 3, !dbg !10131
  %64 = load i16, i16* %type50, align 8, !dbg !10131
  %conv = sext i16 %64 to i32, !dbg !10131
  %cmp51 = icmp sge i32 %conv, 1, !dbg !10131
  br i1 %cmp51, label %land.lhs.true53, label %if.end74, !dbg !10131

land.lhs.true53:                                  ; preds = %land.lhs.true49
  %65 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10131
  %type54 = getelementptr inbounds %struct.Object, %struct.Object* %65, i32 0, i32 3, !dbg !10131
  %66 = load i16, i16* %type54, align 8, !dbg !10131
  %conv55 = sext i16 %66 to i32, !dbg !10131
  %cmp56 = icmp sle i32 %conv55, 5, !dbg !10131
  br i1 %cmp56, label %if.then58, label %if.end74, !dbg !10132

if.then58:                                        ; preds = %land.lhs.true53
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10133, metadata !DIExpression()), !dbg !10135
  %67 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10136
  %actcol59 = getelementptr inbounds %struct.Object, %struct.Object* %67, i32 0, i32 32, !dbg !10137
  %68 = load i32, i32* %actcol59, align 4, !dbg !10137
  %69 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10138
  %actcol60 = getelementptr inbounds %struct.Object, %struct.Object* %69, i32 0, i32 32, !dbg !10139
  store i32 %68, i32* %actcol60, align 4, !dbg !10140
  %70 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10141
  %totcol61 = getelementptr inbounds %struct.Object, %struct.Object* %70, i32 0, i32 31, !dbg !10142
  %71 = load i32, i32* %totcol61, align 8, !dbg !10142
  %72 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10143
  %totcol62 = getelementptr inbounds %struct.Object, %struct.Object* %72, i32 0, i32 31, !dbg !10144
  store i32 %71, i32* %totcol62, align 8, !dbg !10145
  %73 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !10146
  %74 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10147
  %mat63 = getelementptr inbounds %struct.Object, %struct.Object* %74, i32 0, i32 29, !dbg !10148
  %75 = load %struct.Material**, %struct.Material*** %mat63, align 8, !dbg !10148
  %76 = bitcast %struct.Material** %75 to i8*, !dbg !10147
  %call64 = call i8* %73(i8* %76), !dbg !10146
  %77 = bitcast i8* %call64 to %struct.Material**, !dbg !10146
  %78 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10149
  %mat65 = getelementptr inbounds %struct.Object, %struct.Object* %78, i32 0, i32 29, !dbg !10150
  store %struct.Material** %77, %struct.Material*** %mat65, align 8, !dbg !10151
  %79 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !10152
  %80 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10153
  %matbits66 = getelementptr inbounds %struct.Object, %struct.Object* %80, i32 0, i32 30, !dbg !10154
  %81 = load i8*, i8** %matbits66, align 8, !dbg !10154
  %call67 = call i8* %79(i8* %81), !dbg !10152
  %82 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10155
  %matbits68 = getelementptr inbounds %struct.Object, %struct.Object* %82, i32 0, i32 30, !dbg !10156
  store i8* %call67, i8** %matbits68, align 8, !dbg !10157
  store i32 0, i32* %i, align 4, !dbg !10158
  br label %for.cond, !dbg !10160

for.cond:                                         ; preds = %for.inc, %if.then58
  %83 = load i32, i32* %i, align 4, !dbg !10161
  %84 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10163
  %totcol69 = getelementptr inbounds %struct.Object, %struct.Object* %84, i32 0, i32 31, !dbg !10164
  %85 = load i32, i32* %totcol69, align 8, !dbg !10164
  %cmp70 = icmp slt i32 %83, %85, !dbg !10165
  br i1 %cmp70, label %for.body, label %for.end, !dbg !10166

for.body:                                         ; preds = %for.cond
  %86 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10167
  %mat72 = getelementptr inbounds %struct.Object, %struct.Object* %86, i32 0, i32 29, !dbg !10169
  %87 = load %struct.Material**, %struct.Material*** %mat72, align 8, !dbg !10169
  %88 = load i32, i32* %i, align 4, !dbg !10170
  %idxprom = sext i32 %88 to i64, !dbg !10167
  %arrayidx73 = getelementptr inbounds %struct.Material*, %struct.Material** %87, i64 %idxprom, !dbg !10167
  %89 = load %struct.Material*, %struct.Material** %arrayidx73, align 8, !dbg !10167
  %90 = bitcast %struct.Material* %89 to %struct.ID*, !dbg !10171
  call void @id_us_plus(%struct.ID* %90), !dbg !10172
  br label %for.inc, !dbg !10173

for.inc:                                          ; preds = %for.body
  %91 = load i32, i32* %i, align 4, !dbg !10174
  %inc = add nsw i32 %91, 1, !dbg !10174
  store i32 %inc, i32* %i, align 4, !dbg !10174
  br label %for.cond, !dbg !10175, !llvm.loop !10176

for.end:                                          ; preds = %for.cond
  br label %if.end74, !dbg !10178

if.end74:                                         ; preds = %for.end, %land.lhs.true53, %land.lhs.true49, %land.lhs.true, %if.end42
  %92 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10179
  %type75 = getelementptr inbounds %struct.Object, %struct.Object* %92, i32 0, i32 3, !dbg !10181
  %93 = load i16, i16* %type75, align 8, !dbg !10181
  %conv76 = sext i16 %93 to i32, !dbg !10179
  %cmp77 = icmp eq i32 %conv76, 25, !dbg !10182
  br i1 %cmp77, label %if.then79, label %if.else81, !dbg !10183

if.then79:                                        ; preds = %if.end74
  %94 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10184
  %95 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10186
  call void @copy_object_pose(%struct.Object* %94, %struct.Object* %95), !dbg !10187
  %96 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10188
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %96, i32 0, i32 18, !dbg !10189
  %97 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !10189
  call void @BKE_pose_rest(%struct.bPose* %97), !dbg !10190
  %98 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10191
  %99 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10192
  %data80 = getelementptr inbounds %struct.Object, %struct.Object* %99, i32 0, i32 19, !dbg !10193
  %100 = load i8*, i8** %data80, align 8, !dbg !10193
  %101 = bitcast i8* %100 to %struct.bArmature*, !dbg !10192
  call void @BKE_pose_rebuild(%struct.Object* %98, %struct.bArmature* %101), !dbg !10194
  %102 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10195
  call void @armature_set_id_extern(%struct.Object* %102), !dbg !10196
  br label %if.end90, !dbg !10197

if.else81:                                        ; preds = %if.end74
  %103 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10198
  %type82 = getelementptr inbounds %struct.Object, %struct.Object* %103, i32 0, i32 3, !dbg !10200
  %104 = load i16, i16* %type82, align 8, !dbg !10200
  %conv83 = sext i16 %104 to i32, !dbg !10198
  %cmp84 = icmp eq i32 %conv83, 0, !dbg !10201
  br i1 %cmp84, label %if.then86, label %if.end89, !dbg !10202

if.then86:                                        ; preds = %if.else81
  %105 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10203
  %empty_drawtype = getelementptr inbounds %struct.Object, %struct.Object* %105, i32 0, i32 88, !dbg !10205
  %106 = load i8, i8* %empty_drawtype, align 1, !dbg !10205
  %107 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10206
  %empty_drawtype87 = getelementptr inbounds %struct.Object, %struct.Object* %107, i32 0, i32 88, !dbg !10207
  store i8 %106, i8* %empty_drawtype87, align 1, !dbg !10208
  %108 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10209
  %empty_drawsize = getelementptr inbounds %struct.Object, %struct.Object* %108, i32 0, i32 89, !dbg !10210
  %109 = load float, float* %empty_drawsize, align 8, !dbg !10210
  %110 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10211
  %empty_drawsize88 = getelementptr inbounds %struct.Object, %struct.Object* %110, i32 0, i32 89, !dbg !10212
  store float %109, float* %empty_drawsize88, align 8, !dbg !10213
  br label %if.end89, !dbg !10214

if.end89:                                         ; preds = %if.then86, %if.else81
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.then79
  %111 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10215
  %id91 = getelementptr inbounds %struct.Object, %struct.Object* %111, i32 0, i32 0, !dbg !10217
  %properties = getelementptr inbounds %struct.ID, %struct.ID* %id91, i32 0, i32 9, !dbg !10218
  %112 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !10218
  %tobool92 = icmp ne %struct.IDProperty* %112, null, !dbg !10215
  br i1 %tobool92, label %if.then93, label %if.end100, !dbg !10219

if.then93:                                        ; preds = %if.end90
  %113 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10220
  %id94 = getelementptr inbounds %struct.Object, %struct.Object* %113, i32 0, i32 0, !dbg !10222
  %properties95 = getelementptr inbounds %struct.ID, %struct.ID* %id94, i32 0, i32 9, !dbg !10223
  %114 = load %struct.IDProperty*, %struct.IDProperty** %properties95, align 8, !dbg !10223
  call void @IDP_FreeProperty(%struct.IDProperty* %114), !dbg !10224
  %115 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10225
  %116 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10226
  %id96 = getelementptr inbounds %struct.Object, %struct.Object* %116, i32 0, i32 0, !dbg !10227
  %properties97 = getelementptr inbounds %struct.ID, %struct.ID* %id96, i32 0, i32 9, !dbg !10228
  %117 = load %struct.IDProperty*, %struct.IDProperty** %properties97, align 8, !dbg !10228
  %118 = bitcast %struct.IDProperty* %117 to i8*, !dbg !10226
  call void %115(i8* %118), !dbg !10225
  %119 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10229
  %id98 = getelementptr inbounds %struct.Object, %struct.Object* %119, i32 0, i32 0, !dbg !10230
  %properties99 = getelementptr inbounds %struct.ID, %struct.ID* %id98, i32 0, i32 9, !dbg !10231
  store %struct.IDProperty* null, %struct.IDProperty** %properties99, align 8, !dbg !10232
  br label %if.end100, !dbg !10233

if.end100:                                        ; preds = %if.then93, %if.end90
  %120 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10234
  %id101 = getelementptr inbounds %struct.Object, %struct.Object* %120, i32 0, i32 0, !dbg !10236
  %properties102 = getelementptr inbounds %struct.ID, %struct.ID* %id101, i32 0, i32 9, !dbg !10237
  %121 = load %struct.IDProperty*, %struct.IDProperty** %properties102, align 8, !dbg !10237
  %tobool103 = icmp ne %struct.IDProperty* %121, null, !dbg !10234
  br i1 %tobool103, label %if.then104, label %if.end110, !dbg !10238

if.then104:                                       ; preds = %if.end100
  %122 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10239
  %id105 = getelementptr inbounds %struct.Object, %struct.Object* %122, i32 0, i32 0, !dbg !10241
  %properties106 = getelementptr inbounds %struct.ID, %struct.ID* %id105, i32 0, i32 9, !dbg !10242
  %123 = load %struct.IDProperty*, %struct.IDProperty** %properties106, align 8, !dbg !10242
  %call107 = call %struct.IDProperty* @IDP_CopyProperty(%struct.IDProperty* %123), !dbg !10243
  %124 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10244
  %id108 = getelementptr inbounds %struct.Object, %struct.Object* %124, i32 0, i32 0, !dbg !10245
  %properties109 = getelementptr inbounds %struct.ID, %struct.ID* %id108, i32 0, i32 9, !dbg !10246
  store %struct.IDProperty* %call107, %struct.IDProperty** %properties109, align 8, !dbg !10247
  br label %if.end110, !dbg !10248

if.end110:                                        ; preds = %if.then104, %if.end100
  %125 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !10249
  %dt = getelementptr inbounds %struct.Object, %struct.Object* %125, i32 0, i32 87, !dbg !10250
  %126 = load i8, i8* %dt, align 2, !dbg !10250
  %127 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10251
  %dt111 = getelementptr inbounds %struct.Object, %struct.Object* %127, i32 0, i32 87, !dbg !10252
  store i8 %126, i8* %dt111, align 2, !dbg !10253
  br label %return, !dbg !10254

return:                                           ; preds = %if.end110, %if.then
  ret void, !dbg !10254
}

declare dso_local void @mul_mat3_m4_v3([4 x float]*, float*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3(float* %r, float* %a) #0 !dbg !10255 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !10256, metadata !DIExpression()), !dbg !10257
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !10258, metadata !DIExpression()), !dbg !10259
  %0 = load float*, float** %a.addr, align 8, !dbg !10260
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !10260
  %1 = load float, float* %arrayidx, align 4, !dbg !10260
  %2 = load float*, float** %r.addr, align 8, !dbg !10261
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !10261
  %3 = load float, float* %arrayidx1, align 4, !dbg !10262
  %sub = fsub float %3, %1, !dbg !10262
  store float %sub, float* %arrayidx1, align 4, !dbg !10262
  %4 = load float*, float** %a.addr, align 8, !dbg !10263
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !10263
  %5 = load float, float* %arrayidx2, align 4, !dbg !10263
  %6 = load float*, float** %r.addr, align 8, !dbg !10264
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !10264
  %7 = load float, float* %arrayidx3, align 4, !dbg !10265
  %sub4 = fsub float %7, %5, !dbg !10265
  store float %sub4, float* %arrayidx3, align 4, !dbg !10265
  %8 = load float*, float** %a.addr, align 8, !dbg !10266
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !10266
  %9 = load float, float* %arrayidx5, align 4, !dbg !10266
  %10 = load float*, float** %r.addr, align 8, !dbg !10267
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !10267
  %11 = load float, float* %arrayidx6, align 4, !dbg !10268
  %sub7 = fsub float %11, %9, !dbg !10268
  store float %sub7, float* %arrayidx6, align 4, !dbg !10268
  ret void, !dbg !10269
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_apply_mat4(%struct.Object* %ob, [4 x float]* %mat, i8 zeroext %use_compat, i8 zeroext %use_parent) #0 !dbg !10270 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %mat.addr = alloca [4 x float]*, align 8
  %use_compat.addr = alloca i8, align 1
  %use_parent.addr = alloca i8, align 1
  %rot = alloca [3 x [3 x float]], align 16
  %rmat = alloca [4 x [4 x float]], align 16
  %diff_mat = alloca [4 x [4 x float]], align 16
  %imat = alloca [4 x [4 x float]], align 16
  %parent_mat = alloca [4 x [4 x float]], align 16
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !10273, metadata !DIExpression()), !dbg !10274
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !10275, metadata !DIExpression()), !dbg !10276
  store i8 %use_compat, i8* %use_compat.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_compat.addr, metadata !10277, metadata !DIExpression()), !dbg !10278
  store i8 %use_parent, i8* %use_parent.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_parent.addr, metadata !10279, metadata !DIExpression()), !dbg !10280
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %rot, metadata !10281, metadata !DIExpression()), !dbg !10282
  %0 = load i8, i8* %use_parent.addr, align 1, !dbg !10283
  %conv = zext i8 %0 to i32, !dbg !10283
  %tobool = icmp ne i32 %conv, 0, !dbg !10283
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !10285

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10286
  %parent = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 9, !dbg !10287
  %2 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !10287
  %tobool1 = icmp ne %struct.Object* %2, null, !dbg !10286
  br i1 %tobool1, label %if.then, label %if.else, !dbg !10288

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %rmat, metadata !10289, metadata !DIExpression()), !dbg !10291
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %diff_mat, metadata !10292, metadata !DIExpression()), !dbg !10293
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %imat, metadata !10294, metadata !DIExpression()), !dbg !10295
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %parent_mat, metadata !10296, metadata !DIExpression()), !dbg !10297
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10298
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10299
  %parent2 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 9, !dbg !10300
  %5 = load %struct.Object*, %struct.Object** %parent2, align 8, !dbg !10300
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %parent_mat, i64 0, i64 0, !dbg !10301
  call void @ob_get_parent_matrix(%struct.Scene* null, %struct.Object* %3, %struct.Object* %5, [4 x float]* %arraydecay), !dbg !10302
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %diff_mat, i64 0, i64 0, !dbg !10303
  %arraydecay4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %parent_mat, i64 0, i64 0, !dbg !10304
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10305
  %parentinv = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 48, !dbg !10306
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %parentinv, i64 0, i64 0, !dbg !10305
  call void @mul_m4_m4m4([4 x float]* %arraydecay3, [4 x float]* %arraydecay4, [4 x float]* %arraydecay5), !dbg !10307
  %arraydecay6 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !10308
  %arraydecay7 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %diff_mat, i64 0, i64 0, !dbg !10309
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay6, [4 x float]* %arraydecay7), !dbg !10310
  %arraydecay8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %rmat, i64 0, i64 0, !dbg !10311
  %arraydecay9 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !10312
  %7 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !10313
  call void @mul_m4_m4m4([4 x float]* %arraydecay8, [4 x float]* %arraydecay9, [4 x float]* %7), !dbg !10314
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10315
  %arraydecay10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %rmat, i64 0, i64 0, !dbg !10316
  %9 = load i8, i8* %use_compat.addr, align 1, !dbg !10317
  call void @BKE_object_apply_mat4(%struct.Object* %8, [4 x float]* %arraydecay10, i8 zeroext %9, i8 zeroext 0), !dbg !10318
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10319
  %loc = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 33, !dbg !10320
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !10319
  %arraydecay12 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rot, i64 0, i64 0, !dbg !10321
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10322
  %size = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 36, !dbg !10323
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !10322
  %arraydecay14 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %rmat, i64 0, i64 0, !dbg !10324
  call void @mat4_to_loc_rot_size(float* %arraydecay11, [3 x float]* %arraydecay12, float* %arraydecay13, [4 x float]* %arraydecay14), !dbg !10325
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10326
  %arraydecay15 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rot, i64 0, i64 0, !dbg !10327
  %13 = load i8, i8* %use_compat.addr, align 1, !dbg !10328
  call void @BKE_object_mat3_to_rot(%struct.Object* %12, [3 x float]* %arraydecay15, i8 zeroext %13), !dbg !10329
  br label %if.end, !dbg !10330

if.else:                                          ; preds = %land.lhs.true, %entry
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10331
  %loc16 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 33, !dbg !10333
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %loc16, i64 0, i64 0, !dbg !10331
  %arraydecay18 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rot, i64 0, i64 0, !dbg !10334
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10335
  %size19 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 36, !dbg !10336
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %size19, i64 0, i64 0, !dbg !10335
  %16 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !10337
  call void @mat4_to_loc_rot_size(float* %arraydecay17, [3 x float]* %arraydecay18, float* %arraydecay20, [4 x float]* %16), !dbg !10338
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10339
  %arraydecay21 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rot, i64 0, i64 0, !dbg !10340
  %18 = load i8, i8* %use_compat.addr, align 1, !dbg !10341
  call void @BKE_object_mat3_to_rot(%struct.Object* %17, [3 x float]* %arraydecay21, i8 zeroext %18), !dbg !10342
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10343
  %loc22 = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 33, !dbg !10344
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %loc22, i64 0, i64 0, !dbg !10343
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10345
  %dloc = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 34, !dbg !10346
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %dloc, i64 0, i64 0, !dbg !10345
  call void @sub_v3_v3(float* %arraydecay23, float* %arraydecay24), !dbg !10347
  %21 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10348
  %dscale = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 38, !dbg !10350
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %dscale, i64 0, i64 0, !dbg !10348
  %22 = load float, float* %arrayidx, align 4, !dbg !10348
  %cmp = fcmp une float %22, 0.000000e+00, !dbg !10351
  br i1 %cmp, label %if.then26, label %if.end31, !dbg !10352

if.then26:                                        ; preds = %if.end
  %23 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10353
  %dscale27 = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 38, !dbg !10354
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %dscale27, i64 0, i64 0, !dbg !10353
  %24 = load float, float* %arrayidx28, align 4, !dbg !10353
  %25 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10355
  %size29 = getelementptr inbounds %struct.Object, %struct.Object* %25, i32 0, i32 36, !dbg !10356
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %size29, i64 0, i64 0, !dbg !10355
  %26 = load float, float* %arrayidx30, align 4, !dbg !10357
  %div = fdiv float %26, %24, !dbg !10357
  store float %div, float* %arrayidx30, align 4, !dbg !10357
  br label %if.end31, !dbg !10355

if.end31:                                         ; preds = %if.then26, %if.end
  %27 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10358
  %dscale32 = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 38, !dbg !10360
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %dscale32, i64 0, i64 1, !dbg !10358
  %28 = load float, float* %arrayidx33, align 4, !dbg !10358
  %cmp34 = fcmp une float %28, 0.000000e+00, !dbg !10361
  br i1 %cmp34, label %if.then36, label %if.end42, !dbg !10362

if.then36:                                        ; preds = %if.end31
  %29 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10363
  %dscale37 = getelementptr inbounds %struct.Object, %struct.Object* %29, i32 0, i32 38, !dbg !10364
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %dscale37, i64 0, i64 1, !dbg !10363
  %30 = load float, float* %arrayidx38, align 4, !dbg !10363
  %31 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10365
  %size39 = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 36, !dbg !10366
  %arrayidx40 = getelementptr inbounds [3 x float], [3 x float]* %size39, i64 0, i64 1, !dbg !10365
  %32 = load float, float* %arrayidx40, align 4, !dbg !10367
  %div41 = fdiv float %32, %30, !dbg !10367
  store float %div41, float* %arrayidx40, align 4, !dbg !10367
  br label %if.end42, !dbg !10365

if.end42:                                         ; preds = %if.then36, %if.end31
  %33 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10368
  %dscale43 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 38, !dbg !10370
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %dscale43, i64 0, i64 2, !dbg !10368
  %34 = load float, float* %arrayidx44, align 4, !dbg !10368
  %cmp45 = fcmp une float %34, 0.000000e+00, !dbg !10371
  br i1 %cmp45, label %if.then47, label %if.end53, !dbg !10372

if.then47:                                        ; preds = %if.end42
  %35 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10373
  %dscale48 = getelementptr inbounds %struct.Object, %struct.Object* %35, i32 0, i32 38, !dbg !10374
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %dscale48, i64 0, i64 2, !dbg !10373
  %36 = load float, float* %arrayidx49, align 4, !dbg !10373
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10375
  %size50 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 36, !dbg !10376
  %arrayidx51 = getelementptr inbounds [3 x float], [3 x float]* %size50, i64 0, i64 2, !dbg !10375
  %38 = load float, float* %arrayidx51, align 4, !dbg !10377
  %div52 = fdiv float %38, %36, !dbg !10377
  store float %div52, float* %arrayidx51, align 4, !dbg !10377
  br label %if.end53, !dbg !10375

if.end53:                                         ; preds = %if.then47, %if.end42
  ret void, !dbg !10378
}

declare dso_local void @copy_m4_m4([4 x float]*, [4 x float]*) #3

declare dso_local void @BKE_pose_rest(%struct.bPose*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @armature_set_id_extern(%struct.Object* %ob) #0 !dbg !10379 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %arm = alloca %struct.bArmature*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  %lay = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !10380, metadata !DIExpression()), !dbg !10381
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !10382, metadata !DIExpression()), !dbg !10383
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10384
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !10385
  %1 = load i8*, i8** %data, align 8, !dbg !10385
  %2 = bitcast i8* %1 to %struct.bArmature*, !dbg !10384
  store %struct.bArmature* %2, %struct.bArmature** %arm, align 8, !dbg !10383
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !10386, metadata !DIExpression()), !dbg !10387
  call void @llvm.dbg.declare(metadata i32* %lay, metadata !10388, metadata !DIExpression()), !dbg !10389
  %3 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !10390
  %layer_protected = getelementptr inbounds %struct.bArmature, %struct.bArmature* %3, i32 0, i32 16, !dbg !10391
  %4 = load i32, i32* %layer_protected, align 4, !dbg !10391
  store i32 %4, i32* %lay, align 4, !dbg !10389
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10392
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 18, !dbg !10394
  %6 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !10394
  %chanbase = getelementptr inbounds %struct.bPose, %struct.bPose* %6, i32 0, i32 0, !dbg !10395
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase, i32 0, i32 0, !dbg !10396
  %7 = load i8*, i8** %first, align 8, !dbg !10396
  %8 = bitcast i8* %7 to %struct.bPoseChannel*, !dbg !10392
  store %struct.bPoseChannel* %8, %struct.bPoseChannel** %pchan, align 8, !dbg !10397
  br label %for.cond, !dbg !10398

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !10399
  %tobool = icmp ne %struct.bPoseChannel* %9, null, !dbg !10401
  br i1 %tobool, label %for.body, label %for.end, !dbg !10401

for.body:                                         ; preds = %for.cond
  %10 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !10402
  %bone = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %10, i32 0, i32 12, !dbg !10405
  %11 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !10405
  %layer = getelementptr inbounds %struct.Bone, %struct.Bone* %11, i32 0, i32 25, !dbg !10406
  %12 = load i32, i32* %layer, align 8, !dbg !10406
  %13 = load i32, i32* %lay, align 4, !dbg !10407
  %and = and i32 %12, %13, !dbg !10408
  %tobool1 = icmp ne i32 %and, 0, !dbg !10408
  br i1 %tobool1, label %if.end, label %if.then, !dbg !10409

if.then:                                          ; preds = %for.body
  %14 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !10410
  %custom = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %14, i32 0, i32 18, !dbg !10411
  %15 = load %struct.Object*, %struct.Object** %custom, align 8, !dbg !10411
  %16 = bitcast %struct.Object* %15 to %struct.ID*, !dbg !10412
  call void @id_lib_extern(%struct.ID* %16), !dbg !10413
  br label %if.end, !dbg !10413

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !10414

for.inc:                                          ; preds = %if.end
  %17 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !10415
  %next = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %17, i32 0, i32 0, !dbg !10416
  %18 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next, align 8, !dbg !10416
  store %struct.bPoseChannel* %18, %struct.bPoseChannel** %pchan, align 8, !dbg !10417
  br label %for.cond, !dbg !10418, !llvm.loop !10419

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10421
}

declare dso_local void @IDP_FreeProperty(%struct.IDProperty*) #3

declare dso_local %struct.IDProperty* @IDP_CopyProperty(%struct.IDProperty*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_obdata_size_init(%struct.Object* %ob, float %size) #0 !dbg !10422 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %size.addr = alloca float, align 4
  %cu = alloca %struct.Curve*, align 8
  %cam = alloca %struct.Camera*, align 8
  %lamp = alloca %struct.Lamp*, align 8
  %lt = alloca %struct.Lattice*, align 8
  %mat = alloca [4 x [4 x float]], align 16
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !10425, metadata !DIExpression()), !dbg !10426
  store float %size, float* %size.addr, align 4
  call void @llvm.dbg.declare(metadata float* %size.addr, metadata !10427, metadata !DIExpression()), !dbg !10428
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10429
  %type = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 3, !dbg !10430
  %1 = load i16, i16* %type, align 8, !dbg !10430
  %conv = sext i16 %1 to i32, !dbg !10429
  switch i32 %conv, label %sw.epilog [
    i32 0, label %sw.bb
    i32 4, label %sw.bb1
    i32 11, label %sw.bb3
    i32 10, label %sw.bb6
    i32 22, label %sw.bb12
  ], !dbg !10431

sw.bb:                                            ; preds = %entry
  %2 = load float, float* %size.addr, align 4, !dbg !10432
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10435
  %empty_drawsize = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 89, !dbg !10436
  %4 = load float, float* %empty_drawsize, align 8, !dbg !10437
  %mul = fmul float %4, %2, !dbg !10437
  store float %mul, float* %empty_drawsize, align 8, !dbg !10437
  br label %sw.epilog, !dbg !10438

sw.bb1:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !10439, metadata !DIExpression()), !dbg !10441
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10442
  %data = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 19, !dbg !10443
  %6 = load i8*, i8** %data, align 8, !dbg !10443
  %7 = bitcast i8* %6 to %struct.Curve*, !dbg !10442
  store %struct.Curve* %7, %struct.Curve** %cu, align 8, !dbg !10441
  %8 = load float, float* %size.addr, align 4, !dbg !10444
  %9 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !10445
  %fsize = getelementptr inbounds %struct.Curve, %struct.Curve* %9, i32 0, i32 40, !dbg !10446
  %10 = load float, float* %fsize, align 8, !dbg !10447
  %mul2 = fmul float %10, %8, !dbg !10447
  store float %mul2, float* %fsize, align 8, !dbg !10447
  br label %sw.epilog, !dbg !10448

sw.bb3:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Camera** %cam, metadata !10449, metadata !DIExpression()), !dbg !10451
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10452
  %data4 = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 19, !dbg !10453
  %12 = load i8*, i8** %data4, align 8, !dbg !10453
  %13 = bitcast i8* %12 to %struct.Camera*, !dbg !10452
  store %struct.Camera* %13, %struct.Camera** %cam, align 8, !dbg !10451
  %14 = load float, float* %size.addr, align 4, !dbg !10454
  %15 = load %struct.Camera*, %struct.Camera** %cam, align 8, !dbg !10455
  %drawsize = getelementptr inbounds %struct.Camera, %struct.Camera* %15, i32 0, i32 10, !dbg !10456
  %16 = load float, float* %drawsize, align 8, !dbg !10457
  %mul5 = fmul float %16, %14, !dbg !10457
  store float %mul5, float* %drawsize, align 8, !dbg !10457
  br label %sw.epilog, !dbg !10458

sw.bb6:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Lamp** %lamp, metadata !10459, metadata !DIExpression()), !dbg !10541
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10542
  %data7 = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 19, !dbg !10543
  %18 = load i8*, i8** %data7, align 8, !dbg !10543
  %19 = bitcast i8* %18 to %struct.Lamp*, !dbg !10542
  store %struct.Lamp* %19, %struct.Lamp** %lamp, align 8, !dbg !10541
  %20 = load float, float* %size.addr, align 4, !dbg !10544
  %21 = load %struct.Lamp*, %struct.Lamp** %lamp, align 8, !dbg !10545
  %dist = getelementptr inbounds %struct.Lamp, %struct.Lamp* %21, i32 0, i32 16, !dbg !10546
  %22 = load float, float* %dist, align 8, !dbg !10547
  %mul8 = fmul float %22, %20, !dbg !10547
  store float %mul8, float* %dist, align 8, !dbg !10547
  %23 = load float, float* %size.addr, align 4, !dbg !10548
  %24 = load %struct.Lamp*, %struct.Lamp** %lamp, align 8, !dbg !10549
  %area_size = getelementptr inbounds %struct.Lamp, %struct.Lamp* %24, i32 0, i32 43, !dbg !10550
  %25 = load float, float* %area_size, align 4, !dbg !10551
  %mul9 = fmul float %25, %23, !dbg !10551
  store float %mul9, float* %area_size, align 4, !dbg !10551
  %26 = load float, float* %size.addr, align 4, !dbg !10552
  %27 = load %struct.Lamp*, %struct.Lamp** %lamp, align 8, !dbg !10553
  %area_sizey = getelementptr inbounds %struct.Lamp, %struct.Lamp* %27, i32 0, i32 44, !dbg !10554
  %28 = load float, float* %area_sizey, align 8, !dbg !10555
  %mul10 = fmul float %28, %26, !dbg !10555
  store float %mul10, float* %area_sizey, align 8, !dbg !10555
  %29 = load float, float* %size.addr, align 4, !dbg !10556
  %30 = load %struct.Lamp*, %struct.Lamp** %lamp, align 8, !dbg !10557
  %area_sizez = getelementptr inbounds %struct.Lamp, %struct.Lamp* %30, i32 0, i32 45, !dbg !10558
  %31 = load float, float* %area_sizez, align 4, !dbg !10559
  %mul11 = fmul float %31, %29, !dbg !10559
  store float %mul11, float* %area_sizez, align 4, !dbg !10559
  br label %sw.epilog, !dbg !10560

sw.bb12:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !10561, metadata !DIExpression()), !dbg !10563
  %32 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10564
  %data13 = getelementptr inbounds %struct.Object, %struct.Object* %32, i32 0, i32 19, !dbg !10565
  %33 = load i8*, i8** %data13, align 8, !dbg !10565
  %34 = bitcast i8* %33 to %struct.Lattice*, !dbg !10564
  store %struct.Lattice* %34, %struct.Lattice** %lt, align 8, !dbg !10563
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !10566, metadata !DIExpression()), !dbg !10567
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !10568
  call void @unit_m4([4 x float]* %arraydecay), !dbg !10569
  %arraydecay14 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !10570
  %35 = load float, float* %size.addr, align 4, !dbg !10571
  call void @scale_m4_fl([4 x float]* %arraydecay14, float %35), !dbg !10572
  %36 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !10573
  %arraydecay15 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !10574
  call void @BKE_lattice_transform(%struct.Lattice* %36, [4 x float]* %arraydecay15, i8 zeroext 0), !dbg !10575
  br label %sw.epilog, !dbg !10576

sw.epilog:                                        ; preds = %entry, %sw.bb12, %sw.bb6, %sw.bb3, %sw.bb1, %sw.bb
  ret void, !dbg !10577
}

declare dso_local void @scale_m4_fl([4 x float]*, float) #3

declare dso_local void @BKE_lattice_transform(%struct.Lattice*, [4 x float]*, i8 zeroext) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_scale_to_mat3(%struct.Object* %ob, [3 x float]* %mat) #0 !dbg !10578 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %mat.addr = alloca [3 x float]*, align 8
  %vec = alloca [3 x float], align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !10581, metadata !DIExpression()), !dbg !10582
  store [3 x float]* %mat, [3 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %mat.addr, metadata !10583, metadata !DIExpression()), !dbg !10584
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !10585, metadata !DIExpression()), !dbg !10586
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !10587
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10588
  %size = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 36, !dbg !10589
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !10588
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10590
  %dscale = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 38, !dbg !10591
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %dscale, i64 0, i64 0, !dbg !10590
  call void @mul_v3_v3v3(float* %arraydecay, float* %arraydecay1, float* %arraydecay2), !dbg !10592
  %2 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !10593
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !10594
  call void @size_to_mat3([3 x float]* %2, float* %arraydecay3), !dbg !10595
  ret void, !dbg !10596
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3v3(float* %r, float* %v1, float* %v2) #0 !dbg !10597 {
entry:
  %r.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !10600, metadata !DIExpression()), !dbg !10601
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !10602, metadata !DIExpression()), !dbg !10603
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !10604, metadata !DIExpression()), !dbg !10605
  %0 = load float*, float** %v1.addr, align 8, !dbg !10606
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !10606
  %1 = load float, float* %arrayidx, align 4, !dbg !10606
  %2 = load float*, float** %v2.addr, align 8, !dbg !10607
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !10607
  %3 = load float, float* %arrayidx1, align 4, !dbg !10607
  %mul = fmul float %1, %3, !dbg !10608
  %4 = load float*, float** %r.addr, align 8, !dbg !10609
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !10609
  store float %mul, float* %arrayidx2, align 4, !dbg !10610
  %5 = load float*, float** %v1.addr, align 8, !dbg !10611
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !10611
  %6 = load float, float* %arrayidx3, align 4, !dbg !10611
  %7 = load float*, float** %v2.addr, align 8, !dbg !10612
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !10612
  %8 = load float, float* %arrayidx4, align 4, !dbg !10612
  %mul5 = fmul float %6, %8, !dbg !10613
  %9 = load float*, float** %r.addr, align 8, !dbg !10614
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !10614
  store float %mul5, float* %arrayidx6, align 4, !dbg !10615
  %10 = load float*, float** %v1.addr, align 8, !dbg !10616
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !10616
  %11 = load float, float* %arrayidx7, align 4, !dbg !10616
  %12 = load float*, float** %v2.addr, align 8, !dbg !10617
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !10617
  %13 = load float, float* %arrayidx8, align 4, !dbg !10617
  %mul9 = fmul float %11, %13, !dbg !10618
  %14 = load float*, float** %r.addr, align 8, !dbg !10619
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !10619
  store float %mul9, float* %arrayidx10, align 4, !dbg !10620
  ret void, !dbg !10621
}

declare dso_local void @size_to_mat3([3 x float]*, float*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_rot_to_mat3(%struct.Object* %ob, [3 x float]* %mat, i8 zeroext %use_drot) #0 !dbg !10622 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %mat.addr = alloca [3 x float]*, align 8
  %use_drot.addr = alloca i8, align 1
  %rmat = alloca [3 x [3 x float]], align 16
  %dmat = alloca [3 x [3 x float]], align 16
  %tquat = alloca [4 x float], align 16
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !10625, metadata !DIExpression()), !dbg !10626
  store [3 x float]* %mat, [3 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %mat.addr, metadata !10627, metadata !DIExpression()), !dbg !10628
  store i8 %use_drot, i8* %use_drot.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_drot.addr, metadata !10629, metadata !DIExpression()), !dbg !10630
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %rmat, metadata !10631, metadata !DIExpression()), !dbg !10632
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %dmat, metadata !10633, metadata !DIExpression()), !dbg !10634
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10635
  %rotmode = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 83, !dbg !10637
  %1 = load i16, i16* %rotmode, align 8, !dbg !10637
  %conv = sext i16 %1 to i32, !dbg !10635
  %cmp = icmp sgt i32 %conv, 0, !dbg !10638
  br i1 %cmp, label %if.then, label %if.else, !dbg !10639

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rmat, i64 0, i64 0, !dbg !10640
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10642
  %rot = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 39, !dbg !10643
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %rot, i64 0, i64 0, !dbg !10642
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10644
  %rotmode3 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 83, !dbg !10645
  %4 = load i16, i16* %rotmode3, align 8, !dbg !10645
  call void @eulO_to_mat3([3 x float]* %arraydecay, float* %arraydecay2, i16 signext %4), !dbg !10646
  %arraydecay4 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %dmat, i64 0, i64 0, !dbg !10647
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10648
  %drot = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 40, !dbg !10649
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %drot, i64 0, i64 0, !dbg !10648
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10650
  %rotmode6 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 83, !dbg !10651
  %7 = load i16, i16* %rotmode6, align 8, !dbg !10651
  call void @eulO_to_mat3([3 x float]* %arraydecay4, float* %arraydecay5, i16 signext %7), !dbg !10652
  br label %if.end26, !dbg !10653

if.else:                                          ; preds = %entry
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10654
  %rotmode7 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 83, !dbg !10656
  %9 = load i16, i16* %rotmode7, align 8, !dbg !10656
  %conv8 = sext i16 %9 to i32, !dbg !10654
  %cmp9 = icmp eq i32 %conv8, -1, !dbg !10657
  br i1 %cmp9, label %if.then11, label %if.else16, !dbg !10658

if.then11:                                        ; preds = %if.else
  %arraydecay12 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rmat, i64 0, i64 0, !dbg !10659
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10661
  %rotAxis = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 43, !dbg !10662
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %rotAxis, i64 0, i64 0, !dbg !10661
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10663
  %rotAngle = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 45, !dbg !10664
  %12 = load float, float* %rotAngle, align 8, !dbg !10664
  call void @axis_angle_to_mat3([3 x float]* %arraydecay12, float* %arraydecay13, float %12), !dbg !10665
  %arraydecay14 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %dmat, i64 0, i64 0, !dbg !10666
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10667
  %drotAxis = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 44, !dbg !10668
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %drotAxis, i64 0, i64 0, !dbg !10667
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10669
  %drotAngle = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 46, !dbg !10670
  %15 = load float, float* %drotAngle, align 4, !dbg !10670
  call void @axis_angle_to_mat3([3 x float]* %arraydecay14, float* %arraydecay15, float %15), !dbg !10671
  br label %if.end, !dbg !10672

if.else16:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata [4 x float]* %tquat, metadata !10673, metadata !DIExpression()), !dbg !10675
  %arraydecay17 = getelementptr inbounds [4 x float], [4 x float]* %tquat, i64 0, i64 0, !dbg !10676
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10677
  %quat = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 41, !dbg !10678
  %arraydecay18 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !10677
  %call = call float @normalize_qt_qt(float* %arraydecay17, float* %arraydecay18), !dbg !10679
  %arraydecay19 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rmat, i64 0, i64 0, !dbg !10680
  %arraydecay20 = getelementptr inbounds [4 x float], [4 x float]* %tquat, i64 0, i64 0, !dbg !10681
  call void @quat_to_mat3([3 x float]* %arraydecay19, float* %arraydecay20), !dbg !10682
  %arraydecay21 = getelementptr inbounds [4 x float], [4 x float]* %tquat, i64 0, i64 0, !dbg !10683
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10684
  %dquat = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 42, !dbg !10685
  %arraydecay22 = getelementptr inbounds [4 x float], [4 x float]* %dquat, i64 0, i64 0, !dbg !10684
  %call23 = call float @normalize_qt_qt(float* %arraydecay21, float* %arraydecay22), !dbg !10686
  %arraydecay24 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %dmat, i64 0, i64 0, !dbg !10687
  %arraydecay25 = getelementptr inbounds [4 x float], [4 x float]* %tquat, i64 0, i64 0, !dbg !10688
  call void @quat_to_mat3([3 x float]* %arraydecay24, float* %arraydecay25), !dbg !10689
  br label %if.end

if.end:                                           ; preds = %if.else16, %if.then11
  br label %if.end26

if.end26:                                         ; preds = %if.end, %if.then
  %18 = load i8, i8* %use_drot.addr, align 1, !dbg !10690
  %tobool = icmp ne i8 %18, 0, !dbg !10690
  br i1 %tobool, label %if.then27, label %if.else30, !dbg !10692

if.then27:                                        ; preds = %if.end26
  %19 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !10693
  %arraydecay28 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %dmat, i64 0, i64 0, !dbg !10694
  %arraydecay29 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rmat, i64 0, i64 0, !dbg !10695
  call void @mul_m3_m3m3([3 x float]* %19, [3 x float]* %arraydecay28, [3 x float]* %arraydecay29), !dbg !10696
  br label %if.end32, !dbg !10696

if.else30:                                        ; preds = %if.end26
  %20 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !10697
  %arraydecay31 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rmat, i64 0, i64 0, !dbg !10698
  call void @copy_m3_m3([3 x float]* %20, [3 x float]* %arraydecay31), !dbg !10699
  br label %if.end32

if.end32:                                         ; preds = %if.else30, %if.then27
  ret void, !dbg !10700
}

declare dso_local void @eulO_to_mat3([3 x float]*, float*, i16 signext) #3

declare dso_local void @axis_angle_to_mat3([3 x float]*, float*, float) #3

declare dso_local float @normalize_qt_qt(float*, float*) #3

declare dso_local void @quat_to_mat3([3 x float]*, float*) #3

declare dso_local void @mul_m3_m3m3([3 x float]*, [3 x float]*, [3 x float]*) #3

declare dso_local void @copy_m3_m3([3 x float]*, [3 x float]*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_mat3_to_rot(%struct.Object* %ob, [3 x float]* %mat, i8 zeroext %use_compat) #0 !dbg !10701 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %mat.addr = alloca [3 x float]*, align 8
  %use_compat.addr = alloca i8, align 1
  %dquat = alloca [4 x float], align 16
  %quat16 = alloca [4 x float], align 16
  %dquat17 = alloca [4 x float], align 16
  %tmat = alloca [3 x [3 x float]], align 16
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !10702, metadata !DIExpression()), !dbg !10703
  store [3 x float]* %mat, [3 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %mat.addr, metadata !10704, metadata !DIExpression()), !dbg !10705
  store i8 %use_compat, i8* %use_compat.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_compat.addr, metadata !10706, metadata !DIExpression()), !dbg !10707
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10708
  %rotmode = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 83, !dbg !10709
  %1 = load i16, i16* %rotmode, align 8, !dbg !10709
  %conv = sext i16 %1 to i32, !dbg !10708
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 -1, label %sw.bb10
  ], !dbg !10710

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata [4 x float]* %dquat, metadata !10711, metadata !DIExpression()), !dbg !10714
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10715
  %quat = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 41, !dbg !10716
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !10715
  %3 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !10717
  call void @mat3_to_quat(float* %arraydecay, [3 x float]* %3), !dbg !10718
  %arraydecay1 = getelementptr inbounds [4 x float], [4 x float]* %dquat, i64 0, i64 0, !dbg !10719
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10720
  %dquat2 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 42, !dbg !10721
  %arraydecay3 = getelementptr inbounds [4 x float], [4 x float]* %dquat2, i64 0, i64 0, !dbg !10720
  %call = call float @normalize_qt_qt(float* %arraydecay1, float* %arraydecay3), !dbg !10722
  %arraydecay4 = getelementptr inbounds [4 x float], [4 x float]* %dquat, i64 0, i64 0, !dbg !10723
  call void @invert_qt(float* %arraydecay4), !dbg !10724
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10725
  %quat5 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 41, !dbg !10726
  %arraydecay6 = getelementptr inbounds [4 x float], [4 x float]* %quat5, i64 0, i64 0, !dbg !10725
  %arraydecay7 = getelementptr inbounds [4 x float], [4 x float]* %dquat, i64 0, i64 0, !dbg !10727
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10728
  %quat8 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 41, !dbg !10729
  %arraydecay9 = getelementptr inbounds [4 x float], [4 x float]* %quat8, i64 0, i64 0, !dbg !10728
  call void @mul_qt_qtqt(float* %arraydecay6, float* %arraydecay7, float* %arraydecay9), !dbg !10730
  br label %sw.epilog, !dbg !10731

sw.bb10:                                          ; preds = %entry
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10732
  %rotAxis = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 43, !dbg !10734
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %rotAxis, i64 0, i64 0, !dbg !10732
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10735
  %rotAngle = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 45, !dbg !10736
  %9 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !10737
  call void @mat3_to_axis_angle(float* %arraydecay11, float* %rotAngle, [3 x float]* %9), !dbg !10738
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10739
  %rotAxis12 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 43, !dbg !10740
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %rotAxis12, i64 0, i64 0, !dbg !10739
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10741
  %drotAxis = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 44, !dbg !10742
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %drotAxis, i64 0, i64 0, !dbg !10741
  call void @sub_v3_v3(float* %arraydecay13, float* %arraydecay14), !dbg !10743
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10744
  %drotAngle = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 46, !dbg !10745
  %13 = load float, float* %drotAngle, align 4, !dbg !10745
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10746
  %rotAngle15 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 45, !dbg !10747
  %15 = load float, float* %rotAngle15, align 8, !dbg !10748
  %sub = fsub float %15, %13, !dbg !10748
  store float %sub, float* %rotAngle15, align 8, !dbg !10748
  br label %sw.epilog, !dbg !10749

sw.default:                                       ; preds = %entry
  call void @llvm.dbg.declare(metadata [4 x float]* %quat16, metadata !10750, metadata !DIExpression()), !dbg !10752
  call void @llvm.dbg.declare(metadata [4 x float]* %dquat17, metadata !10753, metadata !DIExpression()), !dbg !10754
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %tmat, metadata !10755, metadata !DIExpression()), !dbg !10756
  %arraydecay18 = getelementptr inbounds [4 x float], [4 x float]* %quat16, i64 0, i64 0, !dbg !10757
  %16 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !10758
  call void @mat3_to_quat(float* %arraydecay18, [3 x float]* %16), !dbg !10759
  %arraydecay19 = getelementptr inbounds [4 x float], [4 x float]* %dquat17, i64 0, i64 0, !dbg !10760
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10761
  %drot = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 40, !dbg !10762
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %drot, i64 0, i64 0, !dbg !10761
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10763
  %rotmode21 = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 83, !dbg !10764
  %19 = load i16, i16* %rotmode21, align 8, !dbg !10764
  call void @eulO_to_quat(float* %arraydecay19, float* %arraydecay20, i16 signext %19), !dbg !10765
  %arraydecay22 = getelementptr inbounds [4 x float], [4 x float]* %dquat17, i64 0, i64 0, !dbg !10766
  call void @invert_qt(float* %arraydecay22), !dbg !10767
  %arraydecay23 = getelementptr inbounds [4 x float], [4 x float]* %quat16, i64 0, i64 0, !dbg !10768
  %arraydecay24 = getelementptr inbounds [4 x float], [4 x float]* %dquat17, i64 0, i64 0, !dbg !10769
  %arraydecay25 = getelementptr inbounds [4 x float], [4 x float]* %quat16, i64 0, i64 0, !dbg !10770
  call void @mul_qt_qtqt(float* %arraydecay23, float* %arraydecay24, float* %arraydecay25), !dbg !10771
  %arraydecay26 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !10772
  %arraydecay27 = getelementptr inbounds [4 x float], [4 x float]* %quat16, i64 0, i64 0, !dbg !10773
  call void @quat_to_mat3([3 x float]* %arraydecay26, float* %arraydecay27), !dbg !10774
  %20 = load i8, i8* %use_compat.addr, align 1, !dbg !10775
  %tobool = icmp ne i8 %20, 0, !dbg !10775
  br i1 %tobool, label %if.then, label %if.else, !dbg !10777

if.then:                                          ; preds = %sw.default
  %21 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10778
  %rot = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 39, !dbg !10779
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %rot, i64 0, i64 0, !dbg !10778
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10780
  %rot29 = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 39, !dbg !10781
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %rot29, i64 0, i64 0, !dbg !10780
  %23 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10782
  %rotmode31 = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 83, !dbg !10783
  %24 = load i16, i16* %rotmode31, align 8, !dbg !10783
  %arraydecay32 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !10784
  call void @mat3_to_compatible_eulO(float* %arraydecay28, float* %arraydecay30, i16 signext %24, [3 x float]* %arraydecay32), !dbg !10785
  br label %if.end, !dbg !10785

if.else:                                          ; preds = %sw.default
  %25 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10786
  %rot33 = getelementptr inbounds %struct.Object, %struct.Object* %25, i32 0, i32 39, !dbg !10787
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %rot33, i64 0, i64 0, !dbg !10786
  %26 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10788
  %rotmode35 = getelementptr inbounds %struct.Object, %struct.Object* %26, i32 0, i32 83, !dbg !10789
  %27 = load i16, i16* %rotmode35, align 8, !dbg !10789
  %arraydecay36 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !10790
  call void @mat3_to_eulO(float* %arraydecay34, i16 signext %27, [3 x float]* %arraydecay36), !dbg !10791
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !10792

sw.epilog:                                        ; preds = %if.end, %sw.bb10, %sw.bb
  ret void, !dbg !10793
}

declare dso_local void @mat3_to_quat(float*, [3 x float]*) #3

declare dso_local void @invert_qt(float*) #3

declare dso_local void @mul_qt_qtqt(float*, float*, float*) #3

declare dso_local void @mat3_to_axis_angle(float*, float*, [3 x float]*) #3

declare dso_local void @eulO_to_quat(float*, float*, i16 signext) #3

declare dso_local void @mat3_to_compatible_eulO(float*, float*, i16 signext, [3 x float]*) #3

declare dso_local void @mat3_to_eulO(float*, i16 signext, [3 x float]*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_tfm_protected_backup(%struct.Object* %ob, %struct.ObjectTfmProtectedChannels* %obtfm) #0 !dbg !10794 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %obtfm.addr = alloca %struct.ObjectTfmProtectedChannels*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !10813, metadata !DIExpression()), !dbg !10814
  store %struct.ObjectTfmProtectedChannels* %obtfm, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectTfmProtectedChannels** %obtfm.addr, metadata !10815, metadata !DIExpression()), !dbg !10816
  %0 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10817
  %loc = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %0, i32 0, i32 0, !dbg !10817
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !10817
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10817
  %loc1 = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 33, !dbg !10817
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %loc1, i64 0, i64 0, !dbg !10817
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay2), !dbg !10817
  %2 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10818
  %dloc = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %2, i32 0, i32 1, !dbg !10818
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %dloc, i64 0, i64 0, !dbg !10818
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10818
  %dloc4 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 34, !dbg !10818
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %dloc4, i64 0, i64 0, !dbg !10818
  call void @copy_v3_v3(float* %arraydecay3, float* %arraydecay5), !dbg !10818
  %4 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10819
  %size = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %4, i32 0, i32 2, !dbg !10819
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !10819
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10819
  %size7 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 36, !dbg !10819
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %size7, i64 0, i64 0, !dbg !10819
  call void @copy_v3_v3(float* %arraydecay6, float* %arraydecay8), !dbg !10819
  %6 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10820
  %dscale = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %6, i32 0, i32 3, !dbg !10820
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %dscale, i64 0, i64 0, !dbg !10820
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10820
  %dscale10 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 38, !dbg !10820
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %dscale10, i64 0, i64 0, !dbg !10820
  call void @copy_v3_v3(float* %arraydecay9, float* %arraydecay11), !dbg !10820
  %8 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10821
  %rot = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %8, i32 0, i32 4, !dbg !10821
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %rot, i64 0, i64 0, !dbg !10821
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10821
  %rot13 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 39, !dbg !10821
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %rot13, i64 0, i64 0, !dbg !10821
  call void @copy_v3_v3(float* %arraydecay12, float* %arraydecay14), !dbg !10821
  %10 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10822
  %drot = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %10, i32 0, i32 5, !dbg !10822
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %drot, i64 0, i64 0, !dbg !10822
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10822
  %drot16 = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 40, !dbg !10822
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %drot16, i64 0, i64 0, !dbg !10822
  call void @copy_v3_v3(float* %arraydecay15, float* %arraydecay17), !dbg !10822
  %12 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10823
  %quat = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %12, i32 0, i32 6, !dbg !10823
  %arraydecay18 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !10823
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10823
  %quat19 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 41, !dbg !10823
  %arraydecay20 = getelementptr inbounds [4 x float], [4 x float]* %quat19, i64 0, i64 0, !dbg !10823
  call void @copy_v4_v4(float* %arraydecay18, float* %arraydecay20), !dbg !10823
  %14 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10824
  %dquat = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %14, i32 0, i32 7, !dbg !10824
  %arraydecay21 = getelementptr inbounds [4 x float], [4 x float]* %dquat, i64 0, i64 0, !dbg !10824
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10824
  %dquat22 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 42, !dbg !10824
  %arraydecay23 = getelementptr inbounds [4 x float], [4 x float]* %dquat22, i64 0, i64 0, !dbg !10824
  call void @copy_v4_v4(float* %arraydecay21, float* %arraydecay23), !dbg !10824
  %16 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10825
  %rotAxis = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %16, i32 0, i32 8, !dbg !10825
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %rotAxis, i64 0, i64 0, !dbg !10825
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10825
  %rotAxis25 = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 43, !dbg !10825
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %rotAxis25, i64 0, i64 0, !dbg !10825
  call void @copy_v3_v3(float* %arraydecay24, float* %arraydecay26), !dbg !10825
  %18 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10826
  %drotAxis = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %18, i32 0, i32 9, !dbg !10826
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %drotAxis, i64 0, i64 0, !dbg !10826
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10826
  %drotAxis28 = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 44, !dbg !10826
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %drotAxis28, i64 0, i64 0, !dbg !10826
  call void @copy_v3_v3(float* %arraydecay27, float* %arraydecay29), !dbg !10826
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10827
  %rotAngle = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 45, !dbg !10827
  %21 = load float, float* %rotAngle, align 8, !dbg !10827
  %22 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10827
  %rotAngle30 = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %22, i32 0, i32 10, !dbg !10827
  store float %21, float* %rotAngle30, align 4, !dbg !10827
  %23 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10828
  %drotAngle = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 46, !dbg !10828
  %24 = load float, float* %drotAngle, align 4, !dbg !10828
  %25 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10828
  %drotAngle31 = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %25, i32 0, i32 11, !dbg !10828
  store float %24, float* %drotAngle31, align 4, !dbg !10828
  ret void, !dbg !10829
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v4_v4(float* %r, float* %a) #0 !dbg !10830 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !10831, metadata !DIExpression()), !dbg !10832
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !10833, metadata !DIExpression()), !dbg !10834
  %0 = load float*, float** %a.addr, align 8, !dbg !10835
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !10835
  %1 = load float, float* %arrayidx, align 4, !dbg !10835
  %2 = load float*, float** %r.addr, align 8, !dbg !10836
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !10836
  store float %1, float* %arrayidx1, align 4, !dbg !10837
  %3 = load float*, float** %a.addr, align 8, !dbg !10838
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !10838
  %4 = load float, float* %arrayidx2, align 4, !dbg !10838
  %5 = load float*, float** %r.addr, align 8, !dbg !10839
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !10839
  store float %4, float* %arrayidx3, align 4, !dbg !10840
  %6 = load float*, float** %a.addr, align 8, !dbg !10841
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !10841
  %7 = load float, float* %arrayidx4, align 4, !dbg !10841
  %8 = load float*, float** %r.addr, align 8, !dbg !10842
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !10842
  store float %7, float* %arrayidx5, align 4, !dbg !10843
  %9 = load float*, float** %a.addr, align 8, !dbg !10844
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 3, !dbg !10844
  %10 = load float, float* %arrayidx6, align 4, !dbg !10844
  %11 = load float*, float** %r.addr, align 8, !dbg !10845
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 3, !dbg !10845
  store float %10, float* %arrayidx7, align 4, !dbg !10846
  ret void, !dbg !10847
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_tfm_protected_restore(%struct.Object* %ob, %struct.ObjectTfmProtectedChannels* %obtfm, i16 signext %protectflag) #0 !dbg !10848 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %obtfm.addr = alloca %struct.ObjectTfmProtectedChannels*, align 8
  %protectflag.addr = alloca i16, align 2
  %i = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !10853, metadata !DIExpression()), !dbg !10854
  store %struct.ObjectTfmProtectedChannels* %obtfm, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectTfmProtectedChannels** %obtfm.addr, metadata !10855, metadata !DIExpression()), !dbg !10856
  store i16 %protectflag, i16* %protectflag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %protectflag.addr, metadata !10857, metadata !DIExpression()), !dbg !10858
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10859, metadata !DIExpression()), !dbg !10860
  store i32 0, i32* %i, align 4, !dbg !10861
  br label %for.cond, !dbg !10863

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10864
  %cmp = icmp ult i32 %0, 3, !dbg !10866
  br i1 %cmp, label %for.body, label %for.end, !dbg !10867

for.body:                                         ; preds = %for.cond
  %1 = load i16, i16* %protectflag.addr, align 2, !dbg !10868
  %conv = sext i16 %1 to i32, !dbg !10868
  %2 = load i32, i32* %i, align 4, !dbg !10871
  %shl = shl i32 1, %2, !dbg !10872
  %and = and i32 %conv, %shl, !dbg !10873
  %tobool = icmp ne i32 %and, 0, !dbg !10873
  br i1 %tobool, label %if.then, label %if.end, !dbg !10874

if.then:                                          ; preds = %for.body
  %3 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10875
  %loc = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %3, i32 0, i32 0, !dbg !10877
  %4 = load i32, i32* %i, align 4, !dbg !10878
  %idxprom = zext i32 %4 to i64, !dbg !10875
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 %idxprom, !dbg !10875
  %5 = load float, float* %arrayidx, align 4, !dbg !10875
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10879
  %loc1 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 33, !dbg !10880
  %7 = load i32, i32* %i, align 4, !dbg !10881
  %idxprom2 = zext i32 %7 to i64, !dbg !10879
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %loc1, i64 0, i64 %idxprom2, !dbg !10879
  store float %5, float* %arrayidx3, align 4, !dbg !10882
  %8 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10883
  %dloc = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %8, i32 0, i32 1, !dbg !10884
  %9 = load i32, i32* %i, align 4, !dbg !10885
  %idxprom4 = zext i32 %9 to i64, !dbg !10883
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %dloc, i64 0, i64 %idxprom4, !dbg !10883
  %10 = load float, float* %arrayidx5, align 4, !dbg !10883
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10886
  %dloc6 = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 34, !dbg !10887
  %12 = load i32, i32* %i, align 4, !dbg !10888
  %idxprom7 = zext i32 %12 to i64, !dbg !10886
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %dloc6, i64 0, i64 %idxprom7, !dbg !10886
  store float %10, float* %arrayidx8, align 4, !dbg !10889
  br label %if.end, !dbg !10890

if.end:                                           ; preds = %if.then, %for.body
  %13 = load i16, i16* %protectflag.addr, align 2, !dbg !10891
  %conv9 = sext i16 %13 to i32, !dbg !10891
  %14 = load i32, i32* %i, align 4, !dbg !10893
  %shl10 = shl i32 64, %14, !dbg !10894
  %and11 = and i32 %conv9, %shl10, !dbg !10895
  %tobool12 = icmp ne i32 %and11, 0, !dbg !10895
  br i1 %tobool12, label %if.then13, label %if.end24, !dbg !10896

if.then13:                                        ; preds = %if.end
  %15 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10897
  %size = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %15, i32 0, i32 2, !dbg !10899
  %16 = load i32, i32* %i, align 4, !dbg !10900
  %idxprom14 = zext i32 %16 to i64, !dbg !10897
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 %idxprom14, !dbg !10897
  %17 = load float, float* %arrayidx15, align 4, !dbg !10897
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10901
  %size16 = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 36, !dbg !10902
  %19 = load i32, i32* %i, align 4, !dbg !10903
  %idxprom17 = zext i32 %19 to i64, !dbg !10901
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %size16, i64 0, i64 %idxprom17, !dbg !10901
  store float %17, float* %arrayidx18, align 4, !dbg !10904
  %20 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10905
  %dscale = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %20, i32 0, i32 3, !dbg !10906
  %21 = load i32, i32* %i, align 4, !dbg !10907
  %idxprom19 = zext i32 %21 to i64, !dbg !10905
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %dscale, i64 0, i64 %idxprom19, !dbg !10905
  %22 = load float, float* %arrayidx20, align 4, !dbg !10905
  %23 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10908
  %dscale21 = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 38, !dbg !10909
  %24 = load i32, i32* %i, align 4, !dbg !10910
  %idxprom22 = zext i32 %24 to i64, !dbg !10908
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %dscale21, i64 0, i64 %idxprom22, !dbg !10908
  store float %22, float* %arrayidx23, align 4, !dbg !10911
  br label %if.end24, !dbg !10912

if.end24:                                         ; preds = %if.then13, %if.end
  %25 = load i16, i16* %protectflag.addr, align 2, !dbg !10913
  %conv25 = sext i16 %25 to i32, !dbg !10913
  %26 = load i32, i32* %i, align 4, !dbg !10915
  %shl26 = shl i32 8, %26, !dbg !10916
  %and27 = and i32 %conv25, %shl26, !dbg !10917
  %tobool28 = icmp ne i32 %and27, 0, !dbg !10917
  br i1 %tobool28, label %if.then29, label %if.end63, !dbg !10918

if.then29:                                        ; preds = %if.end24
  %27 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10919
  %rot = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %27, i32 0, i32 4, !dbg !10921
  %28 = load i32, i32* %i, align 4, !dbg !10922
  %idxprom30 = zext i32 %28 to i64, !dbg !10919
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %rot, i64 0, i64 %idxprom30, !dbg !10919
  %29 = load float, float* %arrayidx31, align 4, !dbg !10919
  %30 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10923
  %rot32 = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 39, !dbg !10924
  %31 = load i32, i32* %i, align 4, !dbg !10925
  %idxprom33 = zext i32 %31 to i64, !dbg !10923
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %rot32, i64 0, i64 %idxprom33, !dbg !10923
  store float %29, float* %arrayidx34, align 4, !dbg !10926
  %32 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10927
  %drot = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %32, i32 0, i32 5, !dbg !10928
  %33 = load i32, i32* %i, align 4, !dbg !10929
  %idxprom35 = zext i32 %33 to i64, !dbg !10927
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %drot, i64 0, i64 %idxprom35, !dbg !10927
  %34 = load float, float* %arrayidx36, align 4, !dbg !10927
  %35 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10930
  %drot37 = getelementptr inbounds %struct.Object, %struct.Object* %35, i32 0, i32 40, !dbg !10931
  %36 = load i32, i32* %i, align 4, !dbg !10932
  %idxprom38 = zext i32 %36 to i64, !dbg !10930
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %drot37, i64 0, i64 %idxprom38, !dbg !10930
  store float %34, float* %arrayidx39, align 4, !dbg !10933
  %37 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10934
  %quat = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %37, i32 0, i32 6, !dbg !10935
  %38 = load i32, i32* %i, align 4, !dbg !10936
  %add = add i32 %38, 1, !dbg !10937
  %idxprom40 = zext i32 %add to i64, !dbg !10934
  %arrayidx41 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 %idxprom40, !dbg !10934
  %39 = load float, float* %arrayidx41, align 4, !dbg !10934
  %40 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10938
  %quat42 = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 41, !dbg !10939
  %41 = load i32, i32* %i, align 4, !dbg !10940
  %add43 = add i32 %41, 1, !dbg !10941
  %idxprom44 = zext i32 %add43 to i64, !dbg !10938
  %arrayidx45 = getelementptr inbounds [4 x float], [4 x float]* %quat42, i64 0, i64 %idxprom44, !dbg !10938
  store float %39, float* %arrayidx45, align 4, !dbg !10942
  %42 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10943
  %dquat = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %42, i32 0, i32 7, !dbg !10944
  %43 = load i32, i32* %i, align 4, !dbg !10945
  %add46 = add i32 %43, 1, !dbg !10946
  %idxprom47 = zext i32 %add46 to i64, !dbg !10943
  %arrayidx48 = getelementptr inbounds [4 x float], [4 x float]* %dquat, i64 0, i64 %idxprom47, !dbg !10943
  %44 = load float, float* %arrayidx48, align 4, !dbg !10943
  %45 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10947
  %dquat49 = getelementptr inbounds %struct.Object, %struct.Object* %45, i32 0, i32 42, !dbg !10948
  %46 = load i32, i32* %i, align 4, !dbg !10949
  %add50 = add i32 %46, 1, !dbg !10950
  %idxprom51 = zext i32 %add50 to i64, !dbg !10947
  %arrayidx52 = getelementptr inbounds [4 x float], [4 x float]* %dquat49, i64 0, i64 %idxprom51, !dbg !10947
  store float %44, float* %arrayidx52, align 4, !dbg !10951
  %47 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10952
  %rotAxis = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %47, i32 0, i32 8, !dbg !10953
  %48 = load i32, i32* %i, align 4, !dbg !10954
  %idxprom53 = zext i32 %48 to i64, !dbg !10952
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %rotAxis, i64 0, i64 %idxprom53, !dbg !10952
  %49 = load float, float* %arrayidx54, align 4, !dbg !10952
  %50 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10955
  %rotAxis55 = getelementptr inbounds %struct.Object, %struct.Object* %50, i32 0, i32 43, !dbg !10956
  %51 = load i32, i32* %i, align 4, !dbg !10957
  %idxprom56 = zext i32 %51 to i64, !dbg !10955
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %rotAxis55, i64 0, i64 %idxprom56, !dbg !10955
  store float %49, float* %arrayidx57, align 4, !dbg !10958
  %52 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10959
  %drotAxis = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %52, i32 0, i32 9, !dbg !10960
  %53 = load i32, i32* %i, align 4, !dbg !10961
  %idxprom58 = zext i32 %53 to i64, !dbg !10959
  %arrayidx59 = getelementptr inbounds [3 x float], [3 x float]* %drotAxis, i64 0, i64 %idxprom58, !dbg !10959
  %54 = load float, float* %arrayidx59, align 4, !dbg !10959
  %55 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10962
  %drotAxis60 = getelementptr inbounds %struct.Object, %struct.Object* %55, i32 0, i32 44, !dbg !10963
  %56 = load i32, i32* %i, align 4, !dbg !10964
  %idxprom61 = zext i32 %56 to i64, !dbg !10962
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %drotAxis60, i64 0, i64 %idxprom61, !dbg !10962
  store float %54, float* %arrayidx62, align 4, !dbg !10965
  br label %if.end63, !dbg !10966

if.end63:                                         ; preds = %if.then29, %if.end24
  br label %for.inc, !dbg !10967

for.inc:                                          ; preds = %if.end63
  %57 = load i32, i32* %i, align 4, !dbg !10968
  %inc = add i32 %57, 1, !dbg !10968
  store i32 %inc, i32* %i, align 4, !dbg !10968
  br label %for.cond, !dbg !10969, !llvm.loop !10970

for.end:                                          ; preds = %for.cond
  %58 = load i16, i16* %protectflag.addr, align 2, !dbg !10972
  %conv64 = sext i16 %58 to i32, !dbg !10972
  %and65 = and i32 %conv64, 1024, !dbg !10974
  %tobool66 = icmp ne i32 %and65, 0, !dbg !10974
  br i1 %tobool66, label %land.lhs.true, label %if.end81, !dbg !10975

land.lhs.true:                                    ; preds = %for.end
  %59 = load i16, i16* %protectflag.addr, align 2, !dbg !10976
  %conv67 = sext i16 %59 to i32, !dbg !10976
  %and68 = and i32 %conv67, 512, !dbg !10977
  %tobool69 = icmp ne i32 %and68, 0, !dbg !10977
  br i1 %tobool69, label %if.then70, label %if.end81, !dbg !10978

if.then70:                                        ; preds = %land.lhs.true
  %60 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10979
  %quat71 = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %60, i32 0, i32 6, !dbg !10981
  %arrayidx72 = getelementptr inbounds [4 x float], [4 x float]* %quat71, i64 0, i64 0, !dbg !10979
  %61 = load float, float* %arrayidx72, align 4, !dbg !10979
  %62 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10982
  %quat73 = getelementptr inbounds %struct.Object, %struct.Object* %62, i32 0, i32 41, !dbg !10983
  %arrayidx74 = getelementptr inbounds [4 x float], [4 x float]* %quat73, i64 0, i64 0, !dbg !10982
  store float %61, float* %arrayidx74, align 8, !dbg !10984
  %63 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10985
  %dquat75 = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %63, i32 0, i32 7, !dbg !10986
  %arrayidx76 = getelementptr inbounds [4 x float], [4 x float]* %dquat75, i64 0, i64 0, !dbg !10985
  %64 = load float, float* %arrayidx76, align 4, !dbg !10985
  %65 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10987
  %dquat77 = getelementptr inbounds %struct.Object, %struct.Object* %65, i32 0, i32 42, !dbg !10988
  %arrayidx78 = getelementptr inbounds [4 x float], [4 x float]* %dquat77, i64 0, i64 0, !dbg !10987
  store float %64, float* %arrayidx78, align 8, !dbg !10989
  %66 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10990
  %rotAngle = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %66, i32 0, i32 10, !dbg !10991
  %67 = load float, float* %rotAngle, align 4, !dbg !10991
  %68 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10992
  %rotAngle79 = getelementptr inbounds %struct.Object, %struct.Object* %68, i32 0, i32 45, !dbg !10993
  store float %67, float* %rotAngle79, align 8, !dbg !10994
  %69 = load %struct.ObjectTfmProtectedChannels*, %struct.ObjectTfmProtectedChannels** %obtfm.addr, align 8, !dbg !10995
  %drotAngle = getelementptr inbounds %struct.ObjectTfmProtectedChannels, %struct.ObjectTfmProtectedChannels* %69, i32 0, i32 11, !dbg !10996
  %70 = load float, float* %drotAngle, align 4, !dbg !10996
  %71 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10997
  %drotAngle80 = getelementptr inbounds %struct.Object, %struct.Object* %71, i32 0, i32 46, !dbg !10998
  store float %70, float* %drotAngle80, align 4, !dbg !10999
  br label %if.end81, !dbg !11000

if.end81:                                         ; preds = %if.then70, %land.lhs.true, %for.end
  ret void, !dbg !11001
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_to_mat3(%struct.Object* %ob, [3 x float]* %mat) #0 !dbg !11002 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %mat.addr = alloca [3 x float]*, align 8
  %smat = alloca [3 x [3 x float]], align 16
  %rmat = alloca [3 x [3 x float]], align 16
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11003, metadata !DIExpression()), !dbg !11004
  store [3 x float]* %mat, [3 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %mat.addr, metadata !11005, metadata !DIExpression()), !dbg !11006
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %smat, metadata !11007, metadata !DIExpression()), !dbg !11008
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %rmat, metadata !11009, metadata !DIExpression()), !dbg !11010
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11011
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !11012
  call void @BKE_object_scale_to_mat3(%struct.Object* %0, [3 x float]* %arraydecay), !dbg !11013
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11014
  %arraydecay1 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rmat, i64 0, i64 0, !dbg !11015
  call void @BKE_object_rot_to_mat3(%struct.Object* %1, [3 x float]* %arraydecay1, i8 zeroext 1), !dbg !11016
  %2 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !11017
  %arraydecay2 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rmat, i64 0, i64 0, !dbg !11018
  %arraydecay3 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !11019
  call void @mul_m3_m3m3([3 x float]* %2, [3 x float]* %arraydecay2, [3 x float]* %arraydecay3), !dbg !11020
  ret void, !dbg !11021
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_to_mat4(%struct.Object* %ob, [4 x float]* %mat) #0 !dbg !11022 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %mat.addr = alloca [4 x float]*, align 8
  %tmat = alloca [3 x [3 x float]], align 16
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11025, metadata !DIExpression()), !dbg !11026
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !11027, metadata !DIExpression()), !dbg !11028
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %tmat, metadata !11029, metadata !DIExpression()), !dbg !11030
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11031
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !11032
  call void @BKE_object_to_mat3(%struct.Object* %0, [3 x float]* %arraydecay), !dbg !11033
  %1 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !11034
  %arraydecay1 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !11035
  call void @copy_m4_m3([4 x float]* %1, [3 x float]* %arraydecay1), !dbg !11036
  %2 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !11037
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %2, i64 3, !dbg !11037
  %arraydecay2 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !11037
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11038
  %loc = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 33, !dbg !11039
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !11038
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11040
  %dloc = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 34, !dbg !11041
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %dloc, i64 0, i64 0, !dbg !11040
  call void @add_v3_v3v3(float* %arraydecay2, float* %arraydecay3, float* %arraydecay4), !dbg !11042
  ret void, !dbg !11043
}

declare dso_local void @copy_m4_m3([4 x float]*, [3 x float]*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !11044 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !11045, metadata !DIExpression()), !dbg !11046
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !11047, metadata !DIExpression()), !dbg !11048
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !11049, metadata !DIExpression()), !dbg !11050
  %0 = load float*, float** %a.addr, align 8, !dbg !11051
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11051
  %1 = load float, float* %arrayidx, align 4, !dbg !11051
  %2 = load float*, float** %b.addr, align 8, !dbg !11052
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !11052
  %3 = load float, float* %arrayidx1, align 4, !dbg !11052
  %add = fadd float %1, %3, !dbg !11053
  %4 = load float*, float** %r.addr, align 8, !dbg !11054
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !11054
  store float %add, float* %arrayidx2, align 4, !dbg !11055
  %5 = load float*, float** %a.addr, align 8, !dbg !11056
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !11056
  %6 = load float, float* %arrayidx3, align 4, !dbg !11056
  %7 = load float*, float** %b.addr, align 8, !dbg !11057
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !11057
  %8 = load float, float* %arrayidx4, align 4, !dbg !11057
  %add5 = fadd float %6, %8, !dbg !11058
  %9 = load float*, float** %r.addr, align 8, !dbg !11059
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !11059
  store float %add5, float* %arrayidx6, align 4, !dbg !11060
  %10 = load float*, float** %a.addr, align 8, !dbg !11061
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !11061
  %11 = load float, float* %arrayidx7, align 4, !dbg !11061
  %12 = load float*, float** %b.addr, align 8, !dbg !11062
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !11062
  %13 = load float, float* %arrayidx8, align 4, !dbg !11062
  %add9 = fadd float %11, %13, !dbg !11063
  %14 = load float*, float** %r.addr, align 8, !dbg !11064
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !11064
  store float %add9, float* %arrayidx10, align 4, !dbg !11065
  ret void, !dbg !11066
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_matrix_local_get(%struct.Object* %ob, [4 x float]* %mat) #0 !dbg !11067 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %mat.addr = alloca [4 x float]*, align 8
  %invmat = alloca [4 x [4 x float]], align 16
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11070, metadata !DIExpression()), !dbg !11071
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !11072, metadata !DIExpression()), !dbg !11073
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11074
  %parent = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 9, !dbg !11076
  %1 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !11076
  %tobool = icmp ne %struct.Object* %1, null, !dbg !11074
  br i1 %tobool, label %if.then, label %if.else, !dbg !11077

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %invmat, metadata !11078, metadata !DIExpression()), !dbg !11080
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %invmat, i64 0, i64 0, !dbg !11081
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11082
  %parent1 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 9, !dbg !11083
  %3 = load %struct.Object*, %struct.Object** %parent1, align 8, !dbg !11083
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 47, !dbg !11084
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !11082
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay2), !dbg !11085
  %4 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !11086
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %invmat, i64 0, i64 0, !dbg !11087
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11088
  %obmat4 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 47, !dbg !11089
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat4, i64 0, i64 0, !dbg !11088
  call void @mul_m4_m4m4([4 x float]* %4, [4 x float]* %arraydecay3, [4 x float]* %arraydecay5), !dbg !11090
  br label %if.end, !dbg !11091

if.else:                                          ; preds = %entry
  %6 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !11092
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11094
  %obmat6 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 47, !dbg !11095
  %arraydecay7 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat6, i64 0, i64 0, !dbg !11094
  call void @copy_m4_m4([4 x float]* %6, [4 x float]* %arraydecay7), !dbg !11096
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !11097
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_where_is_calc_time_ex(%struct.Scene* %scene, %struct.Object* %ob, float %ctime, %struct.RigidBodyWorld* %rbw, [3 x float]* %r_originmat) #0 !dbg !11098 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %ctime.addr = alloca float, align 4
  %rbw.addr = alloca %struct.RigidBodyWorld*, align 8
  %r_originmat.addr = alloca [3 x float]*, align 8
  %par = alloca %struct.Object*, align 8
  %slowmat = alloca [4 x [4 x float]], align 16
  %cob = alloca %struct.bConstraintOb*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !11103, metadata !DIExpression()), !dbg !11104
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11105, metadata !DIExpression()), !dbg !11106
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !11107, metadata !DIExpression()), !dbg !11108
  store %struct.RigidBodyWorld* %rbw, %struct.RigidBodyWorld** %rbw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigidBodyWorld** %rbw.addr, metadata !11109, metadata !DIExpression()), !dbg !11110
  store [3 x float]* %r_originmat, [3 x float]** %r_originmat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %r_originmat.addr, metadata !11111, metadata !DIExpression()), !dbg !11112
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11113
  %cmp = icmp eq %struct.Object* %0, null, !dbg !11115
  br i1 %cmp, label %if.then, label %if.end, !dbg !11116

if.then:                                          ; preds = %entry
  br label %if.end38, !dbg !11117

if.end:                                           ; preds = %entry
  %1 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11118
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11119
  %id = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 0, !dbg !11120
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11121
  %adt = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 1, !dbg !11122
  %4 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !11122
  %5 = load float, float* %ctime.addr, align 4, !dbg !11123
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %1, %struct.ID* %id, %struct.AnimData* %4, float %5, i16 signext 1), !dbg !11124
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11125
  %parent = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 9, !dbg !11127
  %7 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !11127
  %tobool = icmp ne %struct.Object* %7, null, !dbg !11125
  br i1 %tobool, label %if.then1, label %if.else, !dbg !11128

if.then1:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.Object** %par, metadata !11129, metadata !DIExpression()), !dbg !11131
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11132
  %parent2 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 9, !dbg !11133
  %9 = load %struct.Object*, %struct.Object** %parent2, align 8, !dbg !11133
  store %struct.Object* %9, %struct.Object** %par, align 8, !dbg !11131
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %slowmat, metadata !11134, metadata !DIExpression()), !dbg !11135
  %10 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11136
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11137
  %12 = load %struct.Object*, %struct.Object** %par, align 8, !dbg !11138
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11139
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 47, !dbg !11140
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !11139
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %slowmat, i64 0, i64 0, !dbg !11141
  %14 = load [3 x float]*, [3 x float]** %r_originmat.addr, align 8, !dbg !11142
  call void @solve_parenting(%struct.Scene* %10, %struct.Object* %11, %struct.Object* %12, [4 x float]* %arraydecay, [4 x float]* %arraydecay3, [3 x float]* %14, i8 zeroext 1), !dbg !11143
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11144
  %partype = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 4, !dbg !11146
  %16 = load i16, i16* %partype, align 2, !dbg !11146
  %conv = sext i16 %16 to i32, !dbg !11144
  %and = and i32 %conv, 16, !dbg !11147
  %tobool4 = icmp ne i32 %and, 0, !dbg !11147
  br i1 %tobool4, label %if.then5, label %if.end12, !dbg !11148

if.then5:                                         ; preds = %if.then1
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11149
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11152
  %obmat6 = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 47, !dbg !11153
  %arraydecay7 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat6, i64 0, i64 0, !dbg !11152
  %arraydecay8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %slowmat, i64 0, i64 0, !dbg !11154
  %call = call zeroext i8 @where_is_object_parslow(%struct.Object* %17, [4 x float]* %arraydecay7, [4 x float]* %arraydecay8), !dbg !11155
  %tobool9 = icmp ne i8 %call, 0, !dbg !11155
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !11156

if.then10:                                        ; preds = %if.then5
  br label %if.end38, !dbg !11157

if.end11:                                         ; preds = %if.then5
  br label %if.end12, !dbg !11158

if.end12:                                         ; preds = %if.end11, %if.then1
  br label %if.end15, !dbg !11159

if.else:                                          ; preds = %if.end
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11160
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11162
  %obmat13 = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 47, !dbg !11163
  %arraydecay14 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat13, i64 0, i64 0, !dbg !11162
  call void @BKE_object_to_mat4(%struct.Object* %19, [4 x float]* %arraydecay14), !dbg !11164
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.end12
  %21 = load %struct.RigidBodyWorld*, %struct.RigidBodyWorld** %rbw.addr, align 8, !dbg !11165
  %tobool16 = icmp ne %struct.RigidBodyWorld* %21, null, !dbg !11165
  br i1 %tobool16, label %cond.true, label %cond.false, !dbg !11165

cond.true:                                        ; preds = %if.end15
  %22 = load %struct.RigidBodyWorld*, %struct.RigidBodyWorld** %rbw.addr, align 8, !dbg !11166
  br label %cond.end, !dbg !11165

cond.false:                                       ; preds = %if.end15
  %23 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11167
  %rigidbody_world = getelementptr inbounds %struct.Scene, %struct.Scene* %23, i32 0, i32 47, !dbg !11168
  %24 = load %struct.RigidBodyWorld*, %struct.RigidBodyWorld** %rigidbody_world, align 8, !dbg !11168
  br label %cond.end, !dbg !11165

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.RigidBodyWorld* [ %22, %cond.true ], [ %24, %cond.false ], !dbg !11165
  store %struct.RigidBodyWorld* %cond, %struct.RigidBodyWorld** %rbw.addr, align 8, !dbg !11169
  %25 = load %struct.RigidBodyWorld*, %struct.RigidBodyWorld** %rbw.addr, align 8, !dbg !11170
  %26 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11171
  %27 = load float, float* %ctime.addr, align 4, !dbg !11172
  call void @BKE_rigidbody_sync_transforms(%struct.RigidBodyWorld* %25, %struct.Object* %26, float %27), !dbg !11173
  %28 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11174
  %constraints = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 106, !dbg !11176
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints, i32 0, i32 0, !dbg !11177
  %29 = load i8*, i8** %first, align 8, !dbg !11177
  %tobool17 = icmp ne i8* %29, null, !dbg !11174
  br i1 %tobool17, label %land.lhs.true, label %if.end24, !dbg !11178

land.lhs.true:                                    ; preds = %cond.end
  %30 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11179
  %transflag = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 55, !dbg !11180
  %31 = load i16, i16* %transflag, align 8, !dbg !11180
  %conv18 = sext i16 %31 to i32, !dbg !11179
  %and19 = and i32 %conv18, 8192, !dbg !11181
  %tobool20 = icmp ne i32 %and19, 0, !dbg !11181
  br i1 %tobool20, label %if.end24, label %if.then21, !dbg !11182

if.then21:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob, metadata !11183, metadata !DIExpression()), !dbg !11187
  %32 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11188
  %33 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11189
  %call22 = call %struct.bConstraintOb* @BKE_constraints_make_evalob(%struct.Scene* %32, %struct.Object* %33, i8* null, i16 signext 1), !dbg !11190
  store %struct.bConstraintOb* %call22, %struct.bConstraintOb** %cob, align 8, !dbg !11191
  %34 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11192
  %constraints23 = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 106, !dbg !11193
  %35 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !11194
  %36 = load float, float* %ctime.addr, align 4, !dbg !11195
  call void @BKE_constraints_solve(%struct.ListBase* %constraints23, %struct.bConstraintOb* %35, float %36), !dbg !11196
  %37 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !11197
  call void @BKE_constraints_clear_evalob(%struct.bConstraintOb* %37), !dbg !11198
  br label %if.end24, !dbg !11199

if.end24:                                         ; preds = %if.then21, %land.lhs.true, %cond.end
  %38 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11200
  %obmat25 = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 47, !dbg !11202
  %arraydecay26 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat25, i64 0, i64 0, !dbg !11200
  %call27 = call zeroext i8 @is_negative_m4([4 x float]* %arraydecay26), !dbg !11203
  %tobool28 = icmp ne i8 %call27, 0, !dbg !11203
  br i1 %tobool28, label %if.then29, label %if.else33, !dbg !11204

if.then29:                                        ; preds = %if.end24
  %39 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11205
  %transflag30 = getelementptr inbounds %struct.Object, %struct.Object* %39, i32 0, i32 55, !dbg !11206
  %40 = load i16, i16* %transflag30, align 8, !dbg !11207
  %conv31 = sext i16 %40 to i32, !dbg !11207
  %or = or i32 %conv31, 4, !dbg !11207
  %conv32 = trunc i32 %or to i16, !dbg !11207
  store i16 %conv32, i16* %transflag30, align 8, !dbg !11207
  br label %if.end38, !dbg !11205

if.else33:                                        ; preds = %if.end24
  %41 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11208
  %transflag34 = getelementptr inbounds %struct.Object, %struct.Object* %41, i32 0, i32 55, !dbg !11209
  %42 = load i16, i16* %transflag34, align 8, !dbg !11210
  %conv35 = sext i16 %42 to i32, !dbg !11210
  %and36 = and i32 %conv35, -5, !dbg !11210
  %conv37 = trunc i32 %and36 to i16, !dbg !11210
  store i16 %conv37, i16* %transflag34, align 8, !dbg !11210
  br label %if.end38

if.end38:                                         ; preds = %if.then, %if.then10, %if.else33, %if.then29
  ret void, !dbg !11211
}

declare dso_local void @BKE_animsys_evaluate_animdata(%struct.Scene*, %struct.ID*, %struct.AnimData*, float, i16 signext) #3

; Function Attrs: noinline nounwind uwtable
define internal void @solve_parenting(%struct.Scene* %scene, %struct.Object* %ob, %struct.Object* %par, [4 x float]* %obmat, [4 x float]* %slowmat, [3 x float]* %r_originmat, i8 zeroext %set_origin) #0 !dbg !11212 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %par.addr = alloca %struct.Object*, align 8
  %obmat.addr = alloca [4 x float]*, align 8
  %slowmat.addr = alloca [4 x float]*, align 8
  %r_originmat.addr = alloca [3 x float]*, align 8
  %set_origin.addr = alloca i8, align 1
  %totmat = alloca [4 x [4 x float]], align 16
  %tmat = alloca [4 x [4 x float]], align 16
  %locmat = alloca [4 x [4 x float]], align 16
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !11215, metadata !DIExpression()), !dbg !11216
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11217, metadata !DIExpression()), !dbg !11218
  store %struct.Object* %par, %struct.Object** %par.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %par.addr, metadata !11219, metadata !DIExpression()), !dbg !11220
  store [4 x float]* %obmat, [4 x float]** %obmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %obmat.addr, metadata !11221, metadata !DIExpression()), !dbg !11222
  store [4 x float]* %slowmat, [4 x float]** %slowmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %slowmat.addr, metadata !11223, metadata !DIExpression()), !dbg !11224
  store [3 x float]* %r_originmat, [3 x float]** %r_originmat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %r_originmat.addr, metadata !11225, metadata !DIExpression()), !dbg !11226
  store i8 %set_origin, i8* %set_origin.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %set_origin.addr, metadata !11227, metadata !DIExpression()), !dbg !11228
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %totmat, metadata !11229, metadata !DIExpression()), !dbg !11230
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %tmat, metadata !11231, metadata !DIExpression()), !dbg !11232
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %locmat, metadata !11233, metadata !DIExpression()), !dbg !11234
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11235
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %locmat, i64 0, i64 0, !dbg !11236
  call void @BKE_object_to_mat4(%struct.Object* %0, [4 x float]* %arraydecay), !dbg !11237
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11238
  %partype = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 4, !dbg !11240
  %2 = load i16, i16* %partype, align 2, !dbg !11240
  %conv = sext i16 %2 to i32, !dbg !11238
  %and = and i32 %conv, 16, !dbg !11241
  %tobool = icmp ne i32 %and, 0, !dbg !11241
  br i1 %tobool, label %if.then, label %if.end, !dbg !11242

if.then:                                          ; preds = %entry
  %3 = load [4 x float]*, [4 x float]** %slowmat.addr, align 8, !dbg !11243
  %4 = load [4 x float]*, [4 x float]** %obmat.addr, align 8, !dbg !11244
  call void @copy_m4_m4([4 x float]* %3, [4 x float]* %4), !dbg !11245
  br label %if.end, !dbg !11245

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11246
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11247
  %7 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !11248
  %arraydecay1 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %totmat, i64 0, i64 0, !dbg !11249
  call void @ob_get_parent_matrix(%struct.Scene* %5, %struct.Object* %6, %struct.Object* %7, [4 x float]* %arraydecay1), !dbg !11250
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !11251
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %totmat, i64 0, i64 0, !dbg !11252
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11253
  %parentinv = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 48, !dbg !11254
  %arraydecay4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %parentinv, i64 0, i64 0, !dbg !11253
  call void @mul_m4_m4m4([4 x float]* %arraydecay2, [4 x float]* %arraydecay3, [4 x float]* %arraydecay4), !dbg !11255
  %9 = load [4 x float]*, [4 x float]** %obmat.addr, align 8, !dbg !11256
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !11257
  %arraydecay6 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %locmat, i64 0, i64 0, !dbg !11258
  call void @mul_m4_m4m4([4 x float]* %9, [4 x float]* %arraydecay5, [4 x float]* %arraydecay6), !dbg !11259
  %10 = load [3 x float]*, [3 x float]** %r_originmat.addr, align 8, !dbg !11260
  %tobool7 = icmp ne [3 x float]* %10, null, !dbg !11260
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !11262

if.then8:                                         ; preds = %if.end
  %11 = load [3 x float]*, [3 x float]** %r_originmat.addr, align 8, !dbg !11263
  %arraydecay9 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !11265
  call void @copy_m3_m4([3 x float]* %11, [4 x float]* %arraydecay9), !dbg !11266
  br label %if.end10, !dbg !11267

if.end10:                                         ; preds = %if.then8, %if.end
  %12 = load i8, i8* %set_origin.addr, align 1, !dbg !11268
  %tobool11 = icmp ne i8 %12, 0, !dbg !11268
  br i1 %tobool11, label %if.then12, label %if.end26, !dbg !11270

if.then12:                                        ; preds = %if.end10
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11271
  %partype13 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 4, !dbg !11274
  %14 = load i16, i16* %partype13, align 2, !dbg !11274
  %conv14 = sext i16 %14 to i32, !dbg !11271
  %and15 = and i32 %conv14, 15, !dbg !11275
  %cmp = icmp eq i32 %and15, 4, !dbg !11276
  br i1 %cmp, label %if.then17, label %if.else, !dbg !11277

if.then17:                                        ; preds = %if.then12
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11278
  %orig = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 35, !dbg !11280
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %orig, i64 0, i64 0, !dbg !11278
  %16 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !11281
  %obmat19 = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 47, !dbg !11282
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat19, i64 0, i64 3, !dbg !11281
  %arraydecay20 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !11281
  call void @copy_v3_v3(float* %arraydecay18, float* %arraydecay20), !dbg !11283
  br label %if.end25, !dbg !11284

if.else:                                          ; preds = %if.then12
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11285
  %orig21 = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 35, !dbg !11287
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %orig21, i64 0, i64 0, !dbg !11285
  %arrayidx23 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %totmat, i64 0, i64 3, !dbg !11288
  %arraydecay24 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx23, i64 0, i64 0, !dbg !11288
  call void @copy_v3_v3(float* %arraydecay22, float* %arraydecay24), !dbg !11289
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then17
  br label %if.end26, !dbg !11290

if.end26:                                         ; preds = %if.end25, %if.end10
  ret void, !dbg !11291
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @where_is_object_parslow(%struct.Object* %ob, [4 x float]* %obmat, [4 x float]* %slowmat) #0 !dbg !11292 {
entry:
  %retval = alloca i8, align 1
  %ob.addr = alloca %struct.Object*, align 8
  %obmat.addr = alloca [4 x float]*, align 8
  %slowmat.addr = alloca [4 x float]*, align 8
  %fp1 = alloca float*, align 8
  %fp2 = alloca float*, align 8
  %fac1 = alloca float, align 4
  %fac2 = alloca float, align 4
  %a = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11295, metadata !DIExpression()), !dbg !11296
  store [4 x float]* %obmat, [4 x float]** %obmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %obmat.addr, metadata !11297, metadata !DIExpression()), !dbg !11298
  store [4 x float]* %slowmat, [4 x float]** %slowmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %slowmat.addr, metadata !11299, metadata !DIExpression()), !dbg !11300
  call void @llvm.dbg.declare(metadata float** %fp1, metadata !11301, metadata !DIExpression()), !dbg !11302
  call void @llvm.dbg.declare(metadata float** %fp2, metadata !11303, metadata !DIExpression()), !dbg !11304
  call void @llvm.dbg.declare(metadata float* %fac1, metadata !11305, metadata !DIExpression()), !dbg !11306
  call void @llvm.dbg.declare(metadata float* %fac2, metadata !11307, metadata !DIExpression()), !dbg !11308
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11309, metadata !DIExpression()), !dbg !11310
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11311
  %sf = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 95, !dbg !11312
  %1 = load float, float* %sf, align 8, !dbg !11312
  %2 = call float @llvm.fabs.f32(float %1), !dbg !11313
  %add = fadd float 1.000000e+00, %2, !dbg !11314
  %div = fdiv float 1.000000e+00, %add, !dbg !11315
  store float %div, float* %fac1, align 4, !dbg !11316
  %3 = load float, float* %fac1, align 4, !dbg !11317
  %cmp = fcmp oge float %3, 1.000000e+00, !dbg !11319
  br i1 %cmp, label %if.then, label %if.end, !dbg !11320

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !11321
  br label %return, !dbg !11321

if.end:                                           ; preds = %entry
  %4 = load float, float* %fac1, align 4, !dbg !11322
  %sub = fsub float 1.000000e+00, %4, !dbg !11323
  store float %sub, float* %fac2, align 4, !dbg !11324
  %5 = load [4 x float]*, [4 x float]** %obmat.addr, align 8, !dbg !11325
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, !dbg !11325
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !11325
  store float* %arraydecay, float** %fp1, align 8, !dbg !11326
  %6 = load [4 x float]*, [4 x float]** %slowmat.addr, align 8, !dbg !11327
  %arrayidx1 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, !dbg !11327
  %arraydecay2 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx1, i64 0, i64 0, !dbg !11327
  store float* %arraydecay2, float** %fp2, align 8, !dbg !11328
  store i32 0, i32* %a, align 4, !dbg !11329
  br label %for.cond, !dbg !11331

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %a, align 4, !dbg !11332
  %cmp3 = icmp slt i32 %7, 16, !dbg !11334
  br i1 %cmp3, label %for.body, label %for.end, !dbg !11335

for.body:                                         ; preds = %for.cond
  %8 = load float, float* %fac1, align 4, !dbg !11336
  %9 = load float*, float** %fp1, align 8, !dbg !11338
  %arrayidx4 = getelementptr inbounds float, float* %9, i64 0, !dbg !11338
  %10 = load float, float* %arrayidx4, align 4, !dbg !11338
  %mul = fmul float %8, %10, !dbg !11339
  %11 = load float, float* %fac2, align 4, !dbg !11340
  %12 = load float*, float** %fp2, align 8, !dbg !11341
  %arrayidx5 = getelementptr inbounds float, float* %12, i64 0, !dbg !11341
  %13 = load float, float* %arrayidx5, align 4, !dbg !11341
  %mul6 = fmul float %11, %13, !dbg !11342
  %add7 = fadd float %mul, %mul6, !dbg !11343
  %14 = load float*, float** %fp1, align 8, !dbg !11344
  %arrayidx8 = getelementptr inbounds float, float* %14, i64 0, !dbg !11344
  store float %add7, float* %arrayidx8, align 4, !dbg !11345
  br label %for.inc, !dbg !11346

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %a, align 4, !dbg !11347
  %inc = add nsw i32 %15, 1, !dbg !11347
  store i32 %inc, i32* %a, align 4, !dbg !11347
  %16 = load float*, float** %fp1, align 8, !dbg !11348
  %incdec.ptr = getelementptr inbounds float, float* %16, i32 1, !dbg !11348
  store float* %incdec.ptr, float** %fp1, align 8, !dbg !11348
  %17 = load float*, float** %fp2, align 8, !dbg !11349
  %incdec.ptr9 = getelementptr inbounds float, float* %17, i32 1, !dbg !11349
  store float* %incdec.ptr9, float** %fp2, align 8, !dbg !11349
  br label %for.cond, !dbg !11350, !llvm.loop !11351

for.end:                                          ; preds = %for.cond
  store i8 1, i8* %retval, align 1, !dbg !11353
  br label %return, !dbg !11353

return:                                           ; preds = %for.end, %if.then
  %18 = load i8, i8* %retval, align 1, !dbg !11354
  ret i8 %18, !dbg !11354
}

declare dso_local void @BKE_rigidbody_sync_transforms(%struct.RigidBodyWorld*, %struct.Object*, float) #3

declare dso_local %struct.bConstraintOb* @BKE_constraints_make_evalob(%struct.Scene*, %struct.Object*, i8*, i16 signext) #3

declare dso_local void @BKE_constraints_solve(%struct.ListBase*, %struct.bConstraintOb*, float) #3

declare dso_local void @BKE_constraints_clear_evalob(%struct.bConstraintOb*) #3

declare dso_local zeroext i8 @is_negative_m4([4 x float]*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_where_is_calc_time(%struct.Scene* %scene, %struct.Object* %ob, float %ctime) #0 !dbg !11355 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %ctime.addr = alloca float, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !11358, metadata !DIExpression()), !dbg !11359
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11360, metadata !DIExpression()), !dbg !11361
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !11362, metadata !DIExpression()), !dbg !11363
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11364
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11365
  %2 = load float, float* %ctime.addr, align 4, !dbg !11366
  call void @BKE_object_where_is_calc_time_ex(%struct.Scene* %0, %struct.Object* %1, float %2, %struct.RigidBodyWorld* null, [3 x float]* null), !dbg !11367
  ret void, !dbg !11368
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_where_is_calc_mat4(%struct.Scene* %scene, %struct.Object* %ob, [4 x float]* %obmat) #0 !dbg !11369 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %obmat.addr = alloca [4 x float]*, align 8
  %slowmat = alloca [4 x [4 x float]], align 16
  %par = alloca %struct.Object*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !11372, metadata !DIExpression()), !dbg !11373
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11374, metadata !DIExpression()), !dbg !11375
  store [4 x float]* %obmat, [4 x float]** %obmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %obmat.addr, metadata !11376, metadata !DIExpression()), !dbg !11377
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11378
  %parent = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 9, !dbg !11380
  %1 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !11380
  %tobool = icmp ne %struct.Object* %1, null, !dbg !11378
  br i1 %tobool, label %if.then, label %if.else, !dbg !11381

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %slowmat, metadata !11382, metadata !DIExpression()), !dbg !11384
  call void @llvm.dbg.declare(metadata %struct.Object** %par, metadata !11385, metadata !DIExpression()), !dbg !11386
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11387
  %parent1 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 9, !dbg !11388
  %3 = load %struct.Object*, %struct.Object** %parent1, align 8, !dbg !11388
  store %struct.Object* %3, %struct.Object** %par, align 8, !dbg !11386
  %4 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11389
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11390
  %6 = load %struct.Object*, %struct.Object** %par, align 8, !dbg !11391
  %7 = load [4 x float]*, [4 x float]** %obmat.addr, align 8, !dbg !11392
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %slowmat, i64 0, i64 0, !dbg !11393
  call void @solve_parenting(%struct.Scene* %4, %struct.Object* %5, %struct.Object* %6, [4 x float]* %7, [4 x float]* %arraydecay, [3 x float]* null, i8 zeroext 0), !dbg !11394
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11395
  %partype = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 4, !dbg !11397
  %9 = load i16, i16* %partype, align 2, !dbg !11397
  %conv = sext i16 %9 to i32, !dbg !11395
  %and = and i32 %conv, 16, !dbg !11398
  %tobool2 = icmp ne i32 %and, 0, !dbg !11398
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !11399

if.then3:                                         ; preds = %if.then
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11400
  %11 = load [4 x float]*, [4 x float]** %obmat.addr, align 8, !dbg !11401
  %arraydecay4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %slowmat, i64 0, i64 0, !dbg !11402
  %call = call zeroext i8 @where_is_object_parslow(%struct.Object* %10, [4 x float]* %11, [4 x float]* %arraydecay4), !dbg !11403
  br label %if.end, !dbg !11403

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end5, !dbg !11404

if.else:                                          ; preds = %entry
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11405
  %13 = load [4 x float]*, [4 x float]** %obmat.addr, align 8, !dbg !11407
  call void @BKE_object_to_mat4(%struct.Object* %12, [4 x float]* %13), !dbg !11408
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.end
  ret void, !dbg !11409
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_where_is_calc_ex(%struct.Scene* %scene, %struct.RigidBodyWorld* %rbw, %struct.Object* %ob, [3 x float]* %r_originmat) #0 !dbg !11410 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %rbw.addr = alloca %struct.RigidBodyWorld*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %r_originmat.addr = alloca [3 x float]*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !11413, metadata !DIExpression()), !dbg !11414
  store %struct.RigidBodyWorld* %rbw, %struct.RigidBodyWorld** %rbw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigidBodyWorld** %rbw.addr, metadata !11415, metadata !DIExpression()), !dbg !11416
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11417, metadata !DIExpression()), !dbg !11418
  store [3 x float]* %r_originmat, [3 x float]** %r_originmat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %r_originmat.addr, metadata !11419, metadata !DIExpression()), !dbg !11420
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11421
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11422
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11423
  %call = call float @BKE_scene_frame_get(%struct.Scene* %2), !dbg !11424
  %3 = load %struct.RigidBodyWorld*, %struct.RigidBodyWorld** %rbw.addr, align 8, !dbg !11425
  %4 = load [3 x float]*, [3 x float]** %r_originmat.addr, align 8, !dbg !11426
  call void @BKE_object_where_is_calc_time_ex(%struct.Scene* %0, %struct.Object* %1, float %call, %struct.RigidBodyWorld* %3, [3 x float]* %4), !dbg !11427
  ret void, !dbg !11428
}

declare dso_local float @BKE_scene_frame_get(%struct.Scene*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_where_is_calc(%struct.Scene* %scene, %struct.Object* %ob) #0 !dbg !11429 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !11432, metadata !DIExpression()), !dbg !11433
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11434, metadata !DIExpression()), !dbg !11435
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11436
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11437
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11438
  %call = call float @BKE_scene_frame_get(%struct.Scene* %2), !dbg !11439
  call void @BKE_object_where_is_calc_time_ex(%struct.Scene* %0, %struct.Object* %1, float %call, %struct.RigidBodyWorld* null, [3 x float]* null), !dbg !11440
  ret void, !dbg !11441
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_workob_calc_parent(%struct.Scene* %scene, %struct.Object* %ob, %struct.Object* %workob) #0 !dbg !11442 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %workob.addr = alloca %struct.Object*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !11445, metadata !DIExpression()), !dbg !11446
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11447, metadata !DIExpression()), !dbg !11448
  store %struct.Object* %workob, %struct.Object** %workob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %workob.addr, metadata !11449, metadata !DIExpression()), !dbg !11450
  %0 = load %struct.Object*, %struct.Object** %workob.addr, align 8, !dbg !11451
  call void @BKE_object_workob_clear(%struct.Object* %0), !dbg !11452
  %1 = load %struct.Object*, %struct.Object** %workob.addr, align 8, !dbg !11453
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 47, !dbg !11454
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !11453
  call void @unit_m4([4 x float]* %arraydecay), !dbg !11455
  %2 = load %struct.Object*, %struct.Object** %workob.addr, align 8, !dbg !11456
  %parentinv = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 48, !dbg !11457
  %arraydecay1 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %parentinv, i64 0, i64 0, !dbg !11456
  call void @unit_m4([4 x float]* %arraydecay1), !dbg !11458
  %3 = load %struct.Object*, %struct.Object** %workob.addr, align 8, !dbg !11459
  %constinv = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 49, !dbg !11460
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %constinv, i64 0, i64 0, !dbg !11459
  call void @unit_m4([4 x float]* %arraydecay2), !dbg !11461
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11462
  %parent = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 9, !dbg !11463
  %5 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !11463
  %6 = load %struct.Object*, %struct.Object** %workob.addr, align 8, !dbg !11464
  %parent3 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 9, !dbg !11465
  store %struct.Object* %5, %struct.Object** %parent3, align 8, !dbg !11466
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11467
  %trackflag = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 57, !dbg !11468
  %8 = load i16, i16* %trackflag, align 4, !dbg !11468
  %9 = load %struct.Object*, %struct.Object** %workob.addr, align 8, !dbg !11469
  %trackflag4 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 57, !dbg !11470
  store i16 %8, i16* %trackflag4, align 4, !dbg !11471
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11472
  %upflag = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 58, !dbg !11473
  %11 = load i16, i16* %upflag, align 2, !dbg !11473
  %12 = load %struct.Object*, %struct.Object** %workob.addr, align 8, !dbg !11474
  %upflag5 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 58, !dbg !11475
  store i16 %11, i16* %upflag5, align 2, !dbg !11476
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11477
  %partype = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 4, !dbg !11478
  %14 = load i16, i16* %partype, align 2, !dbg !11478
  %15 = load %struct.Object*, %struct.Object** %workob.addr, align 8, !dbg !11479
  %partype6 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 4, !dbg !11480
  store i16 %14, i16* %partype6, align 2, !dbg !11481
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11482
  %par1 = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 5, !dbg !11483
  %17 = load i32, i32* %par1, align 4, !dbg !11483
  %18 = load %struct.Object*, %struct.Object** %workob.addr, align 8, !dbg !11484
  %par17 = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 5, !dbg !11485
  store i32 %17, i32* %par17, align 4, !dbg !11486
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11487
  %par2 = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 6, !dbg !11488
  %20 = load i32, i32* %par2, align 8, !dbg !11488
  %21 = load %struct.Object*, %struct.Object** %workob.addr, align 8, !dbg !11489
  %par28 = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 6, !dbg !11490
  store i32 %20, i32* %par28, align 8, !dbg !11491
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11492
  %par3 = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 7, !dbg !11493
  %23 = load i32, i32* %par3, align 4, !dbg !11493
  %24 = load %struct.Object*, %struct.Object** %workob.addr, align 8, !dbg !11494
  %par39 = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 7, !dbg !11495
  store i32 %23, i32* %par39, align 4, !dbg !11496
  %25 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11497
  %constraints = getelementptr inbounds %struct.Object, %struct.Object* %25, i32 0, i32 106, !dbg !11498
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints, i32 0, i32 0, !dbg !11499
  %26 = load i8*, i8** %first, align 8, !dbg !11499
  %27 = load %struct.Object*, %struct.Object** %workob.addr, align 8, !dbg !11500
  %constraints10 = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 106, !dbg !11501
  %first11 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints10, i32 0, i32 0, !dbg !11502
  store i8* %26, i8** %first11, align 8, !dbg !11503
  %28 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11504
  %constraints12 = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 106, !dbg !11505
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints12, i32 0, i32 1, !dbg !11506
  %29 = load i8*, i8** %last, align 8, !dbg !11506
  %30 = load %struct.Object*, %struct.Object** %workob.addr, align 8, !dbg !11507
  %constraints13 = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 106, !dbg !11508
  %last14 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints13, i32 0, i32 1, !dbg !11509
  store i8* %29, i8** %last14, align 8, !dbg !11510
  %31 = load %struct.Object*, %struct.Object** %workob.addr, align 8, !dbg !11511
  %parsubstr = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 8, !dbg !11512
  %arraydecay15 = getelementptr inbounds [64 x i8], [64 x i8]* %parsubstr, i64 0, i64 0, !dbg !11511
  %32 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11513
  %parsubstr16 = getelementptr inbounds %struct.Object, %struct.Object* %32, i32 0, i32 8, !dbg !11514
  %arraydecay17 = getelementptr inbounds [64 x i8], [64 x i8]* %parsubstr16, i64 0, i64 0, !dbg !11513
  %call = call i8* @BLI_strncpy(i8* %arraydecay15, i8* %arraydecay17, i64 64), !dbg !11515
  %33 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11516
  %34 = load %struct.Object*, %struct.Object** %workob.addr, align 8, !dbg !11517
  call void @BKE_object_where_is_calc(%struct.Scene* %33, %struct.Object* %34), !dbg !11518
  ret void, !dbg !11519
}

; Function Attrs: noinline nounwind uwtable
define internal void @ob_get_parent_matrix(%struct.Scene* %scene, %struct.Object* %ob, %struct.Object* %par, [4 x float]* %parentmat) #0 !dbg !11520 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %par.addr = alloca %struct.Object*, align 8
  %parentmat.addr = alloca [4 x float]*, align 8
  %tmat = alloca [4 x [4 x float]], align 16
  %vec = alloca [3 x float], align 4
  %ok = alloca i8, align 1
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !11523, metadata !DIExpression()), !dbg !11524
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11525, metadata !DIExpression()), !dbg !11526
  store %struct.Object* %par, %struct.Object** %par.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %par.addr, metadata !11527, metadata !DIExpression()), !dbg !11528
  store [4 x float]* %parentmat, [4 x float]** %parentmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %parentmat.addr, metadata !11529, metadata !DIExpression()), !dbg !11530
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %tmat, metadata !11531, metadata !DIExpression()), !dbg !11532
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !11533, metadata !DIExpression()), !dbg !11534
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !11535, metadata !DIExpression()), !dbg !11536
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11537
  %partype = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 4, !dbg !11538
  %1 = load i16, i16* %partype, align 2, !dbg !11538
  %conv = sext i16 %1 to i32, !dbg !11537
  %and = and i32 %conv, 15, !dbg !11539
  switch i32 %and, label %sw.epilog [
    i32 0, label %sw.bb
    i32 7, label %sw.bb14
    i32 5, label %sw.bb19
    i32 6, label %sw.bb25
    i32 4, label %sw.bb30
  ], !dbg !11540

sw.bb:                                            ; preds = %entry
  store i8 0, i8* %ok, align 1, !dbg !11541
  %2 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !11543
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !11545
  %3 = load i16, i16* %type, align 8, !dbg !11545
  %conv1 = sext i16 %3 to i32, !dbg !11543
  %cmp = icmp eq i32 %conv1, 2, !dbg !11546
  br i1 %cmp, label %if.then, label %if.end6, !dbg !11547

if.then:                                          ; preds = %sw.bb
  %4 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11548
  %tobool = icmp ne %struct.Scene* %4, null, !dbg !11548
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11551

land.lhs.true:                                    ; preds = %if.then
  %5 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !11552
  %data = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 19, !dbg !11553
  %6 = load i8*, i8** %data, align 8, !dbg !11553
  %7 = bitcast i8* %6 to %struct.Curve*, !dbg !11554
  %flag = getelementptr inbounds %struct.Curve, %struct.Curve* %7, i32 0, i32 23, !dbg !11555
  %8 = load i32, i32* %flag, align 4, !dbg !11555
  %and3 = and i32 %8, 8, !dbg !11556
  %tobool4 = icmp ne i32 %and3, 0, !dbg !11556
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !11557

if.then5:                                         ; preds = %land.lhs.true
  %9 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11558
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11560
  %11 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !11561
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !11562
  call void @ob_parcurve(%struct.Scene* %9, %struct.Object* %10, %struct.Object* %11, [4 x float]* %arraydecay), !dbg !11563
  store i8 1, i8* %ok, align 1, !dbg !11564
  br label %if.end, !dbg !11565

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.then
  br label %if.end6, !dbg !11566

if.end6:                                          ; preds = %if.end, %sw.bb
  %12 = load i8, i8* %ok, align 1, !dbg !11567
  %tobool7 = icmp ne i8 %12, 0, !dbg !11567
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !11569

if.then8:                                         ; preds = %if.end6
  %13 = load [4 x float]*, [4 x float]** %parentmat.addr, align 8, !dbg !11570
  %14 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !11571
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 47, !dbg !11572
  %arraydecay9 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !11571
  %arraydecay10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !11573
  call void @mul_m4_m4m4([4 x float]* %13, [4 x float]* %arraydecay9, [4 x float]* %arraydecay10), !dbg !11574
  br label %if.end13, !dbg !11574

if.else:                                          ; preds = %if.end6
  %15 = load [4 x float]*, [4 x float]** %parentmat.addr, align 8, !dbg !11575
  %16 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !11576
  %obmat11 = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 47, !dbg !11577
  %arraydecay12 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat11, i64 0, i64 0, !dbg !11576
  call void @copy_m4_m4([4 x float]* %15, [4 x float]* %arraydecay12), !dbg !11578
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then8
  br label %sw.epilog, !dbg !11579

sw.bb14:                                          ; preds = %entry
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11580
  %18 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !11581
  %arraydecay15 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !11582
  call void @ob_parbone(%struct.Object* %17, %struct.Object* %18, [4 x float]* %arraydecay15), !dbg !11583
  %19 = load [4 x float]*, [4 x float]** %parentmat.addr, align 8, !dbg !11584
  %20 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !11585
  %obmat16 = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 47, !dbg !11586
  %arraydecay17 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat16, i64 0, i64 0, !dbg !11585
  %arraydecay18 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !11587
  call void @mul_m4_m4m4([4 x float]* %19, [4 x float]* %arraydecay17, [4 x float]* %arraydecay18), !dbg !11588
  br label %sw.epilog, !dbg !11589

sw.bb19:                                          ; preds = %entry
  %21 = load [4 x float]*, [4 x float]** %parentmat.addr, align 8, !dbg !11590
  call void @unit_m4([4 x float]* %21), !dbg !11591
  %22 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !11592
  %23 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11593
  %par1 = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 5, !dbg !11594
  %24 = load i32, i32* %par1, align 4, !dbg !11594
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !11595
  call void @give_parvert(%struct.Object* %22, i32 %24, float* %arraydecay20), !dbg !11596
  %25 = load [4 x float]*, [4 x float]** %parentmat.addr, align 8, !dbg !11597
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %25, i64 3, !dbg !11597
  %arraydecay21 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !11597
  %26 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !11598
  %obmat22 = getelementptr inbounds %struct.Object, %struct.Object* %26, i32 0, i32 47, !dbg !11599
  %arraydecay23 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat22, i64 0, i64 0, !dbg !11598
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !11600
  call void @mul_v3_m4v3(float* %arraydecay21, [4 x float]* %arraydecay23, float* %arraydecay24), !dbg !11601
  br label %sw.epilog, !dbg !11602

sw.bb25:                                          ; preds = %entry
  %27 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11603
  %28 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !11604
  %arraydecay26 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !11605
  call void @ob_parvert3(%struct.Object* %27, %struct.Object* %28, [4 x float]* %arraydecay26), !dbg !11606
  %29 = load [4 x float]*, [4 x float]** %parentmat.addr, align 8, !dbg !11607
  %30 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !11608
  %obmat27 = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 47, !dbg !11609
  %arraydecay28 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat27, i64 0, i64 0, !dbg !11608
  %arraydecay29 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !11610
  call void @mul_m4_m4m4([4 x float]* %29, [4 x float]* %arraydecay28, [4 x float]* %arraydecay29), !dbg !11611
  br label %sw.epilog, !dbg !11612

sw.bb30:                                          ; preds = %entry
  %31 = load [4 x float]*, [4 x float]** %parentmat.addr, align 8, !dbg !11613
  %32 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !11614
  %obmat31 = getelementptr inbounds %struct.Object, %struct.Object* %32, i32 0, i32 47, !dbg !11615
  %arraydecay32 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat31, i64 0, i64 0, !dbg !11614
  call void @copy_m4_m4([4 x float]* %31, [4 x float]* %arraydecay32), !dbg !11616
  br label %sw.epilog, !dbg !11617

sw.epilog:                                        ; preds = %entry, %sw.bb30, %sw.bb25, %sw.bb19, %sw.bb14, %if.end13
  ret void, !dbg !11618
}

declare dso_local void @mat4_to_loc_rot_size(float*, [3 x float]*, float*, [4 x float]*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.BoundBox* @BKE_boundbox_alloc_unit() #0 !dbg !11619 {
entry:
  %bb = alloca %struct.BoundBox*, align 8
  %min = alloca [3 x float], align 4
  %max = alloca [3 x float], align 4
  call void @llvm.dbg.declare(metadata %struct.BoundBox** %bb, metadata !11622, metadata !DIExpression()), !dbg !11625
  call void @llvm.dbg.declare(metadata [3 x float]* %min, metadata !11626, metadata !DIExpression()), !dbg !11628
  %0 = bitcast [3 x float]* %min to i8*, !dbg !11628
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* align 4 bitcast ([3 x float]* @__const.BKE_boundbox_alloc_unit.min to i8*), i64 12, i1 false), !dbg !11628
  call void @llvm.dbg.declare(metadata [3 x float]* %max, metadata !11629, metadata !DIExpression()), !dbg !11630
  %1 = bitcast [3 x float]* %max to i8*, !dbg !11630
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 bitcast ([3 x float]* @__const.BKE_boundbox_alloc_unit.max to i8*), i64 12, i1 false), !dbg !11630
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !11631
  %call = call i8* %2(i64 104, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0)), !dbg !11631
  %3 = bitcast i8* %call to %struct.BoundBox*, !dbg !11631
  store %struct.BoundBox* %3, %struct.BoundBox** %bb, align 8, !dbg !11632
  %4 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !11633
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !11634
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !11635
  call void @BKE_boundbox_init_from_minmax(%struct.BoundBox* %4, float* %arraydecay, float* %arraydecay1), !dbg !11636
  %5 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !11637
  ret %struct.BoundBox* %5, !dbg !11638
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_boundbox_init_from_minmax(%struct.BoundBox* %bb, float* %min, float* %max) #0 !dbg !11639 {
entry:
  %bb.addr = alloca %struct.BoundBox*, align 8
  %min.addr = alloca float*, align 8
  %max.addr = alloca float*, align 8
  store %struct.BoundBox* %bb, %struct.BoundBox** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BoundBox** %bb.addr, metadata !11642, metadata !DIExpression()), !dbg !11643
  store float* %min, float** %min.addr, align 8
  call void @llvm.dbg.declare(metadata float** %min.addr, metadata !11644, metadata !DIExpression()), !dbg !11645
  store float* %max, float** %max.addr, align 8
  call void @llvm.dbg.declare(metadata float** %max.addr, metadata !11646, metadata !DIExpression()), !dbg !11647
  %0 = load float*, float** %min.addr, align 8, !dbg !11648
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11648
  %1 = load float, float* %arrayidx, align 4, !dbg !11648
  %2 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11649
  %vec = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %2, i32 0, i32 0, !dbg !11650
  %arrayidx1 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec, i64 0, i64 3, !dbg !11649
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx1, i64 0, i64 0, !dbg !11649
  store float %1, float* %arrayidx2, align 4, !dbg !11651
  %3 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11652
  %vec3 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %3, i32 0, i32 0, !dbg !11653
  %arrayidx4 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec3, i64 0, i64 2, !dbg !11652
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx4, i64 0, i64 0, !dbg !11652
  store float %1, float* %arrayidx5, align 4, !dbg !11654
  %4 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11655
  %vec6 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %4, i32 0, i32 0, !dbg !11656
  %arrayidx7 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec6, i64 0, i64 1, !dbg !11655
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx7, i64 0, i64 0, !dbg !11655
  store float %1, float* %arrayidx8, align 4, !dbg !11657
  %5 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11658
  %vec9 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %5, i32 0, i32 0, !dbg !11659
  %arrayidx10 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec9, i64 0, i64 0, !dbg !11658
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx10, i64 0, i64 0, !dbg !11658
  store float %1, float* %arrayidx11, align 4, !dbg !11660
  %6 = load float*, float** %max.addr, align 8, !dbg !11661
  %arrayidx12 = getelementptr inbounds float, float* %6, i64 0, !dbg !11661
  %7 = load float, float* %arrayidx12, align 4, !dbg !11661
  %8 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11662
  %vec13 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %8, i32 0, i32 0, !dbg !11663
  %arrayidx14 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec13, i64 0, i64 7, !dbg !11662
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx14, i64 0, i64 0, !dbg !11662
  store float %7, float* %arrayidx15, align 4, !dbg !11664
  %9 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11665
  %vec16 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %9, i32 0, i32 0, !dbg !11666
  %arrayidx17 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec16, i64 0, i64 6, !dbg !11665
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx17, i64 0, i64 0, !dbg !11665
  store float %7, float* %arrayidx18, align 4, !dbg !11667
  %10 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11668
  %vec19 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %10, i32 0, i32 0, !dbg !11669
  %arrayidx20 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec19, i64 0, i64 5, !dbg !11668
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx20, i64 0, i64 0, !dbg !11668
  store float %7, float* %arrayidx21, align 4, !dbg !11670
  %11 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11671
  %vec22 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %11, i32 0, i32 0, !dbg !11672
  %arrayidx23 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec22, i64 0, i64 4, !dbg !11671
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx23, i64 0, i64 0, !dbg !11671
  store float %7, float* %arrayidx24, align 4, !dbg !11673
  %12 = load float*, float** %min.addr, align 8, !dbg !11674
  %arrayidx25 = getelementptr inbounds float, float* %12, i64 1, !dbg !11674
  %13 = load float, float* %arrayidx25, align 4, !dbg !11674
  %14 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11675
  %vec26 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %14, i32 0, i32 0, !dbg !11676
  %arrayidx27 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec26, i64 0, i64 5, !dbg !11675
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx27, i64 0, i64 1, !dbg !11675
  store float %13, float* %arrayidx28, align 4, !dbg !11677
  %15 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11678
  %vec29 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %15, i32 0, i32 0, !dbg !11679
  %arrayidx30 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec29, i64 0, i64 4, !dbg !11678
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx30, i64 0, i64 1, !dbg !11678
  store float %13, float* %arrayidx31, align 4, !dbg !11680
  %16 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11681
  %vec32 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %16, i32 0, i32 0, !dbg !11682
  %arrayidx33 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec32, i64 0, i64 1, !dbg !11681
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx33, i64 0, i64 1, !dbg !11681
  store float %13, float* %arrayidx34, align 4, !dbg !11683
  %17 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11684
  %vec35 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %17, i32 0, i32 0, !dbg !11685
  %arrayidx36 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec35, i64 0, i64 0, !dbg !11684
  %arrayidx37 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx36, i64 0, i64 1, !dbg !11684
  store float %13, float* %arrayidx37, align 4, !dbg !11686
  %18 = load float*, float** %max.addr, align 8, !dbg !11687
  %arrayidx38 = getelementptr inbounds float, float* %18, i64 1, !dbg !11687
  %19 = load float, float* %arrayidx38, align 4, !dbg !11687
  %20 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11688
  %vec39 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %20, i32 0, i32 0, !dbg !11689
  %arrayidx40 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec39, i64 0, i64 7, !dbg !11688
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx40, i64 0, i64 1, !dbg !11688
  store float %19, float* %arrayidx41, align 4, !dbg !11690
  %21 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11691
  %vec42 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %21, i32 0, i32 0, !dbg !11692
  %arrayidx43 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec42, i64 0, i64 6, !dbg !11691
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx43, i64 0, i64 1, !dbg !11691
  store float %19, float* %arrayidx44, align 4, !dbg !11693
  %22 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11694
  %vec45 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %22, i32 0, i32 0, !dbg !11695
  %arrayidx46 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec45, i64 0, i64 3, !dbg !11694
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx46, i64 0, i64 1, !dbg !11694
  store float %19, float* %arrayidx47, align 4, !dbg !11696
  %23 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11697
  %vec48 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %23, i32 0, i32 0, !dbg !11698
  %arrayidx49 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec48, i64 0, i64 2, !dbg !11697
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx49, i64 0, i64 1, !dbg !11697
  store float %19, float* %arrayidx50, align 4, !dbg !11699
  %24 = load float*, float** %min.addr, align 8, !dbg !11700
  %arrayidx51 = getelementptr inbounds float, float* %24, i64 2, !dbg !11700
  %25 = load float, float* %arrayidx51, align 4, !dbg !11700
  %26 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11701
  %vec52 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %26, i32 0, i32 0, !dbg !11702
  %arrayidx53 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec52, i64 0, i64 7, !dbg !11701
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx53, i64 0, i64 2, !dbg !11701
  store float %25, float* %arrayidx54, align 4, !dbg !11703
  %27 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11704
  %vec55 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %27, i32 0, i32 0, !dbg !11705
  %arrayidx56 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec55, i64 0, i64 4, !dbg !11704
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx56, i64 0, i64 2, !dbg !11704
  store float %25, float* %arrayidx57, align 4, !dbg !11706
  %28 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11707
  %vec58 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %28, i32 0, i32 0, !dbg !11708
  %arrayidx59 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec58, i64 0, i64 3, !dbg !11707
  %arrayidx60 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx59, i64 0, i64 2, !dbg !11707
  store float %25, float* %arrayidx60, align 4, !dbg !11709
  %29 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11710
  %vec61 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %29, i32 0, i32 0, !dbg !11711
  %arrayidx62 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec61, i64 0, i64 0, !dbg !11710
  %arrayidx63 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx62, i64 0, i64 2, !dbg !11710
  store float %25, float* %arrayidx63, align 4, !dbg !11712
  %30 = load float*, float** %max.addr, align 8, !dbg !11713
  %arrayidx64 = getelementptr inbounds float, float* %30, i64 2, !dbg !11713
  %31 = load float, float* %arrayidx64, align 4, !dbg !11713
  %32 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11714
  %vec65 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %32, i32 0, i32 0, !dbg !11715
  %arrayidx66 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec65, i64 0, i64 6, !dbg !11714
  %arrayidx67 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx66, i64 0, i64 2, !dbg !11714
  store float %31, float* %arrayidx67, align 4, !dbg !11716
  %33 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11717
  %vec68 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %33, i32 0, i32 0, !dbg !11718
  %arrayidx69 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec68, i64 0, i64 5, !dbg !11717
  %arrayidx70 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx69, i64 0, i64 2, !dbg !11717
  store float %31, float* %arrayidx70, align 4, !dbg !11719
  %34 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11720
  %vec71 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %34, i32 0, i32 0, !dbg !11721
  %arrayidx72 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec71, i64 0, i64 2, !dbg !11720
  %arrayidx73 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx72, i64 0, i64 2, !dbg !11720
  store float %31, float* %arrayidx73, align 4, !dbg !11722
  %35 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11723
  %vec74 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %35, i32 0, i32 0, !dbg !11724
  %arrayidx75 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec74, i64 0, i64 1, !dbg !11723
  %arrayidx76 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx75, i64 0, i64 2, !dbg !11723
  store float %31, float* %arrayidx76, align 4, !dbg !11725
  ret void, !dbg !11726
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_boundbox_calc_center_aabb(%struct.BoundBox* %bb, float* %r_cent) #0 !dbg !11727 {
entry:
  %bb.addr = alloca %struct.BoundBox*, align 8
  %r_cent.addr = alloca float*, align 8
  store %struct.BoundBox* %bb, %struct.BoundBox** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BoundBox** %bb.addr, metadata !11732, metadata !DIExpression()), !dbg !11733
  store float* %r_cent, float** %r_cent.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_cent.addr, metadata !11734, metadata !DIExpression()), !dbg !11735
  %0 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11736
  %vec = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %0, i32 0, i32 0, !dbg !11737
  %arrayidx = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec, i64 0, i64 0, !dbg !11736
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !11736
  %1 = load float, float* %arrayidx1, align 4, !dbg !11736
  %2 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11738
  %vec2 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %2, i32 0, i32 0, !dbg !11739
  %arrayidx3 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec2, i64 0, i64 4, !dbg !11738
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx3, i64 0, i64 0, !dbg !11738
  %3 = load float, float* %arrayidx4, align 4, !dbg !11738
  %add = fadd float %1, %3, !dbg !11740
  %mul = fmul float 5.000000e-01, %add, !dbg !11741
  %4 = load float*, float** %r_cent.addr, align 8, !dbg !11742
  %arrayidx5 = getelementptr inbounds float, float* %4, i64 0, !dbg !11742
  store float %mul, float* %arrayidx5, align 4, !dbg !11743
  %5 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11744
  %vec6 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %5, i32 0, i32 0, !dbg !11745
  %arrayidx7 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec6, i64 0, i64 0, !dbg !11744
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx7, i64 0, i64 1, !dbg !11744
  %6 = load float, float* %arrayidx8, align 4, !dbg !11744
  %7 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11746
  %vec9 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %7, i32 0, i32 0, !dbg !11747
  %arrayidx10 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec9, i64 0, i64 2, !dbg !11746
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx10, i64 0, i64 1, !dbg !11746
  %8 = load float, float* %arrayidx11, align 4, !dbg !11746
  %add12 = fadd float %6, %8, !dbg !11748
  %mul13 = fmul float 5.000000e-01, %add12, !dbg !11749
  %9 = load float*, float** %r_cent.addr, align 8, !dbg !11750
  %arrayidx14 = getelementptr inbounds float, float* %9, i64 1, !dbg !11750
  store float %mul13, float* %arrayidx14, align 4, !dbg !11751
  %10 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11752
  %vec15 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %10, i32 0, i32 0, !dbg !11753
  %arrayidx16 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec15, i64 0, i64 0, !dbg !11752
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx16, i64 0, i64 2, !dbg !11752
  %11 = load float, float* %arrayidx17, align 4, !dbg !11752
  %12 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11754
  %vec18 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %12, i32 0, i32 0, !dbg !11755
  %arrayidx19 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec18, i64 0, i64 1, !dbg !11754
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx19, i64 0, i64 2, !dbg !11754
  %13 = load float, float* %arrayidx20, align 4, !dbg !11754
  %add21 = fadd float %11, %13, !dbg !11756
  %mul22 = fmul float 5.000000e-01, %add21, !dbg !11757
  %14 = load float*, float** %r_cent.addr, align 8, !dbg !11758
  %arrayidx23 = getelementptr inbounds float, float* %14, i64 2, !dbg !11758
  store float %mul22, float* %arrayidx23, align 4, !dbg !11759
  ret void, !dbg !11760
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_boundbox_calc_size_aabb(%struct.BoundBox* %bb, float* %r_size) #0 !dbg !11761 {
entry:
  %bb.addr = alloca %struct.BoundBox*, align 8
  %r_size.addr = alloca float*, align 8
  store %struct.BoundBox* %bb, %struct.BoundBox** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BoundBox** %bb.addr, metadata !11762, metadata !DIExpression()), !dbg !11763
  store float* %r_size, float** %r_size.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_size.addr, metadata !11764, metadata !DIExpression()), !dbg !11765
  %0 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11766
  %vec = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %0, i32 0, i32 0, !dbg !11767
  %arrayidx = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec, i64 0, i64 0, !dbg !11766
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !11766
  %1 = load float, float* %arrayidx1, align 4, !dbg !11766
  %2 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11768
  %vec2 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %2, i32 0, i32 0, !dbg !11769
  %arrayidx3 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec2, i64 0, i64 4, !dbg !11768
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx3, i64 0, i64 0, !dbg !11768
  %3 = load float, float* %arrayidx4, align 4, !dbg !11768
  %sub = fsub float %1, %3, !dbg !11770
  %4 = call float @llvm.fabs.f32(float %sub), !dbg !11771
  %mul = fmul float 5.000000e-01, %4, !dbg !11772
  %5 = load float*, float** %r_size.addr, align 8, !dbg !11773
  %arrayidx5 = getelementptr inbounds float, float* %5, i64 0, !dbg !11773
  store float %mul, float* %arrayidx5, align 4, !dbg !11774
  %6 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11775
  %vec6 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %6, i32 0, i32 0, !dbg !11776
  %arrayidx7 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec6, i64 0, i64 0, !dbg !11775
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx7, i64 0, i64 1, !dbg !11775
  %7 = load float, float* %arrayidx8, align 4, !dbg !11775
  %8 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11777
  %vec9 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %8, i32 0, i32 0, !dbg !11778
  %arrayidx10 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec9, i64 0, i64 2, !dbg !11777
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx10, i64 0, i64 1, !dbg !11777
  %9 = load float, float* %arrayidx11, align 4, !dbg !11777
  %sub12 = fsub float %7, %9, !dbg !11779
  %10 = call float @llvm.fabs.f32(float %sub12), !dbg !11780
  %mul13 = fmul float 5.000000e-01, %10, !dbg !11781
  %11 = load float*, float** %r_size.addr, align 8, !dbg !11782
  %arrayidx14 = getelementptr inbounds float, float* %11, i64 1, !dbg !11782
  store float %mul13, float* %arrayidx14, align 4, !dbg !11783
  %12 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11784
  %vec15 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %12, i32 0, i32 0, !dbg !11785
  %arrayidx16 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec15, i64 0, i64 0, !dbg !11784
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx16, i64 0, i64 2, !dbg !11784
  %13 = load float, float* %arrayidx17, align 4, !dbg !11784
  %14 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !11786
  %vec18 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %14, i32 0, i32 0, !dbg !11787
  %arrayidx19 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec18, i64 0, i64 1, !dbg !11786
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx19, i64 0, i64 2, !dbg !11786
  %15 = load float, float* %arrayidx20, align 4, !dbg !11786
  %sub21 = fsub float %13, %15, !dbg !11788
  %16 = call float @llvm.fabs.f32(float %sub21), !dbg !11789
  %mul22 = fmul float 5.000000e-01, %16, !dbg !11790
  %17 = load float*, float** %r_size.addr, align 8, !dbg !11791
  %arrayidx23 = getelementptr inbounds float, float* %17, i64 2, !dbg !11791
  store float %mul22, float* %arrayidx23, align 4, !dbg !11792
  ret void, !dbg !11793
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.BoundBox* @BKE_object_boundbox_get(%struct.Object* %ob) #0 !dbg !11794 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %bb = alloca %struct.BoundBox*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11797, metadata !DIExpression()), !dbg !11798
  call void @llvm.dbg.declare(metadata %struct.BoundBox** %bb, metadata !11799, metadata !DIExpression()), !dbg !11800
  store %struct.BoundBox* null, %struct.BoundBox** %bb, align 8, !dbg !11800
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11801
  %type = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 3, !dbg !11803
  %1 = load i16, i16* %type, align 8, !dbg !11803
  %conv = sext i16 %1 to i32, !dbg !11801
  %cmp = icmp eq i32 %conv, 1, !dbg !11804
  br i1 %cmp, label %if.then, label %if.else, !dbg !11805

if.then:                                          ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11806
  %call = call %struct.BoundBox* @BKE_mesh_boundbox_get(%struct.Object* %2), !dbg !11808
  store %struct.BoundBox* %call, %struct.BoundBox** %bb, align 8, !dbg !11809
  br label %if.end25, !dbg !11810

if.else:                                          ; preds = %entry
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11811
  %type2 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 3, !dbg !11811
  %4 = load i16, i16* %type2, align 8, !dbg !11811
  %conv3 = sext i16 %4 to i32, !dbg !11811
  %cmp4 = icmp eq i32 %conv3, 2, !dbg !11811
  br i1 %cmp4, label %if.then15, label %lor.lhs.false, !dbg !11811

lor.lhs.false:                                    ; preds = %if.else
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11811
  %type6 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 3, !dbg !11811
  %6 = load i16, i16* %type6, align 8, !dbg !11811
  %conv7 = sext i16 %6 to i32, !dbg !11811
  %cmp8 = icmp eq i32 %conv7, 3, !dbg !11811
  br i1 %cmp8, label %if.then15, label %lor.lhs.false10, !dbg !11811

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11811
  %type11 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 3, !dbg !11811
  %8 = load i16, i16* %type11, align 8, !dbg !11811
  %conv12 = sext i16 %8 to i32, !dbg !11811
  %cmp13 = icmp eq i32 %conv12, 4, !dbg !11811
  br i1 %cmp13, label %if.then15, label %if.else17, !dbg !11813

if.then15:                                        ; preds = %lor.lhs.false10, %lor.lhs.false, %if.else
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11814
  %call16 = call %struct.BoundBox* @BKE_curve_boundbox_get(%struct.Object* %9), !dbg !11816
  store %struct.BoundBox* %call16, %struct.BoundBox** %bb, align 8, !dbg !11817
  br label %if.end24, !dbg !11818

if.else17:                                        ; preds = %lor.lhs.false10
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11819
  %type18 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 3, !dbg !11821
  %11 = load i16, i16* %type18, align 8, !dbg !11821
  %conv19 = sext i16 %11 to i32, !dbg !11819
  %cmp20 = icmp eq i32 %conv19, 5, !dbg !11822
  br i1 %cmp20, label %if.then22, label %if.end, !dbg !11823

if.then22:                                        ; preds = %if.else17
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11824
  %bb23 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 15, !dbg !11826
  %13 = load %struct.BoundBox*, %struct.BoundBox** %bb23, align 8, !dbg !11826
  store %struct.BoundBox* %13, %struct.BoundBox** %bb, align 8, !dbg !11827
  br label %if.end, !dbg !11828

if.end:                                           ; preds = %if.then22, %if.else17
  br label %if.end24

if.end24:                                         ; preds = %if.end, %if.then15
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then
  %14 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !11829
  ret %struct.BoundBox* %14, !dbg !11830
}

declare dso_local %struct.BoundBox* @BKE_mesh_boundbox_get(%struct.Object*) #3

declare dso_local %struct.BoundBox* @BKE_curve_boundbox_get(%struct.Object*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_boundbox_flag(%struct.Object* %ob, i32 %flag, i8 zeroext %set) #0 !dbg !11831 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %flag.addr = alloca i32, align 4
  %set.addr = alloca i8, align 1
  %bb = alloca %struct.BoundBox*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11834, metadata !DIExpression()), !dbg !11835
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !11836, metadata !DIExpression()), !dbg !11837
  store i8 %set, i8* %set.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %set.addr, metadata !11838, metadata !DIExpression()), !dbg !11839
  call void @llvm.dbg.declare(metadata %struct.BoundBox** %bb, metadata !11840, metadata !DIExpression()), !dbg !11841
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11842
  %call = call %struct.BoundBox* @BKE_object_boundbox_get(%struct.Object* %0), !dbg !11843
  store %struct.BoundBox* %call, %struct.BoundBox** %bb, align 8, !dbg !11841
  %1 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !11844
  %tobool = icmp ne %struct.BoundBox* %1, null, !dbg !11844
  br i1 %tobool, label %if.then, label %if.end5, !dbg !11846

if.then:                                          ; preds = %entry
  %2 = load i8, i8* %set.addr, align 1, !dbg !11847
  %tobool1 = icmp ne i8 %2, 0, !dbg !11847
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !11850

if.then2:                                         ; preds = %if.then
  %3 = load i32, i32* %flag.addr, align 4, !dbg !11851
  %4 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !11852
  %flag3 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %4, i32 0, i32 1, !dbg !11853
  %5 = load i32, i32* %flag3, align 4, !dbg !11854
  %or = or i32 %5, %3, !dbg !11854
  store i32 %or, i32* %flag3, align 4, !dbg !11854
  br label %if.end, !dbg !11852

if.else:                                          ; preds = %if.then
  %6 = load i32, i32* %flag.addr, align 4, !dbg !11855
  %neg = xor i32 %6, -1, !dbg !11856
  %7 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !11857
  %flag4 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %7, i32 0, i32 1, !dbg !11858
  %8 = load i32, i32* %flag4, align 4, !dbg !11859
  %and = and i32 %8, %neg, !dbg !11859
  store i32 %and, i32* %flag4, align 4, !dbg !11859
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end5, !dbg !11860

if.end5:                                          ; preds = %if.end, %entry
  ret void, !dbg !11861
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_dimensions_get(%struct.Object* %ob, float* %vec) #0 !dbg !11862 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %vec.addr = alloca float*, align 8
  %bb = alloca %struct.BoundBox*, align 8
  %scale = alloca [3 x float], align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11865, metadata !DIExpression()), !dbg !11866
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !11867, metadata !DIExpression()), !dbg !11868
  call void @llvm.dbg.declare(metadata %struct.BoundBox** %bb, metadata !11869, metadata !DIExpression()), !dbg !11870
  store %struct.BoundBox* null, %struct.BoundBox** %bb, align 8, !dbg !11870
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11871
  %call = call %struct.BoundBox* @BKE_object_boundbox_get(%struct.Object* %0), !dbg !11872
  store %struct.BoundBox* %call, %struct.BoundBox** %bb, align 8, !dbg !11873
  %1 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !11874
  %tobool = icmp ne %struct.BoundBox* %1, null, !dbg !11874
  br i1 %tobool, label %if.then, label %if.else, !dbg !11876

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %scale, metadata !11877, metadata !DIExpression()), !dbg !11879
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 0, !dbg !11880
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11881
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 47, !dbg !11882
  %arraydecay1 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !11881
  call void @mat4_to_size(float* %arraydecay, [4 x float]* %arraydecay1), !dbg !11883
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 0, !dbg !11884
  %3 = load float, float* %arrayidx, align 4, !dbg !11884
  %4 = call float @llvm.fabs.f32(float %3), !dbg !11885
  %5 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !11886
  %vec2 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %5, i32 0, i32 0, !dbg !11887
  %arrayidx3 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec2, i64 0, i64 4, !dbg !11886
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx3, i64 0, i64 0, !dbg !11886
  %6 = load float, float* %arrayidx4, align 4, !dbg !11886
  %7 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !11888
  %vec5 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %7, i32 0, i32 0, !dbg !11889
  %arrayidx6 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec5, i64 0, i64 0, !dbg !11888
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx6, i64 0, i64 0, !dbg !11888
  %8 = load float, float* %arrayidx7, align 4, !dbg !11888
  %sub = fsub float %6, %8, !dbg !11890
  %mul = fmul float %4, %sub, !dbg !11891
  %9 = load float*, float** %vec.addr, align 8, !dbg !11892
  %arrayidx8 = getelementptr inbounds float, float* %9, i64 0, !dbg !11892
  store float %mul, float* %arrayidx8, align 4, !dbg !11893
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 1, !dbg !11894
  %10 = load float, float* %arrayidx9, align 4, !dbg !11894
  %11 = call float @llvm.fabs.f32(float %10), !dbg !11895
  %12 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !11896
  %vec10 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %12, i32 0, i32 0, !dbg !11897
  %arrayidx11 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec10, i64 0, i64 2, !dbg !11896
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx11, i64 0, i64 1, !dbg !11896
  %13 = load float, float* %arrayidx12, align 4, !dbg !11896
  %14 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !11898
  %vec13 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %14, i32 0, i32 0, !dbg !11899
  %arrayidx14 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec13, i64 0, i64 0, !dbg !11898
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx14, i64 0, i64 1, !dbg !11898
  %15 = load float, float* %arrayidx15, align 4, !dbg !11898
  %sub16 = fsub float %13, %15, !dbg !11900
  %mul17 = fmul float %11, %sub16, !dbg !11901
  %16 = load float*, float** %vec.addr, align 8, !dbg !11902
  %arrayidx18 = getelementptr inbounds float, float* %16, i64 1, !dbg !11902
  store float %mul17, float* %arrayidx18, align 4, !dbg !11903
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 2, !dbg !11904
  %17 = load float, float* %arrayidx19, align 4, !dbg !11904
  %18 = call float @llvm.fabs.f32(float %17), !dbg !11905
  %19 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !11906
  %vec20 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %19, i32 0, i32 0, !dbg !11907
  %arrayidx21 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec20, i64 0, i64 1, !dbg !11906
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx21, i64 0, i64 2, !dbg !11906
  %20 = load float, float* %arrayidx22, align 4, !dbg !11906
  %21 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !11908
  %vec23 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %21, i32 0, i32 0, !dbg !11909
  %arrayidx24 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec23, i64 0, i64 0, !dbg !11908
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx24, i64 0, i64 2, !dbg !11908
  %22 = load float, float* %arrayidx25, align 4, !dbg !11908
  %sub26 = fsub float %20, %22, !dbg !11910
  %mul27 = fmul float %18, %sub26, !dbg !11911
  %23 = load float*, float** %vec.addr, align 8, !dbg !11912
  %arrayidx28 = getelementptr inbounds float, float* %23, i64 2, !dbg !11912
  store float %mul27, float* %arrayidx28, align 4, !dbg !11913
  br label %if.end, !dbg !11914

if.else:                                          ; preds = %entry
  %24 = load float*, float** %vec.addr, align 8, !dbg !11915
  call void @zero_v3(float* %24), !dbg !11917
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !11918
}

declare dso_local void @mat4_to_size(float*, [4 x float]*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !11919 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !11922, metadata !DIExpression()), !dbg !11923
  %0 = load float*, float** %r.addr, align 8, !dbg !11924
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11924
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !11925
  %1 = load float*, float** %r.addr, align 8, !dbg !11926
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !11926
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !11927
  %2 = load float*, float** %r.addr, align 8, !dbg !11928
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !11928
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !11929
  ret void, !dbg !11930
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_dimensions_set(%struct.Object* %ob, float* %value) #0 !dbg !11931 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %value.addr = alloca float*, align 8
  %bb = alloca %struct.BoundBox*, align 8
  %scale = alloca [3 x float], align 4
  %len = alloca [3 x float], align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11934, metadata !DIExpression()), !dbg !11935
  store float* %value, float** %value.addr, align 8
  call void @llvm.dbg.declare(metadata float** %value.addr, metadata !11936, metadata !DIExpression()), !dbg !11937
  call void @llvm.dbg.declare(metadata %struct.BoundBox** %bb, metadata !11938, metadata !DIExpression()), !dbg !11939
  store %struct.BoundBox* null, %struct.BoundBox** %bb, align 8, !dbg !11939
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11940
  %call = call %struct.BoundBox* @BKE_object_boundbox_get(%struct.Object* %0), !dbg !11941
  store %struct.BoundBox* %call, %struct.BoundBox** %bb, align 8, !dbg !11942
  %1 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !11943
  %tobool = icmp ne %struct.BoundBox* %1, null, !dbg !11943
  br i1 %tobool, label %if.then, label %if.end46, !dbg !11945

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %scale, metadata !11946, metadata !DIExpression()), !dbg !11948
  call void @llvm.dbg.declare(metadata [3 x float]* %len, metadata !11949, metadata !DIExpression()), !dbg !11950
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 0, !dbg !11951
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11952
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 47, !dbg !11953
  %arraydecay1 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !11952
  call void @mat4_to_size(float* %arraydecay, [4 x float]* %arraydecay1), !dbg !11954
  %3 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !11955
  %vec = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %3, i32 0, i32 0, !dbg !11956
  %arrayidx = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec, i64 0, i64 4, !dbg !11955
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !11955
  %4 = load float, float* %arrayidx2, align 4, !dbg !11955
  %5 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !11957
  %vec3 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %5, i32 0, i32 0, !dbg !11958
  %arrayidx4 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec3, i64 0, i64 0, !dbg !11957
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx4, i64 0, i64 0, !dbg !11957
  %6 = load float, float* %arrayidx5, align 4, !dbg !11957
  %sub = fsub float %4, %6, !dbg !11959
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %len, i64 0, i64 0, !dbg !11960
  store float %sub, float* %arrayidx6, align 4, !dbg !11961
  %7 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !11962
  %vec7 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %7, i32 0, i32 0, !dbg !11963
  %arrayidx8 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec7, i64 0, i64 2, !dbg !11962
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx8, i64 0, i64 1, !dbg !11962
  %8 = load float, float* %arrayidx9, align 4, !dbg !11962
  %9 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !11964
  %vec10 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %9, i32 0, i32 0, !dbg !11965
  %arrayidx11 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec10, i64 0, i64 0, !dbg !11964
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx11, i64 0, i64 1, !dbg !11964
  %10 = load float, float* %arrayidx12, align 4, !dbg !11964
  %sub13 = fsub float %8, %10, !dbg !11966
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %len, i64 0, i64 1, !dbg !11967
  store float %sub13, float* %arrayidx14, align 4, !dbg !11968
  %11 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !11969
  %vec15 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %11, i32 0, i32 0, !dbg !11970
  %arrayidx16 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec15, i64 0, i64 1, !dbg !11969
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx16, i64 0, i64 2, !dbg !11969
  %12 = load float, float* %arrayidx17, align 4, !dbg !11969
  %13 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !11971
  %vec18 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %13, i32 0, i32 0, !dbg !11972
  %arrayidx19 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec18, i64 0, i64 0, !dbg !11971
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx19, i64 0, i64 2, !dbg !11971
  %14 = load float, float* %arrayidx20, align 4, !dbg !11971
  %sub21 = fsub float %12, %14, !dbg !11973
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %len, i64 0, i64 2, !dbg !11974
  store float %sub21, float* %arrayidx22, align 4, !dbg !11975
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %len, i64 0, i64 0, !dbg !11976
  %15 = load float, float* %arrayidx23, align 4, !dbg !11976
  %cmp = fcmp ogt float %15, 0.000000e+00, !dbg !11978
  br i1 %cmp, label %if.then24, label %if.end, !dbg !11979

if.then24:                                        ; preds = %if.then
  %16 = load float*, float** %value.addr, align 8, !dbg !11980
  %arrayidx25 = getelementptr inbounds float, float* %16, i64 0, !dbg !11980
  %17 = load float, float* %arrayidx25, align 4, !dbg !11980
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %len, i64 0, i64 0, !dbg !11981
  %18 = load float, float* %arrayidx26, align 4, !dbg !11981
  %div = fdiv float %17, %18, !dbg !11982
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11983
  %size = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 36, !dbg !11984
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !11983
  store float %div, float* %arrayidx27, align 4, !dbg !11985
  br label %if.end, !dbg !11983

if.end:                                           ; preds = %if.then24, %if.then
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %len, i64 0, i64 1, !dbg !11986
  %20 = load float, float* %arrayidx28, align 4, !dbg !11986
  %cmp29 = fcmp ogt float %20, 0.000000e+00, !dbg !11988
  br i1 %cmp29, label %if.then30, label %if.end36, !dbg !11989

if.then30:                                        ; preds = %if.end
  %21 = load float*, float** %value.addr, align 8, !dbg !11990
  %arrayidx31 = getelementptr inbounds float, float* %21, i64 1, !dbg !11990
  %22 = load float, float* %arrayidx31, align 4, !dbg !11990
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %len, i64 0, i64 1, !dbg !11991
  %23 = load float, float* %arrayidx32, align 4, !dbg !11991
  %div33 = fdiv float %22, %23, !dbg !11992
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11993
  %size34 = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 36, !dbg !11994
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %size34, i64 0, i64 1, !dbg !11993
  store float %div33, float* %arrayidx35, align 4, !dbg !11995
  br label %if.end36, !dbg !11993

if.end36:                                         ; preds = %if.then30, %if.end
  %arrayidx37 = getelementptr inbounds [3 x float], [3 x float]* %len, i64 0, i64 2, !dbg !11996
  %25 = load float, float* %arrayidx37, align 4, !dbg !11996
  %cmp38 = fcmp ogt float %25, 0.000000e+00, !dbg !11998
  br i1 %cmp38, label %if.then39, label %if.end45, !dbg !11999

if.then39:                                        ; preds = %if.end36
  %26 = load float*, float** %value.addr, align 8, !dbg !12000
  %arrayidx40 = getelementptr inbounds float, float* %26, i64 2, !dbg !12000
  %27 = load float, float* %arrayidx40, align 4, !dbg !12000
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %len, i64 0, i64 2, !dbg !12001
  %28 = load float, float* %arrayidx41, align 4, !dbg !12001
  %div42 = fdiv float %27, %28, !dbg !12002
  %29 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12003
  %size43 = getelementptr inbounds %struct.Object, %struct.Object* %29, i32 0, i32 36, !dbg !12004
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %size43, i64 0, i64 2, !dbg !12003
  store float %div42, float* %arrayidx44, align 4, !dbg !12005
  br label %if.end45, !dbg !12003

if.end45:                                         ; preds = %if.then39, %if.end36
  br label %if.end46, !dbg !12006

if.end46:                                         ; preds = %if.end45, %entry
  ret void, !dbg !12007
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_minmax(%struct.Object* %ob, float* %min_r, float* %max_r, i8 zeroext %use_hidden) #0 !dbg !12008 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %min_r.addr = alloca float*, align 8
  %max_r.addr = alloca float*, align 8
  %use_hidden.addr = alloca i8, align 1
  %bb = alloca %struct.BoundBox, align 4
  %vec = alloca [3 x float], align 4
  %a = alloca i32, align 4
  %changed = alloca i8, align 1
  %lt = alloca %struct.Lattice*, align 8
  %bp = alloca %struct.BPoint*, align 8
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %w = alloca i32, align 4
  %arm = alloca %struct.bArmature*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  %me = alloca %struct.Mesh*, align 8
  %ob_min = alloca [3 x float], align 4
  %ob_max = alloca [3 x float], align 4
  %size = alloca [3 x float], align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !12011, metadata !DIExpression()), !dbg !12012
  store float* %min_r, float** %min_r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %min_r.addr, metadata !12013, metadata !DIExpression()), !dbg !12014
  store float* %max_r, float** %max_r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %max_r.addr, metadata !12015, metadata !DIExpression()), !dbg !12016
  store i8 %use_hidden, i8* %use_hidden.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_hidden.addr, metadata !12017, metadata !DIExpression()), !dbg !12018
  call void @llvm.dbg.declare(metadata %struct.BoundBox* %bb, metadata !12019, metadata !DIExpression()), !dbg !12020
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !12021, metadata !DIExpression()), !dbg !12022
  call void @llvm.dbg.declare(metadata i32* %a, metadata !12023, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !12025, metadata !DIExpression()), !dbg !12026
  store i8 0, i8* %changed, align 1, !dbg !12026
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12027
  %type = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 3, !dbg !12028
  %1 = load i16, i16* %type, align 8, !dbg !12028
  %conv = sext i16 %1 to i32, !dbg !12027
  switch i32 %conv, label %sw.epilog [
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 3, label %sw.bb
    i32 22, label %sw.bb8
    i32 25, label %sw.bb39
    i32 1, label %sw.bb72
    i32 5, label %sw.bb95
  ], !dbg !12029

sw.bb:                                            ; preds = %entry, %entry, %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12030
  %call = call %struct.BoundBox* @BKE_curve_boundbox_get(%struct.Object* %2), !dbg !12033
  %3 = bitcast %struct.BoundBox* %bb to i8*, !dbg !12034
  %4 = bitcast %struct.BoundBox* %call to i8*, !dbg !12034
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 104, i1 false), !dbg !12034
  store i32 0, i32* %a, align 4, !dbg !12035
  br label %for.cond, !dbg !12037

for.cond:                                         ; preds = %for.inc, %sw.bb
  %5 = load i32, i32* %a, align 4, !dbg !12038
  %cmp = icmp slt i32 %5, 8, !dbg !12040
  br i1 %cmp, label %for.body, label %for.end, !dbg !12041

for.body:                                         ; preds = %for.cond
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12042
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 47, !dbg !12044
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !12042
  %vec2 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %bb, i32 0, i32 0, !dbg !12045
  %7 = load i32, i32* %a, align 4, !dbg !12046
  %idxprom = sext i32 %7 to i64, !dbg !12047
  %arrayidx = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec2, i64 0, i64 %idxprom, !dbg !12047
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !12047
  call void @mul_m4_v3([4 x float]* %arraydecay, float* %arraydecay3), !dbg !12048
  %8 = load float*, float** %min_r.addr, align 8, !dbg !12049
  %9 = load float*, float** %max_r.addr, align 8, !dbg !12050
  %vec4 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %bb, i32 0, i32 0, !dbg !12051
  %10 = load i32, i32* %a, align 4, !dbg !12052
  %idxprom5 = sext i32 %10 to i64, !dbg !12053
  %arrayidx6 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec4, i64 0, i64 %idxprom5, !dbg !12053
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx6, i64 0, i64 0, !dbg !12053
  call void @minmax_v3v3_v3(float* %8, float* %9, float* %arraydecay7), !dbg !12054
  br label %for.inc, !dbg !12055

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %a, align 4, !dbg !12056
  %inc = add nsw i32 %11, 1, !dbg !12056
  store i32 %inc, i32* %a, align 4, !dbg !12056
  br label %for.cond, !dbg !12057, !llvm.loop !12058

for.end:                                          ; preds = %for.cond
  store i8 1, i8* %changed, align 1, !dbg !12060
  br label %sw.epilog, !dbg !12061

sw.bb8:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !12062, metadata !DIExpression()), !dbg !12064
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12065
  %data = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 19, !dbg !12066
  %13 = load i8*, i8** %data, align 8, !dbg !12066
  %14 = bitcast i8* %13 to %struct.Lattice*, !dbg !12065
  store %struct.Lattice* %14, %struct.Lattice** %lt, align 8, !dbg !12064
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !12067, metadata !DIExpression()), !dbg !12070
  %15 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !12071
  %def = getelementptr inbounds %struct.Lattice, %struct.Lattice* %15, i32 0, i32 21, !dbg !12072
  %16 = load %struct.BPoint*, %struct.BPoint** %def, align 8, !dbg !12072
  store %struct.BPoint* %16, %struct.BPoint** %bp, align 8, !dbg !12070
  call void @llvm.dbg.declare(metadata i32* %u, metadata !12073, metadata !DIExpression()), !dbg !12074
  call void @llvm.dbg.declare(metadata i32* %v, metadata !12075, metadata !DIExpression()), !dbg !12076
  call void @llvm.dbg.declare(metadata i32* %w, metadata !12077, metadata !DIExpression()), !dbg !12078
  store i32 0, i32* %w, align 4, !dbg !12079
  br label %for.cond9, !dbg !12081

for.cond9:                                        ; preds = %for.inc36, %sw.bb8
  %17 = load i32, i32* %w, align 4, !dbg !12082
  %18 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !12084
  %pntsw = getelementptr inbounds %struct.Lattice, %struct.Lattice* %18, i32 0, i32 4, !dbg !12085
  %19 = load i16, i16* %pntsw, align 4, !dbg !12085
  %conv10 = sext i16 %19 to i32, !dbg !12084
  %cmp11 = icmp slt i32 %17, %conv10, !dbg !12086
  br i1 %cmp11, label %for.body13, label %for.end38, !dbg !12087

for.body13:                                       ; preds = %for.cond9
  store i32 0, i32* %v, align 4, !dbg !12088
  br label %for.cond14, !dbg !12091

for.cond14:                                       ; preds = %for.inc33, %for.body13
  %20 = load i32, i32* %v, align 4, !dbg !12092
  %21 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !12094
  %pntsv = getelementptr inbounds %struct.Lattice, %struct.Lattice* %21, i32 0, i32 3, !dbg !12095
  %22 = load i16, i16* %pntsv, align 2, !dbg !12095
  %conv15 = sext i16 %22 to i32, !dbg !12094
  %cmp16 = icmp slt i32 %20, %conv15, !dbg !12096
  br i1 %cmp16, label %for.body18, label %for.end35, !dbg !12097

for.body18:                                       ; preds = %for.cond14
  store i32 0, i32* %u, align 4, !dbg !12098
  br label %for.cond19, !dbg !12101

for.cond19:                                       ; preds = %for.inc30, %for.body18
  %23 = load i32, i32* %u, align 4, !dbg !12102
  %24 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !12104
  %pntsu = getelementptr inbounds %struct.Lattice, %struct.Lattice* %24, i32 0, i32 2, !dbg !12105
  %25 = load i16, i16* %pntsu, align 8, !dbg !12105
  %conv20 = sext i16 %25 to i32, !dbg !12104
  %cmp21 = icmp slt i32 %23, %conv20, !dbg !12106
  br i1 %cmp21, label %for.body23, label %for.end32, !dbg !12107

for.body23:                                       ; preds = %for.cond19
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12108
  %26 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12110
  %obmat25 = getelementptr inbounds %struct.Object, %struct.Object* %26, i32 0, i32 47, !dbg !12111
  %arraydecay26 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat25, i64 0, i64 0, !dbg !12110
  %27 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12112
  %vec27 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %27, i32 0, i32 0, !dbg !12113
  %arraydecay28 = getelementptr inbounds [4 x float], [4 x float]* %vec27, i64 0, i64 0, !dbg !12112
  call void @mul_v3_m4v3(float* %arraydecay24, [4 x float]* %arraydecay26, float* %arraydecay28), !dbg !12114
  %28 = load float*, float** %min_r.addr, align 8, !dbg !12115
  %29 = load float*, float** %max_r.addr, align 8, !dbg !12116
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12117
  call void @minmax_v3v3_v3(float* %28, float* %29, float* %arraydecay29), !dbg !12118
  br label %for.inc30, !dbg !12119

for.inc30:                                        ; preds = %for.body23
  %30 = load i32, i32* %u, align 4, !dbg !12120
  %inc31 = add nsw i32 %30, 1, !dbg !12120
  store i32 %inc31, i32* %u, align 4, !dbg !12120
  %31 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !12121
  %incdec.ptr = getelementptr inbounds %struct.BPoint, %struct.BPoint* %31, i32 1, !dbg !12121
  store %struct.BPoint* %incdec.ptr, %struct.BPoint** %bp, align 8, !dbg !12121
  br label %for.cond19, !dbg !12122, !llvm.loop !12123

for.end32:                                        ; preds = %for.cond19
  br label %for.inc33, !dbg !12125

for.inc33:                                        ; preds = %for.end32
  %32 = load i32, i32* %v, align 4, !dbg !12126
  %inc34 = add nsw i32 %32, 1, !dbg !12126
  store i32 %inc34, i32* %v, align 4, !dbg !12126
  br label %for.cond14, !dbg !12127, !llvm.loop !12128

for.end35:                                        ; preds = %for.cond14
  br label %for.inc36, !dbg !12130

for.inc36:                                        ; preds = %for.end35
  %33 = load i32, i32* %w, align 4, !dbg !12131
  %inc37 = add nsw i32 %33, 1, !dbg !12131
  store i32 %inc37, i32* %w, align 4, !dbg !12131
  br label %for.cond9, !dbg !12132, !llvm.loop !12133

for.end38:                                        ; preds = %for.cond9
  store i8 1, i8* %changed, align 1, !dbg !12135
  br label %sw.epilog, !dbg !12136

sw.bb39:                                          ; preds = %entry
  %34 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12137
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 18, !dbg !12140
  %35 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !12140
  %tobool = icmp ne %struct.bPose* %35, null, !dbg !12137
  br i1 %tobool, label %if.then, label %if.end71, !dbg !12141

if.then:                                          ; preds = %sw.bb39
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !12142, metadata !DIExpression()), !dbg !12144
  %36 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12145
  %data40 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 19, !dbg !12146
  %37 = load i8*, i8** %data40, align 8, !dbg !12146
  %38 = bitcast i8* %37 to %struct.bArmature*, !dbg !12145
  store %struct.bArmature* %38, %struct.bArmature** %arm, align 8, !dbg !12144
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !12147, metadata !DIExpression()), !dbg !12148
  %39 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12149
  %pose41 = getelementptr inbounds %struct.Object, %struct.Object* %39, i32 0, i32 18, !dbg !12151
  %40 = load %struct.bPose*, %struct.bPose** %pose41, align 8, !dbg !12151
  %chanbase = getelementptr inbounds %struct.bPose, %struct.bPose* %40, i32 0, i32 0, !dbg !12152
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase, i32 0, i32 0, !dbg !12153
  %41 = load i8*, i8** %first, align 8, !dbg !12153
  %42 = bitcast i8* %41 to %struct.bPoseChannel*, !dbg !12149
  store %struct.bPoseChannel* %42, %struct.bPoseChannel** %pchan, align 8, !dbg !12154
  br label %for.cond42, !dbg !12155

for.cond42:                                       ; preds = %for.inc69, %if.then
  %43 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !12156
  %tobool43 = icmp ne %struct.bPoseChannel* %43, null, !dbg !12158
  br i1 %tobool43, label %for.body44, label %for.end70, !dbg !12158

for.body44:                                       ; preds = %for.cond42
  %44 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !12159
  %bone = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %44, i32 0, i32 12, !dbg !12162
  %45 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !12162
  %tobool45 = icmp ne %struct.Bone* %45, null, !dbg !12159
  br i1 %tobool45, label %land.lhs.true, label %if.end, !dbg !12163

land.lhs.true:                                    ; preds = %for.body44
  %46 = load i8, i8* %use_hidden.addr, align 1, !dbg !12164
  %conv46 = zext i8 %46 to i32, !dbg !12164
  %cmp47 = icmp eq i32 %conv46, 0, !dbg !12165
  br i1 %cmp47, label %land.lhs.true49, label %if.then58, !dbg !12166

land.lhs.true49:                                  ; preds = %land.lhs.true
  %47 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !12167
  %bone50 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %47, i32 0, i32 12, !dbg !12167
  %48 = load %struct.Bone*, %struct.Bone** %bone50, align 8, !dbg !12167
  %layer = getelementptr inbounds %struct.Bone, %struct.Bone* %48, i32 0, i32 25, !dbg !12167
  %49 = load i32, i32* %layer, align 8, !dbg !12167
  %50 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !12167
  %layer51 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %50, i32 0, i32 15, !dbg !12167
  %51 = load i32, i32* %layer51, align 8, !dbg !12167
  %and = and i32 %49, %51, !dbg !12167
  %tobool52 = icmp ne i32 %and, 0, !dbg !12167
  br i1 %tobool52, label %land.rhs, label %land.end, !dbg !12167

land.rhs:                                         ; preds = %land.lhs.true49
  %52 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !12167
  %bone53 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %52, i32 0, i32 12, !dbg !12167
  %53 = load %struct.Bone*, %struct.Bone** %bone53, align 8, !dbg !12167
  %flag = getelementptr inbounds %struct.Bone, %struct.Bone* %53, i32 0, i32 10, !dbg !12167
  %54 = load i32, i32* %flag, align 8, !dbg !12167
  %and54 = and i32 %54, 64, !dbg !12167
  %tobool55 = icmp ne i32 %and54, 0, !dbg !12167
  %lnot = xor i1 %tobool55, true, !dbg !12167
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true49
  %55 = phi i1 [ false, %land.lhs.true49 ], [ %lnot, %land.rhs ], !dbg !12168
  %land.ext = zext i1 %55 to i32, !dbg !12167
  %cmp56 = icmp eq i32 %land.ext, 0, !dbg !12169
  br i1 %cmp56, label %if.end, label %if.then58, !dbg !12170

if.then58:                                        ; preds = %land.end, %land.lhs.true
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12171
  %56 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12173
  %obmat60 = getelementptr inbounds %struct.Object, %struct.Object* %56, i32 0, i32 47, !dbg !12174
  %arraydecay61 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat60, i64 0, i64 0, !dbg !12173
  %57 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !12175
  %pose_head = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %57, i32 0, i32 31, !dbg !12176
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %pose_head, i64 0, i64 0, !dbg !12175
  call void @mul_v3_m4v3(float* %arraydecay59, [4 x float]* %arraydecay61, float* %arraydecay62), !dbg !12177
  %58 = load float*, float** %min_r.addr, align 8, !dbg !12178
  %59 = load float*, float** %max_r.addr, align 8, !dbg !12179
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12180
  call void @minmax_v3v3_v3(float* %58, float* %59, float* %arraydecay63), !dbg !12181
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12182
  %60 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12183
  %obmat65 = getelementptr inbounds %struct.Object, %struct.Object* %60, i32 0, i32 47, !dbg !12184
  %arraydecay66 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat65, i64 0, i64 0, !dbg !12183
  %61 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !12185
  %pose_tail = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %61, i32 0, i32 32, !dbg !12186
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %pose_tail, i64 0, i64 0, !dbg !12185
  call void @mul_v3_m4v3(float* %arraydecay64, [4 x float]* %arraydecay66, float* %arraydecay67), !dbg !12187
  %62 = load float*, float** %min_r.addr, align 8, !dbg !12188
  %63 = load float*, float** %max_r.addr, align 8, !dbg !12189
  %arraydecay68 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12190
  call void @minmax_v3v3_v3(float* %62, float* %63, float* %arraydecay68), !dbg !12191
  store i8 1, i8* %changed, align 1, !dbg !12192
  br label %if.end, !dbg !12193

if.end:                                           ; preds = %if.then58, %land.end, %for.body44
  br label %for.inc69, !dbg !12194

for.inc69:                                        ; preds = %if.end
  %64 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !12195
  %next = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %64, i32 0, i32 0, !dbg !12196
  %65 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next, align 8, !dbg !12196
  store %struct.bPoseChannel* %65, %struct.bPoseChannel** %pchan, align 8, !dbg !12197
  br label %for.cond42, !dbg !12198, !llvm.loop !12199

for.end70:                                        ; preds = %for.cond42
  br label %if.end71, !dbg !12201

if.end71:                                         ; preds = %for.end70, %sw.bb39
  br label %sw.epilog, !dbg !12202

sw.bb72:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !12203, metadata !DIExpression()), !dbg !12205
  %66 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12206
  %call73 = call %struct.Mesh* @BKE_mesh_from_object(%struct.Object* %66), !dbg !12207
  store %struct.Mesh* %call73, %struct.Mesh** %me, align 8, !dbg !12205
  %67 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !12208
  %tobool74 = icmp ne %struct.Mesh* %67, null, !dbg !12208
  br i1 %tobool74, label %if.then75, label %if.end94, !dbg !12210

if.then75:                                        ; preds = %sw.bb72
  %68 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12211
  %call76 = call %struct.BoundBox* @BKE_mesh_boundbox_get(%struct.Object* %68), !dbg !12213
  %69 = bitcast %struct.BoundBox* %bb to i8*, !dbg !12214
  %70 = bitcast %struct.BoundBox* %call76 to i8*, !dbg !12214
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %69, i8* align 4 %70, i64 104, i1 false), !dbg !12214
  store i32 0, i32* %a, align 4, !dbg !12215
  br label %for.cond77, !dbg !12217

for.cond77:                                       ; preds = %for.inc91, %if.then75
  %71 = load i32, i32* %a, align 4, !dbg !12218
  %cmp78 = icmp slt i32 %71, 8, !dbg !12220
  br i1 %cmp78, label %for.body80, label %for.end93, !dbg !12221

for.body80:                                       ; preds = %for.cond77
  %72 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12222
  %obmat81 = getelementptr inbounds %struct.Object, %struct.Object* %72, i32 0, i32 47, !dbg !12224
  %arraydecay82 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat81, i64 0, i64 0, !dbg !12222
  %vec83 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %bb, i32 0, i32 0, !dbg !12225
  %73 = load i32, i32* %a, align 4, !dbg !12226
  %idxprom84 = sext i32 %73 to i64, !dbg !12227
  %arrayidx85 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec83, i64 0, i64 %idxprom84, !dbg !12227
  %arraydecay86 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx85, i64 0, i64 0, !dbg !12227
  call void @mul_m4_v3([4 x float]* %arraydecay82, float* %arraydecay86), !dbg !12228
  %74 = load float*, float** %min_r.addr, align 8, !dbg !12229
  %75 = load float*, float** %max_r.addr, align 8, !dbg !12230
  %vec87 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %bb, i32 0, i32 0, !dbg !12231
  %76 = load i32, i32* %a, align 4, !dbg !12232
  %idxprom88 = sext i32 %76 to i64, !dbg !12233
  %arrayidx89 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec87, i64 0, i64 %idxprom88, !dbg !12233
  %arraydecay90 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx89, i64 0, i64 0, !dbg !12233
  call void @minmax_v3v3_v3(float* %74, float* %75, float* %arraydecay90), !dbg !12234
  br label %for.inc91, !dbg !12235

for.inc91:                                        ; preds = %for.body80
  %77 = load i32, i32* %a, align 4, !dbg !12236
  %inc92 = add nsw i32 %77, 1, !dbg !12236
  store i32 %inc92, i32* %a, align 4, !dbg !12236
  br label %for.cond77, !dbg !12237, !llvm.loop !12238

for.end93:                                        ; preds = %for.cond77
  store i8 1, i8* %changed, align 1, !dbg !12240
  br label %if.end94, !dbg !12241

if.end94:                                         ; preds = %for.end93, %sw.bb72
  br label %sw.epilog, !dbg !12242

sw.bb95:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %ob_min, metadata !12243, metadata !DIExpression()), !dbg !12245
  call void @llvm.dbg.declare(metadata [3 x float]* %ob_max, metadata !12246, metadata !DIExpression()), !dbg !12247
  %78 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12248
  %data96 = getelementptr inbounds %struct.Object, %struct.Object* %78, i32 0, i32 19, !dbg !12249
  %79 = load i8*, i8** %data96, align 8, !dbg !12249
  %80 = bitcast i8* %79 to %struct.MetaBall*, !dbg !12248
  %arraydecay97 = getelementptr inbounds [3 x float], [3 x float]* %ob_min, i64 0, i64 0, !dbg !12250
  %arraydecay98 = getelementptr inbounds [3 x float], [3 x float]* %ob_max, i64 0, i64 0, !dbg !12251
  %81 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12252
  %obmat99 = getelementptr inbounds %struct.Object, %struct.Object* %81, i32 0, i32 47, !dbg !12253
  %arraydecay100 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat99, i64 0, i64 0, !dbg !12252
  %call101 = call zeroext i8 @BKE_mball_minmax_ex(%struct.MetaBall* %80, float* %arraydecay97, float* %arraydecay98, [4 x float]* %arraydecay100, i16 signext 0), !dbg !12254
  store i8 %call101, i8* %changed, align 1, !dbg !12255
  %82 = load i8, i8* %changed, align 1, !dbg !12256
  %tobool102 = icmp ne i8 %82, 0, !dbg !12256
  br i1 %tobool102, label %if.then103, label %if.end106, !dbg !12258

if.then103:                                       ; preds = %sw.bb95
  %83 = load float*, float** %min_r.addr, align 8, !dbg !12259
  %84 = load float*, float** %max_r.addr, align 8, !dbg !12261
  %arraydecay104 = getelementptr inbounds [3 x float], [3 x float]* %ob_min, i64 0, i64 0, !dbg !12262
  call void @minmax_v3v3_v3(float* %83, float* %84, float* %arraydecay104), !dbg !12263
  %85 = load float*, float** %min_r.addr, align 8, !dbg !12264
  %86 = load float*, float** %max_r.addr, align 8, !dbg !12265
  %arraydecay105 = getelementptr inbounds [3 x float], [3 x float]* %ob_max, i64 0, i64 0, !dbg !12266
  call void @minmax_v3v3_v3(float* %85, float* %86, float* %arraydecay105), !dbg !12267
  br label %if.end106, !dbg !12268

if.end106:                                        ; preds = %if.then103, %sw.bb95
  br label %sw.epilog, !dbg !12269

sw.epilog:                                        ; preds = %entry, %if.end106, %if.end94, %if.end71, %for.end38, %for.end
  %87 = load i8, i8* %changed, align 1, !dbg !12270
  %conv107 = zext i8 %87 to i32, !dbg !12270
  %cmp108 = icmp eq i32 %conv107, 0, !dbg !12272
  br i1 %cmp108, label %if.then110, label %if.end138, !dbg !12273

if.then110:                                       ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata [3 x float]* %size, metadata !12274, metadata !DIExpression()), !dbg !12276
  %arraydecay111 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !12277
  %88 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12278
  %size112 = getelementptr inbounds %struct.Object, %struct.Object* %88, i32 0, i32 36, !dbg !12279
  %arraydecay113 = getelementptr inbounds [3 x float], [3 x float]* %size112, i64 0, i64 0, !dbg !12278
  call void @copy_v3_v3(float* %arraydecay111, float* %arraydecay113), !dbg !12280
  %89 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12281
  %type114 = getelementptr inbounds %struct.Object, %struct.Object* %89, i32 0, i32 3, !dbg !12283
  %90 = load i16, i16* %type114, align 8, !dbg !12283
  %conv115 = sext i16 %90 to i32, !dbg !12281
  %cmp116 = icmp eq i32 %conv115, 0, !dbg !12284
  br i1 %cmp116, label %if.then118, label %if.end120, !dbg !12285

if.then118:                                       ; preds = %if.then110
  %arraydecay119 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !12286
  %91 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12288
  %empty_drawsize = getelementptr inbounds %struct.Object, %struct.Object* %91, i32 0, i32 89, !dbg !12289
  %92 = load float, float* %empty_drawsize, align 8, !dbg !12289
  call void @mul_v3_fl(float* %arraydecay119, float %92), !dbg !12290
  br label %if.end120, !dbg !12291

if.end120:                                        ; preds = %if.then118, %if.then110
  %93 = load float*, float** %min_r.addr, align 8, !dbg !12292
  %94 = load float*, float** %max_r.addr, align 8, !dbg !12293
  %95 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12294
  %obmat121 = getelementptr inbounds %struct.Object, %struct.Object* %95, i32 0, i32 47, !dbg !12295
  %arrayidx122 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat121, i64 0, i64 3, !dbg !12294
  %arraydecay123 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx122, i64 0, i64 0, !dbg !12294
  call void @minmax_v3v3_v3(float* %93, float* %94, float* %arraydecay123), !dbg !12296
  %arraydecay124 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12297
  %96 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12298
  %obmat125 = getelementptr inbounds %struct.Object, %struct.Object* %96, i32 0, i32 47, !dbg !12299
  %arrayidx126 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat125, i64 0, i64 3, !dbg !12298
  %arraydecay127 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx126, i64 0, i64 0, !dbg !12298
  call void @copy_v3_v3(float* %arraydecay124, float* %arraydecay127), !dbg !12300
  %arraydecay128 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12301
  %arraydecay129 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !12302
  call void @add_v3_v3(float* %arraydecay128, float* %arraydecay129), !dbg !12303
  %97 = load float*, float** %min_r.addr, align 8, !dbg !12304
  %98 = load float*, float** %max_r.addr, align 8, !dbg !12305
  %arraydecay130 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12306
  call void @minmax_v3v3_v3(float* %97, float* %98, float* %arraydecay130), !dbg !12307
  %arraydecay131 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12308
  %99 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12309
  %obmat132 = getelementptr inbounds %struct.Object, %struct.Object* %99, i32 0, i32 47, !dbg !12310
  %arrayidx133 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat132, i64 0, i64 3, !dbg !12309
  %arraydecay134 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx133, i64 0, i64 0, !dbg !12309
  call void @copy_v3_v3(float* %arraydecay131, float* %arraydecay134), !dbg !12311
  %arraydecay135 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12312
  %arraydecay136 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !12313
  call void @sub_v3_v3(float* %arraydecay135, float* %arraydecay136), !dbg !12314
  %100 = load float*, float** %min_r.addr, align 8, !dbg !12315
  %101 = load float*, float** %max_r.addr, align 8, !dbg !12316
  %arraydecay137 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12317
  call void @minmax_v3v3_v3(float* %100, float* %101, float* %arraydecay137), !dbg !12318
  br label %if.end138, !dbg !12319

if.end138:                                        ; preds = %if.end120, %sw.epilog
  ret void, !dbg !12320
}

declare dso_local void @mul_m4_v3([4 x float]*, float*) #3

declare dso_local void @minmax_v3v3_v3(float*, float*, float*) #3

declare dso_local void @mul_v3_m4v3(float*, [4 x float]*, float*) #3

declare dso_local %struct.Mesh* @BKE_mesh_from_object(%struct.Object*) #3

declare dso_local zeroext i8 @BKE_mball_minmax_ex(%struct.MetaBall*, float*, float*, [4 x float]*, i16 signext) #3

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !12321 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !12324, metadata !DIExpression()), !dbg !12325
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !12326, metadata !DIExpression()), !dbg !12327
  %0 = load float, float* %f.addr, align 4, !dbg !12328
  %1 = load float*, float** %r.addr, align 8, !dbg !12329
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !12329
  %2 = load float, float* %arrayidx, align 4, !dbg !12330
  %mul = fmul float %2, %0, !dbg !12330
  store float %mul, float* %arrayidx, align 4, !dbg !12330
  %3 = load float, float* %f.addr, align 4, !dbg !12331
  %4 = load float*, float** %r.addr, align 8, !dbg !12332
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !12332
  %5 = load float, float* %arrayidx1, align 4, !dbg !12333
  %mul2 = fmul float %5, %3, !dbg !12333
  store float %mul2, float* %arrayidx1, align 4, !dbg !12333
  %6 = load float, float* %f.addr, align 4, !dbg !12334
  %7 = load float*, float** %r.addr, align 8, !dbg !12335
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !12335
  %8 = load float, float* %arrayidx3, align 4, !dbg !12336
  %mul4 = fmul float %8, %6, !dbg !12336
  store float %mul4, float* %arrayidx3, align 4, !dbg !12336
  ret void, !dbg !12337
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !12338 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !12339, metadata !DIExpression()), !dbg !12340
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !12341, metadata !DIExpression()), !dbg !12342
  %0 = load float*, float** %a.addr, align 8, !dbg !12343
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !12343
  %1 = load float, float* %arrayidx, align 4, !dbg !12343
  %2 = load float*, float** %r.addr, align 8, !dbg !12344
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !12344
  %3 = load float, float* %arrayidx1, align 4, !dbg !12345
  %add = fadd float %3, %1, !dbg !12345
  store float %add, float* %arrayidx1, align 4, !dbg !12345
  %4 = load float*, float** %a.addr, align 8, !dbg !12346
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !12346
  %5 = load float, float* %arrayidx2, align 4, !dbg !12346
  %6 = load float*, float** %r.addr, align 8, !dbg !12347
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !12347
  %7 = load float, float* %arrayidx3, align 4, !dbg !12348
  %add4 = fadd float %7, %5, !dbg !12348
  store float %add4, float* %arrayidx3, align 4, !dbg !12348
  %8 = load float*, float** %a.addr, align 8, !dbg !12349
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !12349
  %9 = load float, float* %arrayidx5, align 4, !dbg !12349
  %10 = load float*, float** %r.addr, align 8, !dbg !12350
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !12350
  %11 = load float, float* %arrayidx6, align 4, !dbg !12351
  %add7 = fadd float %11, %9, !dbg !12351
  store float %add7, float* %arrayidx6, align 4, !dbg !12351
  ret void, !dbg !12352
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_empty_draw_type_set(%struct.Object* %ob, i32 %value) #0 !dbg !12353 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %value.addr = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !12357, metadata !DIExpression()), !dbg !12358
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !12359, metadata !DIExpression()), !dbg !12360
  %0 = load i32, i32* %value.addr, align 4, !dbg !12361
  %conv = trunc i32 %0 to i8, !dbg !12361
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12362
  %empty_drawtype = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 88, !dbg !12363
  store i8 %conv, i8* %empty_drawtype, align 1, !dbg !12364
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12365
  %type = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !12367
  %3 = load i16, i16* %type, align 8, !dbg !12367
  %conv1 = sext i16 %3 to i32, !dbg !12365
  %cmp = icmp eq i32 %conv1, 0, !dbg !12368
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !12369

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12370
  %empty_drawtype3 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 88, !dbg !12371
  %5 = load i8, i8* %empty_drawtype3, align 1, !dbg !12371
  %conv4 = zext i8 %5 to i32, !dbg !12370
  %cmp5 = icmp eq i32 %conv4, 8, !dbg !12372
  br i1 %cmp5, label %if.then, label %if.else, !dbg !12373

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12374
  %iuser = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 131, !dbg !12377
  %7 = load %struct.ImageUser*, %struct.ImageUser** %iuser, align 8, !dbg !12377
  %tobool = icmp ne %struct.ImageUser* %7, null, !dbg !12374
  br i1 %tobool, label %if.end, label %if.then7, !dbg !12378

if.then7:                                         ; preds = %if.then
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !12379
  %call = call i8* %8(i64 40, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0)), !dbg !12379
  %9 = bitcast i8* %call to %struct.ImageUser*, !dbg !12379
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12381
  %iuser8 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 131, !dbg !12382
  store %struct.ImageUser* %9, %struct.ImageUser** %iuser8, align 8, !dbg !12383
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12384
  %iuser9 = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 131, !dbg !12385
  %12 = load %struct.ImageUser*, %struct.ImageUser** %iuser9, align 8, !dbg !12385
  %ok = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %12, i32 0, i32 7, !dbg !12386
  store i8 1, i8* %ok, align 2, !dbg !12387
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12388
  %iuser10 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 131, !dbg !12389
  %14 = load %struct.ImageUser*, %struct.ImageUser** %iuser10, align 8, !dbg !12389
  %frames = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %14, i32 0, i32 2, !dbg !12390
  store i32 100, i32* %frames, align 4, !dbg !12391
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12392
  %iuser11 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 131, !dbg !12393
  %16 = load %struct.ImageUser*, %struct.ImageUser** %iuser11, align 8, !dbg !12393
  %sfra = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %16, i32 0, i32 4, !dbg !12394
  store i32 1, i32* %sfra, align 4, !dbg !12395
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12396
  %iuser12 = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 131, !dbg !12397
  %18 = load %struct.ImageUser*, %struct.ImageUser** %iuser12, align 8, !dbg !12397
  %fie_ima = getelementptr inbounds %struct.ImageUser, %struct.ImageUser* %18, i32 0, i32 5, !dbg !12398
  store i8 2, i8* %fie_ima, align 8, !dbg !12399
  br label %if.end, !dbg !12400

if.end:                                           ; preds = %if.then7, %if.then
  br label %if.end19, !dbg !12401

if.else:                                          ; preds = %land.lhs.true, %entry
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12402
  %iuser13 = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 131, !dbg !12405
  %20 = load %struct.ImageUser*, %struct.ImageUser** %iuser13, align 8, !dbg !12405
  %tobool14 = icmp ne %struct.ImageUser* %20, null, !dbg !12402
  br i1 %tobool14, label %if.then15, label %if.end18, !dbg !12406

if.then15:                                        ; preds = %if.else
  %21 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12407
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12409
  %iuser16 = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 131, !dbg !12410
  %23 = load %struct.ImageUser*, %struct.ImageUser** %iuser16, align 8, !dbg !12410
  %24 = bitcast %struct.ImageUser* %23 to i8*, !dbg !12409
  call void %21(i8* %24), !dbg !12407
  %25 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12411
  %iuser17 = getelementptr inbounds %struct.Object, %struct.Object* %25, i32 0, i32 131, !dbg !12412
  store %struct.ImageUser* null, %struct.ImageUser** %iuser17, align 8, !dbg !12413
  br label %if.end18, !dbg !12414

if.end18:                                         ; preds = %if.then15, %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end
  ret void, !dbg !12415
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_object_minmax_dupli(%struct.Scene* %scene, %struct.Object* %ob, float* %r_min, float* %r_max, i8 zeroext %use_hidden) #0 !dbg !12416 {
entry:
  %retval = alloca i8, align 1
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %r_min.addr = alloca float*, align 8
  %r_max.addr = alloca float*, align 8
  %use_hidden.addr = alloca i8, align 1
  %ok = alloca i8, align 1
  %lb = alloca %struct.ListBase*, align 8
  %dob = alloca %struct.DupliObject*, align 8
  %bb = alloca %struct.BoundBox*, align 8
  %i = alloca i32, align 4
  %vec = alloca [3 x float], align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !12419, metadata !DIExpression()), !dbg !12420
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !12421, metadata !DIExpression()), !dbg !12422
  store float* %r_min, float** %r_min.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_min.addr, metadata !12423, metadata !DIExpression()), !dbg !12424
  store float* %r_max, float** %r_max.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_max.addr, metadata !12425, metadata !DIExpression()), !dbg !12426
  store i8 %use_hidden, i8* %use_hidden.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_hidden.addr, metadata !12427, metadata !DIExpression()), !dbg !12428
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !12429, metadata !DIExpression()), !dbg !12430
  store i8 0, i8* %ok, align 1, !dbg !12430
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12431
  %transflag = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 55, !dbg !12433
  %1 = load i16, i16* %transflag, align 8, !dbg !12433
  %conv = sext i16 %1 to i32, !dbg !12431
  %and = and i32 %conv, 2840, !dbg !12434
  %cmp = icmp eq i32 %and, 0, !dbg !12435
  br i1 %cmp, label %if.then, label %if.else, !dbg !12436

if.then:                                          ; preds = %entry
  %2 = load i8, i8* %ok, align 1, !dbg !12437
  store i8 %2, i8* %retval, align 1, !dbg !12439
  br label %return, !dbg !12439

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb, metadata !12440, metadata !DIExpression()), !dbg !12442
  call void @llvm.dbg.declare(metadata %struct.DupliObject** %dob, metadata !12443, metadata !DIExpression()), !dbg !12461
  %3 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !12462
  %eval_ctx = getelementptr inbounds %struct.Main, %struct.Main* %3, i32 0, i32 46, !dbg !12463
  %4 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !12463
  %5 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12464
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12465
  %call = call %struct.ListBase* @object_duplilist(%struct.EvaluationContext* %4, %struct.Scene* %5, %struct.Object* %6), !dbg !12466
  store %struct.ListBase* %call, %struct.ListBase** %lb, align 8, !dbg !12467
  %7 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !12468
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %7, i32 0, i32 0, !dbg !12470
  %8 = load i8*, i8** %first, align 8, !dbg !12470
  %9 = bitcast i8* %8 to %struct.DupliObject*, !dbg !12468
  store %struct.DupliObject* %9, %struct.DupliObject** %dob, align 8, !dbg !12471
  br label %for.cond, !dbg !12472

for.cond:                                         ; preds = %for.inc23, %if.else
  %10 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !12473
  %tobool = icmp ne %struct.DupliObject* %10, null, !dbg !12475
  br i1 %tobool, label %for.body, label %for.end24, !dbg !12475

for.body:                                         ; preds = %for.cond
  %11 = load i8, i8* %use_hidden.addr, align 1, !dbg !12476
  %conv2 = zext i8 %11 to i32, !dbg !12476
  %cmp3 = icmp eq i32 %conv2, 0, !dbg !12479
  br i1 %cmp3, label %land.lhs.true, label %if.else9, !dbg !12480

land.lhs.true:                                    ; preds = %for.body
  %12 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !12481
  %no_draw = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %12, i32 0, i32 7, !dbg !12482
  %13 = load i8, i8* %no_draw, align 2, !dbg !12482
  %conv5 = zext i8 %13 to i32, !dbg !12481
  %cmp6 = icmp ne i32 %conv5, 0, !dbg !12483
  br i1 %cmp6, label %if.then8, label %if.else9, !dbg !12484

if.then8:                                         ; preds = %land.lhs.true
  br label %if.end22, !dbg !12485

if.else9:                                         ; preds = %land.lhs.true, %for.body
  call void @llvm.dbg.declare(metadata %struct.BoundBox** %bb, metadata !12487, metadata !DIExpression()), !dbg !12489
  %14 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !12490
  %ob10 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %14, i32 0, i32 2, !dbg !12491
  %15 = load %struct.Object*, %struct.Object** %ob10, align 8, !dbg !12491
  %call11 = call %struct.BoundBox* @BKE_object_boundbox_get(%struct.Object* %15), !dbg !12492
  store %struct.BoundBox* %call11, %struct.BoundBox** %bb, align 8, !dbg !12489
  %16 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !12493
  %tobool12 = icmp ne %struct.BoundBox* %16, null, !dbg !12493
  br i1 %tobool12, label %if.then13, label %if.end, !dbg !12495

if.then13:                                        ; preds = %if.else9
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12496, metadata !DIExpression()), !dbg !12498
  store i32 0, i32* %i, align 4, !dbg !12499
  br label %for.cond14, !dbg !12501

for.cond14:                                       ; preds = %for.inc, %if.then13
  %17 = load i32, i32* %i, align 4, !dbg !12502
  %cmp15 = icmp slt i32 %17, 8, !dbg !12504
  br i1 %cmp15, label %for.body17, label %for.end, !dbg !12505

for.body17:                                       ; preds = %for.cond14
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !12506, metadata !DIExpression()), !dbg !12508
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12509
  %18 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !12510
  %mat = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %18, i32 0, i32 3, !dbg !12511
  %arraydecay18 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !12510
  %19 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !12512
  %vec19 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %19, i32 0, i32 0, !dbg !12513
  %20 = load i32, i32* %i, align 4, !dbg !12514
  %idxprom = sext i32 %20 to i64, !dbg !12512
  %arrayidx = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec19, i64 0, i64 %idxprom, !dbg !12512
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !12512
  call void @mul_v3_m4v3(float* %arraydecay, [4 x float]* %arraydecay18, float* %arraydecay20), !dbg !12515
  %21 = load float*, float** %r_min.addr, align 8, !dbg !12516
  %22 = load float*, float** %r_max.addr, align 8, !dbg !12517
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !12518
  call void @minmax_v3v3_v3(float* %21, float* %22, float* %arraydecay21), !dbg !12519
  br label %for.inc, !dbg !12520

for.inc:                                          ; preds = %for.body17
  %23 = load i32, i32* %i, align 4, !dbg !12521
  %inc = add nsw i32 %23, 1, !dbg !12521
  store i32 %inc, i32* %i, align 4, !dbg !12521
  br label %for.cond14, !dbg !12522, !llvm.loop !12523

for.end:                                          ; preds = %for.cond14
  store i8 1, i8* %ok, align 1, !dbg !12525
  br label %if.end, !dbg !12526

if.end:                                           ; preds = %for.end, %if.else9
  br label %if.end22

if.end22:                                         ; preds = %if.end, %if.then8
  br label %for.inc23, !dbg !12527

for.inc23:                                        ; preds = %if.end22
  %24 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !12528
  %next = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %24, i32 0, i32 0, !dbg !12529
  %25 = load %struct.DupliObject*, %struct.DupliObject** %next, align 8, !dbg !12529
  store %struct.DupliObject* %25, %struct.DupliObject** %dob, align 8, !dbg !12530
  br label %for.cond, !dbg !12531, !llvm.loop !12532

for.end24:                                        ; preds = %for.cond
  %26 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !12534
  call void @free_object_duplilist(%struct.ListBase* %26), !dbg !12535
  br label %if.end25

if.end25:                                         ; preds = %for.end24
  %27 = load i8, i8* %ok, align 1, !dbg !12536
  store i8 %27, i8* %retval, align 1, !dbg !12537
  br label %return, !dbg !12537

return:                                           ; preds = %if.end25, %if.then
  %28 = load i8, i8* %retval, align 1, !dbg !12538
  ret i8 %28, !dbg !12538
}

declare dso_local %struct.ListBase* @object_duplilist(%struct.EvaluationContext*, %struct.Scene*, %struct.Object*) #3

declare dso_local void @free_object_duplilist(%struct.ListBase*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_foreach_display_point(%struct.Object* %ob, [4 x float]* %obmat, void (float*, i8*)* %func_cb, i8* %user_data) #0 !dbg !12539 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %obmat.addr = alloca [4 x float]*, align 8
  %func_cb.addr = alloca void (float*, i8*)*, align 8
  %user_data.addr = alloca i8*, align 8
  %co = alloca [3 x float], align 4
  %dm = alloca %struct.DerivedMesh*, align 8
  %mv = alloca %struct.MVert*, align 8
  %totvert = alloca i32, align 4
  %i = alloca i32, align 4
  %dl = alloca %struct.DispList*, align 8
  %v3 = alloca float*, align 8
  %totvert16 = alloca i32, align 4
  %i17 = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !12545, metadata !DIExpression()), !dbg !12546
  store [4 x float]* %obmat, [4 x float]** %obmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %obmat.addr, metadata !12547, metadata !DIExpression()), !dbg !12548
  store void (float*, i8*)* %func_cb, void (float*, i8*)** %func_cb.addr, align 8
  call void @llvm.dbg.declare(metadata void (float*, i8*)** %func_cb.addr, metadata !12549, metadata !DIExpression()), !dbg !12550
  store i8* %user_data, i8** %user_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user_data.addr, metadata !12551, metadata !DIExpression()), !dbg !12552
  call void @llvm.dbg.declare(metadata [3 x float]* %co, metadata !12553, metadata !DIExpression()), !dbg !12554
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12555
  %derivedFinal = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 120, !dbg !12557
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !12557
  %tobool = icmp ne %struct.DerivedMesh* %1, null, !dbg !12555
  br i1 %tobool, label %if.then, label %if.else, !dbg !12558

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !12559, metadata !DIExpression()), !dbg !12561
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12562
  %derivedFinal1 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 120, !dbg !12563
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal1, align 8, !dbg !12563
  store %struct.DerivedMesh* %3, %struct.DerivedMesh** %dm, align 8, !dbg !12561
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv, metadata !12564, metadata !DIExpression()), !dbg !12565
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !12566
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 31, !dbg !12567
  %5 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !12567
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !12568
  %call = call %struct.MVert* %5(%struct.DerivedMesh* %6), !dbg !12566
  store %struct.MVert* %call, %struct.MVert** %mv, align 8, !dbg !12565
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !12569, metadata !DIExpression()), !dbg !12570
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !12571
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 23, !dbg !12572
  %8 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !12572
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !12573
  %call2 = call i32 %8(%struct.DerivedMesh* %9), !dbg !12571
  store i32 %call2, i32* %totvert, align 4, !dbg !12570
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12574, metadata !DIExpression()), !dbg !12575
  store i32 0, i32* %i, align 4, !dbg !12576
  br label %for.cond, !dbg !12578

for.cond:                                         ; preds = %for.inc, %if.then
  %10 = load i32, i32* %i, align 4, !dbg !12579
  %11 = load i32, i32* %totvert, align 4, !dbg !12581
  %cmp = icmp slt i32 %10, %11, !dbg !12582
  br i1 %cmp, label %for.body, label %for.end, !dbg !12583

for.body:                                         ; preds = %for.cond
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !12584
  %12 = load [4 x float]*, [4 x float]** %obmat.addr, align 8, !dbg !12586
  %13 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !12587
  %co3 = getelementptr inbounds %struct.MVert, %struct.MVert* %13, i32 0, i32 0, !dbg !12588
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %co3, i64 0, i64 0, !dbg !12587
  call void @mul_v3_m4v3(float* %arraydecay, [4 x float]* %12, float* %arraydecay4), !dbg !12589
  %14 = load void (float*, i8*)*, void (float*, i8*)** %func_cb.addr, align 8, !dbg !12590
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !12591
  %15 = load i8*, i8** %user_data.addr, align 8, !dbg !12592
  call void %14(float* %arraydecay5, i8* %15), !dbg !12590
  br label %for.inc, !dbg !12593

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !12594
  %inc = add nsw i32 %16, 1, !dbg !12594
  store i32 %inc, i32* %i, align 4, !dbg !12594
  %17 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !12595
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %17, i32 1, !dbg !12595
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mv, align 8, !dbg !12595
  br label %for.cond, !dbg !12596, !llvm.loop !12597

for.end:                                          ; preds = %for.cond
  br label %if.end28, !dbg !12599

if.else:                                          ; preds = %entry
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12600
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 118, !dbg !12602
  %19 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !12602
  %tobool6 = icmp ne %struct.CurveCache* %19, null, !dbg !12600
  br i1 %tobool6, label %land.lhs.true, label %if.end, !dbg !12603

land.lhs.true:                                    ; preds = %if.else
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12604
  %curve_cache7 = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 118, !dbg !12605
  %21 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache7, align 8, !dbg !12605
  %disp = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %21, i32 0, i32 0, !dbg !12606
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %disp, i32 0, i32 0, !dbg !12607
  %22 = load i8*, i8** %first, align 8, !dbg !12607
  %tobool8 = icmp ne i8* %22, null, !dbg !12604
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !12608

if.then9:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !12609, metadata !DIExpression()), !dbg !12631
  %23 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12632
  %curve_cache10 = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 118, !dbg !12634
  %24 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache10, align 8, !dbg !12634
  %disp11 = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %24, i32 0, i32 0, !dbg !12635
  %first12 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %disp11, i32 0, i32 0, !dbg !12636
  %25 = load i8*, i8** %first12, align 8, !dbg !12636
  %26 = bitcast i8* %25 to %struct.DispList*, !dbg !12632
  store %struct.DispList* %26, %struct.DispList** %dl, align 8, !dbg !12637
  br label %for.cond13, !dbg !12638

for.cond13:                                       ; preds = %for.inc26, %if.then9
  %27 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !12639
  %tobool14 = icmp ne %struct.DispList* %27, null, !dbg !12641
  br i1 %tobool14, label %for.body15, label %for.end27, !dbg !12641

for.body15:                                       ; preds = %for.cond13
  call void @llvm.dbg.declare(metadata float** %v3, metadata !12642, metadata !DIExpression()), !dbg !12644
  %28 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !12645
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %28, i32 0, i32 8, !dbg !12646
  %29 = load float*, float** %verts, align 8, !dbg !12646
  store float* %29, float** %v3, align 8, !dbg !12644
  call void @llvm.dbg.declare(metadata i32* %totvert16, metadata !12647, metadata !DIExpression()), !dbg !12648
  %30 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !12649
  %nr = getelementptr inbounds %struct.DispList, %struct.DispList* %30, i32 0, i32 5, !dbg !12650
  %31 = load i32, i32* %nr, align 8, !dbg !12650
  store i32 %31, i32* %totvert16, align 4, !dbg !12648
  call void @llvm.dbg.declare(metadata i32* %i17, metadata !12651, metadata !DIExpression()), !dbg !12652
  store i32 0, i32* %i17, align 4, !dbg !12653
  br label %for.cond18, !dbg !12655

for.cond18:                                       ; preds = %for.inc23, %for.body15
  %32 = load i32, i32* %i17, align 4, !dbg !12656
  %33 = load i32, i32* %totvert16, align 4, !dbg !12658
  %cmp19 = icmp slt i32 %32, %33, !dbg !12659
  br i1 %cmp19, label %for.body20, label %for.end25, !dbg !12660

for.body20:                                       ; preds = %for.cond18
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !12661
  %34 = load [4 x float]*, [4 x float]** %obmat.addr, align 8, !dbg !12663
  %35 = load float*, float** %v3, align 8, !dbg !12664
  call void @mul_v3_m4v3(float* %arraydecay21, [4 x float]* %34, float* %35), !dbg !12665
  %36 = load void (float*, i8*)*, void (float*, i8*)** %func_cb.addr, align 8, !dbg !12666
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !12667
  %37 = load i8*, i8** %user_data.addr, align 8, !dbg !12668
  call void %36(float* %arraydecay22, i8* %37), !dbg !12666
  br label %for.inc23, !dbg !12669

for.inc23:                                        ; preds = %for.body20
  %38 = load i32, i32* %i17, align 4, !dbg !12670
  %inc24 = add nsw i32 %38, 1, !dbg !12670
  store i32 %inc24, i32* %i17, align 4, !dbg !12670
  %39 = load float*, float** %v3, align 8, !dbg !12671
  %add.ptr = getelementptr inbounds float, float* %39, i64 3, !dbg !12671
  store float* %add.ptr, float** %v3, align 8, !dbg !12671
  br label %for.cond18, !dbg !12672, !llvm.loop !12673

for.end25:                                        ; preds = %for.cond18
  br label %for.inc26, !dbg !12675

for.inc26:                                        ; preds = %for.end25
  %40 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !12676
  %next = getelementptr inbounds %struct.DispList, %struct.DispList* %40, i32 0, i32 0, !dbg !12677
  %41 = load %struct.DispList*, %struct.DispList** %next, align 8, !dbg !12677
  store %struct.DispList* %41, %struct.DispList** %dl, align 8, !dbg !12678
  br label %for.cond13, !dbg !12679, !llvm.loop !12680

for.end27:                                        ; preds = %for.cond13
  br label %if.end, !dbg !12682

if.end:                                           ; preds = %for.end27, %land.lhs.true, %if.else
  br label %if.end28

if.end28:                                         ; preds = %if.end, %for.end
  ret void, !dbg !12683
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_scene_foreach_display_point(%struct.Scene* %scene, %struct.View3D* %v3d, i16 signext %flag, void (float*, i8*)* %func_cb, i8* %user_data) #0 !dbg !12684 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %v3d.addr = alloca %struct.View3D*, align 8
  %flag.addr = alloca i16, align 2
  %func_cb.addr = alloca void (float*, i8*)*, align 8
  %user_data.addr = alloca i8*, align 8
  %base = alloca %struct.Base*, align 8
  %ob = alloca %struct.Object*, align 8
  %lb = alloca %struct.ListBase*, align 8
  %dob = alloca %struct.DupliObject*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !12687, metadata !DIExpression()), !dbg !12688
  store %struct.View3D* %v3d, %struct.View3D** %v3d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d.addr, metadata !12689, metadata !DIExpression()), !dbg !12690
  store i16 %flag, i16* %flag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %flag.addr, metadata !12691, metadata !DIExpression()), !dbg !12692
  store void (float*, i8*)* %func_cb, void (float*, i8*)** %func_cb.addr, align 8
  call void @llvm.dbg.declare(metadata void (float*, i8*)** %func_cb.addr, metadata !12693, metadata !DIExpression()), !dbg !12694
  store i8* %user_data, i8** %user_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user_data.addr, metadata !12695, metadata !DIExpression()), !dbg !12696
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !12697, metadata !DIExpression()), !dbg !12698
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !12699, metadata !DIExpression()), !dbg !12700
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12701
  %base1 = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 5, !dbg !12701
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base1, i32 0, i32 0, !dbg !12701
  %1 = load i8*, i8** %first, align 8, !dbg !12701
  %2 = bitcast i8* %1 to %struct.Base*, !dbg !12701
  store %struct.Base* %2, %struct.Base** %base, align 8, !dbg !12703
  br label %for.cond, !dbg !12704

for.cond:                                         ; preds = %for.inc33, %entry
  %3 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !12705
  %tobool = icmp ne %struct.Base* %3, null, !dbg !12707
  br i1 %tobool, label %for.body, label %for.end35, !dbg !12707

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !12708
  %lay = getelementptr inbounds %struct.Base, %struct.Base* %4, i32 0, i32 2, !dbg !12708
  %5 = load i32, i32* %lay, align 8, !dbg !12708
  %6 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !12708
  %tobool2 = icmp ne %struct.View3D* %6, null, !dbg !12708
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !12708

cond.true:                                        ; preds = %for.body
  %7 = load %struct.View3D*, %struct.View3D** %v3d.addr, align 8, !dbg !12708
  %lay3 = getelementptr inbounds %struct.View3D, %struct.View3D* %7, i32 0, i32 22, !dbg !12708
  %8 = load i32, i32* %lay3, align 8, !dbg !12708
  br label %cond.end, !dbg !12708

cond.false:                                       ; preds = %for.body
  %9 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12708
  %lay4 = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 12, !dbg !12708
  %10 = load i32, i32* %lay4, align 8, !dbg !12708
  br label %cond.end, !dbg !12708

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ %10, %cond.false ], !dbg !12708
  %and = and i32 %5, %cond, !dbg !12708
  %tobool5 = icmp ne i32 %and, 0, !dbg !12708
  br i1 %tobool5, label %land.lhs.true, label %if.end32, !dbg !12708

land.lhs.true:                                    ; preds = %cond.end
  %11 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !12708
  %object = getelementptr inbounds %struct.Base, %struct.Base* %11, i32 0, i32 7, !dbg !12708
  %12 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !12708
  %restrictflag = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 102, !dbg !12708
  %13 = load i8, i8* %restrictflag, align 8, !dbg !12708
  %conv = zext i8 %13 to i32, !dbg !12708
  %and6 = and i32 %conv, 1, !dbg !12708
  %cmp = icmp eq i32 %and6, 0, !dbg !12708
  br i1 %cmp, label %land.lhs.true8, label %if.end32, !dbg !12711

land.lhs.true8:                                   ; preds = %land.lhs.true
  %14 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !12712
  %flag9 = getelementptr inbounds %struct.Base, %struct.Base* %14, i32 0, i32 4, !dbg !12713
  %15 = load i32, i32* %flag9, align 8, !dbg !12713
  %16 = load i16, i16* %flag.addr, align 2, !dbg !12714
  %conv10 = sext i16 %16 to i32, !dbg !12714
  %and11 = and i32 %15, %conv10, !dbg !12715
  %17 = load i16, i16* %flag.addr, align 2, !dbg !12716
  %conv12 = sext i16 %17 to i32, !dbg !12716
  %cmp13 = icmp eq i32 %and11, %conv12, !dbg !12717
  br i1 %cmp13, label %if.then, label %if.end32, !dbg !12718

if.then:                                          ; preds = %land.lhs.true8
  %18 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !12719
  %object15 = getelementptr inbounds %struct.Base, %struct.Base* %18, i32 0, i32 7, !dbg !12721
  %19 = load %struct.Object*, %struct.Object** %object15, align 8, !dbg !12721
  store %struct.Object* %19, %struct.Object** %ob, align 8, !dbg !12722
  %20 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12723
  %transflag = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 55, !dbg !12725
  %21 = load i16, i16* %transflag, align 8, !dbg !12725
  %conv16 = sext i16 %21 to i32, !dbg !12723
  %and17 = and i32 %conv16, 2840, !dbg !12726
  %cmp18 = icmp eq i32 %and17, 0, !dbg !12727
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !12728

if.then20:                                        ; preds = %if.then
  %22 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12729
  %23 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12731
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 47, !dbg !12732
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !12731
  %24 = load void (float*, i8*)*, void (float*, i8*)** %func_cb.addr, align 8, !dbg !12733
  %25 = load i8*, i8** %user_data.addr, align 8, !dbg !12734
  call void @BKE_object_foreach_display_point(%struct.Object* %22, [4 x float]* %arraydecay, void (float*, i8*)* %24, i8* %25), !dbg !12735
  br label %if.end31, !dbg !12736

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb, metadata !12737, metadata !DIExpression()), !dbg !12739
  call void @llvm.dbg.declare(metadata %struct.DupliObject** %dob, metadata !12740, metadata !DIExpression()), !dbg !12741
  %26 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !12742
  %eval_ctx = getelementptr inbounds %struct.Main, %struct.Main* %26, i32 0, i32 46, !dbg !12743
  %27 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !12743
  %28 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12744
  %29 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12745
  %call = call %struct.ListBase* @object_duplilist(%struct.EvaluationContext* %27, %struct.Scene* %28, %struct.Object* %29), !dbg !12746
  store %struct.ListBase* %call, %struct.ListBase** %lb, align 8, !dbg !12747
  %30 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !12748
  %first21 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %30, i32 0, i32 0, !dbg !12750
  %31 = load i8*, i8** %first21, align 8, !dbg !12750
  %32 = bitcast i8* %31 to %struct.DupliObject*, !dbg !12748
  store %struct.DupliObject* %32, %struct.DupliObject** %dob, align 8, !dbg !12751
  br label %for.cond22, !dbg !12752

for.cond22:                                       ; preds = %for.inc, %if.else
  %33 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !12753
  %tobool23 = icmp ne %struct.DupliObject* %33, null, !dbg !12755
  br i1 %tobool23, label %for.body24, label %for.end, !dbg !12755

for.body24:                                       ; preds = %for.cond22
  %34 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !12756
  %no_draw = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %34, i32 0, i32 7, !dbg !12759
  %35 = load i8, i8* %no_draw, align 2, !dbg !12759
  %conv25 = zext i8 %35 to i32, !dbg !12756
  %cmp26 = icmp eq i32 %conv25, 0, !dbg !12760
  br i1 %cmp26, label %if.then28, label %if.end, !dbg !12761

if.then28:                                        ; preds = %for.body24
  %36 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !12762
  %ob29 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %36, i32 0, i32 2, !dbg !12764
  %37 = load %struct.Object*, %struct.Object** %ob29, align 8, !dbg !12764
  %38 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !12765
  %mat = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %38, i32 0, i32 3, !dbg !12766
  %arraydecay30 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !12765
  %39 = load void (float*, i8*)*, void (float*, i8*)** %func_cb.addr, align 8, !dbg !12767
  %40 = load i8*, i8** %user_data.addr, align 8, !dbg !12768
  call void @BKE_object_foreach_display_point(%struct.Object* %37, [4 x float]* %arraydecay30, void (float*, i8*)* %39, i8* %40), !dbg !12769
  br label %if.end, !dbg !12770

if.end:                                           ; preds = %if.then28, %for.body24
  br label %for.inc, !dbg !12771

for.inc:                                          ; preds = %if.end
  %41 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !12772
  %next = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %41, i32 0, i32 0, !dbg !12773
  %42 = load %struct.DupliObject*, %struct.DupliObject** %next, align 8, !dbg !12773
  store %struct.DupliObject* %42, %struct.DupliObject** %dob, align 8, !dbg !12774
  br label %for.cond22, !dbg !12775, !llvm.loop !12776

for.end:                                          ; preds = %for.cond22
  %43 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !12778
  call void @free_object_duplilist(%struct.ListBase* %43), !dbg !12779
  br label %if.end31

if.end31:                                         ; preds = %for.end, %if.then20
  br label %if.end32, !dbg !12780

if.end32:                                         ; preds = %if.end31, %land.lhs.true8, %land.lhs.true, %cond.end
  br label %for.inc33, !dbg !12781

for.inc33:                                        ; preds = %if.end32
  %44 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !12782
  %next34 = getelementptr inbounds %struct.Base, %struct.Base* %44, i32 0, i32 0, !dbg !12783
  %45 = load %struct.Base*, %struct.Base** %next34, align 8, !dbg !12783
  store %struct.Base* %45, %struct.Base** %base, align 8, !dbg !12784
  br label %for.cond, !dbg !12785, !llvm.loop !12786

for.end35:                                        ; preds = %for.cond
  ret void, !dbg !12788
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BKE_object_tfm_backup(%struct.Object* %ob) #0 !dbg !12789 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %obtfm = alloca %struct.ObTfmBack*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !12792, metadata !DIExpression()), !dbg !12793
  call void @llvm.dbg.declare(metadata %struct.ObTfmBack** %obtfm, metadata !12794, metadata !DIExpression()), !dbg !12795
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !12796
  %call = call i8* %0(i64 404, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0)), !dbg !12796
  %1 = bitcast i8* %call to %struct.ObTfmBack*, !dbg !12796
  store %struct.ObTfmBack* %1, %struct.ObTfmBack** %obtfm, align 8, !dbg !12795
  %2 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12797
  %loc = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %2, i32 0, i32 0, !dbg !12798
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !12797
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12799
  %loc1 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 33, !dbg !12800
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %loc1, i64 0, i64 0, !dbg !12799
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay2), !dbg !12801
  %4 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12802
  %dloc = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %4, i32 0, i32 1, !dbg !12803
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %dloc, i64 0, i64 0, !dbg !12802
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12804
  %dloc4 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 34, !dbg !12805
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %dloc4, i64 0, i64 0, !dbg !12804
  call void @copy_v3_v3(float* %arraydecay3, float* %arraydecay5), !dbg !12806
  %6 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12807
  %orig = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %6, i32 0, i32 2, !dbg !12808
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %orig, i64 0, i64 0, !dbg !12807
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12809
  %orig7 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 35, !dbg !12810
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %orig7, i64 0, i64 0, !dbg !12809
  call void @copy_v3_v3(float* %arraydecay6, float* %arraydecay8), !dbg !12811
  %8 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12812
  %size = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %8, i32 0, i32 3, !dbg !12813
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !12812
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12814
  %size10 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 36, !dbg !12815
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %size10, i64 0, i64 0, !dbg !12814
  call void @copy_v3_v3(float* %arraydecay9, float* %arraydecay11), !dbg !12816
  %10 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12817
  %dscale = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %10, i32 0, i32 4, !dbg !12818
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %dscale, i64 0, i64 0, !dbg !12817
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12819
  %dscale13 = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 38, !dbg !12820
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %dscale13, i64 0, i64 0, !dbg !12819
  call void @copy_v3_v3(float* %arraydecay12, float* %arraydecay14), !dbg !12821
  %12 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12822
  %rot = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %12, i32 0, i32 5, !dbg !12823
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %rot, i64 0, i64 0, !dbg !12822
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12824
  %rot16 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 39, !dbg !12825
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %rot16, i64 0, i64 0, !dbg !12824
  call void @copy_v3_v3(float* %arraydecay15, float* %arraydecay17), !dbg !12826
  %14 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12827
  %drot = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %14, i32 0, i32 6, !dbg !12828
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %drot, i64 0, i64 0, !dbg !12827
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12829
  %drot19 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 40, !dbg !12830
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %drot19, i64 0, i64 0, !dbg !12829
  call void @copy_v3_v3(float* %arraydecay18, float* %arraydecay20), !dbg !12831
  %16 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12832
  %quat = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %16, i32 0, i32 7, !dbg !12833
  %arraydecay21 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !12832
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12834
  %quat22 = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 41, !dbg !12835
  %arraydecay23 = getelementptr inbounds [4 x float], [4 x float]* %quat22, i64 0, i64 0, !dbg !12834
  call void @copy_qt_qt(float* %arraydecay21, float* %arraydecay23), !dbg !12836
  %18 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12837
  %dquat = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %18, i32 0, i32 8, !dbg !12838
  %arraydecay24 = getelementptr inbounds [4 x float], [4 x float]* %dquat, i64 0, i64 0, !dbg !12837
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12839
  %dquat25 = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 42, !dbg !12840
  %arraydecay26 = getelementptr inbounds [4 x float], [4 x float]* %dquat25, i64 0, i64 0, !dbg !12839
  call void @copy_qt_qt(float* %arraydecay24, float* %arraydecay26), !dbg !12841
  %20 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12842
  %rotAxis = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %20, i32 0, i32 9, !dbg !12843
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %rotAxis, i64 0, i64 0, !dbg !12842
  %21 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12844
  %rotAxis28 = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 43, !dbg !12845
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %rotAxis28, i64 0, i64 0, !dbg !12844
  call void @copy_v3_v3(float* %arraydecay27, float* %arraydecay29), !dbg !12846
  %22 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12847
  %drotAxis = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %22, i32 0, i32 10, !dbg !12848
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %drotAxis, i64 0, i64 0, !dbg !12847
  %23 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12849
  %drotAxis31 = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 44, !dbg !12850
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %drotAxis31, i64 0, i64 0, !dbg !12849
  call void @copy_v3_v3(float* %arraydecay30, float* %arraydecay32), !dbg !12851
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12852
  %rotAngle = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 45, !dbg !12853
  %25 = load float, float* %rotAngle, align 8, !dbg !12853
  %26 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12854
  %rotAngle33 = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %26, i32 0, i32 11, !dbg !12855
  store float %25, float* %rotAngle33, align 4, !dbg !12856
  %27 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12857
  %drotAngle = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 46, !dbg !12858
  %28 = load float, float* %drotAngle, align 4, !dbg !12858
  %29 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12859
  %drotAngle34 = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %29, i32 0, i32 12, !dbg !12860
  store float %28, float* %drotAngle34, align 4, !dbg !12861
  %30 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12862
  %obmat = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %30, i32 0, i32 13, !dbg !12863
  %arraydecay35 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !12862
  %31 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12864
  %obmat36 = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 47, !dbg !12865
  %arraydecay37 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat36, i64 0, i64 0, !dbg !12864
  call void @copy_m4_m4([4 x float]* %arraydecay35, [4 x float]* %arraydecay37), !dbg !12866
  %32 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12867
  %parentinv = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %32, i32 0, i32 14, !dbg !12868
  %arraydecay38 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %parentinv, i64 0, i64 0, !dbg !12867
  %33 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12869
  %parentinv39 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 48, !dbg !12870
  %arraydecay40 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %parentinv39, i64 0, i64 0, !dbg !12869
  call void @copy_m4_m4([4 x float]* %arraydecay38, [4 x float]* %arraydecay40), !dbg !12871
  %34 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12872
  %constinv = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %34, i32 0, i32 15, !dbg !12873
  %arraydecay41 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %constinv, i64 0, i64 0, !dbg !12872
  %35 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12874
  %constinv42 = getelementptr inbounds %struct.Object, %struct.Object* %35, i32 0, i32 49, !dbg !12875
  %arraydecay43 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %constinv42, i64 0, i64 0, !dbg !12874
  call void @copy_m4_m4([4 x float]* %arraydecay41, [4 x float]* %arraydecay43), !dbg !12876
  %36 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12877
  %imat = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %36, i32 0, i32 16, !dbg !12878
  %arraydecay44 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !12877
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12879
  %imat45 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 50, !dbg !12880
  %arraydecay46 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat45, i64 0, i64 0, !dbg !12879
  call void @copy_m4_m4([4 x float]* %arraydecay44, [4 x float]* %arraydecay46), !dbg !12881
  %38 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12882
  %39 = bitcast %struct.ObTfmBack* %38 to i8*, !dbg !12883
  ret i8* %39, !dbg !12884
}

declare dso_local void @copy_qt_qt(float*, float*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_tfm_restore(%struct.Object* %ob, i8* %obtfm_pt) #0 !dbg !12885 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %obtfm_pt.addr = alloca i8*, align 8
  %obtfm = alloca %struct.ObTfmBack*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !12888, metadata !DIExpression()), !dbg !12889
  store i8* %obtfm_pt, i8** %obtfm_pt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %obtfm_pt.addr, metadata !12890, metadata !DIExpression()), !dbg !12891
  call void @llvm.dbg.declare(metadata %struct.ObTfmBack** %obtfm, metadata !12892, metadata !DIExpression()), !dbg !12893
  %0 = load i8*, i8** %obtfm_pt.addr, align 8, !dbg !12894
  %1 = bitcast i8* %0 to %struct.ObTfmBack*, !dbg !12895
  store %struct.ObTfmBack* %1, %struct.ObTfmBack** %obtfm, align 8, !dbg !12893
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12896
  %loc = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 33, !dbg !12897
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !12896
  %3 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12898
  %loc1 = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %3, i32 0, i32 0, !dbg !12899
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %loc1, i64 0, i64 0, !dbg !12898
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay2), !dbg !12900
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12901
  %dloc = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 34, !dbg !12902
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %dloc, i64 0, i64 0, !dbg !12901
  %5 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12903
  %dloc4 = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %5, i32 0, i32 1, !dbg !12904
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %dloc4, i64 0, i64 0, !dbg !12903
  call void @copy_v3_v3(float* %arraydecay3, float* %arraydecay5), !dbg !12905
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12906
  %orig = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 35, !dbg !12907
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %orig, i64 0, i64 0, !dbg !12906
  %7 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12908
  %orig7 = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %7, i32 0, i32 2, !dbg !12909
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %orig7, i64 0, i64 0, !dbg !12908
  call void @copy_v3_v3(float* %arraydecay6, float* %arraydecay8), !dbg !12910
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12911
  %size = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 36, !dbg !12912
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !12911
  %9 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12913
  %size10 = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %9, i32 0, i32 3, !dbg !12914
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %size10, i64 0, i64 0, !dbg !12913
  call void @copy_v3_v3(float* %arraydecay9, float* %arraydecay11), !dbg !12915
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12916
  %dscale = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 38, !dbg !12917
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %dscale, i64 0, i64 0, !dbg !12916
  %11 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12918
  %dscale13 = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %11, i32 0, i32 4, !dbg !12919
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %dscale13, i64 0, i64 0, !dbg !12918
  call void @copy_v3_v3(float* %arraydecay12, float* %arraydecay14), !dbg !12920
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12921
  %rot = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 39, !dbg !12922
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %rot, i64 0, i64 0, !dbg !12921
  %13 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12923
  %rot16 = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %13, i32 0, i32 5, !dbg !12924
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %rot16, i64 0, i64 0, !dbg !12923
  call void @copy_v3_v3(float* %arraydecay15, float* %arraydecay17), !dbg !12925
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12926
  %drot = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 40, !dbg !12927
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %drot, i64 0, i64 0, !dbg !12926
  %15 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12928
  %drot19 = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %15, i32 0, i32 6, !dbg !12929
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %drot19, i64 0, i64 0, !dbg !12928
  call void @copy_v3_v3(float* %arraydecay18, float* %arraydecay20), !dbg !12930
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12931
  %quat = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 41, !dbg !12932
  %arraydecay21 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !12931
  %17 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12933
  %quat22 = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %17, i32 0, i32 7, !dbg !12934
  %arraydecay23 = getelementptr inbounds [4 x float], [4 x float]* %quat22, i64 0, i64 0, !dbg !12933
  call void @copy_qt_qt(float* %arraydecay21, float* %arraydecay23), !dbg !12935
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12936
  %dquat = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 42, !dbg !12937
  %arraydecay24 = getelementptr inbounds [4 x float], [4 x float]* %dquat, i64 0, i64 0, !dbg !12936
  %19 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12938
  %dquat25 = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %19, i32 0, i32 8, !dbg !12939
  %arraydecay26 = getelementptr inbounds [4 x float], [4 x float]* %dquat25, i64 0, i64 0, !dbg !12938
  call void @copy_qt_qt(float* %arraydecay24, float* %arraydecay26), !dbg !12940
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12941
  %rotAxis = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 43, !dbg !12942
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %rotAxis, i64 0, i64 0, !dbg !12941
  %21 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12943
  %rotAxis28 = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %21, i32 0, i32 9, !dbg !12944
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %rotAxis28, i64 0, i64 0, !dbg !12943
  call void @copy_v3_v3(float* %arraydecay27, float* %arraydecay29), !dbg !12945
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12946
  %drotAxis = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 44, !dbg !12947
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %drotAxis, i64 0, i64 0, !dbg !12946
  %23 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12948
  %drotAxis31 = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %23, i32 0, i32 10, !dbg !12949
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %drotAxis31, i64 0, i64 0, !dbg !12948
  call void @copy_v3_v3(float* %arraydecay30, float* %arraydecay32), !dbg !12950
  %24 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12951
  %rotAngle = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %24, i32 0, i32 11, !dbg !12952
  %25 = load float, float* %rotAngle, align 4, !dbg !12952
  %26 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12953
  %rotAngle33 = getelementptr inbounds %struct.Object, %struct.Object* %26, i32 0, i32 45, !dbg !12954
  store float %25, float* %rotAngle33, align 8, !dbg !12955
  %27 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12956
  %drotAngle = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %27, i32 0, i32 12, !dbg !12957
  %28 = load float, float* %drotAngle, align 4, !dbg !12957
  %29 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12958
  %drotAngle34 = getelementptr inbounds %struct.Object, %struct.Object* %29, i32 0, i32 46, !dbg !12959
  store float %28, float* %drotAngle34, align 4, !dbg !12960
  %30 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12961
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 47, !dbg !12962
  %arraydecay35 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !12961
  %31 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12963
  %obmat36 = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %31, i32 0, i32 13, !dbg !12964
  %arraydecay37 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat36, i64 0, i64 0, !dbg !12963
  call void @copy_m4_m4([4 x float]* %arraydecay35, [4 x float]* %arraydecay37), !dbg !12965
  %32 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12966
  %parentinv = getelementptr inbounds %struct.Object, %struct.Object* %32, i32 0, i32 48, !dbg !12967
  %arraydecay38 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %parentinv, i64 0, i64 0, !dbg !12966
  %33 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12968
  %parentinv39 = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %33, i32 0, i32 14, !dbg !12969
  %arraydecay40 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %parentinv39, i64 0, i64 0, !dbg !12968
  call void @copy_m4_m4([4 x float]* %arraydecay38, [4 x float]* %arraydecay40), !dbg !12970
  %34 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12971
  %constinv = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 49, !dbg !12972
  %arraydecay41 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %constinv, i64 0, i64 0, !dbg !12971
  %35 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12973
  %constinv42 = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %35, i32 0, i32 15, !dbg !12974
  %arraydecay43 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %constinv42, i64 0, i64 0, !dbg !12973
  call void @copy_m4_m4([4 x float]* %arraydecay41, [4 x float]* %arraydecay43), !dbg !12975
  %36 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12976
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 50, !dbg !12977
  %arraydecay44 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !12976
  %37 = load %struct.ObTfmBack*, %struct.ObTfmBack** %obtfm, align 8, !dbg !12978
  %imat45 = getelementptr inbounds %struct.ObTfmBack, %struct.ObTfmBack* %37, i32 0, i32 16, !dbg !12979
  %arraydecay46 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat45, i64 0, i64 0, !dbg !12978
  call void @copy_m4_m4([4 x float]* %arraydecay44, [4 x float]* %arraydecay46), !dbg !12980
  ret void, !dbg !12981
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_object_parent_loop_check(%struct.Object* %par, %struct.Object* %ob) #0 !dbg !12982 {
entry:
  %retval = alloca i8, align 1
  %par.addr = alloca %struct.Object*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %par, %struct.Object** %par.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %par.addr, metadata !12985, metadata !DIExpression()), !dbg !12986
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !12987, metadata !DIExpression()), !dbg !12988
  %0 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !12989
  %cmp = icmp eq %struct.Object* %0, null, !dbg !12991
  br i1 %cmp, label %if.then, label %if.end, !dbg !12992

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !12993
  br label %return, !dbg !12993

if.end:                                           ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !12994
  %2 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !12996
  %cmp1 = icmp eq %struct.Object* %1, %2, !dbg !12997
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !12998

if.then2:                                         ; preds = %if.end
  store i8 1, i8* %retval, align 1, !dbg !12999
  br label %return, !dbg !12999

if.end3:                                          ; preds = %if.end
  %3 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !13000
  %parent = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 9, !dbg !13001
  %4 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !13001
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13002
  %call = call zeroext i8 @BKE_object_parent_loop_check(%struct.Object* %4, %struct.Object* %5), !dbg !13003
  store i8 %call, i8* %retval, align 1, !dbg !13004
  br label %return, !dbg !13004

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %6 = load i8, i8* %retval, align 1, !dbg !13005
  ret i8 %6, !dbg !13005
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_handle_update_ex(%struct.EvaluationContext* %eval_ctx, %struct.Scene* %scene, %struct.Object* %ob, %struct.RigidBodyWorld* %rbw, i8 zeroext %do_proxy_update) #0 !dbg !13006 {
entry:
  %eval_ctx.addr = alloca %struct.EvaluationContext*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %rbw.addr = alloca %struct.RigidBodyWorld*, align 8
  %do_proxy_update.addr = alloca i8, align 1
  %obg = alloca %struct.Object*, align 8
  %data_id = alloca %struct.ID*, align 8
  %adt = alloca %struct.AnimData*, align 8
  %key = alloca %struct.Key*, align 8
  %ctime = alloca float, align 4
  %em = alloca %struct.BMEditMesh*, align 8
  %data_mask = alloca i64, align 8
  %a = alloca i32, align 4
  %ma = alloca %struct.Material*, align 8
  %tpsys = alloca %struct.ParticleSystem*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  store %struct.EvaluationContext* %eval_ctx, %struct.EvaluationContext** %eval_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EvaluationContext** %eval_ctx.addr, metadata !13011, metadata !DIExpression()), !dbg !13012
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !13013, metadata !DIExpression()), !dbg !13014
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !13015, metadata !DIExpression()), !dbg !13016
  store %struct.RigidBodyWorld* %rbw, %struct.RigidBodyWorld** %rbw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RigidBodyWorld** %rbw.addr, metadata !13017, metadata !DIExpression()), !dbg !13018
  store i8 %do_proxy_update, i8* %do_proxy_update.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_proxy_update.addr, metadata !13019, metadata !DIExpression()), !dbg !13020
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13021
  %recalc = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 103, !dbg !13023
  %1 = load i8, i8* %recalc, align 1, !dbg !13023
  %conv = zext i8 %1 to i32, !dbg !13021
  %and = and i32 %conv, 7, !dbg !13024
  %tobool = icmp ne i32 %and, 0, !dbg !13024
  br i1 %tobool, label %if.then, label %if.end273, !dbg !13025

if.then:                                          ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13026
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 18, !dbg !13029
  %3 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !13029
  %tobool1 = icmp ne %struct.bPose* %3, null, !dbg !13026
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !13030

if.then2:                                         ; preds = %if.then
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13031
  %pose3 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 18, !dbg !13032
  %5 = load %struct.bPose*, %struct.bPose** %pose3, align 8, !dbg !13032
  call void @BKE_pose_channels_hash_make(%struct.bPose* %5), !dbg !13033
  br label %if.end, !dbg !13033

if.end:                                           ; preds = %if.then2, %if.then
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13034
  %recalc4 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 103, !dbg !13036
  %7 = load i8, i8* %recalc4, align 1, !dbg !13036
  %conv5 = zext i8 %7 to i32, !dbg !13034
  %and6 = and i32 %conv5, 2, !dbg !13037
  %tobool7 = icmp ne i32 %and6, 0, !dbg !13037
  br i1 %tobool7, label %if.then8, label %if.end22, !dbg !13038

if.then8:                                         ; preds = %if.end
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13039
  %type = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 3, !dbg !13042
  %9 = load i16, i16* %type, align 8, !dbg !13042
  %conv9 = sext i16 %9 to i32, !dbg !13039
  %cmp = icmp eq i32 %conv9, 25, !dbg !13043
  br i1 %cmp, label %if.then11, label %if.end21, !dbg !13044

if.then11:                                        ; preds = %if.then8
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13045
  %pose12 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 18, !dbg !13048
  %11 = load %struct.bPose*, %struct.bPose** %pose12, align 8, !dbg !13048
  %cmp13 = icmp eq %struct.bPose* %11, null, !dbg !13049
  br i1 %cmp13, label %if.then19, label %lor.lhs.false, !dbg !13050

lor.lhs.false:                                    ; preds = %if.then11
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13051
  %pose15 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 18, !dbg !13052
  %13 = load %struct.bPose*, %struct.bPose** %pose15, align 8, !dbg !13052
  %flag = getelementptr inbounds %struct.bPose, %struct.bPose* %13, i32 0, i32 2, !dbg !13053
  %14 = load i16, i16* %flag, align 8, !dbg !13053
  %conv16 = sext i16 %14 to i32, !dbg !13051
  %and17 = and i32 %conv16, 1, !dbg !13054
  %tobool18 = icmp ne i32 %and17, 0, !dbg !13054
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !13055

if.then19:                                        ; preds = %lor.lhs.false, %if.then11
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13056
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13057
  %data = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 19, !dbg !13058
  %17 = load i8*, i8** %data, align 8, !dbg !13058
  %18 = bitcast i8* %17 to %struct.bArmature*, !dbg !13057
  call void @BKE_pose_rebuild(%struct.Object* %15, %struct.bArmature* %18), !dbg !13059
  br label %if.end20, !dbg !13059

if.end20:                                         ; preds = %if.then19, %lor.lhs.false
  br label %if.end21, !dbg !13060

if.end21:                                         ; preds = %if.end20, %if.then8
  br label %if.end22, !dbg !13061

if.end22:                                         ; preds = %if.end21, %if.end
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13062
  %recalc23 = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 103, !dbg !13064
  %20 = load i8, i8* %recalc23, align 1, !dbg !13064
  %conv24 = zext i8 %20 to i32, !dbg !13062
  %and25 = and i32 %conv24, 7, !dbg !13065
  %tobool26 = icmp ne i32 %and25, 0, !dbg !13065
  br i1 %tobool26, label %if.then27, label %if.end66, !dbg !13066

if.then27:                                        ; preds = %if.end22
  %21 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !13067
  %and28 = and i32 %21, 256, !dbg !13070
  %tobool29 = icmp ne i32 %and28, 0, !dbg !13070
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !13071

if.then30:                                        ; preds = %if.then27
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13072
  %id = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 0, !dbg !13073
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !13074
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !13072
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2, !dbg !13075
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), i8* %add.ptr), !dbg !13076
  br label %if.end31, !dbg !13076

if.end31:                                         ; preds = %if.then30, %if.then27
  %23 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13077
  %id32 = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 0, !dbg !13079
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id32, i32 0, i32 3, !dbg !13080
  %24 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !13080
  %tobool33 = icmp ne %struct.Library* %24, null, !dbg !13077
  br i1 %tobool33, label %land.lhs.true, label %if.else64, !dbg !13081

land.lhs.true:                                    ; preds = %if.end31
  %25 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13082
  %proxy_from = getelementptr inbounds %struct.Object, %struct.Object* %25, i32 0, i32 13, !dbg !13083
  %26 = load %struct.Object*, %struct.Object** %proxy_from, align 8, !dbg !13083
  %tobool34 = icmp ne %struct.Object* %26, null, !dbg !13082
  br i1 %tobool34, label %if.then35, label %if.else64, !dbg !13084

if.then35:                                        ; preds = %land.lhs.true
  %27 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13085
  %proxy_from36 = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 13, !dbg !13088
  %28 = load %struct.Object*, %struct.Object** %proxy_from36, align 8, !dbg !13088
  %proxy_group = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 12, !dbg !13089
  %29 = load %struct.Object*, %struct.Object** %proxy_group, align 8, !dbg !13089
  %tobool37 = icmp ne %struct.Object* %29, null, !dbg !13085
  br i1 %tobool37, label %if.then38, label %if.else, !dbg !13090

if.then38:                                        ; preds = %if.then35
  call void @llvm.dbg.declare(metadata %struct.Object** %obg, metadata !13091, metadata !DIExpression()), !dbg !13093
  %30 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13094
  %proxy_from39 = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 13, !dbg !13095
  %31 = load %struct.Object*, %struct.Object** %proxy_from39, align 8, !dbg !13095
  %proxy_group40 = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 12, !dbg !13096
  %32 = load %struct.Object*, %struct.Object** %proxy_group40, align 8, !dbg !13096
  store %struct.Object* %32, %struct.Object** %obg, align 8, !dbg !13093
  %33 = load %struct.Object*, %struct.Object** %obg, align 8, !dbg !13097
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 50, !dbg !13098
  %arraydecay41 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !13097
  %34 = load %struct.Object*, %struct.Object** %obg, align 8, !dbg !13099
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 47, !dbg !13100
  %arraydecay42 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !13099
  %call43 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay41, [4 x float]* %arraydecay42), !dbg !13101
  %35 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13102
  %obmat44 = getelementptr inbounds %struct.Object, %struct.Object* %35, i32 0, i32 47, !dbg !13103
  %arraydecay45 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat44, i64 0, i64 0, !dbg !13102
  %36 = load %struct.Object*, %struct.Object** %obg, align 8, !dbg !13104
  %imat46 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 50, !dbg !13105
  %arraydecay47 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat46, i64 0, i64 0, !dbg !13104
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13106
  %proxy_from48 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 13, !dbg !13107
  %38 = load %struct.Object*, %struct.Object** %proxy_from48, align 8, !dbg !13107
  %obmat49 = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 47, !dbg !13108
  %arraydecay50 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat49, i64 0, i64 0, !dbg !13106
  call void @mul_m4_m4m4([4 x float]* %arraydecay45, [4 x float]* %arraydecay47, [4 x float]* %arraydecay50), !dbg !13109
  %39 = load %struct.Object*, %struct.Object** %obg, align 8, !dbg !13110
  %dup_group = getelementptr inbounds %struct.Object, %struct.Object* %39, i32 0, i32 112, !dbg !13112
  %40 = load %struct.Group*, %struct.Group** %dup_group, align 8, !dbg !13112
  %tobool51 = icmp ne %struct.Group* %40, null, !dbg !13110
  br i1 %tobool51, label %if.then52, label %if.end57, !dbg !13113

if.then52:                                        ; preds = %if.then38
  %41 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13114
  %obmat53 = getelementptr inbounds %struct.Object, %struct.Object* %41, i32 0, i32 47, !dbg !13116
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat53, i64 0, i64 3, !dbg !13114
  %arraydecay54 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !13114
  %42 = load %struct.Object*, %struct.Object** %obg, align 8, !dbg !13117
  %dup_group55 = getelementptr inbounds %struct.Object, %struct.Object* %42, i32 0, i32 112, !dbg !13118
  %43 = load %struct.Group*, %struct.Group** %dup_group55, align 8, !dbg !13118
  %dupli_ofs = getelementptr inbounds %struct.Group, %struct.Group* %43, i32 0, i32 3, !dbg !13119
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %dupli_ofs, i64 0, i64 0, !dbg !13117
  call void @add_v3_v3(float* %arraydecay54, float* %arraydecay56), !dbg !13120
  br label %if.end57, !dbg !13121

if.end57:                                         ; preds = %if.then52, %if.then38
  br label %if.end63, !dbg !13122

if.else:                                          ; preds = %if.then35
  %44 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13123
  %obmat58 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 47, !dbg !13124
  %arraydecay59 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat58, i64 0, i64 0, !dbg !13123
  %45 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13125
  %proxy_from60 = getelementptr inbounds %struct.Object, %struct.Object* %45, i32 0, i32 13, !dbg !13126
  %46 = load %struct.Object*, %struct.Object** %proxy_from60, align 8, !dbg !13126
  %obmat61 = getelementptr inbounds %struct.Object, %struct.Object* %46, i32 0, i32 47, !dbg !13127
  %arraydecay62 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat61, i64 0, i64 0, !dbg !13125
  call void @copy_m4_m4([4 x float]* %arraydecay59, [4 x float]* %arraydecay62), !dbg !13128
  br label %if.end63

if.end63:                                         ; preds = %if.else, %if.end57
  br label %if.end65, !dbg !13129

if.else64:                                        ; preds = %land.lhs.true, %if.end31
  %47 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13130
  %48 = load %struct.RigidBodyWorld*, %struct.RigidBodyWorld** %rbw.addr, align 8, !dbg !13131
  %49 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13132
  call void @BKE_object_where_is_calc_ex(%struct.Scene* %47, %struct.RigidBodyWorld* %48, %struct.Object* %49, [3 x float]* null), !dbg !13133
  br label %if.end65

if.end65:                                         ; preds = %if.else64, %if.end63
  br label %if.end66, !dbg !13134

if.end66:                                         ; preds = %if.end65, %if.end22
  %50 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13135
  %recalc67 = getelementptr inbounds %struct.Object, %struct.Object* %50, i32 0, i32 103, !dbg !13137
  %51 = load i8, i8* %recalc67, align 1, !dbg !13137
  %conv68 = zext i8 %51 to i32, !dbg !13135
  %and69 = and i32 %conv68, 2, !dbg !13138
  %tobool70 = icmp ne i32 %and69, 0, !dbg !13138
  br i1 %tobool70, label %if.then71, label %if.end268, !dbg !13139

if.then71:                                        ; preds = %if.end66
  call void @llvm.dbg.declare(metadata %struct.ID** %data_id, metadata !13140, metadata !DIExpression()), !dbg !13142
  %52 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13143
  %data72 = getelementptr inbounds %struct.Object, %struct.Object* %52, i32 0, i32 19, !dbg !13144
  %53 = load i8*, i8** %data72, align 8, !dbg !13144
  %54 = bitcast i8* %53 to %struct.ID*, !dbg !13145
  store %struct.ID* %54, %struct.ID** %data_id, align 8, !dbg !13142
  call void @llvm.dbg.declare(metadata %struct.AnimData** %adt, metadata !13146, metadata !DIExpression()), !dbg !13149
  %55 = load %struct.ID*, %struct.ID** %data_id, align 8, !dbg !13150
  %call73 = call %struct.AnimData* @BKE_animdata_from_id(%struct.ID* %55), !dbg !13151
  store %struct.AnimData* %call73, %struct.AnimData** %adt, align 8, !dbg !13149
  call void @llvm.dbg.declare(metadata %struct.Key** %key, metadata !13152, metadata !DIExpression()), !dbg !13155
  call void @llvm.dbg.declare(metadata float* %ctime, metadata !13156, metadata !DIExpression()), !dbg !13157
  %56 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13158
  %call74 = call float @BKE_scene_frame_get(%struct.Scene* %56), !dbg !13159
  store float %call74, float* %ctime, align 4, !dbg !13157
  %57 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !13160
  %and75 = and i32 %57, 256, !dbg !13162
  %tobool76 = icmp ne i32 %and75, 0, !dbg !13162
  br i1 %tobool76, label %if.then77, label %if.end83, !dbg !13163

if.then77:                                        ; preds = %if.then71
  %58 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13164
  %id78 = getelementptr inbounds %struct.Object, %struct.Object* %58, i32 0, i32 0, !dbg !13165
  %name79 = getelementptr inbounds %struct.ID, %struct.ID* %id78, i32 0, i32 4, !dbg !13166
  %arraydecay80 = getelementptr inbounds [66 x i8], [66 x i8]* %name79, i64 0, i64 0, !dbg !13164
  %add.ptr81 = getelementptr inbounds i8, i8* %arraydecay80, i64 2, !dbg !13167
  %call82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i64 0, i64 0), i8* %add.ptr81), !dbg !13168
  br label %if.end83, !dbg !13168

if.end83:                                         ; preds = %if.then77, %if.then71
  %59 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !13169
  %tobool84 = icmp ne %struct.AnimData* %59, null, !dbg !13169
  br i1 %tobool84, label %if.then85, label %if.end86, !dbg !13171

if.then85:                                        ; preds = %if.end83
  %60 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13172
  %61 = load %struct.ID*, %struct.ID** %data_id, align 8, !dbg !13174
  %62 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !13175
  %63 = load float, float* %ctime, align 4, !dbg !13176
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %60, %struct.ID* %61, %struct.AnimData* %62, float %63, i16 signext 1), !dbg !13177
  br label %if.end86, !dbg !13178

if.end86:                                         ; preds = %if.then85, %if.end83
  %64 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13179
  %call87 = call %struct.Key* @BKE_key_from_object(%struct.Object* %64), !dbg !13180
  store %struct.Key* %call87, %struct.Key** %key, align 8, !dbg !13181
  %65 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !13182
  %tobool88 = icmp ne %struct.Key* %65, null, !dbg !13182
  br i1 %tobool88, label %land.lhs.true89, label %if.end99, !dbg !13184

land.lhs.true89:                                  ; preds = %if.end86
  %66 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !13185
  %block = getelementptr inbounds %struct.Key, %struct.Key* %66, i32 0, i32 6, !dbg !13186
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block, i32 0, i32 0, !dbg !13187
  %67 = load i8*, i8** %first, align 8, !dbg !13187
  %tobool90 = icmp ne i8* %67, null, !dbg !13185
  br i1 %tobool90, label %if.then91, label %if.end99, !dbg !13188

if.then91:                                        ; preds = %land.lhs.true89
  %68 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13189
  %shapeflag = getelementptr inbounds %struct.Object, %struct.Object* %68, i32 0, i32 114, !dbg !13192
  %69 = load i8, i8* %shapeflag, align 1, !dbg !13192
  %conv92 = zext i8 %69 to i32, !dbg !13189
  %and93 = and i32 %conv92, 1, !dbg !13193
  %tobool94 = icmp ne i32 %and93, 0, !dbg !13193
  br i1 %tobool94, label %if.end98, label %if.then95, !dbg !13194

if.then95:                                        ; preds = %if.then91
  %70 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13195
  %71 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !13196
  %id96 = getelementptr inbounds %struct.Key, %struct.Key* %71, i32 0, i32 0, !dbg !13197
  %72 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !13198
  %adt97 = getelementptr inbounds %struct.Key, %struct.Key* %72, i32 0, i32 1, !dbg !13199
  %73 = load %struct.AnimData*, %struct.AnimData** %adt97, align 8, !dbg !13199
  %74 = load float, float* %ctime, align 4, !dbg !13200
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %70, %struct.ID* %id96, %struct.AnimData* %73, float %74, i16 signext 1), !dbg !13201
  br label %if.end98, !dbg !13201

if.end98:                                         ; preds = %if.then95, %if.then91
  br label %if.end99, !dbg !13202

if.end99:                                         ; preds = %if.end98, %land.lhs.true89, %if.end86
  %75 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13203
  %type100 = getelementptr inbounds %struct.Object, %struct.Object* %75, i32 0, i32 3, !dbg !13204
  %76 = load i16, i16* %type100, align 8, !dbg !13204
  %conv101 = sext i16 %76 to i32, !dbg !13203
  switch i32 %conv101, label %sw.epilog [
    i32 1, label %sw.bb
    i32 25, label %sw.bb109
    i32 5, label %sw.bb138
    i32 2, label %sw.bb139
    i32 3, label %sw.bb139
    i32 4, label %sw.bb139
    i32 22, label %sw.bb140
    i32 0, label %sw.bb141
  ], !dbg !13205

sw.bb:                                            ; preds = %if.end99
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !13206, metadata !DIExpression()), !dbg !13211
  %77 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13212
  %78 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13213
  %obedit = getelementptr inbounds %struct.Scene, %struct.Scene* %78, i32 0, i32 7, !dbg !13214
  %79 = load %struct.Object*, %struct.Object** %obedit, align 8, !dbg !13214
  %cmp102 = icmp eq %struct.Object* %77, %79, !dbg !13215
  br i1 %cmp102, label %cond.true, label %cond.false, !dbg !13216

cond.true:                                        ; preds = %sw.bb
  %80 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13217
  %call104 = call %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object* %80), !dbg !13218
  br label %cond.end, !dbg !13216

cond.false:                                       ; preds = %sw.bb
  br label %cond.end, !dbg !13216

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.BMEditMesh* [ %call104, %cond.true ], [ null, %cond.false ], !dbg !13216
  store %struct.BMEditMesh* %cond, %struct.BMEditMesh** %em, align 8, !dbg !13211
  call void @llvm.dbg.declare(metadata i64* %data_mask, metadata !13219, metadata !DIExpression()), !dbg !13220
  %81 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13221
  %customdata_mask = getelementptr inbounds %struct.Scene, %struct.Scene* %81, i32 0, i32 42, !dbg !13222
  %82 = load i64, i64* %customdata_mask, align 8, !dbg !13222
  %83 = load i64, i64* @CD_MASK_BAREMESH, align 8, !dbg !13223
  %or = or i64 %82, %83, !dbg !13224
  store i64 %or, i64* %data_mask, align 8, !dbg !13220
  %84 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13225
  %tobool105 = icmp ne %struct.BMEditMesh* %84, null, !dbg !13225
  br i1 %tobool105, label %if.then106, label %if.else107, !dbg !13227

if.then106:                                       ; preds = %cond.end
  %85 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13228
  %86 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13230
  %87 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !13231
  %88 = load i64, i64* %data_mask, align 8, !dbg !13232
  call void @makeDerivedMesh(%struct.Scene* %85, %struct.Object* %86, %struct.BMEditMesh* %87, i64 %88, i32 0), !dbg !13233
  br label %if.end108, !dbg !13234

if.else107:                                       ; preds = %cond.end
  %89 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13235
  %90 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13237
  %91 = load i64, i64* %data_mask, align 8, !dbg !13238
  call void @makeDerivedMesh(%struct.Scene* %89, %struct.Object* %90, %struct.BMEditMesh* null, i64 %91, i32 0), !dbg !13239
  br label %if.end108

if.end108:                                        ; preds = %if.else107, %if.then106
  br label %sw.epilog, !dbg !13240

sw.bb109:                                         ; preds = %if.end99
  %92 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13241
  %id110 = getelementptr inbounds %struct.Object, %struct.Object* %92, i32 0, i32 0, !dbg !13243
  %lib111 = getelementptr inbounds %struct.ID, %struct.ID* %id110, i32 0, i32 3, !dbg !13244
  %93 = load %struct.Library*, %struct.Library** %lib111, align 8, !dbg !13244
  %tobool112 = icmp ne %struct.Library* %93, null, !dbg !13241
  br i1 %tobool112, label %land.lhs.true113, label %if.else136, !dbg !13245

land.lhs.true113:                                 ; preds = %sw.bb109
  %94 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13246
  %proxy_from114 = getelementptr inbounds %struct.Object, %struct.Object* %94, i32 0, i32 13, !dbg !13247
  %95 = load %struct.Object*, %struct.Object** %proxy_from114, align 8, !dbg !13247
  %tobool115 = icmp ne %struct.Object* %95, null, !dbg !13246
  br i1 %tobool115, label %if.then116, label %if.else136, !dbg !13248

if.then116:                                       ; preds = %land.lhs.true113
  %96 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13249
  %pose117 = getelementptr inbounds %struct.Object, %struct.Object* %96, i32 0, i32 18, !dbg !13252
  %97 = load %struct.bPose*, %struct.bPose** %pose117, align 8, !dbg !13252
  %98 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13253
  %proxy_from118 = getelementptr inbounds %struct.Object, %struct.Object* %98, i32 0, i32 13, !dbg !13254
  %99 = load %struct.Object*, %struct.Object** %proxy_from118, align 8, !dbg !13254
  %pose119 = getelementptr inbounds %struct.Object, %struct.Object* %99, i32 0, i32 18, !dbg !13255
  %100 = load %struct.bPose*, %struct.bPose** %pose119, align 8, !dbg !13255
  %call120 = call zeroext i8 @BKE_pose_copy_result(%struct.bPose* %97, %struct.bPose* %100), !dbg !13256
  %conv121 = zext i8 %call120 to i32, !dbg !13256
  %cmp122 = icmp eq i32 %conv121, 0, !dbg !13257
  br i1 %cmp122, label %if.then124, label %if.end135, !dbg !13258

if.then124:                                       ; preds = %if.then116
  %101 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13259
  %id125 = getelementptr inbounds %struct.Object, %struct.Object* %101, i32 0, i32 0, !dbg !13261
  %name126 = getelementptr inbounds %struct.ID, %struct.ID* %id125, i32 0, i32 4, !dbg !13262
  %arraydecay127 = getelementptr inbounds [66 x i8], [66 x i8]* %name126, i64 0, i64 0, !dbg !13259
  %add.ptr128 = getelementptr inbounds i8, i8* %arraydecay127, i64 2, !dbg !13263
  %102 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13264
  %proxy_from129 = getelementptr inbounds %struct.Object, %struct.Object* %102, i32 0, i32 13, !dbg !13265
  %103 = load %struct.Object*, %struct.Object** %proxy_from129, align 8, !dbg !13265
  %id130 = getelementptr inbounds %struct.Object, %struct.Object* %103, i32 0, i32 0, !dbg !13266
  %name131 = getelementptr inbounds %struct.ID, %struct.ID* %id130, i32 0, i32 4, !dbg !13267
  %arraydecay132 = getelementptr inbounds [66 x i8], [66 x i8]* %name131, i64 0, i64 0, !dbg !13264
  %add.ptr133 = getelementptr inbounds i8, i8* %arraydecay132, i64 2, !dbg !13268
  %call134 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.17, i64 0, i64 0), i8* %add.ptr128, i8* %add.ptr133), !dbg !13269
  br label %if.end135, !dbg !13270

if.end135:                                        ; preds = %if.then124, %if.then116
  br label %if.end137, !dbg !13271

if.else136:                                       ; preds = %land.lhs.true113, %sw.bb109
  %104 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13272
  %105 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13274
  call void @BKE_pose_where_is(%struct.Scene* %104, %struct.Object* %105), !dbg !13275
  br label %if.end137

if.end137:                                        ; preds = %if.else136, %if.end135
  br label %sw.epilog, !dbg !13276

sw.bb138:                                         ; preds = %if.end99
  %106 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx.addr, align 8, !dbg !13277
  %107 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13278
  %108 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13279
  call void @BKE_displist_make_mball(%struct.EvaluationContext* %106, %struct.Scene* %107, %struct.Object* %108), !dbg !13280
  br label %sw.epilog, !dbg !13281

sw.bb139:                                         ; preds = %if.end99, %if.end99, %if.end99
  %109 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13282
  %110 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13283
  call void @BKE_displist_make_curveTypes(%struct.Scene* %109, %struct.Object* %110, i8 zeroext 0), !dbg !13284
  br label %sw.epilog, !dbg !13285

sw.bb140:                                         ; preds = %if.end99
  %111 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13286
  %112 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13287
  call void @BKE_lattice_modifiers_calc(%struct.Scene* %111, %struct.Object* %112), !dbg !13288
  br label %sw.epilog, !dbg !13289

sw.bb141:                                         ; preds = %if.end99
  %113 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13290
  %empty_drawtype = getelementptr inbounds %struct.Object, %struct.Object* %113, i32 0, i32 88, !dbg !13292
  %114 = load i8, i8* %empty_drawtype, align 1, !dbg !13292
  %conv142 = zext i8 %114 to i32, !dbg !13290
  %cmp143 = icmp eq i32 %conv142, 8, !dbg !13293
  br i1 %cmp143, label %land.lhs.true145, label %if.end155, !dbg !13294

land.lhs.true145:                                 ; preds = %sw.bb141
  %115 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13295
  %data146 = getelementptr inbounds %struct.Object, %struct.Object* %115, i32 0, i32 19, !dbg !13296
  %116 = load i8*, i8** %data146, align 8, !dbg !13296
  %tobool147 = icmp ne i8* %116, null, !dbg !13295
  br i1 %tobool147, label %if.then148, label %if.end155, !dbg !13297

if.then148:                                       ; preds = %land.lhs.true145
  %117 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13298
  %data149 = getelementptr inbounds %struct.Object, %struct.Object* %117, i32 0, i32 19, !dbg !13300
  %118 = load i8*, i8** %data149, align 8, !dbg !13300
  %119 = bitcast i8* %118 to %struct.Image*, !dbg !13298
  %call150 = call zeroext i8 @BKE_image_is_animated(%struct.Image* %119), !dbg !13301
  %tobool151 = icmp ne i8 %call150, 0, !dbg !13301
  br i1 %tobool151, label %if.then152, label %if.end154, !dbg !13302

if.then152:                                       ; preds = %if.then148
  %120 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13303
  %iuser = getelementptr inbounds %struct.Object, %struct.Object* %120, i32 0, i32 131, !dbg !13304
  %121 = load %struct.ImageUser*, %struct.ImageUser** %iuser, align 8, !dbg !13304
  %122 = load float, float* %ctime, align 4, !dbg !13305
  %conv153 = fptosi float %122 to i32, !dbg !13306
  call void @BKE_image_user_check_frame_calc(%struct.ImageUser* %121, i32 %conv153, i32 0), !dbg !13307
  br label %if.end154, !dbg !13307

if.end154:                                        ; preds = %if.then152, %if.then148
  br label %if.end155, !dbg !13308

if.end155:                                        ; preds = %if.end154, %land.lhs.true145, %sw.bb141
  br label %sw.epilog, !dbg !13309

sw.epilog:                                        ; preds = %if.end99, %if.end155, %sw.bb140, %sw.bb139, %sw.bb138, %if.end137, %if.end108
  %123 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13310
  %totcol = getelementptr inbounds %struct.Object, %struct.Object* %123, i32 0, i32 31, !dbg !13312
  %124 = load i32, i32* %totcol, align 8, !dbg !13312
  %tobool156 = icmp ne i32 %124, 0, !dbg !13310
  br i1 %tobool156, label %if.then157, label %if.else166, !dbg !13313

if.then157:                                       ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata i32* %a, metadata !13314, metadata !DIExpression()), !dbg !13316
  store i32 1, i32* %a, align 4, !dbg !13317
  br label %for.cond, !dbg !13319

for.cond:                                         ; preds = %for.inc, %if.then157
  %125 = load i32, i32* %a, align 4, !dbg !13320
  %126 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13322
  %totcol158 = getelementptr inbounds %struct.Object, %struct.Object* %126, i32 0, i32 31, !dbg !13323
  %127 = load i32, i32* %totcol158, align 8, !dbg !13323
  %cmp159 = icmp sle i32 %125, %127, !dbg !13324
  br i1 %cmp159, label %for.body, label %for.end, !dbg !13325

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !13326, metadata !DIExpression()), !dbg !13328
  %128 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13329
  %129 = load i32, i32* %a, align 4, !dbg !13330
  %conv161 = trunc i32 %129 to i16, !dbg !13330
  %call162 = call %struct.Material* @give_current_material(%struct.Object* %128, i16 signext %conv161), !dbg !13331
  store %struct.Material* %call162, %struct.Material** %ma, align 8, !dbg !13328
  %130 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !13332
  %tobool163 = icmp ne %struct.Material* %130, null, !dbg !13332
  br i1 %tobool163, label %if.then164, label %if.end165, !dbg !13334

if.then164:                                       ; preds = %for.body
  %131 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13335
  %132 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !13337
  %133 = load float, float* %ctime, align 4, !dbg !13338
  call void @material_drivers_update(%struct.Scene* %131, %struct.Material* %132, float %133), !dbg !13339
  br label %if.end165, !dbg !13340

if.end165:                                        ; preds = %if.then164, %for.body
  br label %for.inc, !dbg !13341

for.inc:                                          ; preds = %if.end165
  %134 = load i32, i32* %a, align 4, !dbg !13342
  %inc = add nsw i32 %134, 1, !dbg !13342
  store i32 %inc, i32* %a, align 4, !dbg !13342
  br label %for.cond, !dbg !13343, !llvm.loop !13344

for.end:                                          ; preds = %for.cond
  br label %if.end174, !dbg !13346

if.else166:                                       ; preds = %sw.epilog
  %135 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13347
  %type167 = getelementptr inbounds %struct.Object, %struct.Object* %135, i32 0, i32 3, !dbg !13349
  %136 = load i16, i16* %type167, align 8, !dbg !13349
  %conv168 = sext i16 %136 to i32, !dbg !13347
  %cmp169 = icmp eq i32 %conv168, 10, !dbg !13350
  br i1 %cmp169, label %if.then171, label %if.end173, !dbg !13351

if.then171:                                       ; preds = %if.else166
  %137 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13352
  %138 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13353
  %data172 = getelementptr inbounds %struct.Object, %struct.Object* %138, i32 0, i32 19, !dbg !13354
  %139 = load i8*, i8** %data172, align 8, !dbg !13354
  %140 = bitcast i8* %139 to %struct.Lamp*, !dbg !13353
  %141 = load float, float* %ctime, align 4, !dbg !13355
  call void @lamp_drivers_update(%struct.Scene* %137, %struct.Lamp* %140, float %141), !dbg !13356
  br label %if.end173, !dbg !13356

if.end173:                                        ; preds = %if.then171, %if.else166
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %for.end
  %142 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13357
  %143 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13359
  %obedit175 = getelementptr inbounds %struct.Scene, %struct.Scene* %143, i32 0, i32 7, !dbg !13360
  %144 = load %struct.Object*, %struct.Object** %obedit175, align 8, !dbg !13360
  %cmp176 = icmp ne %struct.Object* %142, %144, !dbg !13361
  br i1 %cmp176, label %land.lhs.true178, label %if.end267, !dbg !13362

land.lhs.true178:                                 ; preds = %if.end174
  %145 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13363
  %particlesystem = getelementptr inbounds %struct.Object, %struct.Object* %145, i32 0, i32 109, !dbg !13364
  %first179 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem, i32 0, i32 0, !dbg !13365
  %146 = load i8*, i8** %first179, align 8, !dbg !13365
  %tobool180 = icmp ne i8* %146, null, !dbg !13363
  br i1 %tobool180, label %if.then181, label %if.end267, !dbg !13366

if.then181:                                       ; preds = %land.lhs.true178
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %tpsys, metadata !13367, metadata !DIExpression()), !dbg !13369
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !13370, metadata !DIExpression()), !dbg !13371
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !13372, metadata !DIExpression()), !dbg !13373
  %147 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13374
  %transflag = getelementptr inbounds %struct.Object, %struct.Object* %147, i32 0, i32 55, !dbg !13375
  %148 = load i16, i16* %transflag, align 8, !dbg !13376
  %conv182 = sext i16 %148 to i32, !dbg !13376
  %and183 = and i32 %conv182, -2049, !dbg !13376
  %conv184 = trunc i32 %and183 to i16, !dbg !13376
  store i16 %conv184, i16* %transflag, align 8, !dbg !13376
  %149 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13377
  %particlesystem185 = getelementptr inbounds %struct.Object, %struct.Object* %149, i32 0, i32 109, !dbg !13378
  %first186 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem185, i32 0, i32 0, !dbg !13379
  %150 = load i8*, i8** %first186, align 8, !dbg !13379
  %151 = bitcast i8* %150 to %struct.ParticleSystem*, !dbg !13377
  store %struct.ParticleSystem* %151, %struct.ParticleSystem** %psys, align 8, !dbg !13380
  br label %while.cond, !dbg !13381

while.cond:                                       ; preds = %if.end240, %if.then181
  %152 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !13382
  %tobool187 = icmp ne %struct.ParticleSystem* %152, null, !dbg !13381
  br i1 %tobool187, label %while.body, label %while.end, !dbg !13381

while.body:                                       ; preds = %while.cond
  %153 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !13383
  %recalc188 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %153, i32 0, i32 31, !dbg !13386
  %154 = load i16, i16* %recalc188, align 4, !dbg !13386
  %conv189 = sext i16 %154 to i32, !dbg !13383
  %and190 = and i32 %conv189, 32, !dbg !13387
  %tobool191 = icmp ne i32 %and190, 0, !dbg !13387
  br i1 %tobool191, label %if.then192, label %if.end193, !dbg !13388

if.then192:                                       ; preds = %while.body
  %155 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13389
  %156 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !13391
  call void @psys_changed_type(%struct.Object* %155, %struct.ParticleSystem* %156), !dbg !13392
  br label %if.end193, !dbg !13393

if.end193:                                        ; preds = %if.then192, %while.body
  %157 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13394
  %158 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !13396
  %call194 = call i32 @psys_check_enabled(%struct.Object* %157, %struct.ParticleSystem* %158), !dbg !13397
  %tobool195 = icmp ne i32 %call194, 0, !dbg !13397
  br i1 %tobool195, label %if.then196, label %if.else230, !dbg !13398

if.then196:                                       ; preds = %if.end193
  %159 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !13399
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %159, i32 0, i32 2, !dbg !13402
  %160 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !13402
  %tobool197 = icmp ne %struct.ParticleSettings* %160, null, !dbg !13399
  br i1 %tobool197, label %land.lhs.true198, label %if.end229, !dbg !13403

land.lhs.true198:                                 ; preds = %if.then196
  %161 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !13404
  %part199 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %161, i32 0, i32 2, !dbg !13405
  %162 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part199, align 8, !dbg !13405
  %draw_as = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %162, i32 0, i32 17, !dbg !13406
  %163 = load i16, i16* %draw_as, align 8, !dbg !13406
  %conv200 = sext i16 %163 to i32, !dbg !13404
  %cmp201 = icmp eq i32 %conv200, 10, !dbg !13407
  br i1 %cmp201, label %land.lhs.true206, label %lor.lhs.false203, !dbg !13408

lor.lhs.false203:                                 ; preds = %land.lhs.true198
  %164 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx.addr, align 8, !dbg !13409
  %mode = getelementptr inbounds %struct.EvaluationContext, %struct.EvaluationContext* %164, i32 0, i32 0, !dbg !13410
  %165 = load i32, i32* %mode, align 4, !dbg !13410
  %cmp204 = icmp eq i32 %165, 2, !dbg !13411
  br i1 %cmp204, label %land.lhs.true206, label %if.end229, !dbg !13412

land.lhs.true206:                                 ; preds = %lor.lhs.false203, %land.lhs.true198
  %166 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !13413
  %part207 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %166, i32 0, i32 2, !dbg !13414
  %167 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part207, align 8, !dbg !13414
  %ren_as = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %167, i32 0, i32 21, !dbg !13415
  %168 = load i16, i16* %ren_as, align 8, !dbg !13415
  %conv208 = sext i16 %168 to i32, !dbg !13413
  %cmp209 = icmp eq i32 %conv208, 7, !dbg !13416
  br i1 %cmp209, label %land.lhs.true211, label %lor.lhs.false214, !dbg !13417

land.lhs.true211:                                 ; preds = %land.lhs.true206
  %169 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !13418
  %part212 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %169, i32 0, i32 2, !dbg !13419
  %170 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part212, align 8, !dbg !13419
  %dup_ob = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %170, i32 0, i32 125, !dbg !13420
  %171 = load %struct.Object*, %struct.Object** %dup_ob, align 8, !dbg !13420
  %tobool213 = icmp ne %struct.Object* %171, null, !dbg !13418
  br i1 %tobool213, label %if.then224, label %lor.lhs.false214, !dbg !13421

lor.lhs.false214:                                 ; preds = %land.lhs.true211, %land.lhs.true206
  %172 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !13422
  %part215 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %172, i32 0, i32 2, !dbg !13423
  %173 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part215, align 8, !dbg !13423
  %ren_as216 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %173, i32 0, i32 21, !dbg !13424
  %174 = load i16, i16* %ren_as216, align 8, !dbg !13424
  %conv217 = sext i16 %174 to i32, !dbg !13422
  %cmp218 = icmp eq i32 %conv217, 8, !dbg !13425
  br i1 %cmp218, label %land.lhs.true220, label %if.end229, !dbg !13426

land.lhs.true220:                                 ; preds = %lor.lhs.false214
  %175 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !13427
  %part221 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %175, i32 0, i32 2, !dbg !13428
  %176 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part221, align 8, !dbg !13428
  %dup_group222 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %176, i32 0, i32 122, !dbg !13429
  %177 = load %struct.Group*, %struct.Group** %dup_group222, align 8, !dbg !13429
  %tobool223 = icmp ne %struct.Group* %177, null, !dbg !13427
  br i1 %tobool223, label %if.then224, label %if.end229, !dbg !13430

if.then224:                                       ; preds = %land.lhs.true220, %land.lhs.true211
  %178 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13431
  %transflag225 = getelementptr inbounds %struct.Object, %struct.Object* %178, i32 0, i32 55, !dbg !13433
  %179 = load i16, i16* %transflag225, align 8, !dbg !13434
  %conv226 = sext i16 %179 to i32, !dbg !13434
  %or227 = or i32 %conv226, 2048, !dbg !13434
  %conv228 = trunc i32 %or227 to i16, !dbg !13434
  store i16 %conv228, i16* %transflag225, align 8, !dbg !13434
  br label %if.end229, !dbg !13435

if.end229:                                        ; preds = %if.then224, %land.lhs.true220, %lor.lhs.false214, %lor.lhs.false203, %if.then196
  %180 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13436
  %181 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13437
  %182 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !13438
  call void @particle_system_update(%struct.Scene* %180, %struct.Object* %181, %struct.ParticleSystem* %182), !dbg !13439
  %183 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !13440
  %next = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %183, i32 0, i32 0, !dbg !13441
  %184 = load %struct.ParticleSystem*, %struct.ParticleSystem** %next, align 8, !dbg !13441
  store %struct.ParticleSystem* %184, %struct.ParticleSystem** %psys, align 8, !dbg !13442
  br label %if.end240, !dbg !13443

if.else230:                                       ; preds = %if.end193
  %185 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !13444
  %flag231 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %185, i32 0, i32 25, !dbg !13446
  %186 = load i32, i32* %flag231, align 4, !dbg !13446
  %and232 = and i32 %186, 256, !dbg !13447
  %tobool233 = icmp ne i32 %and232, 0, !dbg !13447
  br i1 %tobool233, label %if.then234, label %if.else237, !dbg !13448

if.then234:                                       ; preds = %if.else230
  %187 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !13449
  %next235 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %187, i32 0, i32 0, !dbg !13451
  %188 = load %struct.ParticleSystem*, %struct.ParticleSystem** %next235, align 8, !dbg !13451
  store %struct.ParticleSystem* %188, %struct.ParticleSystem** %tpsys, align 8, !dbg !13452
  %189 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13453
  %particlesystem236 = getelementptr inbounds %struct.Object, %struct.Object* %189, i32 0, i32 109, !dbg !13454
  %190 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !13455
  %191 = bitcast %struct.ParticleSystem* %190 to i8*, !dbg !13455
  call void @BLI_remlink(%struct.ListBase* %particlesystem236, i8* %191), !dbg !13456
  %192 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13457
  %193 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !13458
  call void @psys_free(%struct.Object* %192, %struct.ParticleSystem* %193), !dbg !13459
  %194 = load %struct.ParticleSystem*, %struct.ParticleSystem** %tpsys, align 8, !dbg !13460
  store %struct.ParticleSystem* %194, %struct.ParticleSystem** %psys, align 8, !dbg !13461
  br label %if.end239, !dbg !13462

if.else237:                                       ; preds = %if.else230
  %195 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !13463
  %next238 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %195, i32 0, i32 0, !dbg !13464
  %196 = load %struct.ParticleSystem*, %struct.ParticleSystem** %next238, align 8, !dbg !13464
  store %struct.ParticleSystem* %196, %struct.ParticleSystem** %psys, align 8, !dbg !13465
  br label %if.end239

if.end239:                                        ; preds = %if.else237, %if.then234
  br label %if.end240

if.end240:                                        ; preds = %if.end239, %if.end229
  br label %while.cond, !dbg !13381, !llvm.loop !13466

while.end:                                        ; preds = %while.cond
  %197 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx.addr, align 8, !dbg !13468
  %mode241 = getelementptr inbounds %struct.EvaluationContext, %struct.EvaluationContext* %197, i32 0, i32 0, !dbg !13470
  %198 = load i32, i32* %mode241, align 4, !dbg !13470
  %cmp242 = icmp eq i32 %198, 2, !dbg !13471
  br i1 %cmp242, label %land.lhs.true244, label %if.end266, !dbg !13472

land.lhs.true244:                                 ; preds = %while.end
  %199 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13473
  %transflag245 = getelementptr inbounds %struct.Object, %struct.Object* %199, i32 0, i32 55, !dbg !13474
  %200 = load i16, i16* %transflag245, align 8, !dbg !13474
  %conv246 = sext i16 %200 to i32, !dbg !13473
  %and247 = and i32 %conv246, 2048, !dbg !13475
  %tobool248 = icmp ne i32 %and247, 0, !dbg !13475
  br i1 %tobool248, label %if.then249, label %if.end266, !dbg !13476

if.then249:                                       ; preds = %land.lhs.true244
  %201 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13477
  %202 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13479
  %203 = load i64, i64* @CD_MASK_BAREMESH, align 8, !dbg !13480
  %or250 = or i64 %203, 32, !dbg !13481
  %or251 = or i64 %or250, 64, !dbg !13482
  %call252 = call %struct.DerivedMesh* @mesh_create_derived_render(%struct.Scene* %201, %struct.Object* %202, i64 %or251), !dbg !13483
  store %struct.DerivedMesh* %call252, %struct.DerivedMesh** %dm, align 8, !dbg !13484
  %204 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !13485
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %204, i32 0, i32 95, !dbg !13486
  %205 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !13486
  %206 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !13487
  call void %205(%struct.DerivedMesh* %206), !dbg !13485
  %207 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13488
  %particlesystem253 = getelementptr inbounds %struct.Object, %struct.Object* %207, i32 0, i32 109, !dbg !13490
  %first254 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem253, i32 0, i32 0, !dbg !13491
  %208 = load i8*, i8** %first254, align 8, !dbg !13491
  %209 = bitcast i8* %208 to %struct.ParticleSystem*, !dbg !13488
  store %struct.ParticleSystem* %209, %struct.ParticleSystem** %psys, align 8, !dbg !13492
  br label %for.cond255, !dbg !13493

for.cond255:                                      ; preds = %for.inc263, %if.then249
  %210 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !13494
  %tobool256 = icmp ne %struct.ParticleSystem* %210, null, !dbg !13496
  br i1 %tobool256, label %for.body257, label %for.end265, !dbg !13496

for.body257:                                      ; preds = %for.cond255
  %211 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13497
  %212 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !13498
  %call258 = call %struct.ParticleSystemModifierData* @psys_get_modifier(%struct.Object* %211, %struct.ParticleSystem* %212), !dbg !13499
  %flag259 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %call258, i32 0, i32 6, !dbg !13500
  %213 = load i16, i16* %flag259, align 4, !dbg !13501
  %conv260 = sext i16 %213 to i32, !dbg !13501
  %and261 = and i32 %conv260, -3, !dbg !13501
  %conv262 = trunc i32 %and261 to i16, !dbg !13501
  store i16 %conv262, i16* %flag259, align 4, !dbg !13501
  br label %for.inc263, !dbg !13499

for.inc263:                                       ; preds = %for.body257
  %214 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !13502
  %next264 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %214, i32 0, i32 0, !dbg !13503
  %215 = load %struct.ParticleSystem*, %struct.ParticleSystem** %next264, align 8, !dbg !13503
  store %struct.ParticleSystem* %215, %struct.ParticleSystem** %psys, align 8, !dbg !13504
  br label %for.cond255, !dbg !13505, !llvm.loop !13506

for.end265:                                       ; preds = %for.cond255
  br label %if.end266, !dbg !13508

if.end266:                                        ; preds = %for.end265, %land.lhs.true244, %while.end
  br label %if.end267, !dbg !13509

if.end267:                                        ; preds = %if.end266, %land.lhs.true178, %if.end174
  br label %if.end268, !dbg !13510

if.end268:                                        ; preds = %if.end267, %if.end66
  %216 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13511
  %recalc269 = getelementptr inbounds %struct.Object, %struct.Object* %216, i32 0, i32 103, !dbg !13512
  %217 = load i8, i8* %recalc269, align 1, !dbg !13513
  %conv270 = zext i8 %217 to i32, !dbg !13513
  %and271 = and i32 %conv270, -8, !dbg !13513
  %conv272 = trunc i32 %and271 to i8, !dbg !13513
  store i8 %conv272, i8* %recalc269, align 1, !dbg !13513
  br label %if.end273, !dbg !13514

if.end273:                                        ; preds = %if.end268, %entry
  %218 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13515
  %proxy = getelementptr inbounds %struct.Object, %struct.Object* %218, i32 0, i32 11, !dbg !13517
  %219 = load %struct.Object*, %struct.Object** %proxy, align 8, !dbg !13517
  %tobool274 = icmp ne %struct.Object* %219, null, !dbg !13515
  br i1 %tobool274, label %if.then275, label %if.end287, !dbg !13518

if.then275:                                       ; preds = %if.end273
  %220 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13519
  %221 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13521
  %proxy276 = getelementptr inbounds %struct.Object, %struct.Object* %221, i32 0, i32 11, !dbg !13522
  %222 = load %struct.Object*, %struct.Object** %proxy276, align 8, !dbg !13522
  %proxy_from277 = getelementptr inbounds %struct.Object, %struct.Object* %222, i32 0, i32 13, !dbg !13523
  store %struct.Object* %220, %struct.Object** %proxy_from277, align 8, !dbg !13524
  %223 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13525
  %proxy_group278 = getelementptr inbounds %struct.Object, %struct.Object* %223, i32 0, i32 12, !dbg !13527
  %224 = load %struct.Object*, %struct.Object** %proxy_group278, align 8, !dbg !13527
  %cmp279 = icmp eq %struct.Object* %224, null, !dbg !13528
  br i1 %cmp279, label %if.then281, label %if.end286, !dbg !13529

if.then281:                                       ; preds = %if.then275
  %225 = load i8, i8* %do_proxy_update.addr, align 1, !dbg !13530
  %tobool282 = icmp ne i8 %225, 0, !dbg !13530
  br i1 %tobool282, label %if.then283, label %if.end285, !dbg !13533

if.then283:                                       ; preds = %if.then281
  %226 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx.addr, align 8, !dbg !13534
  %227 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13536
  %228 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13537
  %proxy284 = getelementptr inbounds %struct.Object, %struct.Object* %228, i32 0, i32 11, !dbg !13538
  %229 = load %struct.Object*, %struct.Object** %proxy284, align 8, !dbg !13538
  call void @BKE_object_handle_update(%struct.EvaluationContext* %226, %struct.Scene* %227, %struct.Object* %229), !dbg !13539
  br label %if.end285, !dbg !13540

if.end285:                                        ; preds = %if.then283, %if.then281
  br label %if.end286, !dbg !13541

if.end286:                                        ; preds = %if.end285, %if.then275
  br label %if.end287, !dbg !13542

if.end287:                                        ; preds = %if.end286, %if.end273
  ret void, !dbg !13543
}

declare dso_local void @BKE_pose_channels_hash_make(%struct.bPose*) #3

declare dso_local %struct.AnimData* @BKE_animdata_from_id(%struct.ID*) #3

declare dso_local %struct.Key* @BKE_key_from_object(%struct.Object*) #3

declare dso_local %struct.BMEditMesh* @BKE_editmesh_from_object(%struct.Object*) #3

declare dso_local void @makeDerivedMesh(%struct.Scene*, %struct.Object*, %struct.BMEditMesh*, i64, i32) #3

declare dso_local zeroext i8 @BKE_pose_copy_result(%struct.bPose*, %struct.bPose*) #3

declare dso_local void @BKE_pose_where_is(%struct.Scene*, %struct.Object*) #3

declare dso_local void @BKE_displist_make_mball(%struct.EvaluationContext*, %struct.Scene*, %struct.Object*) #3

declare dso_local void @BKE_displist_make_curveTypes(%struct.Scene*, %struct.Object*, i8 zeroext) #3

declare dso_local void @BKE_lattice_modifiers_calc(%struct.Scene*, %struct.Object*) #3

declare dso_local zeroext i8 @BKE_image_is_animated(%struct.Image*) #3

declare dso_local void @BKE_image_user_check_frame_calc(%struct.ImageUser*, i32, i32) #3

declare dso_local %struct.Material* @give_current_material(%struct.Object*, i16 signext) #3

declare dso_local void @material_drivers_update(%struct.Scene*, %struct.Material*, float) #3

declare dso_local void @lamp_drivers_update(%struct.Scene*, %struct.Lamp*, float) #3

declare dso_local void @psys_changed_type(%struct.Object*, %struct.ParticleSystem*) #3

declare dso_local i32 @psys_check_enabled(%struct.Object*, %struct.ParticleSystem*) #3

declare dso_local void @particle_system_update(%struct.Scene*, %struct.Object*, %struct.ParticleSystem*) #3

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #3

declare dso_local %struct.DerivedMesh* @mesh_create_derived_render(%struct.Scene*, %struct.Object*, i64) #3

declare dso_local %struct.ParticleSystemModifierData* @psys_get_modifier(%struct.Object*, %struct.ParticleSystem*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_handle_update(%struct.EvaluationContext* %eval_ctx, %struct.Scene* %scene, %struct.Object* %ob) #0 !dbg !13544 {
entry:
  %eval_ctx.addr = alloca %struct.EvaluationContext*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.EvaluationContext* %eval_ctx, %struct.EvaluationContext** %eval_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EvaluationContext** %eval_ctx.addr, metadata !13547, metadata !DIExpression()), !dbg !13548
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !13549, metadata !DIExpression()), !dbg !13550
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !13551, metadata !DIExpression()), !dbg !13552
  %0 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx.addr, align 8, !dbg !13553
  %1 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13554
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13555
  call void @BKE_object_handle_update_ex(%struct.EvaluationContext* %0, %struct.Scene* %1, %struct.Object* %2, %struct.RigidBodyWorld* null, i8 zeroext 1), !dbg !13556
  ret void, !dbg !13557
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_sculpt_modifiers_changed(%struct.Object* %ob) #0 !dbg !13558 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %ss = alloca %struct.SculptSession*, align 8
  %nodes = alloca %struct.PBVHNode**, align 8
  %n = alloca i32, align 4
  %totnode = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !13559, metadata !DIExpression()), !dbg !13560
  call void @llvm.dbg.declare(metadata %struct.SculptSession** %ss, metadata !13561, metadata !DIExpression()), !dbg !13564
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13565
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 2, !dbg !13566
  %1 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !13566
  store %struct.SculptSession* %1, %struct.SculptSession** %ss, align 8, !dbg !13564
  %2 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13567
  %tobool = icmp ne %struct.SculptSession* %2, null, !dbg !13567
  br i1 %tobool, label %if.then, label %if.end10, !dbg !13569

if.then:                                          ; preds = %entry
  %3 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13570
  %cache = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %3, i32 0, i32 28, !dbg !13573
  %4 = load %struct.StrokeCache*, %struct.StrokeCache** %cache, align 8, !dbg !13573
  %tobool1 = icmp ne %struct.StrokeCache* %4, null, !dbg !13570
  br i1 %tobool1, label %if.else, label %if.then2, !dbg !13574

if.then2:                                         ; preds = %if.then
  %5 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13575
  %pbvh = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %5, i32 0, i32 15, !dbg !13578
  %6 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !13578
  %tobool3 = icmp ne %struct.PBVH* %6, null, !dbg !13575
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !13579

if.then4:                                         ; preds = %if.then2
  %7 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13580
  %pbvh5 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %7, i32 0, i32 15, !dbg !13582
  %8 = load %struct.PBVH*, %struct.PBVH** %pbvh5, align 8, !dbg !13582
  call void @BKE_pbvh_free(%struct.PBVH* %8), !dbg !13583
  %9 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13584
  %pbvh6 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %9, i32 0, i32 15, !dbg !13585
  store %struct.PBVH* null, %struct.PBVH** %pbvh6, align 8, !dbg !13586
  br label %if.end, !dbg !13587

if.end:                                           ; preds = %if.then4, %if.then2
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13588
  %sculpt7 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 2, !dbg !13589
  %11 = load %struct.SculptSession*, %struct.SculptSession** %sculpt7, align 8, !dbg !13589
  call void @BKE_free_sculptsession_deformMats(%struct.SculptSession* %11), !dbg !13590
  br label %if.end9, !dbg !13591

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.PBVHNode*** %nodes, metadata !13592, metadata !DIExpression()), !dbg !13598
  call void @llvm.dbg.declare(metadata i32* %n, metadata !13599, metadata !DIExpression()), !dbg !13600
  call void @llvm.dbg.declare(metadata i32* %totnode, metadata !13601, metadata !DIExpression()), !dbg !13602
  %12 = load %struct.SculptSession*, %struct.SculptSession** %ss, align 8, !dbg !13603
  %pbvh8 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %12, i32 0, i32 15, !dbg !13604
  %13 = load %struct.PBVH*, %struct.PBVH** %pbvh8, align 8, !dbg !13604
  call void @BKE_pbvh_search_gather(%struct.PBVH* %13, i8 (%struct.PBVHNode*, i8*)* null, i8* null, %struct.PBVHNode*** %nodes, i32* %totnode), !dbg !13605
  store i32 0, i32* %n, align 4, !dbg !13606
  br label %for.cond, !dbg !13608

for.cond:                                         ; preds = %for.inc, %if.else
  %14 = load i32, i32* %n, align 4, !dbg !13609
  %15 = load i32, i32* %totnode, align 4, !dbg !13611
  %cmp = icmp slt i32 %14, %15, !dbg !13612
  br i1 %cmp, label %for.body, label %for.end, !dbg !13613

for.body:                                         ; preds = %for.cond
  %16 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !13614
  %17 = load i32, i32* %n, align 4, !dbg !13615
  %idxprom = sext i32 %17 to i64, !dbg !13614
  %arrayidx = getelementptr inbounds %struct.PBVHNode*, %struct.PBVHNode** %16, i64 %idxprom, !dbg !13614
  %18 = load %struct.PBVHNode*, %struct.PBVHNode** %arrayidx, align 8, !dbg !13614
  call void @BKE_pbvh_node_mark_update(%struct.PBVHNode* %18), !dbg !13616
  br label %for.inc, !dbg !13616

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %n, align 4, !dbg !13617
  %inc = add nsw i32 %19, 1, !dbg !13617
  store i32 %inc, i32* %n, align 4, !dbg !13617
  br label %for.cond, !dbg !13618, !llvm.loop !13619

for.end:                                          ; preds = %for.cond
  %20 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13621
  %21 = load %struct.PBVHNode**, %struct.PBVHNode*** %nodes, align 8, !dbg !13622
  %22 = bitcast %struct.PBVHNode** %21 to i8*, !dbg !13622
  call void %20(i8* %22), !dbg !13621
  br label %if.end9

if.end9:                                          ; preds = %for.end, %if.end
  br label %if.end10, !dbg !13623

if.end10:                                         ; preds = %if.end9, %entry
  ret void, !dbg !13624
}

declare dso_local void @BKE_pbvh_free(%struct.PBVH*) #3

declare dso_local void @BKE_free_sculptsession_deformMats(%struct.SculptSession*) #3

declare dso_local void @BKE_pbvh_search_gather(%struct.PBVH*, i8 (%struct.PBVHNode*, i8*)*, i8*, %struct.PBVHNode***, i32*) #3

declare dso_local void @BKE_pbvh_node_mark_update(%struct.PBVHNode*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_object_obdata_texspace_get(%struct.Object* %ob, i16** %r_texflag, float** %r_loc, float** %r_size, float** %r_rot) #0 !dbg !13625 {
entry:
  %retval = alloca i32, align 4
  %ob.addr = alloca %struct.Object*, align 8
  %r_texflag.addr = alloca i16**, align 8
  %r_loc.addr = alloca float**, align 8
  %r_size.addr = alloca float**, align 8
  %r_rot.addr = alloca float**, align 8
  %me = alloca %struct.Mesh*, align 8
  %cu = alloca %struct.Curve*, align 8
  %mb = alloca %struct.MetaBall*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !13630, metadata !DIExpression()), !dbg !13631
  store i16** %r_texflag, i16*** %r_texflag.addr, align 8
  call void @llvm.dbg.declare(metadata i16*** %r_texflag.addr, metadata !13632, metadata !DIExpression()), !dbg !13633
  store float** %r_loc, float*** %r_loc.addr, align 8
  call void @llvm.dbg.declare(metadata float*** %r_loc.addr, metadata !13634, metadata !DIExpression()), !dbg !13635
  store float** %r_size, float*** %r_size.addr, align 8
  call void @llvm.dbg.declare(metadata float*** %r_size.addr, metadata !13636, metadata !DIExpression()), !dbg !13637
  store float** %r_rot, float*** %r_rot.addr, align 8
  call void @llvm.dbg.declare(metadata float*** %r_rot.addr, metadata !13638, metadata !DIExpression()), !dbg !13639
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13640
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !13642
  %1 = load i8*, i8** %data, align 8, !dbg !13642
  %cmp = icmp eq i8* %1, null, !dbg !13643
  br i1 %cmp, label %if.then, label %if.end, !dbg !13644

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13645
  br label %return, !dbg !13645

if.end:                                           ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13646
  %data1 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !13646
  %3 = load i8*, i8** %data1, align 8, !dbg !13646
  %4 = bitcast i8* %3 to %struct.ID*, !dbg !13646
  %name = getelementptr inbounds %struct.ID, %struct.ID* %4, i32 0, i32 4, !dbg !13646
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !13646
  %5 = bitcast i8* %arraydecay to i16*, !dbg !13646
  %6 = load i16, i16* %5, align 8, !dbg !13646
  %conv = sext i16 %6 to i32, !dbg !13646
  switch i32 %conv, label %sw.default [
    i32 17741, label %sw.bb
    i32 21827, label %sw.bb17
    i32 16973, label %sw.bb38
  ], !dbg !13647

sw.bb:                                            ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !13648, metadata !DIExpression()), !dbg !13651
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13652
  %data2 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 19, !dbg !13653
  %8 = load i8*, i8** %data2, align 8, !dbg !13653
  %9 = bitcast i8* %8 to %struct.Mesh*, !dbg !13652
  store %struct.Mesh* %9, %struct.Mesh** %me, align 8, !dbg !13651
  %10 = load i16**, i16*** %r_texflag.addr, align 8, !dbg !13654
  %tobool = icmp ne i16** %10, null, !dbg !13654
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !13656

if.then3:                                         ; preds = %sw.bb
  %11 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !13657
  %texflag = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 37, !dbg !13658
  %12 = load i16**, i16*** %r_texflag.addr, align 8, !dbg !13659
  store i16* %texflag, i16** %12, align 8, !dbg !13660
  br label %if.end4, !dbg !13661

if.end4:                                          ; preds = %if.then3, %sw.bb
  %13 = load float**, float*** %r_loc.addr, align 8, !dbg !13662
  %tobool5 = icmp ne float** %13, null, !dbg !13662
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !13664

if.then6:                                         ; preds = %if.end4
  %14 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !13665
  %loc = getelementptr inbounds %struct.Mesh, %struct.Mesh* %14, i32 0, i32 33, !dbg !13666
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !13665
  %15 = load float**, float*** %r_loc.addr, align 8, !dbg !13667
  store float* %arraydecay7, float** %15, align 8, !dbg !13668
  br label %if.end8, !dbg !13669

if.end8:                                          ; preds = %if.then6, %if.end4
  %16 = load float**, float*** %r_size.addr, align 8, !dbg !13670
  %tobool9 = icmp ne float** %16, null, !dbg !13670
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !13672

if.then10:                                        ; preds = %if.end8
  %17 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !13673
  %size = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 34, !dbg !13674
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !13673
  %18 = load float**, float*** %r_size.addr, align 8, !dbg !13675
  store float* %arraydecay11, float** %18, align 8, !dbg !13676
  br label %if.end12, !dbg !13677

if.end12:                                         ; preds = %if.then10, %if.end8
  %19 = load float**, float*** %r_rot.addr, align 8, !dbg !13678
  %tobool13 = icmp ne float** %19, null, !dbg !13678
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !13680

if.then14:                                        ; preds = %if.end12
  %20 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !13681
  %rot = getelementptr inbounds %struct.Mesh, %struct.Mesh* %20, i32 0, i32 35, !dbg !13682
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %rot, i64 0, i64 0, !dbg !13681
  %21 = load float**, float*** %r_rot.addr, align 8, !dbg !13683
  store float* %arraydecay15, float** %21, align 8, !dbg !13684
  br label %if.end16, !dbg !13685

if.end16:                                         ; preds = %if.then14, %if.end12
  br label %sw.epilog, !dbg !13686

sw.bb17:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !13687, metadata !DIExpression()), !dbg !13689
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13690
  %data18 = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 19, !dbg !13691
  %23 = load i8*, i8** %data18, align 8, !dbg !13691
  %24 = bitcast i8* %23 to %struct.Curve*, !dbg !13690
  store %struct.Curve* %24, %struct.Curve** %cu, align 8, !dbg !13689
  %25 = load i16**, i16*** %r_texflag.addr, align 8, !dbg !13692
  %tobool19 = icmp ne i16** %25, null, !dbg !13692
  br i1 %tobool19, label %if.then20, label %if.end22, !dbg !13694

if.then20:                                        ; preds = %sw.bb17
  %26 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !13695
  %texflag21 = getelementptr inbounds %struct.Curve, %struct.Curve* %26, i32 0, i32 15, !dbg !13696
  %27 = load i16**, i16*** %r_texflag.addr, align 8, !dbg !13697
  store i16* %texflag21, i16** %27, align 8, !dbg !13698
  br label %if.end22, !dbg !13699

if.end22:                                         ; preds = %if.then20, %sw.bb17
  %28 = load float**, float*** %r_loc.addr, align 8, !dbg !13700
  %tobool23 = icmp ne float** %28, null, !dbg !13700
  br i1 %tobool23, label %if.then24, label %if.end27, !dbg !13702

if.then24:                                        ; preds = %if.end22
  %29 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !13703
  %loc25 = getelementptr inbounds %struct.Curve, %struct.Curve* %29, i32 0, i32 11, !dbg !13704
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %loc25, i64 0, i64 0, !dbg !13703
  %30 = load float**, float*** %r_loc.addr, align 8, !dbg !13705
  store float* %arraydecay26, float** %30, align 8, !dbg !13706
  br label %if.end27, !dbg !13707

if.end27:                                         ; preds = %if.then24, %if.end22
  %31 = load float**, float*** %r_size.addr, align 8, !dbg !13708
  %tobool28 = icmp ne float** %31, null, !dbg !13708
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !13710

if.then29:                                        ; preds = %if.end27
  %32 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !13711
  %size30 = getelementptr inbounds %struct.Curve, %struct.Curve* %32, i32 0, i32 12, !dbg !13712
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %size30, i64 0, i64 0, !dbg !13711
  %33 = load float**, float*** %r_size.addr, align 8, !dbg !13713
  store float* %arraydecay31, float** %33, align 8, !dbg !13714
  br label %if.end32, !dbg !13715

if.end32:                                         ; preds = %if.then29, %if.end27
  %34 = load float**, float*** %r_rot.addr, align 8, !dbg !13716
  %tobool33 = icmp ne float** %34, null, !dbg !13716
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !13718

if.then34:                                        ; preds = %if.end32
  %35 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !13719
  %rot35 = getelementptr inbounds %struct.Curve, %struct.Curve* %35, i32 0, i32 13, !dbg !13720
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %rot35, i64 0, i64 0, !dbg !13719
  %36 = load float**, float*** %r_rot.addr, align 8, !dbg !13721
  store float* %arraydecay36, float** %36, align 8, !dbg !13722
  br label %if.end37, !dbg !13723

if.end37:                                         ; preds = %if.then34, %if.end32
  br label %sw.epilog, !dbg !13724

sw.bb38:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.MetaBall** %mb, metadata !13725, metadata !DIExpression()), !dbg !13727
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13728
  %data39 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 19, !dbg !13729
  %38 = load i8*, i8** %data39, align 8, !dbg !13729
  %39 = bitcast i8* %38 to %struct.MetaBall*, !dbg !13728
  store %struct.MetaBall* %39, %struct.MetaBall** %mb, align 8, !dbg !13727
  %40 = load i16**, i16*** %r_texflag.addr, align 8, !dbg !13730
  %tobool40 = icmp ne i16** %40, null, !dbg !13730
  br i1 %tobool40, label %if.then41, label %if.end43, !dbg !13732

if.then41:                                        ; preds = %sw.bb38
  %41 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !13733
  %texflag42 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %41, i32 0, i32 10, !dbg !13734
  %42 = load i16**, i16*** %r_texflag.addr, align 8, !dbg !13735
  store i16* %texflag42, i16** %42, align 8, !dbg !13736
  br label %if.end43, !dbg !13737

if.end43:                                         ; preds = %if.then41, %sw.bb38
  %43 = load float**, float*** %r_loc.addr, align 8, !dbg !13738
  %tobool44 = icmp ne float** %43, null, !dbg !13738
  br i1 %tobool44, label %if.then45, label %if.end48, !dbg !13740

if.then45:                                        ; preds = %if.end43
  %44 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !13741
  %loc46 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %44, i32 0, i32 12, !dbg !13742
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %loc46, i64 0, i64 0, !dbg !13741
  %45 = load float**, float*** %r_loc.addr, align 8, !dbg !13743
  store float* %arraydecay47, float** %45, align 8, !dbg !13744
  br label %if.end48, !dbg !13745

if.end48:                                         ; preds = %if.then45, %if.end43
  %46 = load float**, float*** %r_size.addr, align 8, !dbg !13746
  %tobool49 = icmp ne float** %46, null, !dbg !13746
  br i1 %tobool49, label %if.then50, label %if.end53, !dbg !13748

if.then50:                                        ; preds = %if.end48
  %47 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !13749
  %size51 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %47, i32 0, i32 13, !dbg !13750
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %size51, i64 0, i64 0, !dbg !13749
  %48 = load float**, float*** %r_size.addr, align 8, !dbg !13751
  store float* %arraydecay52, float** %48, align 8, !dbg !13752
  br label %if.end53, !dbg !13753

if.end53:                                         ; preds = %if.then50, %if.end48
  %49 = load float**, float*** %r_rot.addr, align 8, !dbg !13754
  %tobool54 = icmp ne float** %49, null, !dbg !13754
  br i1 %tobool54, label %if.then55, label %if.end58, !dbg !13756

if.then55:                                        ; preds = %if.end53
  %50 = load %struct.MetaBall*, %struct.MetaBall** %mb, align 8, !dbg !13757
  %rot56 = getelementptr inbounds %struct.MetaBall, %struct.MetaBall* %50, i32 0, i32 14, !dbg !13758
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %rot56, i64 0, i64 0, !dbg !13757
  %51 = load float**, float*** %r_rot.addr, align 8, !dbg !13759
  store float* %arraydecay57, float** %51, align 8, !dbg !13760
  br label %if.end58, !dbg !13761

if.end58:                                         ; preds = %if.then55, %if.end53
  br label %sw.epilog, !dbg !13762

sw.default:                                       ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !13763
  br label %return, !dbg !13763

sw.epilog:                                        ; preds = %if.end58, %if.end37, %if.end16
  store i32 1, i32* %retval, align 4, !dbg !13764
  br label %return, !dbg !13764

return:                                           ; preds = %sw.epilog, %sw.default, %if.then
  %52 = load i32, i32* %retval, align 4, !dbg !13765
  ret i32 %52, !dbg !13765
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_boundbox_ray_hit_check(%struct.BoundBox* %bb, float* %ray_start, float* %ray_normal, float* %r_lambda) #0 !dbg !13766 {
entry:
  %bb.addr = alloca %struct.BoundBox*, align 8
  %ray_start.addr = alloca float*, align 8
  %ray_normal.addr = alloca float*, align 8
  %r_lambda.addr = alloca float*, align 8
  %triangle_indexes = alloca [12 x [3 x i32]], align 16
  %result = alloca i8, align 1
  %i = alloca i32, align 4
  %lambda = alloca float, align 4
  %v1 = alloca i32, align 4
  %v2 = alloca i32, align 4
  %v3 = alloca i32, align 4
  store %struct.BoundBox* %bb, %struct.BoundBox** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BoundBox** %bb.addr, metadata !13771, metadata !DIExpression()), !dbg !13772
  store float* %ray_start, float** %ray_start.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ray_start.addr, metadata !13773, metadata !DIExpression()), !dbg !13774
  store float* %ray_normal, float** %ray_normal.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ray_normal.addr, metadata !13775, metadata !DIExpression()), !dbg !13776
  store float* %r_lambda, float** %r_lambda.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_lambda.addr, metadata !13777, metadata !DIExpression()), !dbg !13778
  call void @llvm.dbg.declare(metadata [12 x [3 x i32]]* %triangle_indexes, metadata !13779, metadata !DIExpression()), !dbg !13782
  %0 = bitcast [12 x [3 x i32]]* %triangle_indexes to i8*, !dbg !13782
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([12 x [3 x i32]]* @__const.BKE_boundbox_ray_hit_check.triangle_indexes to i8*), i64 144, i1 false), !dbg !13782
  call void @llvm.dbg.declare(metadata i8* %result, metadata !13783, metadata !DIExpression()), !dbg !13784
  store i8 0, i8* %result, align 1, !dbg !13784
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13785, metadata !DIExpression()), !dbg !13786
  store i32 0, i32* %i, align 4, !dbg !13787
  br label %for.cond, !dbg !13789

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !13790
  %cmp = icmp slt i32 %1, 12, !dbg !13792
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !13793

land.rhs:                                         ; preds = %for.cond
  %2 = load i8, i8* %result, align 1, !dbg !13794
  %tobool = icmp ne i8 %2, 0, !dbg !13794
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !13795

lor.rhs:                                          ; preds = %land.rhs
  %3 = load float*, float** %r_lambda.addr, align 8, !dbg !13796
  %tobool1 = icmp ne float* %3, null, !dbg !13795
  br label %lor.end, !dbg !13795

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %4 = phi i1 [ true, %land.rhs ], [ %tobool1, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %4, %lor.end ], !dbg !13797
  br i1 %5, label %for.body, label %for.end, !dbg !13798

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata float* %lambda, metadata !13799, metadata !DIExpression()), !dbg !13801
  call void @llvm.dbg.declare(metadata i32* %v1, metadata !13802, metadata !DIExpression()), !dbg !13803
  call void @llvm.dbg.declare(metadata i32* %v2, metadata !13804, metadata !DIExpression()), !dbg !13805
  call void @llvm.dbg.declare(metadata i32* %v3, metadata !13806, metadata !DIExpression()), !dbg !13807
  %6 = load i32, i32* %i, align 4, !dbg !13808
  %idxprom = sext i32 %6 to i64, !dbg !13809
  %arrayidx = getelementptr inbounds [12 x [3 x i32]], [12 x [3 x i32]]* %triangle_indexes, i64 0, i64 %idxprom, !dbg !13809
  %arrayidx2 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx, i64 0, i64 0, !dbg !13809
  %7 = load i32, i32* %arrayidx2, align 4, !dbg !13809
  store i32 %7, i32* %v1, align 4, !dbg !13810
  %8 = load i32, i32* %i, align 4, !dbg !13811
  %idxprom3 = sext i32 %8 to i64, !dbg !13812
  %arrayidx4 = getelementptr inbounds [12 x [3 x i32]], [12 x [3 x i32]]* %triangle_indexes, i64 0, i64 %idxprom3, !dbg !13812
  %arrayidx5 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx4, i64 0, i64 1, !dbg !13812
  %9 = load i32, i32* %arrayidx5, align 4, !dbg !13812
  store i32 %9, i32* %v2, align 4, !dbg !13813
  %10 = load i32, i32* %i, align 4, !dbg !13814
  %idxprom6 = sext i32 %10 to i64, !dbg !13815
  %arrayidx7 = getelementptr inbounds [12 x [3 x i32]], [12 x [3 x i32]]* %triangle_indexes, i64 0, i64 %idxprom6, !dbg !13815
  %arrayidx8 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx7, i64 0, i64 2, !dbg !13815
  %11 = load i32, i32* %arrayidx8, align 4, !dbg !13815
  store i32 %11, i32* %v3, align 4, !dbg !13816
  %12 = load float*, float** %ray_start.addr, align 8, !dbg !13817
  %13 = load float*, float** %ray_normal.addr, align 8, !dbg !13819
  %14 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !13820
  %vec = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %14, i32 0, i32 0, !dbg !13821
  %15 = load i32, i32* %v1, align 4, !dbg !13822
  %idxprom9 = sext i32 %15 to i64, !dbg !13820
  %arrayidx10 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec, i64 0, i64 %idxprom9, !dbg !13820
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx10, i64 0, i64 0, !dbg !13820
  %16 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !13823
  %vec11 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %16, i32 0, i32 0, !dbg !13824
  %17 = load i32, i32* %v2, align 4, !dbg !13825
  %idxprom12 = sext i32 %17 to i64, !dbg !13823
  %arrayidx13 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec11, i64 0, i64 %idxprom12, !dbg !13823
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx13, i64 0, i64 0, !dbg !13823
  %18 = load %struct.BoundBox*, %struct.BoundBox** %bb.addr, align 8, !dbg !13826
  %vec15 = getelementptr inbounds %struct.BoundBox, %struct.BoundBox* %18, i32 0, i32 0, !dbg !13827
  %19 = load i32, i32* %v3, align 4, !dbg !13828
  %idxprom16 = sext i32 %19 to i64, !dbg !13826
  %arrayidx17 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %vec15, i64 0, i64 %idxprom16, !dbg !13826
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx17, i64 0, i64 0, !dbg !13826
  %call = call zeroext i8 @isect_ray_tri_v3(float* %12, float* %13, float* %arraydecay, float* %arraydecay14, float* %arraydecay18, float* %lambda, float* null), !dbg !13829
  %conv = zext i8 %call to i32, !dbg !13829
  %tobool19 = icmp ne i32 %conv, 0, !dbg !13829
  br i1 %tobool19, label %land.lhs.true, label %if.end25, !dbg !13830

land.lhs.true:                                    ; preds = %for.body
  %20 = load float*, float** %r_lambda.addr, align 8, !dbg !13831
  %tobool20 = icmp ne float* %20, null, !dbg !13831
  br i1 %tobool20, label %lor.lhs.false, label %if.then, !dbg !13832

lor.lhs.false:                                    ; preds = %land.lhs.true
  %21 = load float*, float** %r_lambda.addr, align 8, !dbg !13833
  %22 = load float, float* %21, align 4, !dbg !13834
  %23 = load float, float* %lambda, align 4, !dbg !13835
  %cmp21 = fcmp ogt float %22, %23, !dbg !13836
  br i1 %cmp21, label %if.then, label %if.end25, !dbg !13837

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  store i8 1, i8* %result, align 1, !dbg !13838
  %24 = load float*, float** %r_lambda.addr, align 8, !dbg !13840
  %tobool23 = icmp ne float* %24, null, !dbg !13840
  br i1 %tobool23, label %if.then24, label %if.end, !dbg !13842

if.then24:                                        ; preds = %if.then
  %25 = load float, float* %lambda, align 4, !dbg !13843
  %26 = load float*, float** %r_lambda.addr, align 8, !dbg !13845
  store float %25, float* %26, align 4, !dbg !13846
  br label %if.end, !dbg !13847

if.end:                                           ; preds = %if.then24, %if.then
  br label %if.end25, !dbg !13848

if.end25:                                         ; preds = %if.end, %lor.lhs.false, %for.body
  br label %for.inc, !dbg !13849

for.inc:                                          ; preds = %if.end25
  %27 = load i32, i32* %i, align 4, !dbg !13850
  %inc = add nsw i32 %27, 1, !dbg !13850
  store i32 %inc, i32* %i, align 4, !dbg !13850
  br label %for.cond, !dbg !13851, !llvm.loop !13852

for.end:                                          ; preds = %land.end
  %28 = load i8, i8* %result, align 1, !dbg !13854
  ret i8 %28, !dbg !13855
}

declare dso_local zeroext i8 @isect_ray_tri_v3(float*, float*, float*, float*, float*, float*, float*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_object_insert_ptcache(%struct.Object* %ob) #0 !dbg !13856 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %link = alloca %struct.LinkData*, align 8
  %i = alloca i32, align 4
  %index = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !13859, metadata !DIExpression()), !dbg !13860
  call void @llvm.dbg.declare(metadata %struct.LinkData** %link, metadata !13861, metadata !DIExpression()), !dbg !13870
  store %struct.LinkData* null, %struct.LinkData** %link, align 8, !dbg !13870
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13871, metadata !DIExpression()), !dbg !13872
  store i32 0, i32* %i, align 4, !dbg !13872
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13873
  %pc_ids = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 126, !dbg !13874
  call void @BLI_sortlist(%struct.ListBase* %pc_ids, i32 (i8*, i8*)* @pc_cmp), !dbg !13875
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13876
  %pc_ids1 = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 126, !dbg !13878
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %pc_ids1, i32 0, i32 0, !dbg !13879
  %2 = load i8*, i8** %first, align 8, !dbg !13879
  %3 = bitcast i8* %2 to %struct.LinkData*, !dbg !13876
  store %struct.LinkData* %3, %struct.LinkData** %link, align 8, !dbg !13880
  store i32 0, i32* %i, align 4, !dbg !13881
  br label %for.cond, !dbg !13882

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.LinkData*, %struct.LinkData** %link, align 8, !dbg !13883
  %tobool = icmp ne %struct.LinkData* %4, null, !dbg !13885
  br i1 %tobool, label %for.body, label %for.end, !dbg !13885

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %index, metadata !13886, metadata !DIExpression()), !dbg !13888
  %5 = load %struct.LinkData*, %struct.LinkData** %link, align 8, !dbg !13889
  %data = getelementptr inbounds %struct.LinkData, %struct.LinkData* %5, i32 0, i32 2, !dbg !13889
  %6 = load i8*, i8** %data, align 8, !dbg !13889
  %7 = ptrtoint i8* %6 to i64, !dbg !13889
  %conv = trunc i64 %7 to i32, !dbg !13889
  store i32 %conv, i32* %index, align 4, !dbg !13888
  %8 = load i32, i32* %i, align 4, !dbg !13890
  %9 = load i32, i32* %index, align 4, !dbg !13892
  %cmp = icmp slt i32 %8, %9, !dbg !13893
  br i1 %cmp, label %if.then, label %if.end, !dbg !13894

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !13895

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !13896

for.inc:                                          ; preds = %if.end
  %10 = load %struct.LinkData*, %struct.LinkData** %link, align 8, !dbg !13897
  %next = getelementptr inbounds %struct.LinkData, %struct.LinkData* %10, i32 0, i32 0, !dbg !13898
  %11 = load %struct.LinkData*, %struct.LinkData** %next, align 8, !dbg !13898
  store %struct.LinkData* %11, %struct.LinkData** %link, align 8, !dbg !13899
  %12 = load i32, i32* %i, align 4, !dbg !13900
  %inc = add nsw i32 %12, 1, !dbg !13900
  store i32 %inc, i32* %i, align 4, !dbg !13900
  br label %for.cond, !dbg !13901, !llvm.loop !13902

for.end:                                          ; preds = %if.then, %for.cond
  %13 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !13904
  %call = call i8* %13(i64 24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0)), !dbg !13904
  %14 = bitcast i8* %call to %struct.LinkData*, !dbg !13904
  store %struct.LinkData* %14, %struct.LinkData** %link, align 8, !dbg !13905
  %15 = load i32, i32* %i, align 4, !dbg !13906
  %conv3 = sext i32 %15 to i64, !dbg !13906
  %16 = inttoptr i64 %conv3 to i8*, !dbg !13906
  %17 = load %struct.LinkData*, %struct.LinkData** %link, align 8, !dbg !13907
  %data4 = getelementptr inbounds %struct.LinkData, %struct.LinkData* %17, i32 0, i32 2, !dbg !13908
  store i8* %16, i8** %data4, align 8, !dbg !13909
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13910
  %pc_ids5 = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 126, !dbg !13911
  %19 = load %struct.LinkData*, %struct.LinkData** %link, align 8, !dbg !13912
  %20 = bitcast %struct.LinkData* %19 to i8*, !dbg !13912
  call void @BLI_addtail(%struct.ListBase* %pc_ids5, i8* %20), !dbg !13913
  %21 = load i32, i32* %i, align 4, !dbg !13914
  ret i32 %21, !dbg !13915
}

declare dso_local void @BLI_sortlist(%struct.ListBase*, i32 (i8*, i8*)*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @pc_cmp(i8* %a, i8* %b) #0 !dbg !13916 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %ad = alloca %struct.LinkData*, align 8
  %bd = alloca %struct.LinkData*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !13921, metadata !DIExpression()), !dbg !13922
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !13923, metadata !DIExpression()), !dbg !13924
  call void @llvm.dbg.declare(metadata %struct.LinkData** %ad, metadata !13925, metadata !DIExpression()), !dbg !13928
  %0 = load i8*, i8** %a.addr, align 8, !dbg !13929
  %1 = bitcast i8* %0 to %struct.LinkData*, !dbg !13929
  store %struct.LinkData* %1, %struct.LinkData** %ad, align 8, !dbg !13928
  call void @llvm.dbg.declare(metadata %struct.LinkData** %bd, metadata !13930, metadata !DIExpression()), !dbg !13931
  %2 = load i8*, i8** %b.addr, align 8, !dbg !13932
  %3 = bitcast i8* %2 to %struct.LinkData*, !dbg !13932
  store %struct.LinkData* %3, %struct.LinkData** %bd, align 8, !dbg !13931
  %4 = load %struct.LinkData*, %struct.LinkData** %ad, align 8, !dbg !13933
  %data = getelementptr inbounds %struct.LinkData, %struct.LinkData* %4, i32 0, i32 2, !dbg !13933
  %5 = load i8*, i8** %data, align 8, !dbg !13933
  %6 = ptrtoint i8* %5 to i64, !dbg !13933
  %conv = trunc i64 %6 to i32, !dbg !13933
  %7 = load %struct.LinkData*, %struct.LinkData** %bd, align 8, !dbg !13935
  %data1 = getelementptr inbounds %struct.LinkData, %struct.LinkData* %7, i32 0, i32 2, !dbg !13935
  %8 = load i8*, i8** %data1, align 8, !dbg !13935
  %9 = ptrtoint i8* %8 to i64, !dbg !13935
  %conv2 = trunc i64 %9 to i32, !dbg !13935
  %cmp = icmp sgt i32 %conv, %conv2, !dbg !13936
  br i1 %cmp, label %if.then, label %if.else, !dbg !13937

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !13938
  br label %return, !dbg !13938

if.else:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13939
  br label %return, !dbg !13939

return:                                           ; preds = %if.else, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !13940
  ret i32 %10, !dbg !13940
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_delete_ptcache(%struct.Object* %ob, i32 %index) #0 !dbg !13941 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %index.addr = alloca i32, align 4
  %list_index = alloca i32, align 4
  %link = alloca %struct.LinkData*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !13944, metadata !DIExpression()), !dbg !13945
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !13946, metadata !DIExpression()), !dbg !13947
  call void @llvm.dbg.declare(metadata i32* %list_index, metadata !13948, metadata !DIExpression()), !dbg !13949
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13950
  %pc_ids = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 126, !dbg !13951
  %1 = load i32, i32* %index.addr, align 4, !dbg !13952
  %call = call i32 @pc_findindex(%struct.ListBase* %pc_ids, i32 %1), !dbg !13953
  store i32 %call, i32* %list_index, align 4, !dbg !13949
  call void @llvm.dbg.declare(metadata %struct.LinkData** %link, metadata !13954, metadata !DIExpression()), !dbg !13955
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13956
  %pc_ids1 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 126, !dbg !13957
  %3 = load i32, i32* %list_index, align 4, !dbg !13958
  %call2 = call i8* @BLI_findlink(%struct.ListBase* %pc_ids1, i32 %3), !dbg !13959
  %4 = bitcast i8* %call2 to %struct.LinkData*, !dbg !13959
  store %struct.LinkData* %4, %struct.LinkData** %link, align 8, !dbg !13955
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13960
  %pc_ids3 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 126, !dbg !13961
  %6 = load %struct.LinkData*, %struct.LinkData** %link, align 8, !dbg !13962
  %7 = bitcast %struct.LinkData* %6 to i8*, !dbg !13962
  call void @BLI_freelinkN(%struct.ListBase* %pc_ids3, i8* %7), !dbg !13963
  ret void, !dbg !13964
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @pc_findindex(%struct.ListBase* %listbase, i32 %index) #0 !dbg !13965 {
entry:
  %retval = alloca i32, align 4
  %listbase.addr = alloca %struct.ListBase*, align 8
  %index.addr = alloca i32, align 4
  %link = alloca %struct.LinkData*, align 8
  %number = alloca i32, align 4
  store %struct.ListBase* %listbase, %struct.ListBase** %listbase.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %listbase.addr, metadata !13968, metadata !DIExpression()), !dbg !13969
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !13970, metadata !DIExpression()), !dbg !13971
  call void @llvm.dbg.declare(metadata %struct.LinkData** %link, metadata !13972, metadata !DIExpression()), !dbg !13973
  store %struct.LinkData* null, %struct.LinkData** %link, align 8, !dbg !13973
  call void @llvm.dbg.declare(metadata i32* %number, metadata !13974, metadata !DIExpression()), !dbg !13975
  store i32 0, i32* %number, align 4, !dbg !13975
  %0 = load %struct.ListBase*, %struct.ListBase** %listbase.addr, align 8, !dbg !13976
  %cmp = icmp eq %struct.ListBase* %0, null, !dbg !13978
  br i1 %cmp, label %if.then, label %if.end, !dbg !13979

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !13980
  br label %return, !dbg !13980

if.end:                                           ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %listbase.addr, align 8, !dbg !13981
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !13982
  %2 = load i8*, i8** %first, align 8, !dbg !13982
  %3 = bitcast i8* %2 to %struct.LinkData*, !dbg !13981
  store %struct.LinkData* %3, %struct.LinkData** %link, align 8, !dbg !13983
  br label %while.cond, !dbg !13984

while.cond:                                       ; preds = %if.end4, %if.end
  %4 = load %struct.LinkData*, %struct.LinkData** %link, align 8, !dbg !13985
  %tobool = icmp ne %struct.LinkData* %4, null, !dbg !13984
  br i1 %tobool, label %while.body, label %while.end, !dbg !13984

while.body:                                       ; preds = %while.cond
  %5 = load %struct.LinkData*, %struct.LinkData** %link, align 8, !dbg !13986
  %data = getelementptr inbounds %struct.LinkData, %struct.LinkData* %5, i32 0, i32 2, !dbg !13986
  %6 = load i8*, i8** %data, align 8, !dbg !13986
  %7 = ptrtoint i8* %6 to i64, !dbg !13986
  %conv = trunc i64 %7 to i32, !dbg !13986
  %8 = load i32, i32* %index.addr, align 4, !dbg !13989
  %cmp1 = icmp eq i32 %conv, %8, !dbg !13990
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !13991

if.then3:                                         ; preds = %while.body
  %9 = load i32, i32* %number, align 4, !dbg !13992
  store i32 %9, i32* %retval, align 4, !dbg !13993
  br label %return, !dbg !13993

if.end4:                                          ; preds = %while.body
  %10 = load i32, i32* %number, align 4, !dbg !13994
  %inc = add nsw i32 %10, 1, !dbg !13994
  store i32 %inc, i32* %number, align 4, !dbg !13994
  %11 = load %struct.LinkData*, %struct.LinkData** %link, align 8, !dbg !13995
  %next = getelementptr inbounds %struct.LinkData, %struct.LinkData* %11, i32 0, i32 0, !dbg !13996
  %12 = load %struct.LinkData*, %struct.LinkData** %next, align 8, !dbg !13996
  store %struct.LinkData* %12, %struct.LinkData** %link, align 8, !dbg !13997
  br label %while.cond, !dbg !13984, !llvm.loop !13998

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !14000
  br label %return, !dbg !14000

return:                                           ; preds = %while.end, %if.then3, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !14001
  ret i32 %13, !dbg !14001
}

declare dso_local i8* @BLI_findlink(%struct.ListBase*, i32) #3

declare dso_local void @BLI_freelinkN(%struct.ListBase*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.KeyBlock* @BKE_object_insert_shape_key(%struct.Scene* %scene, %struct.Object* %ob, i8* %name, i8 zeroext %from_mix) #0 !dbg !14002 {
entry:
  %retval = alloca %struct.KeyBlock*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %name.addr = alloca i8*, align 8
  %from_mix.addr = alloca i8, align 1
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !14005, metadata !DIExpression()), !dbg !14006
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !14007, metadata !DIExpression()), !dbg !14008
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !14009, metadata !DIExpression()), !dbg !14010
  store i8 %from_mix, i8* %from_mix.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %from_mix.addr, metadata !14011, metadata !DIExpression()), !dbg !14012
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14013
  %type = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 3, !dbg !14014
  %1 = load i16, i16* %type, align 8, !dbg !14014
  %conv = sext i16 %1 to i32, !dbg !14013
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb1
    i32 22, label %sw.bb3
  ], !dbg !14015

sw.bb:                                            ; preds = %entry
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14016
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14018
  %4 = load i8*, i8** %name.addr, align 8, !dbg !14019
  %5 = load i8, i8* %from_mix.addr, align 1, !dbg !14020
  %call = call %struct.KeyBlock* @insert_meshkey(%struct.Scene* %2, %struct.Object* %3, i8* %4, i8 zeroext %5), !dbg !14021
  store %struct.KeyBlock* %call, %struct.KeyBlock** %retval, align 8, !dbg !14022
  br label %return, !dbg !14022

sw.bb1:                                           ; preds = %entry, %entry
  %6 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14023
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14024
  %8 = load i8*, i8** %name.addr, align 8, !dbg !14025
  %9 = load i8, i8* %from_mix.addr, align 1, !dbg !14026
  %call2 = call %struct.KeyBlock* @insert_curvekey(%struct.Scene* %6, %struct.Object* %7, i8* %8, i8 zeroext %9), !dbg !14027
  store %struct.KeyBlock* %call2, %struct.KeyBlock** %retval, align 8, !dbg !14028
  br label %return, !dbg !14028

sw.bb3:                                           ; preds = %entry
  %10 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14029
  %11 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14030
  %12 = load i8*, i8** %name.addr, align 8, !dbg !14031
  %13 = load i8, i8* %from_mix.addr, align 1, !dbg !14032
  %call4 = call %struct.KeyBlock* @insert_lattkey(%struct.Scene* %10, %struct.Object* %11, i8* %12, i8 zeroext %13), !dbg !14033
  store %struct.KeyBlock* %call4, %struct.KeyBlock** %retval, align 8, !dbg !14034
  br label %return, !dbg !14034

sw.default:                                       ; preds = %entry
  store %struct.KeyBlock* null, %struct.KeyBlock** %retval, align 8, !dbg !14035
  br label %return, !dbg !14035

return:                                           ; preds = %sw.default, %sw.bb3, %sw.bb1, %sw.bb
  %14 = load %struct.KeyBlock*, %struct.KeyBlock** %retval, align 8, !dbg !14036
  ret %struct.KeyBlock* %14, !dbg !14036
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.KeyBlock* @insert_meshkey(%struct.Scene* %scene, %struct.Object* %ob, i8* %name, i8 zeroext %from_mix) #0 !dbg !14037 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %name.addr = alloca i8*, align 8
  %from_mix.addr = alloca i8, align 1
  %me = alloca %struct.Mesh*, align 8
  %key = alloca %struct.Key*, align 8
  %kb = alloca %struct.KeyBlock*, align 8
  %newkey = alloca i32, align 4
  %totelem = alloca i32, align 4
  %data7 = alloca float*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !14040, metadata !DIExpression()), !dbg !14041
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !14042, metadata !DIExpression()), !dbg !14043
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !14044, metadata !DIExpression()), !dbg !14045
  store i8 %from_mix, i8* %from_mix.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %from_mix.addr, metadata !14046, metadata !DIExpression()), !dbg !14047
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !14048, metadata !DIExpression()), !dbg !14049
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14050
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !14051
  %1 = load i8*, i8** %data, align 8, !dbg !14051
  %2 = bitcast i8* %1 to %struct.Mesh*, !dbg !14050
  store %struct.Mesh* %2, %struct.Mesh** %me, align 8, !dbg !14049
  call void @llvm.dbg.declare(metadata %struct.Key** %key, metadata !14052, metadata !DIExpression()), !dbg !14053
  %3 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !14054
  %key1 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %3, i32 0, i32 4, !dbg !14055
  %4 = load %struct.Key*, %struct.Key** %key1, align 8, !dbg !14055
  store %struct.Key* %4, %struct.Key** %key, align 8, !dbg !14053
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !14056, metadata !DIExpression()), !dbg !14057
  call void @llvm.dbg.declare(metadata i32* %newkey, metadata !14058, metadata !DIExpression()), !dbg !14059
  store i32 0, i32* %newkey, align 4, !dbg !14059
  %5 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !14060
  %cmp = icmp eq %struct.Key* %5, null, !dbg !14062
  br i1 %cmp, label %if.then, label %if.end, !dbg !14063

if.then:                                          ; preds = %entry
  %6 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !14064
  %7 = bitcast %struct.Mesh* %6 to %struct.ID*, !dbg !14066
  %call = call %struct.Key* @BKE_key_add(%struct.ID* %7), !dbg !14067
  %8 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !14068
  %key2 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %8, i32 0, i32 4, !dbg !14069
  store %struct.Key* %call, %struct.Key** %key2, align 8, !dbg !14070
  store %struct.Key* %call, %struct.Key** %key, align 8, !dbg !14071
  %9 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !14072
  %type = getelementptr inbounds %struct.Key, %struct.Key* %9, i32 0, i32 9, !dbg !14073
  store i16 1, i16* %type, align 8, !dbg !14074
  store i32 1, i32* %newkey, align 4, !dbg !14075
  br label %if.end, !dbg !14076

if.end:                                           ; preds = %if.then, %entry
  %10 = load i32, i32* %newkey, align 4, !dbg !14077
  %tobool = icmp ne i32 %10, 0, !dbg !14077
  br i1 %tobool, label %if.then5, label %lor.lhs.false, !dbg !14079

lor.lhs.false:                                    ; preds = %if.end
  %11 = load i8, i8* %from_mix.addr, align 1, !dbg !14080
  %conv = zext i8 %11 to i32, !dbg !14080
  %cmp3 = icmp eq i32 %conv, 0, !dbg !14081
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !14082

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  %12 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !14083
  %13 = load i8*, i8** %name.addr, align 8, !dbg !14085
  %call6 = call %struct.KeyBlock* @BKE_keyblock_add_ctime(%struct.Key* %12, i8* %13, i8 zeroext 0), !dbg !14086
  store %struct.KeyBlock* %call6, %struct.KeyBlock** %kb, align 8, !dbg !14087
  %14 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !14088
  %15 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !14089
  call void @BKE_key_convert_from_mesh(%struct.Mesh* %14, %struct.KeyBlock* %15), !dbg !14090
  br label %if.end12, !dbg !14091

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %totelem, metadata !14092, metadata !DIExpression()), !dbg !14094
  call void @llvm.dbg.declare(metadata float** %data7, metadata !14095, metadata !DIExpression()), !dbg !14096
  %16 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14097
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14098
  %call8 = call float* @BKE_key_evaluate_object(%struct.Scene* %16, %struct.Object* %17, i32* %totelem), !dbg !14099
  store float* %call8, float** %data7, align 8, !dbg !14096
  %18 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !14100
  %19 = load i8*, i8** %name.addr, align 8, !dbg !14101
  %call9 = call %struct.KeyBlock* @BKE_keyblock_add_ctime(%struct.Key* %18, i8* %19, i8 zeroext 0), !dbg !14102
  store %struct.KeyBlock* %call9, %struct.KeyBlock** %kb, align 8, !dbg !14103
  %20 = load float*, float** %data7, align 8, !dbg !14104
  %21 = bitcast float* %20 to i8*, !dbg !14104
  %22 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !14105
  %data10 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %22, i32 0, i32 10, !dbg !14106
  store i8* %21, i8** %data10, align 8, !dbg !14107
  %23 = load i32, i32* %totelem, align 4, !dbg !14108
  %24 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !14109
  %totelem11 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %24, i32 0, i32 8, !dbg !14110
  store i32 %23, i32* %totelem11, align 8, !dbg !14111
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then5
  %25 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !14112
  ret %struct.KeyBlock* %25, !dbg !14113
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.KeyBlock* @insert_curvekey(%struct.Scene* %scene, %struct.Object* %ob, i8* %name, i8 zeroext %from_mix) #0 !dbg !14114 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %name.addr = alloca i8*, align 8
  %from_mix.addr = alloca i8, align 1
  %cu = alloca %struct.Curve*, align 8
  %key = alloca %struct.Key*, align 8
  %kb = alloca %struct.KeyBlock*, align 8
  %lb = alloca %struct.ListBase*, align 8
  %newkey = alloca i32, align 4
  %basekb = alloca %struct.KeyBlock*, align 8
  %totelem16 = alloca i32, align 4
  %data17 = alloca float*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !14115, metadata !DIExpression()), !dbg !14116
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !14117, metadata !DIExpression()), !dbg !14118
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !14119, metadata !DIExpression()), !dbg !14120
  store i8 %from_mix, i8* %from_mix.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %from_mix.addr, metadata !14121, metadata !DIExpression()), !dbg !14122
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !14123, metadata !DIExpression()), !dbg !14124
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14125
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !14126
  %1 = load i8*, i8** %data, align 8, !dbg !14126
  %2 = bitcast i8* %1 to %struct.Curve*, !dbg !14125
  store %struct.Curve* %2, %struct.Curve** %cu, align 8, !dbg !14124
  call void @llvm.dbg.declare(metadata %struct.Key** %key, metadata !14127, metadata !DIExpression()), !dbg !14128
  %3 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !14129
  %key1 = getelementptr inbounds %struct.Curve, %struct.Curve* %3, i32 0, i32 9, !dbg !14130
  %4 = load %struct.Key*, %struct.Key** %key1, align 8, !dbg !14130
  store %struct.Key* %4, %struct.Key** %key, align 8, !dbg !14128
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !14131, metadata !DIExpression()), !dbg !14132
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb, metadata !14133, metadata !DIExpression()), !dbg !14134
  %5 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !14135
  %call = call %struct.ListBase* @BKE_curve_nurbs_get(%struct.Curve* %5), !dbg !14136
  store %struct.ListBase* %call, %struct.ListBase** %lb, align 8, !dbg !14134
  call void @llvm.dbg.declare(metadata i32* %newkey, metadata !14137, metadata !DIExpression()), !dbg !14138
  store i32 0, i32* %newkey, align 4, !dbg !14138
  %6 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !14139
  %cmp = icmp eq %struct.Key* %6, null, !dbg !14141
  br i1 %cmp, label %if.then, label %if.end, !dbg !14142

if.then:                                          ; preds = %entry
  %7 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !14143
  %8 = bitcast %struct.Curve* %7 to %struct.ID*, !dbg !14145
  %call2 = call %struct.Key* @BKE_key_add(%struct.ID* %8), !dbg !14146
  %9 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !14147
  %key3 = getelementptr inbounds %struct.Curve, %struct.Curve* %9, i32 0, i32 9, !dbg !14148
  store %struct.Key* %call2, %struct.Key** %key3, align 8, !dbg !14149
  store %struct.Key* %call2, %struct.Key** %key, align 8, !dbg !14150
  %10 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !14151
  %type = getelementptr inbounds %struct.Key, %struct.Key* %10, i32 0, i32 9, !dbg !14152
  store i16 1, i16* %type, align 8, !dbg !14153
  store i32 1, i32* %newkey, align 4, !dbg !14154
  br label %if.end, !dbg !14155

if.end:                                           ; preds = %if.then, %entry
  %11 = load i32, i32* %newkey, align 4, !dbg !14156
  %tobool = icmp ne i32 %11, 0, !dbg !14156
  br i1 %tobool, label %if.then6, label %lor.lhs.false, !dbg !14158

lor.lhs.false:                                    ; preds = %if.end
  %12 = load i8, i8* %from_mix.addr, align 1, !dbg !14159
  %conv = zext i8 %12 to i32, !dbg !14159
  %cmp4 = icmp eq i32 %conv, 0, !dbg !14160
  br i1 %cmp4, label %if.then6, label %if.else15, !dbg !14161

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  %13 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !14162
  %14 = load i8*, i8** %name.addr, align 8, !dbg !14164
  %call7 = call %struct.KeyBlock* @BKE_keyblock_add_ctime(%struct.Key* %13, i8* %14, i8 zeroext 0), !dbg !14165
  store %struct.KeyBlock* %call7, %struct.KeyBlock** %kb, align 8, !dbg !14166
  %15 = load i32, i32* %newkey, align 4, !dbg !14167
  %tobool8 = icmp ne i32 %15, 0, !dbg !14167
  br i1 %tobool8, label %if.else, label %if.then9, !dbg !14169

if.then9:                                         ; preds = %if.then6
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %basekb, metadata !14170, metadata !DIExpression()), !dbg !14172
  %16 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !14173
  %block = getelementptr inbounds %struct.Key, %struct.Key* %16, i32 0, i32 6, !dbg !14174
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block, i32 0, i32 0, !dbg !14175
  %17 = load i8*, i8** %first, align 8, !dbg !14175
  %18 = bitcast i8* %17 to %struct.KeyBlock*, !dbg !14176
  store %struct.KeyBlock* %18, %struct.KeyBlock** %basekb, align 8, !dbg !14172
  %19 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !14177
  %20 = load %struct.KeyBlock*, %struct.KeyBlock** %basekb, align 8, !dbg !14178
  %data10 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %20, i32 0, i32 10, !dbg !14179
  %21 = load i8*, i8** %data10, align 8, !dbg !14179
  %call11 = call i8* %19(i8* %21), !dbg !14177
  %22 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !14180
  %data12 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %22, i32 0, i32 10, !dbg !14181
  store i8* %call11, i8** %data12, align 8, !dbg !14182
  %23 = load %struct.KeyBlock*, %struct.KeyBlock** %basekb, align 8, !dbg !14183
  %totelem = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %23, i32 0, i32 8, !dbg !14184
  %24 = load i32, i32* %totelem, align 8, !dbg !14184
  %25 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !14185
  %totelem13 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %25, i32 0, i32 8, !dbg !14186
  store i32 %24, i32* %totelem13, align 8, !dbg !14187
  br label %if.end14, !dbg !14188

if.else:                                          ; preds = %if.then6
  %26 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !14189
  %27 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !14191
  %28 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !14192
  call void @BKE_key_convert_from_curve(%struct.Curve* %26, %struct.KeyBlock* %27, %struct.ListBase* %28), !dbg !14193
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then9
  br label %if.end22, !dbg !14194

if.else15:                                        ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %totelem16, metadata !14195, metadata !DIExpression()), !dbg !14197
  call void @llvm.dbg.declare(metadata float** %data17, metadata !14198, metadata !DIExpression()), !dbg !14199
  %29 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14200
  %30 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14201
  %call18 = call float* @BKE_key_evaluate_object(%struct.Scene* %29, %struct.Object* %30, i32* %totelem16), !dbg !14202
  store float* %call18, float** %data17, align 8, !dbg !14199
  %31 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !14203
  %32 = load i8*, i8** %name.addr, align 8, !dbg !14204
  %call19 = call %struct.KeyBlock* @BKE_keyblock_add_ctime(%struct.Key* %31, i8* %32, i8 zeroext 0), !dbg !14205
  store %struct.KeyBlock* %call19, %struct.KeyBlock** %kb, align 8, !dbg !14206
  %33 = load i32, i32* %totelem16, align 4, !dbg !14207
  %34 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !14208
  %totelem20 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %34, i32 0, i32 8, !dbg !14209
  store i32 %33, i32* %totelem20, align 8, !dbg !14210
  %35 = load float*, float** %data17, align 8, !dbg !14211
  %36 = bitcast float* %35 to i8*, !dbg !14211
  %37 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !14212
  %data21 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %37, i32 0, i32 10, !dbg !14213
  store i8* %36, i8** %data21, align 8, !dbg !14214
  br label %if.end22

if.end22:                                         ; preds = %if.else15, %if.end14
  %38 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !14215
  ret %struct.KeyBlock* %38, !dbg !14216
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.KeyBlock* @insert_lattkey(%struct.Scene* %scene, %struct.Object* %ob, i8* %name, i8 zeroext %from_mix) #0 !dbg !14217 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %name.addr = alloca i8*, align 8
  %from_mix.addr = alloca i8, align 1
  %lt = alloca %struct.Lattice*, align 8
  %key = alloca %struct.Key*, align 8
  %kb = alloca %struct.KeyBlock*, align 8
  %newkey = alloca i32, align 4
  %basekb = alloca %struct.KeyBlock*, align 8
  %totelem15 = alloca i32, align 4
  %data16 = alloca float*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !14218, metadata !DIExpression()), !dbg !14219
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !14220, metadata !DIExpression()), !dbg !14221
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !14222, metadata !DIExpression()), !dbg !14223
  store i8 %from_mix, i8* %from_mix.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %from_mix.addr, metadata !14224, metadata !DIExpression()), !dbg !14225
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !14226, metadata !DIExpression()), !dbg !14227
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14228
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !14229
  %1 = load i8*, i8** %data, align 8, !dbg !14229
  %2 = bitcast i8* %1 to %struct.Lattice*, !dbg !14228
  store %struct.Lattice* %2, %struct.Lattice** %lt, align 8, !dbg !14227
  call void @llvm.dbg.declare(metadata %struct.Key** %key, metadata !14230, metadata !DIExpression()), !dbg !14231
  %3 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !14232
  %key1 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %3, i32 0, i32 23, !dbg !14233
  %4 = load %struct.Key*, %struct.Key** %key1, align 8, !dbg !14233
  store %struct.Key* %4, %struct.Key** %key, align 8, !dbg !14231
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %kb, metadata !14234, metadata !DIExpression()), !dbg !14235
  call void @llvm.dbg.declare(metadata i32* %newkey, metadata !14236, metadata !DIExpression()), !dbg !14237
  store i32 0, i32* %newkey, align 4, !dbg !14237
  %5 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !14238
  %cmp = icmp eq %struct.Key* %5, null, !dbg !14240
  br i1 %cmp, label %if.then, label %if.end, !dbg !14241

if.then:                                          ; preds = %entry
  %6 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !14242
  %7 = bitcast %struct.Lattice* %6 to %struct.ID*, !dbg !14244
  %call = call %struct.Key* @BKE_key_add(%struct.ID* %7), !dbg !14245
  %8 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !14246
  %key2 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %8, i32 0, i32 23, !dbg !14247
  store %struct.Key* %call, %struct.Key** %key2, align 8, !dbg !14248
  store %struct.Key* %call, %struct.Key** %key, align 8, !dbg !14249
  %9 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !14250
  %type = getelementptr inbounds %struct.Key, %struct.Key* %9, i32 0, i32 9, !dbg !14251
  store i16 1, i16* %type, align 8, !dbg !14252
  store i32 1, i32* %newkey, align 4, !dbg !14253
  br label %if.end, !dbg !14254

if.end:                                           ; preds = %if.then, %entry
  %10 = load i32, i32* %newkey, align 4, !dbg !14255
  %tobool = icmp ne i32 %10, 0, !dbg !14255
  br i1 %tobool, label %if.then5, label %lor.lhs.false, !dbg !14257

lor.lhs.false:                                    ; preds = %if.end
  %11 = load i8, i8* %from_mix.addr, align 1, !dbg !14258
  %conv = zext i8 %11 to i32, !dbg !14258
  %cmp3 = icmp eq i32 %conv, 0, !dbg !14259
  br i1 %cmp3, label %if.then5, label %if.else14, !dbg !14260

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  %12 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !14261
  %13 = load i8*, i8** %name.addr, align 8, !dbg !14263
  %call6 = call %struct.KeyBlock* @BKE_keyblock_add_ctime(%struct.Key* %12, i8* %13, i8 zeroext 0), !dbg !14264
  store %struct.KeyBlock* %call6, %struct.KeyBlock** %kb, align 8, !dbg !14265
  %14 = load i32, i32* %newkey, align 4, !dbg !14266
  %tobool7 = icmp ne i32 %14, 0, !dbg !14266
  br i1 %tobool7, label %if.else, label %if.then8, !dbg !14268

if.then8:                                         ; preds = %if.then5
  call void @llvm.dbg.declare(metadata %struct.KeyBlock** %basekb, metadata !14269, metadata !DIExpression()), !dbg !14271
  %15 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !14272
  %block = getelementptr inbounds %struct.Key, %struct.Key* %15, i32 0, i32 6, !dbg !14273
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %block, i32 0, i32 0, !dbg !14274
  %16 = load i8*, i8** %first, align 8, !dbg !14274
  %17 = bitcast i8* %16 to %struct.KeyBlock*, !dbg !14275
  store %struct.KeyBlock* %17, %struct.KeyBlock** %basekb, align 8, !dbg !14271
  %18 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !14276
  %19 = load %struct.KeyBlock*, %struct.KeyBlock** %basekb, align 8, !dbg !14277
  %data9 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %19, i32 0, i32 10, !dbg !14278
  %20 = load i8*, i8** %data9, align 8, !dbg !14278
  %call10 = call i8* %18(i8* %20), !dbg !14276
  %21 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !14279
  %data11 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %21, i32 0, i32 10, !dbg !14280
  store i8* %call10, i8** %data11, align 8, !dbg !14281
  %22 = load %struct.KeyBlock*, %struct.KeyBlock** %basekb, align 8, !dbg !14282
  %totelem = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %22, i32 0, i32 8, !dbg !14283
  %23 = load i32, i32* %totelem, align 8, !dbg !14283
  %24 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !14284
  %totelem12 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %24, i32 0, i32 8, !dbg !14285
  store i32 %23, i32* %totelem12, align 8, !dbg !14286
  br label %if.end13, !dbg !14287

if.else:                                          ; preds = %if.then5
  %25 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !14288
  %26 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !14290
  call void @BKE_key_convert_from_lattice(%struct.Lattice* %25, %struct.KeyBlock* %26), !dbg !14291
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then8
  br label %if.end21, !dbg !14292

if.else14:                                        ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %totelem15, metadata !14293, metadata !DIExpression()), !dbg !14295
  call void @llvm.dbg.declare(metadata float** %data16, metadata !14296, metadata !DIExpression()), !dbg !14297
  %27 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14298
  %28 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14299
  %call17 = call float* @BKE_key_evaluate_object(%struct.Scene* %27, %struct.Object* %28, i32* %totelem15), !dbg !14300
  store float* %call17, float** %data16, align 8, !dbg !14297
  %29 = load %struct.Key*, %struct.Key** %key, align 8, !dbg !14301
  %30 = load i8*, i8** %name.addr, align 8, !dbg !14302
  %call18 = call %struct.KeyBlock* @BKE_keyblock_add_ctime(%struct.Key* %29, i8* %30, i8 zeroext 0), !dbg !14303
  store %struct.KeyBlock* %call18, %struct.KeyBlock** %kb, align 8, !dbg !14304
  %31 = load i32, i32* %totelem15, align 4, !dbg !14305
  %32 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !14306
  %totelem19 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %32, i32 0, i32 8, !dbg !14307
  store i32 %31, i32* %totelem19, align 8, !dbg !14308
  %33 = load float*, float** %data16, align 8, !dbg !14309
  %34 = bitcast float* %33 to i8*, !dbg !14309
  %35 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !14310
  %data20 = getelementptr inbounds %struct.KeyBlock, %struct.KeyBlock* %35, i32 0, i32 10, !dbg !14311
  store i8* %34, i8** %data20, align 8, !dbg !14312
  br label %if.end21

if.end21:                                         ; preds = %if.else14, %if.end13
  %36 = load %struct.KeyBlock*, %struct.KeyBlock** %kb, align 8, !dbg !14313
  ret %struct.KeyBlock* %36, !dbg !14314
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_object_is_child_recursive(%struct.Object* %ob_parent, %struct.Object* %ob_child) #0 !dbg !14315 {
entry:
  %retval = alloca i8, align 1
  %ob_parent.addr = alloca %struct.Object*, align 8
  %ob_child.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob_parent, %struct.Object** %ob_parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob_parent.addr, metadata !14318, metadata !DIExpression()), !dbg !14319
  store %struct.Object* %ob_child, %struct.Object** %ob_child.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob_child.addr, metadata !14320, metadata !DIExpression()), !dbg !14321
  %0 = load %struct.Object*, %struct.Object** %ob_child.addr, align 8, !dbg !14322
  %parent = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 9, !dbg !14324
  %1 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !14324
  store %struct.Object* %1, %struct.Object** %ob_child.addr, align 8, !dbg !14325
  br label %for.cond, !dbg !14326

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.Object*, %struct.Object** %ob_child.addr, align 8, !dbg !14327
  %tobool = icmp ne %struct.Object* %2, null, !dbg !14329
  br i1 %tobool, label %for.body, label %for.end, !dbg !14329

for.body:                                         ; preds = %for.cond
  %3 = load %struct.Object*, %struct.Object** %ob_child.addr, align 8, !dbg !14330
  %4 = load %struct.Object*, %struct.Object** %ob_parent.addr, align 8, !dbg !14333
  %cmp = icmp eq %struct.Object* %3, %4, !dbg !14334
  br i1 %cmp, label %if.then, label %if.end, !dbg !14335

if.then:                                          ; preds = %for.body
  store i8 1, i8* %retval, align 1, !dbg !14336
  br label %return, !dbg !14336

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !14338

for.inc:                                          ; preds = %if.end
  %5 = load %struct.Object*, %struct.Object** %ob_child.addr, align 8, !dbg !14339
  %parent1 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 9, !dbg !14340
  %6 = load %struct.Object*, %struct.Object** %parent1, align 8, !dbg !14340
  store %struct.Object* %6, %struct.Object** %ob_child.addr, align 8, !dbg !14341
  br label %for.cond, !dbg !14342, !llvm.loop !14343

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !14345
  br label %return, !dbg !14345

return:                                           ; preds = %for.end, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !14346
  ret i8 %7, !dbg !14346
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_object_is_modified(%struct.Scene* %scene, %struct.Object* %ob) #0 !dbg !14347 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %flag = alloca i32, align 4
  %md = alloca %struct.ModifierData*, align 8
  %virtualModifierData = alloca %struct.VirtualModifierData, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !14350, metadata !DIExpression()), !dbg !14351
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !14352, metadata !DIExpression()), !dbg !14353
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !14354, metadata !DIExpression()), !dbg !14355
  store i32 0, i32* %flag, align 4, !dbg !14355
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14356
  %call = call %struct.Key* @BKE_key_from_object(%struct.Object* %0), !dbg !14358
  %tobool = icmp ne %struct.Key* %call, null, !dbg !14358
  br i1 %tobool, label %if.then, label %if.else, !dbg !14359

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %flag, align 4, !dbg !14360
  %or = or i32 %1, 3, !dbg !14360
  store i32 %or, i32* %flag, align 4, !dbg !14360
  br label %if.end18, !dbg !14362

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !14363, metadata !DIExpression()), !dbg !14365
  call void @llvm.dbg.declare(metadata %struct.VirtualModifierData* %virtualModifierData, metadata !14366, metadata !DIExpression()), !dbg !14394
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14395
  %call1 = call %struct.ModifierData* @modifiers_getVirtualModifierList(%struct.Object* %2, %struct.VirtualModifierData* %virtualModifierData), !dbg !14397
  store %struct.ModifierData* %call1, %struct.ModifierData** %md, align 8, !dbg !14398
  br label %for.cond, !dbg !14399

for.cond:                                         ; preds = %for.inc, %if.else
  %3 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !14400
  %tobool2 = icmp ne %struct.ModifierData* %3, null, !dbg !14400
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !14402

land.rhs:                                         ; preds = %for.cond
  %4 = load i32, i32* %flag, align 4, !dbg !14403
  %cmp = icmp ne i32 %4, 3, !dbg !14404
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp, %land.rhs ], !dbg !14405
  br i1 %5, label %for.body, label %for.end, !dbg !14406

for.body:                                         ; preds = %land.end
  %6 = load i32, i32* %flag, align 4, !dbg !14407
  %and = and i32 %6, 2, !dbg !14410
  %cmp3 = icmp eq i32 %and, 0, !dbg !14411
  br i1 %cmp3, label %land.lhs.true, label %if.end, !dbg !14412

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14413
  %8 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !14414
  %call4 = call zeroext i8 @modifier_isEnabled(%struct.Scene* %7, %struct.ModifierData* %8, i32 2), !dbg !14415
  %conv = zext i8 %call4 to i32, !dbg !14415
  %tobool5 = icmp ne i32 %conv, 0, !dbg !14415
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !14416

if.then6:                                         ; preds = %land.lhs.true
  %9 = load i32, i32* %flag, align 4, !dbg !14417
  %or7 = or i32 %9, 2, !dbg !14417
  store i32 %or7, i32* %flag, align 4, !dbg !14417
  br label %if.end, !dbg !14418

if.end:                                           ; preds = %if.then6, %land.lhs.true, %for.body
  %10 = load i32, i32* %flag, align 4, !dbg !14419
  %and8 = and i32 %10, 1, !dbg !14421
  %cmp9 = icmp eq i32 %and8, 0, !dbg !14422
  br i1 %cmp9, label %land.lhs.true11, label %if.end17, !dbg !14423

land.lhs.true11:                                  ; preds = %if.end
  %11 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14424
  %12 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !14425
  %call12 = call zeroext i8 @modifier_isEnabled(%struct.Scene* %11, %struct.ModifierData* %12, i32 1), !dbg !14426
  %conv13 = zext i8 %call12 to i32, !dbg !14426
  %tobool14 = icmp ne i32 %conv13, 0, !dbg !14426
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !14427

if.then15:                                        ; preds = %land.lhs.true11
  %13 = load i32, i32* %flag, align 4, !dbg !14428
  %or16 = or i32 %13, 1, !dbg !14428
  store i32 %or16, i32* %flag, align 4, !dbg !14428
  br label %if.end17, !dbg !14429

if.end17:                                         ; preds = %if.then15, %land.lhs.true11, %if.end
  br label %for.inc, !dbg !14430

for.inc:                                          ; preds = %if.end17
  %14 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !14431
  %next = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %14, i32 0, i32 0, !dbg !14432
  %15 = load %struct.ModifierData*, %struct.ModifierData** %next, align 8, !dbg !14432
  store %struct.ModifierData* %15, %struct.ModifierData** %md, align 8, !dbg !14433
  br label %for.cond, !dbg !14434, !llvm.loop !14435

for.end:                                          ; preds = %land.end
  br label %if.end18

if.end18:                                         ; preds = %for.end, %if.then
  %16 = load i32, i32* %flag, align 4, !dbg !14437
  ret i32 %16, !dbg !14438
}

declare dso_local %struct.ModifierData* @modifiers_getVirtualModifierList(%struct.Object*, %struct.VirtualModifierData*) #3

declare dso_local zeroext i8 @modifier_isEnabled(%struct.Scene*, %struct.ModifierData*, i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BKE_object_is_deform_modified(%struct.Scene* %scene, %struct.Object* %ob) #0 !dbg !14439 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %md = alloca %struct.ModifierData*, align 8
  %virtualModifierData = alloca %struct.VirtualModifierData, align 8
  %flag = alloca i32, align 4
  %mti = alloca %struct.ModifierTypeInfo*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !14440, metadata !DIExpression()), !dbg !14441
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !14442, metadata !DIExpression()), !dbg !14443
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !14444, metadata !DIExpression()), !dbg !14445
  call void @llvm.dbg.declare(metadata %struct.VirtualModifierData* %virtualModifierData, metadata !14446, metadata !DIExpression()), !dbg !14447
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !14448, metadata !DIExpression()), !dbg !14449
  store i32 0, i32* %flag, align 4, !dbg !14449
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14450
  %call = call %struct.Key* @BKE_key_from_object(%struct.Object* %0), !dbg !14452
  %tobool = icmp ne %struct.Key* %call, null, !dbg !14452
  br i1 %tobool, label %if.then, label %if.end, !dbg !14453

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %flag, align 4, !dbg !14454
  %or = or i32 %1, 3, !dbg !14454
  store i32 %or, i32* %flag, align 4, !dbg !14454
  br label %if.end, !dbg !14455

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14456
  %call1 = call %struct.ModifierData* @modifiers_getVirtualModifierList(%struct.Object* %2, %struct.VirtualModifierData* %virtualModifierData), !dbg !14458
  store %struct.ModifierData* %call1, %struct.ModifierData** %md, align 8, !dbg !14459
  br label %for.cond, !dbg !14460

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !14461
  %tobool2 = icmp ne %struct.ModifierData* %3, null, !dbg !14461
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !14463

land.rhs:                                         ; preds = %for.cond
  %4 = load i32, i32* %flag, align 4, !dbg !14464
  %cmp = icmp ne i32 %4, 3, !dbg !14465
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp, %land.rhs ], !dbg !14466
  br i1 %5, label %for.body, label %for.end, !dbg !14467

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.ModifierTypeInfo** %mti, metadata !14468, metadata !DIExpression()), !dbg !14470
  %6 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !14471
  %type = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %6, i32 0, i32 2, !dbg !14472
  %7 = load i32, i32* %type, align 8, !dbg !14472
  %call3 = call %struct.ModifierTypeInfo* @modifierType_getInfo(i32 %7), !dbg !14473
  store %struct.ModifierTypeInfo* %call3, %struct.ModifierTypeInfo** %mti, align 8, !dbg !14470
  %8 = load %struct.ModifierTypeInfo*, %struct.ModifierTypeInfo** %mti, align 8, !dbg !14474
  %type4 = getelementptr inbounds %struct.ModifierTypeInfo, %struct.ModifierTypeInfo* %8, i32 0, i32 3, !dbg !14476
  %9 = load i32, i32* %type4, align 4, !dbg !14476
  %cmp5 = icmp eq i32 %9, 1, !dbg !14477
  br i1 %cmp5, label %if.then6, label %if.end22, !dbg !14478

if.then6:                                         ; preds = %for.body
  %10 = load i32, i32* %flag, align 4, !dbg !14479
  %and = and i32 %10, 2, !dbg !14482
  %tobool7 = icmp ne i32 %and, 0, !dbg !14482
  br i1 %tobool7, label %if.end12, label %land.lhs.true, !dbg !14483

land.lhs.true:                                    ; preds = %if.then6
  %11 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14484
  %12 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !14485
  %call8 = call zeroext i8 @modifier_isEnabled(%struct.Scene* %11, %struct.ModifierData* %12, i32 2), !dbg !14486
  %conv = zext i8 %call8 to i32, !dbg !14486
  %tobool9 = icmp ne i32 %conv, 0, !dbg !14486
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !14487

if.then10:                                        ; preds = %land.lhs.true
  %13 = load i32, i32* %flag, align 4, !dbg !14488
  %or11 = or i32 %13, 2, !dbg !14488
  store i32 %or11, i32* %flag, align 4, !dbg !14488
  br label %if.end12, !dbg !14489

if.end12:                                         ; preds = %if.then10, %land.lhs.true, %if.then6
  %14 = load i32, i32* %flag, align 4, !dbg !14490
  %and13 = and i32 %14, 1, !dbg !14492
  %tobool14 = icmp ne i32 %and13, 0, !dbg !14492
  br i1 %tobool14, label %if.end21, label %land.lhs.true15, !dbg !14493

land.lhs.true15:                                  ; preds = %if.end12
  %15 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14494
  %16 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !14495
  %call16 = call zeroext i8 @modifier_isEnabled(%struct.Scene* %15, %struct.ModifierData* %16, i32 1), !dbg !14496
  %conv17 = zext i8 %call16 to i32, !dbg !14496
  %tobool18 = icmp ne i32 %conv17, 0, !dbg !14496
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !14497

if.then19:                                        ; preds = %land.lhs.true15
  %17 = load i32, i32* %flag, align 4, !dbg !14498
  %or20 = or i32 %17, 1, !dbg !14498
  store i32 %or20, i32* %flag, align 4, !dbg !14498
  br label %if.end21, !dbg !14499

if.end21:                                         ; preds = %if.then19, %land.lhs.true15, %if.end12
  br label %if.end22, !dbg !14500

if.end22:                                         ; preds = %if.end21, %for.body
  br label %for.inc, !dbg !14501

for.inc:                                          ; preds = %if.end22
  %18 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !14502
  %next = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %18, i32 0, i32 0, !dbg !14503
  %19 = load %struct.ModifierData*, %struct.ModifierData** %next, align 8, !dbg !14503
  store %struct.ModifierData* %19, %struct.ModifierData** %md, align 8, !dbg !14504
  br label %for.cond, !dbg !14505, !llvm.loop !14506

for.end:                                          ; preds = %land.end
  %20 = load i32, i32* %flag, align 4, !dbg !14508
  ret i32 %20, !dbg !14509
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @BKE_object_is_animated(%struct.Scene* %scene, %struct.Object* %ob) #0 !dbg !14510 {
entry:
  %retval = alloca i8, align 1
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %md = alloca %struct.ModifierData*, align 8
  %virtualModifierData = alloca %struct.VirtualModifierData, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !14513, metadata !DIExpression()), !dbg !14514
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !14515, metadata !DIExpression()), !dbg !14516
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !14517, metadata !DIExpression()), !dbg !14518
  call void @llvm.dbg.declare(metadata %struct.VirtualModifierData* %virtualModifierData, metadata !14519, metadata !DIExpression()), !dbg !14520
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14521
  %call = call %struct.ModifierData* @modifiers_getVirtualModifierList(%struct.Object* %0, %struct.VirtualModifierData* %virtualModifierData), !dbg !14523
  store %struct.ModifierData* %call, %struct.ModifierData** %md, align 8, !dbg !14524
  br label %for.cond, !dbg !14525

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !14526
  %tobool = icmp ne %struct.ModifierData* %1, null, !dbg !14528
  br i1 %tobool, label %for.body, label %for.end, !dbg !14528

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !14529
  %call1 = call zeroext i8 @modifier_dependsOnTime(%struct.ModifierData* %2), !dbg !14531
  %conv = zext i8 %call1 to i32, !dbg !14531
  %tobool2 = icmp ne i32 %conv, 0, !dbg !14531
  br i1 %tobool2, label %land.lhs.true, label %if.end, !dbg !14532

land.lhs.true:                                    ; preds = %for.body
  %3 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14533
  %4 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !14534
  %call3 = call zeroext i8 @modifier_isEnabled(%struct.Scene* %3, %struct.ModifierData* %4, i32 1), !dbg !14535
  %conv4 = zext i8 %call3 to i32, !dbg !14535
  %tobool5 = icmp ne i32 %conv4, 0, !dbg !14535
  br i1 %tobool5, label %if.then, label %lor.lhs.false, !dbg !14536

lor.lhs.false:                                    ; preds = %land.lhs.true
  %5 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14537
  %6 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !14538
  %call6 = call zeroext i8 @modifier_isEnabled(%struct.Scene* %5, %struct.ModifierData* %6, i32 2), !dbg !14539
  %conv7 = zext i8 %call6 to i32, !dbg !14539
  %tobool8 = icmp ne i32 %conv7, 0, !dbg !14539
  br i1 %tobool8, label %if.then, label %if.end, !dbg !14540

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !14541
  br label %return, !dbg !14541

if.end:                                           ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !14543

for.inc:                                          ; preds = %if.end
  %7 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !14544
  %next = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %7, i32 0, i32 0, !dbg !14545
  %8 = load %struct.ModifierData*, %struct.ModifierData** %next, align 8, !dbg !14545
  store %struct.ModifierData* %8, %struct.ModifierData** %md, align 8, !dbg !14546
  br label %for.cond, !dbg !14547, !llvm.loop !14548

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !14550
  br label %return, !dbg !14550

return:                                           ; preds = %for.end, %if.then
  %9 = load i8, i8* %retval, align 1, !dbg !14551
  ret i8 %9, !dbg !14551
}

declare dso_local zeroext i8 @modifier_dependsOnTime(%struct.ModifierData*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_relink(%struct.Object* %ob) #0 !dbg !14552 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %chan = alloca %struct.bPoseChannel*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !14553, metadata !DIExpression()), !dbg !14554
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14555
  %id = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 0, !dbg !14557
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !14558
  %1 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !14558
  %tobool = icmp ne %struct.Library* %1, null, !dbg !14555
  br i1 %tobool, label %if.then, label %if.end, !dbg !14559

if.then:                                          ; preds = %entry
  br label %if.end48, !dbg !14560

if.end:                                           ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14561
  %constraints = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 106, !dbg !14562
  call void @BKE_constraints_relink(%struct.ListBase* %constraints), !dbg !14563
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14564
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 18, !dbg !14566
  %4 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !14566
  %tobool1 = icmp ne %struct.bPose* %4, null, !dbg !14564
  br i1 %tobool1, label %if.then2, label %if.end6, !dbg !14567

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %chan, metadata !14568, metadata !DIExpression()), !dbg !14570
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14571
  %pose3 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 18, !dbg !14573
  %6 = load %struct.bPose*, %struct.bPose** %pose3, align 8, !dbg !14573
  %chanbase = getelementptr inbounds %struct.bPose, %struct.bPose* %6, i32 0, i32 0, !dbg !14574
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase, i32 0, i32 0, !dbg !14575
  %7 = load i8*, i8** %first, align 8, !dbg !14575
  %8 = bitcast i8* %7 to %struct.bPoseChannel*, !dbg !14571
  store %struct.bPoseChannel* %8, %struct.bPoseChannel** %chan, align 8, !dbg !14576
  br label %for.cond, !dbg !14577

for.cond:                                         ; preds = %for.inc, %if.then2
  %9 = load %struct.bPoseChannel*, %struct.bPoseChannel** %chan, align 8, !dbg !14578
  %tobool4 = icmp ne %struct.bPoseChannel* %9, null, !dbg !14580
  br i1 %tobool4, label %for.body, label %for.end, !dbg !14580

for.body:                                         ; preds = %for.cond
  %10 = load %struct.bPoseChannel*, %struct.bPoseChannel** %chan, align 8, !dbg !14581
  %constraints5 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %10, i32 0, i32 3, !dbg !14583
  call void @BKE_constraints_relink(%struct.ListBase* %constraints5), !dbg !14584
  br label %for.inc, !dbg !14585

for.inc:                                          ; preds = %for.body
  %11 = load %struct.bPoseChannel*, %struct.bPoseChannel** %chan, align 8, !dbg !14586
  %next = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %11, i32 0, i32 0, !dbg !14587
  %12 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next, align 8, !dbg !14587
  store %struct.bPoseChannel* %12, %struct.bPoseChannel** %chan, align 8, !dbg !14588
  br label %for.cond, !dbg !14589, !llvm.loop !14590

for.end:                                          ; preds = %for.cond
  br label %if.end6, !dbg !14592

if.end6:                                          ; preds = %for.end, %if.end
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14593
  call void @modifiers_foreachIDLink(%struct.Object* %13, void (i8*, %struct.Object*, %struct.ID**)* @copy_object__forwardModifierLinks, i8* null), !dbg !14594
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14595
  %adt = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 1, !dbg !14597
  %15 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !14597
  %tobool7 = icmp ne %struct.AnimData* %15, null, !dbg !14595
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !14598

if.then8:                                         ; preds = %if.end6
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14599
  %adt9 = getelementptr inbounds %struct.Object, %struct.Object* %16, i32 0, i32 1, !dbg !14600
  %17 = load %struct.AnimData*, %struct.AnimData** %adt9, align 8, !dbg !14600
  call void @BKE_relink_animdata(%struct.AnimData* %17), !dbg !14601
  br label %if.end10, !dbg !14601

if.end10:                                         ; preds = %if.then8, %if.end6
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14602
  %rigidbody_constraint = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 129, !dbg !14604
  %19 = load %struct.RigidBodyCon*, %struct.RigidBodyCon** %rigidbody_constraint, align 8, !dbg !14604
  %tobool11 = icmp ne %struct.RigidBodyCon* %19, null, !dbg !14602
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !14605

if.then12:                                        ; preds = %if.end10
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14606
  %rigidbody_constraint13 = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 129, !dbg !14607
  %21 = load %struct.RigidBodyCon*, %struct.RigidBodyCon** %rigidbody_constraint13, align 8, !dbg !14607
  call void @BKE_rigidbody_relink_constraint(%struct.RigidBodyCon* %21), !dbg !14608
  br label %if.end14, !dbg !14608

if.end14:                                         ; preds = %if.then12, %if.end10
  %22 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14609
  %parent = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 9, !dbg !14609
  %23 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !14609
  %tobool15 = icmp ne %struct.Object* %23, null, !dbg !14609
  br i1 %tobool15, label %land.lhs.true, label %if.end24, !dbg !14609

land.lhs.true:                                    ; preds = %if.end14
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14609
  %parent16 = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 9, !dbg !14609
  %25 = load %struct.Object*, %struct.Object** %parent16, align 8, !dbg !14609
  %id17 = getelementptr inbounds %struct.Object, %struct.Object* %25, i32 0, i32 0, !dbg !14609
  %newid = getelementptr inbounds %struct.ID, %struct.ID* %id17, i32 0, i32 2, !dbg !14609
  %26 = load %struct.ID*, %struct.ID** %newid, align 8, !dbg !14609
  %tobool18 = icmp ne %struct.ID* %26, null, !dbg !14609
  br i1 %tobool18, label %if.then19, label %if.end24, !dbg !14611

if.then19:                                        ; preds = %land.lhs.true
  %27 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14609
  %parent20 = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 9, !dbg !14609
  %28 = load %struct.Object*, %struct.Object** %parent20, align 8, !dbg !14609
  %id21 = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 0, !dbg !14609
  %newid22 = getelementptr inbounds %struct.ID, %struct.ID* %id21, i32 0, i32 2, !dbg !14609
  %29 = load %struct.ID*, %struct.ID** %newid22, align 8, !dbg !14609
  %30 = bitcast %struct.ID* %29 to i8*, !dbg !14609
  %31 = bitcast i8* %30 to %struct.Object*, !dbg !14609
  %32 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14609
  %parent23 = getelementptr inbounds %struct.Object, %struct.Object* %32, i32 0, i32 9, !dbg !14609
  store %struct.Object* %31, %struct.Object** %parent23, align 8, !dbg !14609
  br label %if.end24, !dbg !14609

if.end24:                                         ; preds = %if.then19, %land.lhs.true, %if.end14
  %33 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14612
  %proxy = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 11, !dbg !14612
  %34 = load %struct.Object*, %struct.Object** %proxy, align 8, !dbg !14612
  %tobool25 = icmp ne %struct.Object* %34, null, !dbg !14612
  br i1 %tobool25, label %land.lhs.true26, label %if.end36, !dbg !14612

land.lhs.true26:                                  ; preds = %if.end24
  %35 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14612
  %proxy27 = getelementptr inbounds %struct.Object, %struct.Object* %35, i32 0, i32 11, !dbg !14612
  %36 = load %struct.Object*, %struct.Object** %proxy27, align 8, !dbg !14612
  %id28 = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 0, !dbg !14612
  %newid29 = getelementptr inbounds %struct.ID, %struct.ID* %id28, i32 0, i32 2, !dbg !14612
  %37 = load %struct.ID*, %struct.ID** %newid29, align 8, !dbg !14612
  %tobool30 = icmp ne %struct.ID* %37, null, !dbg !14612
  br i1 %tobool30, label %if.then31, label %if.end36, !dbg !14614

if.then31:                                        ; preds = %land.lhs.true26
  %38 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14612
  %proxy32 = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 11, !dbg !14612
  %39 = load %struct.Object*, %struct.Object** %proxy32, align 8, !dbg !14612
  %id33 = getelementptr inbounds %struct.Object, %struct.Object* %39, i32 0, i32 0, !dbg !14612
  %newid34 = getelementptr inbounds %struct.ID, %struct.ID* %id33, i32 0, i32 2, !dbg !14612
  %40 = load %struct.ID*, %struct.ID** %newid34, align 8, !dbg !14612
  %41 = bitcast %struct.ID* %40 to i8*, !dbg !14612
  %42 = bitcast i8* %41 to %struct.Object*, !dbg !14612
  %43 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14612
  %proxy35 = getelementptr inbounds %struct.Object, %struct.Object* %43, i32 0, i32 11, !dbg !14612
  store %struct.Object* %42, %struct.Object** %proxy35, align 8, !dbg !14612
  br label %if.end36, !dbg !14612

if.end36:                                         ; preds = %if.then31, %land.lhs.true26, %if.end24
  %44 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14615
  %proxy_group = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 12, !dbg !14615
  %45 = load %struct.Object*, %struct.Object** %proxy_group, align 8, !dbg !14615
  %tobool37 = icmp ne %struct.Object* %45, null, !dbg !14615
  br i1 %tobool37, label %land.lhs.true38, label %if.end48, !dbg !14615

land.lhs.true38:                                  ; preds = %if.end36
  %46 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14615
  %proxy_group39 = getelementptr inbounds %struct.Object, %struct.Object* %46, i32 0, i32 12, !dbg !14615
  %47 = load %struct.Object*, %struct.Object** %proxy_group39, align 8, !dbg !14615
  %id40 = getelementptr inbounds %struct.Object, %struct.Object* %47, i32 0, i32 0, !dbg !14615
  %newid41 = getelementptr inbounds %struct.ID, %struct.ID* %id40, i32 0, i32 2, !dbg !14615
  %48 = load %struct.ID*, %struct.ID** %newid41, align 8, !dbg !14615
  %tobool42 = icmp ne %struct.ID* %48, null, !dbg !14615
  br i1 %tobool42, label %if.then43, label %if.end48, !dbg !14617

if.then43:                                        ; preds = %land.lhs.true38
  %49 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14615
  %proxy_group44 = getelementptr inbounds %struct.Object, %struct.Object* %49, i32 0, i32 12, !dbg !14615
  %50 = load %struct.Object*, %struct.Object** %proxy_group44, align 8, !dbg !14615
  %id45 = getelementptr inbounds %struct.Object, %struct.Object* %50, i32 0, i32 0, !dbg !14615
  %newid46 = getelementptr inbounds %struct.ID, %struct.ID* %id45, i32 0, i32 2, !dbg !14615
  %51 = load %struct.ID*, %struct.ID** %newid46, align 8, !dbg !14615
  %52 = bitcast %struct.ID* %51 to i8*, !dbg !14615
  %53 = bitcast i8* %52 to %struct.Object*, !dbg !14615
  %54 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14615
  %proxy_group47 = getelementptr inbounds %struct.Object, %struct.Object* %54, i32 0, i32 12, !dbg !14615
  store %struct.Object* %53, %struct.Object** %proxy_group47, align 8, !dbg !14615
  br label %if.end48, !dbg !14615

if.end48:                                         ; preds = %if.then, %if.then43, %land.lhs.true38, %if.end36
  ret void, !dbg !14618
}

declare dso_local void @BKE_constraints_relink(%struct.ListBase*) #3

declare dso_local void @modifiers_foreachIDLink(%struct.Object*, void (i8*, %struct.Object*, %struct.ID**)*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @copy_object__forwardModifierLinks(i8* %UNUSED_userData, %struct.Object* %UNUSED_ob, %struct.ID** %idpoin) #0 !dbg !14619 {
entry:
  %UNUSED_userData.addr = alloca i8*, align 8
  %UNUSED_ob.addr = alloca %struct.Object*, align 8
  %idpoin.addr = alloca %struct.ID**, align 8
  store i8* %UNUSED_userData, i8** %UNUSED_userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_userData.addr, metadata !14623, metadata !DIExpression()), !dbg !14624
  store %struct.Object* %UNUSED_ob, %struct.Object** %UNUSED_ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %UNUSED_ob.addr, metadata !14625, metadata !DIExpression()), !dbg !14626
  store %struct.ID** %idpoin, %struct.ID*** %idpoin.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID*** %idpoin.addr, metadata !14627, metadata !DIExpression()), !dbg !14628
  %0 = load %struct.ID**, %struct.ID*** %idpoin.addr, align 8, !dbg !14629
  %1 = load %struct.ID*, %struct.ID** %0, align 8, !dbg !14631
  %tobool = icmp ne %struct.ID* %1, null, !dbg !14631
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !14632

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.ID**, %struct.ID*** %idpoin.addr, align 8, !dbg !14633
  %3 = load %struct.ID*, %struct.ID** %2, align 8, !dbg !14634
  %newid = getelementptr inbounds %struct.ID, %struct.ID* %3, i32 0, i32 2, !dbg !14635
  %4 = load %struct.ID*, %struct.ID** %newid, align 8, !dbg !14635
  %tobool1 = icmp ne %struct.ID* %4, null, !dbg !14636
  br i1 %tobool1, label %if.then, label %if.end, !dbg !14637

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.ID**, %struct.ID*** %idpoin.addr, align 8, !dbg !14638
  %6 = load %struct.ID*, %struct.ID** %5, align 8, !dbg !14639
  %newid2 = getelementptr inbounds %struct.ID, %struct.ID* %6, i32 0, i32 2, !dbg !14640
  %7 = load %struct.ID*, %struct.ID** %newid2, align 8, !dbg !14640
  %8 = load %struct.ID**, %struct.ID*** %idpoin.addr, align 8, !dbg !14641
  store %struct.ID* %7, %struct.ID** %8, align 8, !dbg !14642
  br label %if.end, !dbg !14643

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !14644
}

declare dso_local void @BKE_relink_animdata(%struct.AnimData*) #3

declare dso_local void @BKE_rigidbody_relink_constraint(%struct.RigidBodyCon*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MovieClip* @BKE_object_movieclip_get(%struct.Scene* %scene, %struct.Object* %ob, i8 zeroext %use_default) #0 !dbg !14645 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %use_default.addr = alloca i8, align 1
  %clip = alloca %struct.MovieClip*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %scon = alloca %struct.bConstraint*, align 8
  %solver = alloca %struct.bCameraSolverConstraint*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !14648, metadata !DIExpression()), !dbg !14649
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !14650, metadata !DIExpression()), !dbg !14651
  store i8 %use_default, i8* %use_default.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_default.addr, metadata !14652, metadata !DIExpression()), !dbg !14653
  call void @llvm.dbg.declare(metadata %struct.MovieClip** %clip, metadata !14654, metadata !DIExpression()), !dbg !14657
  %0 = load i8, i8* %use_default.addr, align 1, !dbg !14658
  %conv = zext i8 %0 to i32, !dbg !14658
  %tobool = icmp ne i32 %conv, 0, !dbg !14658
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14658

cond.true:                                        ; preds = %entry
  %1 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14659
  %clip1 = getelementptr inbounds %struct.Scene, %struct.Scene* %1, i32 0, i32 41, !dbg !14660
  %2 = load %struct.MovieClip*, %struct.MovieClip** %clip1, align 8, !dbg !14660
  br label %cond.end, !dbg !14658

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14658

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.MovieClip* [ %2, %cond.true ], [ null, %cond.false ], !dbg !14658
  store %struct.MovieClip* %cond, %struct.MovieClip** %clip, align 8, !dbg !14657
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !14661, metadata !DIExpression()), !dbg !14662
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14663
  %constraints = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 106, !dbg !14664
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints, i32 0, i32 0, !dbg !14665
  %4 = load i8*, i8** %first, align 8, !dbg !14665
  %5 = bitcast i8* %4 to %struct.bConstraint*, !dbg !14663
  store %struct.bConstraint* %5, %struct.bConstraint** %con, align 8, !dbg !14662
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %scon, metadata !14666, metadata !DIExpression()), !dbg !14667
  store %struct.bConstraint* null, %struct.bConstraint** %scon, align 8, !dbg !14667
  br label %while.cond, !dbg !14668

while.cond:                                       ; preds = %if.end10, %cond.end
  %6 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !14669
  %tobool2 = icmp ne %struct.bConstraint* %6, null, !dbg !14668
  br i1 %tobool2, label %while.body, label %while.end, !dbg !14668

while.body:                                       ; preds = %while.cond
  %7 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !14670
  %type = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %7, i32 0, i32 3, !dbg !14673
  %8 = load i16, i16* %type, align 8, !dbg !14673
  %conv3 = sext i16 %8 to i32, !dbg !14670
  %cmp = icmp eq i32 %conv3, 27, !dbg !14674
  br i1 %cmp, label %if.then, label %if.end10, !dbg !14675

if.then:                                          ; preds = %while.body
  %9 = load %struct.bConstraint*, %struct.bConstraint** %scon, align 8, !dbg !14676
  %cmp5 = icmp eq %struct.bConstraint* %9, null, !dbg !14679
  br i1 %cmp5, label %if.then9, label %lor.lhs.false, !dbg !14680

lor.lhs.false:                                    ; preds = %if.then
  %10 = load %struct.bConstraint*, %struct.bConstraint** %scon, align 8, !dbg !14681
  %flag = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %10, i32 0, i32 4, !dbg !14682
  %11 = load i16, i16* %flag, align 2, !dbg !14682
  %conv7 = sext i16 %11 to i32, !dbg !14681
  %and = and i32 %conv7, 512, !dbg !14683
  %tobool8 = icmp ne i32 %and, 0, !dbg !14683
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !14684

if.then9:                                         ; preds = %lor.lhs.false, %if.then
  %12 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !14685
  store %struct.bConstraint* %12, %struct.bConstraint** %scon, align 8, !dbg !14686
  br label %if.end, !dbg !14687

if.end:                                           ; preds = %if.then9, %lor.lhs.false
  br label %if.end10, !dbg !14688

if.end10:                                         ; preds = %if.end, %while.body
  %13 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !14689
  %next = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %13, i32 0, i32 0, !dbg !14690
  %14 = load %struct.bConstraint*, %struct.bConstraint** %next, align 8, !dbg !14690
  store %struct.bConstraint* %14, %struct.bConstraint** %con, align 8, !dbg !14691
  br label %while.cond, !dbg !14668, !llvm.loop !14692

while.end:                                        ; preds = %while.cond
  %15 = load %struct.bConstraint*, %struct.bConstraint** %scon, align 8, !dbg !14694
  %tobool11 = icmp ne %struct.bConstraint* %15, null, !dbg !14694
  br i1 %tobool11, label %if.then12, label %if.end21, !dbg !14696

if.then12:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata %struct.bCameraSolverConstraint** %solver, metadata !14697, metadata !DIExpression()), !dbg !14706
  %16 = load %struct.bConstraint*, %struct.bConstraint** %scon, align 8, !dbg !14707
  %data = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %16, i32 0, i32 2, !dbg !14708
  %17 = load i8*, i8** %data, align 8, !dbg !14708
  %18 = bitcast i8* %17 to %struct.bCameraSolverConstraint*, !dbg !14707
  store %struct.bCameraSolverConstraint* %18, %struct.bCameraSolverConstraint** %solver, align 8, !dbg !14706
  %19 = load %struct.bCameraSolverConstraint*, %struct.bCameraSolverConstraint** %solver, align 8, !dbg !14709
  %flag13 = getelementptr inbounds %struct.bCameraSolverConstraint, %struct.bCameraSolverConstraint* %19, i32 0, i32 1, !dbg !14711
  %20 = load i32, i32* %flag13, align 8, !dbg !14711
  %and14 = and i32 %20, 1, !dbg !14712
  %cmp15 = icmp eq i32 %and14, 0, !dbg !14713
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !14714

if.then17:                                        ; preds = %if.then12
  %21 = load %struct.bCameraSolverConstraint*, %struct.bCameraSolverConstraint** %solver, align 8, !dbg !14715
  %clip18 = getelementptr inbounds %struct.bCameraSolverConstraint, %struct.bCameraSolverConstraint* %21, i32 0, i32 0, !dbg !14716
  %22 = load %struct.MovieClip*, %struct.MovieClip** %clip18, align 8, !dbg !14716
  store %struct.MovieClip* %22, %struct.MovieClip** %clip, align 8, !dbg !14717
  br label %if.end20, !dbg !14718

if.else:                                          ; preds = %if.then12
  %23 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14719
  %clip19 = getelementptr inbounds %struct.Scene, %struct.Scene* %23, i32 0, i32 41, !dbg !14720
  %24 = load %struct.MovieClip*, %struct.MovieClip** %clip19, align 8, !dbg !14720
  store %struct.MovieClip* %24, %struct.MovieClip** %clip, align 8, !dbg !14721
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then17
  br label %if.end21, !dbg !14722

if.end21:                                         ; preds = %if.end20, %while.end
  %25 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !14723
  ret %struct.MovieClip* %25, !dbg !14724
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.LinkNode* @BKE_object_relational_superset(%struct.Scene* %scene, i32 %objectSet, i32 %includeFilter) #0 !dbg !14725 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %objectSet.addr = alloca i32, align 4
  %includeFilter.addr = alloca i32, align 4
  %links = alloca %struct.LinkNode*, align 8
  %base = alloca %struct.Base*, align 8
  %ob = alloca %struct.Object*, align 8
  %ob55 = alloca %struct.Object*, align 8
  %parent = alloca %struct.Object*, align 8
  %local_base = alloca %struct.Base*, align 8
  %child = alloca %struct.Object*, align 8
  %arm = alloca %struct.Object*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !14730, metadata !DIExpression()), !dbg !14731
  store i32 %objectSet, i32* %objectSet.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %objectSet.addr, metadata !14732, metadata !DIExpression()), !dbg !14733
  store i32 %includeFilter, i32* %includeFilter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %includeFilter.addr, metadata !14734, metadata !DIExpression()), !dbg !14735
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %links, metadata !14736, metadata !DIExpression()), !dbg !14739
  store %struct.LinkNode* null, %struct.LinkNode** %links, align 8, !dbg !14739
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !14740, metadata !DIExpression()), !dbg !14741
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14742
  %base1 = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 5, !dbg !14744
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base1, i32 0, i32 0, !dbg !14745
  %1 = load i8*, i8** %first, align 8, !dbg !14745
  %2 = bitcast i8* %1 to %struct.Base*, !dbg !14742
  store %struct.Base* %2, %struct.Base** %base, align 8, !dbg !14746
  br label %for.cond, !dbg !14747

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !14748
  %tobool = icmp ne %struct.Base* %3, null, !dbg !14750
  br i1 %tobool, label %for.body, label %for.end, !dbg !14750

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !14751
  %object = getelementptr inbounds %struct.Base, %struct.Base* %4, i32 0, i32 7, !dbg !14753
  %5 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !14753
  %id = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 0, !dbg !14754
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 5, !dbg !14755
  %6 = load i16, i16* %flag, align 2, !dbg !14756
  %conv = sext i16 %6 to i32, !dbg !14756
  %and = and i32 %conv, -1025, !dbg !14756
  %conv2 = trunc i32 %and to i16, !dbg !14756
  store i16 %conv2, i16* %flag, align 2, !dbg !14756
  br label %for.inc, !dbg !14757

for.inc:                                          ; preds = %for.body
  %7 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !14758
  %next = getelementptr inbounds %struct.Base, %struct.Base* %7, i32 0, i32 0, !dbg !14759
  %8 = load %struct.Base*, %struct.Base** %next, align 8, !dbg !14759
  store %struct.Base* %8, %struct.Base** %base, align 8, !dbg !14760
  br label %for.cond, !dbg !14761, !llvm.loop !14762

for.end:                                          ; preds = %for.cond
  %9 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14764
  %base3 = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 5, !dbg !14766
  %first4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base3, i32 0, i32 0, !dbg !14767
  %10 = load i8*, i8** %first4, align 8, !dbg !14767
  %11 = bitcast i8* %10 to %struct.Base*, !dbg !14764
  store %struct.Base* %11, %struct.Base** %base, align 8, !dbg !14768
  br label %for.cond5, !dbg !14769

for.cond5:                                        ; preds = %for.inc145, %for.end
  %12 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !14770
  %tobool6 = icmp ne %struct.Base* %12, null, !dbg !14772
  br i1 %tobool6, label %for.body7, label %for.end147, !dbg !14772

for.body7:                                        ; preds = %for.cond5
  %13 = load i32, i32* %objectSet.addr, align 4, !dbg !14773
  %cmp = icmp eq i32 %13, 2, !dbg !14776
  br i1 %cmp, label %if.then, label %if.else, !dbg !14777

if.then:                                          ; preds = %for.body7
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !14778, metadata !DIExpression()), !dbg !14780
  %14 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !14781
  %object9 = getelementptr inbounds %struct.Base, %struct.Base* %14, i32 0, i32 7, !dbg !14782
  %15 = load %struct.Object*, %struct.Object** %object9, align 8, !dbg !14782
  store %struct.Object* %15, %struct.Object** %ob, align 8, !dbg !14780
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14783
  call void @obrel_list_add(%struct.LinkNode** %links, %struct.Object* %16), !dbg !14784
  br label %if.end144, !dbg !14785

if.else:                                          ; preds = %for.body7
  %17 = load i32, i32* %objectSet.addr, align 4, !dbg !14786
  %cmp10 = icmp eq i32 %17, 0, !dbg !14789
  br i1 %cmp10, label %land.lhs.true, label %lor.lhs.false, !dbg !14790

land.lhs.true:                                    ; preds = %if.else
  %18 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !14791
  %flag12 = getelementptr inbounds %struct.Base, %struct.Base* %18, i32 0, i32 4, !dbg !14791
  %19 = load i32, i32* %flag12, align 8, !dbg !14791
  %and13 = and i32 %19, 1, !dbg !14791
  %tobool14 = icmp ne i32 %and13, 0, !dbg !14791
  br i1 %tobool14, label %land.lhs.true15, label %lor.lhs.false, !dbg !14791

land.lhs.true15:                                  ; preds = %land.lhs.true
  %20 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !14791
  %lay = getelementptr inbounds %struct.Base, %struct.Base* %20, i32 0, i32 2, !dbg !14791
  %21 = load i32, i32* %lay, align 8, !dbg !14791
  br i1 false, label %cond.true, label %cond.false, !dbg !14791

cond.true:                                        ; preds = %land.lhs.true15
  %22 = load i32, i32* getelementptr inbounds (%struct.View3D, %struct.View3D* null, i32 0, i32 22), align 8, !dbg !14791
  br label %cond.end, !dbg !14791

cond.false:                                       ; preds = %land.lhs.true15
  %23 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14791
  %lay16 = getelementptr inbounds %struct.Scene, %struct.Scene* %23, i32 0, i32 12, !dbg !14791
  %24 = load i32, i32* %lay16, align 8, !dbg !14791
  br label %cond.end, !dbg !14791

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %22, %cond.true ], [ %24, %cond.false ], !dbg !14791
  %and17 = and i32 %21, %cond, !dbg !14791
  %tobool18 = icmp ne i32 %and17, 0, !dbg !14791
  br i1 %tobool18, label %land.lhs.true19, label %lor.lhs.false, !dbg !14791

land.lhs.true19:                                  ; preds = %cond.end
  %25 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !14791
  %object20 = getelementptr inbounds %struct.Base, %struct.Base* %25, i32 0, i32 7, !dbg !14791
  %26 = load %struct.Object*, %struct.Object** %object20, align 8, !dbg !14791
  %id21 = getelementptr inbounds %struct.Object, %struct.Object* %26, i32 0, i32 0, !dbg !14791
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id21, i32 0, i32 3, !dbg !14791
  %27 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !14791
  %cmp22 = icmp eq %struct.Library* %27, null, !dbg !14791
  br i1 %cmp22, label %land.lhs.true24, label %lor.lhs.false, !dbg !14791

land.lhs.true24:                                  ; preds = %land.lhs.true19
  %28 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !14791
  %object25 = getelementptr inbounds %struct.Base, %struct.Base* %28, i32 0, i32 7, !dbg !14791
  %29 = load %struct.Object*, %struct.Object** %object25, align 8, !dbg !14791
  %restrictflag = getelementptr inbounds %struct.Object, %struct.Object* %29, i32 0, i32 102, !dbg !14791
  %30 = load i8, i8* %restrictflag, align 8, !dbg !14791
  %conv26 = zext i8 %30 to i32, !dbg !14791
  %and27 = and i32 %conv26, 1, !dbg !14791
  %cmp28 = icmp eq i32 %and27, 0, !dbg !14791
  br i1 %cmp28, label %if.then54, label %lor.lhs.false, !dbg !14792

lor.lhs.false:                                    ; preds = %land.lhs.true24, %land.lhs.true19, %cond.end, %land.lhs.true, %if.else
  %31 = load i32, i32* %objectSet.addr, align 4, !dbg !14793
  %cmp30 = icmp eq i32 %31, 1, !dbg !14794
  br i1 %cmp30, label %land.lhs.true32, label %if.end143, !dbg !14795

land.lhs.true32:                                  ; preds = %lor.lhs.false
  %32 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !14796
  %lay33 = getelementptr inbounds %struct.Base, %struct.Base* %32, i32 0, i32 2, !dbg !14796
  %33 = load i32, i32* %lay33, align 8, !dbg !14796
  br i1 false, label %cond.true34, label %cond.false35, !dbg !14796

cond.true34:                                      ; preds = %land.lhs.true32
  %34 = load i32, i32* getelementptr inbounds (%struct.View3D, %struct.View3D* null, i32 0, i32 22), align 8, !dbg !14796
  br label %cond.end37, !dbg !14796

cond.false35:                                     ; preds = %land.lhs.true32
  %35 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14796
  %lay36 = getelementptr inbounds %struct.Scene, %struct.Scene* %35, i32 0, i32 12, !dbg !14796
  %36 = load i32, i32* %lay36, align 8, !dbg !14796
  br label %cond.end37, !dbg !14796

cond.end37:                                       ; preds = %cond.false35, %cond.true34
  %cond38 = phi i32 [ %34, %cond.true34 ], [ %36, %cond.false35 ], !dbg !14796
  %and39 = and i32 %33, %cond38, !dbg !14796
  %tobool40 = icmp ne i32 %and39, 0, !dbg !14796
  br i1 %tobool40, label %land.lhs.true41, label %if.end143, !dbg !14796

land.lhs.true41:                                  ; preds = %cond.end37
  %37 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !14796
  %object42 = getelementptr inbounds %struct.Base, %struct.Base* %37, i32 0, i32 7, !dbg !14796
  %38 = load %struct.Object*, %struct.Object** %object42, align 8, !dbg !14796
  %id43 = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 0, !dbg !14796
  %lib44 = getelementptr inbounds %struct.ID, %struct.ID* %id43, i32 0, i32 3, !dbg !14796
  %39 = load %struct.Library*, %struct.Library** %lib44, align 8, !dbg !14796
  %cmp45 = icmp eq %struct.Library* %39, null, !dbg !14796
  br i1 %cmp45, label %land.lhs.true47, label %if.end143, !dbg !14796

land.lhs.true47:                                  ; preds = %land.lhs.true41
  %40 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !14796
  %object48 = getelementptr inbounds %struct.Base, %struct.Base* %40, i32 0, i32 7, !dbg !14796
  %41 = load %struct.Object*, %struct.Object** %object48, align 8, !dbg !14796
  %restrictflag49 = getelementptr inbounds %struct.Object, %struct.Object* %41, i32 0, i32 102, !dbg !14796
  %42 = load i8, i8* %restrictflag49, align 8, !dbg !14796
  %conv50 = zext i8 %42 to i32, !dbg !14796
  %and51 = and i32 %conv50, 1, !dbg !14796
  %cmp52 = icmp eq i32 %and51, 0, !dbg !14796
  br i1 %cmp52, label %if.then54, label %if.end143, !dbg !14797

if.then54:                                        ; preds = %land.lhs.true47, %land.lhs.true24
  call void @llvm.dbg.declare(metadata %struct.Object** %ob55, metadata !14798, metadata !DIExpression()), !dbg !14800
  %43 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !14801
  %object56 = getelementptr inbounds %struct.Base, %struct.Base* %43, i32 0, i32 7, !dbg !14802
  %44 = load %struct.Object*, %struct.Object** %object56, align 8, !dbg !14802
  store %struct.Object* %44, %struct.Object** %ob55, align 8, !dbg !14800
  %45 = load %struct.Object*, %struct.Object** %ob55, align 8, !dbg !14803
  %call = call zeroext i8 @obrel_list_test(%struct.Object* %45), !dbg !14805
  %tobool57 = icmp ne i8 %call, 0, !dbg !14805
  br i1 %tobool57, label %if.then58, label %if.end, !dbg !14806

if.then58:                                        ; preds = %if.then54
  %46 = load %struct.Object*, %struct.Object** %ob55, align 8, !dbg !14807
  call void @obrel_list_add(%struct.LinkNode** %links, %struct.Object* %46), !dbg !14808
  br label %if.end, !dbg !14808

if.end:                                           ; preds = %if.then58, %if.then54
  %47 = load i32, i32* %includeFilter.addr, align 4, !dbg !14809
  %and59 = and i32 %47, 3, !dbg !14811
  %tobool60 = icmp ne i32 %and59, 0, !dbg !14811
  br i1 %tobool60, label %if.then61, label %if.end75, !dbg !14812

if.then61:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.Object** %parent, metadata !14813, metadata !DIExpression()), !dbg !14815
  %48 = load %struct.Object*, %struct.Object** %ob55, align 8, !dbg !14816
  %parent62 = getelementptr inbounds %struct.Object, %struct.Object* %48, i32 0, i32 9, !dbg !14817
  %49 = load %struct.Object*, %struct.Object** %parent62, align 8, !dbg !14817
  store %struct.Object* %49, %struct.Object** %parent, align 8, !dbg !14815
  %50 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !14818
  %call63 = call zeroext i8 @obrel_list_test(%struct.Object* %50), !dbg !14820
  %tobool64 = icmp ne i8 %call63, 0, !dbg !14820
  br i1 %tobool64, label %if.then65, label %if.end74, !dbg !14821

if.then65:                                        ; preds = %if.then61
  %51 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !14822
  call void @obrel_list_add(%struct.LinkNode** %links, %struct.Object* %51), !dbg !14824
  %52 = load i32, i32* %includeFilter.addr, align 4, !dbg !14825
  %and66 = and i32 %52, 2, !dbg !14827
  %tobool67 = icmp ne i32 %and66, 0, !dbg !14827
  br i1 %tobool67, label %if.then68, label %if.end73, !dbg !14828

if.then68:                                        ; preds = %if.then65
  %53 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !14829
  %parent69 = getelementptr inbounds %struct.Object, %struct.Object* %53, i32 0, i32 9, !dbg !14831
  %54 = load %struct.Object*, %struct.Object** %parent69, align 8, !dbg !14831
  store %struct.Object* %54, %struct.Object** %parent, align 8, !dbg !14832
  br label %while.cond, !dbg !14833

while.cond:                                       ; preds = %while.body, %if.then68
  %55 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !14834
  %call70 = call zeroext i8 @obrel_list_test(%struct.Object* %55), !dbg !14835
  %tobool71 = icmp ne i8 %call70, 0, !dbg !14833
  br i1 %tobool71, label %while.body, label %while.end, !dbg !14833

while.body:                                       ; preds = %while.cond
  %56 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !14836
  call void @obrel_list_add(%struct.LinkNode** %links, %struct.Object* %56), !dbg !14838
  %57 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !14839
  %parent72 = getelementptr inbounds %struct.Object, %struct.Object* %57, i32 0, i32 9, !dbg !14840
  %58 = load %struct.Object*, %struct.Object** %parent72, align 8, !dbg !14840
  store %struct.Object* %58, %struct.Object** %parent, align 8, !dbg !14841
  br label %while.cond, !dbg !14833, !llvm.loop !14842

while.end:                                        ; preds = %while.cond
  br label %if.end73, !dbg !14844

if.end73:                                         ; preds = %while.end, %if.then65
  br label %if.end74, !dbg !14845

if.end74:                                         ; preds = %if.end73, %if.then61
  br label %if.end75, !dbg !14846

if.end75:                                         ; preds = %if.end74, %if.end
  %59 = load i32, i32* %includeFilter.addr, align 4, !dbg !14847
  %and76 = and i32 %59, 12, !dbg !14849
  %tobool77 = icmp ne i32 %and76, 0, !dbg !14849
  br i1 %tobool77, label %if.then78, label %if.end133, !dbg !14850

if.then78:                                        ; preds = %if.end75
  call void @llvm.dbg.declare(metadata %struct.Base** %local_base, metadata !14851, metadata !DIExpression()), !dbg !14853
  %60 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14854
  %base79 = getelementptr inbounds %struct.Scene, %struct.Scene* %60, i32 0, i32 5, !dbg !14856
  %first80 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base79, i32 0, i32 0, !dbg !14857
  %61 = load i8*, i8** %first80, align 8, !dbg !14857
  %62 = bitcast i8* %61 to %struct.Base*, !dbg !14854
  store %struct.Base* %62, %struct.Base** %local_base, align 8, !dbg !14858
  br label %for.cond81, !dbg !14859

for.cond81:                                       ; preds = %for.inc130, %if.then78
  %63 = load %struct.Base*, %struct.Base** %local_base, align 8, !dbg !14860
  %tobool82 = icmp ne %struct.Base* %63, null, !dbg !14862
  br i1 %tobool82, label %for.body83, label %for.end132, !dbg !14862

for.body83:                                       ; preds = %for.cond81
  %64 = load %struct.Base*, %struct.Base** %local_base, align 8, !dbg !14863
  %lay84 = getelementptr inbounds %struct.Base, %struct.Base* %64, i32 0, i32 2, !dbg !14863
  %65 = load i32, i32* %lay84, align 8, !dbg !14863
  br i1 false, label %cond.true85, label %cond.false86, !dbg !14863

cond.true85:                                      ; preds = %for.body83
  %66 = load i32, i32* getelementptr inbounds (%struct.View3D, %struct.View3D* null, i32 0, i32 22), align 8, !dbg !14863
  br label %cond.end88, !dbg !14863

cond.false86:                                     ; preds = %for.body83
  %67 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14863
  %lay87 = getelementptr inbounds %struct.Scene, %struct.Scene* %67, i32 0, i32 12, !dbg !14863
  %68 = load i32, i32* %lay87, align 8, !dbg !14863
  br label %cond.end88, !dbg !14863

cond.end88:                                       ; preds = %cond.false86, %cond.true85
  %cond89 = phi i32 [ %66, %cond.true85 ], [ %68, %cond.false86 ], !dbg !14863
  %and90 = and i32 %65, %cond89, !dbg !14863
  %tobool91 = icmp ne i32 %and90, 0, !dbg !14863
  br i1 %tobool91, label %land.lhs.true92, label %if.end129, !dbg !14863

land.lhs.true92:                                  ; preds = %cond.end88
  %69 = load %struct.Base*, %struct.Base** %local_base, align 8, !dbg !14863
  %object93 = getelementptr inbounds %struct.Base, %struct.Base* %69, i32 0, i32 7, !dbg !14863
  %70 = load %struct.Object*, %struct.Object** %object93, align 8, !dbg !14863
  %id94 = getelementptr inbounds %struct.Object, %struct.Object* %70, i32 0, i32 0, !dbg !14863
  %lib95 = getelementptr inbounds %struct.ID, %struct.ID* %id94, i32 0, i32 3, !dbg !14863
  %71 = load %struct.Library*, %struct.Library** %lib95, align 8, !dbg !14863
  %cmp96 = icmp eq %struct.Library* %71, null, !dbg !14863
  br i1 %cmp96, label %land.lhs.true98, label %if.end129, !dbg !14863

land.lhs.true98:                                  ; preds = %land.lhs.true92
  %72 = load %struct.Base*, %struct.Base** %local_base, align 8, !dbg !14863
  %object99 = getelementptr inbounds %struct.Base, %struct.Base* %72, i32 0, i32 7, !dbg !14863
  %73 = load %struct.Object*, %struct.Object** %object99, align 8, !dbg !14863
  %restrictflag100 = getelementptr inbounds %struct.Object, %struct.Object* %73, i32 0, i32 102, !dbg !14863
  %74 = load i8, i8* %restrictflag100, align 8, !dbg !14863
  %conv101 = zext i8 %74 to i32, !dbg !14863
  %and102 = and i32 %conv101, 1, !dbg !14863
  %cmp103 = icmp eq i32 %and102, 0, !dbg !14863
  br i1 %cmp103, label %if.then105, label %if.end129, !dbg !14866

if.then105:                                       ; preds = %land.lhs.true98
  call void @llvm.dbg.declare(metadata %struct.Object** %child, metadata !14867, metadata !DIExpression()), !dbg !14869
  %75 = load %struct.Base*, %struct.Base** %local_base, align 8, !dbg !14870
  %object106 = getelementptr inbounds %struct.Base, %struct.Base* %75, i32 0, i32 7, !dbg !14871
  %76 = load %struct.Object*, %struct.Object** %object106, align 8, !dbg !14871
  store %struct.Object* %76, %struct.Object** %child, align 8, !dbg !14869
  %77 = load %struct.Object*, %struct.Object** %child, align 8, !dbg !14872
  %call107 = call zeroext i8 @obrel_list_test(%struct.Object* %77), !dbg !14874
  %tobool108 = icmp ne i8 %call107, 0, !dbg !14874
  br i1 %tobool108, label %if.then109, label %if.end128, !dbg !14875

if.then109:                                       ; preds = %if.then105
  %78 = load i32, i32* %includeFilter.addr, align 4, !dbg !14876
  %and110 = and i32 %78, 8, !dbg !14879
  %tobool111 = icmp ne i32 %and110, 0, !dbg !14879
  br i1 %tobool111, label %land.lhs.true112, label %lor.lhs.false116, !dbg !14880

land.lhs.true112:                                 ; preds = %if.then109
  %79 = load %struct.Object*, %struct.Object** %ob55, align 8, !dbg !14881
  %80 = load %struct.Object*, %struct.Object** %child, align 8, !dbg !14882
  %call113 = call zeroext i8 @BKE_object_is_child_recursive(%struct.Object* %79, %struct.Object* %80), !dbg !14883
  %conv114 = zext i8 %call113 to i32, !dbg !14883
  %tobool115 = icmp ne i32 %conv114, 0, !dbg !14883
  br i1 %tobool115, label %if.then126, label %lor.lhs.false116, !dbg !14884

lor.lhs.false116:                                 ; preds = %land.lhs.true112, %if.then109
  %81 = load i32, i32* %includeFilter.addr, align 4, !dbg !14885
  %and117 = and i32 %81, 4, !dbg !14886
  %tobool118 = icmp ne i32 %and117, 0, !dbg !14886
  br i1 %tobool118, label %land.lhs.true119, label %if.end127, !dbg !14887

land.lhs.true119:                                 ; preds = %lor.lhs.false116
  %82 = load %struct.Object*, %struct.Object** %child, align 8, !dbg !14888
  %parent120 = getelementptr inbounds %struct.Object, %struct.Object* %82, i32 0, i32 9, !dbg !14889
  %83 = load %struct.Object*, %struct.Object** %parent120, align 8, !dbg !14889
  %tobool121 = icmp ne %struct.Object* %83, null, !dbg !14888
  br i1 %tobool121, label %land.lhs.true122, label %if.end127, !dbg !14890

land.lhs.true122:                                 ; preds = %land.lhs.true119
  %84 = load %struct.Object*, %struct.Object** %child, align 8, !dbg !14891
  %parent123 = getelementptr inbounds %struct.Object, %struct.Object* %84, i32 0, i32 9, !dbg !14892
  %85 = load %struct.Object*, %struct.Object** %parent123, align 8, !dbg !14892
  %86 = load %struct.Object*, %struct.Object** %ob55, align 8, !dbg !14893
  %cmp124 = icmp eq %struct.Object* %85, %86, !dbg !14894
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !14895

if.then126:                                       ; preds = %land.lhs.true122, %land.lhs.true112
  %87 = load %struct.Object*, %struct.Object** %child, align 8, !dbg !14896
  call void @obrel_list_add(%struct.LinkNode** %links, %struct.Object* %87), !dbg !14898
  br label %if.end127, !dbg !14899

if.end127:                                        ; preds = %if.then126, %land.lhs.true122, %land.lhs.true119, %lor.lhs.false116
  br label %if.end128, !dbg !14900

if.end128:                                        ; preds = %if.end127, %if.then105
  br label %if.end129, !dbg !14901

if.end129:                                        ; preds = %if.end128, %land.lhs.true98, %land.lhs.true92, %cond.end88
  br label %for.inc130, !dbg !14902

for.inc130:                                       ; preds = %if.end129
  %88 = load %struct.Base*, %struct.Base** %local_base, align 8, !dbg !14903
  %next131 = getelementptr inbounds %struct.Base, %struct.Base* %88, i32 0, i32 0, !dbg !14904
  %89 = load %struct.Base*, %struct.Base** %next131, align 8, !dbg !14904
  store %struct.Base* %89, %struct.Base** %local_base, align 8, !dbg !14905
  br label %for.cond81, !dbg !14906, !llvm.loop !14907

for.end132:                                       ; preds = %for.cond81
  br label %if.end133, !dbg !14909

if.end133:                                        ; preds = %for.end132, %if.end75
  %90 = load i32, i32* %includeFilter.addr, align 4, !dbg !14910
  %and134 = and i32 %90, 16, !dbg !14912
  %tobool135 = icmp ne i32 %and134, 0, !dbg !14912
  br i1 %tobool135, label %if.then136, label %if.end142, !dbg !14913

if.then136:                                       ; preds = %if.end133
  call void @llvm.dbg.declare(metadata %struct.Object** %arm, metadata !14914, metadata !DIExpression()), !dbg !14916
  %91 = load %struct.Object*, %struct.Object** %ob55, align 8, !dbg !14917
  %call137 = call %struct.Object* @obrel_armature_find(%struct.Object* %91), !dbg !14918
  store %struct.Object* %call137, %struct.Object** %arm, align 8, !dbg !14916
  %92 = load %struct.Object*, %struct.Object** %arm, align 8, !dbg !14919
  %call138 = call zeroext i8 @obrel_list_test(%struct.Object* %92), !dbg !14921
  %tobool139 = icmp ne i8 %call138, 0, !dbg !14921
  br i1 %tobool139, label %if.then140, label %if.end141, !dbg !14922

if.then140:                                       ; preds = %if.then136
  %93 = load %struct.Object*, %struct.Object** %arm, align 8, !dbg !14923
  call void @obrel_list_add(%struct.LinkNode** %links, %struct.Object* %93), !dbg !14925
  br label %if.end141, !dbg !14926

if.end141:                                        ; preds = %if.then140, %if.then136
  br label %if.end142, !dbg !14927

if.end142:                                        ; preds = %if.end141, %if.end133
  br label %if.end143, !dbg !14928

if.end143:                                        ; preds = %if.end142, %land.lhs.true47, %land.lhs.true41, %cond.end37, %lor.lhs.false
  br label %if.end144

if.end144:                                        ; preds = %if.end143, %if.then
  br label %for.inc145, !dbg !14929

for.inc145:                                       ; preds = %if.end144
  %94 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !14930
  %next146 = getelementptr inbounds %struct.Base, %struct.Base* %94, i32 0, i32 0, !dbg !14931
  %95 = load %struct.Base*, %struct.Base** %next146, align 8, !dbg !14931
  store %struct.Base* %95, %struct.Base** %base, align 8, !dbg !14932
  br label %for.cond5, !dbg !14933, !llvm.loop !14934

for.end147:                                       ; preds = %for.cond5
  %96 = load %struct.LinkNode*, %struct.LinkNode** %links, align 8, !dbg !14936
  ret %struct.LinkNode* %96, !dbg !14937
}

; Function Attrs: noinline nounwind uwtable
define internal void @obrel_list_add(%struct.LinkNode** %links, %struct.Object* %ob) #0 !dbg !14938 {
entry:
  %links.addr = alloca %struct.LinkNode**, align 8
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.LinkNode** %links, %struct.LinkNode*** %links.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LinkNode*** %links.addr, metadata !14942, metadata !DIExpression()), !dbg !14943
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !14944, metadata !DIExpression()), !dbg !14945
  %0 = load %struct.LinkNode**, %struct.LinkNode*** %links.addr, align 8, !dbg !14946
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14947
  %2 = bitcast %struct.Object* %1 to i8*, !dbg !14947
  call void @BLI_linklist_prepend(%struct.LinkNode** %0, i8* %2), !dbg !14948
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14949
  %id = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 0, !dbg !14950
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 5, !dbg !14951
  %4 = load i16, i16* %flag, align 2, !dbg !14952
  %conv = sext i16 %4 to i32, !dbg !14952
  %or = or i32 %conv, 1024, !dbg !14952
  %conv1 = trunc i32 %or to i16, !dbg !14952
  store i16 %conv1, i16* %flag, align 2, !dbg !14952
  ret void, !dbg !14953
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @obrel_list_test(%struct.Object* %ob) #0 !dbg !14954 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !14955, metadata !DIExpression()), !dbg !14956
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14957
  %tobool = icmp ne %struct.Object* %0, null, !dbg !14957
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !14958

land.rhs:                                         ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14959
  %id = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 0, !dbg !14960
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 5, !dbg !14961
  %2 = load i16, i16* %flag, align 2, !dbg !14961
  %conv = sext i16 %2 to i32, !dbg !14959
  %and = and i32 %conv, 1024, !dbg !14962
  %tobool1 = icmp ne i32 %and, 0, !dbg !14963
  %lnot = xor i1 %tobool1, true, !dbg !14963
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !14964
  %land.ext = zext i1 %3 to i32, !dbg !14958
  %conv2 = trunc i32 %land.ext to i8, !dbg !14957
  ret i8 %conv2, !dbg !14965
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.Object* @obrel_armature_find(%struct.Object* %ob) #0 !dbg !14966 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %ob_arm = alloca %struct.Object*, align 8
  %mod = alloca %struct.ModifierData*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !14969, metadata !DIExpression()), !dbg !14970
  call void @llvm.dbg.declare(metadata %struct.Object** %ob_arm, metadata !14971, metadata !DIExpression()), !dbg !14972
  store %struct.Object* null, %struct.Object** %ob_arm, align 8, !dbg !14972
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14973
  %parent = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 9, !dbg !14975
  %1 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !14975
  %tobool = icmp ne %struct.Object* %1, null, !dbg !14973
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !14976

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14977
  %partype = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 4, !dbg !14978
  %3 = load i16, i16* %partype, align 2, !dbg !14978
  %conv = sext i16 %3 to i32, !dbg !14977
  %cmp = icmp eq i32 %conv, 4, !dbg !14979
  br i1 %cmp, label %land.lhs.true2, label %if.else, !dbg !14980

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14981
  %parent3 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 9, !dbg !14982
  %5 = load %struct.Object*, %struct.Object** %parent3, align 8, !dbg !14982
  %type = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 3, !dbg !14983
  %6 = load i16, i16* %type, align 8, !dbg !14983
  %conv4 = sext i16 %6 to i32, !dbg !14981
  %cmp5 = icmp eq i32 %conv4, 25, !dbg !14984
  br i1 %cmp5, label %if.then, label %if.else, !dbg !14985

if.then:                                          ; preds = %land.lhs.true2
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14986
  %parent7 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 9, !dbg !14988
  %8 = load %struct.Object*, %struct.Object** %parent7, align 8, !dbg !14988
  store %struct.Object* %8, %struct.Object** %ob_arm, align 8, !dbg !14989
  br label %if.end13, !dbg !14990

if.else:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %mod, metadata !14991, metadata !DIExpression()), !dbg !14993
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !14994
  %modifiers = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 26, !dbg !14996
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %modifiers, i32 0, i32 0, !dbg !14997
  %10 = load i8*, i8** %first, align 8, !dbg !14997
  %11 = bitcast i8* %10 to %struct.ModifierData*, !dbg !14998
  store %struct.ModifierData* %11, %struct.ModifierData** %mod, align 8, !dbg !14999
  br label %for.cond, !dbg !15000

for.cond:                                         ; preds = %for.inc, %if.else
  %12 = load %struct.ModifierData*, %struct.ModifierData** %mod, align 8, !dbg !15001
  %tobool8 = icmp ne %struct.ModifierData* %12, null, !dbg !15003
  br i1 %tobool8, label %for.body, label %for.end, !dbg !15003

for.body:                                         ; preds = %for.cond
  %13 = load %struct.ModifierData*, %struct.ModifierData** %mod, align 8, !dbg !15004
  %type9 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %13, i32 0, i32 2, !dbg !15007
  %14 = load i32, i32* %type9, align 8, !dbg !15007
  %cmp10 = icmp eq i32 %14, 8, !dbg !15008
  br i1 %cmp10, label %if.then12, label %if.end, !dbg !15009

if.then12:                                        ; preds = %for.body
  %15 = load %struct.ModifierData*, %struct.ModifierData** %mod, align 8, !dbg !15010
  %16 = bitcast %struct.ModifierData* %15 to %struct.ArmatureModifierData*, !dbg !15012
  %object = getelementptr inbounds %struct.ArmatureModifierData, %struct.ArmatureModifierData* %16, i32 0, i32 4, !dbg !15012
  %17 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !15012
  store %struct.Object* %17, %struct.Object** %ob_arm, align 8, !dbg !15013
  br label %if.end, !dbg !15014

if.end:                                           ; preds = %if.then12, %for.body
  br label %for.inc, !dbg !15015

for.inc:                                          ; preds = %if.end
  %18 = load %struct.ModifierData*, %struct.ModifierData** %mod, align 8, !dbg !15016
  %next = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %18, i32 0, i32 0, !dbg !15017
  %19 = load %struct.ModifierData*, %struct.ModifierData** %next, align 8, !dbg !15017
  store %struct.ModifierData* %19, %struct.ModifierData** %mod, align 8, !dbg !15018
  br label %for.cond, !dbg !15019, !llvm.loop !15020

for.end:                                          ; preds = %for.cond
  br label %if.end13

if.end13:                                         ; preds = %for.end, %if.then
  %20 = load %struct.Object*, %struct.Object** %ob_arm, align 8, !dbg !15022
  ret %struct.Object* %20, !dbg !15023
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.LinkNode* @BKE_object_groups(%struct.Object* %ob) #0 !dbg !15024 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %group_linknode = alloca %struct.LinkNode*, align 8
  %group = alloca %struct.Group*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !15027, metadata !DIExpression()), !dbg !15028
  call void @llvm.dbg.declare(metadata %struct.LinkNode** %group_linknode, metadata !15029, metadata !DIExpression()), !dbg !15030
  store %struct.LinkNode* null, %struct.LinkNode** %group_linknode, align 8, !dbg !15030
  call void @llvm.dbg.declare(metadata %struct.Group** %group, metadata !15031, metadata !DIExpression()), !dbg !15032
  store %struct.Group* null, %struct.Group** %group, align 8, !dbg !15032
  br label %while.cond, !dbg !15033

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !15034
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15035
  %call = call %struct.Group* @BKE_group_object_find(%struct.Group* %0, %struct.Object* %1), !dbg !15036
  store %struct.Group* %call, %struct.Group** %group, align 8, !dbg !15037
  %tobool = icmp ne %struct.Group* %call, null, !dbg !15033
  br i1 %tobool, label %while.body, label %while.end, !dbg !15033

while.body:                                       ; preds = %while.cond
  %2 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !15038
  %3 = bitcast %struct.Group* %2 to i8*, !dbg !15038
  call void @BLI_linklist_prepend(%struct.LinkNode** %group_linknode, i8* %3), !dbg !15040
  br label %while.cond, !dbg !15033, !llvm.loop !15041

while.end:                                        ; preds = %while.cond
  %4 = load %struct.LinkNode*, %struct.LinkNode** %group_linknode, align 8, !dbg !15043
  ret %struct.LinkNode* %4, !dbg !15044
}

declare dso_local %struct.Group* @BKE_group_object_find(%struct.Group*, %struct.Object*) #3

declare dso_local void @BLI_linklist_prepend(%struct.LinkNode**, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_object_groups_clear(%struct.Scene* %scene, %struct.Base* %base, %struct.Object* %object) #0 !dbg !15045 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %base.addr = alloca %struct.Base*, align 8
  %object.addr = alloca %struct.Object*, align 8
  %group = alloca %struct.Group*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !15048, metadata !DIExpression()), !dbg !15049
  store %struct.Base* %base, %struct.Base** %base.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Base** %base.addr, metadata !15050, metadata !DIExpression()), !dbg !15051
  store %struct.Object* %object, %struct.Object** %object.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %object.addr, metadata !15052, metadata !DIExpression()), !dbg !15053
  call void @llvm.dbg.declare(metadata %struct.Group** %group, metadata !15054, metadata !DIExpression()), !dbg !15055
  store %struct.Group* null, %struct.Group** %group, align 8, !dbg !15055
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !15056
  %tobool = icmp ne %struct.Scene* %0, null, !dbg !15056
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !15058

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.Base*, %struct.Base** %base.addr, align 8, !dbg !15059
  %cmp = icmp eq %struct.Base* %1, null, !dbg !15060
  br i1 %cmp, label %if.then, label %if.end, !dbg !15061

if.then:                                          ; preds = %land.lhs.true
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !15062
  %3 = load %struct.Object*, %struct.Object** %object.addr, align 8, !dbg !15064
  %call = call %struct.Base* @BKE_scene_base_find(%struct.Scene* %2, %struct.Object* %3), !dbg !15065
  store %struct.Base* %call, %struct.Base** %base.addr, align 8, !dbg !15066
  br label %if.end, !dbg !15067

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  br label %while.cond, !dbg !15068

while.cond:                                       ; preds = %while.body, %if.end
  %4 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !15069
  %5 = load %struct.Base*, %struct.Base** %base.addr, align 8, !dbg !15070
  %object1 = getelementptr inbounds %struct.Base, %struct.Base* %5, i32 0, i32 7, !dbg !15071
  %6 = load %struct.Object*, %struct.Object** %object1, align 8, !dbg !15071
  %call2 = call %struct.Group* @BKE_group_object_find(%struct.Group* %4, %struct.Object* %6), !dbg !15072
  store %struct.Group* %call2, %struct.Group** %group, align 8, !dbg !15073
  %tobool3 = icmp ne %struct.Group* %call2, null, !dbg !15068
  br i1 %tobool3, label %while.body, label %while.end, !dbg !15068

while.body:                                       ; preds = %while.cond
  %7 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !15074
  %8 = load %struct.Object*, %struct.Object** %object.addr, align 8, !dbg !15076
  %9 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !15077
  %10 = load %struct.Base*, %struct.Base** %base.addr, align 8, !dbg !15078
  %call4 = call zeroext i8 @BKE_group_object_unlink(%struct.Group* %7, %struct.Object* %8, %struct.Scene* %9, %struct.Base* %10), !dbg !15079
  br label %while.cond, !dbg !15068, !llvm.loop !15080

while.end:                                        ; preds = %while.cond
  ret void, !dbg !15082
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.KDTree* @BKE_object_as_kdtree(%struct.Object* %ob, i32* %r_tot) #0 !dbg !15083 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %r_tot.addr = alloca i32*, align 8
  %tree = alloca %struct.KDTree*, align 8
  %tot = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %i = alloca i32, align 4
  %dm = alloca %struct.DerivedMesh*, align 8
  %index = alloca i32*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %totvert = alloca i32, align 4
  %co = alloca [3 x float], align 4
  %mvert20 = alloca %struct.MVert*, align 8
  %co28 = alloca [3 x float], align 4
  %cu = alloca %struct.Curve*, align 8
  %i43 = alloca i32, align 4
  %a = alloca i32, align 4
  %nu = alloca %struct.Nurb*, align 8
  %bezt50 = alloca %struct.BezTriple*, align 8
  %co55 = alloca [3 x float], align 4
  %bp = alloca %struct.BPoint*, align 8
  %co70 = alloca [3 x float], align 4
  %lt = alloca %struct.Lattice*, align 8
  %bp84 = alloca %struct.BPoint*, align 8
  %i85 = alloca i32, align 4
  %co98 = alloca [3 x float], align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !15086, metadata !DIExpression()), !dbg !15087
  store i32* %r_tot, i32** %r_tot.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_tot.addr, metadata !15088, metadata !DIExpression()), !dbg !15089
  call void @llvm.dbg.declare(metadata %struct.KDTree** %tree, metadata !15090, metadata !DIExpression()), !dbg !15093
  store %struct.KDTree* null, %struct.KDTree** %tree, align 8, !dbg !15093
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !15094, metadata !DIExpression()), !dbg !15095
  store i32 0, i32* %tot, align 4, !dbg !15095
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15096
  %type = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 3, !dbg !15097
  %1 = load i16, i16* %type, align 8, !dbg !15097
  %conv = sext i16 %1 to i32, !dbg !15096
  switch i32 %conv, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb41
    i32 3, label %sw.bb41
    i32 22, label %sw.bb82
  ], !dbg !15098

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !15099, metadata !DIExpression()), !dbg !15102
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15103
  %data = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !15104
  %3 = load i8*, i8** %data, align 8, !dbg !15104
  %4 = bitcast i8* %3 to %struct.Mesh*, !dbg !15103
  store %struct.Mesh* %4, %struct.Mesh** %me, align 8, !dbg !15102
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15105, metadata !DIExpression()), !dbg !15106
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !15107, metadata !DIExpression()), !dbg !15108
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15109
  %derivedDeform = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 119, !dbg !15110
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedDeform, align 8, !dbg !15110
  %tobool = icmp ne %struct.DerivedMesh* %6, null, !dbg !15109
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !15109

cond.true:                                        ; preds = %sw.bb
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15111
  %derivedDeform1 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 119, !dbg !15112
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedDeform1, align 8, !dbg !15112
  br label %cond.end, !dbg !15109

cond.false:                                       ; preds = %sw.bb
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15113
  %derivedFinal = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 120, !dbg !15114
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !15114
  br label %cond.end, !dbg !15109

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.DerivedMesh* [ %8, %cond.true ], [ %10, %cond.false ], !dbg !15109
  store %struct.DerivedMesh* %cond, %struct.DerivedMesh** %dm, align 8, !dbg !15108
  call void @llvm.dbg.declare(metadata i32** %index, metadata !15115, metadata !DIExpression()), !dbg !15117
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15118
  %tobool2 = icmp ne %struct.DerivedMesh* %11, null, !dbg !15118
  br i1 %tobool2, label %land.lhs.true, label %if.else, !dbg !15120

land.lhs.true:                                    ; preds = %cond.end
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15121
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %12, i32 0, i32 0, !dbg !15122
  %call = call i8* @CustomData_get_layer(%struct.CustomData* %vertData, i32 7), !dbg !15123
  %13 = bitcast i8* %call to i32*, !dbg !15123
  store i32* %13, i32** %index, align 8, !dbg !15124
  %tobool3 = icmp ne i32* %13, null, !dbg !15124
  br i1 %tobool3, label %if.then, label %if.else, !dbg !15125

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !15126, metadata !DIExpression()), !dbg !15128
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15129
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %14, i32 0, i32 31, !dbg !15130
  %15 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !15130
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15131
  %call4 = call %struct.MVert* %15(%struct.DerivedMesh* %16), !dbg !15129
  store %struct.MVert* %call4, %struct.MVert** %mvert, align 8, !dbg !15128
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !15132, metadata !DIExpression()), !dbg !15133
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15134
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %17, i32 0, i32 23, !dbg !15135
  %18 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !15135
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15136
  %call5 = call i32 %18(%struct.DerivedMesh* %19), !dbg !15134
  store i32 %call5, i32* %totvert, align 4, !dbg !15133
  store i32 0, i32* %tot, align 4, !dbg !15137
  %20 = load i32, i32* %totvert, align 4, !dbg !15138
  %call6 = call %struct.KDTree* @BLI_kdtree_new(i32 %20), !dbg !15139
  store %struct.KDTree* %call6, %struct.KDTree** %tree, align 8, !dbg !15140
  store i32 0, i32* %i, align 4, !dbg !15141
  br label %for.cond, !dbg !15143

for.cond:                                         ; preds = %for.inc, %if.then
  %21 = load i32, i32* %i, align 4, !dbg !15144
  %22 = load i32, i32* %totvert, align 4, !dbg !15146
  %cmp = icmp ult i32 %21, %22, !dbg !15147
  br i1 %cmp, label %for.body, label %for.end, !dbg !15148

for.body:                                         ; preds = %for.cond
  %23 = load i32*, i32** %index, align 8, !dbg !15149
  %24 = load i32, i32* %i, align 4, !dbg !15152
  %idxprom = zext i32 %24 to i64, !dbg !15149
  %arrayidx = getelementptr inbounds i32, i32* %23, i64 %idxprom, !dbg !15149
  %25 = load i32, i32* %arrayidx, align 4, !dbg !15149
  %cmp8 = icmp ne i32 %25, -1, !dbg !15153
  br i1 %cmp8, label %if.then10, label %if.end, !dbg !15154

if.then10:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata [3 x float]* %co, metadata !15155, metadata !DIExpression()), !dbg !15157
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !15158
  %26 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15159
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %26, i32 0, i32 47, !dbg !15160
  %arraydecay11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !15159
  %27 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !15161
  %28 = load i32, i32* %i, align 4, !dbg !15162
  %idxprom12 = zext i32 %28 to i64, !dbg !15161
  %arrayidx13 = getelementptr inbounds %struct.MVert, %struct.MVert* %27, i64 %idxprom12, !dbg !15161
  %co14 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx13, i32 0, i32 0, !dbg !15163
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %co14, i64 0, i64 0, !dbg !15161
  call void @mul_v3_m4v3(float* %arraydecay, [4 x float]* %arraydecay11, float* %arraydecay15), !dbg !15164
  %29 = load %struct.KDTree*, %struct.KDTree** %tree, align 8, !dbg !15165
  %30 = load i32*, i32** %index, align 8, !dbg !15166
  %31 = load i32, i32* %i, align 4, !dbg !15167
  %idxprom16 = zext i32 %31 to i64, !dbg !15166
  %arrayidx17 = getelementptr inbounds i32, i32* %30, i64 %idxprom16, !dbg !15166
  %32 = load i32, i32* %arrayidx17, align 4, !dbg !15166
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !15168
  call void @BLI_kdtree_insert(%struct.KDTree* %29, i32 %32, float* %arraydecay18), !dbg !15169
  %33 = load i32, i32* %tot, align 4, !dbg !15170
  %inc = add i32 %33, 1, !dbg !15170
  store i32 %inc, i32* %tot, align 4, !dbg !15170
  br label %if.end, !dbg !15171

if.end:                                           ; preds = %if.then10, %for.body
  br label %for.inc, !dbg !15172

for.inc:                                          ; preds = %if.end
  %34 = load i32, i32* %i, align 4, !dbg !15173
  %inc19 = add i32 %34, 1, !dbg !15173
  store i32 %inc19, i32* %i, align 4, !dbg !15173
  br label %for.cond, !dbg !15174, !llvm.loop !15175

for.end:                                          ; preds = %for.cond
  br label %if.end40, !dbg !15177

if.else:                                          ; preds = %land.lhs.true, %cond.end
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert20, metadata !15178, metadata !DIExpression()), !dbg !15180
  %35 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !15181
  %mvert21 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %35, i32 0, i32 15, !dbg !15182
  %36 = load %struct.MVert*, %struct.MVert** %mvert21, align 8, !dbg !15182
  store %struct.MVert* %36, %struct.MVert** %mvert20, align 8, !dbg !15180
  %37 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !15183
  %totvert22 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %37, i32 0, i32 26, !dbg !15184
  %38 = load i32, i32* %totvert22, align 8, !dbg !15184
  store i32 %38, i32* %tot, align 4, !dbg !15185
  %39 = load i32, i32* %tot, align 4, !dbg !15186
  %call23 = call %struct.KDTree* @BLI_kdtree_new(i32 %39), !dbg !15187
  store %struct.KDTree* %call23, %struct.KDTree** %tree, align 8, !dbg !15188
  store i32 0, i32* %i, align 4, !dbg !15189
  br label %for.cond24, !dbg !15191

for.cond24:                                       ; preds = %for.inc37, %if.else
  %40 = load i32, i32* %i, align 4, !dbg !15192
  %41 = load i32, i32* %tot, align 4, !dbg !15194
  %cmp25 = icmp ult i32 %40, %41, !dbg !15195
  br i1 %cmp25, label %for.body27, label %for.end39, !dbg !15196

for.body27:                                       ; preds = %for.cond24
  call void @llvm.dbg.declare(metadata [3 x float]* %co28, metadata !15197, metadata !DIExpression()), !dbg !15199
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %co28, i64 0, i64 0, !dbg !15200
  %42 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15201
  %obmat30 = getelementptr inbounds %struct.Object, %struct.Object* %42, i32 0, i32 47, !dbg !15202
  %arraydecay31 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat30, i64 0, i64 0, !dbg !15201
  %43 = load %struct.MVert*, %struct.MVert** %mvert20, align 8, !dbg !15203
  %44 = load i32, i32* %i, align 4, !dbg !15204
  %idxprom32 = zext i32 %44 to i64, !dbg !15203
  %arrayidx33 = getelementptr inbounds %struct.MVert, %struct.MVert* %43, i64 %idxprom32, !dbg !15203
  %co34 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx33, i32 0, i32 0, !dbg !15205
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %co34, i64 0, i64 0, !dbg !15203
  call void @mul_v3_m4v3(float* %arraydecay29, [4 x float]* %arraydecay31, float* %arraydecay35), !dbg !15206
  %45 = load %struct.KDTree*, %struct.KDTree** %tree, align 8, !dbg !15207
  %46 = load i32, i32* %i, align 4, !dbg !15208
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %co28, i64 0, i64 0, !dbg !15209
  call void @BLI_kdtree_insert(%struct.KDTree* %45, i32 %46, float* %arraydecay36), !dbg !15210
  br label %for.inc37, !dbg !15211

for.inc37:                                        ; preds = %for.body27
  %47 = load i32, i32* %i, align 4, !dbg !15212
  %inc38 = add i32 %47, 1, !dbg !15212
  store i32 %inc38, i32* %i, align 4, !dbg !15212
  br label %for.cond24, !dbg !15213, !llvm.loop !15214

for.end39:                                        ; preds = %for.cond24
  br label %if.end40

if.end40:                                         ; preds = %for.end39, %for.end
  %48 = load %struct.KDTree*, %struct.KDTree** %tree, align 8, !dbg !15216
  call void @BLI_kdtree_balance(%struct.KDTree* %48), !dbg !15217
  br label %sw.epilog, !dbg !15218

sw.bb41:                                          ; preds = %entry, %entry
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !15219, metadata !DIExpression()), !dbg !15221
  %49 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15222
  %data42 = getelementptr inbounds %struct.Object, %struct.Object* %49, i32 0, i32 19, !dbg !15223
  %50 = load i8*, i8** %data42, align 8, !dbg !15223
  %51 = bitcast i8* %50 to %struct.Curve*, !dbg !15222
  store %struct.Curve* %51, %struct.Curve** %cu, align 8, !dbg !15221
  call void @llvm.dbg.declare(metadata i32* %i43, metadata !15224, metadata !DIExpression()), !dbg !15225
  call void @llvm.dbg.declare(metadata i32* %a, metadata !15226, metadata !DIExpression()), !dbg !15227
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !15228, metadata !DIExpression()), !dbg !15256
  %52 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !15257
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %52, i32 0, i32 3, !dbg !15258
  %call44 = call i32 @BKE_nurbList_verts_count_without_handles(%struct.ListBase* %nurb), !dbg !15259
  store i32 %call44, i32* %tot, align 4, !dbg !15260
  %53 = load i32, i32* %tot, align 4, !dbg !15261
  %call45 = call %struct.KDTree* @BLI_kdtree_new(i32 %53), !dbg !15262
  store %struct.KDTree* %call45, %struct.KDTree** %tree, align 8, !dbg !15263
  store i32 0, i32* %i43, align 4, !dbg !15264
  %54 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !15265
  %nurb46 = getelementptr inbounds %struct.Curve, %struct.Curve* %54, i32 0, i32 3, !dbg !15266
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb46, i32 0, i32 0, !dbg !15267
  %55 = load i8*, i8** %first, align 8, !dbg !15267
  %56 = bitcast i8* %55 to %struct.Nurb*, !dbg !15265
  store %struct.Nurb* %56, %struct.Nurb** %nu, align 8, !dbg !15268
  br label %while.cond, !dbg !15269

while.cond:                                       ; preds = %if.end80, %sw.bb41
  %57 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15270
  %tobool47 = icmp ne %struct.Nurb* %57, null, !dbg !15269
  br i1 %tobool47, label %while.body, label %while.end81, !dbg !15269

while.body:                                       ; preds = %while.cond
  %58 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15271
  %bezt = getelementptr inbounds %struct.Nurb, %struct.Nurb* %58, i32 0, i32 18, !dbg !15274
  %59 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !15274
  %tobool48 = icmp ne %struct.BezTriple* %59, null, !dbg !15271
  br i1 %tobool48, label %if.then49, label %if.else63, !dbg !15275

if.then49:                                        ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt50, metadata !15276, metadata !DIExpression()), !dbg !15278
  %60 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15279
  %bezt51 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %60, i32 0, i32 18, !dbg !15280
  %61 = load %struct.BezTriple*, %struct.BezTriple** %bezt51, align 8, !dbg !15280
  store %struct.BezTriple* %61, %struct.BezTriple** %bezt50, align 8, !dbg !15281
  %62 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15282
  %pntsu = getelementptr inbounds %struct.Nurb, %struct.Nurb* %62, i32 0, i32 6, !dbg !15283
  %63 = load i32, i32* %pntsu, align 8, !dbg !15283
  store i32 %63, i32* %a, align 4, !dbg !15284
  br label %while.cond52, !dbg !15285

while.cond52:                                     ; preds = %while.body54, %if.then49
  %64 = load i32, i32* %a, align 4, !dbg !15286
  %dec = add i32 %64, -1, !dbg !15286
  store i32 %dec, i32* %a, align 4, !dbg !15286
  %tobool53 = icmp ne i32 %64, 0, !dbg !15285
  br i1 %tobool53, label %while.body54, label %while.end, !dbg !15285

while.body54:                                     ; preds = %while.cond52
  call void @llvm.dbg.declare(metadata [3 x float]* %co55, metadata !15287, metadata !DIExpression()), !dbg !15289
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %co55, i64 0, i64 0, !dbg !15290
  %65 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15291
  %obmat57 = getelementptr inbounds %struct.Object, %struct.Object* %65, i32 0, i32 47, !dbg !15292
  %arraydecay58 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat57, i64 0, i64 0, !dbg !15291
  %66 = load %struct.BezTriple*, %struct.BezTriple** %bezt50, align 8, !dbg !15293
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %66, i32 0, i32 0, !dbg !15294
  %arrayidx59 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 1, !dbg !15293
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx59, i64 0, i64 0, !dbg !15293
  call void @mul_v3_m4v3(float* %arraydecay56, [4 x float]* %arraydecay58, float* %arraydecay60), !dbg !15295
  %67 = load %struct.KDTree*, %struct.KDTree** %tree, align 8, !dbg !15296
  %68 = load i32, i32* %i43, align 4, !dbg !15297
  %inc61 = add i32 %68, 1, !dbg !15297
  store i32 %inc61, i32* %i43, align 4, !dbg !15297
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %co55, i64 0, i64 0, !dbg !15298
  call void @BLI_kdtree_insert(%struct.KDTree* %67, i32 %68, float* %arraydecay62), !dbg !15299
  %69 = load %struct.BezTriple*, %struct.BezTriple** %bezt50, align 8, !dbg !15300
  %incdec.ptr = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %69, i32 1, !dbg !15300
  store %struct.BezTriple* %incdec.ptr, %struct.BezTriple** %bezt50, align 8, !dbg !15300
  br label %while.cond52, !dbg !15285, !llvm.loop !15301

while.end:                                        ; preds = %while.cond52
  br label %if.end80, !dbg !15303

if.else63:                                        ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp, metadata !15304, metadata !DIExpression()), !dbg !15306
  %70 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15307
  %bp64 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %70, i32 0, i32 17, !dbg !15308
  %71 = load %struct.BPoint*, %struct.BPoint** %bp64, align 8, !dbg !15308
  store %struct.BPoint* %71, %struct.BPoint** %bp, align 8, !dbg !15309
  %72 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15310
  %pntsu65 = getelementptr inbounds %struct.Nurb, %struct.Nurb* %72, i32 0, i32 6, !dbg !15311
  %73 = load i32, i32* %pntsu65, align 8, !dbg !15311
  %74 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15312
  %pntsv = getelementptr inbounds %struct.Nurb, %struct.Nurb* %74, i32 0, i32 7, !dbg !15313
  %75 = load i32, i32* %pntsv, align 4, !dbg !15313
  %mul = mul nsw i32 %73, %75, !dbg !15314
  store i32 %mul, i32* %a, align 4, !dbg !15315
  br label %while.cond66, !dbg !15316

while.cond66:                                     ; preds = %while.body69, %if.else63
  %76 = load i32, i32* %a, align 4, !dbg !15317
  %dec67 = add i32 %76, -1, !dbg !15317
  store i32 %dec67, i32* %a, align 4, !dbg !15317
  %tobool68 = icmp ne i32 %76, 0, !dbg !15316
  br i1 %tobool68, label %while.body69, label %while.end79, !dbg !15316

while.body69:                                     ; preds = %while.cond66
  call void @llvm.dbg.declare(metadata [3 x float]* %co70, metadata !15318, metadata !DIExpression()), !dbg !15320
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %co70, i64 0, i64 0, !dbg !15321
  %77 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15322
  %obmat72 = getelementptr inbounds %struct.Object, %struct.Object* %77, i32 0, i32 47, !dbg !15323
  %arraydecay73 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat72, i64 0, i64 0, !dbg !15322
  %78 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !15324
  %vec74 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %78, i32 0, i32 0, !dbg !15325
  %arraydecay75 = getelementptr inbounds [4 x float], [4 x float]* %vec74, i64 0, i64 0, !dbg !15324
  call void @mul_v3_m4v3(float* %arraydecay71, [4 x float]* %arraydecay73, float* %arraydecay75), !dbg !15326
  %79 = load %struct.KDTree*, %struct.KDTree** %tree, align 8, !dbg !15327
  %80 = load i32, i32* %i43, align 4, !dbg !15328
  %inc76 = add i32 %80, 1, !dbg !15328
  store i32 %inc76, i32* %i43, align 4, !dbg !15328
  %arraydecay77 = getelementptr inbounds [3 x float], [3 x float]* %co70, i64 0, i64 0, !dbg !15329
  call void @BLI_kdtree_insert(%struct.KDTree* %79, i32 %80, float* %arraydecay77), !dbg !15330
  %81 = load %struct.BPoint*, %struct.BPoint** %bp, align 8, !dbg !15331
  %incdec.ptr78 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %81, i32 1, !dbg !15331
  store %struct.BPoint* %incdec.ptr78, %struct.BPoint** %bp, align 8, !dbg !15331
  br label %while.cond66, !dbg !15316, !llvm.loop !15332

while.end79:                                      ; preds = %while.cond66
  br label %if.end80

if.end80:                                         ; preds = %while.end79, %while.end
  %82 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !15334
  %next = getelementptr inbounds %struct.Nurb, %struct.Nurb* %82, i32 0, i32 0, !dbg !15335
  %83 = load %struct.Nurb*, %struct.Nurb** %next, align 8, !dbg !15335
  store %struct.Nurb* %83, %struct.Nurb** %nu, align 8, !dbg !15336
  br label %while.cond, !dbg !15269, !llvm.loop !15337

while.end81:                                      ; preds = %while.cond
  %84 = load %struct.KDTree*, %struct.KDTree** %tree, align 8, !dbg !15339
  call void @BLI_kdtree_balance(%struct.KDTree* %84), !dbg !15340
  br label %sw.epilog, !dbg !15341

sw.bb82:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !15342, metadata !DIExpression()), !dbg !15344
  %85 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15345
  %data83 = getelementptr inbounds %struct.Object, %struct.Object* %85, i32 0, i32 19, !dbg !15346
  %86 = load i8*, i8** %data83, align 8, !dbg !15346
  %87 = bitcast i8* %86 to %struct.Lattice*, !dbg !15345
  store %struct.Lattice* %87, %struct.Lattice** %lt, align 8, !dbg !15344
  call void @llvm.dbg.declare(metadata %struct.BPoint** %bp84, metadata !15347, metadata !DIExpression()), !dbg !15348
  call void @llvm.dbg.declare(metadata i32* %i85, metadata !15349, metadata !DIExpression()), !dbg !15350
  %88 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !15351
  %pntsu86 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %88, i32 0, i32 2, !dbg !15352
  %89 = load i16, i16* %pntsu86, align 8, !dbg !15352
  %conv87 = sext i16 %89 to i32, !dbg !15351
  %90 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !15353
  %pntsv88 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %90, i32 0, i32 3, !dbg !15354
  %91 = load i16, i16* %pntsv88, align 2, !dbg !15354
  %conv89 = sext i16 %91 to i32, !dbg !15353
  %mul90 = mul nsw i32 %conv87, %conv89, !dbg !15355
  %92 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !15356
  %pntsw = getelementptr inbounds %struct.Lattice, %struct.Lattice* %92, i32 0, i32 4, !dbg !15357
  %93 = load i16, i16* %pntsw, align 4, !dbg !15357
  %conv91 = sext i16 %93 to i32, !dbg !15356
  %mul92 = mul nsw i32 %mul90, %conv91, !dbg !15358
  store i32 %mul92, i32* %tot, align 4, !dbg !15359
  %94 = load i32, i32* %tot, align 4, !dbg !15360
  %call93 = call %struct.KDTree* @BLI_kdtree_new(i32 %94), !dbg !15361
  store %struct.KDTree* %call93, %struct.KDTree** %tree, align 8, !dbg !15362
  store i32 0, i32* %i85, align 4, !dbg !15363
  %95 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !15364
  %def = getelementptr inbounds %struct.Lattice, %struct.Lattice* %95, i32 0, i32 21, !dbg !15366
  %96 = load %struct.BPoint*, %struct.BPoint** %def, align 8, !dbg !15366
  store %struct.BPoint* %96, %struct.BPoint** %bp84, align 8, !dbg !15367
  br label %for.cond94, !dbg !15368

for.cond94:                                       ; preds = %for.inc106, %sw.bb82
  %97 = load i32, i32* %i85, align 4, !dbg !15369
  %98 = load i32, i32* %tot, align 4, !dbg !15371
  %cmp95 = icmp ult i32 %97, %98, !dbg !15372
  br i1 %cmp95, label %for.body97, label %for.end108, !dbg !15373

for.body97:                                       ; preds = %for.cond94
  call void @llvm.dbg.declare(metadata [3 x float]* %co98, metadata !15374, metadata !DIExpression()), !dbg !15376
  %arraydecay99 = getelementptr inbounds [3 x float], [3 x float]* %co98, i64 0, i64 0, !dbg !15377
  %99 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15378
  %obmat100 = getelementptr inbounds %struct.Object, %struct.Object* %99, i32 0, i32 47, !dbg !15379
  %arraydecay101 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat100, i64 0, i64 0, !dbg !15378
  %100 = load %struct.BPoint*, %struct.BPoint** %bp84, align 8, !dbg !15380
  %vec102 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %100, i32 0, i32 0, !dbg !15381
  %arraydecay103 = getelementptr inbounds [4 x float], [4 x float]* %vec102, i64 0, i64 0, !dbg !15380
  call void @mul_v3_m4v3(float* %arraydecay99, [4 x float]* %arraydecay101, float* %arraydecay103), !dbg !15382
  %101 = load %struct.KDTree*, %struct.KDTree** %tree, align 8, !dbg !15383
  %102 = load i32, i32* %i85, align 4, !dbg !15384
  %inc104 = add i32 %102, 1, !dbg !15384
  store i32 %inc104, i32* %i85, align 4, !dbg !15384
  %arraydecay105 = getelementptr inbounds [3 x float], [3 x float]* %co98, i64 0, i64 0, !dbg !15385
  call void @BLI_kdtree_insert(%struct.KDTree* %101, i32 %102, float* %arraydecay105), !dbg !15386
  br label %for.inc106, !dbg !15387

for.inc106:                                       ; preds = %for.body97
  %103 = load %struct.BPoint*, %struct.BPoint** %bp84, align 8, !dbg !15388
  %incdec.ptr107 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %103, i32 1, !dbg !15388
  store %struct.BPoint* %incdec.ptr107, %struct.BPoint** %bp84, align 8, !dbg !15388
  br label %for.cond94, !dbg !15389, !llvm.loop !15390

for.end108:                                       ; preds = %for.cond94
  %104 = load %struct.KDTree*, %struct.KDTree** %tree, align 8, !dbg !15392
  call void @BLI_kdtree_balance(%struct.KDTree* %104), !dbg !15393
  br label %sw.epilog, !dbg !15394

sw.epilog:                                        ; preds = %entry, %for.end108, %while.end81, %if.end40
  %105 = load i32, i32* %tot, align 4, !dbg !15395
  %106 = load i32*, i32** %r_tot.addr, align 8, !dbg !15396
  store i32 %105, i32* %106, align 4, !dbg !15397
  %107 = load %struct.KDTree*, %struct.KDTree** %tree, align 8, !dbg !15398
  ret %struct.KDTree* %107, !dbg !15399
}

declare dso_local i8* @CustomData_get_layer(%struct.CustomData*, i32) #3

declare dso_local %struct.KDTree* @BLI_kdtree_new(i32) #3

declare dso_local void @BLI_kdtree_insert(%struct.KDTree*, i32, float*) #3

declare dso_local void @BLI_kdtree_balance(%struct.KDTree*) #3

declare dso_local i32 @BKE_nurbList_verts_count_without_handles(%struct.ListBase*) #3

declare dso_local void @BLI_duplicatelist(%struct.ListBase*, %struct.ListBase*) #3

declare dso_local void @BKE_pose_copy_data(%struct.bPose**, %struct.bPose*, i8 zeroext) #3

declare dso_local void @extern_local_matarar(%struct.Material**, i16 signext) #3

; Function Attrs: noinline nounwind uwtable
define internal void @extern_local_object__modifiersForeachIDLink(i8* %UNUSED_userData, %struct.Object* %UNUSED_ob, %struct.ID** %idpoin) #0 !dbg !15400 {
entry:
  %UNUSED_userData.addr = alloca i8*, align 8
  %UNUSED_ob.addr = alloca %struct.Object*, align 8
  %idpoin.addr = alloca %struct.ID**, align 8
  store i8* %UNUSED_userData, i8** %UNUSED_userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_userData.addr, metadata !15401, metadata !DIExpression()), !dbg !15402
  store %struct.Object* %UNUSED_ob, %struct.Object** %UNUSED_ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %UNUSED_ob.addr, metadata !15403, metadata !DIExpression()), !dbg !15404
  store %struct.ID** %idpoin, %struct.ID*** %idpoin.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID*** %idpoin.addr, metadata !15405, metadata !DIExpression()), !dbg !15406
  %0 = load %struct.ID**, %struct.ID*** %idpoin.addr, align 8, !dbg !15407
  %1 = load %struct.ID*, %struct.ID** %0, align 8, !dbg !15409
  %tobool = icmp ne %struct.ID* %1, null, !dbg !15409
  br i1 %tobool, label %if.then, label %if.end8, !dbg !15410

if.then:                                          ; preds = %entry
  %2 = load %struct.ID**, %struct.ID*** %idpoin.addr, align 8, !dbg !15411
  %3 = load %struct.ID*, %struct.ID** %2, align 8, !dbg !15411
  %name = getelementptr inbounds %struct.ID, %struct.ID* %3, i32 0, i32 4, !dbg !15411
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !15411
  %4 = bitcast i8* %arraydecay to i16*, !dbg !15411
  %5 = load i16, i16* %4, align 8, !dbg !15411
  %conv = sext i16 %5 to i32, !dbg !15411
  %cmp = icmp eq i32 %conv, 19785, !dbg !15411
  br i1 %cmp, label %if.then7, label %lor.lhs.false, !dbg !15411

lor.lhs.false:                                    ; preds = %if.then
  %6 = load %struct.ID**, %struct.ID*** %idpoin.addr, align 8, !dbg !15411
  %7 = load %struct.ID*, %struct.ID** %6, align 8, !dbg !15411
  %name2 = getelementptr inbounds %struct.ID, %struct.ID* %7, i32 0, i32 4, !dbg !15411
  %arraydecay3 = getelementptr inbounds [66 x i8], [66 x i8]* %name2, i64 0, i64 0, !dbg !15411
  %8 = bitcast i8* %arraydecay3 to i16*, !dbg !15411
  %9 = load i16, i16* %8, align 8, !dbg !15411
  %conv4 = sext i16 %9 to i32, !dbg !15411
  %cmp5 = icmp eq i32 %conv4, 17748, !dbg !15411
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !15414

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  %10 = load %struct.ID**, %struct.ID*** %idpoin.addr, align 8, !dbg !15415
  %11 = load %struct.ID*, %struct.ID** %10, align 8, !dbg !15417
  call void @id_lib_extern(%struct.ID* %11), !dbg !15418
  br label %if.end, !dbg !15419

if.end:                                           ; preds = %if.then7, %lor.lhs.false
  br label %if.end8, !dbg !15420

if.end8:                                          ; preds = %if.end, %entry
  ret void, !dbg !15421
}

declare dso_local void @copy_m3_m4([3 x float]*, [4 x float]*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @ob_parcurve(%struct.Scene* %scene, %struct.Object* %ob, %struct.Object* %par, [4 x float]* %mat) #0 !dbg !15422 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %par.addr = alloca %struct.Object*, align 8
  %mat.addr = alloca [4 x float]*, align 8
  %cu = alloca %struct.Curve*, align 8
  %vec = alloca [4 x float], align 16
  %dir = alloca [3 x float], align 4
  %quat = alloca [4 x float], align 16
  %radius = alloca float, align 4
  %ctime = alloca float, align 4
  %tmat = alloca [4 x [4 x float]], align 16
  %rmat = alloca [4 x [4 x float]], align 16
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !15423, metadata !DIExpression()), !dbg !15424
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !15425, metadata !DIExpression()), !dbg !15426
  store %struct.Object* %par, %struct.Object** %par.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %par.addr, metadata !15427, metadata !DIExpression()), !dbg !15428
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !15429, metadata !DIExpression()), !dbg !15430
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !15431, metadata !DIExpression()), !dbg !15432
  call void @llvm.dbg.declare(metadata [4 x float]* %vec, metadata !15433, metadata !DIExpression()), !dbg !15434
  call void @llvm.dbg.declare(metadata [3 x float]* %dir, metadata !15435, metadata !DIExpression()), !dbg !15436
  call void @llvm.dbg.declare(metadata [4 x float]* %quat, metadata !15437, metadata !DIExpression()), !dbg !15438
  call void @llvm.dbg.declare(metadata float* %radius, metadata !15439, metadata !DIExpression()), !dbg !15440
  call void @llvm.dbg.declare(metadata float* %ctime, metadata !15441, metadata !DIExpression()), !dbg !15442
  %0 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !15443
  call void @unit_m4([4 x float]* %0), !dbg !15444
  %1 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15445
  %data = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 19, !dbg !15446
  %2 = load i8*, i8** %data, align 8, !dbg !15446
  %3 = bitcast i8* %2 to %struct.Curve*, !dbg !15445
  store %struct.Curve* %3, %struct.Curve** %cu, align 8, !dbg !15447
  %4 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15448
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 118, !dbg !15448
  %5 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !15448
  %cmp = icmp eq %struct.CurveCache* null, %5, !dbg !15448
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !15448

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15448
  %curve_cache1 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 118, !dbg !15448
  %7 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache1, align 8, !dbg !15448
  %path = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %7, i32 0, i32 3, !dbg !15448
  %8 = load %struct.Path*, %struct.Path** %path, align 8, !dbg !15448
  %cmp2 = icmp eq %struct.Path* null, %8, !dbg !15448
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !15448

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %9 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15448
  %curve_cache4 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 118, !dbg !15448
  %10 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache4, align 8, !dbg !15448
  %path5 = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %10, i32 0, i32 3, !dbg !15448
  %11 = load %struct.Path*, %struct.Path** %path5, align 8, !dbg !15448
  %data6 = getelementptr inbounds %struct.Path, %struct.Path* %11, i32 0, i32 0, !dbg !15448
  %12 = load %struct.PathPoint*, %struct.PathPoint** %data6, align 8, !dbg !15448
  %cmp7 = icmp eq %struct.PathPoint* null, %12, !dbg !15448
  br i1 %cmp7, label %if.then, label %if.end, !dbg !15450

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  %13 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !15451
  %14 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15452
  call void @BKE_displist_make_curveTypes(%struct.Scene* %13, %struct.Object* %14, i8 zeroext 0), !dbg !15453
  br label %if.end, !dbg !15453

if.end:                                           ; preds = %if.then, %lor.lhs.false3
  %15 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15454
  %curve_cache8 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 118, !dbg !15456
  %16 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache8, align 8, !dbg !15456
  %path9 = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %16, i32 0, i32 3, !dbg !15457
  %17 = load %struct.Path*, %struct.Path** %path9, align 8, !dbg !15457
  %cmp10 = icmp eq %struct.Path* %17, null, !dbg !15458
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !15459

if.then11:                                        ; preds = %if.end
  br label %if.end79, !dbg !15460

if.end12:                                         ; preds = %if.end
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15461
  %ipoflag = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 60, !dbg !15463
  %19 = load i16, i16* %ipoflag, align 2, !dbg !15463
  %conv = sext i16 %19 to i32, !dbg !15461
  %and = and i32 %conv, 1024, !dbg !15464
  %tobool = icmp ne i32 %and, 0, !dbg !15464
  br i1 %tobool, label %if.then13, label %if.else, !dbg !15465

if.then13:                                        ; preds = %if.end12
  store float 0.000000e+00, float* %ctime, align 4, !dbg !15466
  br label %if.end51, !dbg !15468

if.else:                                          ; preds = %if.end12
  %20 = load i32, i32* @enable_cu_speed, align 4, !dbg !15469
  %tobool14 = icmp ne i32 %20, 0, !dbg !15469
  br i1 %tobool14, label %if.then15, label %if.else33, !dbg !15471

if.then15:                                        ; preds = %if.else
  %21 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !15472
  %pathlen = getelementptr inbounds %struct.Curve, %struct.Curve* %21, i32 0, i32 20, !dbg !15475
  %22 = load i32, i32* %pathlen, align 4, !dbg !15475
  %tobool16 = icmp ne i32 %22, 0, !dbg !15472
  br i1 %tobool16, label %if.then17, label %if.else21, !dbg !15476

if.then17:                                        ; preds = %if.then15
  %23 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !15477
  %ctime18 = getelementptr inbounds %struct.Curve, %struct.Curve* %23, i32 0, i32 64, !dbg !15479
  %24 = load float, float* %ctime18, align 8, !dbg !15479
  %25 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !15480
  %pathlen19 = getelementptr inbounds %struct.Curve, %struct.Curve* %25, i32 0, i32 20, !dbg !15481
  %26 = load i32, i32* %pathlen19, align 4, !dbg !15481
  %conv20 = sitofp i32 %26 to float, !dbg !15480
  %div = fdiv float %24, %conv20, !dbg !15482
  store float %div, float* %ctime, align 4, !dbg !15483
  br label %if.end23, !dbg !15484

if.else21:                                        ; preds = %if.then15
  %27 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !15485
  %ctime22 = getelementptr inbounds %struct.Curve, %struct.Curve* %27, i32 0, i32 64, !dbg !15487
  %28 = load float, float* %ctime22, align 8, !dbg !15487
  store float %28, float* %ctime, align 4, !dbg !15488
  br label %if.end23

if.end23:                                         ; preds = %if.else21, %if.then17
  %29 = load float, float* %ctime, align 4, !dbg !15489
  %cmp24 = fcmp olt float %29, 0.000000e+00, !dbg !15489
  br i1 %cmp24, label %if.then26, label %if.else27, !dbg !15492

if.then26:                                        ; preds = %if.end23
  store float 0.000000e+00, float* %ctime, align 4, !dbg !15489
  br label %if.end32, !dbg !15489

if.else27:                                        ; preds = %if.end23
  %30 = load float, float* %ctime, align 4, !dbg !15493
  %cmp28 = fcmp ogt float %30, 1.000000e+00, !dbg !15493
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !15489

if.then30:                                        ; preds = %if.else27
  store float 1.000000e+00, float* %ctime, align 4, !dbg !15493
  br label %if.end31, !dbg !15493

if.end31:                                         ; preds = %if.then30, %if.else27
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then26
  br label %if.end50, !dbg !15495

if.else33:                                        ; preds = %if.else
  %31 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !15496
  %call = call float @BKE_scene_frame_get(%struct.Scene* %31), !dbg !15498
  store float %call, float* %ctime, align 4, !dbg !15499
  %32 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !15500
  %pathlen34 = getelementptr inbounds %struct.Curve, %struct.Curve* %32, i32 0, i32 20, !dbg !15502
  %33 = load i32, i32* %pathlen34, align 4, !dbg !15502
  %tobool35 = icmp ne i32 %33, 0, !dbg !15500
  br i1 %tobool35, label %if.then36, label %if.end40, !dbg !15503

if.then36:                                        ; preds = %if.else33
  %34 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !15504
  %pathlen37 = getelementptr inbounds %struct.Curve, %struct.Curve* %34, i32 0, i32 20, !dbg !15506
  %35 = load i32, i32* %pathlen37, align 4, !dbg !15506
  %conv38 = sitofp i32 %35 to float, !dbg !15504
  %36 = load float, float* %ctime, align 4, !dbg !15507
  %div39 = fdiv float %36, %conv38, !dbg !15507
  store float %div39, float* %ctime, align 4, !dbg !15507
  br label %if.end40, !dbg !15508

if.end40:                                         ; preds = %if.then36, %if.else33
  %37 = load float, float* %ctime, align 4, !dbg !15509
  %cmp41 = fcmp olt float %37, 0.000000e+00, !dbg !15509
  br i1 %cmp41, label %if.then43, label %if.else44, !dbg !15512

if.then43:                                        ; preds = %if.end40
  store float 0.000000e+00, float* %ctime, align 4, !dbg !15509
  br label %if.end49, !dbg !15509

if.else44:                                        ; preds = %if.end40
  %38 = load float, float* %ctime, align 4, !dbg !15513
  %cmp45 = fcmp ogt float %38, 1.000000e+00, !dbg !15513
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !15509

if.then47:                                        ; preds = %if.else44
  store float 1.000000e+00, float* %ctime, align 4, !dbg !15513
  br label %if.end48, !dbg !15513

if.end48:                                         ; preds = %if.then47, %if.else44
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then43
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.end32
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then13
  %39 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15515
  %40 = load float, float* %ctime, align 4, !dbg !15517
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !15518
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !15519
  %41 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !15520
  %flag = getelementptr inbounds %struct.Curve, %struct.Curve* %41, i32 0, i32 23, !dbg !15521
  %42 = load i32, i32* %flag, align 4, !dbg !15521
  %and53 = and i32 %42, 16, !dbg !15522
  %tobool54 = icmp ne i32 %and53, 0, !dbg !15522
  br i1 %tobool54, label %cond.true, label %cond.false, !dbg !15520

cond.true:                                        ; preds = %if.end51
  %arraydecay55 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !15523
  br label %cond.end, !dbg !15520

cond.false:                                       ; preds = %if.end51
  br label %cond.end, !dbg !15520

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %arraydecay55, %cond.true ], [ null, %cond.false ], !dbg !15520
  %call56 = call i32 @where_on_path(%struct.Object* %39, float %40, float* %arraydecay, float* %arraydecay52, float* %cond, float* %radius, float* null), !dbg !15524
  %tobool57 = icmp ne i32 %call56, 0, !dbg !15524
  br i1 %tobool57, label %if.then58, label %if.end79, !dbg !15525

if.then58:                                        ; preds = %cond.end
  %43 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !15526
  %flag59 = getelementptr inbounds %struct.Curve, %struct.Curve* %43, i32 0, i32 23, !dbg !15529
  %44 = load i32, i32* %flag59, align 4, !dbg !15529
  %and60 = and i32 %44, 16, !dbg !15530
  %tobool61 = icmp ne i32 %and60, 0, !dbg !15530
  br i1 %tobool61, label %if.then62, label %if.end67, !dbg !15531

if.then62:                                        ; preds = %if.then58
  %arraydecay63 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !15532
  %45 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15534
  %trackflag = getelementptr inbounds %struct.Object, %struct.Object* %45, i32 0, i32 57, !dbg !15535
  %46 = load i16, i16* %trackflag, align 4, !dbg !15535
  %47 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15536
  %upflag = getelementptr inbounds %struct.Object, %struct.Object* %47, i32 0, i32 58, !dbg !15537
  %48 = load i16, i16* %upflag, align 2, !dbg !15537
  call void @quat_apply_track(float* %arraydecay63, i16 signext %46, i16 signext %48), !dbg !15538
  %arraydecay64 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !15539
  %call65 = call float @normalize_qt(float* %arraydecay64), !dbg !15540
  %49 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !15541
  %arraydecay66 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !15542
  call void @quat_to_mat4([4 x float]* %49, float* %arraydecay66), !dbg !15543
  br label %if.end67, !dbg !15544

if.end67:                                         ; preds = %if.then62, %if.then58
  %50 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !15545
  %flag68 = getelementptr inbounds %struct.Curve, %struct.Curve* %50, i32 0, i32 23, !dbg !15547
  %51 = load i32, i32* %flag68, align 4, !dbg !15547
  %and69 = and i32 %51, 4096, !dbg !15548
  %tobool70 = icmp ne i32 %and69, 0, !dbg !15548
  br i1 %tobool70, label %if.then71, label %if.end76, !dbg !15549

if.then71:                                        ; preds = %if.end67
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %tmat, metadata !15550, metadata !DIExpression()), !dbg !15552
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %rmat, metadata !15553, metadata !DIExpression()), !dbg !15554
  %arraydecay72 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !15555
  %52 = load float, float* %radius, align 4, !dbg !15556
  call void @scale_m4_fl([4 x float]* %arraydecay72, float %52), !dbg !15557
  %arraydecay73 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %rmat, i64 0, i64 0, !dbg !15558
  %arraydecay74 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !15559
  %53 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !15560
  call void @mul_m4_m4m4([4 x float]* %arraydecay73, [4 x float]* %arraydecay74, [4 x float]* %53), !dbg !15561
  %54 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !15562
  %arraydecay75 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %rmat, i64 0, i64 0, !dbg !15563
  call void @copy_m4_m4([4 x float]* %54, [4 x float]* %arraydecay75), !dbg !15564
  br label %if.end76, !dbg !15565

if.end76:                                         ; preds = %if.then71, %if.end67
  %55 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !15566
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %55, i64 3, !dbg !15566
  %arraydecay77 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !15566
  %arraydecay78 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !15567
  call void @copy_v3_v3(float* %arraydecay77, float* %arraydecay78), !dbg !15568
  br label %if.end79, !dbg !15569

if.end79:                                         ; preds = %if.then11, %if.end76, %cond.end
  ret void, !dbg !15570
}

; Function Attrs: noinline nounwind uwtable
define internal void @ob_parbone(%struct.Object* %ob, %struct.Object* %par, [4 x float]* %mat) #0 !dbg !15571 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %par.addr = alloca %struct.Object*, align 8
  %mat.addr = alloca [4 x float]*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  %vec = alloca [3 x float], align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !15574, metadata !DIExpression()), !dbg !15575
  store %struct.Object* %par, %struct.Object** %par.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %par.addr, metadata !15576, metadata !DIExpression()), !dbg !15577
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !15578, metadata !DIExpression()), !dbg !15579
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !15580, metadata !DIExpression()), !dbg !15581
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !15582, metadata !DIExpression()), !dbg !15583
  %0 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15584
  %type = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 3, !dbg !15586
  %1 = load i16, i16* %type, align 8, !dbg !15586
  %conv = sext i16 %1 to i32, !dbg !15584
  %cmp = icmp ne i32 %conv, 25, !dbg !15587
  br i1 %cmp, label %if.then, label %if.end, !dbg !15588

if.then:                                          ; preds = %entry
  %2 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !15589
  call void @unit_m4([4 x float]* %2), !dbg !15591
  br label %if.end21, !dbg !15592

if.end:                                           ; preds = %entry
  %3 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15593
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 18, !dbg !15594
  %4 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !15594
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15595
  %parsubstr = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 8, !dbg !15596
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %parsubstr, i64 0, i64 0, !dbg !15595
  %call = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %4, i8* %arraydecay), !dbg !15597
  store %struct.bPoseChannel* %call, %struct.bPoseChannel** %pchan, align 8, !dbg !15598
  %6 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !15599
  %tobool = icmp ne %struct.bPoseChannel* %6, null, !dbg !15599
  br i1 %tobool, label %lor.lhs.false, label %if.then3, !dbg !15601

lor.lhs.false:                                    ; preds = %if.end
  %7 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !15602
  %bone = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %7, i32 0, i32 12, !dbg !15603
  %8 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !15603
  %tobool2 = icmp ne %struct.Bone* %8, null, !dbg !15602
  br i1 %tobool2, label %if.end8, label %if.then3, !dbg !15604

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15605
  %id = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 0, !dbg !15607
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !15608
  %arraydecay4 = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !15605
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay4, i64 2, !dbg !15609
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15610
  %parsubstr5 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 8, !dbg !15611
  %arraydecay6 = getelementptr inbounds [64 x i8], [64 x i8]* %parsubstr5, i64 0, i64 0, !dbg !15610
  %call7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.22, i64 0, i64 0), i8* %add.ptr, i8* %arraydecay6), !dbg !15612
  %11 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !15613
  call void @unit_m4([4 x float]* %11), !dbg !15614
  br label %if.end21, !dbg !15615

if.end8:                                          ; preds = %lor.lhs.false
  %12 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !15616
  %bone9 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %12, i32 0, i32 12, !dbg !15618
  %13 = load %struct.Bone*, %struct.Bone** %bone9, align 8, !dbg !15618
  %flag = getelementptr inbounds %struct.Bone, %struct.Bone* %13, i32 0, i32 10, !dbg !15619
  %14 = load i32, i32* %flag, align 8, !dbg !15619
  %and = and i32 %14, 8388608, !dbg !15620
  %tobool10 = icmp ne i32 %and, 0, !dbg !15620
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !15621

if.then11:                                        ; preds = %if.end8
  %15 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !15622
  %16 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !15624
  %chan_mat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %16, i32 0, i32 28, !dbg !15625
  %arraydecay12 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %chan_mat, i64 0, i64 0, !dbg !15624
  call void @copy_m4_m4([4 x float]* %15, [4 x float]* %arraydecay12), !dbg !15626
  br label %if.end21, !dbg !15627

if.else:                                          ; preds = %if.end8
  %17 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !15628
  %18 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !15630
  %pose_mat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %18, i32 0, i32 29, !dbg !15631
  %arraydecay13 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat, i64 0, i64 0, !dbg !15630
  call void @copy_m4_m4([4 x float]* %17, [4 x float]* %arraydecay13), !dbg !15632
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15633
  %19 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !15634
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %19, i64 1, !dbg !15634
  %arraydecay15 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !15634
  call void @copy_v3_v3(float* %arraydecay14, float* %arraydecay15), !dbg !15635
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15636
  %20 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !15637
  %bone17 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %20, i32 0, i32 12, !dbg !15638
  %21 = load %struct.Bone*, %struct.Bone** %bone17, align 8, !dbg !15638
  %length = getelementptr inbounds %struct.Bone, %struct.Bone* %21, i32 0, i32 18, !dbg !15639
  %22 = load float, float* %length, align 4, !dbg !15639
  call void @mul_v3_fl(float* %arraydecay16, float %22), !dbg !15640
  %23 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !15641
  %arrayidx18 = getelementptr inbounds [4 x float], [4 x float]* %23, i64 3, !dbg !15641
  %arraydecay19 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx18, i64 0, i64 0, !dbg !15641
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !15642
  call void @add_v3_v3(float* %arraydecay19, float* %arraydecay20), !dbg !15643
  br label %if.end21

if.end21:                                         ; preds = %if.then, %if.then3, %if.else, %if.then11
  ret void, !dbg !15644
}

; Function Attrs: noinline nounwind uwtable
define internal void @give_parvert(%struct.Object* %par, i32 %nr, float* %vec) #0 !dbg !15645 {
entry:
  %par.addr = alloca %struct.Object*, align 8
  %nr.addr = alloca i32, align 4
  %vec.addr = alloca float*, align 8
  %me = alloca %struct.Mesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %count = alloca i32, align 4
  %numVerts = alloca i32, align 4
  %i = alloca i32, align 4
  %index = alloca i32*, align 8
  %co = alloca [3 x float], align 4
  %co40 = alloca [3 x float], align 4
  %nurb = alloca %struct.ListBase*, align 8
  %cu = alloca %struct.Curve*, align 8
  %latt = alloca %struct.Lattice*, align 8
  %dl = alloca %struct.DispList*, align 8
  %co98 = alloca [3 x float]*, align 8
  %tot = alloca i32, align 4
  store %struct.Object* %par, %struct.Object** %par.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %par.addr, metadata !15648, metadata !DIExpression()), !dbg !15649
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !15650, metadata !DIExpression()), !dbg !15651
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !15652, metadata !DIExpression()), !dbg !15653
  %0 = load float*, float** %vec.addr, align 8, !dbg !15654
  call void @zero_v3(float* %0), !dbg !15655
  %1 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15656
  %type = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 3, !dbg !15658
  %2 = load i16, i16* %type, align 8, !dbg !15658
  %conv = sext i16 %2 to i32, !dbg !15656
  %cmp = icmp eq i32 %conv, 1, !dbg !15659
  br i1 %cmp, label %if.then, label %if.else63, !dbg !15660

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !15661, metadata !DIExpression()), !dbg !15663
  %3 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15664
  %data = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !15665
  %4 = load i8*, i8** %data, align 8, !dbg !15665
  %5 = bitcast i8* %4 to %struct.Mesh*, !dbg !15664
  store %struct.Mesh* %5, %struct.Mesh** %me, align 8, !dbg !15663
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !15666, metadata !DIExpression()), !dbg !15667
  %6 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !15668
  %edit_btmesh = getelementptr inbounds %struct.Mesh, %struct.Mesh* %6, i32 0, i32 20, !dbg !15669
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %edit_btmesh, align 8, !dbg !15669
  store %struct.BMEditMesh* %7, %struct.BMEditMesh** %em, align 8, !dbg !15667
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !15670, metadata !DIExpression()), !dbg !15671
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !15672
  %tobool = icmp ne %struct.BMEditMesh* %8, null, !dbg !15673
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !15673

cond.true:                                        ; preds = %if.then
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !15674
  %derivedFinal = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %9, i32 0, i32 5, !dbg !15675
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal, align 8, !dbg !15675
  br label %cond.end, !dbg !15673

cond.false:                                       ; preds = %if.then
  %11 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15676
  %derivedFinal2 = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 120, !dbg !15677
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %derivedFinal2, align 8, !dbg !15677
  br label %cond.end, !dbg !15673

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.DerivedMesh* [ %10, %cond.true ], [ %12, %cond.false ], !dbg !15673
  store %struct.DerivedMesh* %cond, %struct.DerivedMesh** %dm, align 8, !dbg !15678
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15679
  %tobool3 = icmp ne %struct.DerivedMesh* %13, null, !dbg !15679
  br i1 %tobool3, label %if.then4, label %if.else60, !dbg !15681

if.then4:                                         ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %count, metadata !15682, metadata !DIExpression()), !dbg !15684
  store i32 0, i32* %count, align 4, !dbg !15684
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !15685, metadata !DIExpression()), !dbg !15686
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15687
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %14, i32 0, i32 23, !dbg !15688
  %15 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !15688
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15689
  %call = call i32 %15(%struct.DerivedMesh* %16), !dbg !15687
  store i32 %call, i32* %numVerts, align 4, !dbg !15686
  %17 = load i32, i32* %nr.addr, align 4, !dbg !15690
  %18 = load i32, i32* %numVerts, align 4, !dbg !15692
  %cmp5 = icmp slt i32 %17, %18, !dbg !15693
  br i1 %cmp5, label %if.then7, label %if.end47, !dbg !15694

if.then7:                                         ; preds = %if.then4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15695, metadata !DIExpression()), !dbg !15697
  %19 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !15698
  %tobool8 = icmp ne %struct.BMEditMesh* %19, null, !dbg !15698
  br i1 %tobool8, label %land.lhs.true, label %if.end24, !dbg !15700

land.lhs.true:                                    ; preds = %if.then7
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15701
  %type9 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %20, i32 0, i32 14, !dbg !15702
  %21 = load i32, i32* %type9, align 8, !dbg !15702
  %cmp10 = icmp eq i32 %21, 1, !dbg !15703
  br i1 %cmp10, label %if.then12, label %if.end24, !dbg !15704

if.then12:                                        ; preds = %land.lhs.true
  %22 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !15705
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %22, i32 0, i32 0, !dbg !15708
  %23 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !15708
  %elem_table_dirty = getelementptr inbounds %struct.BMesh, %struct.BMesh* %23, i32 0, i32 8, !dbg !15709
  %24 = load i8, i8* %elem_table_dirty, align 1, !dbg !15709
  %conv13 = zext i8 %24 to i32, !dbg !15705
  %and = and i32 %conv13, 1, !dbg !15710
  %tobool14 = icmp ne i32 %and, 0, !dbg !15710
  br i1 %tobool14, label %if.then15, label %if.end23, !dbg !15711

if.then15:                                        ; preds = %if.then12
  call void @BLI_mutex_lock(i32* @vparent_lock), !dbg !15712
  %25 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !15714
  %bm16 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %25, i32 0, i32 0, !dbg !15716
  %26 = load %struct.BMesh*, %struct.BMesh** %bm16, align 8, !dbg !15716
  %elem_table_dirty17 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %26, i32 0, i32 8, !dbg !15717
  %27 = load i8, i8* %elem_table_dirty17, align 1, !dbg !15717
  %conv18 = zext i8 %27 to i32, !dbg !15714
  %and19 = and i32 %conv18, 1, !dbg !15718
  %tobool20 = icmp ne i32 %and19, 0, !dbg !15718
  br i1 %tobool20, label %if.then21, label %if.end, !dbg !15719

if.then21:                                        ; preds = %if.then15
  %28 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !15720
  %bm22 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %28, i32 0, i32 0, !dbg !15722
  %29 = load %struct.BMesh*, %struct.BMesh** %bm22, align 8, !dbg !15722
  call void @BM_mesh_elem_table_ensure(%struct.BMesh* %29, i8 zeroext 1), !dbg !15723
  br label %if.end, !dbg !15724

if.end:                                           ; preds = %if.then21, %if.then15
  call void @BLI_mutex_unlock(i32* @vparent_lock), !dbg !15725
  br label %if.end23, !dbg !15726

if.end23:                                         ; preds = %if.end, %if.then12
  br label %if.end24, !dbg !15727

if.end24:                                         ; preds = %if.end23, %land.lhs.true, %if.then7
  %30 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15728
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %30, i32 0, i32 0, !dbg !15730
  %call25 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %vertData, i32 7), !dbg !15731
  %tobool26 = icmp ne i8 %call25, 0, !dbg !15731
  br i1 %tobool26, label %if.then27, label %if.else, !dbg !15732

if.then27:                                        ; preds = %if.end24
  store i32 0, i32* %i, align 4, !dbg !15733
  br label %for.cond, !dbg !15736

for.cond:                                         ; preds = %for.inc, %if.then27
  %31 = load i32, i32* %i, align 4, !dbg !15737
  %32 = load i32, i32* %numVerts, align 4, !dbg !15739
  %cmp28 = icmp slt i32 %31, %32, !dbg !15740
  br i1 %cmp28, label %for.body, label %for.end, !dbg !15741

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32** %index, metadata !15742, metadata !DIExpression()), !dbg !15744
  %33 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15745
  %getVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %33, i32 0, i32 46, !dbg !15746
  %34 = load i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)** %getVertData, align 8, !dbg !15746
  %35 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15747
  %36 = load i32, i32* %i, align 4, !dbg !15748
  %call30 = call i8* %34(%struct.DerivedMesh* %35, i32 %36, i32 7), !dbg !15745
  %37 = bitcast i8* %call30 to i32*, !dbg !15745
  store i32* %37, i32** %index, align 8, !dbg !15744
  %38 = load i32*, i32** %index, align 8, !dbg !15749
  %39 = load i32, i32* %38, align 4, !dbg !15751
  %40 = load i32, i32* %nr.addr, align 4, !dbg !15752
  %cmp31 = icmp eq i32 %39, %40, !dbg !15753
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !15754

if.then33:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata [3 x float]* %co, metadata !15755, metadata !DIExpression()), !dbg !15757
  %41 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15758
  %getVertCo = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %41, i32 0, i32 76, !dbg !15759
  %42 = load void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)** %getVertCo, align 8, !dbg !15759
  %43 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15760
  %44 = load i32, i32* %i, align 4, !dbg !15761
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !15762
  call void %42(%struct.DerivedMesh* %43, i32 %44, float* %arraydecay), !dbg !15758
  %45 = load float*, float** %vec.addr, align 8, !dbg !15763
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !15764
  call void @add_v3_v3(float* %45, float* %arraydecay34), !dbg !15765
  %46 = load i32, i32* %count, align 4, !dbg !15766
  %inc = add nsw i32 %46, 1, !dbg !15766
  store i32 %inc, i32* %count, align 4, !dbg !15766
  br label %if.end35, !dbg !15767

if.end35:                                         ; preds = %if.then33, %for.body
  br label %for.inc, !dbg !15768

for.inc:                                          ; preds = %if.end35
  %47 = load i32, i32* %i, align 4, !dbg !15769
  %inc36 = add nsw i32 %47, 1, !dbg !15769
  store i32 %inc36, i32* %i, align 4, !dbg !15769
  br label %for.cond, !dbg !15770, !llvm.loop !15771

for.end:                                          ; preds = %for.cond
  br label %if.end46, !dbg !15773

if.else:                                          ; preds = %if.end24
  %48 = load i32, i32* %nr.addr, align 4, !dbg !15774
  %49 = load i32, i32* %numVerts, align 4, !dbg !15777
  %cmp37 = icmp slt i32 %48, %49, !dbg !15778
  br i1 %cmp37, label %if.then39, label %if.end45, !dbg !15779

if.then39:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata [3 x float]* %co40, metadata !15780, metadata !DIExpression()), !dbg !15782
  %50 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15783
  %getVertCo41 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %50, i32 0, i32 76, !dbg !15784
  %51 = load void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)** %getVertCo41, align 8, !dbg !15784
  %52 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15785
  %53 = load i32, i32* %nr.addr, align 4, !dbg !15786
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %co40, i64 0, i64 0, !dbg !15787
  call void %51(%struct.DerivedMesh* %52, i32 %53, float* %arraydecay42), !dbg !15783
  %54 = load float*, float** %vec.addr, align 8, !dbg !15788
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %co40, i64 0, i64 0, !dbg !15789
  call void @add_v3_v3(float* %54, float* %arraydecay43), !dbg !15790
  %55 = load i32, i32* %count, align 4, !dbg !15791
  %inc44 = add nsw i32 %55, 1, !dbg !15791
  store i32 %inc44, i32* %count, align 4, !dbg !15791
  br label %if.end45, !dbg !15792

if.end45:                                         ; preds = %if.then39, %if.else
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %for.end
  br label %if.end47, !dbg !15793

if.end47:                                         ; preds = %if.end46, %if.then4
  %56 = load i32, i32* %count, align 4, !dbg !15794
  %cmp48 = icmp eq i32 %56, 0, !dbg !15796
  br i1 %cmp48, label %if.then50, label %if.else51, !dbg !15797

if.then50:                                        ; preds = %if.end47
  br label %if.end59, !dbg !15798

if.else51:                                        ; preds = %if.end47
  %57 = load i32, i32* %count, align 4, !dbg !15800
  %cmp52 = icmp sgt i32 %57, 0, !dbg !15802
  br i1 %cmp52, label %if.then54, label %if.else56, !dbg !15803

if.then54:                                        ; preds = %if.else51
  %58 = load float*, float** %vec.addr, align 8, !dbg !15804
  %59 = load i32, i32* %count, align 4, !dbg !15806
  %conv55 = sitofp i32 %59 to float, !dbg !15806
  %div = fdiv float 1.000000e+00, %conv55, !dbg !15807
  call void @mul_v3_fl(float* %58, float %div), !dbg !15808
  br label %if.end58, !dbg !15809

if.else56:                                        ; preds = %if.else51
  %60 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15810
  %getVertCo57 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %60, i32 0, i32 76, !dbg !15812
  %61 = load void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)** %getVertCo57, align 8, !dbg !15812
  %62 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15813
  %63 = load float*, float** %vec.addr, align 8, !dbg !15814
  call void %61(%struct.DerivedMesh* %62, i32 0, float* %63), !dbg !15810
  br label %if.end58

if.end58:                                         ; preds = %if.else56, %if.then54
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.then50
  br label %if.end62, !dbg !15815

if.else60:                                        ; preds = %cond.end
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !15816
  %call61 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %64, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.give_parvert, i64 0, i64 0)), !dbg !15818
  br label %if.end62

if.end62:                                         ; preds = %if.else60, %if.end59
  br label %if.end128, !dbg !15819

if.else63:                                        ; preds = %entry
  %65 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15820
  %type64 = getelementptr inbounds %struct.Object, %struct.Object* %65, i32 0, i32 3, !dbg !15820
  %66 = load i16, i16* %type64, align 8, !dbg !15820
  %conv65 = sext i16 %66 to i32, !dbg !15820
  %cmp66 = icmp eq i32 %conv65, 2, !dbg !15820
  br i1 %cmp66, label %if.then72, label %lor.lhs.false, !dbg !15820

lor.lhs.false:                                    ; preds = %if.else63
  %67 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15820
  %type68 = getelementptr inbounds %struct.Object, %struct.Object* %67, i32 0, i32 3, !dbg !15820
  %68 = load i16, i16* %type68, align 8, !dbg !15820
  %conv69 = sext i16 %68 to i32, !dbg !15820
  %cmp70 = icmp eq i32 %conv69, 3, !dbg !15820
  br i1 %cmp70, label %if.then72, label %if.else83, !dbg !15822

if.then72:                                        ; preds = %lor.lhs.false, %if.else63
  call void @llvm.dbg.declare(metadata %struct.ListBase** %nurb, metadata !15823, metadata !DIExpression()), !dbg !15825
  %69 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15826
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %69, i32 0, i32 118, !dbg !15828
  %70 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !15828
  %deformed_nurbs = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %70, i32 0, i32 2, !dbg !15829
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %deformed_nurbs, i32 0, i32 0, !dbg !15830
  %71 = load i8*, i8** %first, align 8, !dbg !15830
  %cmp73 = icmp ne i8* %71, null, !dbg !15831
  br i1 %cmp73, label %if.then75, label %if.else78, !dbg !15832

if.then75:                                        ; preds = %if.then72
  %72 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15833
  %curve_cache76 = getelementptr inbounds %struct.Object, %struct.Object* %72, i32 0, i32 118, !dbg !15835
  %73 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache76, align 8, !dbg !15835
  %deformed_nurbs77 = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %73, i32 0, i32 2, !dbg !15836
  store %struct.ListBase* %deformed_nurbs77, %struct.ListBase** %nurb, align 8, !dbg !15837
  br label %if.end81, !dbg !15838

if.else78:                                        ; preds = %if.then72
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !15839, metadata !DIExpression()), !dbg !15841
  %74 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15842
  %data79 = getelementptr inbounds %struct.Object, %struct.Object* %74, i32 0, i32 19, !dbg !15843
  %75 = load i8*, i8** %data79, align 8, !dbg !15843
  %76 = bitcast i8* %75 to %struct.Curve*, !dbg !15842
  store %struct.Curve* %76, %struct.Curve** %cu, align 8, !dbg !15841
  %77 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !15844
  %call80 = call %struct.ListBase* @BKE_curve_nurbs_get(%struct.Curve* %77), !dbg !15845
  store %struct.ListBase* %call80, %struct.ListBase** %nurb, align 8, !dbg !15846
  br label %if.end81

if.end81:                                         ; preds = %if.else78, %if.then75
  %78 = load %struct.ListBase*, %struct.ListBase** %nurb, align 8, !dbg !15847
  %79 = load i32, i32* %nr.addr, align 4, !dbg !15848
  %80 = load float*, float** %vec.addr, align 8, !dbg !15849
  %call82 = call zeroext i8 @BKE_nurbList_index_get_co(%struct.ListBase* %78, i32 %79, float* %80), !dbg !15850
  br label %if.end127, !dbg !15851

if.else83:                                        ; preds = %lor.lhs.false
  %81 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15852
  %type84 = getelementptr inbounds %struct.Object, %struct.Object* %81, i32 0, i32 3, !dbg !15854
  %82 = load i16, i16* %type84, align 8, !dbg !15854
  %conv85 = sext i16 %82 to i32, !dbg !15852
  %cmp86 = icmp eq i32 %conv85, 22, !dbg !15855
  br i1 %cmp86, label %if.then88, label %if.end126, !dbg !15856

if.then88:                                        ; preds = %if.else83
  call void @llvm.dbg.declare(metadata %struct.Lattice** %latt, metadata !15857, metadata !DIExpression()), !dbg !15859
  %83 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15860
  %data89 = getelementptr inbounds %struct.Object, %struct.Object* %83, i32 0, i32 19, !dbg !15861
  %84 = load i8*, i8** %data89, align 8, !dbg !15861
  %85 = bitcast i8* %84 to %struct.Lattice*, !dbg !15860
  store %struct.Lattice* %85, %struct.Lattice** %latt, align 8, !dbg !15859
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !15862, metadata !DIExpression()), !dbg !15863
  %86 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15864
  %curve_cache90 = getelementptr inbounds %struct.Object, %struct.Object* %86, i32 0, i32 118, !dbg !15865
  %87 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache90, align 8, !dbg !15865
  %tobool91 = icmp ne %struct.CurveCache* %87, null, !dbg !15864
  br i1 %tobool91, label %cond.true92, label %cond.false95, !dbg !15864

cond.true92:                                      ; preds = %if.then88
  %88 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15866
  %curve_cache93 = getelementptr inbounds %struct.Object, %struct.Object* %88, i32 0, i32 118, !dbg !15867
  %89 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache93, align 8, !dbg !15867
  %disp = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %89, i32 0, i32 0, !dbg !15868
  %call94 = call %struct.DispList* @BKE_displist_find(%struct.ListBase* %disp, i32 7), !dbg !15869
  br label %cond.end96, !dbg !15864

cond.false95:                                     ; preds = %if.then88
  br label %cond.end96, !dbg !15864

cond.end96:                                       ; preds = %cond.false95, %cond.true92
  %cond97 = phi %struct.DispList* [ %call94, %cond.true92 ], [ null, %cond.false95 ], !dbg !15864
  store %struct.DispList* %cond97, %struct.DispList** %dl, align 8, !dbg !15863
  call void @llvm.dbg.declare(metadata [3 x float]** %co98, metadata !15870, metadata !DIExpression()), !dbg !15871
  %90 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !15872
  %tobool99 = icmp ne %struct.DispList* %90, null, !dbg !15872
  br i1 %tobool99, label %cond.true100, label %cond.false101, !dbg !15872

cond.true100:                                     ; preds = %cond.end96
  %91 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !15873
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %91, i32 0, i32 8, !dbg !15874
  %92 = load float*, float** %verts, align 8, !dbg !15874
  %93 = bitcast float* %92 to [3 x float]*, !dbg !15875
  br label %cond.end102, !dbg !15872

cond.false101:                                    ; preds = %cond.end96
  br label %cond.end102, !dbg !15872

cond.end102:                                      ; preds = %cond.false101, %cond.true100
  %cond103 = phi [3 x float]* [ %93, %cond.true100 ], [ null, %cond.false101 ], !dbg !15872
  store [3 x float]* %cond103, [3 x float]** %co98, align 8, !dbg !15871
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !15876, metadata !DIExpression()), !dbg !15877
  %94 = load %struct.Lattice*, %struct.Lattice** %latt, align 8, !dbg !15878
  %editlatt = getelementptr inbounds %struct.Lattice, %struct.Lattice* %94, i32 0, i32 26, !dbg !15880
  %95 = load %struct.EditLatt*, %struct.EditLatt** %editlatt, align 8, !dbg !15880
  %tobool104 = icmp ne %struct.EditLatt* %95, null, !dbg !15878
  br i1 %tobool104, label %if.then105, label %if.end108, !dbg !15881

if.then105:                                       ; preds = %cond.end102
  %96 = load %struct.Lattice*, %struct.Lattice** %latt, align 8, !dbg !15882
  %editlatt106 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %96, i32 0, i32 26, !dbg !15883
  %97 = load %struct.EditLatt*, %struct.EditLatt** %editlatt106, align 8, !dbg !15883
  %latt107 = getelementptr inbounds %struct.EditLatt, %struct.EditLatt* %97, i32 0, i32 0, !dbg !15884
  %98 = load %struct.Lattice*, %struct.Lattice** %latt107, align 8, !dbg !15884
  store %struct.Lattice* %98, %struct.Lattice** %latt, align 8, !dbg !15885
  br label %if.end108, !dbg !15886

if.end108:                                        ; preds = %if.then105, %cond.end102
  %99 = load %struct.Lattice*, %struct.Lattice** %latt, align 8, !dbg !15887
  %pntsu = getelementptr inbounds %struct.Lattice, %struct.Lattice* %99, i32 0, i32 2, !dbg !15888
  %100 = load i16, i16* %pntsu, align 8, !dbg !15888
  %conv109 = sext i16 %100 to i32, !dbg !15887
  %101 = load %struct.Lattice*, %struct.Lattice** %latt, align 8, !dbg !15889
  %pntsv = getelementptr inbounds %struct.Lattice, %struct.Lattice* %101, i32 0, i32 3, !dbg !15890
  %102 = load i16, i16* %pntsv, align 2, !dbg !15890
  %conv110 = sext i16 %102 to i32, !dbg !15889
  %mul = mul nsw i32 %conv109, %conv110, !dbg !15891
  %103 = load %struct.Lattice*, %struct.Lattice** %latt, align 8, !dbg !15892
  %pntsw = getelementptr inbounds %struct.Lattice, %struct.Lattice* %103, i32 0, i32 4, !dbg !15893
  %104 = load i16, i16* %pntsw, align 4, !dbg !15893
  %conv111 = sext i16 %104 to i32, !dbg !15892
  %mul112 = mul nsw i32 %mul, %conv111, !dbg !15894
  store i32 %mul112, i32* %tot, align 4, !dbg !15895
  %105 = load i32, i32* %nr.addr, align 4, !dbg !15896
  %106 = load i32, i32* %tot, align 4, !dbg !15898
  %cmp113 = icmp slt i32 %105, %106, !dbg !15899
  br i1 %cmp113, label %if.then115, label %if.end125, !dbg !15900

if.then115:                                       ; preds = %if.end108
  %107 = load [3 x float]*, [3 x float]** %co98, align 8, !dbg !15901
  %tobool116 = icmp ne [3 x float]* %107, null, !dbg !15901
  br i1 %tobool116, label %if.then117, label %if.else119, !dbg !15904

if.then117:                                       ; preds = %if.then115
  %108 = load float*, float** %vec.addr, align 8, !dbg !15905
  %109 = load [3 x float]*, [3 x float]** %co98, align 8, !dbg !15907
  %110 = load i32, i32* %nr.addr, align 4, !dbg !15908
  %idxprom = sext i32 %110 to i64, !dbg !15907
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %109, i64 %idxprom, !dbg !15907
  %arraydecay118 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !15907
  call void @copy_v3_v3(float* %108, float* %arraydecay118), !dbg !15909
  br label %if.end124, !dbg !15910

if.else119:                                       ; preds = %if.then115
  %111 = load float*, float** %vec.addr, align 8, !dbg !15911
  %112 = load %struct.Lattice*, %struct.Lattice** %latt, align 8, !dbg !15913
  %def = getelementptr inbounds %struct.Lattice, %struct.Lattice* %112, i32 0, i32 21, !dbg !15914
  %113 = load %struct.BPoint*, %struct.BPoint** %def, align 8, !dbg !15914
  %114 = load i32, i32* %nr.addr, align 4, !dbg !15915
  %idxprom120 = sext i32 %114 to i64, !dbg !15913
  %arrayidx121 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %113, i64 %idxprom120, !dbg !15913
  %vec122 = getelementptr inbounds %struct.BPoint, %struct.BPoint* %arrayidx121, i32 0, i32 0, !dbg !15916
  %arraydecay123 = getelementptr inbounds [4 x float], [4 x float]* %vec122, i64 0, i64 0, !dbg !15913
  call void @copy_v3_v3(float* %111, float* %arraydecay123), !dbg !15917
  br label %if.end124

if.end124:                                        ; preds = %if.else119, %if.then117
  br label %if.end125, !dbg !15918

if.end125:                                        ; preds = %if.end124, %if.end108
  br label %if.end126, !dbg !15919

if.end126:                                        ; preds = %if.end125, %if.else83
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.end81
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.end62
  ret void, !dbg !15920
}

; Function Attrs: noinline nounwind uwtable
define internal void @ob_parvert3(%struct.Object* %ob, %struct.Object* %par, [4 x float]* %mat) #0 !dbg !15921 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %par.addr = alloca %struct.Object*, align 8
  %mat.addr = alloca [4 x float]*, align 8
  %cmat = alloca [3 x [3 x float]], align 16
  %v1 = alloca [3 x float], align 4
  %v2 = alloca [3 x float], align 4
  %v3 = alloca [3 x float], align 4
  %q = alloca [4 x float], align 16
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !15922, metadata !DIExpression()), !dbg !15923
  store %struct.Object* %par, %struct.Object** %par.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %par.addr, metadata !15924, metadata !DIExpression()), !dbg !15925
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !15926, metadata !DIExpression()), !dbg !15927
  %0 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15928
  %type = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 3, !dbg !15928
  %1 = load i16, i16* %type, align 8, !dbg !15928
  %conv = sext i16 %1 to i32, !dbg !15928
  %cmp = icmp eq i32 %conv, 1, !dbg !15928
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !15928

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15928
  %type2 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 3, !dbg !15928
  %3 = load i16, i16* %type2, align 8, !dbg !15928
  %conv3 = sext i16 %3 to i32, !dbg !15928
  %cmp4 = icmp eq i32 %conv3, 3, !dbg !15928
  br i1 %cmp4, label %if.then, label %lor.lhs.false6, !dbg !15928

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %4 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15928
  %type7 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 3, !dbg !15928
  %5 = load i16, i16* %type7, align 8, !dbg !15928
  %conv8 = sext i16 %5 to i32, !dbg !15928
  %cmp9 = icmp eq i32 %conv8, 2, !dbg !15928
  br i1 %cmp9, label %if.then, label %lor.lhs.false11, !dbg !15928

lor.lhs.false11:                                  ; preds = %lor.lhs.false6
  %6 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15928
  %type12 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 3, !dbg !15928
  %7 = load i16, i16* %type12, align 8, !dbg !15928
  %conv13 = sext i16 %7 to i32, !dbg !15928
  %cmp14 = icmp eq i32 %conv13, 22, !dbg !15928
  br i1 %cmp14, label %if.then, label %if.else, !dbg !15930

if.then:                                          ; preds = %lor.lhs.false11, %lor.lhs.false6, %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %cmat, metadata !15931, metadata !DIExpression()), !dbg !15933
  call void @llvm.dbg.declare(metadata [3 x float]* %v1, metadata !15934, metadata !DIExpression()), !dbg !15935
  call void @llvm.dbg.declare(metadata [3 x float]* %v2, metadata !15936, metadata !DIExpression()), !dbg !15937
  call void @llvm.dbg.declare(metadata [3 x float]* %v3, metadata !15938, metadata !DIExpression()), !dbg !15939
  call void @llvm.dbg.declare(metadata [4 x float]* %q, metadata !15940, metadata !DIExpression()), !dbg !15941
  %8 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15942
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15943
  %par1 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 5, !dbg !15944
  %10 = load i32, i32* %par1, align 4, !dbg !15944
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !15945
  call void @give_parvert(%struct.Object* %8, i32 %10, float* %arraydecay), !dbg !15946
  %11 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15947
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15948
  %par2 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 6, !dbg !15949
  %13 = load i32, i32* %par2, align 8, !dbg !15949
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !15950
  call void @give_parvert(%struct.Object* %11, i32 %13, float* %arraydecay16), !dbg !15951
  %14 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !15952
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !15953
  %par3 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 7, !dbg !15954
  %16 = load i32, i32* %par3, align 4, !dbg !15954
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !15955
  call void @give_parvert(%struct.Object* %14, i32 %16, float* %arraydecay17), !dbg !15956
  %arraydecay18 = getelementptr inbounds [4 x float], [4 x float]* %q, i64 0, i64 0, !dbg !15957
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !15958
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !15959
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !15960
  %call = call float @tri_to_quat(float* %arraydecay18, float* %arraydecay19, float* %arraydecay20, float* %arraydecay21), !dbg !15961
  %arraydecay22 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %cmat, i64 0, i64 0, !dbg !15962
  %arraydecay23 = getelementptr inbounds [4 x float], [4 x float]* %q, i64 0, i64 0, !dbg !15963
  call void @quat_to_mat3([3 x float]* %arraydecay22, float* %arraydecay23), !dbg !15964
  %17 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !15965
  %arraydecay24 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %cmat, i64 0, i64 0, !dbg !15966
  call void @copy_m4_m3([4 x float]* %17, [3 x float]* %arraydecay24), !dbg !15967
  %18 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !15968
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %18, i64 3, !dbg !15968
  %arraydecay25 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !15968
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !15969
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !15970
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !15971
  call void @mid_v3_v3v3v3(float* %arraydecay25, float* %arraydecay26, float* %arraydecay27, float* %arraydecay28), !dbg !15972
  br label %if.end, !dbg !15973

if.else:                                          ; preds = %lor.lhs.false11
  %19 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !15974
  call void @unit_m4([4 x float]* %19), !dbg !15976
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !15977
}

declare dso_local i32 @where_on_path(%struct.Object*, float, float*, float*, float*, float*, float*) #3

declare dso_local void @quat_apply_track(float*, i16 signext, i16 signext) #3

declare dso_local float @normalize_qt(float*) #3

declare dso_local void @quat_to_mat4([4 x float]*, float*) #3

declare dso_local void @BLI_mutex_lock(i32*) #3

declare dso_local void @BM_mesh_elem_table_ensure(%struct.BMesh*, i8 zeroext) #3

declare dso_local void @BLI_mutex_unlock(i32*) #3

declare dso_local zeroext i8 @CustomData_has_layer(%struct.CustomData*, i32) #3

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local %struct.ListBase* @BKE_curve_nurbs_get(%struct.Curve*) #3

declare dso_local zeroext i8 @BKE_nurbList_index_get_co(%struct.ListBase*, i32, float*) #3

declare dso_local %struct.DispList* @BKE_displist_find(%struct.ListBase*, i32) #3

declare dso_local float @tri_to_quat(float*, float*, float*, float*) #3

declare dso_local void @mid_v3_v3v3v3(float*, float*, float*, float*) #3

declare dso_local %struct.Key* @BKE_key_add(%struct.ID*) #3

declare dso_local %struct.KeyBlock* @BKE_keyblock_add_ctime(%struct.Key*, i8*, i8 zeroext) #3

declare dso_local void @BKE_key_convert_from_mesh(%struct.Mesh*, %struct.KeyBlock*) #3

declare dso_local float* @BKE_key_evaluate_object(%struct.Scene*, %struct.Object*, i32*) #3

declare dso_local void @BKE_key_convert_from_curve(%struct.Curve*, %struct.KeyBlock*, %struct.ListBase*) #3

declare dso_local void @BKE_key_convert_from_lattice(%struct.Lattice*, %struct.KeyBlock*) #3

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!5279, !5280, !5281}
!llvm.ident = !{!5282}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "enable_cu_speed", scope: !2, file: !3, line: 2025, type: !73, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !591, globals: !5272, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/blenkernel/intern/object.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !12, !17, !21, !27, !33, !44, !50, !56, !64, !71, !86, !95, !107, !113, !127, !180, !184, !190, !203, !228, !239, !245, !258, !268, !284, !293, !303, !311, !337, !342, !348, !359, !374, !381, !407, !412, !421, !433, !437, !443, !487, !492, !502, !534, !543, !546, !552, !561, !579, !586}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DerivedMeshType", file: !6, line: 128, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_DerivedMesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "DM_TYPE_CDDM", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "DM_TYPE_EDITBMESH", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "DM_TYPE_CCGDM", value: 2, isUnsigned: true)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDirtyFlag", file: !6, line: 164, baseType: !7, size: 32, elements: !13)
!13 = !{!14, !15, !16}
!14 = !DIEnumerator(name: "DM_DIRTY_TESS_CDLAYERS", value: 1, isUnsigned: true)
!15 = !DIEnumerator(name: "DM_DIRTY_MCOL_UPDATE_DRAW", value: 2, isUnsigned: true)
!16 = !DIEnumerator(name: "DM_DIRTY_NORMALS", value: 4, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMForeachFlag", file: !6, line: 159, baseType: !7, size: 32, elements: !18)
!18 = !{!19, !20}
!19 = !DIEnumerator(name: "DM_FOREACH_NOP", value: 0, isUnsigned: true)
!20 = !DIEnumerator(name: "DM_FOREACH_USE_NORMAL", value: 1, isUnsigned: true)
!21 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawOption", file: !6, line: 134, baseType: !7, size: 32, elements: !22)
!22 = !{!23, !24, !25, !26}
!23 = !DIEnumerator(name: "DM_DRAW_OPTION_SKIP", value: 0, isUnsigned: true)
!24 = !DIEnumerator(name: "DM_DRAW_OPTION_NORMAL", value: 1, isUnsigned: true)
!25 = !DIEnumerator(name: "DM_DRAW_OPTION_NO_MCOL", value: 2, isUnsigned: true)
!26 = !DIEnumerator(name: "DM_DRAW_OPTION_STIPPLE", value: 3, isUnsigned: true)
!27 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawFlag", file: !6, line: 152, baseType: !7, size: 32, elements: !28)
!28 = !{!29, !30, !31, !32}
!29 = !DIEnumerator(name: "DM_DRAW_USE_COLORS", value: 1, isUnsigned: true)
!30 = !DIEnumerator(name: "DM_DRAW_ALWAYS_SMOOTH", value: 2, isUnsigned: true)
!31 = !DIEnumerator(name: "DM_DRAW_USE_ACTIVE_UV", value: 4, isUnsigned: true)
!32 = !DIEnumerator(name: "DM_DRAW_USE_TEXPAINT_UV", value: 8, isUnsigned: true)
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotType", file: !34, line: 94, baseType: !7, size: 32, elements: !35)
!34 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_operator_api.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!35 = !{!36, !37, !38, !39, !40, !41, !42, !43}
!36 = !DIEnumerator(name: "BMO_OP_SLOT_BOOL", value: 1, isUnsigned: true)
!37 = !DIEnumerator(name: "BMO_OP_SLOT_INT", value: 2, isUnsigned: true)
!38 = !DIEnumerator(name: "BMO_OP_SLOT_FLT", value: 3, isUnsigned: true)
!39 = !DIEnumerator(name: "BMO_OP_SLOT_PTR", value: 4, isUnsigned: true)
!40 = !DIEnumerator(name: "BMO_OP_SLOT_MAT", value: 5, isUnsigned: true)
!41 = !DIEnumerator(name: "BMO_OP_SLOT_VEC", value: 8, isUnsigned: true)
!42 = !DIEnumerator(name: "BMO_OP_SLOT_ELEMENT_BUF", value: 9, isUnsigned: true)
!43 = !DIEnumerator(name: "BMO_OP_SLOT_MAPPING", value: 10, isUnsigned: true)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Elem", file: !34, line: 116, baseType: !7, size: 32, elements: !45)
!45 = !{!46, !47, !48, !49}
!46 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_VERT", value: 1, isUnsigned: true)
!47 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_EDGE", value: 2, isUnsigned: true)
!48 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_FACE", value: 8, isUnsigned: true)
!49 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_IS_SINGLE", value: 16, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Ptr", file: !34, line: 131, baseType: !7, size: 32, elements: !51)
!51 = !{!52, !53, !54, !55}
!52 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_BMESH", value: 100, isUnsigned: true)
!53 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_SCENE", value: 101, isUnsigned: true)
!54 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_OBJECT", value: 102, isUnsigned: true)
!55 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_MESH", value: 103, isUnsigned: true)
!56 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Map", file: !34, line: 123, baseType: !7, size: 32, elements: !57)
!57 = !{!58, !59, !60, !61, !62, !63}
!58 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_EMPTY", value: 64, isUnsigned: true)
!59 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_ELEM", value: 65, isUnsigned: true)
!60 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_FLT", value: 66, isUnsigned: true)
!61 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INT", value: 67, isUnsigned: true)
!62 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_BOOL", value: 68, isUnsigned: true)
!63 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INTERNAL", value: 69, isUnsigned: true)
!64 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !34, line: 182, baseType: !7, size: 32, elements: !65)
!65 = !{!66, !67, !68, !69, !70}
!66 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NOP", value: 0, isUnsigned: true)
!67 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_UNTAN_MULTIRES", value: 1, isUnsigned: true)
!68 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NORMALS_CALC", value: 2, isUnsigned: true)
!69 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_FLUSH", value: 4, isUnsigned: true)
!70 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_VALIDATE", value: 8, isUnsigned: true)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eRotationModes", file: !72, line: 306, baseType: !73, size: 32, elements: !74)
!72 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!73 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!74 = !{!75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85}
!75 = !DIEnumerator(name: "ROT_MODE_QUAT", value: 0)
!76 = !DIEnumerator(name: "ROT_MODE_EUL", value: 1)
!77 = !DIEnumerator(name: "ROT_MODE_XYZ", value: 1)
!78 = !DIEnumerator(name: "ROT_MODE_XZY", value: 2)
!79 = !DIEnumerator(name: "ROT_MODE_YXZ", value: 3)
!80 = !DIEnumerator(name: "ROT_MODE_YZX", value: 4)
!81 = !DIEnumerator(name: "ROT_MODE_ZXY", value: 5)
!82 = !DIEnumerator(name: "ROT_MODE_ZYX", value: 6)
!83 = !DIEnumerator(name: "ROT_MODE_AXISANGLE", value: -1)
!84 = !DIEnumerator(name: "ROT_MODE_MIN", value: -1)
!85 = !DIEnumerator(name: "ROT_MODE_MAX", value: 6)
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !87, line: 47, baseType: !7, size: 32, elements: !88)
!87 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_modifier.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!88 = !{!89, !90, !91, !92, !93, !94}
!89 = !DIEnumerator(name: "eModifierTypeType_None", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "eModifierTypeType_OnlyDeform", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "eModifierTypeType_Constructive", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "eModifierTypeType_Nonconstructive", value: 3, isUnsigned: true)
!93 = !DIEnumerator(name: "eModifierTypeType_DeformOrConstruct", value: 4, isUnsigned: true)
!94 = !DIEnumerator(name: "eModifierTypeType_NonGeometrical", value: 5, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !87, line: 73, baseType: !7, size: 32, elements: !96)
!96 = !{!97, !98, !99, !100, !101, !102, !103, !104, !105, !106}
!97 = !DIEnumerator(name: "eModifierTypeFlag_AcceptsMesh", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "eModifierTypeFlag_AcceptsCVs", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "eModifierTypeFlag_SupportsMapping", value: 4, isUnsigned: true)
!100 = !DIEnumerator(name: "eModifierTypeFlag_SupportsEditmode", value: 8, isUnsigned: true)
!101 = !DIEnumerator(name: "eModifierTypeFlag_EnableInEditmode", value: 16, isUnsigned: true)
!102 = !DIEnumerator(name: "eModifierTypeFlag_RequiresOriginalData", value: 32, isUnsigned: true)
!103 = !DIEnumerator(name: "eModifierTypeFlag_UsesPointCache", value: 64, isUnsigned: true)
!104 = !DIEnumerator(name: "eModifierTypeFlag_Single", value: 128, isUnsigned: true)
!105 = !DIEnumerator(name: "eModifierTypeFlag_NoUserAdd", value: 256, isUnsigned: true)
!106 = !DIEnumerator(name: "eModifierTypeFlag_UsesPreview", value: 512, isUnsigned: true)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierApplyFlag", file: !87, line: 110, baseType: !7, size: 32, elements: !108)
!108 = !{!109, !110, !111, !112}
!109 = !DIEnumerator(name: "MOD_APPLY_RENDER", value: 1, isUnsigned: true)
!110 = !DIEnumerator(name: "MOD_APPLY_USECACHE", value: 2, isUnsigned: true)
!111 = !DIEnumerator(name: "MOD_APPLY_ORCO", value: 4, isUnsigned: true)
!112 = !DIEnumerator(name: "MOD_APPLY_IGNORE_SIMPLIFY", value: 8, isUnsigned: true)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !114, line: 339, baseType: !7, size: 32, elements: !115)
!114 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!115 = !{!116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126}
!116 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!117 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!118 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!119 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!120 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!121 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!122 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!123 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!124 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!125 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!126 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!127 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierType", file: !128, line: 35, baseType: !7, size: 32, elements: !129)
!128 = !DIFile(filename: "blender/source/blender/makesdna/DNA_modifier_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!129 = !{!130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179}
!130 = !DIEnumerator(name: "eModifierType_None", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "eModifierType_Subsurf", value: 1, isUnsigned: true)
!132 = !DIEnumerator(name: "eModifierType_Lattice", value: 2, isUnsigned: true)
!133 = !DIEnumerator(name: "eModifierType_Curve", value: 3, isUnsigned: true)
!134 = !DIEnumerator(name: "eModifierType_Build", value: 4, isUnsigned: true)
!135 = !DIEnumerator(name: "eModifierType_Mirror", value: 5, isUnsigned: true)
!136 = !DIEnumerator(name: "eModifierType_Decimate", value: 6, isUnsigned: true)
!137 = !DIEnumerator(name: "eModifierType_Wave", value: 7, isUnsigned: true)
!138 = !DIEnumerator(name: "eModifierType_Armature", value: 8, isUnsigned: true)
!139 = !DIEnumerator(name: "eModifierType_Hook", value: 9, isUnsigned: true)
!140 = !DIEnumerator(name: "eModifierType_Softbody", value: 10, isUnsigned: true)
!141 = !DIEnumerator(name: "eModifierType_Boolean", value: 11, isUnsigned: true)
!142 = !DIEnumerator(name: "eModifierType_Array", value: 12, isUnsigned: true)
!143 = !DIEnumerator(name: "eModifierType_EdgeSplit", value: 13, isUnsigned: true)
!144 = !DIEnumerator(name: "eModifierType_Displace", value: 14, isUnsigned: true)
!145 = !DIEnumerator(name: "eModifierType_UVProject", value: 15, isUnsigned: true)
!146 = !DIEnumerator(name: "eModifierType_Smooth", value: 16, isUnsigned: true)
!147 = !DIEnumerator(name: "eModifierType_Cast", value: 17, isUnsigned: true)
!148 = !DIEnumerator(name: "eModifierType_MeshDeform", value: 18, isUnsigned: true)
!149 = !DIEnumerator(name: "eModifierType_ParticleSystem", value: 19, isUnsigned: true)
!150 = !DIEnumerator(name: "eModifierType_ParticleInstance", value: 20, isUnsigned: true)
!151 = !DIEnumerator(name: "eModifierType_Explode", value: 21, isUnsigned: true)
!152 = !DIEnumerator(name: "eModifierType_Cloth", value: 22, isUnsigned: true)
!153 = !DIEnumerator(name: "eModifierType_Collision", value: 23, isUnsigned: true)
!154 = !DIEnumerator(name: "eModifierType_Bevel", value: 24, isUnsigned: true)
!155 = !DIEnumerator(name: "eModifierType_Shrinkwrap", value: 25, isUnsigned: true)
!156 = !DIEnumerator(name: "eModifierType_Fluidsim", value: 26, isUnsigned: true)
!157 = !DIEnumerator(name: "eModifierType_Mask", value: 27, isUnsigned: true)
!158 = !DIEnumerator(name: "eModifierType_SimpleDeform", value: 28, isUnsigned: true)
!159 = !DIEnumerator(name: "eModifierType_Multires", value: 29, isUnsigned: true)
!160 = !DIEnumerator(name: "eModifierType_Surface", value: 30, isUnsigned: true)
!161 = !DIEnumerator(name: "eModifierType_Smoke", value: 31, isUnsigned: true)
!162 = !DIEnumerator(name: "eModifierType_ShapeKey", value: 32, isUnsigned: true)
!163 = !DIEnumerator(name: "eModifierType_Solidify", value: 33, isUnsigned: true)
!164 = !DIEnumerator(name: "eModifierType_Screw", value: 34, isUnsigned: true)
!165 = !DIEnumerator(name: "eModifierType_Warp", value: 35, isUnsigned: true)
!166 = !DIEnumerator(name: "eModifierType_WeightVGEdit", value: 36, isUnsigned: true)
!167 = !DIEnumerator(name: "eModifierType_WeightVGMix", value: 37, isUnsigned: true)
!168 = !DIEnumerator(name: "eModifierType_WeightVGProximity", value: 38, isUnsigned: true)
!169 = !DIEnumerator(name: "eModifierType_Ocean", value: 39, isUnsigned: true)
!170 = !DIEnumerator(name: "eModifierType_DynamicPaint", value: 40, isUnsigned: true)
!171 = !DIEnumerator(name: "eModifierType_Remesh", value: 41, isUnsigned: true)
!172 = !DIEnumerator(name: "eModifierType_Skin", value: 42, isUnsigned: true)
!173 = !DIEnumerator(name: "eModifierType_LaplacianSmooth", value: 43, isUnsigned: true)
!174 = !DIEnumerator(name: "eModifierType_Triangulate", value: 44, isUnsigned: true)
!175 = !DIEnumerator(name: "eModifierType_UVWarp", value: 45, isUnsigned: true)
!176 = !DIEnumerator(name: "eModifierType_MeshCache", value: 46, isUnsigned: true)
!177 = !DIEnumerator(name: "eModifierType_LaplacianDeform", value: 47, isUnsigned: true)
!178 = !DIEnumerator(name: "eModifierType_Wireframe", value: 48, isUnsigned: true)
!179 = !DIEnumerator(name: "NUM_MODIFIER_TYPES", value: 49, isUnsigned: true)
!180 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !114, line: 103, baseType: !7, size: 32, elements: !181)
!181 = !{!182, !183}
!182 = !DIEnumerator(name: "BOUNDBOX_DISABLED", value: 1, isUnsigned: true)
!183 = !DIEnumerator(name: "BOUNDBOX_DIRTY", value: 2, isUnsigned: true)
!184 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !114, line: 519, baseType: !7, size: 32, elements: !185)
!185 = !{!186, !187, !188, !189}
!186 = !DIEnumerator(name: "OB_RECALC_OB", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "OB_RECALC_DATA", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "OB_RECALC_TIME", value: 4, isUnsigned: true)
!189 = !DIEnumerator(name: "OB_RECALC_ALL", value: 7, isUnsigned: true)
!190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BoidRuleType", file: !191, line: 37, baseType: !7, size: 32, elements: !192)
!191 = !DIFile(filename: "blender/source/blender/makesdna/DNA_boid_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!192 = !{!193, !194, !195, !196, !197, !198, !199, !200, !201, !202}
!193 = !DIEnumerator(name: "eBoidRuleType_None", value: 0, isUnsigned: true)
!194 = !DIEnumerator(name: "eBoidRuleType_Goal", value: 1, isUnsigned: true)
!195 = !DIEnumerator(name: "eBoidRuleType_Avoid", value: 2, isUnsigned: true)
!196 = !DIEnumerator(name: "eBoidRuleType_AvoidCollision", value: 3, isUnsigned: true)
!197 = !DIEnumerator(name: "eBoidRuleType_Separate", value: 4, isUnsigned: true)
!198 = !DIEnumerator(name: "eBoidRuleType_Flock", value: 5, isUnsigned: true)
!199 = !DIEnumerator(name: "eBoidRuleType_FollowLeader", value: 6, isUnsigned: true)
!200 = !DIEnumerator(name: "eBoidRuleType_AverageSpeed", value: 7, isUnsigned: true)
!201 = !DIEnumerator(name: "eBoidRuleType_Fight", value: 8, isUnsigned: true)
!202 = !DIEnumerator(name: "NUM_BOID_RULE_TYPES", value: 9, isUnsigned: true)
!203 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpace_Type", file: !204, line: 1163, baseType: !7, size: 32, elements: !205)
!204 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!205 = !{!206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227}
!206 = !DIEnumerator(name: "SPACE_EMPTY", value: 0, isUnsigned: true)
!207 = !DIEnumerator(name: "SPACE_VIEW3D", value: 1, isUnsigned: true)
!208 = !DIEnumerator(name: "SPACE_IPO", value: 2, isUnsigned: true)
!209 = !DIEnumerator(name: "SPACE_OUTLINER", value: 3, isUnsigned: true)
!210 = !DIEnumerator(name: "SPACE_BUTS", value: 4, isUnsigned: true)
!211 = !DIEnumerator(name: "SPACE_FILE", value: 5, isUnsigned: true)
!212 = !DIEnumerator(name: "SPACE_IMAGE", value: 6, isUnsigned: true)
!213 = !DIEnumerator(name: "SPACE_INFO", value: 7, isUnsigned: true)
!214 = !DIEnumerator(name: "SPACE_SEQ", value: 8, isUnsigned: true)
!215 = !DIEnumerator(name: "SPACE_TEXT", value: 9, isUnsigned: true)
!216 = !DIEnumerator(name: "SPACE_IMASEL", value: 10, isUnsigned: true)
!217 = !DIEnumerator(name: "SPACE_SOUND", value: 11, isUnsigned: true)
!218 = !DIEnumerator(name: "SPACE_ACTION", value: 12, isUnsigned: true)
!219 = !DIEnumerator(name: "SPACE_NLA", value: 13, isUnsigned: true)
!220 = !DIEnumerator(name: "SPACE_SCRIPT", value: 14, isUnsigned: true)
!221 = !DIEnumerator(name: "SPACE_TIME", value: 15, isUnsigned: true)
!222 = !DIEnumerator(name: "SPACE_NODE", value: 16, isUnsigned: true)
!223 = !DIEnumerator(name: "SPACE_LOGIC", value: 17, isUnsigned: true)
!224 = !DIEnumerator(name: "SPACE_CONSOLE", value: 18, isUnsigned: true)
!225 = !DIEnumerator(name: "SPACE_USERPREF", value: 19, isUnsigned: true)
!226 = !DIEnumerator(name: "SPACE_CLIP", value: 20, isUnsigned: true)
!227 = !DIEnumerator(name: "SPACEICONMAX", value: 20, isUnsigned: true)
!228 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !229, line: 361, baseType: !7, size: 32, elements: !230)
!229 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!230 = !{!231, !232, !233, !234, !235, !236, !237, !238}
!231 = !DIEnumerator(name: "RGN_TYPE_WINDOW", value: 0, isUnsigned: true)
!232 = !DIEnumerator(name: "RGN_TYPE_HEADER", value: 1, isUnsigned: true)
!233 = !DIEnumerator(name: "RGN_TYPE_CHANNELS", value: 2, isUnsigned: true)
!234 = !DIEnumerator(name: "RGN_TYPE_TEMPORARY", value: 3, isUnsigned: true)
!235 = !DIEnumerator(name: "RGN_TYPE_UI", value: 4, isUnsigned: true)
!236 = !DIEnumerator(name: "RGN_TYPE_TOOLS", value: 5, isUnsigned: true)
!237 = !DIEnumerator(name: "RGN_TYPE_TOOL_PROPS", value: 6, isUnsigned: true)
!238 = !DIEnumerator(name: "RGN_TYPE_PREVIEW", value: 7, isUnsigned: true)
!239 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpaceButtons_Flag", file: !204, line: 195, baseType: !7, size: 32, elements: !240)
!240 = !{!241, !242, !243, !244}
!241 = !DIEnumerator(name: "SB_PRV_OSA", value: 1, isUnsigned: true)
!242 = !DIEnumerator(name: "SB_PIN_CONTEXT", value: 2, isUnsigned: true)
!243 = !DIEnumerator(name: "SB_TEX_USER_LIMITED", value: 8, isUnsigned: true)
!244 = !DIEnumerator(name: "SB_SHADING_CONTEXT", value: 16, isUnsigned: true)
!245 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpaceNode_Flag", file: !204, line: 966, baseType: !7, size: 32, elements: !246)
!246 = !{!247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257}
!247 = !DIEnumerator(name: "SNODE_BACKDRAW", value: 2, isUnsigned: true)
!248 = !DIEnumerator(name: "SNODE_SHOW_GPENCIL", value: 4, isUnsigned: true)
!249 = !DIEnumerator(name: "SNODE_USE_ALPHA", value: 8, isUnsigned: true)
!250 = !DIEnumerator(name: "SNODE_SHOW_ALPHA", value: 16, isUnsigned: true)
!251 = !DIEnumerator(name: "SNODE_SHOW_R", value: 128, isUnsigned: true)
!252 = !DIEnumerator(name: "SNODE_SHOW_G", value: 256, isUnsigned: true)
!253 = !DIEnumerator(name: "SNODE_SHOW_B", value: 512, isUnsigned: true)
!254 = !DIEnumerator(name: "SNODE_AUTO_RENDER", value: 32, isUnsigned: true)
!255 = !DIEnumerator(name: "SNODE_SHOW_HIGHLIGHT", value: 64, isUnsigned: true)
!256 = !DIEnumerator(name: "SNODE_NEW_SHADERS", value: 2048, isUnsigned: true)
!257 = !DIEnumerator(name: "SNODE_PIN", value: 4096, isUnsigned: true)
!258 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ObjectMode", file: !114, line: 666, baseType: !7, size: 32, elements: !259)
!259 = !{!260, !261, !262, !263, !264, !265, !266, !267}
!260 = !DIEnumerator(name: "OB_MODE_OBJECT", value: 0, isUnsigned: true)
!261 = !DIEnumerator(name: "OB_MODE_EDIT", value: 1, isUnsigned: true)
!262 = !DIEnumerator(name: "OB_MODE_SCULPT", value: 2, isUnsigned: true)
!263 = !DIEnumerator(name: "OB_MODE_VERTEX_PAINT", value: 4, isUnsigned: true)
!264 = !DIEnumerator(name: "OB_MODE_WEIGHT_PAINT", value: 8, isUnsigned: true)
!265 = !DIEnumerator(name: "OB_MODE_TEXTURE_PAINT", value: 16, isUnsigned: true)
!266 = !DIEnumerator(name: "OB_MODE_PARTICLE_EDIT", value: 32, isUnsigned: true)
!267 = !DIEnumerator(name: "OB_MODE_POSE", value: 64, isUnsigned: true)
!268 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !114, line: 648, baseType: !7, size: 32, elements: !269)
!269 = !{!270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283}
!270 = !DIEnumerator(name: "OB_LOCK_LOCX", value: 1, isUnsigned: true)
!271 = !DIEnumerator(name: "OB_LOCK_LOCY", value: 2, isUnsigned: true)
!272 = !DIEnumerator(name: "OB_LOCK_LOCZ", value: 4, isUnsigned: true)
!273 = !DIEnumerator(name: "OB_LOCK_LOC", value: 7, isUnsigned: true)
!274 = !DIEnumerator(name: "OB_LOCK_ROTX", value: 8, isUnsigned: true)
!275 = !DIEnumerator(name: "OB_LOCK_ROTY", value: 16, isUnsigned: true)
!276 = !DIEnumerator(name: "OB_LOCK_ROTZ", value: 32, isUnsigned: true)
!277 = !DIEnumerator(name: "OB_LOCK_ROT", value: 56, isUnsigned: true)
!278 = !DIEnumerator(name: "OB_LOCK_SCALEX", value: 64, isUnsigned: true)
!279 = !DIEnumerator(name: "OB_LOCK_SCALEY", value: 128, isUnsigned: true)
!280 = !DIEnumerator(name: "OB_LOCK_SCALEZ", value: 256, isUnsigned: true)
!281 = !DIEnumerator(name: "OB_LOCK_SCALE", value: 448, isUnsigned: true)
!282 = !DIEnumerator(name: "OB_LOCK_ROTW", value: 512, isUnsigned: true)
!283 = !DIEnumerator(name: "OB_LOCK_ROT4D", value: 1024, isUnsigned: true)
!284 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !114, line: 432, baseType: !7, size: 32, elements: !285)
!285 = !{!286, !287, !288, !289, !290, !291, !292}
!286 = !DIEnumerator(name: "OB_BOUNDBOX", value: 1, isUnsigned: true)
!287 = !DIEnumerator(name: "OB_WIRE", value: 2, isUnsigned: true)
!288 = !DIEnumerator(name: "OB_SOLID", value: 3, isUnsigned: true)
!289 = !DIEnumerator(name: "OB_MATERIAL", value: 4, isUnsigned: true)
!290 = !DIEnumerator(name: "OB_TEXTURE", value: 5, isUnsigned: true)
!291 = !DIEnumerator(name: "OB_RENDER", value: 6, isUnsigned: true)
!292 = !DIEnumerator(name: "OB_PAINT", value: 100, isUnsigned: true)
!293 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !114, line: 460, baseType: !7, size: 32, elements: !294)
!294 = !{!295, !296, !297, !298, !299, !300, !301, !302}
!295 = !DIEnumerator(name: "OB_ARROWS", value: 1, isUnsigned: true)
!296 = !DIEnumerator(name: "OB_PLAINAXES", value: 2, isUnsigned: true)
!297 = !DIEnumerator(name: "OB_CIRCLE", value: 3, isUnsigned: true)
!298 = !DIEnumerator(name: "OB_SINGLE_ARROW", value: 4, isUnsigned: true)
!299 = !DIEnumerator(name: "OB_CUBE", value: 5, isUnsigned: true)
!300 = !DIEnumerator(name: "OB_EMPTY_SPHERE", value: 6, isUnsigned: true)
!301 = !DIEnumerator(name: "OB_EMPTY_CONE", value: 7, isUnsigned: true)
!302 = !DIEnumerator(name: "OB_EMPTY_IMAGE", value: 8, isUnsigned: true)
!303 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !114, line: 420, baseType: !7, size: 32, elements: !304)
!304 = !{!305, !306, !307, !308, !309, !310}
!305 = !DIEnumerator(name: "OB_POSX", value: 0, isUnsigned: true)
!306 = !DIEnumerator(name: "OB_POSY", value: 1, isUnsigned: true)
!307 = !DIEnumerator(name: "OB_POSZ", value: 2, isUnsigned: true)
!308 = !DIEnumerator(name: "OB_NEGX", value: 3, isUnsigned: true)
!309 = !DIEnumerator(name: "OB_NEGY", value: 4, isUnsigned: true)
!310 = !DIEnumerator(name: "OB_NEGZ", value: 5, isUnsigned: true)
!311 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !114, line: 535, baseType: !7, size: 32, elements: !312)
!312 = !{!313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336}
!313 = !DIEnumerator(name: "OB_DYNAMIC", value: 1, isUnsigned: true)
!314 = !DIEnumerator(name: "OB_CHILD", value: 2, isUnsigned: true)
!315 = !DIEnumerator(name: "OB_ACTOR", value: 4, isUnsigned: true)
!316 = !DIEnumerator(name: "OB_INERTIA_LOCK_X", value: 8, isUnsigned: true)
!317 = !DIEnumerator(name: "OB_INERTIA_LOCK_Y", value: 16, isUnsigned: true)
!318 = !DIEnumerator(name: "OB_INERTIA_LOCK_Z", value: 32, isUnsigned: true)
!319 = !DIEnumerator(name: "OB_DO_FH", value: 64, isUnsigned: true)
!320 = !DIEnumerator(name: "OB_ROT_FH", value: 128, isUnsigned: true)
!321 = !DIEnumerator(name: "OB_ANISOTROPIC_FRICTION", value: 256, isUnsigned: true)
!322 = !DIEnumerator(name: "OB_GHOST", value: 512, isUnsigned: true)
!323 = !DIEnumerator(name: "OB_RIGID_BODY", value: 1024, isUnsigned: true)
!324 = !DIEnumerator(name: "OB_BOUNDS", value: 2048, isUnsigned: true)
!325 = !DIEnumerator(name: "OB_COLLISION_RESPONSE", value: 4096, isUnsigned: true)
!326 = !DIEnumerator(name: "OB_SECTOR", value: 8192, isUnsigned: true)
!327 = !DIEnumerator(name: "OB_PROP", value: 16384, isUnsigned: true)
!328 = !DIEnumerator(name: "OB_MAINACTOR", value: 32768, isUnsigned: true)
!329 = !DIEnumerator(name: "OB_COLLISION", value: 65536, isUnsigned: true)
!330 = !DIEnumerator(name: "OB_SOFT_BODY", value: 131072, isUnsigned: true)
!331 = !DIEnumerator(name: "OB_OCCLUDER", value: 262144, isUnsigned: true)
!332 = !DIEnumerator(name: "OB_SENSOR", value: 524288, isUnsigned: true)
!333 = !DIEnumerator(name: "OB_NAVMESH", value: 1048576, isUnsigned: true)
!334 = !DIEnumerator(name: "OB_HASOBSTACLE", value: 2097152, isUnsigned: true)
!335 = !DIEnumerator(name: "OB_CHARACTER", value: 4194304, isUnsigned: true)
!336 = !DIEnumerator(name: "OB_RECORD_ANIMATION", value: 8388608, isUnsigned: true)
!337 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !128, line: 359, baseType: !7, size: 32, elements: !338)
!338 = !{!339, !340, !341}
!339 = !DIEnumerator(name: "MOD_SMOKE_TYPE_DOMAIN", value: 1, isUnsigned: true)
!340 = !DIEnumerator(name: "MOD_SMOKE_TYPE_FLOW", value: 2, isUnsigned: true)
!341 = !DIEnumerator(name: "MOD_SMOKE_TYPE_COLL", value: 4, isUnsigned: true)
!342 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eAnimData_Recalc", file: !343, line: 899, baseType: !7, size: 32, elements: !344)
!343 = !DIFile(filename: "blender/source/blender/makesdna/DNA_anim_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!344 = !{!345, !346, !347}
!345 = !DIEnumerator(name: "ADT_RECALC_DRIVERS", value: 1, isUnsigned: true)
!346 = !DIEnumerator(name: "ADT_RECALC_ANIM", value: 2, isUnsigned: true)
!347 = !DIEnumerator(name: "ADT_RECALC_ALL", value: 3, isUnsigned: true)
!348 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !114, line: 377, baseType: !7, size: 32, elements: !349)
!349 = !{!350, !351, !352, !353, !354, !355, !356, !357, !358}
!350 = !DIEnumerator(name: "PARTYPE", value: 15, isUnsigned: true)
!351 = !DIEnumerator(name: "PAROBJECT", value: 0, isUnsigned: true)
!352 = !DIEnumerator(name: "PARCURVE", value: 1, isUnsigned: true)
!353 = !DIEnumerator(name: "PARKEY", value: 2, isUnsigned: true)
!354 = !DIEnumerator(name: "PARSKEL", value: 4, isUnsigned: true)
!355 = !DIEnumerator(name: "PARVERT1", value: 5, isUnsigned: true)
!356 = !DIEnumerator(name: "PARVERT3", value: 6, isUnsigned: true)
!357 = !DIEnumerator(name: "PARBONE", value: 7, isUnsigned: true)
!358 = !DIEnumerator(name: "PARSLOW", value: 16, isUnsigned: true)
!359 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !114, line: 394, baseType: !7, size: 32, elements: !360)
!360 = !{!361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373}
!361 = !DIEnumerator(name: "OB_NEG_SCALE", value: 4, isUnsigned: true)
!362 = !DIEnumerator(name: "OB_DUPLIFRAMES", value: 8, isUnsigned: true)
!363 = !DIEnumerator(name: "OB_DUPLIVERTS", value: 16, isUnsigned: true)
!364 = !DIEnumerator(name: "OB_DUPLIROT", value: 32, isUnsigned: true)
!365 = !DIEnumerator(name: "OB_DUPLINOSPEED", value: 64, isUnsigned: true)
!366 = !DIEnumerator(name: "OB_DUPLIGROUP", value: 256, isUnsigned: true)
!367 = !DIEnumerator(name: "OB_DUPLIFACES", value: 512, isUnsigned: true)
!368 = !DIEnumerator(name: "OB_DUPLIFACES_SCALE", value: 1024, isUnsigned: true)
!369 = !DIEnumerator(name: "OB_DUPLIPARTS", value: 2048, isUnsigned: true)
!370 = !DIEnumerator(name: "OB_RENDER_DUPLI", value: 4096, isUnsigned: true)
!371 = !DIEnumerator(name: "OB_NO_CONSTRAINTS", value: 8192, isUnsigned: true)
!372 = !DIEnumerator(name: "OB_NO_PSYS_UPDATE", value: 16384, isUnsigned: true)
!373 = !DIEnumerator(name: "OB_DUPLI", value: 2840, isUnsigned: true)
!374 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "B_CONSTRAINT_OB_TYPE", file: !375, line: 105, baseType: !7, size: 32, elements: !376)
!375 = !DIFile(filename: "blender/source/blender/makesdna/DNA_constraint_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!376 = !{!377, !378, !379, !380}
!377 = !DIEnumerator(name: "CONSTRAINT_OBTYPE_OBJECT", value: 1, isUnsigned: true)
!378 = !DIEnumerator(name: "CONSTRAINT_OBTYPE_BONE", value: 2, isUnsigned: true)
!379 = !DIEnumerator(name: "CONSTRAINT_OBTYPE_VERT", value: 3, isUnsigned: true)
!380 = !DIEnumerator(name: "CONSTRAINT_OBTYPE_CV", value: 4, isUnsigned: true)
!381 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBone_Flag", file: !382, line: 187, baseType: !7, size: 32, elements: !383)
!382 = !DIFile(filename: "blender/source/blender/makesdna/DNA_armature_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!383 = !{!384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406}
!384 = !DIEnumerator(name: "BONE_SELECTED", value: 1, isUnsigned: true)
!385 = !DIEnumerator(name: "BONE_ROOTSEL", value: 2, isUnsigned: true)
!386 = !DIEnumerator(name: "BONE_TIPSEL", value: 4, isUnsigned: true)
!387 = !DIEnumerator(name: "BONE_TRANSFORM", value: 8, isUnsigned: true)
!388 = !DIEnumerator(name: "BONE_CONNECTED", value: 16, isUnsigned: true)
!389 = !DIEnumerator(name: "BONE_HIDDEN_P", value: 64, isUnsigned: true)
!390 = !DIEnumerator(name: "BONE_DONE", value: 128, isUnsigned: true)
!391 = !DIEnumerator(name: "BONE_DRAW_ACTIVE", value: 256, isUnsigned: true)
!392 = !DIEnumerator(name: "BONE_HINGE", value: 512, isUnsigned: true)
!393 = !DIEnumerator(name: "BONE_HIDDEN_A", value: 1024, isUnsigned: true)
!394 = !DIEnumerator(name: "BONE_MULT_VG_ENV", value: 2048, isUnsigned: true)
!395 = !DIEnumerator(name: "BONE_NO_DEFORM", value: 4096, isUnsigned: true)
!396 = !DIEnumerator(name: "BONE_UNKEYED", value: 8192, isUnsigned: true)
!397 = !DIEnumerator(name: "BONE_HINGE_CHILD_TRANSFORM", value: 16384, isUnsigned: true)
!398 = !DIEnumerator(name: "BONE_NO_SCALE", value: 32768, isUnsigned: true)
!399 = !DIEnumerator(name: "BONE_HIDDEN_PG", value: 65536, isUnsigned: true)
!400 = !DIEnumerator(name: "BONE_DRAWWIRE", value: 131072, isUnsigned: true)
!401 = !DIEnumerator(name: "BONE_NO_CYCLICOFFSET", value: 262144, isUnsigned: true)
!402 = !DIEnumerator(name: "BONE_EDITMODE_LOCKED", value: 524288, isUnsigned: true)
!403 = !DIEnumerator(name: "BONE_TRANSFORM_CHILD", value: 1048576, isUnsigned: true)
!404 = !DIEnumerator(name: "BONE_UNSELECTABLE", value: 2097152, isUnsigned: true)
!405 = !DIEnumerator(name: "BONE_NO_LOCAL_LOCATION", value: 4194304, isUnsigned: true)
!406 = !DIEnumerator(name: "BONE_RELATIVE_PARENTING", value: 8388608, isUnsigned: true)
!407 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !114, line: 619, baseType: !7, size: 32, elements: !408)
!408 = !{!409, !410, !411}
!409 = !DIEnumerator(name: "OB_RESTRICT_VIEW", value: 1, isUnsigned: true)
!410 = !DIEnumerator(name: "OB_RESTRICT_SELECT", value: 2, isUnsigned: true)
!411 = !DIEnumerator(name: "OB_RESTRICT_RENDER", value: 4, isUnsigned: true)
!412 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ePose_Flags", file: !72, line: 360, baseType: !7, size: 32, elements: !413)
!413 = !{!414, !415, !416, !417, !418, !419, !420}
!414 = !DIEnumerator(name: "POSE_RECALC", value: 1, isUnsigned: true)
!415 = !DIEnumerator(name: "POSE_LOCKED", value: 2, isUnsigned: true)
!416 = !DIEnumerator(name: "POSE_DO_UNLOCK", value: 4, isUnsigned: true)
!417 = !DIEnumerator(name: "POSE_CONSTRAINTS_TIMEDEPEND", value: 8, isUnsigned: true)
!418 = !DIEnumerator(name: "POSE_RECALCPATHS", value: 16, isUnsigned: true)
!419 = !DIEnumerator(name: "POSE_WAS_REBUILT", value: 32, isUnsigned: true)
!420 = !DIEnumerator(name: "POSE_GAME_ENGINE", value: 64, isUnsigned: true)
!421 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !422, line: 123, baseType: !7, size: 32, elements: !423)
!422 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_global.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!423 = !{!424, !425, !426, !427, !428, !429, !430, !431, !432}
!424 = !DIEnumerator(name: "G_DEBUG", value: 1, isUnsigned: true)
!425 = !DIEnumerator(name: "G_DEBUG_FFMPEG", value: 2, isUnsigned: true)
!426 = !DIEnumerator(name: "G_DEBUG_PYTHON", value: 4, isUnsigned: true)
!427 = !DIEnumerator(name: "G_DEBUG_EVENTS", value: 8, isUnsigned: true)
!428 = !DIEnumerator(name: "G_DEBUG_HANDLERS", value: 16, isUnsigned: true)
!429 = !DIEnumerator(name: "G_DEBUG_WM", value: 32, isUnsigned: true)
!430 = !DIEnumerator(name: "G_DEBUG_JOBS", value: 64, isUnsigned: true)
!431 = !DIEnumerator(name: "G_DEBUG_FREESTYLE", value: 128, isUnsigned: true)
!432 = !DIEnumerator(name: "G_DEBUG_DEPSGRAPH", value: 256, isUnsigned: true)
!433 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !114, line: 626, baseType: !7, size: 32, elements: !434)
!434 = !{!435, !436}
!435 = !DIEnumerator(name: "OB_SHAPE_LOCK", value: 1, isUnsigned: true)
!436 = !DIEnumerator(name: "OB_SHAPE_EDIT_MODE", value: 4, isUnsigned: true)
!437 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eEvaluationMode", file: !438, line: 62, baseType: !7, size: 32, elements: !439)
!438 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_depsgraph.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!439 = !{!440, !441, !442}
!440 = !DIEnumerator(name: "DAG_EVAL_VIEWPORT", value: 0, isUnsigned: true)
!441 = !DIEnumerator(name: "DAG_EVAL_PREVIEW", value: 1, isUnsigned: true)
!442 = !DIEnumerator(name: "DAG_EVAL_RENDER", value: 2, isUnsigned: true)
!443 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !444, line: 76, baseType: !7, size: 32, elements: !445)
!444 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!445 = !{!446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486}
!446 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!447 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!448 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!449 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!450 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!451 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!452 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!453 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!454 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!455 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!456 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!457 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!458 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!459 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!460 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!461 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!462 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!463 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!464 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!465 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!466 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!467 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!468 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!469 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!470 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!471 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!472 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!473 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!474 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!475 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!476 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!477 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!478 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!479 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!480 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!481 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!482 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!483 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!484 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!485 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!486 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!487 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !128, line: 674, baseType: !7, size: 32, elements: !488)
!488 = !{!489, !490, !491}
!489 = !DIEnumerator(name: "eParticleSystemFlag_Pars", value: 1, isUnsigned: true)
!490 = !DIEnumerator(name: "eParticleSystemFlag_psys_updated", value: 2, isUnsigned: true)
!491 = !DIEnumerator(name: "eParticleSystemFlag_file_loaded", value: 4, isUnsigned: true)
!492 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierMode", file: !128, line: 88, baseType: !73, size: 32, elements: !493)
!493 = !{!494, !495, !496, !497, !498, !499, !500, !501}
!494 = !DIEnumerator(name: "eModifierMode_Realtime", value: 1)
!495 = !DIEnumerator(name: "eModifierMode_Render", value: 2)
!496 = !DIEnumerator(name: "eModifierMode_Editmode", value: 4)
!497 = !DIEnumerator(name: "eModifierMode_OnCage", value: 8)
!498 = !DIEnumerator(name: "eModifierMode_Expanded", value: 16)
!499 = !DIEnumerator(name: "eModifierMode_Virtual", value: 32)
!500 = !DIEnumerator(name: "eModifierMode_ApplyOnSpline", value: 64)
!501 = !DIEnumerator(name: "eModifierMode_DisableTemporary", value: -2147483648)
!502 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBConstraint_Types", file: !375, line: 461, baseType: !7, size: 32, elements: !503)
!503 = !{!504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533}
!504 = !DIEnumerator(name: "CONSTRAINT_TYPE_NULL", value: 0, isUnsigned: true)
!505 = !DIEnumerator(name: "CONSTRAINT_TYPE_CHILDOF", value: 1, isUnsigned: true)
!506 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRACKTO", value: 2, isUnsigned: true)
!507 = !DIEnumerator(name: "CONSTRAINT_TYPE_KINEMATIC", value: 3, isUnsigned: true)
!508 = !DIEnumerator(name: "CONSTRAINT_TYPE_FOLLOWPATH", value: 4, isUnsigned: true)
!509 = !DIEnumerator(name: "CONSTRAINT_TYPE_ROTLIMIT", value: 5, isUnsigned: true)
!510 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCLIMIT", value: 6, isUnsigned: true)
!511 = !DIEnumerator(name: "CONSTRAINT_TYPE_SIZELIMIT", value: 7, isUnsigned: true)
!512 = !DIEnumerator(name: "CONSTRAINT_TYPE_ROTLIKE", value: 8, isUnsigned: true)
!513 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCLIKE", value: 9, isUnsigned: true)
!514 = !DIEnumerator(name: "CONSTRAINT_TYPE_SIZELIKE", value: 10, isUnsigned: true)
!515 = !DIEnumerator(name: "CONSTRAINT_TYPE_PYTHON", value: 11, isUnsigned: true)
!516 = !DIEnumerator(name: "CONSTRAINT_TYPE_ACTION", value: 12, isUnsigned: true)
!517 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCKTRACK", value: 13, isUnsigned: true)
!518 = !DIEnumerator(name: "CONSTRAINT_TYPE_DISTLIMIT", value: 14, isUnsigned: true)
!519 = !DIEnumerator(name: "CONSTRAINT_TYPE_STRETCHTO", value: 15, isUnsigned: true)
!520 = !DIEnumerator(name: "CONSTRAINT_TYPE_MINMAX", value: 16, isUnsigned: true)
!521 = !DIEnumerator(name: "CONSTRAINT_TYPE_RIGIDBODYJOINT", value: 17, isUnsigned: true)
!522 = !DIEnumerator(name: "CONSTRAINT_TYPE_CLAMPTO", value: 18, isUnsigned: true)
!523 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRANSFORM", value: 19, isUnsigned: true)
!524 = !DIEnumerator(name: "CONSTRAINT_TYPE_SHRINKWRAP", value: 20, isUnsigned: true)
!525 = !DIEnumerator(name: "CONSTRAINT_TYPE_DAMPTRACK", value: 21, isUnsigned: true)
!526 = !DIEnumerator(name: "CONSTRAINT_TYPE_SPLINEIK", value: 22, isUnsigned: true)
!527 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRANSLIKE", value: 23, isUnsigned: true)
!528 = !DIEnumerator(name: "CONSTRAINT_TYPE_SAMEVOL", value: 24, isUnsigned: true)
!529 = !DIEnumerator(name: "CONSTRAINT_TYPE_PIVOT", value: 25, isUnsigned: true)
!530 = !DIEnumerator(name: "CONSTRAINT_TYPE_FOLLOWTRACK", value: 26, isUnsigned: true)
!531 = !DIEnumerator(name: "CONSTRAINT_TYPE_CAMERASOLVER", value: 27, isUnsigned: true)
!532 = !DIEnumerator(name: "CONSTRAINT_TYPE_OBJECTSOLVER", value: 28, isUnsigned: true)
!533 = !DIEnumerator(name: "NUM_CONSTRAINT_TYPES", value: 29, isUnsigned: true)
!534 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBConstraint_Flags", file: !375, line: 499, baseType: !7, size: 32, elements: !535)
!535 = !{!536, !537, !538, !539, !540, !541, !542}
!536 = !DIEnumerator(name: "CONSTRAINT_EXPAND", value: 1, isUnsigned: true)
!537 = !DIEnumerator(name: "CONSTRAINT_DISABLE", value: 4, isUnsigned: true)
!538 = !DIEnumerator(name: "CONSTRAINT_ACTIVE", value: 16, isUnsigned: true)
!539 = !DIEnumerator(name: "CONSTRAINT_SPACEONCE", value: 64, isUnsigned: true)
!540 = !DIEnumerator(name: "CONSTRAINT_OWN_IPO", value: 128, isUnsigned: true)
!541 = !DIEnumerator(name: "CONSTRAINT_PROXY_LOCAL", value: 256, isUnsigned: true)
!542 = !DIEnumerator(name: "CONSTRAINT_OFF", value: 512, isUnsigned: true)
!543 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eCameraSolver_Flags", file: !375, line: 814, baseType: !7, size: 32, elements: !544)
!544 = !{!545}
!545 = !DIEnumerator(name: "CAMERASOLVER_ACTIVECLIP", value: 1, isUnsigned: true)
!546 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eObjectSet", file: !547, line: 209, baseType: !7, size: 32, elements: !548)
!547 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_object.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!548 = !{!549, !550, !551}
!549 = !DIEnumerator(name: "OB_SET_SELECTED", value: 0, isUnsigned: true)
!550 = !DIEnumerator(name: "OB_SET_VISIBLE", value: 1, isUnsigned: true)
!551 = !DIEnumerator(name: "OB_SET_ALL", value: 2, isUnsigned: true)
!552 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eObRelationTypes", file: !547, line: 199, baseType: !7, size: 32, elements: !553)
!553 = !{!554, !555, !556, !557, !558, !559, !560}
!554 = !DIEnumerator(name: "OB_REL_NONE", value: 0, isUnsigned: true)
!555 = !DIEnumerator(name: "OB_REL_PARENT", value: 1, isUnsigned: true)
!556 = !DIEnumerator(name: "OB_REL_PARENT_RECURSIVE", value: 2, isUnsigned: true)
!557 = !DIEnumerator(name: "OB_REL_CHILDREN", value: 4, isUnsigned: true)
!558 = !DIEnumerator(name: "OB_REL_CHILDREN_RECURSIVE", value: 8, isUnsigned: true)
!559 = !DIEnumerator(name: "OB_REL_MOD_ARMATURE", value: 16, isUnsigned: true)
!560 = !DIEnumerator(name: "OB_REL_SCENE_CAMERA", value: 32, isUnsigned: true)
!561 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ePchan_Flag", file: !72, line: 247, baseType: !7, size: 32, elements: !562)
!562 = !{!563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578}
!563 = !DIEnumerator(name: "POSE_LOC", value: 1, isUnsigned: true)
!564 = !DIEnumerator(name: "POSE_ROT", value: 2, isUnsigned: true)
!565 = !DIEnumerator(name: "POSE_SIZE", value: 4, isUnsigned: true)
!566 = !DIEnumerator(name: "POSE_IK_MAT", value: 8, isUnsigned: true)
!567 = !DIEnumerator(name: "POSE_UNUSED2", value: 16, isUnsigned: true)
!568 = !DIEnumerator(name: "POSE_UNUSED3", value: 32, isUnsigned: true)
!569 = !DIEnumerator(name: "POSE_UNUSED4", value: 64, isUnsigned: true)
!570 = !DIEnumerator(name: "POSE_UNUSED5", value: 128, isUnsigned: true)
!571 = !DIEnumerator(name: "POSE_HAS_IK", value: 256, isUnsigned: true)
!572 = !DIEnumerator(name: "POSE_CHAIN", value: 512, isUnsigned: true)
!573 = !DIEnumerator(name: "POSE_DONE", value: 1024, isUnsigned: true)
!574 = !DIEnumerator(name: "POSE_KEY", value: 2048, isUnsigned: true)
!575 = !DIEnumerator(name: "POSE_STRIDE", value: 4096, isUnsigned: true)
!576 = !DIEnumerator(name: "POSE_IKTREE", value: 8192, isUnsigned: true)
!577 = !DIEnumerator(name: "POSE_HAS_IKS", value: 16384, isUnsigned: true)
!578 = !DIEnumerator(name: "POSE_IKSPLINE", value: 32768, isUnsigned: true)
!579 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !580, line: 249, baseType: !7, size: 32, elements: !581)
!580 = !DIFile(filename: "blender/source/blender/bmesh/bmesh_class.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!581 = !{!582, !583, !584, !585}
!582 = !DIEnumerator(name: "BM_VERT", value: 1, isUnsigned: true)
!583 = !DIEnumerator(name: "BM_EDGE", value: 2, isUnsigned: true)
!584 = !DIEnumerator(name: "BM_LOOP", value: 4, isUnsigned: true)
!585 = !DIEnumerator(name: "BM_FACE", value: 8, isUnsigned: true)
!586 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !587, line: 110, baseType: !7, size: 32, elements: !588)
!587 = !DIFile(filename: "blender/source/blender/makesdna/DNA_key_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!588 = !{!589, !590}
!589 = !DIEnumerator(name: "KEY_NORMAL", value: 0, isUnsigned: true)
!590 = !DIEnumerator(name: "KEY_RELATIVE", value: 1, isUnsigned: true)
!591 = !{!592, !593, !4467, !4568, !613, !4617, !4636, !4648, !4717, !4809, !4865, !4926, !4952, !4985, !4997, !5045, !5166, !3458, !5168, !5178, !5235, !73, !1164, !4465, !5256, !5258, !5260, !4220, !3431, !759, !5261}
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!594 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesh", file: !595, line: 133, baseType: !596)
!595 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mesh_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mesh", file: !595, line: 58, size: 11008, elements: !597)
!597 = !{!598, !668, !737, !748, !752, !794, !4333, !4339, !4340, !4350, !4351, !4357, !4365, !4366, !4367, !4380, !4381, !4382, !4383, !4391, !4393, !4419, !4420, !4421, !4422, !4423, !4424, !4425, !4426, !4427, !4428, !4429, !4430, !4431, !4432, !4433, !4434, !4435, !4436, !4437, !4438, !4439, !4440, !4441, !4442, !4443, !4444, !4445, !4446}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !596, file: !595, line: 59, baseType: !599, size: 960)
!599 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !600, line: 130, baseType: !601)
!600 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !600, line: 117, size: 960, elements: !602)
!602 = !{!603, !604, !605, !607, !627, !631, !633, !634, !635, !636}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !601, file: !600, line: 118, baseType: !592, size: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !601, file: !600, line: 118, baseType: !592, size: 64, offset: 64)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !601, file: !600, line: 119, baseType: !606, size: 64, offset: 128)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 64)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !601, file: !600, line: 120, baseType: !608, size: 64, offset: 192)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !600, line: 136, size: 17600, elements: !610)
!610 = !{!611, !612, !614, !617, !622, !623, !624}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !609, file: !600, line: 137, baseType: !599, size: 960)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !609, file: !600, line: 138, baseType: !613, size: 64, offset: 960)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !609, file: !600, line: 139, baseType: !615, size: 64, offset: 1024)
!615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !616, size: 64)
!616 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !600, line: 43, flags: DIFlagFwdDecl)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !609, file: !600, line: 140, baseType: !618, size: 8192, offset: 1088)
!618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 8192, elements: !620)
!619 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!620 = !{!621}
!621 = !DISubrange(count: 1024)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !609, file: !600, line: 141, baseType: !618, size: 8192, offset: 9280)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !609, file: !600, line: 148, baseType: !608, size: 64, offset: 17472)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !609, file: !600, line: 150, baseType: !625, size: 64, offset: 17536)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!626 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !600, line: 45, flags: DIFlagFwdDecl)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !601, file: !600, line: 121, baseType: !628, size: 528, offset: 256)
!628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 528, elements: !629)
!629 = !{!630}
!630 = !DISubrange(count: 66)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !601, file: !600, line: 126, baseType: !632, size: 16, offset: 784)
!632 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !601, file: !600, line: 127, baseType: !73, size: 32, offset: 800)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !601, file: !600, line: 128, baseType: !73, size: 32, offset: 832)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !601, file: !600, line: 128, baseType: !73, size: 32, offset: 864)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !601, file: !600, line: 129, baseType: !637, size: 64, offset: 896)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!638 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !600, line: 75, baseType: !639)
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !600, line: 62, size: 1024, elements: !640)
!640 = !{!641, !643, !644, !645, !646, !647, !651, !652, !666, !667}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !639, file: !600, line: 63, baseType: !642, size: 64)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !639, file: !600, line: 63, baseType: !642, size: 64, offset: 64)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !639, file: !600, line: 64, baseType: !619, size: 8, offset: 128)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !639, file: !600, line: 64, baseType: !619, size: 8, offset: 136)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !639, file: !600, line: 65, baseType: !632, size: 16, offset: 144)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !639, file: !600, line: 66, baseType: !648, size: 512, offset: 160)
!648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 512, elements: !649)
!649 = !{!650}
!650 = !DISubrange(count: 64)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !639, file: !600, line: 67, baseType: !73, size: 32, offset: 672)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !639, file: !600, line: 69, baseType: !653, size: 256, offset: 704)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !600, line: 60, baseType: !654)
!654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !600, line: 48, size: 256, elements: !655)
!655 = !{!656, !657, !664, !665}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !654, file: !600, line: 49, baseType: !592, size: 64)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !654, file: !600, line: 58, baseType: !658, size: 128, offset: 64)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !659, line: 71, baseType: !660)
!659 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !659, line: 69, size: 128, elements: !661)
!661 = !{!662, !663}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !660, file: !659, line: 70, baseType: !592, size: 64)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !660, file: !659, line: 70, baseType: !592, size: 64, offset: 64)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !654, file: !600, line: 59, baseType: !73, size: 32, offset: 192)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !654, file: !600, line: 59, baseType: !73, size: 32, offset: 224)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !639, file: !600, line: 70, baseType: !73, size: 32, offset: 960)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !639, file: !600, line: 74, baseType: !73, size: 32, offset: 992)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !596, file: !595, line: 60, baseType: !669, size: 64, offset: 960)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !343, line: 838, size: 768, elements: !671)
!671 = !{!672, !686, !687, !697, !698, !730, !731, !732, !733, !734, !735, !736}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !670, file: !343, line: 840, baseType: !673, size: 64)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!674 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAction", file: !72, line: 499, baseType: !675)
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !72, line: 486, size: 1600, elements: !676)
!676 = !{!677, !678, !679, !680, !681, !682, !683, !684, !685}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !675, file: !72, line: 487, baseType: !599, size: 960)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !675, file: !72, line: 489, baseType: !658, size: 128, offset: 960)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !675, file: !72, line: 490, baseType: !658, size: 128, offset: 1088)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !675, file: !72, line: 491, baseType: !658, size: 128, offset: 1216)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !675, file: !72, line: 492, baseType: !658, size: 128, offset: 1344)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !675, file: !72, line: 494, baseType: !73, size: 32, offset: 1472)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !675, file: !72, line: 495, baseType: !73, size: 32, offset: 1504)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !675, file: !72, line: 497, baseType: !73, size: 32, offset: 1536)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !675, file: !72, line: 498, baseType: !73, size: 32, offset: 1568)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "tmpact", scope: !670, file: !343, line: 844, baseType: !673, size: 64, offset: 64)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !670, file: !343, line: 848, baseType: !688, size: 64, offset: 128)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!689 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimMapper", file: !343, line: 549, baseType: !690)
!690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimMapper", file: !343, line: 544, size: 320, elements: !691)
!691 = !{!692, !694, !695, !696}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !690, file: !343, line: 545, baseType: !693, size: 64)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !690, file: !343, line: 545, baseType: !693, size: 64, offset: 64)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !690, file: !343, line: 547, baseType: !673, size: 64, offset: 128)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "mappings", scope: !690, file: !343, line: 548, baseType: !658, size: 128, offset: 192)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "nla_tracks", scope: !670, file: !343, line: 851, baseType: !658, size: 128, offset: 192)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "actstrip", scope: !670, file: !343, line: 853, baseType: !699, size: 64, offset: 320)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_typedef, name: "NlaStrip", file: !343, line: 594, baseType: !701)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NlaStrip", file: !343, line: 561, size: 1664, elements: !702)
!702 = !{!703, !705, !706, !707, !708, !709, !710, !711, !712, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !701, file: !343, line: 562, baseType: !704, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !701, file: !343, line: 562, baseType: !704, size: 64, offset: 64)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "strips", scope: !701, file: !343, line: 564, baseType: !658, size: 128, offset: 128)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "act", scope: !701, file: !343, line: 565, baseType: !673, size: 64, offset: 256)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !701, file: !343, line: 566, baseType: !688, size: 64, offset: 320)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "fcurves", scope: !701, file: !343, line: 568, baseType: !658, size: 128, offset: 384)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !701, file: !343, line: 569, baseType: !658, size: 128, offset: 512)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !701, file: !343, line: 571, baseType: !648, size: 512, offset: 640)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !701, file: !343, line: 573, baseType: !713, size: 32, offset: 1152)
!713 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "strip_time", scope: !701, file: !343, line: 574, baseType: !713, size: 32, offset: 1184)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !701, file: !343, line: 576, baseType: !713, size: 32, offset: 1216)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !701, file: !343, line: 576, baseType: !713, size: 32, offset: 1248)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "actstart", scope: !701, file: !343, line: 577, baseType: !713, size: 32, offset: 1280)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "actend", scope: !701, file: !343, line: 577, baseType: !713, size: 32, offset: 1312)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !701, file: !343, line: 579, baseType: !713, size: 32, offset: 1344)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !701, file: !343, line: 580, baseType: !713, size: 32, offset: 1376)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "blendin", scope: !701, file: !343, line: 582, baseType: !713, size: 32, offset: 1408)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "blendout", scope: !701, file: !343, line: 582, baseType: !713, size: 32, offset: 1440)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "blendmode", scope: !701, file: !343, line: 583, baseType: !632, size: 16, offset: 1472)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "extendmode", scope: !701, file: !343, line: 585, baseType: !632, size: 16, offset: 1488)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !701, file: !343, line: 586, baseType: !632, size: 16, offset: 1504)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !701, file: !343, line: 588, baseType: !632, size: 16, offset: 1520)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handle", scope: !701, file: !343, line: 590, baseType: !592, size: 64, offset: 1536)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !701, file: !343, line: 592, baseType: !73, size: 32, offset: 1600)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !701, file: !343, line: 593, baseType: !73, size: 32, offset: 1632)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "drivers", scope: !670, file: !343, line: 858, baseType: !658, size: 128, offset: 384)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "overrides", scope: !670, file: !343, line: 859, baseType: !658, size: 128, offset: 512)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !670, file: !343, line: 862, baseType: !73, size: 32, offset: 640)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !670, file: !343, line: 863, baseType: !73, size: 32, offset: 672)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "act_blendmode", scope: !670, file: !343, line: 866, baseType: !632, size: 16, offset: 704)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "act_extendmode", scope: !670, file: !343, line: 867, baseType: !632, size: 16, offset: 720)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "act_influence", scope: !670, file: !343, line: 868, baseType: !713, size: 32, offset: 736)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !596, file: !595, line: 62, baseType: !738, size: 64, offset: 1024)
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !114, line: 97, size: 832, elements: !740)
!740 = !{!741, !746, !747}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !739, file: !114, line: 98, baseType: !742, size: 768)
!742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, size: 768, elements: !743)
!743 = !{!744, !745}
!744 = !DISubrange(count: 8)
!745 = !DISubrange(count: 3)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !739, file: !114, line: 99, baseType: !73, size: 32, offset: 768)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !739, file: !114, line: 99, baseType: !73, size: 32, offset: 800)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !596, file: !595, line: 64, baseType: !749, size: 64, offset: 1088)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!750 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !751, line: 46, flags: DIFlagFwdDecl)
!751 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!752 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !596, file: !595, line: 65, baseType: !753, size: 64, offset: 1152)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !587, line: 73, size: 1792, elements: !755)
!755 = !{!756, !757, !758, !779, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !754, file: !587, line: 74, baseType: !599, size: 960)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !754, file: !587, line: 75, baseType: !669, size: 64, offset: 960)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "refkey", scope: !754, file: !587, line: 80, baseType: !759, size: 64, offset: 1024)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DIDerivedType(tag: DW_TAG_typedef, name: "KeyBlock", file: !587, line: 70, baseType: !761)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KeyBlock", file: !587, line: 45, size: 1472, elements: !762)
!762 = !{!763, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !761, file: !587, line: 46, baseType: !764, size: 64)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !761, file: !587, line: 46, baseType: !764, size: 64, offset: 64)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !761, file: !587, line: 48, baseType: !713, size: 32, offset: 128)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !761, file: !587, line: 51, baseType: !713, size: 32, offset: 160)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !761, file: !587, line: 53, baseType: !632, size: 16, offset: 192)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !761, file: !587, line: 54, baseType: !632, size: 16, offset: 208)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "relative", scope: !761, file: !587, line: 56, baseType: !632, size: 16, offset: 224)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !761, file: !587, line: 57, baseType: !632, size: 16, offset: 240)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "totelem", scope: !761, file: !587, line: 59, baseType: !73, size: 32, offset: 256)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !761, file: !587, line: 60, baseType: !73, size: 32, offset: 288)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !761, file: !587, line: 62, baseType: !592, size: 64, offset: 320)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !761, file: !587, line: 63, baseType: !648, size: 512, offset: 384)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !761, file: !587, line: 64, baseType: !648, size: 512, offset: 896)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "slidermin", scope: !761, file: !587, line: 67, baseType: !713, size: 32, offset: 1408)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "slidermax", scope: !761, file: !587, line: 68, baseType: !713, size: 32, offset: 1440)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "elemstr", scope: !754, file: !587, line: 85, baseType: !780, size: 256, offset: 1088)
!780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 256, elements: !781)
!781 = !{!782}
!782 = !DISubrange(count: 32)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !754, file: !587, line: 86, baseType: !73, size: 32, offset: 1344)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !754, file: !587, line: 87, baseType: !73, size: 32, offset: 1376)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !754, file: !587, line: 89, baseType: !658, size: 128, offset: 1408)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !754, file: !587, line: 90, baseType: !749, size: 64, offset: 1536)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !754, file: !587, line: 92, baseType: !613, size: 64, offset: 1600)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !754, file: !587, line: 94, baseType: !632, size: 16, offset: 1664)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !754, file: !587, line: 95, baseType: !632, size: 16, offset: 1680)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "slurph", scope: !754, file: !587, line: 96, baseType: !632, size: 16, offset: 1696)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !754, file: !587, line: 97, baseType: !632, size: 16, offset: 1712)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !754, file: !587, line: 101, baseType: !713, size: 32, offset: 1728)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "uidgen", scope: !754, file: !587, line: 104, baseType: !73, size: 32, offset: 1760)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !596, file: !595, line: 66, baseType: !795, size: 64, offset: 1216)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !798, line: 93, size: 7552, elements: !799)
!798 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!799 = !{!800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !850, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !919, !920, !921, !922, !923, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !4292, !4293, !4294, !4295, !4296, !4297, !4298, !4299, !4300, !4301, !4302, !4303, !4304, !4305, !4306, !4307, !4308, !4309, !4310, !4311, !4312, !4313, !4314, !4315, !4316, !4317, !4318, !4319, !4320, !4321, !4322, !4323, !4324, !4332}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !797, file: !798, line: 94, baseType: !599, size: 960)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !797, file: !798, line: 95, baseType: !669, size: 64, offset: 960)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !797, file: !798, line: 97, baseType: !632, size: 16, offset: 1024)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !797, file: !798, line: 97, baseType: !632, size: 16, offset: 1040)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !797, file: !798, line: 99, baseType: !713, size: 32, offset: 1056)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !797, file: !798, line: 99, baseType: !713, size: 32, offset: 1088)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !797, file: !798, line: 99, baseType: !713, size: 32, offset: 1120)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !797, file: !798, line: 100, baseType: !713, size: 32, offset: 1152)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !797, file: !798, line: 100, baseType: !713, size: 32, offset: 1184)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !797, file: !798, line: 100, baseType: !713, size: 32, offset: 1216)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !797, file: !798, line: 101, baseType: !713, size: 32, offset: 1248)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !797, file: !798, line: 101, baseType: !713, size: 32, offset: 1280)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !797, file: !798, line: 101, baseType: !713, size: 32, offset: 1312)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !797, file: !798, line: 102, baseType: !713, size: 32, offset: 1344)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !797, file: !798, line: 102, baseType: !713, size: 32, offset: 1376)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !797, file: !798, line: 102, baseType: !713, size: 32, offset: 1408)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !797, file: !798, line: 103, baseType: !713, size: 32, offset: 1440)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !797, file: !798, line: 103, baseType: !713, size: 32, offset: 1472)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !797, file: !798, line: 103, baseType: !713, size: 32, offset: 1504)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !797, file: !798, line: 103, baseType: !713, size: 32, offset: 1536)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !797, file: !798, line: 103, baseType: !713, size: 32, offset: 1568)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !797, file: !798, line: 104, baseType: !713, size: 32, offset: 1600)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !797, file: !798, line: 104, baseType: !713, size: 32, offset: 1632)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !797, file: !798, line: 104, baseType: !713, size: 32, offset: 1664)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !797, file: !798, line: 104, baseType: !713, size: 32, offset: 1696)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !797, file: !798, line: 104, baseType: !713, size: 32, offset: 1728)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !797, file: !798, line: 105, baseType: !713, size: 32, offset: 1760)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !797, file: !798, line: 108, baseType: !828, size: 704, offset: 1792)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !798, line: 53, size: 704, elements: !829)
!829 = !{!830, !831, !832, !833, !834, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !828, file: !798, line: 54, baseType: !713, size: 32)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !828, file: !798, line: 55, baseType: !713, size: 32, offset: 32)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !828, file: !798, line: 56, baseType: !713, size: 32, offset: 64)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !828, file: !798, line: 57, baseType: !713, size: 32, offset: 96)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !828, file: !798, line: 59, baseType: !835, size: 96, offset: 128)
!835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, size: 96, elements: !836)
!836 = !{!745}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !828, file: !798, line: 60, baseType: !835, size: 96, offset: 224)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !828, file: !798, line: 61, baseType: !835, size: 96, offset: 320)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !828, file: !798, line: 63, baseType: !713, size: 32, offset: 416)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !828, file: !798, line: 64, baseType: !713, size: 32, offset: 448)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !828, file: !798, line: 65, baseType: !713, size: 32, offset: 480)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !828, file: !798, line: 67, baseType: !632, size: 16, offset: 512)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !828, file: !798, line: 68, baseType: !632, size: 16, offset: 528)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !828, file: !798, line: 69, baseType: !632, size: 16, offset: 544)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !828, file: !798, line: 70, baseType: !632, size: 16, offset: 560)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !828, file: !798, line: 72, baseType: !713, size: 32, offset: 576)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !828, file: !798, line: 73, baseType: !713, size: 32, offset: 608)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !828, file: !798, line: 74, baseType: !713, size: 32, offset: 640)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !828, file: !798, line: 75, baseType: !713, size: 32, offset: 672)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !797, file: !798, line: 109, baseType: !851, size: 128, offset: 2496)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !798, line: 79, size: 128, elements: !852)
!852 = !{!853, !854, !855, !856}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !851, file: !798, line: 80, baseType: !73, size: 32)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !851, file: !798, line: 81, baseType: !73, size: 32, offset: 32)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !851, file: !798, line: 82, baseType: !73, size: 32, offset: 64)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !851, file: !798, line: 83, baseType: !73, size: 32, offset: 96)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !797, file: !798, line: 111, baseType: !713, size: 32, offset: 2624)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !797, file: !798, line: 111, baseType: !713, size: 32, offset: 2656)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !797, file: !798, line: 112, baseType: !713, size: 32, offset: 2688)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !797, file: !798, line: 112, baseType: !713, size: 32, offset: 2720)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !797, file: !798, line: 113, baseType: !713, size: 32, offset: 2752)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !797, file: !798, line: 114, baseType: !713, size: 32, offset: 2784)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !797, file: !798, line: 114, baseType: !713, size: 32, offset: 2816)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !797, file: !798, line: 115, baseType: !632, size: 16, offset: 2848)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !797, file: !798, line: 115, baseType: !632, size: 16, offset: 2864)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !797, file: !798, line: 116, baseType: !632, size: 16, offset: 2880)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !797, file: !798, line: 117, baseType: !619, size: 8, offset: 2896)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !797, file: !798, line: 117, baseType: !619, size: 8, offset: 2904)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !797, file: !798, line: 119, baseType: !713, size: 32, offset: 2912)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !797, file: !798, line: 119, baseType: !713, size: 32, offset: 2944)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !797, file: !798, line: 120, baseType: !632, size: 16, offset: 2976)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !797, file: !798, line: 120, baseType: !632, size: 16, offset: 2992)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !797, file: !798, line: 121, baseType: !713, size: 32, offset: 3008)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !797, file: !798, line: 121, baseType: !713, size: 32, offset: 3040)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !797, file: !798, line: 122, baseType: !713, size: 32, offset: 3072)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !797, file: !798, line: 123, baseType: !713, size: 32, offset: 3104)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !797, file: !798, line: 124, baseType: !632, size: 16, offset: 3136)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !797, file: !798, line: 125, baseType: !632, size: 16, offset: 3152)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !797, file: !798, line: 127, baseType: !73, size: 32, offset: 3168)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !797, file: !798, line: 127, baseType: !73, size: 32, offset: 3200)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !797, file: !798, line: 128, baseType: !73, size: 32, offset: 3232)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !797, file: !798, line: 128, baseType: !73, size: 32, offset: 3264)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !797, file: !798, line: 129, baseType: !632, size: 16, offset: 3296)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !797, file: !798, line: 129, baseType: !632, size: 16, offset: 3312)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !797, file: !798, line: 129, baseType: !632, size: 16, offset: 3328)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !797, file: !798, line: 129, baseType: !632, size: 16, offset: 3344)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !797, file: !798, line: 130, baseType: !713, size: 32, offset: 3360)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !797, file: !798, line: 130, baseType: !713, size: 32, offset: 3392)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !797, file: !798, line: 130, baseType: !713, size: 32, offset: 3424)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !797, file: !798, line: 130, baseType: !713, size: 32, offset: 3456)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !797, file: !798, line: 131, baseType: !713, size: 32, offset: 3488)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !797, file: !798, line: 131, baseType: !713, size: 32, offset: 3520)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !797, file: !798, line: 131, baseType: !713, size: 32, offset: 3552)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !797, file: !798, line: 131, baseType: !713, size: 32, offset: 3584)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !797, file: !798, line: 132, baseType: !713, size: 32, offset: 3616)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !797, file: !798, line: 132, baseType: !713, size: 32, offset: 3648)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !797, file: !798, line: 133, baseType: !648, size: 512, offset: 3680)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !797, file: !798, line: 135, baseType: !713, size: 32, offset: 4192)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !797, file: !798, line: 136, baseType: !713, size: 32, offset: 4224)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !797, file: !798, line: 137, baseType: !713, size: 32, offset: 4256)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !797, file: !798, line: 138, baseType: !73, size: 32, offset: 4288)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !797, file: !798, line: 141, baseType: !619, size: 8, offset: 4320)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !797, file: !798, line: 141, baseType: !619, size: 8, offset: 4328)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !797, file: !798, line: 141, baseType: !619, size: 8, offset: 4336)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !797, file: !798, line: 141, baseType: !619, size: 8, offset: 4344)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !797, file: !798, line: 142, baseType: !632, size: 16, offset: 4352)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !797, file: !798, line: 142, baseType: !632, size: 16, offset: 4368)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !797, file: !798, line: 142, baseType: !632, size: 16, offset: 4384)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !797, file: !798, line: 145, baseType: !619, size: 8, offset: 4400)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !797, file: !798, line: 145, baseType: !619, size: 8, offset: 4408)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !797, file: !798, line: 148, baseType: !632, size: 16, offset: 4416)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !797, file: !798, line: 148, baseType: !632, size: 16, offset: 4432)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !797, file: !798, line: 149, baseType: !713, size: 32, offset: 4448)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !797, file: !798, line: 149, baseType: !713, size: 32, offset: 4480)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !797, file: !798, line: 152, baseType: !916, size: 128, offset: 4512)
!916 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, size: 128, elements: !917)
!917 = !{!918}
!918 = !DISubrange(count: 4)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !797, file: !798, line: 153, baseType: !713, size: 32, offset: 4640)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !797, file: !798, line: 154, baseType: !713, size: 32, offset: 4672)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !797, file: !798, line: 157, baseType: !632, size: 16, offset: 4704)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !797, file: !798, line: 157, baseType: !632, size: 16, offset: 4720)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !797, file: !798, line: 160, baseType: !924, size: 64, offset: 4736)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !751, line: 113, size: 6208, elements: !926)
!926 = !{!927, !928, !929, !930, !931, !932, !936}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !925, file: !751, line: 114, baseType: !632, size: 16)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !925, file: !751, line: 114, baseType: !632, size: 16, offset: 16)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !925, file: !751, line: 115, baseType: !619, size: 8, offset: 32)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !925, file: !751, line: 115, baseType: !619, size: 8, offset: 40)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !925, file: !751, line: 116, baseType: !619, size: 8, offset: 48)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !925, file: !751, line: 117, baseType: !933, size: 8, offset: 56)
!933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 8, elements: !934)
!934 = !{!935}
!935 = !DISubrange(count: 1)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !925, file: !751, line: 119, baseType: !937, size: 6144, offset: 64)
!937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !938, size: 6144, elements: !781)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !751, line: 109, baseType: !939)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !751, line: 106, size: 192, elements: !940)
!940 = !{!941, !942, !943, !944, !945, !946}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !939, file: !751, line: 107, baseType: !713, size: 32)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !939, file: !751, line: 107, baseType: !713, size: 32, offset: 32)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !939, file: !751, line: 107, baseType: !713, size: 32, offset: 64)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !939, file: !751, line: 107, baseType: !713, size: 32, offset: 96)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !939, file: !751, line: 107, baseType: !713, size: 32, offset: 128)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !939, file: !751, line: 108, baseType: !73, size: 32, offset: 160)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !797, file: !798, line: 161, baseType: !924, size: 64, offset: 4800)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !797, file: !798, line: 162, baseType: !619, size: 8, offset: 4864)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !797, file: !798, line: 162, baseType: !619, size: 8, offset: 4872)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !797, file: !798, line: 163, baseType: !619, size: 8, offset: 4880)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !797, file: !798, line: 163, baseType: !619, size: 8, offset: 4888)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !797, file: !798, line: 164, baseType: !632, size: 16, offset: 4896)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !797, file: !798, line: 164, baseType: !632, size: 16, offset: 4912)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !797, file: !798, line: 165, baseType: !713, size: 32, offset: 4928)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !797, file: !798, line: 165, baseType: !713, size: 32, offset: 4960)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !797, file: !798, line: 167, baseType: !957, size: 1152, offset: 4992)
!957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 1152, elements: !4290)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !751, line: 57, size: 2496, elements: !960)
!960 = !{!961, !962, !963, !964, !965, !4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4239, !4240, !4241, !4242, !4243, !4244, !4245, !4246, !4247, !4248, !4249, !4250, !4251, !4252, !4253, !4254, !4255, !4256, !4257, !4258, !4259, !4260, !4261, !4262, !4263, !4264, !4265, !4266, !4267, !4268, !4269, !4270, !4271, !4272, !4273, !4274, !4275, !4276, !4277, !4278, !4279, !4280, !4281, !4282, !4283, !4284, !4285, !4286, !4287, !4288, !4289}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !959, file: !751, line: 59, baseType: !632, size: 16)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !959, file: !751, line: 59, baseType: !632, size: 16, offset: 16)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !959, file: !751, line: 59, baseType: !632, size: 16, offset: 32)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !959, file: !751, line: 59, baseType: !632, size: 16, offset: 48)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !959, file: !751, line: 60, baseType: !966, size: 64, offset: 64)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !114, line: 115, size: 11392, elements: !968)
!968 = !{!969, !970, !971, !3828, !3829, !3830, !3831, !3832, !3833, !3834, !3835, !3836, !3837, !3838, !3839, !3840, !3841, !3843, !3844, !3884, !3885, !3886, !3887, !3903, !3904, !3905, !3906, !3907, !3908, !3909, !3910, !3911, !3912, !3913, !3914, !3915, !3916, !3917, !3918, !3919, !3920, !3921, !3922, !3923, !3924, !3925, !3926, !3927, !3928, !3929, !3930, !3931, !3932, !3933, !3934, !3935, !3936, !3937, !3938, !3939, !3940, !3941, !3942, !3943, !3944, !3945, !3946, !3947, !3948, !3949, !3950, !3951, !3952, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962, !3963, !3964, !3965, !3966, !3967, !3968, !3969, !3970, !3971, !3972, !3973, !3974, !3975, !3976, !3977, !3978, !3979, !3980, !3981, !4015, !4016, !4017, !4018, !4019, !4020, !4021, !4022, !4023, !4024, !4118, !4119, !4120, !4121, !4122, !4123, !4126, !4148, !4149, !4150, !4151, !4152, !4153, !4154, !4155, !4156, !4157, !4180, !4214, !4215, !4218, !4219}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !967, file: !114, line: 116, baseType: !599, size: 960)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !967, file: !114, line: 117, baseType: !669, size: 64, offset: 960)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !967, file: !114, line: 119, baseType: !972, size: 64, offset: 1024)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 64)
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !974, line: 155, size: 1856, elements: !975)
!974 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_paint.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!975 = !{!976, !3632, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3797, !3798, !3799, !3800, !3803, !3804, !3805, !3806, !3807, !3808, !3810, !3811, !3812, !3813, !3814, !3817, !3818, !3821, !3824, !3825, !3826, !3827}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "multires", scope: !973, file: !974, line: 157, baseType: !977, size: 64)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MultiresModifierData", file: !128, line: 717, size: 960, elements: !979)
!979 = !{!980, !3625, !3626, !3627, !3628, !3629, !3630, !3631}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !978, file: !128, line: 718, baseType: !981, size: 896)
!981 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierData", file: !128, line: 110, baseType: !982)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierData", file: !128, line: 99, size: 896, elements: !983)
!983 = !{!984, !986, !987, !988, !989, !990, !991, !992, !3624}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !982, file: !128, line: 100, baseType: !985, size: 64)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !982, file: !128, line: 100, baseType: !985, size: 64, offset: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !982, file: !128, line: 102, baseType: !73, size: 32, offset: 128)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !982, file: !128, line: 102, baseType: !73, size: 32, offset: 160)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "stackindex", scope: !982, file: !128, line: 103, baseType: !73, size: 32, offset: 192)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !982, file: !128, line: 103, baseType: !73, size: 32, offset: 224)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !982, file: !128, line: 104, baseType: !648, size: 512, offset: 256)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !982, file: !128, line: 107, baseType: !993, size: 64, offset: 768)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !995, line: 1216, size: 39680, elements: !996)
!995 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!996 = !{!997, !998, !999, !1000, !1177, !1178, !1179, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1617, !1991, !1994, !2241, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2263, !2264, !2265, !2266, !2267, !2275, !2342, !2349, !2350, !2357, !2358, !2364, !2365, !2366, !2367, !2368}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !994, file: !995, line: 1217, baseType: !599, size: 960)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !994, file: !995, line: 1218, baseType: !669, size: 64, offset: 960)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !994, file: !995, line: 1220, baseType: !966, size: 64, offset: 1024)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !994, file: !995, line: 1221, baseType: !1001, size: 64, offset: 1088)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !1003, line: 52, size: 4224, elements: !1004)
!1003 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1004 = !{!1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1074, !1075, !1076, !1077, !1078, !1079, !1083, !1099}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1002, file: !1003, line: 53, baseType: !599, size: 960)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1002, file: !1003, line: 54, baseType: !669, size: 64, offset: 960)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !1002, file: !1003, line: 56, baseType: !632, size: 16, offset: 1024)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !1002, file: !1003, line: 56, baseType: !632, size: 16, offset: 1040)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !1002, file: !1003, line: 57, baseType: !632, size: 16, offset: 1056)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !1002, file: !1003, line: 57, baseType: !632, size: 16, offset: 1072)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !1002, file: !1003, line: 59, baseType: !713, size: 32, offset: 1088)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !1002, file: !1003, line: 59, baseType: !713, size: 32, offset: 1120)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !1002, file: !1003, line: 59, baseType: !713, size: 32, offset: 1152)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !1002, file: !1003, line: 60, baseType: !713, size: 32, offset: 1184)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !1002, file: !1003, line: 60, baseType: !713, size: 32, offset: 1216)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !1002, file: !1003, line: 60, baseType: !713, size: 32, offset: 1248)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !1002, file: !1003, line: 61, baseType: !713, size: 32, offset: 1280)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !1002, file: !1003, line: 61, baseType: !713, size: 32, offset: 1312)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !1002, file: !1003, line: 61, baseType: !713, size: 32, offset: 1344)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1002, file: !1003, line: 68, baseType: !713, size: 32, offset: 1376)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !1002, file: !1003, line: 68, baseType: !713, size: 32, offset: 1408)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1002, file: !1003, line: 68, baseType: !713, size: 32, offset: 1440)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !1002, file: !1003, line: 69, baseType: !713, size: 32, offset: 1472)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !1002, file: !1003, line: 69, baseType: !713, size: 32, offset: 1504)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1002, file: !1003, line: 74, baseType: !713, size: 32, offset: 1536)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1002, file: !1003, line: 79, baseType: !713, size: 32, offset: 1568)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !1002, file: !1003, line: 81, baseType: !632, size: 16, offset: 1600)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1002, file: !1003, line: 91, baseType: !632, size: 16, offset: 1616)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1002, file: !1003, line: 92, baseType: !632, size: 16, offset: 1632)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1002, file: !1003, line: 93, baseType: !632, size: 16, offset: 1648)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1002, file: !1003, line: 94, baseType: !632, size: 16, offset: 1664)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1002, file: !1003, line: 94, baseType: !632, size: 16, offset: 1680)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1002, file: !1003, line: 94, baseType: !632, size: 16, offset: 1696)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1002, file: !1003, line: 94, baseType: !632, size: 16, offset: 1712)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !1002, file: !1003, line: 96, baseType: !713, size: 32, offset: 1728)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !1002, file: !1003, line: 96, baseType: !713, size: 32, offset: 1760)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !1002, file: !1003, line: 96, baseType: !713, size: 32, offset: 1792)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !1002, file: !1003, line: 96, baseType: !713, size: 32, offset: 1824)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !1002, file: !1003, line: 98, baseType: !713, size: 32, offset: 1856)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !1002, file: !1003, line: 98, baseType: !713, size: 32, offset: 1888)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !1002, file: !1003, line: 98, baseType: !713, size: 32, offset: 1920)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !1002, file: !1003, line: 98, baseType: !713, size: 32, offset: 1952)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !1002, file: !1003, line: 99, baseType: !713, size: 32, offset: 1984)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !1002, file: !1003, line: 99, baseType: !713, size: 32, offset: 2016)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !1002, file: !1003, line: 100, baseType: !713, size: 32, offset: 2048)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !1002, file: !1003, line: 100, baseType: !713, size: 32, offset: 2080)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !1002, file: !1003, line: 103, baseType: !632, size: 16, offset: 2112)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !1002, file: !1003, line: 103, baseType: !632, size: 16, offset: 2128)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !1002, file: !1003, line: 103, baseType: !632, size: 16, offset: 2144)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !1002, file: !1003, line: 103, baseType: !632, size: 16, offset: 2160)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !1002, file: !1003, line: 106, baseType: !713, size: 32, offset: 2176)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !1002, file: !1003, line: 106, baseType: !713, size: 32, offset: 2208)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !1002, file: !1003, line: 106, baseType: !713, size: 32, offset: 2240)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !1002, file: !1003, line: 106, baseType: !713, size: 32, offset: 2272)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !1002, file: !1003, line: 107, baseType: !632, size: 16, offset: 2304)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !1002, file: !1003, line: 107, baseType: !632, size: 16, offset: 2320)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !1002, file: !1003, line: 107, baseType: !632, size: 16, offset: 2336)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !1002, file: !1003, line: 107, baseType: !632, size: 16, offset: 2352)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !1002, file: !1003, line: 108, baseType: !713, size: 32, offset: 2368)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !1002, file: !1003, line: 108, baseType: !713, size: 32, offset: 2400)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !1002, file: !1003, line: 109, baseType: !713, size: 32, offset: 2432)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !1002, file: !1003, line: 109, baseType: !713, size: 32, offset: 2464)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !1002, file: !1003, line: 110, baseType: !713, size: 32, offset: 2496)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !1002, file: !1003, line: 110, baseType: !713, size: 32, offset: 2528)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !1002, file: !1003, line: 110, baseType: !713, size: 32, offset: 2560)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !1002, file: !1003, line: 111, baseType: !632, size: 16, offset: 2592)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !1002, file: !1003, line: 111, baseType: !632, size: 16, offset: 2608)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !1002, file: !1003, line: 112, baseType: !632, size: 16, offset: 2624)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !1002, file: !1003, line: 112, baseType: !632, size: 16, offset: 2640)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !1002, file: !1003, line: 112, baseType: !632, size: 16, offset: 2656)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1002, file: !1003, line: 115, baseType: !632, size: 16, offset: 2672)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !1002, file: !1003, line: 118, baseType: !1073, size: 64, offset: 2688)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !1002, file: !1003, line: 118, baseType: !1073, size: 64, offset: 2752)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1002, file: !1003, line: 121, baseType: !749, size: 64, offset: 2816)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !1002, file: !1003, line: 122, baseType: !957, size: 1152, offset: 2880)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !1002, file: !1003, line: 123, baseType: !632, size: 16, offset: 4032)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1002, file: !1003, line: 123, baseType: !632, size: 16, offset: 4048)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1002, file: !1003, line: 123, baseType: !1080, size: 32, offset: 4064)
!1080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !632, size: 32, elements: !1081)
!1081 = !{!1082}
!1082 = !DISubrange(count: 2)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1002, file: !1003, line: 126, baseType: !1084, size: 64, offset: 4096)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64)
!1085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !600, line: 159, size: 448, elements: !1086)
!1086 = !{!1087, !1089, !1090, !1091, !1092, !1095}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1085, file: !600, line: 161, baseType: !1088, size: 64)
!1088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !1081)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1085, file: !600, line: 162, baseType: !1088, size: 64, offset: 64)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1085, file: !600, line: 163, baseType: !1080, size: 32, offset: 128)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1085, file: !600, line: 164, baseType: !1080, size: 32, offset: 160)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1085, file: !600, line: 165, baseType: !1093, size: 128, offset: 192)
!1093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1094, size: 128, elements: !1081)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1085, file: !600, line: 166, baseType: !1096, size: 128, offset: 320)
!1096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1097, size: 128, elements: !1081)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1098 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !600, line: 46, flags: DIFlagFwdDecl)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1002, file: !1003, line: 129, baseType: !1100, size: 64, offset: 4160)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !1102, line: 328, size: 3456, elements: !1103)
!1102 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1103 = !{!1104, !1105, !1106, !1109, !1110, !1113, !1117, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1142, !1143, !1144, !1147, !1152, !1153, !1156, !1160, !1165, !1169, !1173, !1174, !1175, !1176}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1101, file: !1102, line: 329, baseType: !599, size: 960)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1101, file: !1102, line: 330, baseType: !669, size: 64, offset: 960)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !1101, file: !1102, line: 332, baseType: !1107, size: 64, offset: 1024)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1108 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !1102, line: 332, flags: DIFlagFwdDecl)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1101, file: !1102, line: 333, baseType: !648, size: 512, offset: 1088)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !1101, file: !1102, line: 335, baseType: !1111, size: 64, offset: 1600)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !1102, line: 335, flags: DIFlagFwdDecl)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1101, file: !1102, line: 337, baseType: !1114, size: 64, offset: 1664)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !1116, line: 45, flags: DIFlagFwdDecl)
!1116 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !1101, file: !1102, line: 338, baseType: !1118, size: 64, offset: 1728)
!1118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, size: 64, elements: !1081)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !1101, file: !1102, line: 340, baseType: !658, size: 128, offset: 1792)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1101, file: !1102, line: 340, baseType: !658, size: 128, offset: 1920)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1101, file: !1102, line: 342, baseType: !73, size: 32, offset: 2048)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1101, file: !1102, line: 342, baseType: !73, size: 32, offset: 2080)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !1101, file: !1102, line: 343, baseType: !73, size: 32, offset: 2112)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1101, file: !1102, line: 345, baseType: !73, size: 32, offset: 2144)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !1101, file: !1102, line: 346, baseType: !73, size: 32, offset: 2176)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !1101, file: !1102, line: 347, baseType: !632, size: 16, offset: 2208)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1101, file: !1102, line: 348, baseType: !632, size: 16, offset: 2224)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1101, file: !1102, line: 349, baseType: !73, size: 32, offset: 2240)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !1101, file: !1102, line: 351, baseType: !73, size: 32, offset: 2272)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !1101, file: !1102, line: 353, baseType: !632, size: 16, offset: 2304)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !1101, file: !1102, line: 354, baseType: !632, size: 16, offset: 2320)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !1101, file: !1102, line: 355, baseType: !73, size: 32, offset: 2336)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !1101, file: !1102, line: 357, baseType: !1134, size: 128, offset: 2368)
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !1135, line: 95, baseType: !1136)
!1135 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !1135, line: 92, size: 128, elements: !1137)
!1137 = !{!1138, !1139, !1140, !1141}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1136, file: !1135, line: 93, baseType: !713, size: 32)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1136, file: !1135, line: 93, baseType: !713, size: 32, offset: 32)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1136, file: !1135, line: 94, baseType: !713, size: 32, offset: 64)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1136, file: !1135, line: 94, baseType: !713, size: 32, offset: 96)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !1101, file: !1102, line: 363, baseType: !658, size: 128, offset: 2496)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !1101, file: !1102, line: 363, baseType: !658, size: 128, offset: 2624)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !1101, file: !1102, line: 368, baseType: !1145, size: 64, offset: 2752)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 64)
!1146 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !1102, line: 48, flags: DIFlagFwdDecl)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !1101, file: !1102, line: 372, baseType: !1148, size: 32, offset: 2816)
!1148 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !1102, line: 274, baseType: !1149)
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !1102, line: 271, size: 32, elements: !1150)
!1150 = !{!1151}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1149, file: !1102, line: 273, baseType: !7, size: 32)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1101, file: !1102, line: 373, baseType: !73, size: 32, offset: 2848)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !1101, file: !1102, line: 382, baseType: !1154, size: 64, offset: 2880)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64)
!1155 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !1102, line: 46, flags: DIFlagFwdDecl)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !1101, file: !1102, line: 385, baseType: !1157, size: 64, offset: 2944)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64)
!1158 = !DISubroutineType(types: !1159)
!1159 = !{null, !592, !713}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !1101, file: !1102, line: 386, baseType: !1161, size: 64, offset: 3008)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{null, !592, !1164}
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !619, size: 64)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !1101, file: !1102, line: 387, baseType: !1166, size: 64, offset: 3072)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{!73, !592}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !1101, file: !1102, line: 388, baseType: !1170, size: 64, offset: 3136)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{null, !592}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !1101, file: !1102, line: 389, baseType: !592, size: 64, offset: 3200)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !1101, file: !1102, line: 389, baseType: !592, size: 64, offset: 3264)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !1101, file: !1102, line: 389, baseType: !592, size: 64, offset: 3328)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !1101, file: !1102, line: 389, baseType: !592, size: 64, offset: 3392)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !994, file: !995, line: 1223, baseType: !993, size: 64, offset: 1152)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !994, file: !995, line: 1225, baseType: !658, size: 128, offset: 1216)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !994, file: !995, line: 1226, baseType: !1180, size: 64, offset: 1344)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !995, line: 69, size: 320, elements: !1182)
!1182 = !{!1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1181, file: !995, line: 70, baseType: !1180, size: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1181, file: !995, line: 70, baseType: !1180, size: 64, offset: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1181, file: !995, line: 71, baseType: !7, size: 32, offset: 128)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1181, file: !995, line: 71, baseType: !7, size: 32, offset: 160)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1181, file: !995, line: 72, baseType: !73, size: 32, offset: 192)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1181, file: !995, line: 73, baseType: !632, size: 16, offset: 224)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1181, file: !995, line: 73, baseType: !632, size: 16, offset: 240)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1181, file: !995, line: 74, baseType: !966, size: 64, offset: 256)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !994, file: !995, line: 1227, baseType: !966, size: 64, offset: 1408)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !994, file: !995, line: 1229, baseType: !835, size: 96, offset: 1472)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !994, file: !995, line: 1230, baseType: !835, size: 96, offset: 1568)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !994, file: !995, line: 1231, baseType: !835, size: 96, offset: 1664)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !994, file: !995, line: 1231, baseType: !835, size: 96, offset: 1760)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !994, file: !995, line: 1233, baseType: !7, size: 32, offset: 1856)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !994, file: !995, line: 1234, baseType: !73, size: 32, offset: 1888)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !994, file: !995, line: 1235, baseType: !7, size: 32, offset: 1920)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !994, file: !995, line: 1237, baseType: !632, size: 16, offset: 1952)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !994, file: !995, line: 1239, baseType: !619, size: 8, offset: 1968)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !994, file: !995, line: 1240, baseType: !933, size: 8, offset: 1976)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !994, file: !995, line: 1242, baseType: !1100, size: 64, offset: 1984)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !994, file: !995, line: 1244, baseType: !1204, size: 64, offset: 2048)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !1206, line: 200, size: 17024, elements: !1207)
!1206 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1207 = !{!1208, !1210, !1211, !1212, !1610, !1611, !1612, !1613, !1614, !1615, !1616}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !1205, file: !1206, line: 201, baseType: !1209, size: 64)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1205, file: !1206, line: 202, baseType: !658, size: 128, offset: 64)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !1205, file: !1206, line: 203, baseType: !658, size: 128, offset: 192)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !1205, file: !1206, line: 206, baseType: !1213, size: 64, offset: 320)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 64)
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !1206, line: 190, baseType: !1215)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !1206, line: 126, size: 2816, elements: !1216)
!1216 = !{!1217, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1316, !1317, !1318, !1319, !1582, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1609}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1215, file: !1206, line: 127, baseType: !1218, size: 64)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1215, file: !1206, line: 127, baseType: !1218, size: 64, offset: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1215, file: !1206, line: 128, baseType: !592, size: 64, offset: 128)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1215, file: !1206, line: 129, baseType: !592, size: 64, offset: 192)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1215, file: !1206, line: 130, baseType: !648, size: 512, offset: 256)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1215, file: !1206, line: 132, baseType: !73, size: 32, offset: 768)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1215, file: !1206, line: 132, baseType: !73, size: 32, offset: 800)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1215, file: !1206, line: 133, baseType: !73, size: 32, offset: 832)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1215, file: !1206, line: 134, baseType: !73, size: 32, offset: 864)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !1215, file: !1206, line: 134, baseType: !73, size: 32, offset: 896)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !1215, file: !1206, line: 134, baseType: !73, size: 32, offset: 928)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1215, file: !1206, line: 135, baseType: !73, size: 32, offset: 960)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1215, file: !1206, line: 135, baseType: !73, size: 32, offset: 992)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1215, file: !1206, line: 136, baseType: !73, size: 32, offset: 1024)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1215, file: !1206, line: 136, baseType: !73, size: 32, offset: 1056)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !1215, file: !1206, line: 137, baseType: !73, size: 32, offset: 1088)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !1215, file: !1206, line: 137, baseType: !73, size: 32, offset: 1120)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !1215, file: !1206, line: 138, baseType: !713, size: 32, offset: 1152)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !1215, file: !1206, line: 139, baseType: !713, size: 32, offset: 1184)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !1215, file: !1206, line: 139, baseType: !713, size: 32, offset: 1216)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !1215, file: !1206, line: 141, baseType: !632, size: 16, offset: 1248)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !1215, file: !1206, line: 142, baseType: !632, size: 16, offset: 1264)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !1215, file: !1206, line: 143, baseType: !73, size: 32, offset: 1280)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !1215, file: !1206, line: 144, baseType: !73, size: 32, offset: 1312)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !1215, file: !1206, line: 146, baseType: !1243, size: 64, offset: 1344)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!1244 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !1206, line: 114, baseType: !1245)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !1206, line: 99, size: 7232, elements: !1246)
!1246 = !{!1247, !1249, !1250, !1251, !1252, !1253, !1254, !1265, !1269, !1284, !1293, !1300, !1310}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1245, file: !1206, line: 100, baseType: !1248, size: 64)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1245, file: !1206, line: 100, baseType: !1248, size: 64, offset: 64)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1245, file: !1206, line: 101, baseType: !73, size: 32, offset: 128)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1245, file: !1206, line: 101, baseType: !73, size: 32, offset: 160)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1245, file: !1206, line: 102, baseType: !73, size: 32, offset: 192)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1245, file: !1206, line: 102, baseType: !73, size: 32, offset: 224)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !1245, file: !1206, line: 103, baseType: !1255, size: 64, offset: 256)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !1206, line: 59, baseType: !1257)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !1206, line: 56, size: 2112, elements: !1258)
!1258 = !{!1259, !1263, !1264}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1257, file: !1206, line: 57, baseType: !1260, size: 2048)
!1260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 2048, elements: !1261)
!1261 = !{!1262}
!1262 = !DISubrange(count: 256)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !1257, file: !1206, line: 58, baseType: !73, size: 32, offset: 2048)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !1257, file: !1206, line: 58, baseType: !73, size: 32, offset: 2080)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1245, file: !1206, line: 106, baseType: !1266, size: 6144, offset: 320)
!1266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 6144, elements: !1267)
!1267 = !{!1268}
!1268 = !DISubrange(count: 768)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1245, file: !1206, line: 107, baseType: !1270, size: 64, offset: 6464)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !1206, line: 97, baseType: !1272)
!1272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !1206, line: 83, size: 8320, elements: !1273)
!1273 = !{!1274, !1275, !1276, !1280, !1281, !1282, !1283}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1272, file: !1206, line: 84, baseType: !1266, size: 6144)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1272, file: !1206, line: 87, baseType: !1260, size: 2048, offset: 6144)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1272, file: !1206, line: 88, baseType: !1277, size: 64, offset: 8192)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!1278 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !1279, line: 41, flags: DIFlagFwdDecl)
!1279 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1272, file: !1206, line: 90, baseType: !632, size: 16, offset: 8256)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1272, file: !1206, line: 92, baseType: !632, size: 16, offset: 8272)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !1272, file: !1206, line: 93, baseType: !632, size: 16, offset: 8288)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !1272, file: !1206, line: 95, baseType: !632, size: 16, offset: 8304)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !1245, file: !1206, line: 108, baseType: !1285, size: 64, offset: 6528)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !1206, line: 66, baseType: !1287)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !1206, line: 61, size: 128, elements: !1288)
!1288 = !{!1289, !1290, !1291, !1292}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1287, file: !1206, line: 62, baseType: !73, size: 32)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !1287, file: !1206, line: 63, baseType: !73, size: 32, offset: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !1287, file: !1206, line: 64, baseType: !73, size: 32, offset: 64)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !1287, file: !1206, line: 65, baseType: !73, size: 32, offset: 96)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !1245, file: !1206, line: 109, baseType: !1294, size: 64, offset: 6592)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 64)
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !1206, line: 71, baseType: !1296)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !1206, line: 68, size: 64, elements: !1297)
!1297 = !{!1298, !1299}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !1296, file: !1206, line: 69, baseType: !73, size: 32)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !1296, file: !1206, line: 70, baseType: !73, size: 32, offset: 32)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !1245, file: !1206, line: 110, baseType: !1301, size: 64, offset: 6656)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !1206, line: 81, baseType: !1303)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !1206, line: 73, size: 352, elements: !1304)
!1304 = !{!1305, !1306, !1307, !1308, !1309}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !1303, file: !1206, line: 74, baseType: !835, size: 96)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1303, file: !1206, line: 75, baseType: !835, size: 96, offset: 96)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !1303, file: !1206, line: 76, baseType: !835, size: 96, offset: 192)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1303, file: !1206, line: 77, baseType: !73, size: 32, offset: 288)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1303, file: !1206, line: 78, baseType: !73, size: 32, offset: 320)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1245, file: !1206, line: 113, baseType: !1311, size: 512, offset: 6720)
!1311 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1312, line: 182, baseType: !1313)
!1312 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1312, line: 180, size: 512, elements: !1314)
!1314 = !{!1315}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1313, file: !1312, line: 181, baseType: !648, size: 512)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1215, file: !1206, line: 148, baseType: !749, size: 64, offset: 1408)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1215, file: !1206, line: 151, baseType: !993, size: 64, offset: 1472)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !1215, file: !1206, line: 152, baseType: !966, size: 64, offset: 1536)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1215, file: !1206, line: 153, baseType: !1320, size: 64, offset: 1600)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 64)
!1321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !1322, line: 64, size: 19136, elements: !1323)
!1322 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1323 = !{!1324, !1325, !1326, !1327, !1328, !1329, !1331, !1332, !1333, !1334, !1337, !1338, !1568, !1569, !1577, !1578, !1579, !1580, !1581}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1321, file: !1322, line: 65, baseType: !599, size: 960)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1321, file: !1322, line: 66, baseType: !669, size: 64, offset: 960)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1321, file: !1322, line: 68, baseType: !618, size: 8192, offset: 1024)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1321, file: !1322, line: 70, baseType: !73, size: 32, offset: 9216)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1321, file: !1322, line: 71, baseType: !73, size: 32, offset: 9248)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1321, file: !1322, line: 72, baseType: !1330, size: 64, offset: 9280)
!1330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !73, size: 64, elements: !1081)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1321, file: !1322, line: 74, baseType: !713, size: 32, offset: 9344)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1321, file: !1322, line: 74, baseType: !713, size: 32, offset: 9376)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1321, file: !1322, line: 76, baseType: !1277, size: 64, offset: 9408)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1321, file: !1322, line: 77, baseType: !1335, size: 64, offset: 9472)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64)
!1336 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !1322, line: 77, flags: DIFlagFwdDecl)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1321, file: !1322, line: 78, baseType: !1114, size: 64, offset: 9536)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !1321, file: !1322, line: 80, baseType: !1339, size: 2624, offset: 9600)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !1116, line: 340, size: 2624, elements: !1340)
!1340 = !{!1341, !1369, !1387, !1388, !1389, !1406, !1464, !1465, !1548, !1549, !1550, !1551, !1557}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !1339, file: !1116, line: 341, baseType: !1342, size: 576)
!1342 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !1116, line: 251, baseType: !1343)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !1116, line: 207, size: 576, elements: !1344)
!1344 = !{!1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1343, file: !1116, line: 208, baseType: !73, size: 32)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !1343, file: !1116, line: 211, baseType: !632, size: 16, offset: 32)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !1343, file: !1116, line: 212, baseType: !632, size: 16, offset: 48)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !1343, file: !1116, line: 213, baseType: !713, size: 32, offset: 64)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !1343, file: !1116, line: 214, baseType: !632, size: 16, offset: 96)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !1343, file: !1116, line: 215, baseType: !632, size: 16, offset: 112)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !1343, file: !1116, line: 216, baseType: !632, size: 16, offset: 128)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !1343, file: !1116, line: 217, baseType: !632, size: 16, offset: 144)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !1343, file: !1116, line: 218, baseType: !632, size: 16, offset: 160)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !1343, file: !1116, line: 219, baseType: !632, size: 16, offset: 176)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !1343, file: !1116, line: 220, baseType: !713, size: 32, offset: 192)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !1343, file: !1116, line: 222, baseType: !632, size: 16, offset: 224)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !1343, file: !1116, line: 225, baseType: !632, size: 16, offset: 240)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !1343, file: !1116, line: 228, baseType: !73, size: 32, offset: 256)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !1343, file: !1116, line: 229, baseType: !73, size: 32, offset: 288)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !1343, file: !1116, line: 233, baseType: !73, size: 32, offset: 320)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !1343, file: !1116, line: 236, baseType: !632, size: 16, offset: 352)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1343, file: !1116, line: 236, baseType: !632, size: 16, offset: 368)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !1343, file: !1116, line: 241, baseType: !713, size: 32, offset: 384)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !1343, file: !1116, line: 244, baseType: !73, size: 32, offset: 416)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !1343, file: !1116, line: 244, baseType: !73, size: 32, offset: 448)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !1343, file: !1116, line: 245, baseType: !713, size: 32, offset: 480)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !1343, file: !1116, line: 248, baseType: !713, size: 32, offset: 512)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1343, file: !1116, line: 250, baseType: !73, size: 32, offset: 544)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1339, file: !1116, line: 342, baseType: !1370, size: 448, offset: 576)
!1370 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !1116, line: 79, baseType: !1371)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !1116, line: 61, size: 448, elements: !1372)
!1372 = !{!1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !1371, file: !1116, line: 62, baseType: !592, size: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !1371, file: !1116, line: 64, baseType: !632, size: 16, offset: 64)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1371, file: !1116, line: 65, baseType: !632, size: 16, offset: 80)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !1371, file: !1116, line: 67, baseType: !713, size: 32, offset: 96)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !1371, file: !1116, line: 68, baseType: !713, size: 32, offset: 128)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !1371, file: !1116, line: 69, baseType: !713, size: 32, offset: 160)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1371, file: !1116, line: 70, baseType: !632, size: 16, offset: 192)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1371, file: !1116, line: 71, baseType: !632, size: 16, offset: 208)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !1371, file: !1116, line: 72, baseType: !1118, size: 64, offset: 224)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !1371, file: !1116, line: 75, baseType: !713, size: 32, offset: 288)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !1371, file: !1116, line: 75, baseType: !713, size: 32, offset: 320)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !1371, file: !1116, line: 75, baseType: !713, size: 32, offset: 352)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !1371, file: !1116, line: 78, baseType: !713, size: 32, offset: 384)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !1371, file: !1116, line: 78, baseType: !713, size: 32, offset: 416)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !1339, file: !1116, line: 343, baseType: !658, size: 128, offset: 1024)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !1339, file: !1116, line: 344, baseType: !658, size: 128, offset: 1152)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !1339, file: !1116, line: 345, baseType: !1390, size: 192, offset: 1280)
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !1116, line: 278, baseType: !1391)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !1116, line: 270, size: 192, elements: !1392)
!1392 = !{!1393, !1394, !1395, !1396, !1397}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1391, file: !1116, line: 271, baseType: !73, size: 32)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1391, file: !1116, line: 273, baseType: !713, size: 32, offset: 32)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !1391, file: !1116, line: 275, baseType: !73, size: 32, offset: 64)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !1391, file: !1116, line: 276, baseType: !73, size: 32, offset: 96)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !1391, file: !1116, line: 277, baseType: !1398, size: 64, offset: 128)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !1116, line: 55, size: 576, elements: !1400)
!1400 = !{!1401, !1402, !1403}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1399, file: !1116, line: 56, baseType: !73, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1399, file: !1116, line: 57, baseType: !713, size: 32, offset: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1399, file: !1116, line: 58, baseType: !1404, size: 512, offset: 64)
!1404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, size: 512, elements: !1405)
!1405 = !{!918, !918}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !1339, file: !1116, line: 346, baseType: !1407, size: 384, offset: 1472)
!1407 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !1116, line: 268, baseType: !1408)
!1408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !1116, line: 253, size: 384, elements: !1409)
!1409 = !{!1410, !1411, !1412, !1413, !1414, !1458, !1459, !1460, !1461, !1462, !1463}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1408, file: !1116, line: 254, baseType: !73, size: 32)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !1408, file: !1116, line: 255, baseType: !73, size: 32, offset: 32)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1408, file: !1116, line: 255, baseType: !73, size: 32, offset: 64)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !1408, file: !1116, line: 258, baseType: !713, size: 32, offset: 96)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !1408, file: !1116, line: 259, baseType: !1415, size: 64, offset: 128)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !1116, line: 164, baseType: !1417)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !1116, line: 108, size: 1664, elements: !1418)
!1418 = !{!1419, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1417, file: !1116, line: 109, baseType: !1420, size: 64)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1417, file: !1116, line: 109, baseType: !1420, size: 64, offset: 64)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1417, file: !1116, line: 111, baseType: !648, size: 512, offset: 128)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !1417, file: !1116, line: 119, baseType: !1118, size: 64, offset: 640)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !1417, file: !1116, line: 119, baseType: !1118, size: 64, offset: 704)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1417, file: !1116, line: 125, baseType: !1118, size: 64, offset: 768)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1417, file: !1116, line: 125, baseType: !1118, size: 64, offset: 832)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1417, file: !1116, line: 127, baseType: !1118, size: 64, offset: 896)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1417, file: !1116, line: 130, baseType: !73, size: 32, offset: 960)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1417, file: !1116, line: 131, baseType: !73, size: 32, offset: 992)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1417, file: !1116, line: 132, baseType: !1431, size: 64, offset: 1024)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 64)
!1432 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !1116, line: 106, baseType: !1433)
!1433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !1116, line: 81, size: 512, elements: !1434)
!1434 = !{!1435, !1436, !1439, !1440, !1441, !1442}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1433, file: !1116, line: 82, baseType: !1118, size: 64)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !1433, file: !1116, line: 97, baseType: !1437, size: 256, offset: 64)
!1437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, size: 256, elements: !1438)
!1438 = !{!918, !1082}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1433, file: !1116, line: 102, baseType: !1118, size: 64, offset: 320)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1433, file: !1116, line: 102, baseType: !1118, size: 64, offset: 384)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1433, file: !1116, line: 104, baseType: !73, size: 32, offset: 448)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1433, file: !1116, line: 105, baseType: !73, size: 32, offset: 480)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !1417, file: !1116, line: 135, baseType: !835, size: 96, offset: 1088)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1417, file: !1116, line: 136, baseType: !713, size: 32, offset: 1184)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1417, file: !1116, line: 139, baseType: !73, size: 32, offset: 1216)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !1417, file: !1116, line: 139, baseType: !73, size: 32, offset: 1248)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !1417, file: !1116, line: 139, baseType: !73, size: 32, offset: 1280)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !1417, file: !1116, line: 140, baseType: !835, size: 96, offset: 1312)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !1417, file: !1116, line: 143, baseType: !632, size: 16, offset: 1408)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1417, file: !1116, line: 144, baseType: !632, size: 16, offset: 1424)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !1417, file: !1116, line: 145, baseType: !632, size: 16, offset: 1440)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !1417, file: !1116, line: 148, baseType: !632, size: 16, offset: 1456)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !1417, file: !1116, line: 149, baseType: !73, size: 32, offset: 1472)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !1417, file: !1116, line: 150, baseType: !713, size: 32, offset: 1504)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1417, file: !1116, line: 152, baseType: !1114, size: 64, offset: 1536)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1417, file: !1116, line: 163, baseType: !713, size: 32, offset: 1600)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1417, file: !1116, line: 163, baseType: !713, size: 32, offset: 1632)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !1408, file: !1116, line: 261, baseType: !713, size: 32, offset: 192)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !1408, file: !1116, line: 261, baseType: !713, size: 32, offset: 224)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !1408, file: !1116, line: 261, baseType: !713, size: 32, offset: 256)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1408, file: !1116, line: 263, baseType: !73, size: 32, offset: 288)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1408, file: !1116, line: 266, baseType: !73, size: 32, offset: 320)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1408, file: !1116, line: 267, baseType: !713, size: 32, offset: 352)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1339, file: !1116, line: 347, baseType: !1415, size: 64, offset: 1856)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !1339, file: !1116, line: 348, baseType: !1466, size: 64, offset: 1920)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64)
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !1116, line: 205, baseType: !1468)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !1116, line: 186, size: 1024, elements: !1469)
!1469 = !{!1470, !1472, !1473, !1474, !1476, !1477, !1478, !1486, !1487, !1488, !1546, !1547}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1468, file: !1116, line: 187, baseType: !1471, size: 64)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1468, file: !1116, line: 187, baseType: !1471, size: 64, offset: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1468, file: !1116, line: 189, baseType: !648, size: 512, offset: 128)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !1468, file: !1116, line: 191, baseType: !1475, size: 64, offset: 640)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !1468, file: !1116, line: 193, baseType: !73, size: 32, offset: 704)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1468, file: !1116, line: 193, baseType: !73, size: 32, offset: 736)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1468, file: !1116, line: 195, baseType: !1479, size: 64, offset: 768)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64)
!1480 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !1116, line: 184, baseType: !1481)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !1116, line: 166, size: 320, elements: !1482)
!1482 = !{!1483, !1484, !1485}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !1481, file: !1116, line: 180, baseType: !1437, size: 256)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1481, file: !1116, line: 182, baseType: !73, size: 32, offset: 256)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1481, file: !1116, line: 183, baseType: !73, size: 32, offset: 288)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1468, file: !1116, line: 196, baseType: !73, size: 32, offset: 832)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1468, file: !1116, line: 198, baseType: !73, size: 32, offset: 864)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1468, file: !1116, line: 200, baseType: !1489, size: 64, offset: 896)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !1279, line: 77, size: 15424, elements: !1491)
!1491 = !{!1492, !1493, !1494, !1497, !1498, !1499, !1502, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1540}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1490, file: !1279, line: 78, baseType: !599, size: 960)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1490, file: !1279, line: 80, baseType: !618, size: 8192, offset: 960)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1490, file: !1279, line: 82, baseType: !1495, size: 64, offset: 9152)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 64)
!1496 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !1279, line: 43, flags: DIFlagFwdDecl)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1490, file: !1279, line: 83, baseType: !1097, size: 64, offset: 9216)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1490, file: !1279, line: 86, baseType: !1277, size: 64, offset: 9280)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1490, file: !1279, line: 87, baseType: !1500, size: 64, offset: 9344)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 64)
!1501 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !1279, line: 44, flags: DIFlagFwdDecl)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1490, file: !1279, line: 89, baseType: !1503, size: 512, offset: 9408)
!1503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1500, size: 512, elements: !1504)
!1504 = !{!744}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1490, file: !1279, line: 90, baseType: !632, size: 16, offset: 9920)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1490, file: !1279, line: 90, baseType: !632, size: 16, offset: 9936)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1490, file: !1279, line: 92, baseType: !632, size: 16, offset: 9952)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1490, file: !1279, line: 92, baseType: !632, size: 16, offset: 9968)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1490, file: !1279, line: 93, baseType: !632, size: 16, offset: 9984)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1490, file: !1279, line: 93, baseType: !632, size: 16, offset: 10000)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1490, file: !1279, line: 94, baseType: !73, size: 32, offset: 10016)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1490, file: !1279, line: 97, baseType: !632, size: 16, offset: 10048)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1490, file: !1279, line: 97, baseType: !632, size: 16, offset: 10064)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1490, file: !1279, line: 98, baseType: !632, size: 16, offset: 10080)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1490, file: !1279, line: 98, baseType: !632, size: 16, offset: 10096)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1490, file: !1279, line: 99, baseType: !632, size: 16, offset: 10112)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1490, file: !1279, line: 99, baseType: !632, size: 16, offset: 10128)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1490, file: !1279, line: 100, baseType: !7, size: 32, offset: 10144)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1490, file: !1279, line: 101, baseType: !1094, size: 64, offset: 10176)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1490, file: !1279, line: 103, baseType: !625, size: 64, offset: 10240)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1490, file: !1279, line: 104, baseType: !1084, size: 64, offset: 10304)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1490, file: !1279, line: 107, baseType: !713, size: 32, offset: 10368)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1490, file: !1279, line: 108, baseType: !73, size: 32, offset: 10400)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1490, file: !1279, line: 109, baseType: !632, size: 16, offset: 10432)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1490, file: !1279, line: 110, baseType: !632, size: 16, offset: 10448)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1490, file: !1279, line: 113, baseType: !73, size: 32, offset: 10464)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1490, file: !1279, line: 113, baseType: !73, size: 32, offset: 10496)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1490, file: !1279, line: 114, baseType: !619, size: 8, offset: 10528)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1490, file: !1279, line: 114, baseType: !619, size: 8, offset: 10536)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1490, file: !1279, line: 115, baseType: !632, size: 16, offset: 10544)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1490, file: !1279, line: 116, baseType: !916, size: 128, offset: 10560)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1490, file: !1279, line: 119, baseType: !713, size: 32, offset: 10688)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1490, file: !1279, line: 119, baseType: !713, size: 32, offset: 10720)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1490, file: !1279, line: 122, baseType: !1311, size: 512, offset: 10752)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1490, file: !1279, line: 123, baseType: !619, size: 8, offset: 11264)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1490, file: !1279, line: 125, baseType: !1537, size: 56, offset: 11272)
!1537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 56, elements: !1538)
!1538 = !{!1539}
!1539 = !DISubrange(count: 7)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1490, file: !1279, line: 126, baseType: !1541, size: 4096, offset: 11328)
!1541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1542, size: 4096, elements: !1504)
!1542 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !1279, line: 69, baseType: !1543)
!1543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !1279, line: 67, size: 512, elements: !1544)
!1544 = !{!1545}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1543, file: !1279, line: 68, baseType: !648, size: 512)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !1468, file: !1116, line: 201, baseType: !713, size: 32, offset: 960)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1468, file: !1116, line: 204, baseType: !73, size: 32, offset: 992)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1339, file: !1116, line: 350, baseType: !658, size: 128, offset: 1984)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !1339, file: !1116, line: 351, baseType: !73, size: 32, offset: 2112)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !1339, file: !1116, line: 351, baseType: !73, size: 32, offset: 2144)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1339, file: !1116, line: 353, baseType: !1552, size: 64, offset: 2176)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !1116, line: 297, baseType: !1554)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !1116, line: 295, size: 2048, elements: !1555)
!1555 = !{!1556}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1554, file: !1116, line: 296, baseType: !1260, size: 2048)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !1339, file: !1116, line: 355, baseType: !1558, size: 384, offset: 2240)
!1558 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !1116, line: 338, baseType: !1559)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !1116, line: 322, size: 384, elements: !1560)
!1560 = !{!1561, !1562, !1563, !1564, !1565, !1566, !1567}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1559, file: !1116, line: 323, baseType: !73, size: 32)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !1559, file: !1116, line: 325, baseType: !632, size: 16, offset: 32)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1559, file: !1116, line: 326, baseType: !632, size: 16, offset: 48)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !1559, file: !1116, line: 331, baseType: !658, size: 128, offset: 64)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1559, file: !1116, line: 334, baseType: !658, size: 128, offset: 192)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !1559, file: !1116, line: 335, baseType: !73, size: 32, offset: 320)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1559, file: !1116, line: 337, baseType: !73, size: 32, offset: 352)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !1321, file: !1322, line: 81, baseType: !592, size: 64, offset: 12224)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1321, file: !1322, line: 85, baseType: !1570, size: 6208, offset: 12288)
!1570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !1322, line: 55, size: 6208, elements: !1571)
!1571 = !{!1572, !1573, !1574, !1575, !1576}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1570, file: !1322, line: 56, baseType: !1266, size: 6144)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1570, file: !1322, line: 58, baseType: !632, size: 16, offset: 6144)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1570, file: !1322, line: 59, baseType: !632, size: 16, offset: 6160)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !1570, file: !1322, line: 60, baseType: !632, size: 16, offset: 6176)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !1570, file: !1322, line: 61, baseType: !632, size: 16, offset: 6192)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1321, file: !1322, line: 86, baseType: !73, size: 32, offset: 18496)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1321, file: !1322, line: 88, baseType: !73, size: 32, offset: 18528)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1321, file: !1322, line: 90, baseType: !73, size: 32, offset: 18560)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !1321, file: !1322, line: 94, baseType: !73, size: 32, offset: 18592)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1321, file: !1322, line: 100, baseType: !1311, size: 512, offset: 18624)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1215, file: !1206, line: 154, baseType: !1583, size: 64, offset: 1664)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 64)
!1584 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !1206, line: 154, flags: DIFlagFwdDecl)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1215, file: !1206, line: 156, baseType: !1277, size: 64, offset: 1728)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !1215, file: !1206, line: 158, baseType: !713, size: 32, offset: 1792)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !1215, file: !1206, line: 159, baseType: !713, size: 32, offset: 1824)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !1215, file: !1206, line: 162, baseType: !1218, size: 64, offset: 1856)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !1215, file: !1206, line: 162, baseType: !1218, size: 64, offset: 1920)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !1215, file: !1206, line: 162, baseType: !1218, size: 64, offset: 1984)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1215, file: !1206, line: 164, baseType: !658, size: 128, offset: 2048)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !1215, file: !1206, line: 166, baseType: !1593, size: 64, offset: 2176)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 64)
!1594 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !1206, line: 51, flags: DIFlagFwdDecl)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !1215, file: !1206, line: 167, baseType: !592, size: 64, offset: 2240)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1215, file: !1206, line: 168, baseType: !713, size: 32, offset: 2304)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !1215, file: !1206, line: 170, baseType: !713, size: 32, offset: 2336)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !1215, file: !1206, line: 170, baseType: !713, size: 32, offset: 2368)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !1215, file: !1206, line: 171, baseType: !713, size: 32, offset: 2400)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !1215, file: !1206, line: 173, baseType: !592, size: 64, offset: 2432)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !1215, file: !1206, line: 175, baseType: !73, size: 32, offset: 2496)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !1215, file: !1206, line: 176, baseType: !73, size: 32, offset: 2528)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !1215, file: !1206, line: 179, baseType: !73, size: 32, offset: 2560)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !1215, file: !1206, line: 180, baseType: !713, size: 32, offset: 2592)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1215, file: !1206, line: 183, baseType: !73, size: 32, offset: 2624)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1215, file: !1206, line: 185, baseType: !619, size: 8, offset: 2656)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1215, file: !1206, line: 186, baseType: !1608, size: 24, offset: 2664)
!1608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 24, elements: !836)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1215, file: !1206, line: 189, baseType: !658, size: 128, offset: 2688)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !1205, file: !1206, line: 207, baseType: !618, size: 8192, offset: 384)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !1205, file: !1206, line: 208, baseType: !618, size: 8192, offset: 8576)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !1205, file: !1206, line: 210, baseType: !73, size: 32, offset: 16768)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !1205, file: !1206, line: 210, baseType: !73, size: 32, offset: 16800)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !1205, file: !1206, line: 211, baseType: !73, size: 32, offset: 16832)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1205, file: !1206, line: 211, baseType: !73, size: 32, offset: 16864)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !1205, file: !1206, line: 212, baseType: !1134, size: 128, offset: 16896)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !994, file: !995, line: 1246, baseType: !1618, size: 64, offset: 2112)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64)
!1619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !995, line: 1067, size: 5184, elements: !1620)
!1620 = !{!1621, !1810, !1811, !1826, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1848, !1864, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1974}
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1619, file: !995, line: 1068, baseType: !1622, size: 64)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64)
!1623 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !995, line: 934, baseType: !1624)
!1624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !995, line: 925, size: 576, elements: !1625)
!1625 = !{!1626, !1792, !1793, !1794, !1795, !1796, !1809}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1624, file: !995, line: 926, baseType: !1627, size: 320)
!1627 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !995, line: 830, baseType: !1628)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !995, line: 813, size: 320, elements: !1629)
!1629 = !{!1630, !1776, !1785, !1786, !1789, !1790, !1791}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1628, file: !995, line: 814, baseType: !1631, size: 64)
!1631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1632, size: 64)
!1632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !1633, line: 54, size: 16448, elements: !1634)
!1633 = !DIFile(filename: "blender/source/blender/makesdna/DNA_brush_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1634 = !{!1635, !1636, !1643, !1682, !1683, !1684, !1685, !1688, !1691, !1692, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1632, file: !1633, line: 55, baseType: !599, size: 960)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1632, file: !1633, line: 57, baseType: !1637, size: 192, offset: 960)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BrushClone", file: !1633, line: 48, size: 192, elements: !1638)
!1638 = !{!1639, !1640, !1641, !1642}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1637, file: !1633, line: 49, baseType: !1489, size: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1637, file: !1633, line: 50, baseType: !1118, size: 64, offset: 64)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1637, file: !1633, line: 51, baseType: !713, size: 32, offset: 128)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1637, file: !1633, line: 51, baseType: !713, size: 32, offset: 160)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1632, file: !1633, line: 58, baseType: !1644, size: 64, offset: 1152)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1312, line: 72, size: 3072, elements: !1646)
!1646 = !{!1647, !1648, !1649, !1650, !1651, !1652, !1653, !1678, !1679, !1680, !1681}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1645, file: !1312, line: 73, baseType: !73, size: 32)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1645, file: !1312, line: 73, baseType: !73, size: 32, offset: 32)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1645, file: !1312, line: 74, baseType: !73, size: 32, offset: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1645, file: !1312, line: 75, baseType: !73, size: 32, offset: 96)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1645, file: !1312, line: 77, baseType: !1134, size: 128, offset: 128)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1645, file: !1312, line: 77, baseType: !1134, size: 128, offset: 256)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1645, file: !1312, line: 79, baseType: !1654, size: 2304, offset: 384)
!1654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1655, size: 2304, elements: !917)
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1312, line: 67, baseType: !1656)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1312, line: 55, size: 576, elements: !1657)
!1657 = !{!1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1674, !1675, !1676, !1677}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1656, file: !1312, line: 56, baseType: !632, size: 16)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1656, file: !1312, line: 56, baseType: !632, size: 16, offset: 16)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1656, file: !1312, line: 58, baseType: !713, size: 32, offset: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1656, file: !1312, line: 59, baseType: !713, size: 32, offset: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1656, file: !1312, line: 59, baseType: !713, size: 32, offset: 96)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1656, file: !1312, line: 60, baseType: !1118, size: 64, offset: 128)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1656, file: !1312, line: 60, baseType: !1118, size: 64, offset: 192)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1656, file: !1312, line: 61, baseType: !1666, size: 64, offset: 256)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64)
!1667 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1312, line: 47, baseType: !1668)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1312, line: 44, size: 96, elements: !1669)
!1669 = !{!1670, !1671, !1672, !1673}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1668, file: !1312, line: 45, baseType: !713, size: 32)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1668, file: !1312, line: 45, baseType: !713, size: 32, offset: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1668, file: !1312, line: 46, baseType: !632, size: 16, offset: 64)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1668, file: !1312, line: 46, baseType: !632, size: 16, offset: 80)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1656, file: !1312, line: 62, baseType: !1666, size: 64, offset: 320)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1656, file: !1312, line: 64, baseType: !1666, size: 64, offset: 384)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1656, file: !1312, line: 65, baseType: !1118, size: 64, offset: 448)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1656, file: !1312, line: 66, baseType: !1118, size: 64, offset: 512)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1645, file: !1312, line: 80, baseType: !835, size: 96, offset: 2688)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1645, file: !1312, line: 80, baseType: !835, size: 96, offset: 2784)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1645, file: !1312, line: 81, baseType: !835, size: 96, offset: 2880)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1645, file: !1312, line: 83, baseType: !835, size: 96, offset: 2976)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !1632, file: !1633, line: 59, baseType: !959, size: 2496, offset: 1216)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "mask_mtex", scope: !1632, file: !1633, line: 60, baseType: !959, size: 2496, offset: 3712)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "toggle_brush", scope: !1632, file: !1633, line: 62, baseType: !1631, size: 64, offset: 6208)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "icon_imbuf", scope: !1632, file: !1633, line: 64, baseType: !1686, size: 64, offset: 6272)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64)
!1687 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !1312, line: 136, flags: DIFlagFwdDecl)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1632, file: !1633, line: 65, baseType: !1689, size: 64, offset: 6336)
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 64)
!1690 = !DIDerivedType(tag: DW_TAG_typedef, name: "PreviewImage", file: !600, line: 167, baseType: !1085)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !1632, file: !1633, line: 66, baseType: !924, size: 64, offset: 6400)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "paint_curve", scope: !1632, file: !1633, line: 67, baseType: !1693, size: 64, offset: 6464)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 64)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintCurve", file: !1633, line: 166, size: 1088, elements: !1695)
!1695 = !{!1696, !1697, !1727, !1728}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1694, file: !1633, line: 168, baseType: !599, size: 960)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1694, file: !1633, line: 169, baseType: !1698, size: 64, offset: 960)
!1698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1699, size: 64)
!1699 = !DIDerivedType(tag: DW_TAG_typedef, name: "PaintCurvePoint", file: !1633, line: 164, baseType: !1700)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintCurvePoint", file: !1633, line: 160, size: 608, elements: !1701)
!1701 = !{!1702, !1726}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "bez", scope: !1700, file: !1633, line: 162, baseType: !1703, size: 576)
!1703 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !1704, line: 133, baseType: !1705)
!1704 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !1704, line: 117, size: 576, elements: !1706)
!1706 = !{!1707, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1705, file: !1704, line: 118, baseType: !1708, size: 288)
!1708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, size: 288, elements: !1709)
!1709 = !{!745, !745}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !1705, file: !1704, line: 119, baseType: !713, size: 32, offset: 288)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1705, file: !1704, line: 119, baseType: !713, size: 32, offset: 320)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1705, file: !1704, line: 119, baseType: !713, size: 32, offset: 352)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1705, file: !1704, line: 121, baseType: !619, size: 8, offset: 384)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !1705, file: !1704, line: 123, baseType: !619, size: 8, offset: 392)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !1705, file: !1704, line: 123, baseType: !619, size: 8, offset: 400)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !1705, file: !1704, line: 124, baseType: !619, size: 8, offset: 408)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !1705, file: !1704, line: 124, baseType: !619, size: 8, offset: 416)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !1705, file: !1704, line: 124, baseType: !619, size: 8, offset: 424)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !1705, file: !1704, line: 126, baseType: !619, size: 8, offset: 432)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !1705, file: !1704, line: 128, baseType: !619, size: 8, offset: 440)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1705, file: !1704, line: 129, baseType: !713, size: 32, offset: 448)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !1705, file: !1704, line: 130, baseType: !713, size: 32, offset: 480)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !1705, file: !1704, line: 130, baseType: !713, size: 32, offset: 512)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1705, file: !1704, line: 132, baseType: !1725, size: 32, offset: 544)
!1725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 32, elements: !917)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "pressure", scope: !1700, file: !1633, line: 163, baseType: !713, size: 32, offset: 576)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "tot_points", scope: !1694, file: !1633, line: 170, baseType: !73, size: 32, offset: 1024)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "add_index", scope: !1694, file: !1633, line: 171, baseType: !73, size: 32, offset: 1056)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "icon_filepath", scope: !1632, file: !1633, line: 69, baseType: !618, size: 8192, offset: 6528)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "normal_weight", scope: !1632, file: !1633, line: 71, baseType: !713, size: 32, offset: 14720)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !1632, file: !1633, line: 73, baseType: !632, size: 16, offset: 14752)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "ob_mode", scope: !1632, file: !1633, line: 74, baseType: !632, size: 16, offset: 14768)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1632, file: !1633, line: 75, baseType: !713, size: 32, offset: 14784)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1632, file: !1633, line: 76, baseType: !73, size: 32, offset: 14816)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1632, file: !1633, line: 77, baseType: !73, size: 32, offset: 14848)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "mask_pressure", scope: !1632, file: !1633, line: 78, baseType: !73, size: 32, offset: 14880)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "jitter", scope: !1632, file: !1633, line: 79, baseType: !713, size: 32, offset: 14912)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "jitter_absolute", scope: !1632, file: !1633, line: 80, baseType: !73, size: 32, offset: 14944)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "overlay_flags", scope: !1632, file: !1633, line: 81, baseType: !73, size: 32, offset: 14976)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !1632, file: !1633, line: 82, baseType: !73, size: 32, offset: 15008)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_stroke_radius", scope: !1632, file: !1633, line: 83, baseType: !73, size: 32, offset: 15040)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_stroke_factor", scope: !1632, file: !1633, line: 84, baseType: !713, size: 32, offset: 15072)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !1632, file: !1633, line: 85, baseType: !713, size: 32, offset: 15104)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1632, file: !1633, line: 87, baseType: !835, size: 96, offset: 15136)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1632, file: !1633, line: 88, baseType: !713, size: 32, offset: 15232)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1632, file: !1633, line: 90, baseType: !835, size: 96, offset: 15264)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_plane", scope: !1632, file: !1633, line: 92, baseType: !73, size: 32, offset: 15360)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "plane_offset", scope: !1632, file: !1633, line: 94, baseType: !713, size: 32, offset: 15392)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1632, file: !1633, line: 96, baseType: !713, size: 32, offset: 15424)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_spacing", scope: !1632, file: !1633, line: 97, baseType: !73, size: 32, offset: 15456)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_stroke_mode", scope: !1632, file: !1633, line: 98, baseType: !73, size: 32, offset: 15488)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_fill_mode", scope: !1632, file: !1633, line: 99, baseType: !73, size: 32, offset: 15520)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_tool", scope: !1632, file: !1633, line: 101, baseType: !619, size: 8, offset: 15552)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "vertexpaint_tool", scope: !1632, file: !1633, line: 102, baseType: !619, size: 8, offset: 15560)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "imagepaint_tool", scope: !1632, file: !1633, line: 103, baseType: !619, size: 8, offset: 15568)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tool", scope: !1632, file: !1633, line: 104, baseType: !619, size: 8, offset: 15576)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "autosmooth_factor", scope: !1632, file: !1633, line: 106, baseType: !713, size: 32, offset: 15584)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "crease_pinch_factor", scope: !1632, file: !1633, line: 108, baseType: !713, size: 32, offset: 15616)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "plane_trim", scope: !1632, file: !1633, line: 110, baseType: !713, size: 32, offset: 15648)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1632, file: !1633, line: 111, baseType: !713, size: 32, offset: 15680)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "texture_sample_bias", scope: !1632, file: !1633, line: 113, baseType: !713, size: 32, offset: 15712)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "texture_overlay_alpha", scope: !1632, file: !1633, line: 116, baseType: !73, size: 32, offset: 15744)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "mask_overlay_alpha", scope: !1632, file: !1633, line: 117, baseType: !73, size: 32, offset: 15776)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_overlay_alpha", scope: !1632, file: !1633, line: 118, baseType: !73, size: 32, offset: 15808)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1632, file: !1633, line: 120, baseType: !713, size: 32, offset: 15840)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_threshold", scope: !1632, file: !1633, line: 123, baseType: !713, size: 32, offset: 15872)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "blur_kernel_radius", scope: !1632, file: !1633, line: 124, baseType: !73, size: 32, offset: 15904)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "blur_mode", scope: !1632, file: !1633, line: 125, baseType: !73, size: 32, offset: 15936)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "fill_threshold", scope: !1632, file: !1633, line: 128, baseType: !713, size: 32, offset: 15968)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "add_col", scope: !1632, file: !1633, line: 130, baseType: !835, size: 96, offset: 16000)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "sub_col", scope: !1632, file: !1633, line: 131, baseType: !835, size: 96, offset: 16096)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_pos", scope: !1632, file: !1633, line: 133, baseType: !1118, size: 64, offset: 16192)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_dimension", scope: !1632, file: !1633, line: 134, baseType: !1118, size: 64, offset: 16256)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "mask_stencil_pos", scope: !1632, file: !1633, line: 136, baseType: !1118, size: 64, offset: 16320)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "mask_stencil_dimension", scope: !1632, file: !1633, line: 137, baseType: !1118, size: 64, offset: 16384)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1628, file: !995, line: 815, baseType: !1777, size: 64, offset: 64)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64)
!1778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !1633, line: 148, size: 1280, elements: !1779)
!1779 = !{!1780, !1781, !1782, !1783, !1784}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1778, file: !1633, line: 150, baseType: !599, size: 960)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !1778, file: !1633, line: 153, baseType: !658, size: 128, offset: 960)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "deleted", scope: !1778, file: !1633, line: 154, baseType: !658, size: 128, offset: 1088)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "active_color", scope: !1778, file: !1633, line: 156, baseType: !73, size: 32, offset: 1216)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1778, file: !1633, line: 157, baseType: !73, size: 32, offset: 1248)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1628, file: !995, line: 818, baseType: !592, size: 64, offset: 128)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1628, file: !995, line: 819, baseType: !1787, size: 32, offset: 192)
!1787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1788, size: 32, elements: !917)
!1788 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1628, file: !995, line: 822, baseType: !73, size: 32, offset: 224)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1628, file: !995, line: 826, baseType: !73, size: 32, offset: 256)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1628, file: !995, line: 829, baseType: !73, size: 32, offset: 288)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1624, file: !995, line: 928, baseType: !632, size: 16, offset: 320)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1624, file: !995, line: 928, baseType: !632, size: 16, offset: 336)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1624, file: !995, line: 929, baseType: !73, size: 32, offset: 352)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1624, file: !995, line: 930, baseType: !1094, size: 64, offset: 384)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1624, file: !995, line: 931, baseType: !1797, size: 64, offset: 448)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !1799, line: 59, size: 128, elements: !1800)
!1799 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1800 = !{!1801, !1807, !1808}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !1798, file: !1799, line: 60, baseType: !1802, size: 64)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64)
!1803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !1799, line: 54, size: 64, elements: !1804)
!1804 = !{!1805, !1806}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !1803, file: !1799, line: 55, baseType: !73, size: 32)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1803, file: !1799, line: 56, baseType: !713, size: 32, offset: 32)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !1798, file: !1799, line: 61, baseType: !73, size: 32, offset: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1798, file: !1799, line: 62, baseType: !73, size: 32, offset: 96)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1624, file: !995, line: 933, baseType: !592, size: 64, offset: 512)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1619, file: !995, line: 1069, baseType: !1622, size: 64, offset: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1619, file: !995, line: 1070, baseType: !1812, size: 64, offset: 128)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64)
!1813 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !995, line: 916, baseType: !1814)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !995, line: 891, size: 704, elements: !1815)
!1815 = !{!1816, !1817, !1818, !1820, !1821, !1822, !1823, !1824, !1825}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1814, file: !995, line: 892, baseType: !1627, size: 320)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1814, file: !995, line: 896, baseType: !73, size: 32, offset: 320)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1814, file: !995, line: 900, baseType: !1819, size: 96, offset: 352)
!1819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !73, size: 96, elements: !836)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1814, file: !995, line: 903, baseType: !713, size: 32, offset: 448)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1814, file: !995, line: 906, baseType: !73, size: 32, offset: 480)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1814, file: !995, line: 909, baseType: !713, size: 32, offset: 512)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1814, file: !995, line: 912, baseType: !713, size: 32, offset: 544)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1814, file: !995, line: 914, baseType: !966, size: 64, offset: 576)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1814, file: !995, line: 915, baseType: !592, size: 64, offset: 640)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1619, file: !995, line: 1071, baseType: !1827, size: 64, offset: 192)
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 64)
!1828 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !995, line: 920, baseType: !1829)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !995, line: 918, size: 320, elements: !1830)
!1830 = !{!1831}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1829, file: !995, line: 919, baseType: !1627, size: 320)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1619, file: !995, line: 1075, baseType: !713, size: 32, offset: 256)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1619, file: !995, line: 1077, baseType: !713, size: 32, offset: 288)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1619, file: !995, line: 1078, baseType: !713, size: 32, offset: 320)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1619, file: !995, line: 1079, baseType: !632, size: 16, offset: 352)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1619, file: !995, line: 1082, baseType: !632, size: 16, offset: 368)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1619, file: !995, line: 1085, baseType: !619, size: 8, offset: 384)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1619, file: !995, line: 1086, baseType: !619, size: 8, offset: 392)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1619, file: !995, line: 1087, baseType: !619, size: 8, offset: 400)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1619, file: !995, line: 1088, baseType: !619, size: 8, offset: 408)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1619, file: !995, line: 1090, baseType: !713, size: 32, offset: 416)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1619, file: !995, line: 1093, baseType: !632, size: 16, offset: 448)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1619, file: !995, line: 1096, baseType: !619, size: 8, offset: 464)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1619, file: !995, line: 1098, baseType: !1845, size: 40, offset: 472)
!1845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 40, elements: !1846)
!1846 = !{!1847}
!1847 = !DISubrange(count: 5)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1619, file: !995, line: 1101, baseType: !1849, size: 832, offset: 512)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !995, line: 836, size: 832, elements: !1850)
!1850 = !{!1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1849, file: !995, line: 837, baseType: !1627, size: 320)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1849, file: !995, line: 839, baseType: !632, size: 16, offset: 320)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1849, file: !995, line: 839, baseType: !632, size: 16, offset: 336)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1849, file: !995, line: 842, baseType: !632, size: 16, offset: 352)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1849, file: !995, line: 842, baseType: !632, size: 16, offset: 368)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1849, file: !995, line: 843, baseType: !1080, size: 32, offset: 384)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1849, file: !995, line: 845, baseType: !73, size: 32, offset: 416)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1849, file: !995, line: 847, baseType: !592, size: 64, offset: 448)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1849, file: !995, line: 848, baseType: !1489, size: 64, offset: 512)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1849, file: !995, line: 849, baseType: !1489, size: 64, offset: 576)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1849, file: !995, line: 850, baseType: !1489, size: 64, offset: 640)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1849, file: !995, line: 851, baseType: !835, size: 96, offset: 704)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1849, file: !995, line: 852, baseType: !713, size: 32, offset: 800)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1619, file: !995, line: 1104, baseType: !1865, size: 1344, offset: 1344)
!1865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !995, line: 867, size: 1344, elements: !1866)
!1866 = !{!1867, !1868, !1869, !1870, !1871, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1865, file: !995, line: 868, baseType: !632, size: 16)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1865, file: !995, line: 869, baseType: !632, size: 16, offset: 16)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1865, file: !995, line: 870, baseType: !632, size: 16, offset: 32)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1865, file: !995, line: 871, baseType: !632, size: 16, offset: 48)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1865, file: !995, line: 873, baseType: !1872, size: 896, offset: 64)
!1872 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1873, size: 896, elements: !1538)
!1873 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !995, line: 864, baseType: !1874)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !995, line: 859, size: 128, elements: !1875)
!1875 = !{!1876, !1877, !1878, !1879, !1880, !1881}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1874, file: !995, line: 860, baseType: !632, size: 16)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1874, file: !995, line: 861, baseType: !632, size: 16, offset: 16)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1874, file: !995, line: 861, baseType: !632, size: 16, offset: 32)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1874, file: !995, line: 861, baseType: !632, size: 16, offset: 48)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1874, file: !995, line: 862, baseType: !73, size: 32, offset: 64)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1874, file: !995, line: 863, baseType: !713, size: 32, offset: 96)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1865, file: !995, line: 874, baseType: !592, size: 64, offset: 960)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1865, file: !995, line: 876, baseType: !713, size: 32, offset: 1024)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1865, file: !995, line: 876, baseType: !713, size: 32, offset: 1056)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1865, file: !995, line: 878, baseType: !73, size: 32, offset: 1088)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1865, file: !995, line: 879, baseType: !73, size: 32, offset: 1120)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1865, file: !995, line: 881, baseType: !73, size: 32, offset: 1152)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1865, file: !995, line: 881, baseType: !73, size: 32, offset: 1184)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1865, file: !995, line: 883, baseType: !993, size: 64, offset: 1216)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1865, file: !995, line: 884, baseType: !966, size: 64, offset: 1280)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1619, file: !995, line: 1107, baseType: !713, size: 32, offset: 2688)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1619, file: !995, line: 1110, baseType: !713, size: 32, offset: 2720)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1619, file: !995, line: 1113, baseType: !632, size: 16, offset: 2752)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1619, file: !995, line: 1113, baseType: !632, size: 16, offset: 2768)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1619, file: !995, line: 1116, baseType: !619, size: 8, offset: 2784)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1619, file: !995, line: 1117, baseType: !933, size: 8, offset: 2792)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1619, file: !995, line: 1120, baseType: !632, size: 16, offset: 2800)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1619, file: !995, line: 1121, baseType: !713, size: 32, offset: 2816)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1619, file: !995, line: 1122, baseType: !713, size: 32, offset: 2848)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1619, file: !995, line: 1123, baseType: !713, size: 32, offset: 2880)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1619, file: !995, line: 1124, baseType: !713, size: 32, offset: 2912)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1619, file: !995, line: 1125, baseType: !713, size: 32, offset: 2944)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1619, file: !995, line: 1126, baseType: !713, size: 32, offset: 2976)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1619, file: !995, line: 1127, baseType: !713, size: 32, offset: 3008)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1619, file: !995, line: 1128, baseType: !713, size: 32, offset: 3040)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1619, file: !995, line: 1129, baseType: !713, size: 32, offset: 3072)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1619, file: !995, line: 1130, baseType: !713, size: 32, offset: 3104)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1619, file: !995, line: 1131, baseType: !632, size: 16, offset: 3136)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1619, file: !995, line: 1132, baseType: !619, size: 8, offset: 3152)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1619, file: !995, line: 1133, baseType: !619, size: 8, offset: 3160)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1619, file: !995, line: 1134, baseType: !1608, size: 24, offset: 3168)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1619, file: !995, line: 1135, baseType: !619, size: 8, offset: 3192)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1619, file: !995, line: 1138, baseType: !966, size: 64, offset: 3200)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1619, file: !995, line: 1139, baseType: !619, size: 8, offset: 3264)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1619, file: !995, line: 1140, baseType: !619, size: 8, offset: 3272)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1619, file: !995, line: 1141, baseType: !619, size: 8, offset: 3280)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1619, file: !995, line: 1142, baseType: !619, size: 8, offset: 3288)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1619, file: !995, line: 1143, baseType: !619, size: 8, offset: 3296)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1619, file: !995, line: 1144, baseType: !1920, size: 64, offset: 3304)
!1920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 64, elements: !1504)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1619, file: !995, line: 1145, baseType: !1920, size: 64, offset: 3368)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1619, file: !995, line: 1148, baseType: !619, size: 8, offset: 3432)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1619, file: !995, line: 1149, baseType: !619, size: 8, offset: 3440)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1619, file: !995, line: 1152, baseType: !619, size: 8, offset: 3448)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1619, file: !995, line: 1152, baseType: !619, size: 8, offset: 3456)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1619, file: !995, line: 1153, baseType: !619, size: 8, offset: 3464)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1619, file: !995, line: 1154, baseType: !632, size: 16, offset: 3472)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1619, file: !995, line: 1154, baseType: !632, size: 16, offset: 3488)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1619, file: !995, line: 1155, baseType: !632, size: 16, offset: 3504)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1619, file: !995, line: 1155, baseType: !632, size: 16, offset: 3520)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1619, file: !995, line: 1156, baseType: !619, size: 8, offset: 3536)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1619, file: !995, line: 1157, baseType: !619, size: 8, offset: 3544)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1619, file: !995, line: 1159, baseType: !619, size: 8, offset: 3552)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1619, file: !995, line: 1160, baseType: !619, size: 8, offset: 3560)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1619, file: !995, line: 1161, baseType: !619, size: 8, offset: 3568)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1619, file: !995, line: 1162, baseType: !619, size: 8, offset: 3576)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1619, file: !995, line: 1165, baseType: !73, size: 32, offset: 3584)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1619, file: !995, line: 1166, baseType: !73, size: 32, offset: 3616)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1619, file: !995, line: 1167, baseType: !73, size: 32, offset: 3648)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1619, file: !995, line: 1168, baseType: !73, size: 32, offset: 3680)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1619, file: !995, line: 1171, baseType: !632, size: 16, offset: 3712)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1619, file: !995, line: 1171, baseType: !632, size: 16, offset: 3728)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1619, file: !995, line: 1172, baseType: !73, size: 32, offset: 3744)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1619, file: !995, line: 1173, baseType: !713, size: 32, offset: 3776)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1619, file: !995, line: 1174, baseType: !713, size: 32, offset: 3808)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1619, file: !995, line: 1177, baseType: !1947, size: 1024, offset: 3840)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !995, line: 963, size: 1024, elements: !1948)
!1948 = !{!1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1972, !1973}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1947, file: !995, line: 965, baseType: !73, size: 32)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1947, file: !995, line: 968, baseType: !713, size: 32, offset: 32)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1947, file: !995, line: 971, baseType: !713, size: 32, offset: 64)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1947, file: !995, line: 974, baseType: !713, size: 32, offset: 96)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1947, file: !995, line: 977, baseType: !835, size: 96, offset: 128)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1947, file: !995, line: 979, baseType: !835, size: 96, offset: 224)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1947, file: !995, line: 982, baseType: !73, size: 32, offset: 320)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1947, file: !995, line: 987, baseType: !1118, size: 64, offset: 352)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1947, file: !995, line: 989, baseType: !713, size: 32, offset: 416)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1947, file: !995, line: 994, baseType: !73, size: 32, offset: 448)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1947, file: !995, line: 995, baseType: !73, size: 32, offset: 480)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1947, file: !995, line: 997, baseType: !619, size: 8, offset: 512)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1947, file: !995, line: 998, baseType: !1537, size: 56, offset: 520)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1947, file: !995, line: 1000, baseType: !713, size: 32, offset: 576)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1947, file: !995, line: 1003, baseType: !1118, size: 64, offset: 608)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1947, file: !995, line: 1006, baseType: !73, size: 32, offset: 672)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1947, file: !995, line: 1009, baseType: !713, size: 32, offset: 704)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1947, file: !995, line: 1012, baseType: !1118, size: 64, offset: 736)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1947, file: !995, line: 1015, baseType: !1118, size: 64, offset: 800)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1947, file: !995, line: 1018, baseType: !73, size: 32, offset: 864)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1947, file: !995, line: 1019, baseType: !1970, size: 64, offset: 896)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64)
!1971 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !995, line: 63, flags: DIFlagFwdDecl)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1947, file: !995, line: 1023, baseType: !713, size: 32, offset: 960)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1947, file: !995, line: 1024, baseType: !73, size: 32, offset: 992)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1619, file: !995, line: 1179, baseType: !1975, size: 320, offset: 4864)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !995, line: 1043, size: 320, elements: !1976)
!1976 = !{!1977, !1978, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1975, file: !995, line: 1044, baseType: !619, size: 8)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1975, file: !995, line: 1045, baseType: !1979, size: 16, offset: 8)
!1979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 16, elements: !1081)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1975, file: !995, line: 1048, baseType: !619, size: 8, offset: 24)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1975, file: !995, line: 1049, baseType: !713, size: 32, offset: 32)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1975, file: !995, line: 1049, baseType: !713, size: 32, offset: 64)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1975, file: !995, line: 1052, baseType: !713, size: 32, offset: 96)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1975, file: !995, line: 1052, baseType: !713, size: 32, offset: 128)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1975, file: !995, line: 1053, baseType: !619, size: 8, offset: 160)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1975, file: !995, line: 1054, baseType: !1608, size: 24, offset: 168)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1975, file: !995, line: 1057, baseType: !713, size: 32, offset: 192)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1975, file: !995, line: 1057, baseType: !713, size: 32, offset: 224)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1975, file: !995, line: 1060, baseType: !713, size: 32, offset: 256)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1975, file: !995, line: 1060, baseType: !713, size: 32, offset: 288)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !994, file: !995, line: 1247, baseType: !1992, size: 64, offset: 2176)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !995, line: 60, flags: DIFlagFwdDecl)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !994, file: !995, line: 1251, baseType: !1995, size: 31872, offset: 2240)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !995, line: 403, size: 31872, elements: !1996)
!1996 = !{!1997, !2034, !2054, !2063, !2083, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2220, !2221, !2222, !2223, !2239, !2240}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1995, file: !995, line: 404, baseType: !1998, size: 1984)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !995, line: 259, size: 1984, elements: !1999)
!1999 = !{!2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2017, !2029}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1998, file: !995, line: 260, baseType: !619, size: 8)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1998, file: !995, line: 263, baseType: !619, size: 8, offset: 8)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1998, file: !995, line: 266, baseType: !619, size: 8, offset: 16)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1998, file: !995, line: 267, baseType: !619, size: 8, offset: 24)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1998, file: !995, line: 269, baseType: !619, size: 8, offset: 32)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1998, file: !995, line: 270, baseType: !619, size: 8, offset: 40)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1998, file: !995, line: 276, baseType: !619, size: 8, offset: 48)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1998, file: !995, line: 279, baseType: !619, size: 8, offset: 56)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1998, file: !995, line: 280, baseType: !632, size: 16, offset: 64)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1998, file: !995, line: 280, baseType: !632, size: 16, offset: 80)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1998, file: !995, line: 281, baseType: !713, size: 32, offset: 96)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1998, file: !995, line: 284, baseType: !619, size: 8, offset: 128)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1998, file: !995, line: 285, baseType: !619, size: 8, offset: 136)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1998, file: !995, line: 287, baseType: !2014, size: 48, offset: 144)
!2014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 48, elements: !2015)
!2015 = !{!2016}
!2016 = !DISubrange(count: 6)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1998, file: !995, line: 290, baseType: !2018, size: 1280, offset: 192)
!2018 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1312, line: 174, baseType: !2019)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1312, line: 166, size: 1280, elements: !2020)
!2020 = !{!2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2019, file: !1312, line: 167, baseType: !73, size: 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2019, file: !1312, line: 167, baseType: !73, size: 32, offset: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2019, file: !1312, line: 168, baseType: !648, size: 512, offset: 64)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2019, file: !1312, line: 169, baseType: !648, size: 512, offset: 576)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2019, file: !1312, line: 170, baseType: !713, size: 32, offset: 1088)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2019, file: !1312, line: 171, baseType: !713, size: 32, offset: 1120)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2019, file: !1312, line: 172, baseType: !1644, size: 64, offset: 1152)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2019, file: !1312, line: 173, baseType: !592, size: 64, offset: 1216)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1998, file: !995, line: 291, baseType: !2030, size: 512, offset: 1472)
!2030 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1312, line: 178, baseType: !2031)
!2031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1312, line: 176, size: 512, elements: !2032)
!2032 = !{!2033}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2031, file: !1312, line: 177, baseType: !648, size: 512)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1995, file: !995, line: 406, baseType: !2035, size: 64, offset: 1984)
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !995, line: 80, size: 1472, elements: !2037)
!2037 = !{!2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2036, file: !995, line: 81, baseType: !592, size: 64)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2036, file: !995, line: 82, baseType: !592, size: 64, offset: 64)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2036, file: !995, line: 83, baseType: !7, size: 32, offset: 128)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2036, file: !995, line: 84, baseType: !7, size: 32, offset: 160)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2036, file: !995, line: 86, baseType: !7, size: 32, offset: 192)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2036, file: !995, line: 87, baseType: !7, size: 32, offset: 224)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2036, file: !995, line: 88, baseType: !7, size: 32, offset: 256)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2036, file: !995, line: 89, baseType: !7, size: 32, offset: 288)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2036, file: !995, line: 90, baseType: !7, size: 32, offset: 320)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2036, file: !995, line: 91, baseType: !7, size: 32, offset: 352)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2036, file: !995, line: 92, baseType: !7, size: 32, offset: 384)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2036, file: !995, line: 93, baseType: !7, size: 32, offset: 416)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2036, file: !995, line: 95, baseType: !2051, size: 1024, offset: 448)
!2051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 1024, elements: !2052)
!2052 = !{!2053}
!2053 = !DISubrange(count: 128)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1995, file: !995, line: 407, baseType: !2055, size: 64, offset: 2048)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !995, line: 98, size: 1216, elements: !2057)
!2057 = !{!2058, !2059, !2060, !2061, !2062}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2056, file: !995, line: 100, baseType: !592, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2056, file: !995, line: 101, baseType: !592, size: 64, offset: 64)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2056, file: !995, line: 103, baseType: !7, size: 32, offset: 128)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2056, file: !995, line: 104, baseType: !7, size: 32, offset: 160)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2056, file: !995, line: 106, baseType: !2051, size: 1024, offset: 192)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1995, file: !995, line: 408, baseType: !2064, size: 512, offset: 2112)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !995, line: 109, size: 512, elements: !2065)
!2065 = !{!2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2064, file: !995, line: 111, baseType: !73, size: 32)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2064, file: !995, line: 112, baseType: !73, size: 32, offset: 32)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2064, file: !995, line: 115, baseType: !73, size: 32, offset: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2064, file: !995, line: 116, baseType: !73, size: 32, offset: 96)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2064, file: !995, line: 117, baseType: !73, size: 32, offset: 128)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2064, file: !995, line: 118, baseType: !73, size: 32, offset: 160)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2064, file: !995, line: 119, baseType: !73, size: 32, offset: 192)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2064, file: !995, line: 120, baseType: !73, size: 32, offset: 224)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2064, file: !995, line: 121, baseType: !73, size: 32, offset: 256)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2064, file: !995, line: 122, baseType: !73, size: 32, offset: 288)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2064, file: !995, line: 125, baseType: !73, size: 32, offset: 320)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2064, file: !995, line: 126, baseType: !73, size: 32, offset: 352)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2064, file: !995, line: 127, baseType: !632, size: 16, offset: 384)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2064, file: !995, line: 128, baseType: !632, size: 16, offset: 400)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2064, file: !995, line: 129, baseType: !73, size: 32, offset: 416)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2064, file: !995, line: 130, baseType: !73, size: 32, offset: 448)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2064, file: !995, line: 131, baseType: !73, size: 32, offset: 480)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1995, file: !995, line: 409, baseType: !2084, size: 576, offset: 2624)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !995, line: 134, size: 576, elements: !2085)
!2085 = !{!2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2084, file: !995, line: 135, baseType: !73, size: 32)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2084, file: !995, line: 136, baseType: !73, size: 32, offset: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2084, file: !995, line: 137, baseType: !73, size: 32, offset: 64)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2084, file: !995, line: 138, baseType: !73, size: 32, offset: 96)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2084, file: !995, line: 139, baseType: !73, size: 32, offset: 128)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2084, file: !995, line: 140, baseType: !73, size: 32, offset: 160)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2084, file: !995, line: 141, baseType: !73, size: 32, offset: 192)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2084, file: !995, line: 142, baseType: !73, size: 32, offset: 224)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2084, file: !995, line: 143, baseType: !713, size: 32, offset: 256)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2084, file: !995, line: 144, baseType: !73, size: 32, offset: 288)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2084, file: !995, line: 145, baseType: !73, size: 32, offset: 320)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2084, file: !995, line: 147, baseType: !73, size: 32, offset: 352)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2084, file: !995, line: 148, baseType: !73, size: 32, offset: 384)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2084, file: !995, line: 149, baseType: !73, size: 32, offset: 416)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2084, file: !995, line: 150, baseType: !73, size: 32, offset: 448)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2084, file: !995, line: 151, baseType: !73, size: 32, offset: 480)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2084, file: !995, line: 152, baseType: !637, size: 64, offset: 512)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1995, file: !995, line: 411, baseType: !73, size: 32, offset: 3200)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1995, file: !995, line: 411, baseType: !73, size: 32, offset: 3232)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1995, file: !995, line: 411, baseType: !73, size: 32, offset: 3264)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1995, file: !995, line: 412, baseType: !713, size: 32, offset: 3296)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1995, file: !995, line: 413, baseType: !73, size: 32, offset: 3328)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1995, file: !995, line: 413, baseType: !73, size: 32, offset: 3360)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1995, file: !995, line: 415, baseType: !73, size: 32, offset: 3392)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1995, file: !995, line: 415, baseType: !73, size: 32, offset: 3424)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1995, file: !995, line: 416, baseType: !632, size: 16, offset: 3456)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1995, file: !995, line: 416, baseType: !632, size: 16, offset: 3472)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1995, file: !995, line: 418, baseType: !713, size: 32, offset: 3488)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1995, file: !995, line: 418, baseType: !713, size: 32, offset: 3520)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1995, file: !995, line: 421, baseType: !713, size: 32, offset: 3552)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1995, file: !995, line: 421, baseType: !713, size: 32, offset: 3584)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1995, file: !995, line: 421, baseType: !713, size: 32, offset: 3616)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1995, file: !995, line: 425, baseType: !632, size: 16, offset: 3648)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1995, file: !995, line: 425, baseType: !632, size: 16, offset: 3664)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1995, file: !995, line: 425, baseType: !632, size: 16, offset: 3680)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1995, file: !995, line: 426, baseType: !632, size: 16, offset: 3696)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1995, file: !995, line: 428, baseType: !632, size: 16, offset: 3712)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1995, file: !995, line: 428, baseType: !632, size: 16, offset: 3728)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1995, file: !995, line: 431, baseType: !73, size: 32, offset: 3744)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1995, file: !995, line: 433, baseType: !632, size: 16, offset: 3776)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1995, file: !995, line: 435, baseType: !632, size: 16, offset: 3792)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1995, file: !995, line: 437, baseType: !632, size: 16, offset: 3808)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1995, file: !995, line: 439, baseType: !632, size: 16, offset: 3824)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1995, file: !995, line: 441, baseType: !632, size: 16, offset: 3840)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1995, file: !995, line: 443, baseType: !632, size: 16, offset: 3856)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1995, file: !995, line: 449, baseType: !73, size: 32, offset: 3872)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1995, file: !995, line: 453, baseType: !73, size: 32, offset: 3904)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1995, file: !995, line: 458, baseType: !632, size: 16, offset: 3936)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1995, file: !995, line: 462, baseType: !632, size: 16, offset: 3952)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1995, file: !995, line: 467, baseType: !73, size: 32, offset: 3968)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1995, file: !995, line: 467, baseType: !73, size: 32, offset: 4000)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1995, file: !995, line: 469, baseType: !632, size: 16, offset: 4032)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1995, file: !995, line: 469, baseType: !632, size: 16, offset: 4048)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1995, file: !995, line: 469, baseType: !632, size: 16, offset: 4064)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1995, file: !995, line: 469, baseType: !632, size: 16, offset: 4080)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1995, file: !995, line: 474, baseType: !632, size: 16, offset: 4096)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1995, file: !995, line: 475, baseType: !619, size: 8, offset: 4112)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1995, file: !995, line: 476, baseType: !619, size: 8, offset: 4120)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1995, file: !995, line: 481, baseType: !73, size: 32, offset: 4128)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1995, file: !995, line: 486, baseType: !73, size: 32, offset: 4160)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1995, file: !995, line: 491, baseType: !73, size: 32, offset: 4192)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1995, file: !995, line: 496, baseType: !632, size: 16, offset: 4224)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1995, file: !995, line: 498, baseType: !632, size: 16, offset: 4240)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1995, file: !995, line: 501, baseType: !632, size: 16, offset: 4256)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1995, file: !995, line: 502, baseType: !632, size: 16, offset: 4272)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1995, file: !995, line: 508, baseType: !632, size: 16, offset: 4288)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1995, file: !995, line: 513, baseType: !632, size: 16, offset: 4304)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1995, file: !995, line: 515, baseType: !632, size: 16, offset: 4320)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1995, file: !995, line: 515, baseType: !632, size: 16, offset: 4336)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1995, file: !995, line: 519, baseType: !1134, size: 128, offset: 4352)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1995, file: !995, line: 519, baseType: !1134, size: 128, offset: 4480)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1995, file: !995, line: 520, baseType: !2158, size: 128, offset: 4608)
!2158 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !1135, line: 89, baseType: !2159)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !1135, line: 86, size: 128, elements: !2160)
!2160 = !{!2161, !2162, !2163, !2164}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !2159, file: !1135, line: 87, baseType: !73, size: 32)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !2159, file: !1135, line: 87, baseType: !73, size: 32, offset: 32)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !2159, file: !1135, line: 88, baseType: !73, size: 32, offset: 64)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !2159, file: !1135, line: 88, baseType: !73, size: 32, offset: 96)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1995, file: !995, line: 523, baseType: !658, size: 128, offset: 4736)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1995, file: !995, line: 524, baseType: !632, size: 16, offset: 4864)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1995, file: !995, line: 527, baseType: !632, size: 16, offset: 4880)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1995, file: !995, line: 532, baseType: !713, size: 32, offset: 4896)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1995, file: !995, line: 532, baseType: !713, size: 32, offset: 4928)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1995, file: !995, line: 534, baseType: !713, size: 32, offset: 4960)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1995, file: !995, line: 538, baseType: !713, size: 32, offset: 4992)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1995, file: !995, line: 542, baseType: !73, size: 32, offset: 5024)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1995, file: !995, line: 545, baseType: !713, size: 32, offset: 5056)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1995, file: !995, line: 545, baseType: !713, size: 32, offset: 5088)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1995, file: !995, line: 545, baseType: !713, size: 32, offset: 5120)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1995, file: !995, line: 548, baseType: !713, size: 32, offset: 5152)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1995, file: !995, line: 551, baseType: !632, size: 16, offset: 5184)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1995, file: !995, line: 551, baseType: !632, size: 16, offset: 5200)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1995, file: !995, line: 551, baseType: !632, size: 16, offset: 5216)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1995, file: !995, line: 551, baseType: !632, size: 16, offset: 5232)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1995, file: !995, line: 552, baseType: !632, size: 16, offset: 5248)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1995, file: !995, line: 552, baseType: !632, size: 16, offset: 5264)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1995, file: !995, line: 553, baseType: !713, size: 32, offset: 5280)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1995, file: !995, line: 553, baseType: !713, size: 32, offset: 5312)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1995, file: !995, line: 554, baseType: !632, size: 16, offset: 5344)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1995, file: !995, line: 554, baseType: !632, size: 16, offset: 5360)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1995, file: !995, line: 555, baseType: !713, size: 32, offset: 5376)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1995, file: !995, line: 555, baseType: !713, size: 32, offset: 5408)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1995, file: !995, line: 558, baseType: !618, size: 8192, offset: 5440)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1995, file: !995, line: 561, baseType: !73, size: 32, offset: 13632)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1995, file: !995, line: 562, baseType: !632, size: 16, offset: 13664)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1995, file: !995, line: 562, baseType: !632, size: 16, offset: 13680)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1995, file: !995, line: 565, baseType: !1266, size: 6144, offset: 13696)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1995, file: !995, line: 568, baseType: !916, size: 128, offset: 19840)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1995, file: !995, line: 569, baseType: !916, size: 128, offset: 19968)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1995, file: !995, line: 572, baseType: !619, size: 8, offset: 20096)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1995, file: !995, line: 573, baseType: !619, size: 8, offset: 20104)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1995, file: !995, line: 574, baseType: !619, size: 8, offset: 20112)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1995, file: !995, line: 575, baseType: !1845, size: 40, offset: 20120)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1995, file: !995, line: 578, baseType: !73, size: 32, offset: 20160)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1995, file: !995, line: 579, baseType: !632, size: 16, offset: 20192)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1995, file: !995, line: 580, baseType: !632, size: 16, offset: 20208)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1995, file: !995, line: 581, baseType: !713, size: 32, offset: 20224)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1995, file: !995, line: 582, baseType: !713, size: 32, offset: 20256)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1995, file: !995, line: 585, baseType: !632, size: 16, offset: 20288)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1995, file: !995, line: 585, baseType: !632, size: 16, offset: 20304)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1995, file: !995, line: 586, baseType: !713, size: 32, offset: 20320)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1995, file: !995, line: 589, baseType: !632, size: 16, offset: 20352)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1995, file: !995, line: 589, baseType: !632, size: 16, offset: 20368)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1995, file: !995, line: 590, baseType: !73, size: 32, offset: 20384)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1995, file: !995, line: 593, baseType: !632, size: 16, offset: 20416)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1995, file: !995, line: 593, baseType: !632, size: 16, offset: 20432)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1995, file: !995, line: 594, baseType: !632, size: 16, offset: 20448)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1995, file: !995, line: 594, baseType: !632, size: 16, offset: 20464)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1995, file: !995, line: 595, baseType: !713, size: 32, offset: 20480)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1995, file: !995, line: 596, baseType: !713, size: 32, offset: 20512)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1995, file: !995, line: 597, baseType: !2218, size: 64, offset: 20544)
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64)
!2219 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !343, line: 205, flags: DIFlagFwdDecl)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1995, file: !995, line: 600, baseType: !73, size: 32, offset: 20608)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1995, file: !995, line: 601, baseType: !713, size: 32, offset: 20640)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1995, file: !995, line: 604, baseType: !780, size: 256, offset: 20672)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1995, file: !995, line: 607, baseType: !2224, size: 10880, offset: 20928)
!2224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !995, line: 364, size: 10880, elements: !2225)
!2225 = !{!2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2224, file: !995, line: 365, baseType: !1998, size: 1984)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2224, file: !995, line: 367, baseType: !618, size: 8192, offset: 1984)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2224, file: !995, line: 369, baseType: !632, size: 16, offset: 10176)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2224, file: !995, line: 369, baseType: !632, size: 16, offset: 10192)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2224, file: !995, line: 370, baseType: !632, size: 16, offset: 10208)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2224, file: !995, line: 370, baseType: !632, size: 16, offset: 10224)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2224, file: !995, line: 372, baseType: !713, size: 32, offset: 10240)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2224, file: !995, line: 373, baseType: !713, size: 32, offset: 10272)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2224, file: !995, line: 375, baseType: !1608, size: 24, offset: 10304)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2224, file: !995, line: 376, baseType: !619, size: 8, offset: 10328)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2224, file: !995, line: 378, baseType: !619, size: 8, offset: 10336)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2224, file: !995, line: 379, baseType: !1608, size: 24, offset: 10344)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2224, file: !995, line: 381, baseType: !648, size: 512, offset: 10368)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1995, file: !995, line: 609, baseType: !73, size: 32, offset: 31808)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1995, file: !995, line: 610, baseType: !73, size: 32, offset: 31840)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !994, file: !995, line: 1252, baseType: !2242, size: 256, offset: 34112)
!2242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !995, line: 158, size: 256, elements: !2243)
!2243 = !{!2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2242, file: !995, line: 159, baseType: !73, size: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2242, file: !995, line: 160, baseType: !713, size: 32, offset: 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2242, file: !995, line: 161, baseType: !713, size: 32, offset: 64)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2242, file: !995, line: 162, baseType: !713, size: 32, offset: 96)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2242, file: !995, line: 163, baseType: !73, size: 32, offset: 128)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2242, file: !995, line: 164, baseType: !632, size: 16, offset: 160)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2242, file: !995, line: 165, baseType: !632, size: 16, offset: 176)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2242, file: !995, line: 166, baseType: !713, size: 32, offset: 192)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2242, file: !995, line: 167, baseType: !713, size: 32, offset: 224)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !994, file: !995, line: 1254, baseType: !658, size: 128, offset: 34368)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !994, file: !995, line: 1255, baseType: !658, size: 128, offset: 34496)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !994, file: !995, line: 1257, baseType: !592, size: 64, offset: 34624)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !994, file: !995, line: 1258, baseType: !592, size: 64, offset: 34688)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !994, file: !995, line: 1259, baseType: !592, size: 64, offset: 34752)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !994, file: !995, line: 1260, baseType: !592, size: 64, offset: 34816)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !994, file: !995, line: 1262, baseType: !592, size: 64, offset: 34880)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !994, file: !995, line: 1265, baseType: !2261, size: 64, offset: 34944)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 64)
!2262 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !995, line: 1265, flags: DIFlagFwdDecl)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !994, file: !995, line: 1266, baseType: !632, size: 16, offset: 35008)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !994, file: !995, line: 1267, baseType: !632, size: 16, offset: 35024)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !994, file: !995, line: 1270, baseType: !73, size: 32, offset: 35040)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !994, file: !995, line: 1271, baseType: !658, size: 128, offset: 35072)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !994, file: !995, line: 1274, baseType: !2268, size: 128, offset: 35200)
!2268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !995, line: 650, size: 128, elements: !2269)
!2269 = !{!2270, !2271, !2272, !2273, !2274}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2268, file: !995, line: 651, baseType: !835, size: 96)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2268, file: !995, line: 652, baseType: !619, size: 8, offset: 96)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2268, file: !995, line: 652, baseType: !619, size: 8, offset: 104)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2268, file: !995, line: 652, baseType: !619, size: 8, offset: 112)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2268, file: !995, line: 652, baseType: !619, size: 8, offset: 120)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !994, file: !995, line: 1275, baseType: !2276, size: 1472, offset: 35328)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !995, line: 676, size: 1472, elements: !2277)
!2277 = !{!2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2290, !2300, !2301, !2302, !2303, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2276, file: !995, line: 679, baseType: !2268, size: 128)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2276, file: !995, line: 680, baseType: !632, size: 16, offset: 128)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2276, file: !995, line: 680, baseType: !632, size: 16, offset: 144)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2276, file: !995, line: 680, baseType: !632, size: 16, offset: 160)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2276, file: !995, line: 680, baseType: !632, size: 16, offset: 176)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2276, file: !995, line: 681, baseType: !632, size: 16, offset: 192)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2276, file: !995, line: 681, baseType: !632, size: 16, offset: 208)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2276, file: !995, line: 681, baseType: !632, size: 16, offset: 224)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2276, file: !995, line: 681, baseType: !632, size: 16, offset: 240)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2276, file: !995, line: 682, baseType: !632, size: 16, offset: 256)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2276, file: !995, line: 682, baseType: !2289, size: 48, offset: 272)
!2289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !632, size: 48, elements: !836)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2276, file: !995, line: 685, baseType: !2291, size: 192, offset: 320)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !995, line: 633, size: 192, elements: !2292)
!2292 = !{!2293, !2294, !2295, !2296, !2297, !2298, !2299}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2291, file: !995, line: 634, baseType: !632, size: 16)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2291, file: !995, line: 634, baseType: !632, size: 16, offset: 16)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2291, file: !995, line: 635, baseType: !632, size: 16, offset: 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2291, file: !995, line: 635, baseType: !632, size: 16, offset: 48)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2291, file: !995, line: 636, baseType: !713, size: 32, offset: 64)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2291, file: !995, line: 636, baseType: !713, size: 32, offset: 96)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2291, file: !995, line: 637, baseType: !2218, size: 64, offset: 128)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2276, file: !995, line: 686, baseType: !632, size: 16, offset: 512)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2276, file: !995, line: 686, baseType: !632, size: 16, offset: 528)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2276, file: !995, line: 687, baseType: !713, size: 32, offset: 544)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2276, file: !995, line: 688, baseType: !2304, size: 448, offset: 576)
!2304 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !995, line: 674, baseType: !2305)
!2305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !995, line: 659, size: 448, elements: !2306)
!2306 = !{!2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2305, file: !995, line: 660, baseType: !713, size: 32)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2305, file: !995, line: 661, baseType: !713, size: 32, offset: 32)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2305, file: !995, line: 662, baseType: !713, size: 32, offset: 64)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2305, file: !995, line: 663, baseType: !713, size: 32, offset: 96)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2305, file: !995, line: 664, baseType: !713, size: 32, offset: 128)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2305, file: !995, line: 665, baseType: !713, size: 32, offset: 160)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2305, file: !995, line: 666, baseType: !713, size: 32, offset: 192)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2305, file: !995, line: 667, baseType: !713, size: 32, offset: 224)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2305, file: !995, line: 668, baseType: !713, size: 32, offset: 256)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2305, file: !995, line: 669, baseType: !713, size: 32, offset: 288)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2305, file: !995, line: 670, baseType: !73, size: 32, offset: 320)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2305, file: !995, line: 671, baseType: !713, size: 32, offset: 352)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2305, file: !995, line: 672, baseType: !713, size: 32, offset: 384)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2305, file: !995, line: 673, baseType: !632, size: 16, offset: 416)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2305, file: !995, line: 673, baseType: !632, size: 16, offset: 432)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2276, file: !995, line: 692, baseType: !713, size: 32, offset: 1024)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2276, file: !995, line: 697, baseType: !713, size: 32, offset: 1056)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2276, file: !995, line: 703, baseType: !73, size: 32, offset: 1088)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2276, file: !995, line: 704, baseType: !632, size: 16, offset: 1120)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2276, file: !995, line: 704, baseType: !632, size: 16, offset: 1136)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2276, file: !995, line: 705, baseType: !632, size: 16, offset: 1152)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2276, file: !995, line: 706, baseType: !632, size: 16, offset: 1168)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2276, file: !995, line: 707, baseType: !632, size: 16, offset: 1184)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2276, file: !995, line: 708, baseType: !632, size: 16, offset: 1200)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2276, file: !995, line: 709, baseType: !632, size: 16, offset: 1216)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2276, file: !995, line: 709, baseType: !632, size: 16, offset: 1232)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2276, file: !995, line: 709, baseType: !632, size: 16, offset: 1248)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2276, file: !995, line: 709, baseType: !632, size: 16, offset: 1264)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2276, file: !995, line: 710, baseType: !632, size: 16, offset: 1280)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2276, file: !995, line: 711, baseType: !632, size: 16, offset: 1296)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2276, file: !995, line: 712, baseType: !713, size: 32, offset: 1312)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2276, file: !995, line: 713, baseType: !713, size: 32, offset: 1344)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2276, file: !995, line: 713, baseType: !713, size: 32, offset: 1376)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2276, file: !995, line: 713, baseType: !713, size: 32, offset: 1408)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2276, file: !995, line: 713, baseType: !713, size: 32, offset: 1440)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !994, file: !995, line: 1278, baseType: !2343, size: 64, offset: 36800)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !995, line: 1197, size: 64, elements: !2344)
!2344 = !{!2345, !2346, !2347, !2348}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2343, file: !995, line: 1199, baseType: !713, size: 32)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2343, file: !995, line: 1200, baseType: !619, size: 8, offset: 32)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2343, file: !995, line: 1201, baseType: !619, size: 8, offset: 40)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2343, file: !995, line: 1202, baseType: !632, size: 16, offset: 48)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !994, file: !995, line: 1281, baseType: !1114, size: 64, offset: 36864)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !994, file: !995, line: 1284, baseType: !2351, size: 192, offset: 36928)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !995, line: 1208, size: 192, elements: !2352)
!2352 = !{!2353, !2354, !2355, !2356}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2351, file: !995, line: 1209, baseType: !835, size: 96)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2351, file: !995, line: 1210, baseType: !73, size: 32, offset: 96)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2351, file: !995, line: 1210, baseType: !73, size: 32, offset: 128)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2351, file: !995, line: 1210, baseType: !73, size: 32, offset: 160)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !994, file: !995, line: 1287, baseType: !1320, size: 64, offset: 37120)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !994, file: !995, line: 1289, baseType: !2359, size: 64, offset: 37184)
!2359 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !2360, line: 27, baseType: !2361)
!2360 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!2361 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !2362, line: 45, baseType: !2363)
!2362 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2363 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !994, file: !995, line: 1290, baseType: !2359, size: 64, offset: 37248)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !994, file: !995, line: 1293, baseType: !2018, size: 1280, offset: 37312)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !994, file: !995, line: 1294, baseType: !2030, size: 512, offset: 38592)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !994, file: !995, line: 1295, baseType: !1311, size: 512, offset: 39104)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !994, file: !995, line: 1298, baseType: !2369, size: 64, offset: 39616)
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 64)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !2371, line: 49, size: 704, elements: !2372)
!2371 = !DIFile(filename: "blender/source/blender/makesdna/DNA_rigidbody_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2372 = !{!2373, !2395, !2396, !2398, !2399, !2400, !2401, !3617, !3618, !3619, !3620, !3621, !3622, !3623}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !2370, file: !2371, line: 51, baseType: !2374, size: 64)
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 64)
!2375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EffectorWeights", file: !2376, line: 118, size: 640, elements: !2377)
!2376 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_force.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2377 = !{!2378, !2387, !2391, !2392, !2393, !2394}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2375, file: !2376, line: 119, baseType: !2379, size: 64)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 64)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !2381, line: 51, size: 1216, elements: !2382)
!2381 = !DIFile(filename: "blender/source/blender/makesdna/DNA_group_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2382 = !{!2383, !2384, !2385, !2386}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2380, file: !2381, line: 52, baseType: !599, size: 960)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "gobject", scope: !2380, file: !2381, line: 54, baseType: !658, size: 128, offset: 960)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !2380, file: !2381, line: 59, baseType: !7, size: 32, offset: 1088)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "dupli_ofs", scope: !2380, file: !2381, line: 60, baseType: !835, size: 96, offset: 1120)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2375, file: !2376, line: 121, baseType: !2388, size: 448, offset: 64)
!2388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, size: 448, elements: !2389)
!2389 = !{!2390}
!2390 = !DISubrange(count: 14)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "global_gravity", scope: !2375, file: !2376, line: 122, baseType: !713, size: 32, offset: 512)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2375, file: !2376, line: 123, baseType: !632, size: 16, offset: 544)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2375, file: !2376, line: 123, baseType: !2289, size: 48, offset: 560)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2375, file: !2376, line: 124, baseType: !73, size: 32, offset: 608)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2370, file: !2371, line: 53, baseType: !2379, size: 64, offset: 64)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2370, file: !2371, line: 54, baseType: !2397, size: 64, offset: 128)
!2397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !2370, file: !2371, line: 56, baseType: !2379, size: 64, offset: 192)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2370, file: !2371, line: 58, baseType: !73, size: 32, offset: 256)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !2370, file: !2371, line: 59, baseType: !713, size: 32, offset: 288)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "pointcache", scope: !2370, file: !2371, line: 62, baseType: !2402, size: 64, offset: 320)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 64)
!2403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointCache", file: !2376, line: 170, size: 10560, elements: !2404)
!2404 = !{!2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !3616}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2403, file: !2376, line: 171, baseType: !2402, size: 64)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2403, file: !2376, line: 171, baseType: !2402, size: 64, offset: 64)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2403, file: !2376, line: 172, baseType: !73, size: 32, offset: 128)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2403, file: !2376, line: 174, baseType: !73, size: 32, offset: 160)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "simframe", scope: !2403, file: !2376, line: 186, baseType: !73, size: 32, offset: 192)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "startframe", scope: !2403, file: !2376, line: 187, baseType: !73, size: 32, offset: 224)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "endframe", scope: !2403, file: !2376, line: 188, baseType: !73, size: 32, offset: 256)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "editframe", scope: !2403, file: !2376, line: 189, baseType: !73, size: 32, offset: 288)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "last_exact", scope: !2403, file: !2376, line: 190, baseType: !73, size: 32, offset: 320)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "last_valid", scope: !2403, file: !2376, line: 191, baseType: !73, size: 32, offset: 352)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2403, file: !2376, line: 192, baseType: !73, size: 32, offset: 384)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !2403, file: !2376, line: 195, baseType: !73, size: 32, offset: 416)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2403, file: !2376, line: 196, baseType: !73, size: 32, offset: 448)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !2403, file: !2376, line: 197, baseType: !632, size: 16, offset: 480)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2403, file: !2376, line: 197, baseType: !632, size: 16, offset: 496)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2403, file: !2376, line: 199, baseType: !648, size: 512, offset: 512)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "prev_name", scope: !2403, file: !2376, line: 200, baseType: !648, size: 512, offset: 1024)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2403, file: !2376, line: 201, baseType: !648, size: 512, offset: 1536)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !2403, file: !2376, line: 202, baseType: !618, size: 8192, offset: 2048)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "cached_frames", scope: !2403, file: !2376, line: 203, baseType: !1164, size: 64, offset: 10240)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "mem_cache", scope: !2403, file: !2376, line: 205, baseType: !660, size: 128, offset: 10304)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "edit", scope: !2403, file: !2376, line: 207, baseType: !2427, size: 64, offset: 10432)
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 64)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEdit", file: !2429, line: 235, size: 2560, elements: !2430)
!2429 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_pointcache.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2430 = !{!2431, !2432, !2522, !2525, !2682, !3603, !3604, !3605, !3606, !3607, !3608, !3609, !3610, !3611, !3612, !3613, !3615}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "undo", scope: !2428, file: !2429, line: 236, baseType: !658, size: 128)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "curundo", scope: !2428, file: !2429, line: 237, baseType: !2433, size: 64, offset: 128)
!2433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 64)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheUndo", file: !2429, line: 218, size: 1152, elements: !2435)
!2435 = !{!2436, !2437, !2438, !2456, !2513, !2517, !2518, !2519, !2520, !2521}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2434, file: !2429, line: 219, baseType: !2433, size: 64)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2434, file: !2429, line: 219, baseType: !2433, size: 64, offset: 64)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !2434, file: !2429, line: 220, baseType: !2439, size: 64, offset: 128)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 64)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEditPoint", file: !2429, line: 212, size: 128, elements: !2441)
!2441 = !{!2442, !2454, !2455}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2440, file: !2429, line: 213, baseType: !2443, size: 64)
!2443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 64)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEditKey", file: !2429, line: 194, size: 448, elements: !2445)
!2445 = !{!2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2444, file: !2429, line: 195, baseType: !1073, size: 64)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !2444, file: !2429, line: 196, baseType: !1073, size: 64, offset: 64)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !2444, file: !2429, line: 197, baseType: !1073, size: 64, offset: 128)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2444, file: !2429, line: 198, baseType: !1073, size: 64, offset: 192)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "world_co", scope: !2444, file: !2429, line: 200, baseType: !835, size: 96, offset: 256)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "ftime", scope: !2444, file: !2429, line: 201, baseType: !713, size: 32, offset: 352)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2444, file: !2429, line: 202, baseType: !713, size: 32, offset: 384)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2444, file: !2429, line: 203, baseType: !632, size: 16, offset: 416)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !2440, file: !2429, line: 214, baseType: !73, size: 32, offset: 64)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2440, file: !2429, line: 215, baseType: !632, size: 16, offset: 96)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "particles", scope: !2434, file: !2429, line: 223, baseType: !2457, size: 64, offset: 192)
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 64)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleData", file: !2459, line: 95, size: 1600, elements: !2460)
!2459 = !DIFile(filename: "blender/source/blender/makesdna/DNA_particle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2460 = !{!2461, !2470, !2471, !2481, !2483, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2458, file: !2459, line: 96, baseType: !2462, size: 448)
!2462 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleKey", file: !2459, line: 55, baseType: !2463)
!2463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleKey", file: !2459, line: 49, size: 448, elements: !2464)
!2464 = !{!2465, !2466, !2467, !2468, !2469}
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2463, file: !2459, line: 50, baseType: !835, size: 96)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !2463, file: !2459, line: 51, baseType: !835, size: 96, offset: 96)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !2463, file: !2459, line: 52, baseType: !916, size: 128, offset: 192)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "ave", scope: !2463, file: !2459, line: 53, baseType: !835, size: 96, offset: 320)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2463, file: !2459, line: 54, baseType: !713, size: 32, offset: 416)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "prev_state", scope: !2458, file: !2459, line: 98, baseType: !2462, size: 448, offset: 448)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "hair", scope: !2458, file: !2459, line: 100, baseType: !2472, size: 64, offset: 896)
!2472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2473, size: 64)
!2473 = !DIDerivedType(tag: DW_TAG_typedef, name: "HairKey", file: !2459, line: 47, baseType: !2474)
!2474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HairKey", file: !2459, line: 41, size: 192, elements: !2475)
!2475 = !{!2476, !2477, !2478, !2479, !2480}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2474, file: !2459, line: 42, baseType: !835, size: 96)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2474, file: !2459, line: 43, baseType: !713, size: 32, offset: 96)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2474, file: !2459, line: 44, baseType: !713, size: 32, offset: 128)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !2474, file: !2459, line: 45, baseType: !632, size: 16, offset: 160)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2474, file: !2459, line: 46, baseType: !632, size: 16, offset: 176)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2458, file: !2459, line: 102, baseType: !2482, size: 64, offset: 960)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2462, size: 64)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "boid", scope: !2458, file: !2459, line: 104, baseType: !2484, size: 64, offset: 1024)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 64)
!2485 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoidParticle", file: !2459, line: 63, baseType: !2486)
!2486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidParticle", file: !2459, line: 57, size: 448, elements: !2487)
!2487 = !{!2488, !2489, !2496, !2497, !2498}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "ground", scope: !2486, file: !2459, line: 58, baseType: !966, size: 64)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2486, file: !2459, line: 59, baseType: !2490, size: 160, offset: 64)
!2490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidData", file: !191, line: 109, size: 160, elements: !2491)
!2491 = !{!2492, !2493, !2494, !2495}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !2490, file: !191, line: 110, baseType: !713, size: 32)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "acc", scope: !2490, file: !191, line: 110, baseType: !835, size: 96, offset: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "state_id", scope: !2490, file: !191, line: 111, baseType: !632, size: 16, offset: 128)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2490, file: !191, line: 111, baseType: !632, size: 16, offset: 144)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2486, file: !2459, line: 60, baseType: !835, size: 96, offset: 224)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "wander", scope: !2486, file: !2459, line: 61, baseType: !835, size: 96, offset: 320)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2486, file: !2459, line: 62, baseType: !713, size: 32, offset: 416)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !2458, file: !2459, line: 106, baseType: !73, size: 32, offset: 1088)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2458, file: !2459, line: 108, baseType: !713, size: 32, offset: 1120)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !2458, file: !2459, line: 108, baseType: !713, size: 32, offset: 1152)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "dietime", scope: !2458, file: !2459, line: 109, baseType: !713, size: 32, offset: 1184)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2458, file: !2459, line: 111, baseType: !73, size: 32, offset: 1216)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "num_dmcache", scope: !2458, file: !2459, line: 112, baseType: !73, size: 32, offset: 1248)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "fuv", scope: !2458, file: !2459, line: 114, baseType: !916, size: 128, offset: 1280)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "foffset", scope: !2458, file: !2459, line: 114, baseType: !713, size: 32, offset: 1408)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2458, file: !2459, line: 117, baseType: !713, size: 32, offset: 1440)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "sphdensity", scope: !2458, file: !2459, line: 119, baseType: !713, size: 32, offset: 1472)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2458, file: !2459, line: 120, baseType: !73, size: 32, offset: 1504)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "hair_index", scope: !2458, file: !2459, line: 122, baseType: !73, size: 32, offset: 1536)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2458, file: !2459, line: 123, baseType: !632, size: 16, offset: 1568)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "alive", scope: !2458, file: !2459, line: 124, baseType: !632, size: 16, offset: 1584)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_field", scope: !2434, file: !2429, line: 224, baseType: !2514, size: 64, offset: 256)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 64)
!2515 = !DICompositeType(tag: DW_TAG_structure_type, name: "KDTree", file: !2516, line: 36, flags: DIFlagFwdDecl)
!2516 = !DIFile(filename: "blender/source/blender/blenlib/BLI_kdtree.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_cosnos", scope: !2434, file: !2429, line: 225, baseType: !1073, size: 64, offset: 320)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "psys_flag", scope: !2434, file: !2429, line: 226, baseType: !73, size: 32, offset: 384)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "mem_cache", scope: !2434, file: !2429, line: 229, baseType: !660, size: 128, offset: 448)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !2434, file: !2429, line: 231, baseType: !73, size: 32, offset: 576)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2434, file: !2429, line: 232, baseType: !648, size: 512, offset: 608)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !2428, file: !2429, line: 238, baseType: !2523, size: 64, offset: 192)
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 64)
!2524 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTCacheEditPoint", file: !2429, line: 216, baseType: !2440)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2428, file: !2429, line: 240, baseType: !2526, size: 1600, offset: 256)
!2526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheID", file: !2429, line: 122, size: 1600, elements: !2527)
!2527 = !{!2528, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2546, !2550, !2554, !2636, !2637, !2653, !2657, !2661, !2665, !2671, !2672, !2676, !2677, !2678, !2680}
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2526, file: !2429, line: 123, baseType: !2529, size: 64)
!2529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2526, size: 64)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2526, file: !2429, line: 123, baseType: !2529, size: 64, offset: 64)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2526, file: !2429, line: 125, baseType: !993, size: 64, offset: 128)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2526, file: !2429, line: 126, baseType: !966, size: 64, offset: 192)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "calldata", scope: !2526, file: !2429, line: 127, baseType: !592, size: 64, offset: 256)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2526, file: !2429, line: 128, baseType: !7, size: 32, offset: 320)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !2526, file: !2429, line: 129, baseType: !7, size: 32, offset: 352)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2526, file: !2429, line: 130, baseType: !7, size: 32, offset: 384)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "default_step", scope: !2526, file: !2429, line: 132, baseType: !7, size: 32, offset: 416)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "max_step", scope: !2526, file: !2429, line: 133, baseType: !7, size: 32, offset: 448)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "data_types", scope: !2526, file: !2429, line: 136, baseType: !7, size: 32, offset: 480)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "info_types", scope: !2526, file: !2429, line: 136, baseType: !7, size: 32, offset: 512)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "write_point", scope: !2526, file: !2429, line: 139, baseType: !2542, size: 64, offset: 576)
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2543, size: 64)
!2543 = !DISubroutineType(types: !2544)
!2544 = !{!73, !73, !592, !2545, !73}
!2545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 64)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "read_point", scope: !2526, file: !2429, line: 141, baseType: !2547, size: 64, offset: 640)
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2548, size: 64)
!2548 = !DISubroutineType(types: !2549)
!2549 = !{null, !73, !592, !2545, !713, !1073}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate_point", scope: !2526, file: !2429, line: 143, baseType: !2551, size: 64, offset: 704)
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 64)
!2552 = !DISubroutineType(types: !2553)
!2553 = !{null, !73, !592, !2545, !713, !713, !713, !1073}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "write_stream", scope: !2526, file: !2429, line: 146, baseType: !2555, size: 64, offset: 768)
!2555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2556, size: 64)
!2556 = !DISubroutineType(types: !2557)
!2557 = !{!73, !2558, !592}
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2559, size: 64)
!2559 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTCacheFile", file: !2429, line: 118, baseType: !2560)
!2560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheFile", file: !2429, line: 109, size: 1536, elements: !2561)
!2561 = !{!2562, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2634}
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "fp", scope: !2560, file: !2429, line: 110, baseType: !2563, size: 64)
!2563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2564, size: 64)
!2564 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2565, line: 7, baseType: !2566)
!2565 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2567, line: 49, size: 1728, elements: !2568)
!2567 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2568 = !{!2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2584, !2586, !2587, !2588, !2591, !2593, !2595, !2596, !2599, !2601, !2604, !2607, !2608, !2609, !2612, !2613}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2566, file: !2567, line: 51, baseType: !73, size: 32)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2566, file: !2567, line: 54, baseType: !1164, size: 64, offset: 64)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2566, file: !2567, line: 55, baseType: !1164, size: 64, offset: 128)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2566, file: !2567, line: 56, baseType: !1164, size: 64, offset: 192)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2566, file: !2567, line: 57, baseType: !1164, size: 64, offset: 256)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2566, file: !2567, line: 58, baseType: !1164, size: 64, offset: 320)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2566, file: !2567, line: 59, baseType: !1164, size: 64, offset: 384)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2566, file: !2567, line: 60, baseType: !1164, size: 64, offset: 448)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2566, file: !2567, line: 61, baseType: !1164, size: 64, offset: 512)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2566, file: !2567, line: 64, baseType: !1164, size: 64, offset: 576)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2566, file: !2567, line: 65, baseType: !1164, size: 64, offset: 640)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2566, file: !2567, line: 66, baseType: !1164, size: 64, offset: 704)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2566, file: !2567, line: 68, baseType: !2582, size: 64, offset: 768)
!2582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2583, size: 64)
!2583 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2567, line: 36, flags: DIFlagFwdDecl)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2566, file: !2567, line: 70, baseType: !2585, size: 64, offset: 832)
!2585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2566, size: 64)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2566, file: !2567, line: 72, baseType: !73, size: 32, offset: 896)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2566, file: !2567, line: 73, baseType: !73, size: 32, offset: 928)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2566, file: !2567, line: 74, baseType: !2589, size: 64, offset: 960)
!2589 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2362, line: 152, baseType: !2590)
!2590 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2566, file: !2567, line: 77, baseType: !2592, size: 16, offset: 1024)
!2592 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2566, file: !2567, line: 78, baseType: !2594, size: 8, offset: 1040)
!2594 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2566, file: !2567, line: 79, baseType: !933, size: 8, offset: 1048)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2566, file: !2567, line: 81, baseType: !2597, size: 64, offset: 1088)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 64)
!2598 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2567, line: 43, baseType: null)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2566, file: !2567, line: 89, baseType: !2600, size: 64, offset: 1152)
!2600 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2362, line: 153, baseType: !2590)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2566, file: !2567, line: 91, baseType: !2602, size: 64, offset: 1216)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2603, size: 64)
!2603 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2567, line: 37, flags: DIFlagFwdDecl)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2566, file: !2567, line: 92, baseType: !2605, size: 64, offset: 1280)
!2605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2606, size: 64)
!2606 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2567, line: 38, flags: DIFlagFwdDecl)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2566, file: !2567, line: 93, baseType: !2585, size: 64, offset: 1344)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2566, file: !2567, line: 94, baseType: !592, size: 64, offset: 1408)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2566, file: !2567, line: 95, baseType: !2610, size: 64, offset: 1472)
!2610 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2611, line: 46, baseType: !2363)
!2611 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2566, file: !2567, line: 96, baseType: !73, size: 32, offset: 1536)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2566, file: !2567, line: 98, baseType: !2614, size: 160, offset: 1568)
!2614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 160, elements: !2615)
!2615 = !{!2616}
!2616 = !DISubrange(count: 20)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !2560, file: !2429, line: 112, baseType: !73, size: 32, offset: 64)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "old_format", scope: !2560, file: !2429, line: 112, baseType: !73, size: 32, offset: 96)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !2560, file: !2429, line: 113, baseType: !7, size: 32, offset: 128)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2560, file: !2429, line: 113, baseType: !7, size: 32, offset: 160)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "data_types", scope: !2560, file: !2429, line: 114, baseType: !7, size: 32, offset: 192)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2560, file: !2429, line: 114, baseType: !7, size: 32, offset: 224)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2560, file: !2429, line: 116, baseType: !2624, size: 736, offset: 256)
!2624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheData", file: !2429, line: 98, size: 736, elements: !2625)
!2625 = !{!2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2624, file: !2429, line: 99, baseType: !7, size: 32)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !2624, file: !2429, line: 100, baseType: !835, size: 96, offset: 32)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !2624, file: !2429, line: 101, baseType: !835, size: 96, offset: 128)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !2624, file: !2429, line: 102, baseType: !916, size: 128, offset: 224)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "ave", scope: !2624, file: !2429, line: 103, baseType: !835, size: 96, offset: 352)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2624, file: !2429, line: 104, baseType: !713, size: 32, offset: 448)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !2624, file: !2429, line: 105, baseType: !835, size: 96, offset: 480)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "boids", scope: !2624, file: !2429, line: 106, baseType: !2490, size: 160, offset: 576)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2560, file: !2429, line: 117, baseType: !2635, size: 512, offset: 1024)
!2635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !592, size: 512, elements: !1504)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "read_stream", scope: !2526, file: !2429, line: 148, baseType: !2555, size: 64, offset: 832)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "write_extra_data", scope: !2526, file: !2429, line: 151, baseType: !2638, size: 64, offset: 896)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2639, size: 64)
!2639 = !DISubroutineType(types: !2640)
!2640 = !{null, !592, !2641, !73}
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2642, size: 64)
!2642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheMem", file: !2376, line: 159, size: 1408, elements: !2643)
!2643 = !{!2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2642, file: !2376, line: 160, baseType: !2641, size: 64)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2642, file: !2376, line: 160, baseType: !2641, size: 64, offset: 64)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !2642, file: !2376, line: 161, baseType: !7, size: 32, offset: 128)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !2642, file: !2376, line: 161, baseType: !7, size: 32, offset: 160)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "data_types", scope: !2642, file: !2376, line: 162, baseType: !7, size: 32, offset: 192)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2642, file: !2376, line: 162, baseType: !7, size: 32, offset: 224)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2642, file: !2376, line: 164, baseType: !2635, size: 512, offset: 256)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2642, file: !2376, line: 165, baseType: !2635, size: 512, offset: 768)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !2642, file: !2376, line: 167, baseType: !660, size: 128, offset: 1280)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "read_extra_data", scope: !2526, file: !2429, line: 153, baseType: !2654, size: 64, offset: 960)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 64)
!2655 = !DISubroutineType(types: !2656)
!2656 = !{null, !592, !2641, !713}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate_extra_data", scope: !2526, file: !2429, line: 155, baseType: !2658, size: 64, offset: 1024)
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 64)
!2659 = !DISubroutineType(types: !2660)
!2660 = !{null, !592, !2641, !713, !713, !713}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !2526, file: !2429, line: 158, baseType: !2662, size: 64, offset: 1088)
!2662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 64)
!2663 = !DISubroutineType(types: !2664)
!2664 = !{!73, !592, !73}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2526, file: !2429, line: 160, baseType: !2666, size: 64, offset: 1152)
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 64)
!2667 = !DISubroutineType(types: !2668)
!2668 = !{null, !592, !2669}
!2669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2670, size: 64)
!2670 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !619)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "totwrite", scope: !2526, file: !2429, line: 162, baseType: !2662, size: 64, offset: 1216)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "write_header", scope: !2526, file: !2429, line: 164, baseType: !2673, size: 64, offset: 1280)
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 64)
!2674 = !DISubroutineType(types: !2675)
!2675 = !{!73, !2558}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "read_header", scope: !2526, file: !2429, line: 165, baseType: !2673, size: 64, offset: 1344)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2526, file: !2429, line: 167, baseType: !2402, size: 64, offset: 1408)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "cache_ptr", scope: !2526, file: !2429, line: 169, baseType: !2679, size: 64, offset: 1472)
!2679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 64)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !2526, file: !2429, line: 170, baseType: !2681, size: 64, offset: 1536)
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !2428, file: !2429, line: 243, baseType: !2683, size: 64, offset: 1856)
!2683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2684, size: 64)
!2684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSystem", file: !2459, line: 253, size: 5248, elements: !2685)
!2685 = !{!2686, !2687, !2688, !3076, !3079, !3092, !3093, !3097, !3109, !3110, !3111, !3112, !3129, !3531, !3532, !3533, !3537, !3538, !3539, !3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3559, !3563, !3564, !3565, !3566, !3567, !3568, !3569, !3577, !3578, !3579, !3580, !3584, !3601, !3602}
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2684, file: !2459, line: 257, baseType: !2683, size: 64)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2684, file: !2459, line: 257, baseType: !2683, size: 64, offset: 64)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2684, file: !2459, line: 259, baseType: !2689, size: 64, offset: 128)
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 64)
!2690 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSettings", file: !2459, line: 251, baseType: !2691)
!2691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSettings", file: !2459, line: 153, size: 6400, elements: !2692)
!2692 = !{!2693, !2694, !2695, !2722, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !3073, !3074, !3075}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2691, file: !2459, line: 154, baseType: !599, size: 960)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2691, file: !2459, line: 155, baseType: !669, size: 64, offset: 960)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "boids", scope: !2691, file: !2459, line: 157, baseType: !2696, size: 64, offset: 1024)
!2696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2697, size: 64)
!2697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidSettings", file: !191, line: 189, size: 832, elements: !2698)
!2698 = !{!2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !2697, file: !191, line: 190, baseType: !73, size: 32)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "last_state_id", scope: !2697, file: !191, line: 190, baseType: !73, size: 32, offset: 32)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "landing_smoothness", scope: !2697, file: !191, line: 192, baseType: !713, size: 32, offset: 64)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2697, file: !191, line: 192, baseType: !713, size: 32, offset: 96)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "banking", scope: !2697, file: !191, line: 193, baseType: !713, size: 32, offset: 128)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !2697, file: !191, line: 193, baseType: !713, size: 32, offset: 160)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !2697, file: !191, line: 195, baseType: !713, size: 32, offset: 192)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "aggression", scope: !2697, file: !191, line: 195, baseType: !713, size: 32, offset: 224)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !2697, file: !191, line: 196, baseType: !713, size: 32, offset: 256)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "accuracy", scope: !2697, file: !191, line: 196, baseType: !713, size: 32, offset: 288)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2697, file: !191, line: 196, baseType: !713, size: 32, offset: 320)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "air_min_speed", scope: !2697, file: !191, line: 199, baseType: !713, size: 32, offset: 352)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_speed", scope: !2697, file: !191, line: 199, baseType: !713, size: 32, offset: 384)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_acc", scope: !2697, file: !191, line: 200, baseType: !713, size: 32, offset: 416)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_ave", scope: !2697, file: !191, line: 200, baseType: !713, size: 32, offset: 448)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "air_personal_space", scope: !2697, file: !191, line: 201, baseType: !713, size: 32, offset: 480)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "land_jump_speed", scope: !2697, file: !191, line: 204, baseType: !713, size: 32, offset: 512)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_speed", scope: !2697, file: !191, line: 204, baseType: !713, size: 32, offset: 544)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_acc", scope: !2697, file: !191, line: 205, baseType: !713, size: 32, offset: 576)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_ave", scope: !2697, file: !191, line: 205, baseType: !713, size: 32, offset: 608)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "land_personal_space", scope: !2697, file: !191, line: 206, baseType: !713, size: 32, offset: 640)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "land_stick_force", scope: !2697, file: !191, line: 207, baseType: !713, size: 32, offset: 672)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !2697, file: !191, line: 209, baseType: !660, size: 128, offset: 704)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "fluid", scope: !2691, file: !2459, line: 158, baseType: !2723, size: 64, offset: 1088)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SPHFluidSettings", file: !2459, line: 127, size: 544, elements: !2725)
!2725 = !{!2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !2724, file: !2459, line: 129, baseType: !713, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "spring_k", scope: !2724, file: !2459, line: 129, baseType: !713, size: 32, offset: 32)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "rest_length", scope: !2724, file: !2459, line: 129, baseType: !713, size: 32, offset: 64)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "plasticity_constant", scope: !2724, file: !2459, line: 130, baseType: !713, size: 32, offset: 96)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "yield_ratio", scope: !2724, file: !2459, line: 130, baseType: !713, size: 32, offset: 128)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "plasticity_balance", scope: !2724, file: !2459, line: 131, baseType: !713, size: 32, offset: 160)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "yield_balance", scope: !2724, file: !2459, line: 131, baseType: !713, size: 32, offset: 192)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "viscosity_omega", scope: !2724, file: !2459, line: 132, baseType: !713, size: 32, offset: 224)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "viscosity_beta", scope: !2724, file: !2459, line: 132, baseType: !713, size: 32, offset: 256)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness_k", scope: !2724, file: !2459, line: 133, baseType: !713, size: 32, offset: 288)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness_knear", scope: !2724, file: !2459, line: 133, baseType: !713, size: 32, offset: 320)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "rest_density", scope: !2724, file: !2459, line: 133, baseType: !713, size: 32, offset: 352)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "buoyancy", scope: !2724, file: !2459, line: 134, baseType: !713, size: 32, offset: 384)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2724, file: !2459, line: 135, baseType: !73, size: 32, offset: 416)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "spring_frames", scope: !2724, file: !2459, line: 135, baseType: !73, size: 32, offset: 448)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "solver", scope: !2724, file: !2459, line: 136, baseType: !632, size: 16, offset: 480)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2724, file: !2459, line: 137, baseType: !2289, size: 48, offset: 496)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !2691, file: !2459, line: 160, baseType: !2374, size: 64, offset: 1152)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2691, file: !2459, line: 162, baseType: !73, size: 32, offset: 1216)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2691, file: !2459, line: 162, baseType: !73, size: 32, offset: 1248)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2691, file: !2459, line: 163, baseType: !632, size: 16, offset: 1280)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !2691, file: !2459, line: 163, baseType: !632, size: 16, offset: 1296)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "distr", scope: !2691, file: !2459, line: 163, baseType: !632, size: 16, offset: 1312)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !2691, file: !2459, line: 163, baseType: !632, size: 16, offset: 1328)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "phystype", scope: !2691, file: !2459, line: 165, baseType: !632, size: 16, offset: 1344)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !2691, file: !2459, line: 165, baseType: !632, size: 16, offset: 1360)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "avemode", scope: !2691, file: !2459, line: 165, baseType: !632, size: 16, offset: 1376)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "reactevent", scope: !2691, file: !2459, line: 165, baseType: !632, size: 16, offset: 1392)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !2691, file: !2459, line: 166, baseType: !73, size: 32, offset: 1408)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2691, file: !2459, line: 166, baseType: !73, size: 32, offset: 1440)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "draw_as", scope: !2691, file: !2459, line: 167, baseType: !632, size: 16, offset: 1472)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "draw_size", scope: !2691, file: !2459, line: 167, baseType: !632, size: 16, offset: 1488)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "childtype", scope: !2691, file: !2459, line: 167, baseType: !632, size: 16, offset: 1504)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2691, file: !2459, line: 167, baseType: !632, size: 16, offset: 1520)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "ren_as", scope: !2691, file: !2459, line: 168, baseType: !632, size: 16, offset: 1536)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "subframes", scope: !2691, file: !2459, line: 168, baseType: !632, size: 16, offset: 1552)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "draw_col", scope: !2691, file: !2459, line: 168, baseType: !632, size: 16, offset: 1568)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !2691, file: !2459, line: 170, baseType: !632, size: 16, offset: 1584)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "ren_step", scope: !2691, file: !2459, line: 170, baseType: !632, size: 16, offset: 1600)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "hair_step", scope: !2691, file: !2459, line: 171, baseType: !632, size: 16, offset: 1616)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "keys_step", scope: !2691, file: !2459, line: 171, baseType: !632, size: 16, offset: 1632)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_angle", scope: !2691, file: !2459, line: 174, baseType: !632, size: 16, offset: 1648)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_pix", scope: !2691, file: !2459, line: 174, baseType: !632, size: 16, offset: 1664)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !2691, file: !2459, line: 176, baseType: !632, size: 16, offset: 1680)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "omat", scope: !2691, file: !2459, line: 176, baseType: !632, size: 16, offset: 1696)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "interpolation", scope: !2691, file: !2459, line: 176, baseType: !632, size: 16, offset: 1712)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "integrator", scope: !2691, file: !2459, line: 176, baseType: !632, size: 16, offset: 1728)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "rotfrom", scope: !2691, file: !2459, line: 177, baseType: !632, size: 16, offset: 1744)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "kink", scope: !2691, file: !2459, line: 178, baseType: !632, size: 16, offset: 1760)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "kink_axis", scope: !2691, file: !2459, line: 178, baseType: !632, size: 16, offset: 1776)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "bb_align", scope: !2691, file: !2459, line: 181, baseType: !632, size: 16, offset: 1792)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "bb_uv_split", scope: !2691, file: !2459, line: 181, baseType: !632, size: 16, offset: 1808)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "bb_anim", scope: !2691, file: !2459, line: 181, baseType: !632, size: 16, offset: 1824)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "bb_split_offset", scope: !2691, file: !2459, line: 181, baseType: !632, size: 16, offset: 1840)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "bb_tilt", scope: !2691, file: !2459, line: 182, baseType: !713, size: 32, offset: 1856)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "bb_rand_tilt", scope: !2691, file: !2459, line: 182, baseType: !713, size: 32, offset: 1888)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "bb_offset", scope: !2691, file: !2459, line: 182, baseType: !1118, size: 64, offset: 1920)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "bb_size", scope: !2691, file: !2459, line: 182, baseType: !1118, size: 64, offset: 1984)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "bb_vel_head", scope: !2691, file: !2459, line: 182, baseType: !713, size: 32, offset: 2048)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "bb_vel_tail", scope: !2691, file: !2459, line: 182, baseType: !713, size: 32, offset: 2080)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "color_vec_max", scope: !2691, file: !2459, line: 185, baseType: !713, size: 32, offset: 2112)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2691, file: !2459, line: 188, baseType: !632, size: 16, offset: 2144)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_refsize", scope: !2691, file: !2459, line: 188, baseType: !632, size: 16, offset: 2160)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_rate", scope: !2691, file: !2459, line: 189, baseType: !713, size: 32, offset: 2176)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_transition", scope: !2691, file: !2459, line: 189, baseType: !713, size: 32, offset: 2208)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_viewport", scope: !2691, file: !2459, line: 190, baseType: !713, size: 32, offset: 2240)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "sta", scope: !2691, file: !2459, line: 193, baseType: !713, size: 32, offset: 2272)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2691, file: !2459, line: 193, baseType: !713, size: 32, offset: 2304)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !2691, file: !2459, line: 193, baseType: !713, size: 32, offset: 2336)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "randlife", scope: !2691, file: !2459, line: 193, baseType: !713, size: 32, offset: 2368)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "timetweak", scope: !2691, file: !2459, line: 194, baseType: !713, size: 32, offset: 2400)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "courant_target", scope: !2691, file: !2459, line: 194, baseType: !713, size: 32, offset: 2432)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "jitfac", scope: !2691, file: !2459, line: 195, baseType: !713, size: 32, offset: 2464)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "eff_hair", scope: !2691, file: !2459, line: 195, baseType: !713, size: 32, offset: 2496)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "grid_rand", scope: !2691, file: !2459, line: 195, baseType: !713, size: 32, offset: 2528)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "ps_offset", scope: !2691, file: !2459, line: 195, baseType: !2802, size: 32, offset: 2560)
!2802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, size: 32, elements: !934)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !2691, file: !2459, line: 196, baseType: !73, size: 32, offset: 2592)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "userjit", scope: !2691, file: !2459, line: 196, baseType: !73, size: 32, offset: 2624)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "grid_res", scope: !2691, file: !2459, line: 196, baseType: !73, size: 32, offset: 2656)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "effector_amount", scope: !2691, file: !2459, line: 196, baseType: !73, size: 32, offset: 2688)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "time_flag", scope: !2691, file: !2459, line: 197, baseType: !632, size: 16, offset: 2720)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "time_pad", scope: !2691, file: !2459, line: 197, baseType: !2289, size: 48, offset: 2736)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "normfac", scope: !2691, file: !2459, line: 200, baseType: !713, size: 32, offset: 2784)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "obfac", scope: !2691, file: !2459, line: 200, baseType: !713, size: 32, offset: 2816)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "randfac", scope: !2691, file: !2459, line: 200, baseType: !713, size: 32, offset: 2848)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "partfac", scope: !2691, file: !2459, line: 200, baseType: !713, size: 32, offset: 2880)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "tanfac", scope: !2691, file: !2459, line: 200, baseType: !713, size: 32, offset: 2912)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "tanphase", scope: !2691, file: !2459, line: 200, baseType: !713, size: 32, offset: 2944)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "reactfac", scope: !2691, file: !2459, line: 200, baseType: !713, size: 32, offset: 2976)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "ob_vel", scope: !2691, file: !2459, line: 201, baseType: !835, size: 96, offset: 3008)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "avefac", scope: !2691, file: !2459, line: 202, baseType: !713, size: 32, offset: 3104)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "phasefac", scope: !2691, file: !2459, line: 202, baseType: !713, size: 32, offset: 3136)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "randrotfac", scope: !2691, file: !2459, line: 202, baseType: !713, size: 32, offset: 3168)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "randphasefac", scope: !2691, file: !2459, line: 202, baseType: !713, size: 32, offset: 3200)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !2691, file: !2459, line: 204, baseType: !713, size: 32, offset: 3232)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2691, file: !2459, line: 204, baseType: !713, size: 32, offset: 3264)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "randsize", scope: !2691, file: !2459, line: 204, baseType: !713, size: 32, offset: 3296)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "acc", scope: !2691, file: !2459, line: 206, baseType: !835, size: 96, offset: 3328)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "dragfac", scope: !2691, file: !2459, line: 206, baseType: !713, size: 32, offset: 3424)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "brownfac", scope: !2691, file: !2459, line: 206, baseType: !713, size: 32, offset: 3456)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !2691, file: !2459, line: 206, baseType: !713, size: 32, offset: 3488)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "randlength", scope: !2691, file: !2459, line: 208, baseType: !713, size: 32, offset: 3520)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "child_nbr", scope: !2691, file: !2459, line: 210, baseType: !73, size: 32, offset: 3552)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "ren_child_nbr", scope: !2691, file: !2459, line: 210, baseType: !73, size: 32, offset: 3584)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "parents", scope: !2691, file: !2459, line: 211, baseType: !713, size: 32, offset: 3616)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "childsize", scope: !2691, file: !2459, line: 211, baseType: !713, size: 32, offset: 3648)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "childrandsize", scope: !2691, file: !2459, line: 211, baseType: !713, size: 32, offset: 3680)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "childrad", scope: !2691, file: !2459, line: 212, baseType: !713, size: 32, offset: 3712)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "childflat", scope: !2691, file: !2459, line: 212, baseType: !713, size: 32, offset: 3744)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !2691, file: !2459, line: 214, baseType: !713, size: 32, offset: 3776)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "clumppow", scope: !2691, file: !2459, line: 214, baseType: !713, size: 32, offset: 3808)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp", scope: !2691, file: !2459, line: 216, baseType: !713, size: 32, offset: 3840)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "kink_freq", scope: !2691, file: !2459, line: 216, baseType: !713, size: 32, offset: 3872)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "kink_shape", scope: !2691, file: !2459, line: 216, baseType: !713, size: 32, offset: 3904)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "kink_flat", scope: !2691, file: !2459, line: 216, baseType: !713, size: 32, offset: 3936)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp_clump", scope: !2691, file: !2459, line: 217, baseType: !713, size: 32, offset: 3968)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "rough1", scope: !2691, file: !2459, line: 219, baseType: !713, size: 32, offset: 4000)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "rough1_size", scope: !2691, file: !2459, line: 219, baseType: !713, size: 32, offset: 4032)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "rough2", scope: !2691, file: !2459, line: 220, baseType: !713, size: 32, offset: 4064)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "rough2_size", scope: !2691, file: !2459, line: 220, baseType: !713, size: 32, offset: 4096)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "rough2_thres", scope: !2691, file: !2459, line: 220, baseType: !713, size: 32, offset: 4128)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "rough_end", scope: !2691, file: !2459, line: 221, baseType: !713, size: 32, offset: 4160)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "rough_end_shape", scope: !2691, file: !2459, line: 221, baseType: !713, size: 32, offset: 4192)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "clength", scope: !2691, file: !2459, line: 223, baseType: !713, size: 32, offset: 4224)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "clength_thres", scope: !2691, file: !2459, line: 223, baseType: !713, size: 32, offset: 4256)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "parting_fac", scope: !2691, file: !2459, line: 225, baseType: !713, size: 32, offset: 4288)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "parting_min", scope: !2691, file: !2459, line: 226, baseType: !713, size: 32, offset: 4320)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "parting_max", scope: !2691, file: !2459, line: 226, baseType: !713, size: 32, offset: 4352)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "branch_thres", scope: !2691, file: !2459, line: 228, baseType: !713, size: 32, offset: 4384)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "draw_line", scope: !2691, file: !2459, line: 230, baseType: !1118, size: 64, offset: 4416)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "path_start", scope: !2691, file: !2459, line: 231, baseType: !713, size: 32, offset: 4480)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "path_end", scope: !2691, file: !2459, line: 231, baseType: !713, size: 32, offset: 4512)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "trail_count", scope: !2691, file: !2459, line: 232, baseType: !73, size: 32, offset: 4544)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "keyed_loops", scope: !2691, file: !2459, line: 234, baseType: !73, size: 32, offset: 4576)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !2691, file: !2459, line: 236, baseType: !957, size: 1152, offset: 4608)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !2691, file: !2459, line: 238, baseType: !2379, size: 64, offset: 5760)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "dupliweights", scope: !2691, file: !2459, line: 239, baseType: !660, size: 128, offset: 5824)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "eff_group", scope: !2691, file: !2459, line: 240, baseType: !2379, size: 64, offset: 5952)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "dup_ob", scope: !2691, file: !2459, line: 241, baseType: !966, size: 64, offset: 6016)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "bb_ob", scope: !2691, file: !2459, line: 242, baseType: !966, size: 64, offset: 6080)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2691, file: !2459, line: 243, baseType: !749, size: 64, offset: 6144)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !2691, file: !2459, line: 244, baseType: !2869, size: 64, offset: 6208)
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 64)
!2870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !2376, line: 61, size: 1280, elements: !2871)
!2871 = !{!2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !3066, !3070, !3071, !3072}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2870, file: !2376, line: 62, baseType: !73, size: 32)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "deflect", scope: !2870, file: !2376, line: 63, baseType: !632, size: 16, offset: 32)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "forcefield", scope: !2870, file: !2376, line: 64, baseType: !632, size: 16, offset: 48)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "falloff", scope: !2870, file: !2376, line: 65, baseType: !632, size: 16, offset: 64)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !2870, file: !2376, line: 66, baseType: !632, size: 16, offset: 80)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mode", scope: !2870, file: !2376, line: 67, baseType: !632, size: 16, offset: 96)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "kink", scope: !2870, file: !2376, line: 68, baseType: !632, size: 16, offset: 112)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "kink_axis", scope: !2870, file: !2376, line: 68, baseType: !632, size: 16, offset: 128)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "zdir", scope: !2870, file: !2376, line: 69, baseType: !632, size: 16, offset: 144)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "f_strength", scope: !2870, file: !2376, line: 72, baseType: !713, size: 32, offset: 160)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "f_damp", scope: !2870, file: !2376, line: 73, baseType: !713, size: 32, offset: 192)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "f_flow", scope: !2870, file: !2376, line: 74, baseType: !713, size: 32, offset: 224)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "f_size", scope: !2870, file: !2376, line: 77, baseType: !713, size: 32, offset: 256)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "f_power", scope: !2870, file: !2376, line: 80, baseType: !713, size: 32, offset: 288)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "maxdist", scope: !2870, file: !2376, line: 81, baseType: !713, size: 32, offset: 320)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "mindist", scope: !2870, file: !2376, line: 82, baseType: !713, size: 32, offset: 352)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "f_power_r", scope: !2870, file: !2376, line: 83, baseType: !713, size: 32, offset: 384)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "maxrad", scope: !2870, file: !2376, line: 84, baseType: !713, size: 32, offset: 416)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "minrad", scope: !2870, file: !2376, line: 85, baseType: !713, size: 32, offset: 448)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_damp", scope: !2870, file: !2376, line: 88, baseType: !713, size: 32, offset: 480)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_rdamp", scope: !2870, file: !2376, line: 89, baseType: !713, size: 32, offset: 512)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_perm", scope: !2870, file: !2376, line: 90, baseType: !713, size: 32, offset: 544)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_frict", scope: !2870, file: !2376, line: 91, baseType: !713, size: 32, offset: 576)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_rfrict", scope: !2870, file: !2376, line: 92, baseType: !713, size: 32, offset: 608)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_stickness", scope: !2870, file: !2376, line: 93, baseType: !713, size: 32, offset: 640)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "absorption", scope: !2870, file: !2376, line: 95, baseType: !713, size: 32, offset: 672)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sbdamp", scope: !2870, file: !2376, line: 98, baseType: !713, size: 32, offset: 704)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sbift", scope: !2870, file: !2376, line: 99, baseType: !713, size: 32, offset: 736)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sboft", scope: !2870, file: !2376, line: 100, baseType: !713, size: 32, offset: 768)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "clump_fac", scope: !2870, file: !2376, line: 103, baseType: !713, size: 32, offset: 800)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "clump_pow", scope: !2870, file: !2376, line: 103, baseType: !713, size: 32, offset: 832)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "kink_freq", scope: !2870, file: !2376, line: 104, baseType: !713, size: 32, offset: 864)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "kink_shape", scope: !2870, file: !2376, line: 104, baseType: !713, size: 32, offset: 896)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp", scope: !2870, file: !2376, line: 104, baseType: !713, size: 32, offset: 928)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "free_end", scope: !2870, file: !2376, line: 104, baseType: !713, size: 32, offset: 960)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "tex_nabla", scope: !2870, file: !2376, line: 107, baseType: !713, size: 32, offset: 992)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !2870, file: !2376, line: 108, baseType: !2909, size: 64, offset: 1024)
!2909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2910, size: 64)
!2910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !751, line: 202, size: 3328, elements: !2911)
!2911 = !{!2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2980, !2981, !2982, !2983, !2984, !3006, !3007, !3036, !3056, !3064, !3065}
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2910, file: !751, line: 203, baseType: !599, size: 960)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2910, file: !751, line: 204, baseType: !669, size: 64, offset: 960)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !2910, file: !751, line: 206, baseType: !713, size: 32, offset: 1024)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !2910, file: !751, line: 206, baseType: !713, size: 32, offset: 1056)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !2910, file: !751, line: 207, baseType: !713, size: 32, offset: 1088)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !2910, file: !751, line: 207, baseType: !713, size: 32, offset: 1120)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !2910, file: !751, line: 207, baseType: !713, size: 32, offset: 1152)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !2910, file: !751, line: 207, baseType: !713, size: 32, offset: 1184)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !2910, file: !751, line: 207, baseType: !713, size: 32, offset: 1216)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !2910, file: !751, line: 207, baseType: !713, size: 32, offset: 1248)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !2910, file: !751, line: 208, baseType: !713, size: 32, offset: 1280)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2910, file: !751, line: 208, baseType: !713, size: 32, offset: 1312)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !2910, file: !751, line: 211, baseType: !713, size: 32, offset: 1344)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !2910, file: !751, line: 211, baseType: !713, size: 32, offset: 1376)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !2910, file: !751, line: 211, baseType: !713, size: 32, offset: 1408)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !2910, file: !751, line: 211, baseType: !713, size: 32, offset: 1440)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !2910, file: !751, line: 211, baseType: !713, size: 32, offset: 1472)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !2910, file: !751, line: 214, baseType: !713, size: 32, offset: 1504)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !2910, file: !751, line: 214, baseType: !713, size: 32, offset: 1536)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !2910, file: !751, line: 217, baseType: !713, size: 32, offset: 1568)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !2910, file: !751, line: 218, baseType: !713, size: 32, offset: 1600)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !2910, file: !751, line: 219, baseType: !713, size: 32, offset: 1632)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !2910, file: !751, line: 220, baseType: !713, size: 32, offset: 1664)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !2910, file: !751, line: 221, baseType: !713, size: 32, offset: 1696)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !2910, file: !751, line: 222, baseType: !632, size: 16, offset: 1728)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !2910, file: !751, line: 222, baseType: !632, size: 16, offset: 1744)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !2910, file: !751, line: 224, baseType: !632, size: 16, offset: 1760)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !2910, file: !751, line: 224, baseType: !632, size: 16, offset: 1776)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !2910, file: !751, line: 227, baseType: !632, size: 16, offset: 1792)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !2910, file: !751, line: 227, baseType: !632, size: 16, offset: 1808)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !2910, file: !751, line: 229, baseType: !632, size: 16, offset: 1824)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2910, file: !751, line: 229, baseType: !632, size: 16, offset: 1840)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2910, file: !751, line: 230, baseType: !632, size: 16, offset: 1856)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !2910, file: !751, line: 230, baseType: !632, size: 16, offset: 1872)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !2910, file: !751, line: 232, baseType: !713, size: 32, offset: 1888)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !2910, file: !751, line: 232, baseType: !713, size: 32, offset: 1920)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !2910, file: !751, line: 232, baseType: !713, size: 32, offset: 1952)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !2910, file: !751, line: 232, baseType: !713, size: 32, offset: 1984)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !2910, file: !751, line: 233, baseType: !73, size: 32, offset: 2016)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !2910, file: !751, line: 234, baseType: !73, size: 32, offset: 2048)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !2910, file: !751, line: 235, baseType: !632, size: 16, offset: 2080)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !2910, file: !751, line: 235, baseType: !632, size: 16, offset: 2096)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !2910, file: !751, line: 236, baseType: !632, size: 16, offset: 2112)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !2910, file: !751, line: 239, baseType: !632, size: 16, offset: 2128)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2910, file: !751, line: 240, baseType: !73, size: 32, offset: 2144)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !2910, file: !751, line: 241, baseType: !73, size: 32, offset: 2176)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2910, file: !751, line: 241, baseType: !73, size: 32, offset: 2208)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2910, file: !751, line: 241, baseType: !73, size: 32, offset: 2240)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !2910, file: !751, line: 243, baseType: !713, size: 32, offset: 2272)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !2910, file: !751, line: 243, baseType: !713, size: 32, offset: 2304)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2910, file: !751, line: 244, baseType: !713, size: 32, offset: 2336)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !2910, file: !751, line: 246, baseType: !2964, size: 320, offset: 2368)
!2964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !1279, line: 50, size: 320, elements: !2965)
!2965 = !{!2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2964, file: !1279, line: 51, baseType: !993, size: 64)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2964, file: !1279, line: 53, baseType: !73, size: 32, offset: 64)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !2964, file: !1279, line: 54, baseType: !73, size: 32, offset: 96)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2964, file: !1279, line: 55, baseType: !73, size: 32, offset: 128)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2964, file: !1279, line: 55, baseType: !73, size: 32, offset: 160)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !2964, file: !1279, line: 56, baseType: !619, size: 8, offset: 192)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !2964, file: !1279, line: 56, baseType: !619, size: 8, offset: 200)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2964, file: !1279, line: 57, baseType: !619, size: 8, offset: 208)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2964, file: !1279, line: 57, baseType: !619, size: 8, offset: 216)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !2964, file: !1279, line: 59, baseType: !632, size: 16, offset: 224)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !2964, file: !1279, line: 59, baseType: !632, size: 16, offset: 240)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2964, file: !1279, line: 59, baseType: !632, size: 16, offset: 256)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2964, file: !1279, line: 61, baseType: !632, size: 16, offset: 272)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2964, file: !1279, line: 63, baseType: !73, size: 32, offset: 288)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2910, file: !751, line: 248, baseType: !1100, size: 64, offset: 2688)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2910, file: !751, line: 249, baseType: !749, size: 64, offset: 2752)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2910, file: !751, line: 250, baseType: !1489, size: 64, offset: 2816)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !2910, file: !751, line: 251, baseType: !924, size: 64, offset: 2880)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !2910, file: !751, line: 252, baseType: !2985, size: 64, offset: 2944)
!2985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2986, size: 64)
!2986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !751, line: 122, size: 1600, elements: !2987)
!2987 = !{!2988, !2989, !2990, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005}
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2986, file: !751, line: 123, baseType: !966, size: 64)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2986, file: !751, line: 124, baseType: !1489, size: 64, offset: 64)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !2986, file: !751, line: 125, baseType: !2991, size: 384, offset: 128)
!2991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1686, size: 384, elements: !2015)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !2986, file: !751, line: 126, baseType: !1404, size: 512, offset: 512)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !2986, file: !751, line: 127, baseType: !1708, size: 288, offset: 1024)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2986, file: !751, line: 128, baseType: !632, size: 16, offset: 1312)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !2986, file: !751, line: 128, baseType: !632, size: 16, offset: 1328)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !2986, file: !751, line: 129, baseType: !713, size: 32, offset: 1344)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !2986, file: !751, line: 129, baseType: !713, size: 32, offset: 1376)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !2986, file: !751, line: 130, baseType: !713, size: 32, offset: 1408)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !2986, file: !751, line: 131, baseType: !7, size: 32, offset: 1440)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !2986, file: !751, line: 132, baseType: !632, size: 16, offset: 1472)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2986, file: !751, line: 132, baseType: !632, size: 16, offset: 1488)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2986, file: !751, line: 133, baseType: !73, size: 32, offset: 1504)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !2986, file: !751, line: 133, baseType: !73, size: 32, offset: 1536)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !2986, file: !751, line: 134, baseType: !632, size: 16, offset: 1568)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !2986, file: !751, line: 134, baseType: !632, size: 16, offset: 1584)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2910, file: !751, line: 253, baseType: !1084, size: 64, offset: 3008)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !2910, file: !751, line: 254, baseType: !3008, size: 64, offset: 3072)
!3008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3009, size: 64)
!3009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !751, line: 137, size: 832, elements: !3010)
!3010 = !{!3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035}
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3009, file: !751, line: 138, baseType: !632, size: 16)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !3009, file: !751, line: 140, baseType: !632, size: 16, offset: 16)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !3009, file: !751, line: 141, baseType: !713, size: 32, offset: 32)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !3009, file: !751, line: 142, baseType: !713, size: 32, offset: 64)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !3009, file: !751, line: 143, baseType: !632, size: 16, offset: 96)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !3009, file: !751, line: 144, baseType: !632, size: 16, offset: 112)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !3009, file: !751, line: 145, baseType: !73, size: 32, offset: 128)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !3009, file: !751, line: 147, baseType: !73, size: 32, offset: 160)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3009, file: !751, line: 149, baseType: !966, size: 64, offset: 192)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !3009, file: !751, line: 150, baseType: !73, size: 32, offset: 256)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !3009, file: !751, line: 151, baseType: !632, size: 16, offset: 288)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !3009, file: !751, line: 152, baseType: !632, size: 16, offset: 304)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !3009, file: !751, line: 154, baseType: !592, size: 64, offset: 320)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !3009, file: !751, line: 155, baseType: !1073, size: 64, offset: 384)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !3009, file: !751, line: 157, baseType: !713, size: 32, offset: 448)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !3009, file: !751, line: 158, baseType: !632, size: 16, offset: 480)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !3009, file: !751, line: 159, baseType: !632, size: 16, offset: 496)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !3009, file: !751, line: 160, baseType: !632, size: 16, offset: 512)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !3009, file: !751, line: 161, baseType: !2289, size: 48, offset: 528)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !3009, file: !751, line: 162, baseType: !713, size: 32, offset: 576)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !3009, file: !751, line: 164, baseType: !713, size: 32, offset: 608)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !3009, file: !751, line: 164, baseType: !713, size: 32, offset: 640)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !3009, file: !751, line: 164, baseType: !713, size: 32, offset: 672)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !3009, file: !751, line: 165, baseType: !924, size: 64, offset: 704)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !3009, file: !751, line: 167, baseType: !1644, size: 64, offset: 768)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !2910, file: !751, line: 255, baseType: !3037, size: 64, offset: 3136)
!3037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3038, size: 64)
!3038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !751, line: 170, size: 8704, elements: !3039)
!3039 = !{!3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055}
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !3038, file: !751, line: 171, baseType: !1819, size: 96)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !3038, file: !751, line: 172, baseType: !73, size: 32, offset: 96)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !3038, file: !751, line: 173, baseType: !632, size: 16, offset: 128)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3038, file: !751, line: 174, baseType: !632, size: 16, offset: 144)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !3038, file: !751, line: 175, baseType: !632, size: 16, offset: 160)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !3038, file: !751, line: 176, baseType: !632, size: 16, offset: 176)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !3038, file: !751, line: 177, baseType: !632, size: 16, offset: 192)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3038, file: !751, line: 178, baseType: !632, size: 16, offset: 208)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !3038, file: !751, line: 179, baseType: !73, size: 32, offset: 224)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3038, file: !751, line: 181, baseType: !966, size: 64, offset: 256)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !3038, file: !751, line: 182, baseType: !713, size: 32, offset: 320)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !3038, file: !751, line: 183, baseType: !73, size: 32, offset: 352)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !3038, file: !751, line: 184, baseType: !618, size: 8192, offset: 384)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !3038, file: !751, line: 187, baseType: !1073, size: 64, offset: 8576)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !3038, file: !751, line: 188, baseType: !73, size: 32, offset: 8640)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !3038, file: !751, line: 189, baseType: !73, size: 32, offset: 8672)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !2910, file: !751, line: 256, baseType: !3057, size: 64, offset: 3200)
!3057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3058, size: 64)
!3058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !751, line: 193, size: 640, elements: !3059)
!3059 = !{!3060, !3061, !3062, !3063}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !3058, file: !751, line: 194, baseType: !966, size: 64)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !3058, file: !751, line: 195, baseType: !648, size: 512, offset: 64)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !3058, file: !751, line: 197, baseType: !73, size: 32, offset: 576)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3058, file: !751, line: 198, baseType: !73, size: 32, offset: 608)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !2910, file: !751, line: 258, baseType: !619, size: 8, offset: 3264)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2910, file: !751, line: 259, baseType: !1537, size: 56, offset: 3272)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "rng", scope: !2870, file: !2376, line: 111, baseType: !3067, size: 64, offset: 1088)
!3067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3068, size: 64)
!3068 = !DICompositeType(tag: DW_TAG_structure_type, name: "RNG", file: !3069, line: 43, flags: DIFlagFwdDecl)
!3069 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_effect.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "f_noise", scope: !2870, file: !2376, line: 112, baseType: !713, size: 32, offset: 1152)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !2870, file: !2376, line: 113, baseType: !73, size: 32, offset: 1184)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "f_source", scope: !2870, file: !2376, line: 115, baseType: !966, size: 64, offset: 1216)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "pd2", scope: !2691, file: !2459, line: 245, baseType: !2869, size: 64, offset: 6272)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "use_modifier_stack", scope: !2691, file: !2459, line: 248, baseType: !632, size: 16, offset: 6336)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2691, file: !2459, line: 249, baseType: !2289, size: 48, offset: 6352)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "particles", scope: !2684, file: !2459, line: 261, baseType: !3077, size: 64, offset: 192)
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 64)
!3078 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleData", file: !2459, line: 125, baseType: !2458)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2684, file: !2459, line: 262, baseType: !3080, size: 64, offset: 256)
!3080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3081, size: 64)
!3081 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChildParticle", file: !2459, line: 77, baseType: !3082)
!3082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChildParticle", file: !2459, line: 71, size: 512, elements: !3083)
!3083 = !{!3084, !3085, !3086, !3088, !3089, !3090, !3091}
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3082, file: !2459, line: 72, baseType: !73, size: 32)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3082, file: !2459, line: 72, baseType: !73, size: 32, offset: 32)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "pa", scope: !3082, file: !2459, line: 73, baseType: !3087, size: 128, offset: 64)
!3087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !73, size: 128, elements: !917)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !3082, file: !2459, line: 74, baseType: !916, size: 128, offset: 192)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "fuv", scope: !3082, file: !2459, line: 75, baseType: !916, size: 128, offset: 320)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "foffset", scope: !3082, file: !2459, line: 75, baseType: !713, size: 32, offset: 448)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3082, file: !2459, line: 76, baseType: !713, size: 32, offset: 480)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "edit", scope: !2684, file: !2459, line: 264, baseType: !2427, size: 64, offset: 320)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "free_edit", scope: !2684, file: !2459, line: 265, baseType: !3094, size: 64, offset: 384)
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3095, size: 64)
!3095 = !DISubroutineType(types: !3096)
!3096 = !{null, !2427}
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "pathcache", scope: !2684, file: !2459, line: 267, baseType: !3098, size: 64, offset: 448)
!3098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3099, size: 64)
!3099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3100, size: 64)
!3100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleCacheKey", file: !3101, line: 123, size: 480, elements: !3102)
!3101 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_particle.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3102 = !{!3103, !3104, !3105, !3106, !3107, !3108}
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3100, file: !3101, line: 124, baseType: !835, size: 96)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !3100, file: !3101, line: 125, baseType: !835, size: 96, offset: 96)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !3100, file: !3101, line: 126, baseType: !916, size: 128, offset: 192)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !3100, file: !3101, line: 127, baseType: !835, size: 96, offset: 320)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !3100, file: !3101, line: 128, baseType: !713, size: 32, offset: 416)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "steps", scope: !3100, file: !3101, line: 129, baseType: !73, size: 32, offset: 448)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "childcache", scope: !2684, file: !2459, line: 268, baseType: !3098, size: 64, offset: 512)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "pathcachebufs", scope: !2684, file: !2459, line: 269, baseType: !658, size: 128, offset: 576)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "childcachebufs", scope: !2684, file: !2459, line: 269, baseType: !658, size: 128, offset: 704)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "clmd", scope: !2684, file: !2459, line: 271, baseType: !3113, size: 64, offset: 832)
!3113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3114, size: 64)
!3114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ClothModifierData", file: !128, line: 557, size: 1344, elements: !3115)
!3115 = !{!3116, !3117, !3118, !3121, !3124, !3127, !3128}
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !3114, file: !128, line: 558, baseType: !981, size: 896)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3114, file: !128, line: 560, baseType: !993, size: 64, offset: 896)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "clothObject", scope: !3114, file: !128, line: 561, baseType: !3119, size: 64, offset: 960)
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3120, size: 64)
!3120 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cloth", file: !128, line: 561, flags: DIFlagFwdDecl)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "sim_parms", scope: !3114, file: !128, line: 562, baseType: !3122, size: 64, offset: 1024)
!3122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3123, size: 64)
!3123 = !DICompositeType(tag: DW_TAG_structure_type, name: "ClothSimSettings", file: !128, line: 562, flags: DIFlagFwdDecl)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "coll_parms", scope: !3114, file: !128, line: 563, baseType: !3125, size: 64, offset: 1088)
!3125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3126, size: 64)
!3126 = !DICompositeType(tag: DW_TAG_structure_type, name: "ClothCollSettings", file: !128, line: 563, flags: DIFlagFwdDecl)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "point_cache", scope: !3114, file: !128, line: 564, baseType: !2402, size: 64, offset: 1152)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !3114, file: !128, line: 565, baseType: !660, size: 128, offset: 1216)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "hair_in_dm", scope: !2684, file: !2459, line: 272, baseType: !3130, size: 64, offset: 896)
!3130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3131, size: 64)
!3131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !6, line: 178, size: 13504, elements: !3132)
!3132 = !{!3133, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3188, !3191, !3193, !3194, !3196, !3197, !3198, !3199, !3205, !3210, !3211, !3215, !3216, !3217, !3218, !3219, !3230, !3242, !3256, !3260, !3264, !3268, !3277, !3289, !3293, !3297, !3301, !3305, !3309, !3310, !3311, !3312, !3313, !3314, !3318, !3319, !3320, !3321, !3325, !3326, !3327, !3328, !3329, !3334, !3335, !3336, !3337, !3338, !3342, !3343, !3344, !3345, !3346, !3354, !3364, !3369, !3375, !3385, !3390, !3401, !3408, !3415, !3419, !3423, !3427, !3432, !3433, !3434, !3441, !3447, !3448, !3449, !3453, !3454, !3463, !3488, !3492, !3500, !3504, !3508, !3512, !3520, !3530}
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "vertData", scope: !3131, file: !6, line: 180, baseType: !3134, size: 1600)
!3134 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !444, line: 73, baseType: !3135)
!3135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !444, line: 64, size: 1600, elements: !3136)
!3136 = !{!3137, !3152, !3156, !3157, !3158, !3159, !3162}
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !3135, file: !444, line: 65, baseType: !3138, size: 64)
!3138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3139, size: 64)
!3139 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !444, line: 53, baseType: !3140)
!3140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !444, line: 42, size: 832, elements: !3141)
!3141 = !{!3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151}
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3140, file: !444, line: 43, baseType: !73, size: 32)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3140, file: !444, line: 44, baseType: !73, size: 32, offset: 32)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3140, file: !444, line: 45, baseType: !73, size: 32, offset: 64)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3140, file: !444, line: 46, baseType: !73, size: 32, offset: 96)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !3140, file: !444, line: 47, baseType: !73, size: 32, offset: 128)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !3140, file: !444, line: 48, baseType: !73, size: 32, offset: 160)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !3140, file: !444, line: 49, baseType: !73, size: 32, offset: 192)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3140, file: !444, line: 50, baseType: !73, size: 32, offset: 224)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3140, file: !444, line: 51, baseType: !648, size: 512, offset: 256)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3140, file: !444, line: 52, baseType: !592, size: 64, offset: 768)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !3135, file: !444, line: 66, baseType: !3153, size: 1312, offset: 64)
!3153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !73, size: 1312, elements: !3154)
!3154 = !{!3155}
!3155 = !DISubrange(count: 41)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !3135, file: !444, line: 69, baseType: !73, size: 32, offset: 1376)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !3135, file: !444, line: 69, baseType: !73, size: 32, offset: 1408)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !3135, file: !444, line: 70, baseType: !73, size: 32, offset: 1440)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !3135, file: !444, line: 71, baseType: !3160, size: 64, offset: 1472)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3161, size: 64)
!3161 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !444, line: 71, flags: DIFlagFwdDecl)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !3135, file: !444, line: 72, baseType: !3163, size: 64, offset: 1536)
!3163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3164, size: 64)
!3164 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !444, line: 59, baseType: !3165)
!3165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !444, line: 57, size: 8192, elements: !3166)
!3166 = !{!3167}
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !3165, file: !444, line: 58, baseType: !618, size: 8192)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "edgeData", scope: !3131, file: !6, line: 180, baseType: !3134, size: 1600, offset: 1600)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "faceData", scope: !3131, file: !6, line: 180, baseType: !3134, size: 1600, offset: 3200)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "loopData", scope: !3131, file: !6, line: 180, baseType: !3134, size: 1600, offset: 4800)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "polyData", scope: !3131, file: !6, line: 180, baseType: !3134, size: 1600, offset: 6400)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "numVertData", scope: !3131, file: !6, line: 181, baseType: !73, size: 32, offset: 8000)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "numEdgeData", scope: !3131, file: !6, line: 181, baseType: !73, size: 32, offset: 8032)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaceData", scope: !3131, file: !6, line: 181, baseType: !73, size: 32, offset: 8064)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "numLoopData", scope: !3131, file: !6, line: 181, baseType: !73, size: 32, offset: 8096)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "numPolyData", scope: !3131, file: !6, line: 181, baseType: !73, size: 32, offset: 8128)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "needsFree", scope: !3131, file: !6, line: 182, baseType: !73, size: 32, offset: 8160)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "deformedOnly", scope: !3131, file: !6, line: 183, baseType: !73, size: 32, offset: 8192)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "bvhCache", scope: !3131, file: !6, line: 184, baseType: !3180, size: 64, offset: 8256)
!3180 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHCache", file: !3181, line: 124, baseType: !3182)
!3181 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_bvhutils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3183, size: 64)
!3183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !3184, line: 45, size: 128, elements: !3185)
!3184 = !DIFile(filename: "blender/source/blender/blenlib/BLI_linklist.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3185 = !{!3186, !3187}
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3183, file: !3184, line: 46, baseType: !3182, size: 64)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3183, file: !3184, line: 47, baseType: !592, size: 64, offset: 64)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "drawObject", scope: !3131, file: !6, line: 185, baseType: !3189, size: 64, offset: 8320)
!3189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3190, size: 64)
!3190 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUDrawObject", file: !6, line: 97, flags: DIFlagFwdDecl)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3131, file: !6, line: 186, baseType: !3192, size: 32, offset: 8384)
!3192 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMeshType", file: !6, line: 132, baseType: !5)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bump_scale", scope: !3131, file: !6, line: 187, baseType: !713, size: 32, offset: 8416)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !3131, file: !6, line: 188, baseType: !3195, size: 32, offset: 8448)
!3195 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDirtyFlag", file: !6, line: 175, baseType: !12)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "totmat", scope: !3131, file: !6, line: 189, baseType: !73, size: 32, offset: 8480)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3131, file: !6, line: 190, baseType: !795, size: 64, offset: 8512)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !3131, file: !6, line: 193, baseType: !619, size: 8, offset: 8576)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "calcNormals", scope: !3131, file: !6, line: 196, baseType: !3200, size: 64, offset: 8640)
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3201, size: 64)
!3201 = !DISubroutineType(types: !3202)
!3202 = !{null, !3203}
!3203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3204, size: 64)
!3204 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMesh", file: !6, line: 177, baseType: !3131)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "calcLoopNormals", scope: !3131, file: !6, line: 199, baseType: !3206, size: 64, offset: 8704)
!3206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3207, size: 64)
!3207 = !DISubroutineType(types: !3208)
!3208 = !{null, !3203, !3209}
!3209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !713)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "recalcTessellation", scope: !3131, file: !6, line: 202, baseType: !3200, size: 64, offset: 8768)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "getNumVerts", scope: !3131, file: !6, line: 207, baseType: !3212, size: 64, offset: 8832)
!3212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3213, size: 64)
!3213 = !DISubroutineType(types: !3214)
!3214 = !{!73, !3203}
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "getNumEdges", scope: !3131, file: !6, line: 208, baseType: !3212, size: 64, offset: 8896)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "getNumTessFaces", scope: !3131, file: !6, line: 209, baseType: !3212, size: 64, offset: 8960)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "getNumLoops", scope: !3131, file: !6, line: 210, baseType: !3212, size: 64, offset: 9024)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "getNumPolys", scope: !3131, file: !6, line: 211, baseType: !3212, size: 64, offset: 9088)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "getVert", scope: !3131, file: !6, line: 218, baseType: !3220, size: 64, offset: 9152)
!3220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3221, size: 64)
!3221 = !DISubroutineType(types: !3222)
!3222 = !{null, !3203, !73, !3223}
!3223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3224, size: 64)
!3224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !1799, line: 65, size: 160, elements: !3225)
!3225 = !{!3226, !3227, !3228, !3229}
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3224, file: !1799, line: 66, baseType: !835, size: 96)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !3224, file: !1799, line: 67, baseType: !2289, size: 48, offset: 96)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3224, file: !1799, line: 68, baseType: !619, size: 8, offset: 144)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !3224, file: !1799, line: 68, baseType: !619, size: 8, offset: 152)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "getEdge", scope: !3131, file: !6, line: 219, baseType: !3231, size: 64, offset: 9216)
!3231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3232, size: 64)
!3232 = !DISubroutineType(types: !3233)
!3233 = !{null, !3203, !73, !3234}
!3234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3235, size: 64)
!3235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !1799, line: 48, size: 96, elements: !3236)
!3236 = !{!3237, !3238, !3239, !3240, !3241}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3235, file: !1799, line: 49, baseType: !7, size: 32)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3235, file: !1799, line: 49, baseType: !7, size: 32, offset: 32)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !3235, file: !1799, line: 50, baseType: !619, size: 8, offset: 64)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !3235, file: !1799, line: 50, baseType: !619, size: 8, offset: 72)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3235, file: !1799, line: 51, baseType: !632, size: 16, offset: 80)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFace", scope: !3131, file: !6, line: 220, baseType: !3243, size: 64, offset: 9280)
!3243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3244, size: 64)
!3244 = !DISubroutineType(types: !3245)
!3245 = !{null, !3203, !73, !3246}
!3246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3247, size: 64)
!3247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !1799, line: 42, size: 160, elements: !3248)
!3248 = !{!3249, !3250, !3251, !3252, !3253, !3254, !3255}
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3247, file: !1799, line: 43, baseType: !7, size: 32)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3247, file: !1799, line: 43, baseType: !7, size: 32, offset: 32)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3247, file: !1799, line: 43, baseType: !7, size: 32, offset: 64)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3247, file: !1799, line: 43, baseType: !7, size: 32, offset: 96)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3247, file: !1799, line: 44, baseType: !632, size: 16, offset: 128)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !3247, file: !1799, line: 45, baseType: !619, size: 8, offset: 144)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3247, file: !1799, line: 45, baseType: !619, size: 8, offset: 152)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "getVertArray", scope: !3131, file: !6, line: 227, baseType: !3257, size: 64, offset: 9344)
!3257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3258, size: 64)
!3258 = !DISubroutineType(types: !3259)
!3259 = !{!3223, !3203}
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeArray", scope: !3131, file: !6, line: 228, baseType: !3261, size: 64, offset: 9408)
!3261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3262, size: 64)
!3262 = !DISubroutineType(types: !3263)
!3263 = !{!3234, !3203}
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceArray", scope: !3131, file: !6, line: 229, baseType: !3265, size: 64, offset: 9472)
!3265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3266, size: 64)
!3266 = !DISubroutineType(types: !3267)
!3267 = !{!3246, !3203}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopArray", scope: !3131, file: !6, line: 230, baseType: !3269, size: 64, offset: 9536)
!3269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3270, size: 64)
!3270 = !DISubroutineType(types: !3271)
!3271 = !{!3272, !3203}
!3272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3273, size: 64)
!3273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !1799, line: 88, size: 64, elements: !3274)
!3274 = !{!3275, !3276}
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !3273, file: !1799, line: 89, baseType: !7, size: 32)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !3273, file: !1799, line: 90, baseType: !7, size: 32, offset: 32)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyArray", scope: !3131, file: !6, line: 231, baseType: !3278, size: 64, offset: 9600)
!3278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3279, size: 64)
!3279 = !DISubroutineType(types: !3280)
!3280 = !{!3281, !3203}
!3281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3282, size: 64)
!3282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !1799, line: 79, size: 96, elements: !3283)
!3283 = !{!3284, !3285, !3286, !3287, !3288}
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !3282, file: !1799, line: 81, baseType: !73, size: 32)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !3282, file: !1799, line: 82, baseType: !73, size: 32, offset: 32)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3282, file: !1799, line: 83, baseType: !632, size: 16, offset: 64)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3282, file: !1799, line: 84, baseType: !619, size: 8, offset: 80)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3282, file: !1799, line: 84, baseType: !619, size: 8, offset: 88)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "copyVertArray", scope: !3131, file: !6, line: 236, baseType: !3290, size: 64, offset: 9664)
!3290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3291, size: 64)
!3291 = !DISubroutineType(types: !3292)
!3292 = !{null, !3203, !3223}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "copyEdgeArray", scope: !3131, file: !6, line: 237, baseType: !3294, size: 64, offset: 9728)
!3294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3295, size: 64)
!3295 = !DISubroutineType(types: !3296)
!3296 = !{null, !3203, !3234}
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "copyTessFaceArray", scope: !3131, file: !6, line: 238, baseType: !3298, size: 64, offset: 9792)
!3298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3299, size: 64)
!3299 = !DISubroutineType(types: !3300)
!3300 = !{null, !3203, !3246}
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "copyLoopArray", scope: !3131, file: !6, line: 239, baseType: !3302, size: 64, offset: 9856)
!3302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3303, size: 64)
!3303 = !DISubroutineType(types: !3304)
!3304 = !{null, !3203, !3272}
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "copyPolyArray", scope: !3131, file: !6, line: 240, baseType: !3306, size: 64, offset: 9920)
!3306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3307, size: 64)
!3307 = !DISubroutineType(types: !3308)
!3308 = !{null, !3203, !3281}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "dupVertArray", scope: !3131, file: !6, line: 245, baseType: !3257, size: 64, offset: 9984)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "dupEdgeArray", scope: !3131, file: !6, line: 246, baseType: !3261, size: 64, offset: 10048)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "dupTessFaceArray", scope: !3131, file: !6, line: 247, baseType: !3265, size: 64, offset: 10112)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "dupLoopArray", scope: !3131, file: !6, line: 248, baseType: !3269, size: 64, offset: 10176)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "dupPolyArray", scope: !3131, file: !6, line: 249, baseType: !3278, size: 64, offset: 10240)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "getVertData", scope: !3131, file: !6, line: 255, baseType: !3315, size: 64, offset: 10304)
!3315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3316, size: 64)
!3316 = !DISubroutineType(types: !3317)
!3317 = !{!592, !3203, !73, !73}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeData", scope: !3131, file: !6, line: 256, baseType: !3315, size: 64, offset: 10368)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceData", scope: !3131, file: !6, line: 257, baseType: !3315, size: 64, offset: 10432)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyData", scope: !3131, file: !6, line: 258, baseType: !3315, size: 64, offset: 10496)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataArray", scope: !3131, file: !6, line: 264, baseType: !3322, size: 64, offset: 10560)
!3322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3323, size: 64)
!3323 = !DISubroutineType(types: !3324)
!3324 = !{!592, !3203, !73}
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataArray", scope: !3131, file: !6, line: 265, baseType: !3322, size: 64, offset: 10624)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataArray", scope: !3131, file: !6, line: 266, baseType: !3322, size: 64, offset: 10688)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataArray", scope: !3131, file: !6, line: 267, baseType: !3322, size: 64, offset: 10752)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataArray", scope: !3131, file: !6, line: 268, baseType: !3322, size: 64, offset: 10816)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataLayout", scope: !3131, file: !6, line: 272, baseType: !3330, size: 64, offset: 10880)
!3330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3331, size: 64)
!3331 = !DISubroutineType(types: !3332)
!3332 = !{!3333, !3203}
!3333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3134, size: 64)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataLayout", scope: !3131, file: !6, line: 273, baseType: !3330, size: 64, offset: 10944)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataLayout", scope: !3131, file: !6, line: 274, baseType: !3330, size: 64, offset: 11008)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataLayout", scope: !3131, file: !6, line: 275, baseType: !3330, size: 64, offset: 11072)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataLayout", scope: !3131, file: !6, line: 276, baseType: !3330, size: 64, offset: 11136)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromVertCData", scope: !3131, file: !6, line: 279, baseType: !3339, size: 64, offset: 11200)
!3339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3340, size: 64)
!3340 = !DISubroutineType(types: !3341)
!3341 = !{null, !3203, !73, !3333, !73}
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromEdgeCData", scope: !3131, file: !6, line: 280, baseType: !3339, size: 64, offset: 11264)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromFaceCData", scope: !3131, file: !6, line: 281, baseType: !3339, size: 64, offset: 11328)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "getNumGrids", scope: !3131, file: !6, line: 284, baseType: !3212, size: 64, offset: 11392)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "getGridSize", scope: !3131, file: !6, line: 285, baseType: !3212, size: 64, offset: 11456)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "getGridData", scope: !3131, file: !6, line: 286, baseType: !3347, size: 64, offset: 11520)
!3347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3348, size: 64)
!3348 = !DISubroutineType(types: !3349)
!3349 = !{!3350, !3203}
!3350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3351, size: 64)
!3351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3352, size: 64)
!3352 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGElem", file: !3353, line: 33, flags: DIFlagFwdDecl)
!3353 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_pbvh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "getGridAdjacency", scope: !3131, file: !6, line: 287, baseType: !3355, size: 64, offset: 11584)
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3356 = !DISubroutineType(types: !3357)
!3357 = !{!3358, !3203}
!3358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3359, size: 64)
!3359 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGridAdjacency", file: !6, line: 120, baseType: !3360)
!3360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGridAdjacency", file: !6, line: 117, size: 256, elements: !3361)
!3361 = !{!3362, !3363}
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3360, file: !6, line: 118, baseType: !3087, size: 128)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !3360, file: !6, line: 119, baseType: !3087, size: 128, offset: 128)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "getGridOffset", scope: !3131, file: !6, line: 288, baseType: !3365, size: 64, offset: 11648)
!3365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3366, size: 64)
!3366 = !DISubroutineType(types: !3367)
!3367 = !{!3368, !3203}
!3368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !73, size: 64)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "getGridKey", scope: !3131, file: !6, line: 289, baseType: !3370, size: 64, offset: 11712)
!3370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3371, size: 64)
!3371 = !DISubroutineType(types: !3372)
!3372 = !{null, !3203, !3373}
!3373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3374, size: 64)
!3374 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !3353, line: 34, flags: DIFlagFwdDecl)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "getGridFlagMats", scope: !3131, file: !6, line: 290, baseType: !3376, size: 64, offset: 11776)
!3376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3377, size: 64)
!3377 = !DISubroutineType(types: !3378)
!3378 = !{!3379, !3203}
!3379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3380, size: 64)
!3380 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMFlagMat", file: !6, line: 126, baseType: !3381)
!3381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMFlagMat", file: !6, line: 123, size: 32, elements: !3382)
!3382 = !{!3383, !3384}
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3381, file: !6, line: 124, baseType: !632, size: 16)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3381, file: !6, line: 125, baseType: !619, size: 8, offset: 16)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "getGridHidden", scope: !3131, file: !6, line: 291, baseType: !3386, size: 64, offset: 11840)
!3386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3387, size: 64)
!3387 = !DISubroutineType(types: !3388)
!3388 = !{!3389, !3203}
!3389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedVert", scope: !3131, file: !6, line: 299, baseType: !3391, size: 64, offset: 11904)
!3391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3392, size: 64)
!3392 = !DISubroutineType(types: !3393)
!3393 = !{null, !3203, !3394, !592, !3400}
!3394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3395, size: 64)
!3395 = !DISubroutineType(types: !3396)
!3396 = !{null, !592, !73, !3397, !3397, !3398}
!3397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3209, size: 64)
!3398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3399, size: 64)
!3399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !632)
!3400 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMForeachFlag", file: !6, line: 162, baseType: !17)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedEdge", scope: !3131, file: !6, line: 309, baseType: !3402, size: 64, offset: 11968)
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3403, size: 64)
!3403 = !DISubroutineType(types: !3404)
!3404 = !{null, !3203, !3405, !592}
!3405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3406, size: 64)
!3406 = !DISubroutineType(types: !3407)
!3407 = !{null, !592, !73, !3397, !3397}
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedLoop", scope: !3131, file: !6, line: 317, baseType: !3409, size: 64, offset: 12032)
!3409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3410, size: 64)
!3410 = !DISubroutineType(types: !3411)
!3411 = !{null, !3203, !3412, !592, !3400}
!3412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3413, size: 64)
!3413 = !DISubroutineType(types: !3414)
!3414 = !{null, !592, !73, !73, !3397, !3397}
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedFaceCenter", scope: !3131, file: !6, line: 327, baseType: !3416, size: 64, offset: 12096)
!3416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3417, size: 64)
!3417 = !DISubroutineType(types: !3418)
!3418 = !{null, !3203, !3405, !592, !3400}
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "getMinMax", scope: !3131, file: !6, line: 337, baseType: !3420, size: 64, offset: 12160)
!3420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3421, size: 64)
!3421 = !DISubroutineType(types: !3422)
!3422 = !{null, !3203, !1073, !1073}
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCo", scope: !3131, file: !6, line: 344, baseType: !3424, size: 64, offset: 12224)
!3424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3425, size: 64)
!3425 = !DISubroutineType(types: !3426)
!3426 = !{null, !3203, !73, !1073}
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCos", scope: !3131, file: !6, line: 347, baseType: !3428, size: 64, offset: 12288)
!3428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3429, size: 64)
!3429 = !DISubroutineType(types: !3430)
!3430 = !{null, !3203, !3431}
!3431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "getVertNo", scope: !3131, file: !6, line: 350, baseType: !3424, size: 64, offset: 12352)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyNo", scope: !3131, file: !6, line: 351, baseType: !3424, size: 64, offset: 12416)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyMap", scope: !3131, file: !6, line: 355, baseType: !3435, size: 64, offset: 12480)
!3435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3436, size: 64)
!3436 = !DISubroutineType(types: !3437)
!3437 = !{!3438, !966, !3203}
!3438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3439, size: 64)
!3439 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3440)
!3440 = !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !6, line: 355, flags: DIFlagFwdDecl)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "getPBVH", scope: !3131, file: !6, line: 359, baseType: !3442, size: 64, offset: 12544)
!3442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3443, size: 64)
!3443 = !DISubroutineType(types: !3444)
!3444 = !{!3445, !966, !3203}
!3445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3446, size: 64)
!3446 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !3353, line: 41, flags: DIFlagFwdDecl)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "drawVerts", scope: !3131, file: !6, line: 364, baseType: !3200, size: 64, offset: 12608)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "drawUVEdges", scope: !3131, file: !6, line: 367, baseType: !3200, size: 64, offset: 12672)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "drawEdges", scope: !3131, file: !6, line: 373, baseType: !3450, size: 64, offset: 12736)
!3450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3451, size: 64)
!3451 = !DISubroutineType(types: !3452)
!3452 = !{null, !3203, !1788, !1788}
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "drawLooseEdges", scope: !3131, file: !6, line: 376, baseType: !3200, size: 64, offset: 12800)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesSolid", scope: !3131, file: !6, line: 385, baseType: !3455, size: 64, offset: 12864)
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3456, size: 64)
!3456 = !DISubroutineType(types: !3457)
!3457 = !{null, !3203, !3458, !1788, !3459}
!3458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!3459 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetMaterial", file: !6, line: 146, baseType: !3460)
!3460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3461, size: 64)
!3461 = !DISubroutineType(types: !3462)
!3462 = !{!73, !73, !592}
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesTex", scope: !3131, file: !6, line: 391, baseType: !3464, size: 64, offset: 12928)
!3464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3465, size: 64)
!3465 = !DISubroutineType(types: !3466)
!3466 = !{null, !3203, !3467, !3483, !592, !3487}
!3467 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptionsTex", file: !6, line: 150, baseType: !3468)
!3468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3469, size: 64)
!3469 = !DISubroutineType(types: !3470)
!3470 = !{!3471, !3472, !3482, !73}
!3471 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawOption", file: !6, line: 143, baseType: !21)
!3472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3473, size: 64)
!3473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !1799, line: 160, size: 384, elements: !3474)
!3474 = !{!3475, !3476, !3477, !3478, !3479, !3480, !3481}
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3473, file: !1799, line: 161, baseType: !1437, size: 256)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !3473, file: !1799, line: 162, baseType: !1489, size: 64, offset: 256)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3473, file: !1799, line: 163, baseType: !619, size: 8, offset: 320)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !3473, file: !1799, line: 163, baseType: !619, size: 8, offset: 328)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3473, file: !1799, line: 164, baseType: !632, size: 16, offset: 336)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !3473, file: !1799, line: 164, baseType: !632, size: 16, offset: 352)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !3473, file: !1799, line: 164, baseType: !632, size: 16, offset: 368)
!3482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1788)
!3483 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCompareDrawOptions", file: !6, line: 147, baseType: !3484)
!3484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3485, size: 64)
!3485 = !DISubroutineType(types: !3486)
!3486 = !{!73, !592, !73, !73}
!3487 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawFlag", file: !6, line: 157, baseType: !27)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesGLSL", scope: !3131, file: !6, line: 400, baseType: !3489, size: 64, offset: 12992)
!3489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3490, size: 64)
!3490 = !DISubroutineType(types: !3491)
!3491 = !{null, !3203, !3459}
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFaces", scope: !3131, file: !6, line: 415, baseType: !3493, size: 64, offset: 13056)
!3493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3494, size: 64)
!3494 = !DISubroutineType(types: !3495)
!3495 = !{null, !3203, !3496, !3459, !3483, !592, !3487}
!3496 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptions", file: !6, line: 149, baseType: !3497)
!3497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3498, size: 64)
!3498 = !DISubroutineType(types: !3499)
!3499 = !{!3471, !592, !73}
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesTex", scope: !3131, file: !6, line: 425, baseType: !3501, size: 64, offset: 13120)
!3501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3502, size: 64)
!3502 = !DISubroutineType(types: !3503)
!3503 = !{null, !3203, !3496, !3483, !592, !3487}
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesGLSL", scope: !3131, file: !6, line: 435, baseType: !3505, size: 64, offset: 13184)
!3505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3506, size: 64)
!3506 = !DISubroutineType(types: !3507)
!3507 = !{null, !3203, !3459, !3496, !592}
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdges", scope: !3131, file: !6, line: 444, baseType: !3509, size: 64, offset: 13248)
!3509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3510, size: 64)
!3510 = !DISubroutineType(types: !3511)
!3511 = !{null, !3203, !3496, !592}
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdgesInterp", scope: !3131, file: !6, line: 455, baseType: !3513, size: 64, offset: 13312)
!3513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3514, size: 64)
!3514 = !DISubroutineType(types: !3515)
!3515 = !{null, !3203, !3496, !3516, !592}
!3516 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawInterpOptions", file: !6, line: 148, baseType: !3517)
!3517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3518, size: 64)
!3518 = !DISubroutineType(types: !3519)
!3519 = !{null, !592, !73, !713}
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesMat", scope: !3131, file: !6, line: 464, baseType: !3521, size: 64, offset: 13376)
!3521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3522, size: 64)
!3522 = !DISubroutineType(types: !3523)
!3523 = !{null, !3203, !3524, !3527, !592}
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 64)
!3525 = !DISubroutineType(types: !3526)
!3526 = !{null, !592, !73, !592}
!3527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3528, size: 64)
!3528 = !DISubroutineType(types: !3529)
!3529 = !{!1788, !592, !73}
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3131, file: !6, line: 470, baseType: !3200, size: 64, offset: 13440)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "hair_out_dm", scope: !2684, file: !2459, line: 272, baseType: !3130, size: 64, offset: 960)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "target_ob", scope: !2684, file: !2459, line: 274, baseType: !966, size: 64, offset: 1024)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "lattice_deform_data", scope: !2684, file: !2459, line: 276, baseType: !3534, size: 64, offset: 1088)
!3534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3535, size: 64)
!3535 = !DICompositeType(tag: DW_TAG_structure_type, name: "LatticeDeformData", file: !3536, line: 54, flags: DIFlagFwdDecl)
!3536 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_lattice.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2684, file: !2459, line: 278, baseType: !966, size: 64, offset: 1152)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "targets", scope: !2684, file: !2459, line: 280, baseType: !660, size: 128, offset: 1216)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2684, file: !2459, line: 282, baseType: !648, size: 512, offset: 1344)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !2684, file: !2459, line: 284, baseType: !1404, size: 512, offset: 1856)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2684, file: !2459, line: 285, baseType: !713, size: 32, offset: 2368)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "tree_frame", scope: !2684, file: !2459, line: 285, baseType: !713, size: 32, offset: 2400)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "bvhtree_frame", scope: !2684, file: !2459, line: 285, baseType: !713, size: 32, offset: 2432)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !2684, file: !2459, line: 286, baseType: !73, size: 32, offset: 2464)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "child_seed", scope: !2684, file: !2459, line: 286, baseType: !73, size: 32, offset: 2496)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2684, file: !2459, line: 287, baseType: !73, size: 32, offset: 2528)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !2684, file: !2459, line: 287, baseType: !73, size: 32, offset: 2560)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "totunexist", scope: !2684, file: !2459, line: 287, baseType: !73, size: 32, offset: 2592)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "totchild", scope: !2684, file: !2459, line: 287, baseType: !73, size: 32, offset: 2624)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "totcached", scope: !2684, file: !2459, line: 287, baseType: !73, size: 32, offset: 2656)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "totchildcache", scope: !2684, file: !2459, line: 287, baseType: !73, size: 32, offset: 2688)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !2684, file: !2459, line: 288, baseType: !632, size: 16, offset: 2720)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "target_psys", scope: !2684, file: !2459, line: 288, baseType: !632, size: 16, offset: 2736)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "totkeyed", scope: !2684, file: !2459, line: 288, baseType: !632, size: 16, offset: 2752)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "bakespace", scope: !2684, file: !2459, line: 288, baseType: !632, size: 16, offset: 2768)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "bb_uvname", scope: !2684, file: !2459, line: 290, baseType: !3557, size: 1536, offset: 2784)
!3557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 1536, elements: !3558)
!3558 = !{!745, !650}
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !2684, file: !2459, line: 293, baseType: !3560, size: 192, offset: 4320)
!3560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !632, size: 192, elements: !3561)
!3561 = !{!3562}
!3562 = !DISubrange(count: 12)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "vg_neg", scope: !2684, file: !2459, line: 293, baseType: !632, size: 16, offset: 4512)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "rt3", scope: !2684, file: !2459, line: 293, baseType: !632, size: 16, offset: 4528)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "renderdata", scope: !2684, file: !2459, line: 296, baseType: !592, size: 64, offset: 4544)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "pointcache", scope: !2684, file: !2459, line: 299, baseType: !2402, size: 64, offset: 4608)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !2684, file: !2459, line: 300, baseType: !660, size: 128, offset: 4672)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "effectors", scope: !2684, file: !2459, line: 302, baseType: !2681, size: 64, offset: 4800)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "fluid_springs", scope: !2684, file: !2459, line: 304, baseType: !3570, size: 64, offset: 4864)
!3570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3571, size: 64)
!3571 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSpring", file: !2459, line: 68, baseType: !3572)
!3572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSpring", file: !2459, line: 65, size: 128, elements: !3573)
!3573 = !{!3574, !3575, !3576}
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "rest_length", scope: !3572, file: !2459, line: 66, baseType: !713, size: 32)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "particle_index", scope: !3572, file: !2459, line: 67, baseType: !1088, size: 64, offset: 32)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "delete_flag", scope: !3572, file: !2459, line: 67, baseType: !7, size: 32, offset: 96)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "tot_fluidsprings", scope: !2684, file: !2459, line: 305, baseType: !73, size: 32, offset: 4928)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_fluidsprings", scope: !2684, file: !2459, line: 305, baseType: !73, size: 32, offset: 4960)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !2684, file: !2459, line: 307, baseType: !2514, size: 64, offset: 4992)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "bvhtree", scope: !2684, file: !2459, line: 308, baseType: !3581, size: 64, offset: 5056)
!3581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3582, size: 64)
!3582 = !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTree", file: !3583, line: 42, flags: DIFlagFwdDecl)
!3583 = !DIFile(filename: "blender/source/blender/blenlib/BLI_kdopbvh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "pdd", scope: !2684, file: !2459, line: 310, baseType: !3585, size: 64, offset: 5120)
!3585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3586, size: 64)
!3586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleDrawData", file: !3101, line: 237, size: 704, elements: !3587)
!3587 = !{!3588, !3589, !3590, !3591, !3592, !3593, !3594, !3595, !3596, !3597, !3598, !3599, !3600}
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3586, file: !3101, line: 238, baseType: !1073, size: 64)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !3586, file: !3101, line: 238, baseType: !1073, size: 64, offset: 64)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "ndata", scope: !3586, file: !3101, line: 239, baseType: !1073, size: 64, offset: 128)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "nd", scope: !3586, file: !3101, line: 239, baseType: !1073, size: 64, offset: 192)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "cdata", scope: !3586, file: !3101, line: 240, baseType: !1073, size: 64, offset: 256)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "cd", scope: !3586, file: !3101, line: 240, baseType: !1073, size: 64, offset: 320)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "vedata", scope: !3586, file: !3101, line: 241, baseType: !1073, size: 64, offset: 384)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "ved", scope: !3586, file: !3101, line: 241, baseType: !1073, size: 64, offset: 448)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "ma_col", scope: !3586, file: !3101, line: 242, baseType: !1073, size: 64, offset: 512)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "tot_vec_size", scope: !3586, file: !3101, line: 243, baseType: !73, size: 32, offset: 576)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3586, file: !3101, line: 243, baseType: !73, size: 32, offset: 608)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !3586, file: !3101, line: 244, baseType: !73, size: 32, offset: 640)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "totve", scope: !3586, file: !3101, line: 244, baseType: !73, size: 32, offset: 672)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "dt_frac", scope: !2684, file: !2459, line: 312, baseType: !713, size: 32, offset: 5184)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !2684, file: !2459, line: 313, baseType: !713, size: 32, offset: 5216)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "particles", scope: !2428, file: !2429, line: 244, baseType: !2457, size: 64, offset: 1920)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_field", scope: !2428, file: !2429, line: 245, baseType: !2514, size: 64, offset: 1984)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_cosnos", scope: !2428, file: !2429, line: 246, baseType: !1073, size: 64, offset: 2048)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_cache", scope: !2428, file: !2429, line: 247, baseType: !3368, size: 64, offset: 2112)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "pathcache", scope: !2428, file: !2429, line: 249, baseType: !3098, size: 64, offset: 2176)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "pathcachebufs", scope: !2428, file: !2429, line: 250, baseType: !658, size: 128, offset: 2240)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !2428, file: !2429, line: 252, baseType: !73, size: 32, offset: 2368)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "totframes", scope: !2428, file: !2429, line: 252, baseType: !73, size: 32, offset: 2400)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "totcached", scope: !2428, file: !2429, line: 252, baseType: !73, size: 32, offset: 2432)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "edited", scope: !2428, file: !2429, line: 252, baseType: !73, size: 32, offset: 2464)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "sel_col", scope: !2428, file: !2429, line: 254, baseType: !3614, size: 24, offset: 2496)
!3614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1788, size: 24, elements: !836)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "nosel_col", scope: !2428, file: !2429, line: 255, baseType: !3614, size: 24, offset: 2520)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "free_edit", scope: !2403, file: !2376, line: 208, baseType: !3094, size: 64, offset: 10496)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !2370, file: !2371, line: 63, baseType: !660, size: 128, offset: 384)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "numbodies", scope: !2370, file: !2371, line: 64, baseType: !73, size: 32, offset: 512)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "steps_per_second", scope: !2370, file: !2371, line: 66, baseType: !632, size: 16, offset: 544)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "num_solver_iterations", scope: !2370, file: !2371, line: 67, baseType: !632, size: 16, offset: 560)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2370, file: !2371, line: 69, baseType: !73, size: 32, offset: 576)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "time_scale", scope: !2370, file: !2371, line: 70, baseType: !713, size: 32, offset: 608)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "physics_world", scope: !2370, file: !2371, line: 73, baseType: !592, size: 64, offset: 640)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !982, file: !128, line: 109, baseType: !1164, size: 64, offset: 832)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "lvl", scope: !978, file: !128, line: 720, baseType: !619, size: 8, offset: 896)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "sculptlvl", scope: !978, file: !128, line: 720, baseType: !619, size: 8, offset: 904)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !978, file: !128, line: 720, baseType: !619, size: 8, offset: 912)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "totlvl", scope: !978, file: !128, line: 720, baseType: !619, size: 8, offset: 920)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "simple", scope: !978, file: !128, line: 721, baseType: !619, size: 8, offset: 928)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !978, file: !128, line: 721, baseType: !619, size: 8, offset: 936)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !978, file: !128, line: 721, baseType: !1979, size: 16, offset: 944)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !973, file: !974, line: 158, baseType: !3223, size: 64, offset: 64)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !973, file: !974, line: 159, baseType: !3281, size: 64, offset: 128)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !973, file: !974, line: 160, baseType: !3272, size: 64, offset: 192)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !973, file: !974, line: 161, baseType: !73, size: 32, offset: 256)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !973, file: !974, line: 161, baseType: !73, size: 32, offset: 288)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "face_normals", scope: !973, file: !974, line: 162, baseType: !3431, size: 64, offset: 320)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "kb", scope: !973, file: !974, line: 163, baseType: !764, size: 64, offset: 384)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "vmask", scope: !973, file: !974, line: 164, baseType: !1073, size: 64, offset: 448)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "pmap", scope: !973, file: !974, line: 167, baseType: !3438, size: 64, offset: 512)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !973, file: !974, line: 170, baseType: !3642, size: 64, offset: 576)
!3642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3643, size: 64)
!3643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMesh", file: !580, line: 186, size: 8064, elements: !3644)
!3644 = !{!3645, !3646, !3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658, !3719, !3723, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796}
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3643, file: !580, line: 187, baseType: !73, size: 32)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !3643, file: !580, line: 187, baseType: !73, size: 32, offset: 32)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !3643, file: !580, line: 187, baseType: !73, size: 32, offset: 64)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !3643, file: !580, line: 187, baseType: !73, size: 32, offset: 96)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "totvertsel", scope: !3643, file: !580, line: 188, baseType: !73, size: 32, offset: 128)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "totedgesel", scope: !3643, file: !580, line: 188, baseType: !73, size: 32, offset: 160)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "totfacesel", scope: !3643, file: !580, line: 188, baseType: !73, size: 32, offset: 192)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "elem_index_dirty", scope: !3643, file: !580, line: 193, baseType: !619, size: 8, offset: 224)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "elem_table_dirty", scope: !3643, file: !580, line: 197, baseType: !619, size: 8, offset: 232)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "vpool", scope: !3643, file: !580, line: 201, baseType: !3160, size: 64, offset: 256)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "epool", scope: !3643, file: !580, line: 201, baseType: !3160, size: 64, offset: 320)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "lpool", scope: !3643, file: !580, line: 201, baseType: !3160, size: 64, offset: 384)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "fpool", scope: !3643, file: !580, line: 201, baseType: !3160, size: 64, offset: 448)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !3643, file: !580, line: 208, baseType: !3659, size: 64, offset: 512)
!3659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3660, size: 64)
!3660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3661, size: 64)
!3661 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMVert", file: !580, line: 103, baseType: !3662)
!3662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMVert", file: !580, line: 90, size: 448, elements: !3663)
!3663 = !{!3664, !3673, !3678, !3679, !3680}
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3662, file: !580, line: 91, baseType: !3665, size: 128)
!3665 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMHeader", file: !580, line: 82, baseType: !3666)
!3666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMHeader", file: !580, line: 64, size: 128, elements: !3667)
!3667 = !{!3668, !3669, !3670, !3671, !3672}
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3666, file: !580, line: 65, baseType: !592, size: 64)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3666, file: !580, line: 66, baseType: !73, size: 32, offset: 64)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "htype", scope: !3666, file: !580, line: 73, baseType: !619, size: 8, offset: 96)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "hflag", scope: !3666, file: !580, line: 74, baseType: !619, size: 8, offset: 104)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "api_flag", scope: !3666, file: !580, line: 80, baseType: !619, size: 8, offset: 112)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !3662, file: !580, line: 92, baseType: !3674, size: 64, offset: 128)
!3674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3675, size: 64)
!3675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFlagLayer", file: !580, line: 180, size: 16, elements: !3676)
!3676 = !{!3677}
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3675, file: !580, line: 181, baseType: !632, size: 16)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3662, file: !580, line: 94, baseType: !835, size: 96, offset: 192)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !3662, file: !580, line: 95, baseType: !835, size: 96, offset: 288)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !3662, file: !580, line: 102, baseType: !3681, size: 64, offset: 384)
!3681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3682, size: 64)
!3682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEdge", file: !580, line: 110, size: 640, elements: !3683)
!3683 = !{!3684, !3685, !3686, !3688, !3689, !3712, !3718}
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3682, file: !580, line: 111, baseType: !3665, size: 128)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !3682, file: !580, line: 112, baseType: !3674, size: 64, offset: 128)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3682, file: !580, line: 114, baseType: !3687, size: 64, offset: 192)
!3687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3662, size: 64)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3682, file: !580, line: 114, baseType: !3687, size: 64, offset: 256)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !3682, file: !580, line: 118, baseType: !3690, size: 64, offset: 320)
!3690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3691, size: 64)
!3691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMLoop", file: !580, line: 125, size: 576, elements: !3692)
!3692 = !{!3693, !3694, !3695, !3696, !3708, !3709, !3710, !3711}
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3691, file: !580, line: 126, baseType: !3665, size: 128)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !3691, file: !580, line: 129, baseType: !3687, size: 64, offset: 128)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !3691, file: !580, line: 130, baseType: !3681, size: 64, offset: 192)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3691, file: !580, line: 131, baseType: !3697, size: 64, offset: 256)
!3697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3698, size: 64)
!3698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFace", file: !580, line: 164, size: 448, elements: !3699)
!3699 = !{!3700, !3701, !3702, !3705, !3706, !3707}
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3698, file: !580, line: 165, baseType: !3665, size: 128)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !3698, file: !580, line: 166, baseType: !3674, size: 64, offset: 128)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !3698, file: !580, line: 172, baseType: !3703, size: 64, offset: 192)
!3703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3704, size: 64)
!3704 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMLoop", file: !580, line: 140, baseType: !3691)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3698, file: !580, line: 174, baseType: !73, size: 32, offset: 256)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !3698, file: !580, line: 175, baseType: !835, size: 96, offset: 288)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !3698, file: !580, line: 176, baseType: !632, size: 16, offset: 384)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "radial_next", scope: !3691, file: !580, line: 135, baseType: !3690, size: 64, offset: 320)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "radial_prev", scope: !3691, file: !580, line: 135, baseType: !3690, size: 64, offset: 384)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3691, file: !580, line: 139, baseType: !3690, size: 64, offset: 448)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3691, file: !580, line: 139, baseType: !3690, size: 64, offset: 512)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "v1_disk_link", scope: !3682, file: !580, line: 122, baseType: !3713, size: 128, offset: 384)
!3713 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMDiskLink", file: !580, line: 108, baseType: !3714)
!3714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMDiskLink", file: !580, line: 106, size: 128, elements: !3715)
!3715 = !{!3716, !3717}
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3714, file: !580, line: 107, baseType: !3681, size: 64)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3714, file: !580, line: 107, baseType: !3681, size: 64, offset: 64)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "v2_disk_link", scope: !3682, file: !580, line: 122, baseType: !3713, size: 128, offset: 512)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "etable", scope: !3643, file: !580, line: 209, baseType: !3720, size: 64, offset: 576)
!3720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3721, size: 64)
!3721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3722, size: 64)
!3722 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEdge", file: !580, line: 123, baseType: !3682)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "ftable", scope: !3643, file: !580, line: 210, baseType: !3724, size: 64, offset: 640)
!3724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3725, size: 64)
!3725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3726, size: 64)
!3726 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMFace", file: !580, line: 178, baseType: !3698)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_tot", scope: !3643, file: !580, line: 213, baseType: !73, size: 32, offset: 704)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "etable_tot", scope: !3643, file: !580, line: 214, baseType: !73, size: 32, offset: 736)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "ftable_tot", scope: !3643, file: !580, line: 215, baseType: !73, size: 32, offset: 768)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "vtoolflagpool", scope: !3643, file: !580, line: 218, baseType: !3160, size: 64, offset: 832)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "etoolflagpool", scope: !3643, file: !580, line: 218, baseType: !3160, size: 64, offset: 896)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "ftoolflagpool", scope: !3643, file: !580, line: 218, baseType: !3160, size: 64, offset: 960)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "stackdepth", scope: !3643, file: !580, line: 220, baseType: !73, size: 32, offset: 1024)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "currentop", scope: !3643, file: !580, line: 221, baseType: !3735, size: 64, offset: 1088)
!3735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3736, size: 64)
!3736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOperator", file: !34, line: 190, size: 10496, elements: !3737)
!3737 = !{!3738, !3771, !3772, !3778, !3781, !3782, !3784}
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "slots_in", scope: !3736, file: !34, line: 191, baseType: !3739, size: 5120)
!3739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3740, size: 5120, elements: !3769)
!3740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOpSlot", file: !34, line: 147, size: 320, elements: !3741)
!3741 = !{!3742, !3743, !3745, !3755, !3756}
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "slot_name", scope: !3740, file: !34, line: 148, baseType: !2669, size: 64)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "slot_type", scope: !3740, file: !34, line: 149, baseType: !3744, size: 32, offset: 64)
!3744 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotType", file: !34, line: 112, baseType: !33)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "slot_subtype", scope: !3740, file: !34, line: 150, baseType: !3746, size: 32, offset: 96)
!3746 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Union", file: !34, line: 142, baseType: !3747)
!3747 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eBMOpSlotSubType_Union", file: !34, line: 138, size: 32, elements: !3748)
!3748 = !{!3749, !3751, !3753}
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !3747, file: !34, line: 139, baseType: !3750, size: 32)
!3750 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Elem", file: !34, line: 122, baseType: !44)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3747, file: !34, line: 140, baseType: !3752, size: 32)
!3752 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Ptr", file: !34, line: 136, baseType: !50)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3747, file: !34, line: 141, baseType: !3754, size: 32)
!3754 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Map", file: !34, line: 130, baseType: !56)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3740, file: !34, line: 152, baseType: !73, size: 32, offset: 128)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3740, file: !34, line: 162, baseType: !3757, size: 128, offset: 192)
!3757 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3740, file: !34, line: 155, size: 128, elements: !3758)
!3758 = !{!3759, !3760, !3761, !3762, !3763, !3764}
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !3757, file: !34, line: 156, baseType: !73, size: 32)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3757, file: !34, line: 157, baseType: !713, size: 32)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3757, file: !34, line: 158, baseType: !592, size: 64)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3757, file: !34, line: 159, baseType: !835, size: 96)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3757, file: !34, line: 160, baseType: !2545, size: 64)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !3757, file: !34, line: 161, baseType: !3765, size: 64)
!3765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3766, size: 64)
!3766 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !3767, line: 48, baseType: !3768)
!3767 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3768 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !72, line: 47, flags: DIFlagFwdDecl)
!3769 = !{!3770}
!3770 = !DISubrange(count: 16)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "slots_out", scope: !3736, file: !34, line: 192, baseType: !3739, size: 5120, offset: 5120)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !3736, file: !34, line: 193, baseType: !3773, size: 64, offset: 10240)
!3773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3774, size: 64)
!3774 = !DISubroutineType(types: !3775)
!3775 = !{null, !3776, !3735}
!3776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3777, size: 64)
!3777 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMesh", file: !580, line: 246, baseType: !3643)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "arena", scope: !3736, file: !34, line: 194, baseType: !3779, size: 64, offset: 10304)
!3779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3780, size: 64)
!3780 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !3184, line: 38, flags: DIFlagFwdDecl)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3736, file: !34, line: 195, baseType: !73, size: 32, offset: 10368)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "type_flag", scope: !3736, file: !34, line: 196, baseType: !3783, size: 32, offset: 10400)
!3783 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMOpTypeFlag", file: !34, line: 188, baseType: !64)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3736, file: !34, line: 197, baseType: !73, size: 32, offset: 10432)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3643, file: !580, line: 223, baseType: !3134, size: 1600, offset: 1152)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3643, file: !580, line: 223, baseType: !3134, size: 1600, offset: 2752)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !3643, file: !580, line: 223, baseType: !3134, size: 1600, offset: 4352)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3643, file: !580, line: 223, baseType: !3134, size: 1600, offset: 5952)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !3643, file: !580, line: 233, baseType: !632, size: 16, offset: 7552)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !3643, file: !580, line: 236, baseType: !73, size: 32, offset: 7584)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "walkers", scope: !3643, file: !580, line: 238, baseType: !73, size: 32, offset: 7616)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "totflags", scope: !3643, file: !580, line: 238, baseType: !73, size: 32, offset: 7648)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "selected", scope: !3643, file: !580, line: 239, baseType: !658, size: 128, offset: 7680)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !3643, file: !580, line: 241, baseType: !3725, size: 64, offset: 7808)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "errorstack", scope: !3643, file: !580, line: 243, baseType: !658, size: 128, offset: 7872)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "py_handle", scope: !3643, file: !580, line: 245, baseType: !592, size: 64, offset: 8000)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "cd_vert_node_offset", scope: !973, file: !974, line: 171, baseType: !73, size: 32, offset: 640)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "cd_face_node_offset", scope: !973, file: !974, line: 172, baseType: !73, size: 32, offset: 672)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "bm_smooth_shading", scope: !973, file: !974, line: 173, baseType: !1788, size: 8, offset: 704)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "bm_log", scope: !973, file: !974, line: 175, baseType: !3801, size: 64, offset: 768)
!3801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3802, size: 64)
!3802 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMLog", file: !3353, line: 44, flags: DIFlagFwdDecl)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "pbvh", scope: !973, file: !974, line: 178, baseType: !3445, size: 64, offset: 832)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "show_diffuse_color", scope: !973, file: !974, line: 179, baseType: !1788, size: 8, offset: 896)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers_active", scope: !973, file: !974, line: 182, baseType: !1788, size: 8, offset: 904)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "orig_cos", scope: !973, file: !974, line: 183, baseType: !3431, size: 64, offset: 960)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "deform_cos", scope: !973, file: !974, line: 184, baseType: !3431, size: 64, offset: 1024)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "deform_imats", scope: !973, file: !974, line: 185, baseType: !3809, size: 64, offset: 1088)
!3809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 64)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "partial_redraw", scope: !973, file: !974, line: 188, baseType: !1788, size: 8, offset: 1152)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "texcache_side", scope: !973, file: !974, line: 191, baseType: !7, size: 32, offset: 1184)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "texcache", scope: !973, file: !974, line: 191, baseType: !1094, size: 64, offset: 1216)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "texcache_actual", scope: !973, file: !974, line: 191, baseType: !7, size: 32, offset: 1280)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "tex_pool", scope: !973, file: !974, line: 192, baseType: !3815, size: 64, offset: 1344)
!3815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3816, size: 64)
!3816 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePool", file: !974, line: 61, flags: DIFlagFwdDecl)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "layer_co", scope: !973, file: !974, line: 195, baseType: !3431, size: 64, offset: 1408)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "stroke", scope: !973, file: !974, line: 197, baseType: !3819, size: 64, offset: 1472)
!3819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3820, size: 64)
!3820 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptStroke", file: !974, line: 197, flags: DIFlagFwdDecl)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !973, file: !974, line: 198, baseType: !3822, size: 64, offset: 1536)
!3822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3823, size: 64)
!3823 = !DICompositeType(tag: DW_TAG_structure_type, name: "StrokeCache", file: !974, line: 59, flags: DIFlagFwdDecl)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "last_stroke_valid", scope: !973, file: !974, line: 201, baseType: !1788, size: 8, offset: 1600)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "last_stroke", scope: !973, file: !974, line: 202, baseType: !835, size: 96, offset: 1632)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "average_stroke_accum", scope: !973, file: !974, line: 204, baseType: !835, size: 96, offset: 1728)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "average_stroke_counter", scope: !973, file: !974, line: 205, baseType: !73, size: 32, offset: 1824)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !967, file: !114, line: 121, baseType: !632, size: 16, offset: 1088)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !967, file: !114, line: 121, baseType: !632, size: 16, offset: 1104)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !967, file: !114, line: 122, baseType: !73, size: 32, offset: 1120)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !967, file: !114, line: 122, baseType: !73, size: 32, offset: 1152)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !967, file: !114, line: 122, baseType: !73, size: 32, offset: 1184)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !967, file: !114, line: 123, baseType: !648, size: 512, offset: 1216)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !967, file: !114, line: 124, baseType: !966, size: 64, offset: 1728)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !967, file: !114, line: 124, baseType: !966, size: 64, offset: 1792)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !967, file: !114, line: 127, baseType: !966, size: 64, offset: 1856)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !967, file: !114, line: 127, baseType: !966, size: 64, offset: 1920)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !967, file: !114, line: 127, baseType: !966, size: 64, offset: 1984)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !967, file: !114, line: 128, baseType: !749, size: 64, offset: 2048)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !967, file: !114, line: 130, baseType: !738, size: 64, offset: 2112)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !967, file: !114, line: 131, baseType: !3842, size: 64, offset: 2176)
!3842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !967, file: !114, line: 132, baseType: !3842, size: 64, offset: 2240)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !967, file: !114, line: 133, baseType: !3845, size: 64, offset: 2304)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !72, line: 334, size: 1728, elements: !3847)
!3847 = !{!3848, !3849, !3851, !3852, !3853, !3854, !3855, !3856, !3857, !3858, !3859, !3860, !3861, !3862, !3863, !3883}
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !3846, file: !72, line: 335, baseType: !658, size: 128)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !3846, file: !72, line: 336, baseType: !3850, size: 64, offset: 128)
!3850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3768, size: 64)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3846, file: !72, line: 338, baseType: !632, size: 16, offset: 192)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3846, file: !72, line: 338, baseType: !632, size: 16, offset: 208)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !3846, file: !72, line: 339, baseType: !7, size: 32, offset: 224)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3846, file: !72, line: 340, baseType: !73, size: 32, offset: 256)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !3846, file: !72, line: 342, baseType: !713, size: 32, offset: 288)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !3846, file: !72, line: 343, baseType: !835, size: 96, offset: 320)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !3846, file: !72, line: 344, baseType: !835, size: 96, offset: 416)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !3846, file: !72, line: 347, baseType: !658, size: 128, offset: 512)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !3846, file: !72, line: 349, baseType: !73, size: 32, offset: 640)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !3846, file: !72, line: 350, baseType: !73, size: 32, offset: 672)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !3846, file: !72, line: 351, baseType: !592, size: 64, offset: 704)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !3846, file: !72, line: 352, baseType: !592, size: 64, offset: 768)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !3846, file: !72, line: 354, baseType: !3864, size: 384, offset: 832)
!3864 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !72, line: 116, baseType: !3865)
!3865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !72, line: 94, size: 384, elements: !3866)
!3866 = !{!3867, !3868, !3869, !3870, !3871, !3872, !3873, !3874, !3875, !3876, !3877, !3878, !3879, !3880, !3881, !3882}
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !3865, file: !72, line: 96, baseType: !73, size: 32)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !3865, file: !72, line: 96, baseType: !73, size: 32, offset: 32)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !3865, file: !72, line: 97, baseType: !73, size: 32, offset: 64)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !3865, file: !72, line: 97, baseType: !73, size: 32, offset: 96)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !3865, file: !72, line: 99, baseType: !632, size: 16, offset: 128)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !3865, file: !72, line: 100, baseType: !632, size: 16, offset: 144)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !3865, file: !72, line: 102, baseType: !632, size: 16, offset: 160)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !3865, file: !72, line: 105, baseType: !632, size: 16, offset: 176)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !3865, file: !72, line: 108, baseType: !632, size: 16, offset: 192)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !3865, file: !72, line: 109, baseType: !632, size: 16, offset: 208)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !3865, file: !72, line: 111, baseType: !632, size: 16, offset: 224)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !3865, file: !72, line: 112, baseType: !632, size: 16, offset: 240)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !3865, file: !72, line: 114, baseType: !73, size: 32, offset: 256)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !3865, file: !72, line: 114, baseType: !73, size: 32, offset: 288)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !3865, file: !72, line: 115, baseType: !73, size: 32, offset: 320)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !3865, file: !72, line: 115, baseType: !73, size: 32, offset: 352)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !3846, file: !72, line: 355, baseType: !648, size: 512, offset: 1216)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !967, file: !114, line: 134, baseType: !592, size: 64, offset: 2368)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !967, file: !114, line: 136, baseType: !1114, size: 64, offset: 2432)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !967, file: !114, line: 138, baseType: !3864, size: 384, offset: 2496)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !967, file: !114, line: 139, baseType: !3888, size: 64, offset: 2880)
!3888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3889, size: 64)
!3889 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !72, line: 80, baseType: !3890)
!3890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !72, line: 72, size: 192, elements: !3891)
!3891 = !{!3892, !3899, !3900, !3901, !3902}
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !3890, file: !72, line: 73, baseType: !3893, size: 64)
!3893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3894, size: 64)
!3894 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !72, line: 59, baseType: !3895)
!3895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !72, line: 56, size: 128, elements: !3896)
!3896 = !{!3897, !3898}
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3895, file: !72, line: 57, baseType: !835, size: 96)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3895, file: !72, line: 58, baseType: !73, size: 32, offset: 96)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3890, file: !72, line: 74, baseType: !73, size: 32, offset: 64)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !3890, file: !72, line: 76, baseType: !73, size: 32, offset: 96)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !3890, file: !72, line: 77, baseType: !73, size: 32, offset: 128)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3890, file: !72, line: 79, baseType: !73, size: 32, offset: 160)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !967, file: !114, line: 141, baseType: !658, size: 128, offset: 2944)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !967, file: !114, line: 142, baseType: !658, size: 128, offset: 3072)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !967, file: !114, line: 143, baseType: !658, size: 128, offset: 3200)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !967, file: !114, line: 144, baseType: !658, size: 128, offset: 3328)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !967, file: !114, line: 146, baseType: !73, size: 32, offset: 3456)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !967, file: !114, line: 147, baseType: !73, size: 32, offset: 3488)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !967, file: !114, line: 150, baseType: !795, size: 64, offset: 3520)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !967, file: !114, line: 151, baseType: !1164, size: 64, offset: 3584)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !967, file: !114, line: 152, baseType: !73, size: 32, offset: 3648)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !967, file: !114, line: 153, baseType: !73, size: 32, offset: 3680)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !967, file: !114, line: 156, baseType: !835, size: 96, offset: 3712)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !967, file: !114, line: 156, baseType: !835, size: 96, offset: 3808)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !967, file: !114, line: 156, baseType: !835, size: 96, offset: 3904)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !967, file: !114, line: 157, baseType: !835, size: 96, offset: 4000)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !967, file: !114, line: 158, baseType: !835, size: 96, offset: 4096)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !967, file: !114, line: 159, baseType: !835, size: 96, offset: 4192)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !967, file: !114, line: 160, baseType: !835, size: 96, offset: 4288)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !967, file: !114, line: 160, baseType: !835, size: 96, offset: 4384)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !967, file: !114, line: 161, baseType: !916, size: 128, offset: 4480)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !967, file: !114, line: 161, baseType: !916, size: 128, offset: 4608)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !967, file: !114, line: 162, baseType: !835, size: 96, offset: 4736)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !967, file: !114, line: 162, baseType: !835, size: 96, offset: 4832)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !967, file: !114, line: 163, baseType: !713, size: 32, offset: 4928)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !967, file: !114, line: 163, baseType: !713, size: 32, offset: 4960)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !967, file: !114, line: 164, baseType: !1404, size: 512, offset: 4992)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !967, file: !114, line: 165, baseType: !1404, size: 512, offset: 5504)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !967, file: !114, line: 166, baseType: !1404, size: 512, offset: 6016)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !967, file: !114, line: 167, baseType: !1404, size: 512, offset: 6528)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !967, file: !114, line: 176, baseType: !1404, size: 512, offset: 7040)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !967, file: !114, line: 178, baseType: !7, size: 32, offset: 7552)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !967, file: !114, line: 180, baseType: !632, size: 16, offset: 7584)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !967, file: !114, line: 181, baseType: !632, size: 16, offset: 7600)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !967, file: !114, line: 183, baseType: !632, size: 16, offset: 7616)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !967, file: !114, line: 183, baseType: !632, size: 16, offset: 7632)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !967, file: !114, line: 184, baseType: !632, size: 16, offset: 7648)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !967, file: !114, line: 184, baseType: !632, size: 16, offset: 7664)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !967, file: !114, line: 185, baseType: !632, size: 16, offset: 7680)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !967, file: !114, line: 186, baseType: !632, size: 16, offset: 7696)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !967, file: !114, line: 187, baseType: !632, size: 16, offset: 7712)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !967, file: !114, line: 188, baseType: !619, size: 8, offset: 7728)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !967, file: !114, line: 189, baseType: !619, size: 8, offset: 7736)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !967, file: !114, line: 192, baseType: !73, size: 32, offset: 7744)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !967, file: !114, line: 192, baseType: !73, size: 32, offset: 7776)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !967, file: !114, line: 192, baseType: !73, size: 32, offset: 7808)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !967, file: !114, line: 192, baseType: !73, size: 32, offset: 7840)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !967, file: !114, line: 194, baseType: !73, size: 32, offset: 7872)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !967, file: !114, line: 202, baseType: !713, size: 32, offset: 7904)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !967, file: !114, line: 202, baseType: !713, size: 32, offset: 7936)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !967, file: !114, line: 202, baseType: !713, size: 32, offset: 7968)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !967, file: !114, line: 211, baseType: !713, size: 32, offset: 8000)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !967, file: !114, line: 212, baseType: !713, size: 32, offset: 8032)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !967, file: !114, line: 213, baseType: !713, size: 32, offset: 8064)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !967, file: !114, line: 214, baseType: !713, size: 32, offset: 8096)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !967, file: !114, line: 215, baseType: !713, size: 32, offset: 8128)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !967, file: !114, line: 216, baseType: !713, size: 32, offset: 8160)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !967, file: !114, line: 219, baseType: !713, size: 32, offset: 8192)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !967, file: !114, line: 220, baseType: !713, size: 32, offset: 8224)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !967, file: !114, line: 221, baseType: !713, size: 32, offset: 8256)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !967, file: !114, line: 224, baseType: !2592, size: 16, offset: 8288)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !967, file: !114, line: 224, baseType: !2592, size: 16, offset: 8304)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !967, file: !114, line: 226, baseType: !632, size: 16, offset: 8320)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !967, file: !114, line: 228, baseType: !619, size: 8, offset: 8336)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !967, file: !114, line: 229, baseType: !619, size: 8, offset: 8344)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !967, file: !114, line: 231, baseType: !632, size: 16, offset: 8352)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !967, file: !114, line: 232, baseType: !619, size: 8, offset: 8368)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !967, file: !114, line: 233, baseType: !619, size: 8, offset: 8376)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !967, file: !114, line: 234, baseType: !713, size: 32, offset: 8384)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !967, file: !114, line: 235, baseType: !713, size: 32, offset: 8416)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !967, file: !114, line: 237, baseType: !658, size: 128, offset: 8448)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !967, file: !114, line: 238, baseType: !658, size: 128, offset: 8576)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !967, file: !114, line: 239, baseType: !658, size: 128, offset: 8704)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !967, file: !114, line: 240, baseType: !658, size: 128, offset: 8832)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !967, file: !114, line: 242, baseType: !713, size: 32, offset: 8960)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !967, file: !114, line: 244, baseType: !632, size: 16, offset: 8992)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !967, file: !114, line: 245, baseType: !2592, size: 16, offset: 9008)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !967, file: !114, line: 246, baseType: !916, size: 128, offset: 9024)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !967, file: !114, line: 248, baseType: !73, size: 32, offset: 9152)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !967, file: !114, line: 249, baseType: !73, size: 32, offset: 9184)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !967, file: !114, line: 251, baseType: !3982, size: 64, offset: 9216)
!3982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3983, size: 64)
!3983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !2376, line: 215, size: 960, elements: !3984)
!3984 = !{!3985, !3986, !3987, !3988, !3989, !3990, !3991, !3992, !3993, !3994, !3995, !3996, !3997, !3998, !3999, !4000, !4001, !4002, !4003, !4004, !4005, !4006, !4007, !4008, !4009, !4010, !4011, !4012, !4013, !4014}
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3983, file: !2376, line: 216, baseType: !73, size: 32)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "linStiff", scope: !3983, file: !2376, line: 217, baseType: !713, size: 32, offset: 32)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "angStiff", scope: !3983, file: !2376, line: 218, baseType: !713, size: 32, offset: 64)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !3983, file: !2376, line: 219, baseType: !713, size: 32, offset: 96)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "viterations", scope: !3983, file: !2376, line: 221, baseType: !73, size: 32, offset: 128)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "piterations", scope: !3983, file: !2376, line: 222, baseType: !73, size: 32, offset: 160)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "diterations", scope: !3983, file: !2376, line: 223, baseType: !73, size: 32, offset: 192)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "citerations", scope: !3983, file: !2376, line: 224, baseType: !73, size: 32, offset: 224)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "kSRHR_CL", scope: !3983, file: !2376, line: 226, baseType: !713, size: 32, offset: 256)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "kSKHR_CL", scope: !3983, file: !2376, line: 227, baseType: !713, size: 32, offset: 288)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "kSSHR_CL", scope: !3983, file: !2376, line: 228, baseType: !713, size: 32, offset: 320)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "kSR_SPLT_CL", scope: !3983, file: !2376, line: 229, baseType: !713, size: 32, offset: 352)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "kSK_SPLT_CL", scope: !3983, file: !2376, line: 231, baseType: !713, size: 32, offset: 384)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "kSS_SPLT_CL", scope: !3983, file: !2376, line: 232, baseType: !713, size: 32, offset: 416)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "kVCF", scope: !3983, file: !2376, line: 233, baseType: !713, size: 32, offset: 448)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "kDP", scope: !3983, file: !2376, line: 234, baseType: !713, size: 32, offset: 480)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "kDG", scope: !3983, file: !2376, line: 236, baseType: !713, size: 32, offset: 512)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "kLF", scope: !3983, file: !2376, line: 237, baseType: !713, size: 32, offset: 544)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "kPR", scope: !3983, file: !2376, line: 238, baseType: !713, size: 32, offset: 576)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "kVC", scope: !3983, file: !2376, line: 239, baseType: !713, size: 32, offset: 608)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "kDF", scope: !3983, file: !2376, line: 241, baseType: !713, size: 32, offset: 640)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "kMT", scope: !3983, file: !2376, line: 242, baseType: !713, size: 32, offset: 672)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "kCHR", scope: !3983, file: !2376, line: 243, baseType: !713, size: 32, offset: 704)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "kKHR", scope: !3983, file: !2376, line: 244, baseType: !713, size: 32, offset: 736)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "kSHR", scope: !3983, file: !2376, line: 246, baseType: !713, size: 32, offset: 768)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "kAHR", scope: !3983, file: !2376, line: 247, baseType: !713, size: 32, offset: 800)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "collisionflags", scope: !3983, file: !2376, line: 248, baseType: !73, size: 32, offset: 832)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "numclusteriterations", scope: !3983, file: !2376, line: 249, baseType: !73, size: 32, offset: 864)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "welding", scope: !3983, file: !2376, line: 250, baseType: !713, size: 32, offset: 896)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !3983, file: !2376, line: 251, baseType: !713, size: 32, offset: 928)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !967, file: !114, line: 253, baseType: !619, size: 8, offset: 9280)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !967, file: !114, line: 254, baseType: !619, size: 8, offset: 9288)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !967, file: !114, line: 255, baseType: !632, size: 16, offset: 9296)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !967, file: !114, line: 256, baseType: !835, size: 96, offset: 9312)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !967, file: !114, line: 258, baseType: !658, size: 128, offset: 9408)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !967, file: !114, line: 259, baseType: !658, size: 128, offset: 9536)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !967, file: !114, line: 260, baseType: !658, size: 128, offset: 9664)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !967, file: !114, line: 261, baseType: !658, size: 128, offset: 9792)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !967, file: !114, line: 263, baseType: !2869, size: 64, offset: 9920)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !967, file: !114, line: 264, baseType: !4025, size: 64, offset: 9984)
!4025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4026, size: 64)
!4026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !2376, line: 268, size: 3776, elements: !4027)
!4027 = !{!4028, !4029, !4030, !4057, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4067, !4068, !4069, !4070, !4071, !4072, !4073, !4074, !4075, !4076, !4077, !4078, !4079, !4080, !4081, !4082, !4083, !4084, !4085, !4092, !4093, !4094, !4095, !4096, !4097, !4098, !4099, !4100, !4101, !4102, !4103, !4104, !4105, !4106, !4109, !4110, !4111, !4112, !4113, !4114, !4115, !4116, !4117}
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !4026, file: !2376, line: 270, baseType: !73, size: 32)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "totspring", scope: !4026, file: !2376, line: 270, baseType: !73, size: 32, offset: 32)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "bpoint", scope: !4026, file: !2376, line: 271, baseType: !4031, size: 64, offset: 64)
!4031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4032, size: 64)
!4032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BodyPoint", file: !4033, line: 38, size: 1536, elements: !4034)
!4033 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_softbody.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4034 = !{!4035, !4036, !4037, !4038, !4039, !4040, !4041, !4042, !4043, !4044, !4045, !4046, !4047, !4048, !4049, !4050, !4051, !4052, !4053, !4054, !4055, !4056}
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "origS", scope: !4032, file: !4033, line: 39, baseType: !835, size: 96)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "origE", scope: !4032, file: !4033, line: 39, baseType: !835, size: 96, offset: 96)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "origT", scope: !4032, file: !4033, line: 39, baseType: !835, size: 96, offset: 192)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4032, file: !4033, line: 39, baseType: !835, size: 96, offset: 288)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4032, file: !4033, line: 39, baseType: !835, size: 96, offset: 384)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "force", scope: !4032, file: !4033, line: 39, baseType: !835, size: 96, offset: 480)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "goal", scope: !4032, file: !4033, line: 40, baseType: !713, size: 32, offset: 576)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "prevpos", scope: !4032, file: !4033, line: 41, baseType: !835, size: 96, offset: 608)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "prevvec", scope: !4032, file: !4033, line: 41, baseType: !835, size: 96, offset: 704)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "prevdx", scope: !4032, file: !4033, line: 41, baseType: !835, size: 96, offset: 800)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "prevdv", scope: !4032, file: !4033, line: 41, baseType: !835, size: 96, offset: 896)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "impdv", scope: !4032, file: !4033, line: 42, baseType: !835, size: 96, offset: 992)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "impdx", scope: !4032, file: !4033, line: 42, baseType: !835, size: 96, offset: 1088)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "nofsprings", scope: !4032, file: !4033, line: 43, baseType: !73, size: 32, offset: 1184)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "springs", scope: !4032, file: !4033, line: 43, baseType: !3368, size: 64, offset: 1216)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "choke", scope: !4032, file: !4033, line: 44, baseType: !713, size: 32, offset: 1280)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "choke2", scope: !4032, file: !4033, line: 44, baseType: !713, size: 32, offset: 1312)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !4032, file: !4033, line: 44, baseType: !713, size: 32, offset: 1344)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "colball", scope: !4032, file: !4033, line: 45, baseType: !713, size: 32, offset: 1376)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "loc_flag", scope: !4032, file: !4033, line: 46, baseType: !632, size: 16, offset: 1408)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !4032, file: !4033, line: 48, baseType: !713, size: 32, offset: 1440)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "springweight", scope: !4032, file: !4033, line: 49, baseType: !713, size: 32, offset: 1472)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "bspring", scope: !4026, file: !2376, line: 272, baseType: !4058, size: 64, offset: 128)
!4058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4059, size: 64)
!4059 = !DICompositeType(tag: DW_TAG_structure_type, name: "BodySpring", file: !2376, line: 272, flags: DIFlagFwdDecl)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4026, file: !2376, line: 273, baseType: !619, size: 8, offset: 192)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "msg_lock", scope: !4026, file: !2376, line: 274, baseType: !619, size: 8, offset: 200)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "msg_value", scope: !4026, file: !2376, line: 275, baseType: !632, size: 16, offset: 208)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "nodemass", scope: !4026, file: !2376, line: 280, baseType: !713, size: 32, offset: 224)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Mass", scope: !4026, file: !2376, line: 281, baseType: !648, size: 512, offset: 256)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "grav", scope: !4026, file: !2376, line: 285, baseType: !713, size: 32, offset: 768)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "mediafrict", scope: !4026, file: !2376, line: 286, baseType: !713, size: 32, offset: 800)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "rklimit", scope: !4026, file: !2376, line: 287, baseType: !713, size: 32, offset: 832)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "physics_speed", scope: !4026, file: !2376, line: 288, baseType: !713, size: 32, offset: 864)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "goalspring", scope: !4026, file: !2376, line: 291, baseType: !713, size: 32, offset: 896)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "goalfrict", scope: !4026, file: !2376, line: 292, baseType: !713, size: 32, offset: 928)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "mingoal", scope: !4026, file: !2376, line: 293, baseType: !713, size: 32, offset: 960)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "maxgoal", scope: !4026, file: !2376, line: 294, baseType: !713, size: 32, offset: 992)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "defgoal", scope: !4026, file: !2376, line: 295, baseType: !713, size: 32, offset: 1024)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "vertgroup", scope: !4026, file: !2376, line: 296, baseType: !632, size: 16, offset: 1056)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Softgoal", scope: !4026, file: !2376, line: 297, baseType: !648, size: 512, offset: 1072)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "fuzzyness", scope: !4026, file: !2376, line: 301, baseType: !632, size: 16, offset: 1584)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "inspring", scope: !4026, file: !2376, line: 304, baseType: !713, size: 32, offset: 1600)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "infrict", scope: !4026, file: !2376, line: 305, baseType: !713, size: 32, offset: 1632)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Spring_K", scope: !4026, file: !2376, line: 306, baseType: !648, size: 512, offset: 1664)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !4026, file: !2376, line: 312, baseType: !73, size: 32, offset: 2176)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !4026, file: !2376, line: 312, baseType: !73, size: 32, offset: 2208)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !4026, file: !2376, line: 313, baseType: !73, size: 32, offset: 2240)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !4026, file: !2376, line: 314, baseType: !632, size: 16, offset: 2272)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "solverflags", scope: !4026, file: !2376, line: 314, baseType: !632, size: 16, offset: 2288)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !4026, file: !2376, line: 317, baseType: !4086, size: 64, offset: 2304)
!4086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4087, size: 64)
!4087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4088, size: 64)
!4088 = !DIDerivedType(tag: DW_TAG_typedef, name: "SBVertex", file: !2376, line: 213, baseType: !4089)
!4089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SBVertex", file: !2376, line: 211, size: 128, elements: !4090)
!4090 = !{!4091}
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4089, file: !2376, line: 212, baseType: !916, size: 128)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "totpointkey", scope: !4026, file: !2376, line: 318, baseType: !73, size: 32, offset: 2368)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !4026, file: !2376, line: 318, baseType: !73, size: 32, offset: 2400)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "secondspring", scope: !4026, file: !2376, line: 320, baseType: !713, size: 32, offset: 2432)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "colball", scope: !4026, file: !2376, line: 323, baseType: !713, size: 32, offset: 2464)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "balldamp", scope: !4026, file: !2376, line: 324, baseType: !713, size: 32, offset: 2496)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "ballstiff", scope: !4026, file: !2376, line: 325, baseType: !713, size: 32, offset: 2528)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "sbc_mode", scope: !4026, file: !2376, line: 326, baseType: !632, size: 16, offset: 2560)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "aeroedge", scope: !4026, file: !2376, line: 327, baseType: !632, size: 16, offset: 2576)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "minloops", scope: !4026, file: !2376, line: 328, baseType: !632, size: 16, offset: 2592)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "maxloops", scope: !4026, file: !2376, line: 329, baseType: !632, size: 16, offset: 2608)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "choke", scope: !4026, file: !2376, line: 330, baseType: !632, size: 16, offset: 2624)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "solver_ID", scope: !4026, file: !2376, line: 331, baseType: !632, size: 16, offset: 2640)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "plastic", scope: !4026, file: !2376, line: 332, baseType: !632, size: 16, offset: 2656)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "springpreload", scope: !4026, file: !2376, line: 332, baseType: !632, size: 16, offset: 2672)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "scratch", scope: !4026, file: !2376, line: 335, baseType: !4107, size: 64, offset: 2688)
!4107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4108, size: 64)
!4108 = !DICompositeType(tag: DW_TAG_structure_type, name: "SBScratch", file: !2376, line: 335, flags: DIFlagFwdDecl)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "shearstiff", scope: !4026, file: !2376, line: 336, baseType: !713, size: 32, offset: 2752)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "inpush", scope: !4026, file: !2376, line: 337, baseType: !713, size: 32, offset: 2784)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "pointcache", scope: !4026, file: !2376, line: 339, baseType: !2402, size: 64, offset: 2816)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !4026, file: !2376, line: 340, baseType: !660, size: 128, offset: 2880)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !4026, file: !2376, line: 342, baseType: !2374, size: 64, offset: 3008)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "lcom", scope: !4026, file: !2376, line: 344, baseType: !835, size: 96, offset: 3072)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "lrot", scope: !4026, file: !2376, line: 345, baseType: !1708, size: 288, offset: 3168)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "lscale", scope: !4026, file: !2376, line: 346, baseType: !1708, size: 288, offset: 3456)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "last_frame", scope: !4026, file: !2376, line: 348, baseType: !73, size: 32, offset: 3744)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !967, file: !114, line: 265, baseType: !2379, size: 64, offset: 10048)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !967, file: !114, line: 267, baseType: !619, size: 8, offset: 10112)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !967, file: !114, line: 268, baseType: !619, size: 8, offset: 10120)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !967, file: !114, line: 269, baseType: !632, size: 16, offset: 10128)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !967, file: !114, line: 270, baseType: !713, size: 32, offset: 10144)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !967, file: !114, line: 272, baseType: !4124, size: 64, offset: 10176)
!4124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4125, size: 64)
!4125 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !114, line: 54, flags: DIFlagFwdDecl)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !967, file: !114, line: 275, baseType: !4127, size: 64, offset: 10240)
!4127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4128, size: 64)
!4128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !4129, line: 49, size: 448, elements: !4130)
!4129 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_curve.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4130 = !{!4131, !4132, !4133, !4134}
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !4128, file: !4129, line: 50, baseType: !658, size: 128)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "bev", scope: !4128, file: !4129, line: 51, baseType: !658, size: 128, offset: 128)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "deformed_nurbs", scope: !4128, file: !4129, line: 52, baseType: !658, size: 128, offset: 256)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !4128, file: !4129, line: 53, baseType: !4135, size: 64, offset: 384)
!4135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4136, size: 64)
!4136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Path", file: !1704, line: 65, size: 128, elements: !4137)
!4137 = !{!4138, !4146, !4147}
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4136, file: !1704, line: 66, baseType: !4139, size: 64)
!4139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4140, size: 64)
!4140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PathPoint", file: !1704, line: 56, size: 320, elements: !4141)
!4141 = !{!4142, !4143, !4144, !4145}
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4140, file: !1704, line: 57, baseType: !916, size: 128)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !4140, file: !1704, line: 58, baseType: !916, size: 128, offset: 128)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !4140, file: !1704, line: 59, baseType: !713, size: 32, offset: 256)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !4140, file: !1704, line: 59, baseType: !713, size: 32, offset: 288)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4136, file: !1704, line: 67, baseType: !73, size: 32, offset: 64)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "totdist", scope: !4136, file: !1704, line: 68, baseType: !713, size: 32, offset: 96)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !967, file: !114, line: 277, baseType: !3130, size: 64, offset: 10304)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !967, file: !114, line: 277, baseType: !3130, size: 64, offset: 10368)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !967, file: !114, line: 278, baseType: !2359, size: 64, offset: 10432)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !967, file: !114, line: 279, baseType: !2359, size: 64, offset: 10496)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !967, file: !114, line: 280, baseType: !7, size: 32, offset: 10560)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !967, file: !114, line: 281, baseType: !7, size: 32, offset: 10592)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !967, file: !114, line: 283, baseType: !658, size: 128, offset: 10624)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !967, file: !114, line: 284, baseType: !658, size: 128, offset: 10752)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !967, file: !114, line: 285, baseType: !1209, size: 64, offset: 10880)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !967, file: !114, line: 287, baseType: !4158, size: 64, offset: 10944)
!4158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4159, size: 64)
!4159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !2371, line: 95, size: 768, elements: !4160)
!4160 = !{!4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175, !4176, !4177, !4178, !4179}
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "physics_object", scope: !4159, file: !2371, line: 97, baseType: !592, size: 64)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "physics_shape", scope: !4159, file: !2371, line: 98, baseType: !592, size: 64, offset: 64)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4159, file: !2371, line: 101, baseType: !632, size: 16, offset: 128)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !4159, file: !2371, line: 102, baseType: !632, size: 16, offset: 144)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4159, file: !2371, line: 104, baseType: !73, size: 32, offset: 160)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "col_groups", scope: !4159, file: !2371, line: 105, baseType: !73, size: 32, offset: 192)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "mesh_source", scope: !4159, file: !2371, line: 106, baseType: !632, size: 16, offset: 224)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4159, file: !2371, line: 107, baseType: !632, size: 16, offset: 240)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !4159, file: !2371, line: 110, baseType: !713, size: 32, offset: 256)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !4159, file: !2371, line: 112, baseType: !713, size: 32, offset: 288)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "restitution", scope: !4159, file: !2371, line: 113, baseType: !713, size: 32, offset: 320)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !4159, file: !2371, line: 115, baseType: !713, size: 32, offset: 352)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "lin_damping", scope: !4159, file: !2371, line: 117, baseType: !713, size: 32, offset: 384)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "ang_damping", scope: !4159, file: !2371, line: 118, baseType: !713, size: 32, offset: 416)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "lin_sleep_thresh", scope: !4159, file: !2371, line: 120, baseType: !713, size: 32, offset: 448)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "ang_sleep_thresh", scope: !4159, file: !2371, line: 121, baseType: !713, size: 32, offset: 480)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "orn", scope: !4159, file: !2371, line: 123, baseType: !916, size: 128, offset: 512)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4159, file: !2371, line: 124, baseType: !835, size: 96, offset: 640)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !4159, file: !2371, line: 125, baseType: !713, size: 32, offset: 736)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !967, file: !114, line: 288, baseType: !4181, size: 64, offset: 11008)
!4181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4182, size: 64)
!4182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !2371, line: 195, size: 1024, elements: !4183)
!4183 = !{!4184, !4185, !4186, !4187, !4188, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4205, !4206, !4207, !4208, !4209, !4210, !4211, !4212, !4213}
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "ob1", scope: !4182, file: !2371, line: 196, baseType: !966, size: 64)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "ob2", scope: !4182, file: !2371, line: 197, baseType: !966, size: 64, offset: 64)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4182, file: !2371, line: 200, baseType: !632, size: 16, offset: 128)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "num_solver_iterations", scope: !4182, file: !2371, line: 201, baseType: !632, size: 16, offset: 144)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4182, file: !2371, line: 203, baseType: !73, size: 32, offset: 160)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "breaking_threshold", scope: !4182, file: !2371, line: 205, baseType: !713, size: 32, offset: 192)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4182, file: !2371, line: 206, baseType: !713, size: 32, offset: 224)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "limit_lin_x_lower", scope: !4182, file: !2371, line: 210, baseType: !713, size: 32, offset: 256)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "limit_lin_x_upper", scope: !4182, file: !2371, line: 211, baseType: !713, size: 32, offset: 288)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "limit_lin_y_lower", scope: !4182, file: !2371, line: 212, baseType: !713, size: 32, offset: 320)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "limit_lin_y_upper", scope: !4182, file: !2371, line: 213, baseType: !713, size: 32, offset: 352)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "limit_lin_z_lower", scope: !4182, file: !2371, line: 214, baseType: !713, size: 32, offset: 384)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "limit_lin_z_upper", scope: !4182, file: !2371, line: 215, baseType: !713, size: 32, offset: 416)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "limit_ang_x_lower", scope: !4182, file: !2371, line: 217, baseType: !713, size: 32, offset: 448)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "limit_ang_x_upper", scope: !4182, file: !2371, line: 218, baseType: !713, size: 32, offset: 480)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "limit_ang_y_lower", scope: !4182, file: !2371, line: 219, baseType: !713, size: 32, offset: 512)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "limit_ang_y_upper", scope: !4182, file: !2371, line: 220, baseType: !713, size: 32, offset: 544)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "limit_ang_z_lower", scope: !4182, file: !2371, line: 221, baseType: !713, size: 32, offset: 576)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "limit_ang_z_upper", scope: !4182, file: !2371, line: 222, baseType: !713, size: 32, offset: 608)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "spring_stiffness_x", scope: !4182, file: !2371, line: 226, baseType: !713, size: 32, offset: 640)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "spring_stiffness_y", scope: !4182, file: !2371, line: 227, baseType: !713, size: 32, offset: 672)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "spring_stiffness_z", scope: !4182, file: !2371, line: 228, baseType: !713, size: 32, offset: 704)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "spring_damping_x", scope: !4182, file: !2371, line: 230, baseType: !713, size: 32, offset: 736)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "spring_damping_y", scope: !4182, file: !2371, line: 231, baseType: !713, size: 32, offset: 768)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "spring_damping_z", scope: !4182, file: !2371, line: 232, baseType: !713, size: 32, offset: 800)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "motor_lin_target_velocity", scope: !4182, file: !2371, line: 235, baseType: !713, size: 32, offset: 832)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "motor_ang_target_velocity", scope: !4182, file: !2371, line: 236, baseType: !713, size: 32, offset: 864)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "motor_lin_max_impulse", scope: !4182, file: !2371, line: 237, baseType: !713, size: 32, offset: 896)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "motor_ang_max_impulse", scope: !4182, file: !2371, line: 238, baseType: !713, size: 32, offset: 928)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "physics_constraint", scope: !4182, file: !2371, line: 241, baseType: !592, size: 64, offset: 960)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !967, file: !114, line: 290, baseType: !1118, size: 64, offset: 11072)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !967, file: !114, line: 291, baseType: !4216, size: 64, offset: 11136)
!4216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4217, size: 64)
!4217 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !1279, line: 65, baseType: !2964)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !967, file: !114, line: 293, baseType: !658, size: 128, offset: 11200)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !967, file: !114, line: 294, baseType: !4220, size: 64, offset: 11328)
!4220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4221, size: 64)
!4221 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !114, line: 113, baseType: !4222)
!4222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !114, line: 108, size: 256, elements: !4223)
!4223 = !{!4224, !4226, !4227, !4228, !4229}
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4222, file: !114, line: 109, baseType: !4225, size: 64)
!4225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4222, size: 64)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4222, file: !114, line: 109, baseType: !4225, size: 64, offset: 64)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !4222, file: !114, line: 110, baseType: !966, size: 64, offset: 128)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4222, file: !114, line: 111, baseType: !73, size: 32, offset: 192)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !4222, file: !114, line: 112, baseType: !713, size: 32, offset: 224)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !959, file: !751, line: 61, baseType: !2909, size: 64, offset: 128)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !959, file: !751, line: 62, baseType: !648, size: 512, offset: 192)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !959, file: !751, line: 64, baseType: !619, size: 8, offset: 704)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !959, file: !751, line: 64, baseType: !619, size: 8, offset: 712)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !959, file: !751, line: 64, baseType: !619, size: 8, offset: 720)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !959, file: !751, line: 64, baseType: !619, size: 8, offset: 728)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !959, file: !751, line: 65, baseType: !835, size: 96, offset: 736)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !959, file: !751, line: 65, baseType: !835, size: 96, offset: 832)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !959, file: !751, line: 65, baseType: !713, size: 32, offset: 928)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !959, file: !751, line: 67, baseType: !632, size: 16, offset: 960)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !959, file: !751, line: 67, baseType: !632, size: 16, offset: 976)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !959, file: !751, line: 67, baseType: !632, size: 16, offset: 992)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !959, file: !751, line: 67, baseType: !632, size: 16, offset: 1008)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !959, file: !751, line: 68, baseType: !632, size: 16, offset: 1024)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !959, file: !751, line: 68, baseType: !632, size: 16, offset: 1040)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !959, file: !751, line: 69, baseType: !619, size: 8, offset: 1056)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !959, file: !751, line: 69, baseType: !1537, size: 56, offset: 1064)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !959, file: !751, line: 70, baseType: !713, size: 32, offset: 1120)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !959, file: !751, line: 70, baseType: !713, size: 32, offset: 1152)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !959, file: !751, line: 70, baseType: !713, size: 32, offset: 1184)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !959, file: !751, line: 70, baseType: !713, size: 32, offset: 1216)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !959, file: !751, line: 71, baseType: !713, size: 32, offset: 1248)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !959, file: !751, line: 71, baseType: !713, size: 32, offset: 1280)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !959, file: !751, line: 74, baseType: !713, size: 32, offset: 1312)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !959, file: !751, line: 74, baseType: !713, size: 32, offset: 1344)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !959, file: !751, line: 77, baseType: !713, size: 32, offset: 1376)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !959, file: !751, line: 77, baseType: !713, size: 32, offset: 1408)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !959, file: !751, line: 77, baseType: !713, size: 32, offset: 1440)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !959, file: !751, line: 78, baseType: !713, size: 32, offset: 1472)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !959, file: !751, line: 78, baseType: !713, size: 32, offset: 1504)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !959, file: !751, line: 78, baseType: !713, size: 32, offset: 1536)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !959, file: !751, line: 79, baseType: !713, size: 32, offset: 1568)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !959, file: !751, line: 79, baseType: !713, size: 32, offset: 1600)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !959, file: !751, line: 79, baseType: !713, size: 32, offset: 1632)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !959, file: !751, line: 79, baseType: !713, size: 32, offset: 1664)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !959, file: !751, line: 80, baseType: !713, size: 32, offset: 1696)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !959, file: !751, line: 80, baseType: !713, size: 32, offset: 1728)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !959, file: !751, line: 80, baseType: !713, size: 32, offset: 1760)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !959, file: !751, line: 81, baseType: !713, size: 32, offset: 1792)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !959, file: !751, line: 81, baseType: !713, size: 32, offset: 1824)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !959, file: !751, line: 81, baseType: !713, size: 32, offset: 1856)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !959, file: !751, line: 82, baseType: !713, size: 32, offset: 1888)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !959, file: !751, line: 82, baseType: !713, size: 32, offset: 1920)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !959, file: !751, line: 82, baseType: !713, size: 32, offset: 1952)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !959, file: !751, line: 85, baseType: !713, size: 32, offset: 1984)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !959, file: !751, line: 85, baseType: !713, size: 32, offset: 2016)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !959, file: !751, line: 85, baseType: !713, size: 32, offset: 2048)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !959, file: !751, line: 85, baseType: !713, size: 32, offset: 2080)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !959, file: !751, line: 86, baseType: !713, size: 32, offset: 2112)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !959, file: !751, line: 86, baseType: !713, size: 32, offset: 2144)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !959, file: !751, line: 86, baseType: !713, size: 32, offset: 2176)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !959, file: !751, line: 86, baseType: !713, size: 32, offset: 2208)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !959, file: !751, line: 87, baseType: !713, size: 32, offset: 2240)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !959, file: !751, line: 87, baseType: !713, size: 32, offset: 2272)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !959, file: !751, line: 87, baseType: !713, size: 32, offset: 2304)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !959, file: !751, line: 87, baseType: !713, size: 32, offset: 2336)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !959, file: !751, line: 90, baseType: !713, size: 32, offset: 2368)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !959, file: !751, line: 93, baseType: !713, size: 32, offset: 2400)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !959, file: !751, line: 93, baseType: !713, size: 32, offset: 2432)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !959, file: !751, line: 93, baseType: !713, size: 32, offset: 2464)
!4290 = !{!4291}
!4291 = !DISubrange(count: 18)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !797, file: !798, line: 168, baseType: !1100, size: 64, offset: 6144)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !797, file: !798, line: 169, baseType: !749, size: 64, offset: 6208)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !797, file: !798, line: 170, baseType: !2379, size: 64, offset: 6272)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !797, file: !798, line: 171, baseType: !1084, size: 64, offset: 6336)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !797, file: !798, line: 174, baseType: !713, size: 32, offset: 6400)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !797, file: !798, line: 174, baseType: !713, size: 32, offset: 6432)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !797, file: !798, line: 174, baseType: !713, size: 32, offset: 6464)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !797, file: !798, line: 175, baseType: !713, size: 32, offset: 6496)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !797, file: !798, line: 175, baseType: !713, size: 32, offset: 6528)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !797, file: !798, line: 176, baseType: !632, size: 16, offset: 6560)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !797, file: !798, line: 176, baseType: !632, size: 16, offset: 6576)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !797, file: !798, line: 179, baseType: !835, size: 96, offset: 6592)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !797, file: !798, line: 179, baseType: !835, size: 96, offset: 6688)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !797, file: !798, line: 180, baseType: !713, size: 32, offset: 6784)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !797, file: !798, line: 180, baseType: !713, size: 32, offset: 6816)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !797, file: !798, line: 180, baseType: !713, size: 32, offset: 6848)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !797, file: !798, line: 181, baseType: !713, size: 32, offset: 6880)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !797, file: !798, line: 181, baseType: !713, size: 32, offset: 6912)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !797, file: !798, line: 182, baseType: !713, size: 32, offset: 6944)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !797, file: !798, line: 182, baseType: !713, size: 32, offset: 6976)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !797, file: !798, line: 183, baseType: !632, size: 16, offset: 7008)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !797, file: !798, line: 183, baseType: !632, size: 16, offset: 7024)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !797, file: !798, line: 185, baseType: !73, size: 32, offset: 7040)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !797, file: !798, line: 186, baseType: !632, size: 16, offset: 7072)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !797, file: !798, line: 187, baseType: !632, size: 16, offset: 7088)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !797, file: !798, line: 190, baseType: !916, size: 128, offset: 7104)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !797, file: !798, line: 191, baseType: !632, size: 16, offset: 7232)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !797, file: !798, line: 192, baseType: !632, size: 16, offset: 7248)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !797, file: !798, line: 195, baseType: !632, size: 16, offset: 7264)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !797, file: !798, line: 196, baseType: !632, size: 16, offset: 7280)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !797, file: !798, line: 197, baseType: !632, size: 16, offset: 7296)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !797, file: !798, line: 198, baseType: !2289, size: 48, offset: 7312)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !797, file: !798, line: 200, baseType: !4325, size: 64, offset: 7360)
!4325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4326, size: 64)
!4326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !798, line: 86, size: 192, elements: !4327)
!4327 = !{!4328, !4329, !4330, !4331}
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !4326, file: !798, line: 87, baseType: !1489, size: 64)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !4326, file: !798, line: 88, baseType: !1164, size: 64, offset: 64)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4326, file: !798, line: 89, baseType: !73, size: 32, offset: 128)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4326, file: !798, line: 90, baseType: !73, size: 32, offset: 160)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !797, file: !798, line: 202, baseType: !658, size: 128, offset: 7424)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "mselect", scope: !596, file: !595, line: 67, baseType: !4334, size: 64, offset: 1280)
!4334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4335, size: 64)
!4335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MSelect", file: !1799, line: 154, size: 64, elements: !4336)
!4336 = !{!4337, !4338}
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4335, file: !1799, line: 155, baseType: !73, size: 32)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4335, file: !1799, line: 156, baseType: !73, size: 32, offset: 32)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !596, file: !595, line: 71, baseType: !3281, size: 64, offset: 1344)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "mtpoly", scope: !596, file: !595, line: 72, baseType: !4341, size: 64, offset: 1408)
!4341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4342, size: 64)
!4342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !1799, line: 93, size: 128, elements: !4343)
!4343 = !{!4344, !4345, !4346, !4347, !4348, !4349}
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !4342, file: !1799, line: 94, baseType: !1489, size: 64)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4342, file: !1799, line: 95, baseType: !619, size: 8, offset: 64)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !4342, file: !1799, line: 95, baseType: !619, size: 8, offset: 72)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4342, file: !1799, line: 96, baseType: !632, size: 16, offset: 80)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !4342, file: !1799, line: 96, baseType: !632, size: 16, offset: 96)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4342, file: !1799, line: 96, baseType: !632, size: 16, offset: 112)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !596, file: !595, line: 73, baseType: !3272, size: 64, offset: 1472)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "mloopuv", scope: !596, file: !595, line: 74, baseType: !4352, size: 64, offset: 1536)
!4352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4353, size: 64)
!4353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !1799, line: 109, size: 96, elements: !4354)
!4354 = !{!4355, !4356}
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !4353, file: !1799, line: 110, baseType: !1118, size: 64)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4353, file: !1799, line: 111, baseType: !73, size: 32, offset: 64)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "mloopcol", scope: !596, file: !595, line: 75, baseType: !4358, size: 64, offset: 1600)
!4358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4359, size: 64)
!4359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopCol", file: !1799, line: 129, size: 32, elements: !4360)
!4360 = !{!4361, !4362, !4363, !4364}
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !4359, file: !1799, line: 130, baseType: !619, size: 8)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4359, file: !1799, line: 130, baseType: !619, size: 8, offset: 8)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4359, file: !1799, line: 130, baseType: !619, size: 8, offset: 16)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !4359, file: !1799, line: 130, baseType: !619, size: 8, offset: 24)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !596, file: !595, line: 80, baseType: !3246, size: 64, offset: 1664)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !596, file: !595, line: 81, baseType: !3472, size: 64, offset: 1728)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !596, file: !595, line: 82, baseType: !4368, size: 64, offset: 1792)
!4368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4369, size: 64)
!4369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TFace", file: !595, line: 136, size: 512, elements: !4370)
!4370 = !{!4371, !4372, !4373, !4375, !4376, !4377, !4378, !4379}
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !4369, file: !595, line: 137, baseType: !592, size: 64)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !4369, file: !595, line: 138, baseType: !1437, size: 256, offset: 64)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !4369, file: !595, line: 139, baseType: !4374, size: 128, offset: 320)
!4374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !917)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4369, file: !595, line: 140, baseType: !619, size: 8, offset: 448)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !4369, file: !595, line: 140, baseType: !619, size: 8, offset: 456)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4369, file: !595, line: 141, baseType: !632, size: 16, offset: 464)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !4369, file: !595, line: 141, baseType: !632, size: 16, offset: 480)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !4369, file: !595, line: 141, baseType: !632, size: 16, offset: 496)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !596, file: !595, line: 83, baseType: !3223, size: 64, offset: 1856)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "medge", scope: !596, file: !595, line: 84, baseType: !3234, size: 64, offset: 1920)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !596, file: !595, line: 85, baseType: !1797, size: 64, offset: 1984)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !596, file: !595, line: 89, baseType: !4384, size: 64, offset: 2048)
!4384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4385, size: 64)
!4385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !1799, line: 74, size: 32, elements: !4386)
!4386 = !{!4387, !4388, !4389, !4390}
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !4385, file: !1799, line: 75, baseType: !619, size: 8)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !4385, file: !1799, line: 75, baseType: !619, size: 8, offset: 8)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4385, file: !1799, line: 75, baseType: !619, size: 8, offset: 16)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4385, file: !1799, line: 75, baseType: !619, size: 8, offset: 24)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "texcomesh", scope: !596, file: !595, line: 90, baseType: !4392, size: 64, offset: 2112)
!4392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 64)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "edit_btmesh", scope: !596, file: !595, line: 93, baseType: !4394, size: 64, offset: 2176)
!4394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4395, size: 64)
!4395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !4396, line: 54, size: 896, elements: !4397)
!4396 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_editmesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4397 = !{!4398, !4399, !4400, !4401, !4404, !4405, !4406, !4407, !4410, !4412, !4413, !4414, !4415, !4416, !4417, !4418}
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !4395, file: !4396, line: 55, baseType: !3642, size: 64)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "emcopy", scope: !4395, file: !4396, line: 58, baseType: !4394, size: 64, offset: 64)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "emcopyusers", scope: !4395, file: !4396, line: 59, baseType: !73, size: 32, offset: 128)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "looptris", scope: !4395, file: !4396, line: 63, baseType: !4402, size: 64, offset: 192)
!4402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4403, size: 64)
!4403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3690, size: 192, elements: !836)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "tottri", scope: !4395, file: !4396, line: 64, baseType: !73, size: 32, offset: 256)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !4395, file: !4396, line: 67, baseType: !3130, size: 64, offset: 320)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "derivedCage", scope: !4395, file: !4396, line: 67, baseType: !3130, size: 64, offset: 384)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !4395, file: !4396, line: 68, baseType: !4408, size: 64, offset: 448)
!4408 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataMask", file: !4409, line: 48, baseType: !2359)
!4409 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_customdata.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColor", scope: !4395, file: !4396, line: 69, baseType: !4411, size: 64, offset: 512)
!4411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 64)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColorLen", scope: !4395, file: !4396, line: 70, baseType: !73, size: 32, offset: 576)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColor", scope: !4395, file: !4396, line: 71, baseType: !4411, size: 64, offset: 640)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColorLen", scope: !4395, file: !4396, line: 72, baseType: !73, size: 32, offset: 704)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !4395, file: !4396, line: 75, baseType: !632, size: 16, offset: 736)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !4395, file: !4396, line: 76, baseType: !632, size: 16, offset: 752)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !4395, file: !4396, line: 79, baseType: !966, size: 64, offset: 768)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_cdlayer", scope: !4395, file: !4396, line: 82, baseType: !73, size: 32, offset: 832)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !596, file: !595, line: 95, baseType: !3135, size: 1600, offset: 2240)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !596, file: !595, line: 95, baseType: !3135, size: 1600, offset: 3840)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !596, file: !595, line: 95, baseType: !3135, size: 1600, offset: 5440)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !596, file: !595, line: 98, baseType: !3135, size: 1600, offset: 7040)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !596, file: !595, line: 98, baseType: !3135, size: 1600, offset: 8640)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !596, file: !595, line: 101, baseType: !73, size: 32, offset: 10240)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !596, file: !595, line: 101, baseType: !73, size: 32, offset: 10272)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !596, file: !595, line: 101, baseType: !73, size: 32, offset: 10304)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "totselect", scope: !596, file: !595, line: 101, baseType: !73, size: 32, offset: 10336)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !596, file: !595, line: 104, baseType: !73, size: 32, offset: 10368)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !596, file: !595, line: 104, baseType: !73, size: 32, offset: 10400)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !596, file: !595, line: 111, baseType: !73, size: 32, offset: 10432)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !596, file: !595, line: 114, baseType: !835, size: 96, offset: 10464)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !596, file: !595, line: 115, baseType: !835, size: 96, offset: 10560)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !596, file: !595, line: 116, baseType: !835, size: 96, offset: 10656)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !596, file: !595, line: 118, baseType: !73, size: 32, offset: 10752)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !596, file: !595, line: 119, baseType: !632, size: 16, offset: 10784)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !596, file: !595, line: 119, baseType: !632, size: 16, offset: 10800)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !596, file: !595, line: 120, baseType: !713, size: 32, offset: 10816)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !596, file: !595, line: 121, baseType: !73, size: 32, offset: 10848)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !596, file: !595, line: 124, baseType: !619, size: 8, offset: 10880)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !596, file: !595, line: 124, baseType: !619, size: 8, offset: 10888)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "subdiv", scope: !596, file: !595, line: 126, baseType: !619, size: 8, offset: 10896)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "subdivr", scope: !596, file: !595, line: 126, baseType: !619, size: 8, offset: 10904)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "subsurftype", scope: !596, file: !595, line: 127, baseType: !619, size: 8, offset: 10912)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !596, file: !595, line: 128, baseType: !619, size: 8, offset: 10920)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !596, file: !595, line: 130, baseType: !632, size: 16, offset: 10928)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !596, file: !595, line: 132, baseType: !4447, size: 64, offset: 10944)
!4447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4448, size: 64)
!4448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Multires", file: !1799, line: 233, size: 3584, elements: !4449)
!4449 = !{!4450, !4451, !4454, !4455, !4456, !4457, !4458, !4459, !4460, !4461, !4462, !4463, !4464, !4466}
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !4448, file: !1799, line: 234, baseType: !658, size: 128)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !4448, file: !1799, line: 235, baseType: !4452, size: 64, offset: 128)
!4452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4453, size: 64)
!4453 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !1799, line: 69, baseType: !3224)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "level_count", scope: !4448, file: !1799, line: 237, baseType: !1788, size: 8, offset: 192)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !4448, file: !1799, line: 237, baseType: !1788, size: 8, offset: 200)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "newlvl", scope: !4448, file: !1799, line: 237, baseType: !1788, size: 8, offset: 208)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "edgelvl", scope: !4448, file: !1799, line: 237, baseType: !1788, size: 8, offset: 216)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "pinlvl", scope: !4448, file: !1799, line: 237, baseType: !1788, size: 8, offset: 224)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !4448, file: !1799, line: 237, baseType: !1788, size: 8, offset: 232)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "use_col", scope: !4448, file: !1799, line: 238, baseType: !1788, size: 8, offset: 240)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4448, file: !1799, line: 238, baseType: !1788, size: 8, offset: 248)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !4448, file: !1799, line: 241, baseType: !3134, size: 1600, offset: 256)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !4448, file: !1799, line: 242, baseType: !3134, size: 1600, offset: 1856)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "edge_flags", scope: !4448, file: !1799, line: 243, baseType: !4465, size: 64, offset: 3456)
!4465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "edge_creases", scope: !4448, file: !1799, line: 244, baseType: !1164, size: 64, offset: 3520)
!4467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4468, size: 64)
!4468 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curve", file: !1704, line: 273, baseType: !4469)
!4469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Curve", file: !1704, line: 193, size: 4224, elements: !4470)
!4470 = !{!4471, !4472, !4473, !4474, !4475, !4484, !4485, !4486, !4487, !4488, !4489, !4490, !4491, !4492, !4493, !4494, !4495, !4496, !4497, !4498, !4499, !4500, !4501, !4502, !4503, !4504, !4505, !4506, !4507, !4508, !4509, !4510, !4511, !4512, !4513, !4514, !4515, !4516, !4517, !4518, !4519, !4520, !4521, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529, !4530, !4531, !4532, !4535, !4536, !4539, !4540, !4541, !4542, !4550, !4551, !4552, !4561, !4562, !4563, !4564, !4565, !4566, !4567}
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4469, file: !1704, line: 194, baseType: !599, size: 960)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !4469, file: !1704, line: 195, baseType: !669, size: 64, offset: 960)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !4469, file: !1704, line: 197, baseType: !738, size: 64, offset: 1024)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "nurb", scope: !4469, file: !1704, line: 199, baseType: !658, size: 128, offset: 1088)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "editnurb", scope: !4469, file: !1704, line: 201, baseType: !4476, size: 64, offset: 1216)
!4476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4477, size: 64)
!4477 = !DIDerivedType(tag: DW_TAG_typedef, name: "EditNurb", file: !1704, line: 191, baseType: !4478)
!4478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditNurb", file: !1704, line: 180, size: 256, elements: !4479)
!4479 = !{!4480, !4481, !4482, !4483}
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "nurbs", scope: !4478, file: !1704, line: 182, baseType: !658, size: 128)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "keyindex", scope: !4478, file: !1704, line: 185, baseType: !3850, size: 64, offset: 128)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !4478, file: !1704, line: 188, baseType: !73, size: 32, offset: 192)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4478, file: !1704, line: 190, baseType: !1725, size: 32, offset: 224)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "bevobj", scope: !4469, file: !1704, line: 203, baseType: !966, size: 64, offset: 1280)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "taperobj", scope: !4469, file: !1704, line: 203, baseType: !966, size: 64, offset: 1344)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "textoncurve", scope: !4469, file: !1704, line: 203, baseType: !966, size: 64, offset: 1408)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !4469, file: !1704, line: 204, baseType: !749, size: 64, offset: 1472)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !4469, file: !1704, line: 205, baseType: !753, size: 64, offset: 1536)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !4469, file: !1704, line: 206, baseType: !795, size: 64, offset: 1600)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !4469, file: !1704, line: 209, baseType: !835, size: 96, offset: 1664)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4469, file: !1704, line: 210, baseType: !835, size: 96, offset: 1760)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !4469, file: !1704, line: 211, baseType: !835, size: 96, offset: 1856)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4469, file: !1704, line: 213, baseType: !632, size: 16, offset: 1952)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !4469, file: !1704, line: 215, baseType: !632, size: 16, offset: 1968)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !4469, file: !1704, line: 216, baseType: !632, size: 16, offset: 1984)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "twist_mode", scope: !4469, file: !1704, line: 216, baseType: !632, size: 16, offset: 2000)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "twist_smooth", scope: !4469, file: !1704, line: 217, baseType: !713, size: 32, offset: 2016)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "smallcaps_scale", scope: !4469, file: !1704, line: 217, baseType: !713, size: 32, offset: 2048)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "pathlen", scope: !4469, file: !1704, line: 219, baseType: !73, size: 32, offset: 2080)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "bevresol", scope: !4469, file: !1704, line: 220, baseType: !632, size: 16, offset: 2112)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !4469, file: !1704, line: 220, baseType: !632, size: 16, offset: 2128)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4469, file: !1704, line: 221, baseType: !73, size: 32, offset: 2144)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4469, file: !1704, line: 222, baseType: !713, size: 32, offset: 2176)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "ext1", scope: !4469, file: !1704, line: 222, baseType: !713, size: 32, offset: 2208)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "ext2", scope: !4469, file: !1704, line: 222, baseType: !713, size: 32, offset: 2240)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !4469, file: !1704, line: 225, baseType: !632, size: 16, offset: 2272)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !4469, file: !1704, line: 225, baseType: !632, size: 16, offset: 2288)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "resolu_ren", scope: !4469, file: !1704, line: 226, baseType: !632, size: 16, offset: 2304)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "resolv_ren", scope: !4469, file: !1704, line: 226, baseType: !632, size: 16, offset: 2320)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "actnu", scope: !4469, file: !1704, line: 229, baseType: !73, size: 32, offset: 2336)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "actvert", scope: !4469, file: !1704, line: 231, baseType: !73, size: 32, offset: 2368)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4469, file: !1704, line: 233, baseType: !1725, size: 32, offset: 2400)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !4469, file: !1704, line: 236, baseType: !632, size: 16, offset: 2432)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "spacemode", scope: !4469, file: !1704, line: 237, baseType: !619, size: 8, offset: 2448)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !4469, file: !1704, line: 237, baseType: !619, size: 8, offset: 2456)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !4469, file: !1704, line: 238, baseType: !713, size: 32, offset: 2464)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "linedist", scope: !4469, file: !1704, line: 238, baseType: !713, size: 32, offset: 2496)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "shear", scope: !4469, file: !1704, line: 238, baseType: !713, size: 32, offset: 2528)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !4469, file: !1704, line: 238, baseType: !713, size: 32, offset: 2560)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "wordspace", scope: !4469, file: !1704, line: 238, baseType: !713, size: 32, offset: 2592)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "ulpos", scope: !4469, file: !1704, line: 238, baseType: !713, size: 32, offset: 2624)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "ulheight", scope: !4469, file: !1704, line: 238, baseType: !713, size: 32, offset: 2656)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !4469, file: !1704, line: 239, baseType: !713, size: 32, offset: 2688)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !4469, file: !1704, line: 239, baseType: !713, size: 32, offset: 2720)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "linewidth", scope: !4469, file: !1704, line: 240, baseType: !713, size: 32, offset: 2752)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4469, file: !1704, line: 244, baseType: !73, size: 32, offset: 2784)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "selstart", scope: !4469, file: !1704, line: 245, baseType: !73, size: 32, offset: 2816)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "selend", scope: !4469, file: !1704, line: 245, baseType: !73, size: 32, offset: 2848)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "len_wchar", scope: !4469, file: !1704, line: 248, baseType: !73, size: 32, offset: 2880)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4469, file: !1704, line: 249, baseType: !73, size: 32, offset: 2912)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4469, file: !1704, line: 250, baseType: !1164, size: 64, offset: 2944)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "editfont", scope: !4469, file: !1704, line: 251, baseType: !4533, size: 64, offset: 3008)
!4533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4534, size: 64)
!4534 = !DICompositeType(tag: DW_TAG_structure_type, name: "EditFont", file: !1704, line: 50, flags: DIFlagFwdDecl)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !4469, file: !1704, line: 253, baseType: !648, size: 512, offset: 3072)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !4469, file: !1704, line: 254, baseType: !4537, size: 64, offset: 3584)
!4537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4538, size: 64)
!4538 = !DICompositeType(tag: DW_TAG_structure_type, name: "VFont", file: !1704, line: 47, flags: DIFlagFwdDecl)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "vfontb", scope: !4469, file: !1704, line: 255, baseType: !4537, size: 64, offset: 3648)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "vfonti", scope: !4469, file: !1704, line: 256, baseType: !4537, size: 64, offset: 3712)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "vfontbi", scope: !4469, file: !1704, line: 257, baseType: !4537, size: 64, offset: 3776)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "tb", scope: !4469, file: !1704, line: 259, baseType: !4543, size: 64, offset: 3840)
!4543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4544, size: 64)
!4544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TextBox", file: !1704, line: 176, size: 128, elements: !4545)
!4545 = !{!4546, !4547, !4548, !4549}
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4544, file: !1704, line: 177, baseType: !713, size: 32)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4544, file: !1704, line: 177, baseType: !713, size: 32, offset: 32)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !4544, file: !1704, line: 177, baseType: !713, size: 32, offset: 64)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !4544, file: !1704, line: 177, baseType: !713, size: 32, offset: 96)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "totbox", scope: !4469, file: !1704, line: 260, baseType: !73, size: 32, offset: 3904)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "actbox", scope: !4469, file: !1704, line: 260, baseType: !73, size: 32, offset: 3936)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "strinfo", scope: !4469, file: !1704, line: 262, baseType: !4553, size: 64, offset: 3968)
!4553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4554, size: 64)
!4554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CharInfo", file: !1704, line: 168, size: 64, elements: !4555)
!4555 = !{!4556, !4557, !4558, !4559, !4560}
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "kern", scope: !4554, file: !1704, line: 169, baseType: !632, size: 16)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !4554, file: !1704, line: 170, baseType: !632, size: 16, offset: 16)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4554, file: !1704, line: 171, baseType: !619, size: 8, offset: 32)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4554, file: !1704, line: 172, baseType: !619, size: 8, offset: 40)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !4554, file: !1704, line: 173, baseType: !632, size: 16, offset: 48)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "curinfo", scope: !4469, file: !1704, line: 263, baseType: !4554, size: 64, offset: 4032)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !4469, file: !1704, line: 267, baseType: !713, size: 32, offset: 4096)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1", scope: !4469, file: !1704, line: 268, baseType: !713, size: 32, offset: 4128)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2", scope: !4469, file: !1704, line: 268, baseType: !713, size: 32, offset: 4160)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1_mapping", scope: !4469, file: !1704, line: 269, baseType: !619, size: 8, offset: 4192)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2_mapping", scope: !4469, file: !1704, line: 269, baseType: !619, size: 8, offset: 4200)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !4469, file: !1704, line: 271, baseType: !1979, size: 16, offset: 4208)
!4568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4569, size: 64)
!4569 = !DIDerivedType(tag: DW_TAG_typedef, name: "MetaBall", file: !4570, line: 95, baseType: !4571)
!4570 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meta_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MetaBall", file: !4570, line: 64, size: 1984, elements: !4572)
!4572 = !{!4573, !4574, !4575, !4576, !4577, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586, !4587, !4588, !4589, !4590, !4591}
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4571, file: !4570, line: 65, baseType: !599, size: 960)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !4571, file: !4570, line: 66, baseType: !669, size: 64, offset: 960)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "elems", scope: !4571, file: !4570, line: 68, baseType: !658, size: 128, offset: 1024)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !4571, file: !4570, line: 69, baseType: !658, size: 128, offset: 1152)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "editelems", scope: !4571, file: !4570, line: 70, baseType: !1209, size: 64, offset: 1280)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !4571, file: !4570, line: 71, baseType: !749, size: 64, offset: 1344)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !4571, file: !4570, line: 74, baseType: !795, size: 64, offset: 1408)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4571, file: !4570, line: 76, baseType: !619, size: 8, offset: 1472)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !4571, file: !4570, line: 76, baseType: !619, size: 8, offset: 1480)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !4571, file: !4570, line: 77, baseType: !632, size: 16, offset: 1488)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !4571, file: !4570, line: 78, baseType: !632, size: 16, offset: 1504)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4571, file: !4570, line: 78, baseType: !632, size: 16, offset: 1520)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !4571, file: !4570, line: 81, baseType: !835, size: 96, offset: 1536)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4571, file: !4570, line: 82, baseType: !835, size: 96, offset: 1632)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !4571, file: !4570, line: 83, baseType: !835, size: 96, offset: 1728)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "wiresize", scope: !4571, file: !4570, line: 85, baseType: !713, size: 32, offset: 1824)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "rendersize", scope: !4571, file: !4570, line: 85, baseType: !713, size: 32, offset: 1856)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "thresh", scope: !4571, file: !4570, line: 90, baseType: !713, size: 32, offset: 1888)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "lastelem", scope: !4571, file: !4570, line: 94, baseType: !4592, size: 64, offset: 1920)
!4592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4593, size: 64)
!4593 = !DIDerivedType(tag: DW_TAG_typedef, name: "MetaElem", file: !4570, line: 62, baseType: !4594)
!4594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MetaElem", file: !4570, line: 44, size: 832, elements: !4595)
!4595 = !{!4596, !4598, !4599, !4600, !4601, !4602, !4603, !4604, !4605, !4606, !4607, !4608, !4609, !4610, !4611, !4612, !4613, !4614, !4615, !4616}
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4594, file: !4570, line: 45, baseType: !4597, size: 64)
!4597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4594, size: 64)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4594, file: !4570, line: 45, baseType: !4597, size: 64, offset: 64)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !4594, file: !4570, line: 47, baseType: !738, size: 64, offset: 128)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4594, file: !4570, line: 49, baseType: !632, size: 16, offset: 192)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4594, file: !4570, line: 49, baseType: !632, size: 16, offset: 208)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "selcol1", scope: !4594, file: !4570, line: 49, baseType: !632, size: 16, offset: 224)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "selcol2", scope: !4594, file: !4570, line: 49, baseType: !632, size: 16, offset: 240)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4594, file: !4570, line: 50, baseType: !713, size: 32, offset: 256)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4594, file: !4570, line: 50, baseType: !713, size: 32, offset: 288)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !4594, file: !4570, line: 50, baseType: !713, size: 32, offset: 320)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !4594, file: !4570, line: 51, baseType: !916, size: 128, offset: 352)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "expx", scope: !4594, file: !4570, line: 52, baseType: !713, size: 32, offset: 480)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "expy", scope: !4594, file: !4570, line: 53, baseType: !713, size: 32, offset: 512)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "expz", scope: !4594, file: !4570, line: 54, baseType: !713, size: 32, offset: 544)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !4594, file: !4570, line: 55, baseType: !713, size: 32, offset: 576)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "rad2", scope: !4594, file: !4570, line: 56, baseType: !713, size: 32, offset: 608)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4594, file: !4570, line: 57, baseType: !713, size: 32, offset: 640)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4594, file: !4570, line: 58, baseType: !713, size: 32, offset: 672)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !4594, file: !4570, line: 60, baseType: !1073, size: 64, offset: 704)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !4594, file: !4570, line: 60, baseType: !1073, size: 64, offset: 768)
!4617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4618, size: 64)
!4618 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoidRuleGoalAvoid", file: !191, line: 74, baseType: !4619)
!4619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidRuleGoalAvoid", file: !191, line: 66, size: 640, elements: !4620)
!4620 = !{!4621, !4631, !4632, !4633, !4634, !4635}
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "rule", scope: !4619, file: !191, line: 67, baseType: !4622, size: 448)
!4622 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoidRule", file: !191, line: 62, baseType: !4623)
!4623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidRule", file: !191, line: 58, size: 448, elements: !4624)
!4624 = !{!4625, !4627, !4628, !4629, !4630}
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4623, file: !191, line: 59, baseType: !4626, size: 64)
!4626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4623, size: 64)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4623, file: !191, line: 59, baseType: !4626, size: 64, offset: 64)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4623, file: !191, line: 60, baseType: !73, size: 32, offset: 128)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4623, file: !191, line: 60, baseType: !73, size: 32, offset: 160)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4623, file: !191, line: 61, baseType: !780, size: 256, offset: 192)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !4619, file: !191, line: 68, baseType: !966, size: 64, offset: 448)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !4619, file: !191, line: 69, baseType: !73, size: 32, offset: 512)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "fear_factor", scope: !4619, file: !191, line: 70, baseType: !713, size: 32, offset: 544)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "signal_id", scope: !4619, file: !191, line: 73, baseType: !73, size: 32, offset: 576)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !4619, file: !191, line: 73, baseType: !73, size: 32, offset: 608)
!4636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4637, size: 64)
!4637 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoidRuleFollowLeader", file: !191, line: 89, baseType: !4638)
!4638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidRuleFollowLeader", file: !191, line: 83, size: 832, elements: !4639)
!4639 = !{!4640, !4641, !4642, !4643, !4644, !4645, !4646, !4647}
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "rule", scope: !4638, file: !191, line: 84, baseType: !4622, size: 448)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !4638, file: !191, line: 85, baseType: !966, size: 64, offset: 448)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !4638, file: !191, line: 86, baseType: !835, size: 96, offset: 512)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "oloc", scope: !4638, file: !191, line: 86, baseType: !835, size: 96, offset: 608)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !4638, file: !191, line: 87, baseType: !713, size: 32, offset: 704)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !4638, file: !191, line: 87, baseType: !713, size: 32, offset: 736)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !4638, file: !191, line: 88, baseType: !73, size: 32, offset: 768)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "queue_size", scope: !4638, file: !191, line: 88, baseType: !73, size: 32, offset: 800)
!4648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4649, size: 64)
!4649 = !DIDerivedType(tag: DW_TAG_typedef, name: "FreestyleLineSet", file: !4650, line: 117, baseType: !4651)
!4650 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FreestyleLineSet", file: !4650, line: 102, size: 1024, elements: !4652)
!4652 = !{!4653, !4655, !4656, !4657, !4658, !4659, !4660, !4661, !4662, !4663, !4664, !4665, !4666, !4667}
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4651, file: !4650, line: 103, baseType: !4654, size: 64)
!4654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4651, size: 64)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4651, file: !4650, line: 103, baseType: !4654, size: 64, offset: 64)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4651, file: !4650, line: 105, baseType: !648, size: 512, offset: 128)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4651, file: !4650, line: 106, baseType: !73, size: 32, offset: 640)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "selection", scope: !4651, file: !4650, line: 108, baseType: !73, size: 32, offset: 672)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "qi", scope: !4651, file: !4650, line: 109, baseType: !632, size: 16, offset: 704)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !4651, file: !4650, line: 110, baseType: !632, size: 16, offset: 720)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "qi_start", scope: !4651, file: !4650, line: 111, baseType: !73, size: 32, offset: 736)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "qi_end", scope: !4651, file: !4650, line: 111, baseType: !73, size: 32, offset: 768)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "edge_types", scope: !4651, file: !4650, line: 112, baseType: !73, size: 32, offset: 800)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_edge_types", scope: !4651, file: !4650, line: 112, baseType: !73, size: 32, offset: 832)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !4651, file: !4650, line: 113, baseType: !73, size: 32, offset: 864)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !4651, file: !4650, line: 114, baseType: !2379, size: 64, offset: 896)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !4651, file: !4650, line: 116, baseType: !4668, size: 64, offset: 960)
!4668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4669, size: 64)
!4669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FreestyleLineStyle", file: !4670, line: 421, size: 3712, elements: !4671)
!4670 = !DIFile(filename: "blender/source/blender/makesdna/DNA_linestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4671 = !{!4672, !4673, !4674, !4675, !4676, !4677, !4678, !4679, !4680, !4681, !4682, !4683, !4684, !4685, !4686, !4687, !4688, !4689, !4690, !4691, !4692, !4693, !4694, !4695, !4696, !4697, !4698, !4699, !4700, !4701, !4702, !4703, !4704, !4705, !4706, !4707, !4708, !4709, !4710, !4711, !4712, !4713, !4714, !4715, !4716}
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4669, file: !4670, line: 422, baseType: !599, size: 960)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !4669, file: !4670, line: 423, baseType: !669, size: 64, offset: 960)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !4669, file: !4670, line: 425, baseType: !713, size: 32, offset: 1024)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4669, file: !4670, line: 425, baseType: !713, size: 32, offset: 1056)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4669, file: !4670, line: 425, baseType: !713, size: 32, offset: 1088)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !4669, file: !4670, line: 425, baseType: !713, size: 32, offset: 1120)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "thickness", scope: !4669, file: !4670, line: 426, baseType: !713, size: 32, offset: 1152)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_position", scope: !4669, file: !4670, line: 427, baseType: !73, size: 32, offset: 1184)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_ratio", scope: !4669, file: !4670, line: 428, baseType: !713, size: 32, offset: 1216)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4669, file: !4670, line: 429, baseType: !73, size: 32, offset: 1248)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !4669, file: !4670, line: 429, baseType: !73, size: 32, offset: 1280)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "chaining", scope: !4669, file: !4670, line: 430, baseType: !73, size: 32, offset: 1312)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "rounds", scope: !4669, file: !4670, line: 431, baseType: !7, size: 32, offset: 1344)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "split_length", scope: !4669, file: !4670, line: 432, baseType: !713, size: 32, offset: 1376)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "min_angle", scope: !4669, file: !4670, line: 433, baseType: !713, size: 32, offset: 1408)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "max_angle", scope: !4669, file: !4670, line: 433, baseType: !713, size: 32, offset: 1440)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "min_length", scope: !4669, file: !4670, line: 434, baseType: !713, size: 32, offset: 1472)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "max_length", scope: !4669, file: !4670, line: 434, baseType: !713, size: 32, offset: 1504)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "chain_count", scope: !4669, file: !4670, line: 435, baseType: !7, size: 32, offset: 1536)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "split_dash1", scope: !4669, file: !4670, line: 436, baseType: !2592, size: 16, offset: 1568)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "split_gap1", scope: !4669, file: !4670, line: 436, baseType: !2592, size: 16, offset: 1584)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "split_dash2", scope: !4669, file: !4670, line: 437, baseType: !2592, size: 16, offset: 1600)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "split_gap2", scope: !4669, file: !4670, line: 437, baseType: !2592, size: 16, offset: 1616)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "split_dash3", scope: !4669, file: !4670, line: 438, baseType: !2592, size: 16, offset: 1632)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "split_gap3", scope: !4669, file: !4670, line: 438, baseType: !2592, size: 16, offset: 1648)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "sort_key", scope: !4669, file: !4670, line: 439, baseType: !73, size: 32, offset: 1664)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "integration_type", scope: !4669, file: !4670, line: 439, baseType: !73, size: 32, offset: 1696)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "texstep", scope: !4669, file: !4670, line: 440, baseType: !713, size: 32, offset: 1728)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !4669, file: !4670, line: 441, baseType: !632, size: 16, offset: 1760)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !4669, file: !4670, line: 441, baseType: !632, size: 16, offset: 1776)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !4669, file: !4670, line: 442, baseType: !632, size: 16, offset: 1792)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4669, file: !4670, line: 442, baseType: !2289, size: 48, offset: 1808)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "dash1", scope: !4669, file: !4670, line: 443, baseType: !2592, size: 16, offset: 1856)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "gap1", scope: !4669, file: !4670, line: 443, baseType: !2592, size: 16, offset: 1872)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "dash2", scope: !4669, file: !4670, line: 443, baseType: !2592, size: 16, offset: 1888)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "gap2", scope: !4669, file: !4670, line: 443, baseType: !2592, size: 16, offset: 1904)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "dash3", scope: !4669, file: !4670, line: 443, baseType: !2592, size: 16, offset: 1920)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "gap3", scope: !4669, file: !4670, line: 443, baseType: !2592, size: 16, offset: 1936)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "panel", scope: !4669, file: !4670, line: 444, baseType: !73, size: 32, offset: 1952)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !4669, file: !4670, line: 446, baseType: !957, size: 1152, offset: 1984)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !4669, file: !4670, line: 448, baseType: !1100, size: 64, offset: 3136)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "color_modifiers", scope: !4669, file: !4670, line: 450, baseType: !658, size: 128, offset: 3200)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_modifiers", scope: !4669, file: !4670, line: 451, baseType: !658, size: 128, offset: 3328)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_modifiers", scope: !4669, file: !4670, line: 452, baseType: !658, size: 128, offset: 3456)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "geometry_modifiers", scope: !4669, file: !4670, line: 453, baseType: !658, size: 128, offset: 3584)
!4717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4718, size: 64)
!4718 = !DIDerivedType(tag: DW_TAG_typedef, name: "View3D", file: !4719, line: 221, baseType: !4720)
!4719 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view3d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View3D", file: !4719, line: 151, size: 3008, elements: !4721)
!4721 = !{!4722, !4733, !4734, !4735, !4736, !4737, !4738, !4739, !4740, !4741, !4742, !4743, !4744, !4745, !4746, !4747, !4748, !4749, !4750, !4751, !4774, !4776, !4777, !4778, !4779, !4780, !4781, !4782, !4783, !4784, !4785, !4786, !4787, !4788, !4789, !4790, !4791, !4792, !4793, !4794, !4795, !4796, !4797, !4798, !4799, !4800, !4801, !4802, !4803, !4804, !4805, !4806, !4807, !4808}
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4720, file: !4719, line: 152, baseType: !4723, size: 64)
!4723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4724, size: 64)
!4724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !204, line: 85, size: 448, elements: !4725)
!4725 = !{!4726, !4727, !4728, !4729, !4730, !4731}
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4724, file: !204, line: 86, baseType: !4723, size: 64)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4724, file: !204, line: 86, baseType: !4723, size: 64, offset: 64)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !4724, file: !204, line: 87, baseType: !658, size: 128, offset: 128)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !4724, file: !204, line: 88, baseType: !73, size: 32, offset: 256)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !4724, file: !204, line: 89, baseType: !713, size: 32, offset: 288)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !4724, file: !204, line: 90, baseType: !4732, size: 128, offset: 320)
!4732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !632, size: 128, elements: !1504)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4720, file: !4719, line: 152, baseType: !4723, size: 64, offset: 64)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !4720, file: !4719, line: 153, baseType: !658, size: 128, offset: 128)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !4720, file: !4719, line: 154, baseType: !73, size: 32, offset: 256)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !4720, file: !4719, line: 155, baseType: !713, size: 32, offset: 288)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !4720, file: !4719, line: 156, baseType: !4732, size: 128, offset: 320)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !4720, file: !4719, line: 158, baseType: !916, size: 128, offset: 448)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !4720, file: !4719, line: 159, baseType: !713, size: 32, offset: 576)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_size", scope: !4720, file: !4719, line: 161, baseType: !713, size: 32, offset: 608)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_drawtype", scope: !4720, file: !4719, line: 162, baseType: !619, size: 8, offset: 640)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4720, file: !4719, line: 163, baseType: !1608, size: 24, offset: 648)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "lay_prev", scope: !4720, file: !4719, line: 165, baseType: !7, size: 32, offset: 672)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "lay_used", scope: !4720, file: !4719, line: 166, baseType: !7, size: 32, offset: 704)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !4720, file: !4719, line: 168, baseType: !632, size: 16, offset: 736)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !4720, file: !4719, line: 169, baseType: !632, size: 16, offset: 752)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !4720, file: !4719, line: 171, baseType: !966, size: 64, offset: 768)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre", scope: !4720, file: !4719, line: 171, baseType: !966, size: 64, offset: 832)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "render_border", scope: !4720, file: !4719, line: 172, baseType: !1134, size: 128, offset: 896)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "bgpicbase", scope: !4720, file: !4719, line: 174, baseType: !660, size: 128, offset: 1024)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "bgpic", scope: !4720, file: !4719, line: 175, baseType: !4752, size: 64, offset: 1152)
!4752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4753, size: 64)
!4753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BGpic", file: !4719, line: 70, size: 832, elements: !4754)
!4754 = !{!4755, !4756, !4757, !4758, !4759, !4760, !4766, !4767, !4768, !4769, !4770, !4771, !4772, !4773}
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4753, file: !4719, line: 71, baseType: !4752, size: 64)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4753, file: !4719, line: 71, baseType: !4752, size: 64, offset: 64)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !4753, file: !4719, line: 73, baseType: !1489, size: 64, offset: 128)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !4753, file: !4719, line: 74, baseType: !2964, size: 320, offset: 192)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !4753, file: !4719, line: 75, baseType: !1320, size: 64, offset: 512)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "cuser", scope: !4753, file: !4719, line: 76, baseType: !4761, size: 64, offset: 576)
!4761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipUser", file: !1322, line: 50, size: 64, elements: !4762)
!4762 = !{!4763, !4764, !4765}
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !4761, file: !1322, line: 51, baseType: !73, size: 32)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "render_size", scope: !4761, file: !1322, line: 52, baseType: !632, size: 16, offset: 32)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "render_flag", scope: !4761, file: !1322, line: 52, baseType: !632, size: 16, offset: 48)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !4753, file: !4719, line: 77, baseType: !713, size: 32, offset: 640)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !4753, file: !4719, line: 77, baseType: !713, size: 32, offset: 672)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4753, file: !4719, line: 77, baseType: !713, size: 32, offset: 704)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !4753, file: !4719, line: 77, baseType: !713, size: 32, offset: 736)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !4753, file: !4719, line: 78, baseType: !632, size: 16, offset: 768)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4753, file: !4719, line: 79, baseType: !632, size: 16, offset: 784)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !4753, file: !4719, line: 80, baseType: !632, size: 16, offset: 800)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4753, file: !4719, line: 80, baseType: !632, size: 16, offset: 816)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !4720, file: !4719, line: 177, baseType: !4775, size: 64, offset: 1216)
!4775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4720, size: 64)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_bone", scope: !4720, file: !4719, line: 179, baseType: !648, size: 512, offset: 1280)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !4720, file: !4719, line: 181, baseType: !7, size: 32, offset: 1792)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !4720, file: !4719, line: 182, baseType: !73, size: 32, offset: 1824)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !4720, file: !4719, line: 187, baseType: !632, size: 16, offset: 1856)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_cursor", scope: !4720, file: !4719, line: 188, baseType: !632, size: 16, offset: 1872)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "scenelock", scope: !4720, file: !4719, line: 189, baseType: !632, size: 16, offset: 1888)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !4720, file: !4719, line: 189, baseType: !632, size: 16, offset: 1904)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4720, file: !4719, line: 190, baseType: !632, size: 16, offset: 1920)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !4720, file: !4719, line: 190, baseType: !632, size: 16, offset: 1936)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "lens", scope: !4720, file: !4719, line: 192, baseType: !713, size: 32, offset: 1952)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "grid", scope: !4720, file: !4719, line: 192, baseType: !713, size: 32, offset: 1984)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "near", scope: !4720, file: !4719, line: 193, baseType: !713, size: 32, offset: 2016)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "far", scope: !4720, file: !4719, line: 193, baseType: !713, size: 32, offset: 2048)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !4720, file: !4719, line: 194, baseType: !835, size: 96, offset: 2080)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !4720, file: !4719, line: 195, baseType: !835, size: 96, offset: 2176)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "matcap_icon", scope: !4720, file: !4719, line: 197, baseType: !632, size: 16, offset: 2272)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "gridlines", scope: !4720, file: !4719, line: 199, baseType: !632, size: 16, offset: 2288)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "gridsubdiv", scope: !4720, file: !4719, line: 200, baseType: !632, size: 16, offset: 2304)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "gridflag", scope: !4720, file: !4719, line: 201, baseType: !619, size: 8, offset: 2320)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "twtype", scope: !4720, file: !4719, line: 204, baseType: !619, size: 8, offset: 2328)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "twmode", scope: !4720, file: !4719, line: 204, baseType: !619, size: 8, offset: 2336)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "twflag", scope: !4720, file: !4719, line: 204, baseType: !619, size: 8, offset: 2344)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !4720, file: !4719, line: 204, baseType: !1979, size: 16, offset: 2352)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_transp", scope: !4720, file: !4719, line: 207, baseType: !660, size: 128, offset: 2368)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xray", scope: !4720, file: !4719, line: 208, baseType: !660, size: 128, offset: 2496)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xraytransp", scope: !4720, file: !4719, line: 209, baseType: !660, size: 128, offset: 2624)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !4720, file: !4719, line: 212, baseType: !619, size: 8, offset: 2752)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !4720, file: !4719, line: 212, baseType: !619, size: 8, offset: 2760)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "xray", scope: !4720, file: !4719, line: 212, baseType: !619, size: 8, offset: 2768)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !4720, file: !4719, line: 213, baseType: !1845, size: 40, offset: 2776)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "properties_storage", scope: !4720, file: !4719, line: 215, baseType: !592, size: 64, offset: 2816)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "defmaterial", scope: !4720, file: !4719, line: 216, baseType: !796, size: 64, offset: 2880)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !4720, file: !4719, line: 219, baseType: !1114, size: 64, offset: 2944)
!4809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4810, size: 64)
!4810 = !DIDerivedType(tag: DW_TAG_typedef, name: "RegionView3D", file: !4719, line: 148, baseType: !4811)
!4811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RegionView3D", file: !4719, line: 85, size: 7040, elements: !4812)
!4812 = !{!4813, !4814, !4815, !4816, !4817, !4818, !4819, !4820, !4823, !4824, !4825, !4827, !4830, !4833, !4834, !4837, !4841, !4842, !4843, !4844, !4845, !4846, !4847, !4848, !4849, !4850, !4851, !4852, !4853, !4854, !4855, !4856, !4857, !4858, !4859, !4860, !4861, !4862, !4863, !4864}
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !4811, file: !4719, line: 87, baseType: !1404, size: 512)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !4811, file: !4719, line: 88, baseType: !1404, size: 512, offset: 512)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "viewinv", scope: !4811, file: !4719, line: 89, baseType: !1404, size: 512, offset: 1024)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "persmat", scope: !4811, file: !4719, line: 90, baseType: !1404, size: 512, offset: 1536)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "persinv", scope: !4811, file: !4719, line: 91, baseType: !1404, size: 512, offset: 2048)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "viewmatob", scope: !4811, file: !4719, line: 94, baseType: !1404, size: 512, offset: 2560)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "persmatob", scope: !4811, file: !4719, line: 95, baseType: !1404, size: 512, offset: 3072)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !4811, file: !4719, line: 99, baseType: !4821, size: 768, offset: 3584)
!4821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, size: 768, elements: !4822)
!4822 = !{!2016, !918}
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "clip_local", scope: !4811, file: !4719, line: 100, baseType: !4821, size: 768, offset: 4352)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "clipbb", scope: !4811, file: !4719, line: 101, baseType: !738, size: 64, offset: 5120)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !4811, file: !4719, line: 103, baseType: !4826, size: 64, offset: 5184)
!4826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4811, size: 64)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "render_engine", scope: !4811, file: !4719, line: 104, baseType: !4828, size: 64, offset: 5248)
!4828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4829, size: 64)
!4829 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngine", file: !4719, line: 44, flags: DIFlagFwdDecl)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "depths", scope: !4811, file: !4719, line: 105, baseType: !4831, size: 64, offset: 5312)
!4831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4832, size: 64)
!4832 = !DICompositeType(tag: DW_TAG_structure_type, name: "ViewDepths", file: !4719, line: 35, flags: DIFlagFwdDecl)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "gpuoffscreen", scope: !4811, file: !4719, line: 106, baseType: !592, size: 64, offset: 5376)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !4811, file: !4719, line: 109, baseType: !4835, size: 64, offset: 5440)
!4835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4836, size: 64)
!4836 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView3DStore", file: !4719, line: 46, flags: DIFlagFwdDecl)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !4811, file: !4719, line: 110, baseType: !4838, size: 64, offset: 5504)
!4838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4839, size: 64)
!4839 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !4840, line: 69, flags: DIFlagFwdDecl)
!4840 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "twmat", scope: !4811, file: !4719, line: 114, baseType: !1404, size: 512, offset: 5568)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !4811, file: !4719, line: 116, baseType: !916, size: 128, offset: 6080)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !4811, file: !4719, line: 117, baseType: !713, size: 32, offset: 6208)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "camdx", scope: !4811, file: !4719, line: 118, baseType: !713, size: 32, offset: 6240)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "camdy", scope: !4811, file: !4719, line: 118, baseType: !713, size: 32, offset: 6272)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "pixsize", scope: !4811, file: !4719, line: 119, baseType: !713, size: 32, offset: 6304)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !4811, file: !4719, line: 120, baseType: !835, size: 96, offset: 6336)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "camzoom", scope: !4811, file: !4719, line: 122, baseType: !713, size: 32, offset: 6432)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "is_persp", scope: !4811, file: !4719, line: 123, baseType: !619, size: 8, offset: 6464)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !4811, file: !4719, line: 125, baseType: !619, size: 8, offset: 6472)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !4811, file: !4719, line: 126, baseType: !619, size: 8, offset: 6480)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock", scope: !4811, file: !4719, line: 127, baseType: !619, size: 8, offset: 6488)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "viewlock_quad", scope: !4811, file: !4719, line: 128, baseType: !619, size: 8, offset: 6496)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4811, file: !4719, line: 129, baseType: !1608, size: 24, offset: 6504)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "ofs_lock", scope: !4811, file: !4719, line: 130, baseType: !1118, size: 64, offset: 6528)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "twdrawflag", scope: !4811, file: !4719, line: 132, baseType: !632, size: 16, offset: 6592)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "rflag", scope: !4811, file: !4719, line: 133, baseType: !632, size: 16, offset: 6608)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "lviewquat", scope: !4811, file: !4719, line: 137, baseType: !916, size: 128, offset: 6624)
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "lpersp", scope: !4811, file: !4719, line: 138, baseType: !632, size: 16, offset: 6752)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "lview", scope: !4811, file: !4719, line: 138, baseType: !632, size: 16, offset: 6768)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "gridview", scope: !4811, file: !4719, line: 140, baseType: !713, size: 32, offset: 6784)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "tw_idot", scope: !4811, file: !4719, line: 141, baseType: !835, size: 96, offset: 6816)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "rot_angle", scope: !4811, file: !4719, line: 145, baseType: !713, size: 32, offset: 6912)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "rot_axis", scope: !4811, file: !4719, line: 146, baseType: !835, size: 96, offset: 6944)
!4865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4866, size: 64)
!4866 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceOops", file: !204, line: 267, baseType: !4867)
!4867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceOops", file: !204, line: 240, size: 2432, elements: !4868)
!4868 = !{!4869, !4872, !4873, !4874, !4875, !4876, !4877, !4909, !4910, !4911, !4912, !4921, !4922, !4923, !4924, !4925}
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4867, file: !204, line: 241, baseType: !4870, size: 64)
!4870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4871, size: 64)
!4871 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceLink", file: !204, line: 91, baseType: !4724)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4867, file: !204, line: 241, baseType: !4870, size: 64, offset: 64)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !4867, file: !204, line: 242, baseType: !658, size: 128, offset: 128)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !4867, file: !204, line: 243, baseType: !73, size: 32, offset: 256)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !4867, file: !204, line: 244, baseType: !713, size: 32, offset: 288)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !4867, file: !204, line: 245, baseType: !4732, size: 128, offset: 320)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !4867, file: !204, line: 247, baseType: !4878, size: 1280, offset: 448)
!4878 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !4840, line: 71, baseType: !4879)
!4879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !4840, line: 40, size: 1280, elements: !4880)
!4880 = !{!4881, !4882, !4883, !4884, !4885, !4886, !4887, !4888, !4889, !4890, !4891, !4892, !4893, !4894, !4895, !4896, !4897, !4898, !4899, !4900, !4901, !4902, !4903, !4904, !4905, !4908}
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !4879, file: !4840, line: 41, baseType: !1134, size: 128)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !4879, file: !4840, line: 41, baseType: !1134, size: 128, offset: 128)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !4879, file: !4840, line: 42, baseType: !2158, size: 128, offset: 256)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !4879, file: !4840, line: 42, baseType: !2158, size: 128, offset: 384)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4879, file: !4840, line: 43, baseType: !2158, size: 128, offset: 512)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !4879, file: !4840, line: 45, baseType: !1118, size: 64, offset: 640)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4879, file: !4840, line: 45, baseType: !1118, size: 64, offset: 704)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !4879, file: !4840, line: 46, baseType: !713, size: 32, offset: 768)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !4879, file: !4840, line: 46, baseType: !713, size: 32, offset: 800)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !4879, file: !4840, line: 48, baseType: !632, size: 16, offset: 832)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !4879, file: !4840, line: 49, baseType: !632, size: 16, offset: 848)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !4879, file: !4840, line: 51, baseType: !632, size: 16, offset: 864)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !4879, file: !4840, line: 52, baseType: !632, size: 16, offset: 880)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !4879, file: !4840, line: 53, baseType: !632, size: 16, offset: 896)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4879, file: !4840, line: 55, baseType: !632, size: 16, offset: 912)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !4879, file: !4840, line: 56, baseType: !632, size: 16, offset: 928)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !4879, file: !4840, line: 58, baseType: !632, size: 16, offset: 944)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !4879, file: !4840, line: 58, baseType: !632, size: 16, offset: 960)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !4879, file: !4840, line: 59, baseType: !632, size: 16, offset: 976)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !4879, file: !4840, line: 59, baseType: !632, size: 16, offset: 992)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !4879, file: !4840, line: 61, baseType: !632, size: 16, offset: 1008)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !4879, file: !4840, line: 63, baseType: !1073, size: 64, offset: 1024)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !4879, file: !4840, line: 64, baseType: !73, size: 32, offset: 1088)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !4879, file: !4840, line: 65, baseType: !73, size: 32, offset: 1120)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !4879, file: !4840, line: 68, baseType: !4906, size: 64, offset: 1152)
!4906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4907, size: 64)
!4907 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !4840, line: 68, flags: DIFlagFwdDecl)
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !4879, file: !4840, line: 69, baseType: !4838, size: 64, offset: 1216)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !4867, file: !204, line: 249, baseType: !658, size: 128, offset: 1728)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "treestore", scope: !4867, file: !204, line: 257, baseType: !3160, size: 64, offset: 1856)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "search_string", scope: !4867, file: !204, line: 260, baseType: !780, size: 256, offset: 1920)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "search_tse", scope: !4867, file: !204, line: 261, baseType: !4913, size: 128, offset: 2176)
!4913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TreeStoreElem", file: !4914, line: 39, size: 128, elements: !4915)
!4914 = !DIFile(filename: "blender/source/blender/makesdna/DNA_outliner_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4915 = !{!4916, !4917, !4918, !4919, !4920}
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4913, file: !4914, line: 40, baseType: !632, size: 16)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !4913, file: !4914, line: 40, baseType: !632, size: 16, offset: 16)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4913, file: !4914, line: 40, baseType: !632, size: 16, offset: 32)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !4913, file: !4914, line: 40, baseType: !632, size: 16, offset: 48)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4913, file: !4914, line: 41, baseType: !606, size: 64, offset: 64)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4867, file: !204, line: 263, baseType: !632, size: 16, offset: 2304)
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "outlinevis", scope: !4867, file: !204, line: 263, baseType: !632, size: 16, offset: 2320)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "storeflag", scope: !4867, file: !204, line: 263, baseType: !632, size: 16, offset: 2336)
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "search_flags", scope: !4867, file: !204, line: 263, baseType: !632, size: 16, offset: 2352)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "treehash", scope: !4867, file: !204, line: 266, baseType: !592, size: 64, offset: 2368)
!4926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4927, size: 64)
!4927 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceButs", file: !204, line: 143, baseType: !4928)
!4928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceButs", file: !204, line: 121, size: 2176, elements: !4929)
!4929 = !{!4930, !4931, !4932, !4933, !4934, !4935, !4936, !4937, !4938, !4939, !4940, !4941, !4942, !4943, !4944, !4945, !4946, !4947, !4948, !4949, !4950, !4951}
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4928, file: !204, line: 122, baseType: !4870, size: 64)
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4928, file: !204, line: 122, baseType: !4870, size: 64, offset: 64)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !4928, file: !204, line: 123, baseType: !658, size: 128, offset: 128)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !4928, file: !204, line: 124, baseType: !73, size: 32, offset: 256)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !4928, file: !204, line: 125, baseType: !713, size: 32, offset: 288)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !4928, file: !204, line: 127, baseType: !4732, size: 128, offset: 320)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !4928, file: !204, line: 129, baseType: !4878, size: 1280, offset: 448)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "mainb", scope: !4928, file: !204, line: 131, baseType: !632, size: 16, offset: 1728)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "mainbo", scope: !4928, file: !204, line: 131, baseType: !632, size: 16, offset: 1744)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "mainbuser", scope: !4928, file: !204, line: 131, baseType: !632, size: 16, offset: 1760)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "re_align", scope: !4928, file: !204, line: 132, baseType: !632, size: 16, offset: 1776)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !4928, file: !204, line: 132, baseType: !632, size: 16, offset: 1792)
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !4928, file: !204, line: 133, baseType: !632, size: 16, offset: 1808)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "texture_context", scope: !4928, file: !204, line: 135, baseType: !632, size: 16, offset: 1824)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "texture_context_prev", scope: !4928, file: !204, line: 135, baseType: !632, size: 16, offset: 1840)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4928, file: !204, line: 136, baseType: !619, size: 8, offset: 1856)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4928, file: !204, line: 136, baseType: !1537, size: 56, offset: 1864)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !4928, file: !204, line: 138, baseType: !592, size: 64, offset: 1920)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "pathflag", scope: !4928, file: !204, line: 139, baseType: !73, size: 32, offset: 1984)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "dataicon", scope: !4928, file: !204, line: 139, baseType: !73, size: 32, offset: 2016)
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "pinid", scope: !4928, file: !204, line: 140, baseType: !613, size: 64, offset: 2048)
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "texuser", scope: !4928, file: !204, line: 142, baseType: !592, size: 64, offset: 2112)
!4952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4953, size: 64)
!4953 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceNode", file: !204, line: 963, baseType: !4954)
!4954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceNode", file: !204, line: 925, size: 3200, elements: !4955)
!4955 = !{!4956, !4957, !4958, !4959, !4960, !4961, !4962, !4963, !4964, !4965, !4966, !4967, !4968, !4969, !4970, !4971, !4972, !4973, !4974, !4975, !4976, !4977, !4978, !4979, !4980, !4981, !4982, !4983, !4984}
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4954, file: !204, line: 926, baseType: !4870, size: 64)
!4957 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4954, file: !204, line: 926, baseType: !4870, size: 64, offset: 64)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !4954, file: !204, line: 927, baseType: !658, size: 128, offset: 128)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !4954, file: !204, line: 928, baseType: !73, size: 32, offset: 256)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !4954, file: !204, line: 929, baseType: !713, size: 32, offset: 288)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !4954, file: !204, line: 930, baseType: !4732, size: 128, offset: 320)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !4954, file: !204, line: 932, baseType: !4878, size: 1280, offset: 448)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4954, file: !204, line: 934, baseType: !606, size: 64, offset: 1728)
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !4954, file: !204, line: 934, baseType: !606, size: 64, offset: 1792)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4954, file: !204, line: 935, baseType: !632, size: 16, offset: 1856)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !4954, file: !204, line: 935, baseType: !632, size: 16, offset: 1872)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "aspect", scope: !4954, file: !204, line: 936, baseType: !713, size: 32, offset: 1888)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !4954, file: !204, line: 936, baseType: !713, size: 32, offset: 1920)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !4954, file: !204, line: 938, baseType: !713, size: 32, offset: 1952)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !4954, file: !204, line: 938, baseType: !713, size: 32, offset: 1984)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "zoom", scope: !4954, file: !204, line: 939, baseType: !713, size: 32, offset: 2016)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !4954, file: !204, line: 940, baseType: !1118, size: 64, offset: 2048)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "treepath", scope: !4954, file: !204, line: 947, baseType: !658, size: 128, offset: 2112)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !4954, file: !204, line: 949, baseType: !1100, size: 64, offset: 2240)
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "edittree", scope: !4954, file: !204, line: 949, baseType: !1100, size: 64, offset: 2304)
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "tree_idname", scope: !4954, file: !204, line: 952, baseType: !648, size: 512, offset: 2368)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "treetype", scope: !4954, file: !204, line: 953, baseType: !73, size: 32, offset: 2880)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !4954, file: !204, line: 954, baseType: !73, size: 32, offset: 2912)
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "texfrom", scope: !4954, file: !204, line: 956, baseType: !632, size: 16, offset: 2944)
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "shaderfrom", scope: !4954, file: !204, line: 957, baseType: !632, size: 16, offset: 2960)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !4954, file: !204, line: 958, baseType: !632, size: 16, offset: 2976)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !4954, file: !204, line: 959, baseType: !632, size: 16, offset: 2992)
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "linkdrag", scope: !4954, file: !204, line: 960, baseType: !658, size: 128, offset: 3008)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !4954, file: !204, line: 962, baseType: !1114, size: 64, offset: 3136)
!4985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4986, size: 64)
!4986 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSystemModifierData", file: !128, line: 672, baseType: !4987)
!4987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSystemModifierData", file: !128, line: 665, size: 1152, elements: !4988)
!4988 = !{!4989, !4990, !4991, !4992, !4993, !4994, !4995, !4996}
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !4987, file: !128, line: 666, baseType: !981, size: 896)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !4987, file: !128, line: 668, baseType: !2683, size: 64, offset: 896)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !4987, file: !128, line: 669, baseType: !3130, size: 64, offset: 960)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "totdmvert", scope: !4987, file: !128, line: 670, baseType: !73, size: 32, offset: 1024)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "totdmedge", scope: !4987, file: !128, line: 670, baseType: !73, size: 32, offset: 1056)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "totdmface", scope: !4987, file: !128, line: 670, baseType: !73, size: 32, offset: 1088)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4987, file: !128, line: 671, baseType: !632, size: 16, offset: 1120)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4987, file: !128, line: 671, baseType: !632, size: 16, offset: 1136)
!4997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4998, size: 64)
!4998 = !DIDerivedType(tag: DW_TAG_typedef, name: "DynamicPaintModifierData", file: !128, line: 1140, baseType: !4999)
!4999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicPaintModifierData", file: !128, line: 1133, size: 1088, elements: !5000)
!5000 = !{!5001, !5002, !5015, !5043, !5044}
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !4999, file: !128, line: 1134, baseType: !981, size: 896)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !4999, file: !128, line: 1136, baseType: !5003, size: 64, offset: 896)
!5003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5004, size: 64)
!5004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicPaintCanvasSettings", file: !5005, line: 146, size: 832, elements: !5006)
!5005 = !DIFile(filename: "blender/source/blender/makesdna/DNA_dynamicpaint_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5006 = !{!5007, !5009, !5010, !5011, !5012, !5013, !5014}
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !5004, file: !5005, line: 147, baseType: !5008, size: 64)
!5008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4999, size: 64)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !5004, file: !5005, line: 148, baseType: !3130, size: 64, offset: 64)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "surfaces", scope: !5004, file: !5005, line: 150, baseType: !660, size: 128, offset: 128)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "active_sur", scope: !5004, file: !5005, line: 151, baseType: !632, size: 16, offset: 256)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5004, file: !5005, line: 151, baseType: !632, size: 16, offset: 272)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5004, file: !5005, line: 152, baseType: !73, size: 32, offset: 288)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !5004, file: !5005, line: 154, baseType: !648, size: 512, offset: 320)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !4999, file: !128, line: 1137, baseType: !5016, size: 64, offset: 960)
!5016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5017, size: 64)
!5017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicPaintBrushSettings", file: !5005, line: 203, size: 896, elements: !5018)
!5018 = !{!5019, !5020, !5021, !5022, !5023, !5024, !5025, !5026, !5027, !5028, !5029, !5030, !5031, !5032, !5033, !5034, !5035, !5036, !5037, !5038, !5039, !5040, !5041, !5042}
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !5017, file: !5005, line: 204, baseType: !5008, size: 64)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !5017, file: !5005, line: 205, baseType: !3130, size: 64, offset: 64)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !5017, file: !5005, line: 206, baseType: !2683, size: 64, offset: 128)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !5017, file: !5005, line: 207, baseType: !796, size: 64, offset: 192)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5017, file: !5005, line: 209, baseType: !73, size: 32, offset: 256)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "collision", scope: !5017, file: !5005, line: 210, baseType: !73, size: 32, offset: 288)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !5017, file: !5005, line: 212, baseType: !713, size: 32, offset: 320)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5017, file: !5005, line: 212, baseType: !713, size: 32, offset: 352)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !5017, file: !5005, line: 212, baseType: !713, size: 32, offset: 384)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !5017, file: !5005, line: 212, baseType: !713, size: 32, offset: 416)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "wetness", scope: !5017, file: !5005, line: 213, baseType: !713, size: 32, offset: 448)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "particle_radius", scope: !5017, file: !5005, line: 215, baseType: !713, size: 32, offset: 480)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "particle_smooth", scope: !5017, file: !5005, line: 215, baseType: !713, size: 32, offset: 512)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "paint_distance", scope: !5017, file: !5005, line: 216, baseType: !713, size: 32, offset: 544)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "paint_ramp", scope: !5017, file: !5005, line: 219, baseType: !924, size: 64, offset: 576)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "vel_ramp", scope: !5017, file: !5005, line: 220, baseType: !924, size: 64, offset: 640)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "proximity_falloff", scope: !5017, file: !5005, line: 222, baseType: !632, size: 16, offset: 704)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "wave_type", scope: !5017, file: !5005, line: 223, baseType: !632, size: 16, offset: 720)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "ray_dir", scope: !5017, file: !5005, line: 224, baseType: !632, size: 16, offset: 736)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5017, file: !5005, line: 225, baseType: !632, size: 16, offset: 752)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "wave_factor", scope: !5017, file: !5005, line: 227, baseType: !713, size: 32, offset: 768)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "wave_clamp", scope: !5017, file: !5005, line: 227, baseType: !713, size: 32, offset: 800)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "max_velocity", scope: !5017, file: !5005, line: 228, baseType: !713, size: 32, offset: 832)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "smudge_strength", scope: !5017, file: !5005, line: 228, baseType: !713, size: 32, offset: 864)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4999, file: !128, line: 1138, baseType: !73, size: 32, offset: 1024)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4999, file: !128, line: 1139, baseType: !73, size: 32, offset: 1056)
!5045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5046, size: 64)
!5046 = !DIDerivedType(tag: DW_TAG_typedef, name: "SmokeModifierData", file: !128, line: 356, baseType: !5047)
!5047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SmokeModifierData", file: !128, line: 348, size: 1152, elements: !5048)
!5048 = !{!5049, !5050, !5124, !5154, !5164, !5165}
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5047, file: !128, line: 349, baseType: !981, size: 896)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !5047, file: !128, line: 351, baseType: !5051, size: 64, offset: 896)
!5051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5052, size: 64)
!5052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SmokeDomainSettings", file: !5053, line: 82, size: 4672, elements: !5054)
!5053 = !DIFile(filename: "blender/source/blender/makesdna/DNA_smoke_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5054 = !{!5055, !5057, !5060, !5061, !5062, !5063, !5064, !5067, !5068, !5069, !5070, !5071, !5072, !5073, !5074, !5075, !5076, !5077, !5078, !5079, !5080, !5081, !5082, !5083, !5084, !5085, !5086, !5087, !5088, !5089, !5090, !5091, !5092, !5093, !5094, !5095, !5096, !5097, !5098, !5099, !5100, !5101, !5102, !5103, !5104, !5105, !5106, !5107, !5109, !5111, !5112, !5113, !5114, !5115, !5116, !5117, !5118, !5119, !5120, !5121, !5122, !5123}
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "smd", scope: !5052, file: !5053, line: 83, baseType: !5056, size: 64)
!5056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5047, size: 64)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "fluid", scope: !5052, file: !5053, line: 84, baseType: !5058, size: 64, offset: 64)
!5058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5059, size: 64)
!5059 = !DICompositeType(tag: DW_TAG_structure_type, name: "FLUID_3D", file: !5053, line: 84, flags: DIFlagFwdDecl)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "fluid_mutex", scope: !5052, file: !5053, line: 85, baseType: !592, size: 64, offset: 128)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "fluid_group", scope: !5052, file: !5053, line: 86, baseType: !2379, size: 64, offset: 192)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "eff_group", scope: !5052, file: !5053, line: 87, baseType: !2379, size: 64, offset: 256)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "coll_group", scope: !5052, file: !5053, line: 88, baseType: !2379, size: 64, offset: 320)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "wt", scope: !5052, file: !5053, line: 89, baseType: !5065, size: 64, offset: 384)
!5065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5066, size: 64)
!5066 = !DICompositeType(tag: DW_TAG_structure_type, name: "WTURBULENCE", file: !5053, line: 89, flags: DIFlagFwdDecl)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !5052, file: !5053, line: 90, baseType: !1097, size: 64, offset: 448)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "tex_wt", scope: !5052, file: !5053, line: 91, baseType: !1097, size: 64, offset: 512)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "tex_shadow", scope: !5052, file: !5053, line: 92, baseType: !1097, size: 64, offset: 576)
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "tex_flame", scope: !5052, file: !5053, line: 93, baseType: !1097, size: 64, offset: 640)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "shadow", scope: !5052, file: !5053, line: 94, baseType: !1073, size: 64, offset: 704)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "p0", scope: !5052, file: !5053, line: 97, baseType: !835, size: 96, offset: 768)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "p1", scope: !5052, file: !5053, line: 98, baseType: !835, size: 96, offset: 864)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "dp0", scope: !5052, file: !5053, line: 99, baseType: !835, size: 96, offset: 960)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "cell_size", scope: !5052, file: !5053, line: 100, baseType: !835, size: 96, offset: 1056)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "global_size", scope: !5052, file: !5053, line: 101, baseType: !835, size: 96, offset: 1152)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "prev_loc", scope: !5052, file: !5053, line: 102, baseType: !835, size: 96, offset: 1248)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !5052, file: !5053, line: 103, baseType: !1819, size: 96, offset: 1344)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "shift_f", scope: !5052, file: !5053, line: 104, baseType: !835, size: 96, offset: 1440)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "obj_shift_f", scope: !5052, file: !5053, line: 105, baseType: !835, size: 96, offset: 1536)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !5052, file: !5053, line: 106, baseType: !1404, size: 512, offset: 1632)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !5052, file: !5053, line: 107, baseType: !1404, size: 512, offset: 2144)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "base_res", scope: !5052, file: !5053, line: 109, baseType: !1819, size: 96, offset: 2656)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "res_min", scope: !5052, file: !5053, line: 110, baseType: !1819, size: 96, offset: 2752)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "res_max", scope: !5052, file: !5053, line: 111, baseType: !1819, size: 96, offset: 2848)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !5052, file: !5053, line: 112, baseType: !1819, size: 96, offset: 2944)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "total_cells", scope: !5052, file: !5053, line: 113, baseType: !73, size: 32, offset: 3040)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !5052, file: !5053, line: 114, baseType: !713, size: 32, offset: 3072)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !5052, file: !5053, line: 115, baseType: !713, size: 32, offset: 3104)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_margin", scope: !5052, file: !5053, line: 118, baseType: !73, size: 32, offset: 3136)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_res", scope: !5052, file: !5053, line: 119, baseType: !73, size: 32, offset: 3168)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_threshold", scope: !5052, file: !5053, line: 120, baseType: !713, size: 32, offset: 3200)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !5052, file: !5053, line: 122, baseType: !713, size: 32, offset: 3232)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "beta", scope: !5052, file: !5053, line: 123, baseType: !713, size: 32, offset: 3264)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "amplify", scope: !5052, file: !5053, line: 124, baseType: !73, size: 32, offset: 3296)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "maxres", scope: !5052, file: !5053, line: 125, baseType: !73, size: 32, offset: 3328)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5052, file: !5053, line: 126, baseType: !73, size: 32, offset: 3360)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "viewsettings", scope: !5052, file: !5053, line: 127, baseType: !73, size: 32, offset: 3392)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "noise", scope: !5052, file: !5053, line: 128, baseType: !632, size: 16, offset: 3424)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "diss_percent", scope: !5052, file: !5053, line: 129, baseType: !632, size: 16, offset: 3440)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "diss_speed", scope: !5052, file: !5053, line: 130, baseType: !73, size: 32, offset: 3456)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !5052, file: !5053, line: 131, baseType: !713, size: 32, offset: 3488)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "res_wt", scope: !5052, file: !5053, line: 132, baseType: !1819, size: 96, offset: 3520)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "dx_wt", scope: !5052, file: !5053, line: 133, baseType: !713, size: 32, offset: 3616)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "cache_comp", scope: !5052, file: !5053, line: 134, baseType: !73, size: 32, offset: 3648)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "cache_high_comp", scope: !5052, file: !5053, line: 135, baseType: !73, size: 32, offset: 3680)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "point_cache", scope: !5052, file: !5053, line: 138, baseType: !5108, size: 128, offset: 3712)
!5108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2402, size: 128, elements: !1081)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !5052, file: !5053, line: 139, baseType: !5110, size: 256, offset: 3840)
!5110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !660, size: 256, elements: !1081)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !5052, file: !5053, line: 140, baseType: !2374, size: 64, offset: 4096)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "border_collisions", scope: !5052, file: !5053, line: 141, baseType: !73, size: 32, offset: 4160)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "time_scale", scope: !5052, file: !5053, line: 142, baseType: !713, size: 32, offset: 4192)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "vorticity", scope: !5052, file: !5053, line: 143, baseType: !713, size: 32, offset: 4224)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "active_fields", scope: !5052, file: !5053, line: 144, baseType: !73, size: 32, offset: 4256)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "active_color", scope: !5052, file: !5053, line: 145, baseType: !835, size: 96, offset: 4288)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "highres_sampling", scope: !5052, file: !5053, line: 146, baseType: !73, size: 32, offset: 4384)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "burning_rate", scope: !5052, file: !5053, line: 149, baseType: !713, size: 32, offset: 4416)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "flame_smoke", scope: !5052, file: !5053, line: 149, baseType: !713, size: 32, offset: 4448)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "flame_vorticity", scope: !5052, file: !5053, line: 149, baseType: !713, size: 32, offset: 4480)
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "flame_ignition", scope: !5052, file: !5053, line: 150, baseType: !713, size: 32, offset: 4512)
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "flame_max_temp", scope: !5052, file: !5053, line: 150, baseType: !713, size: 32, offset: 4544)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "flame_smoke_color", scope: !5052, file: !5053, line: 151, baseType: !835, size: 96, offset: 4576)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "flow", scope: !5047, file: !128, line: 352, baseType: !5125, size: 64, offset: 960)
!5125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5126, size: 64)
!5126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SmokeFlowSettings", file: !5053, line: 177, size: 1472, elements: !5127)
!5127 = !{!5128, !5129, !5130, !5131, !5132, !5133, !5134, !5135, !5136, !5137, !5138, !5139, !5140, !5141, !5142, !5143, !5144, !5145, !5146, !5147, !5148, !5149, !5150, !5151, !5152, !5153}
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "smd", scope: !5126, file: !5053, line: 178, baseType: !5056, size: 64)
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !5126, file: !5053, line: 179, baseType: !3130, size: 64, offset: 64)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !5126, file: !5053, line: 180, baseType: !2683, size: 64, offset: 128)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "noise_texture", scope: !5126, file: !5053, line: 181, baseType: !2909, size: 64, offset: 192)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "verts_old", scope: !5126, file: !5053, line: 184, baseType: !1073, size: 64, offset: 256)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "numverts", scope: !5126, file: !5053, line: 185, baseType: !73, size: 32, offset: 320)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "vel_multi", scope: !5126, file: !5053, line: 186, baseType: !713, size: 32, offset: 352)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "vel_normal", scope: !5126, file: !5053, line: 187, baseType: !713, size: 32, offset: 384)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "vel_random", scope: !5126, file: !5053, line: 188, baseType: !713, size: 32, offset: 416)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !5126, file: !5053, line: 190, baseType: !713, size: 32, offset: 448)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !5126, file: !5053, line: 191, baseType: !835, size: 96, offset: 480)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "fuel_amount", scope: !5126, file: !5053, line: 192, baseType: !713, size: 32, offset: 576)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !5126, file: !5053, line: 193, baseType: !713, size: 32, offset: 608)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "volume_density", scope: !5126, file: !5053, line: 194, baseType: !713, size: 32, offset: 640)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "surface_distance", scope: !5126, file: !5053, line: 195, baseType: !713, size: 32, offset: 672)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "particle_size", scope: !5126, file: !5053, line: 196, baseType: !713, size: 32, offset: 704)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "subframes", scope: !5126, file: !5053, line: 197, baseType: !73, size: 32, offset: 736)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "texture_size", scope: !5126, file: !5053, line: 199, baseType: !713, size: 32, offset: 768)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "texture_offset", scope: !5126, file: !5053, line: 200, baseType: !713, size: 32, offset: 800)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5126, file: !5053, line: 201, baseType: !73, size: 32, offset: 832)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "uvlayer_name", scope: !5126, file: !5053, line: 202, baseType: !648, size: 512, offset: 864)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_density", scope: !5126, file: !5053, line: 203, baseType: !632, size: 16, offset: 1376)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5126, file: !5053, line: 205, baseType: !632, size: 16, offset: 1392)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !5126, file: !5053, line: 206, baseType: !632, size: 16, offset: 1408)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "texture_type", scope: !5126, file: !5053, line: 207, baseType: !632, size: 16, offset: 1424)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5126, file: !5053, line: 208, baseType: !73, size: 32, offset: 1440)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "coll", scope: !5047, file: !128, line: 353, baseType: !5155, size: 64, offset: 1024)
!5155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5156, size: 64)
!5156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SmokeCollSettings", file: !5053, line: 217, size: 256, elements: !5157)
!5157 = !{!5158, !5159, !5160, !5161, !5162, !5163}
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "smd", scope: !5156, file: !5053, line: 218, baseType: !5056, size: 64)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !5156, file: !5053, line: 219, baseType: !3130, size: 64, offset: 64)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "verts_old", scope: !5156, file: !5053, line: 220, baseType: !1073, size: 64, offset: 128)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "numverts", scope: !5156, file: !5053, line: 221, baseType: !73, size: 32, offset: 192)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5156, file: !5053, line: 222, baseType: !632, size: 16, offset: 224)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5156, file: !5053, line: 223, baseType: !632, size: 16, offset: 240)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !5047, file: !128, line: 354, baseType: !713, size: 32, offset: 1088)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5047, file: !128, line: 355, baseType: !73, size: 32, offset: 1120)
!5166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5167, size: 64)
!5167 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !114, line: 295, baseType: !967)
!5168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5169, size: 64)
!5169 = !DIDerivedType(tag: DW_TAG_typedef, name: "bArmature", file: !382, line: 114, baseType: !5170)
!5170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bArmature", file: !382, line: 78, size: 2048, elements: !5171)
!5171 = !{!5172, !5173, !5174, !5175, !5176, !5177, !5212, !5215, !5216, !5217, !5218, !5219, !5220, !5221, !5222, !5223, !5224, !5225, !5226, !5227, !5228, !5229, !5230, !5231, !5232, !5233, !5234}
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5170, file: !382, line: 79, baseType: !599, size: 960)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !5170, file: !382, line: 80, baseType: !669, size: 64, offset: 960)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "bonebase", scope: !5170, file: !382, line: 82, baseType: !658, size: 128, offset: 1024)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "chainbase", scope: !5170, file: !382, line: 83, baseType: !658, size: 128, offset: 1152)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "edbo", scope: !5170, file: !382, line: 84, baseType: !1209, size: 64, offset: 1280)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "act_bone", scope: !5170, file: !382, line: 92, baseType: !5178, size: 64, offset: 1344)
!5178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5179, size: 64)
!5179 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bone", file: !382, line: 76, baseType: !5180)
!5180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Bone", file: !382, line: 48, size: 2624, elements: !5181)
!5181 = !{!5182, !5184, !5185, !5186, !5187, !5188, !5189, !5190, !5191, !5192, !5193, !5194, !5195, !5196, !5197, !5198, !5199, !5200, !5201, !5202, !5203, !5204, !5205, !5206, !5207, !5208, !5209, !5210}
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5180, file: !382, line: 49, baseType: !5183, size: 64)
!5183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5180, size: 64)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5180, file: !382, line: 49, baseType: !5183, size: 64, offset: 64)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !5180, file: !382, line: 50, baseType: !637, size: 64, offset: 128)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5180, file: !382, line: 51, baseType: !5183, size: 64, offset: 192)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "childbase", scope: !5180, file: !382, line: 52, baseType: !658, size: 128, offset: 256)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5180, file: !382, line: 53, baseType: !648, size: 512, offset: 384)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "roll", scope: !5180, file: !382, line: 55, baseType: !713, size: 32, offset: 896)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5180, file: !382, line: 56, baseType: !835, size: 96, offset: 928)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5180, file: !382, line: 57, baseType: !835, size: 96, offset: 1024)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "bone_mat", scope: !5180, file: !382, line: 58, baseType: !1708, size: 288, offset: 1120)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5180, file: !382, line: 60, baseType: !73, size: 32, offset: 1408)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "arm_head", scope: !5180, file: !382, line: 62, baseType: !835, size: 96, offset: 1440)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "arm_tail", scope: !5180, file: !382, line: 63, baseType: !835, size: 96, offset: 1536)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "arm_mat", scope: !5180, file: !382, line: 64, baseType: !1404, size: 512, offset: 1632)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "arm_roll", scope: !5180, file: !382, line: 65, baseType: !713, size: 32, offset: 2144)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !5180, file: !382, line: 67, baseType: !713, size: 32, offset: 2176)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !5180, file: !382, line: 67, baseType: !713, size: 32, offset: 2208)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "xwidth", scope: !5180, file: !382, line: 68, baseType: !713, size: 32, offset: 2240)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5180, file: !382, line: 68, baseType: !713, size: 32, offset: 2272)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "zwidth", scope: !5180, file: !382, line: 68, baseType: !713, size: 32, offset: 2304)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "ease1", scope: !5180, file: !382, line: 69, baseType: !713, size: 32, offset: 2336)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "ease2", scope: !5180, file: !382, line: 69, baseType: !713, size: 32, offset: 2368)
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "rad_head", scope: !5180, file: !382, line: 70, baseType: !713, size: 32, offset: 2400)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "rad_tail", scope: !5180, file: !382, line: 70, baseType: !713, size: 32, offset: 2432)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5180, file: !382, line: 72, baseType: !835, size: 96, offset: 2464)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !5180, file: !382, line: 73, baseType: !73, size: 32, offset: 2560)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !5180, file: !382, line: 74, baseType: !632, size: 16, offset: 2592)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5180, file: !382, line: 75, baseType: !5211, size: 16, offset: 2608)
!5211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !632, size: 16, elements: !934)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "act_edbone", scope: !5170, file: !382, line: 93, baseType: !5213, size: 64, offset: 1408)
!5213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5214, size: 64)
!5214 = !DICompositeType(tag: DW_TAG_structure_type, name: "EditBone", file: !382, line: 93, flags: DIFlagFwdDecl)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "sketch", scope: !5170, file: !382, line: 95, baseType: !592, size: 64, offset: 1472)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5170, file: !382, line: 97, baseType: !73, size: 32, offset: 1536)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !5170, file: !382, line: 98, baseType: !73, size: 32, offset: 1568)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "gevertdeformer", scope: !5170, file: !382, line: 99, baseType: !73, size: 32, offset: 1600)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5170, file: !382, line: 100, baseType: !73, size: 32, offset: 1632)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "deformflag", scope: !5170, file: !382, line: 101, baseType: !632, size: 16, offset: 1664)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "pathflag", scope: !5170, file: !382, line: 102, baseType: !632, size: 16, offset: 1680)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "layer_used", scope: !5170, file: !382, line: 104, baseType: !7, size: 32, offset: 1696)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !5170, file: !382, line: 105, baseType: !7, size: 32, offset: 1728)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "layer_protected", scope: !5170, file: !382, line: 105, baseType: !7, size: 32, offset: 1760)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "ghostep", scope: !5170, file: !382, line: 108, baseType: !632, size: 16, offset: 1792)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsize", scope: !5170, file: !382, line: 108, baseType: !632, size: 16, offset: 1808)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "ghosttype", scope: !5170, file: !382, line: 109, baseType: !632, size: 16, offset: 1824)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "pathsize", scope: !5170, file: !382, line: 109, baseType: !632, size: 16, offset: 1840)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsf", scope: !5170, file: !382, line: 110, baseType: !73, size: 32, offset: 1856)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "ghostef", scope: !5170, file: !382, line: 110, baseType: !73, size: 32, offset: 1888)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "pathsf", scope: !5170, file: !382, line: 111, baseType: !73, size: 32, offset: 1920)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "pathef", scope: !5170, file: !382, line: 111, baseType: !73, size: 32, offset: 1952)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "pathbc", scope: !5170, file: !382, line: 112, baseType: !73, size: 32, offset: 1984)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "pathac", scope: !5170, file: !382, line: 112, baseType: !73, size: 32, offset: 2016)
!5235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5236, size: 64)
!5236 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObTfmBack", file: !3, line: 2853, baseType: !5237)
!5237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ObTfmBack", file: !3, line: 2842, size: 3232, elements: !5238)
!5238 = !{!5239, !5240, !5241, !5242, !5243, !5244, !5245, !5246, !5247, !5248, !5249, !5250, !5251, !5252, !5253, !5254, !5255}
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !5237, file: !3, line: 2843, baseType: !835, size: 96)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !5237, file: !3, line: 2843, baseType: !835, size: 96, offset: 96)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !5237, file: !3, line: 2843, baseType: !835, size: 96, offset: 192)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5237, file: !3, line: 2844, baseType: !835, size: 96, offset: 288)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !5237, file: !3, line: 2844, baseType: !835, size: 96, offset: 384)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !5237, file: !3, line: 2845, baseType: !835, size: 96, offset: 480)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !5237, file: !3, line: 2845, baseType: !835, size: 96, offset: 576)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !5237, file: !3, line: 2846, baseType: !916, size: 128, offset: 672)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !5237, file: !3, line: 2846, baseType: !916, size: 128, offset: 800)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !5237, file: !3, line: 2847, baseType: !835, size: 96, offset: 928)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !5237, file: !3, line: 2847, baseType: !835, size: 96, offset: 1024)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !5237, file: !3, line: 2848, baseType: !713, size: 32, offset: 1120)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !5237, file: !3, line: 2848, baseType: !713, size: 32, offset: 1152)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !5237, file: !3, line: 2849, baseType: !1404, size: 512, offset: 1184)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !5237, file: !3, line: 2850, baseType: !1404, size: 512, offset: 1696)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !5237, file: !3, line: 2851, baseType: !1404, size: 512, offset: 2208)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !5237, file: !3, line: 2852, baseType: !1404, size: 512, offset: 2720)
!5256 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !5257, line: 87, baseType: !2590)
!5257 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!5258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5259, size: 64)
!5259 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClothModifierData", file: !128, line: 566, baseType: !3114)
!5260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!5261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5262, size: 64)
!5262 = !DIDerivedType(tag: DW_TAG_typedef, name: "ArmatureModifierData", file: !128, line: 535, baseType: !5263)
!5263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArmatureModifierData", file: !128, line: 527, size: 1600, elements: !5264)
!5264 = !{!5265, !5266, !5267, !5268, !5269, !5270, !5271}
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5263, file: !128, line: 528, baseType: !981, size: 896)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "deformflag", scope: !5263, file: !128, line: 530, baseType: !632, size: 16, offset: 896)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "multi", scope: !5263, file: !128, line: 530, baseType: !632, size: 16, offset: 912)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !5263, file: !128, line: 531, baseType: !73, size: 32, offset: 928)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !5263, file: !128, line: 532, baseType: !966, size: 64, offset: 960)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "prevCos", scope: !5263, file: !128, line: 533, baseType: !1073, size: 64, offset: 1024)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "defgrp_name", scope: !5263, file: !128, line: 534, baseType: !648, size: 512, offset: 1088)
!5272 = !{!0, !5273}
!5273 = !DIGlobalVariableExpression(var: !5274, expr: !DIExpression())
!5274 = distinct !DIGlobalVariable(name: "vparent_lock", scope: !2, file: !3, line: 133, type: !5275, isLocal: true, isDefinition: true)
!5275 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadMutex", file: !5276, line: 107, baseType: !5277)
!5276 = !DIFile(filename: "blender/source/blender/blenlib/BLI_threads.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5277 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !2360, line: 26, baseType: !5278)
!5278 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !2362, line: 42, baseType: !7)
!5279 = !{i32 7, !"Dwarf Version", i32 4}
!5280 = !{i32 2, !"Debug Info Version", i32 3}
!5281 = !{i32 1, !"wchar_size", i32 4}
!5282 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!5283 = distinct !DISubprogram(name: "BKE_object_workob_clear", scope: !3, file: !3, line: 136, type: !5284, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!5284 = !DISubroutineType(types: !5285)
!5285 = !{null, !5166}
!5286 = !{}
!5287 = !DILocalVariable(name: "workob", arg: 1, scope: !5283, file: !3, line: 136, type: !5166)
!5288 = !DILocation(line: 136, column: 38, scope: !5283)
!5289 = !DILocation(line: 138, column: 9, scope: !5283)
!5290 = !DILocation(line: 138, column: 2, scope: !5283)
!5291 = !DILocation(line: 140, column: 38, scope: !5283)
!5292 = !DILocation(line: 140, column: 46, scope: !5283)
!5293 = !DILocation(line: 140, column: 54, scope: !5283)
!5294 = !DILocation(line: 140, column: 20, scope: !5283)
!5295 = !DILocation(line: 140, column: 28, scope: !5283)
!5296 = !DILocation(line: 140, column: 36, scope: !5283)
!5297 = !DILocation(line: 140, column: 2, scope: !5283)
!5298 = !DILocation(line: 140, column: 10, scope: !5283)
!5299 = !DILocation(line: 140, column: 18, scope: !5283)
!5300 = !DILocation(line: 141, column: 42, scope: !5283)
!5301 = !DILocation(line: 141, column: 50, scope: !5283)
!5302 = !DILocation(line: 141, column: 60, scope: !5283)
!5303 = !DILocation(line: 141, column: 22, scope: !5283)
!5304 = !DILocation(line: 141, column: 30, scope: !5283)
!5305 = !DILocation(line: 141, column: 40, scope: !5283)
!5306 = !DILocation(line: 141, column: 2, scope: !5283)
!5307 = !DILocation(line: 141, column: 10, scope: !5283)
!5308 = !DILocation(line: 141, column: 20, scope: !5283)
!5309 = !DILocation(line: 142, column: 2, scope: !5283)
!5310 = !DILocation(line: 142, column: 10, scope: !5283)
!5311 = !DILocation(line: 142, column: 18, scope: !5283)
!5312 = !DILocation(line: 143, column: 1, scope: !5283)
!5313 = distinct !DISubprogram(name: "BKE_object_update_base_layer", scope: !3, file: !3, line: 145, type: !5314, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!5314 = !DISubroutineType(types: !5315)
!5315 = !{null, !993, !5166}
!5316 = !DILocalVariable(name: "scene", arg: 1, scope: !5313, file: !3, line: 145, type: !993)
!5317 = !DILocation(line: 145, column: 49, scope: !5313)
!5318 = !DILocalVariable(name: "ob", arg: 2, scope: !5313, file: !3, line: 145, type: !5166)
!5319 = !DILocation(line: 145, column: 64, scope: !5313)
!5320 = !DILocalVariable(name: "base", scope: !5313, file: !3, line: 147, type: !5321)
!5321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5322, size: 64)
!5322 = !DIDerivedType(tag: DW_TAG_typedef, name: "Base", file: !995, line: 75, baseType: !1181)
!5323 = !DILocation(line: 147, column: 8, scope: !5313)
!5324 = !DILocation(line: 147, column: 15, scope: !5313)
!5325 = !DILocation(line: 147, column: 22, scope: !5313)
!5326 = !DILocation(line: 147, column: 27, scope: !5313)
!5327 = !DILocation(line: 149, column: 2, scope: !5313)
!5328 = !DILocation(line: 149, column: 9, scope: !5313)
!5329 = !DILocation(line: 150, column: 7, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 150, column: 7)
!5331 = distinct !DILexicalBlock(scope: !5313, file: !3, line: 149, column: 15)
!5332 = !DILocation(line: 150, column: 13, scope: !5330)
!5333 = !DILocation(line: 150, column: 23, scope: !5330)
!5334 = !DILocation(line: 150, column: 20, scope: !5330)
!5335 = !DILocation(line: 150, column: 7, scope: !5331)
!5336 = !DILocation(line: 150, column: 39, scope: !5330)
!5337 = !DILocation(line: 150, column: 43, scope: !5330)
!5338 = !DILocation(line: 150, column: 27, scope: !5330)
!5339 = !DILocation(line: 150, column: 33, scope: !5330)
!5340 = !DILocation(line: 150, column: 37, scope: !5330)
!5341 = !DILocation(line: 151, column: 10, scope: !5331)
!5342 = !DILocation(line: 151, column: 16, scope: !5331)
!5343 = !DILocation(line: 151, column: 8, scope: !5331)
!5344 = distinct !{!5344, !5327, !5345}
!5345 = !DILocation(line: 152, column: 2, scope: !5313)
!5346 = !DILocation(line: 153, column: 1, scope: !5313)
!5347 = distinct !DISubprogram(name: "BKE_object_free_particlesystems", scope: !3, file: !3, line: 155, type: !5284, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!5348 = !DILocalVariable(name: "ob", arg: 1, scope: !5347, file: !3, line: 155, type: !5166)
!5349 = !DILocation(line: 155, column: 46, scope: !5347)
!5350 = !DILocalVariable(name: "psys", scope: !5347, file: !3, line: 157, type: !5351)
!5351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5352, size: 64)
!5352 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSystem", file: !2459, line: 314, baseType: !2684)
!5353 = !DILocation(line: 157, column: 18, scope: !5347)
!5354 = !DILocation(line: 159, column: 2, scope: !5347)
!5355 = !DILocation(line: 159, column: 30, scope: !5347)
!5356 = !DILocation(line: 159, column: 34, scope: !5347)
!5357 = !DILocation(line: 159, column: 17, scope: !5347)
!5358 = !DILocation(line: 159, column: 15, scope: !5347)
!5359 = !DILocation(line: 160, column: 13, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5347, file: !3, line: 159, column: 52)
!5361 = !DILocation(line: 160, column: 17, scope: !5360)
!5362 = !DILocation(line: 160, column: 3, scope: !5360)
!5363 = distinct !{!5363, !5354, !5364}
!5364 = !DILocation(line: 161, column: 2, scope: !5347)
!5365 = !DILocation(line: 162, column: 1, scope: !5347)
!5366 = distinct !DISubprogram(name: "BKE_object_free_softbody", scope: !3, file: !3, line: 164, type: !5284, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!5367 = !DILocalVariable(name: "ob", arg: 1, scope: !5366, file: !3, line: 164, type: !5166)
!5368 = !DILocation(line: 164, column: 39, scope: !5366)
!5369 = !DILocation(line: 166, column: 6, scope: !5370)
!5370 = distinct !DILexicalBlock(scope: !5366, file: !3, line: 166, column: 6)
!5371 = !DILocation(line: 166, column: 10, scope: !5370)
!5372 = !DILocation(line: 166, column: 6, scope: !5366)
!5373 = !DILocation(line: 167, column: 10, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5370, file: !3, line: 166, column: 16)
!5375 = !DILocation(line: 167, column: 14, scope: !5374)
!5376 = !DILocation(line: 167, column: 3, scope: !5374)
!5377 = !DILocation(line: 168, column: 3, scope: !5374)
!5378 = !DILocation(line: 168, column: 7, scope: !5374)
!5379 = !DILocation(line: 168, column: 12, scope: !5374)
!5380 = !DILocation(line: 169, column: 2, scope: !5374)
!5381 = !DILocation(line: 170, column: 1, scope: !5366)
!5382 = distinct !DISubprogram(name: "BKE_object_free_bulletsoftbody", scope: !3, file: !3, line: 172, type: !5284, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!5383 = !DILocalVariable(name: "ob", arg: 1, scope: !5382, file: !3, line: 172, type: !5166)
!5384 = !DILocation(line: 172, column: 45, scope: !5382)
!5385 = !DILocation(line: 174, column: 6, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5382, file: !3, line: 174, column: 6)
!5387 = !DILocation(line: 174, column: 10, scope: !5386)
!5388 = !DILocation(line: 174, column: 6, scope: !5382)
!5389 = !DILocation(line: 175, column: 11, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5386, file: !3, line: 174, column: 17)
!5391 = !DILocation(line: 175, column: 15, scope: !5390)
!5392 = !DILocation(line: 175, column: 3, scope: !5390)
!5393 = !DILocation(line: 176, column: 3, scope: !5390)
!5394 = !DILocation(line: 176, column: 7, scope: !5390)
!5395 = !DILocation(line: 176, column: 13, scope: !5390)
!5396 = !DILocation(line: 177, column: 2, scope: !5390)
!5397 = !DILocation(line: 178, column: 1, scope: !5382)
!5398 = distinct !DISubprogram(name: "BKE_object_free_curve_cache", scope: !3, file: !3, line: 180, type: !5284, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!5399 = !DILocalVariable(name: "ob", arg: 1, scope: !5398, file: !3, line: 180, type: !5166)
!5400 = !DILocation(line: 180, column: 42, scope: !5398)
!5401 = !DILocation(line: 182, column: 6, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5398, file: !3, line: 182, column: 6)
!5403 = !DILocation(line: 182, column: 10, scope: !5402)
!5404 = !DILocation(line: 182, column: 6, scope: !5398)
!5405 = !DILocation(line: 183, column: 22, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5402, file: !3, line: 182, column: 23)
!5407 = !DILocation(line: 183, column: 26, scope: !5406)
!5408 = !DILocation(line: 183, column: 39, scope: !5406)
!5409 = !DILocation(line: 183, column: 3, scope: !5406)
!5410 = !DILocation(line: 184, column: 29, scope: !5406)
!5411 = !DILocation(line: 184, column: 33, scope: !5406)
!5412 = !DILocation(line: 184, column: 46, scope: !5406)
!5413 = !DILocation(line: 184, column: 3, scope: !5406)
!5414 = !DILocation(line: 185, column: 7, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5406, file: !3, line: 185, column: 7)
!5416 = !DILocation(line: 185, column: 11, scope: !5415)
!5417 = !DILocation(line: 185, column: 24, scope: !5415)
!5418 = !DILocation(line: 185, column: 7, scope: !5406)
!5419 = !DILocation(line: 186, column: 14, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5415, file: !3, line: 185, column: 30)
!5421 = !DILocation(line: 186, column: 18, scope: !5420)
!5422 = !DILocation(line: 186, column: 31, scope: !5420)
!5423 = !DILocation(line: 186, column: 4, scope: !5420)
!5424 = !DILocation(line: 187, column: 3, scope: !5420)
!5425 = !DILocation(line: 188, column: 22, scope: !5406)
!5426 = !DILocation(line: 188, column: 26, scope: !5406)
!5427 = !DILocation(line: 188, column: 39, scope: !5406)
!5428 = !DILocation(line: 188, column: 3, scope: !5406)
!5429 = !DILocation(line: 189, column: 3, scope: !5406)
!5430 = !DILocation(line: 189, column: 13, scope: !5406)
!5431 = !DILocation(line: 189, column: 17, scope: !5406)
!5432 = !DILocation(line: 190, column: 3, scope: !5406)
!5433 = !DILocation(line: 190, column: 7, scope: !5406)
!5434 = !DILocation(line: 190, column: 19, scope: !5406)
!5435 = !DILocation(line: 191, column: 2, scope: !5406)
!5436 = !DILocation(line: 192, column: 1, scope: !5398)
!5437 = distinct !DISubprogram(name: "BKE_object_free_modifiers", scope: !3, file: !3, line: 194, type: !5284, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!5438 = !DILocalVariable(name: "ob", arg: 1, scope: !5437, file: !3, line: 194, type: !5166)
!5439 = !DILocation(line: 194, column: 40, scope: !5437)
!5440 = !DILocalVariable(name: "md", scope: !5437, file: !3, line: 196, type: !5260)
!5441 = !DILocation(line: 196, column: 16, scope: !5437)
!5442 = !DILocation(line: 198, column: 2, scope: !5437)
!5443 = !DILocation(line: 198, column: 28, scope: !5437)
!5444 = !DILocation(line: 198, column: 32, scope: !5437)
!5445 = !DILocation(line: 198, column: 15, scope: !5437)
!5446 = !DILocation(line: 198, column: 13, scope: !5437)
!5447 = !DILocation(line: 199, column: 17, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5437, file: !3, line: 198, column: 45)
!5449 = !DILocation(line: 199, column: 3, scope: !5448)
!5450 = distinct !{!5450, !5442, !5451}
!5451 = !DILocation(line: 200, column: 2, scope: !5437)
!5452 = !DILocation(line: 203, column: 34, scope: !5437)
!5453 = !DILocation(line: 203, column: 2, scope: !5437)
!5454 = !DILocation(line: 206, column: 27, scope: !5437)
!5455 = !DILocation(line: 206, column: 2, scope: !5437)
!5456 = !DILocation(line: 207, column: 1, scope: !5437)
!5457 = distinct !DISubprogram(name: "BKE_object_modifier_hook_reset", scope: !3, file: !3, line: 209, type: !5458, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!5458 = !DISubroutineType(types: !5459)
!5459 = !{null, !5166, !5460}
!5460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5461, size: 64)
!5461 = !DIDerivedType(tag: DW_TAG_typedef, name: "HookModifierData", file: !128, line: 551, baseType: !5462)
!5462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HookModifierData", file: !128, line: 537, size: 2752, elements: !5463)
!5463 = !{!5464, !5465, !5466, !5467, !5468, !5469, !5470, !5471, !5472, !5473}
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5462, file: !128, line: 538, baseType: !981, size: 896)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !5462, file: !128, line: 540, baseType: !966, size: 64, offset: 896)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !5462, file: !128, line: 541, baseType: !648, size: 512, offset: 960)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !5462, file: !128, line: 543, baseType: !1404, size: 512, offset: 1472)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "cent", scope: !5462, file: !128, line: 544, baseType: !835, size: 96, offset: 1984)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "falloff", scope: !5462, file: !128, line: 545, baseType: !713, size: 32, offset: 2080)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "indexar", scope: !5462, file: !128, line: 547, baseType: !3368, size: 64, offset: 2112)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "totindex", scope: !5462, file: !128, line: 548, baseType: !73, size: 32, offset: 2176)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "force", scope: !5462, file: !128, line: 549, baseType: !713, size: 32, offset: 2208)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5462, file: !128, line: 550, baseType: !648, size: 512, offset: 2240)
!5474 = !DILocalVariable(name: "ob", arg: 1, scope: !5457, file: !3, line: 209, type: !5166)
!5475 = !DILocation(line: 209, column: 45, scope: !5457)
!5476 = !DILocalVariable(name: "hmd", arg: 2, scope: !5457, file: !3, line: 209, type: !5460)
!5477 = !DILocation(line: 209, column: 67, scope: !5457)
!5478 = !DILocation(line: 212, column: 6, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5457, file: !3, line: 212, column: 6)
!5480 = !DILocation(line: 212, column: 11, scope: !5479)
!5481 = !DILocation(line: 212, column: 6, scope: !5457)
!5482 = !DILocalVariable(name: "pchan", scope: !5483, file: !3, line: 213, type: !5484)
!5483 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 212, column: 19)
!5484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5485, size: 64)
!5485 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPoseChannel", file: !72, line: 243, baseType: !5486)
!5486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPoseChannel", file: !72, line: 187, size: 4352, elements: !5487)
!5487 = !{!5488, !5490, !5491, !5492, !5493, !5494, !5495, !5496, !5497, !5498, !5499, !5500, !5501, !5502, !5503, !5504, !5505, !5506, !5507, !5508, !5509, !5510, !5511, !5512, !5513, !5514, !5515, !5516, !5517, !5518, !5519, !5520, !5521, !5522, !5523, !5524, !5525, !5526, !5527, !5528}
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5486, file: !72, line: 188, baseType: !5489, size: 64)
!5489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5486, size: 64)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5486, file: !72, line: 188, baseType: !5489, size: 64, offset: 64)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !5486, file: !72, line: 190, baseType: !637, size: 64, offset: 128)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !5486, file: !72, line: 192, baseType: !658, size: 128, offset: 192)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5486, file: !72, line: 193, baseType: !648, size: 512, offset: 320)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5486, file: !72, line: 195, baseType: !632, size: 16, offset: 832)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "ikflag", scope: !5486, file: !72, line: 196, baseType: !632, size: 16, offset: 848)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !5486, file: !72, line: 197, baseType: !632, size: 16, offset: 864)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "agrp_index", scope: !5486, file: !72, line: 198, baseType: !632, size: 16, offset: 880)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "constflag", scope: !5486, file: !72, line: 199, baseType: !619, size: 8, offset: 896)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "selectflag", scope: !5486, file: !72, line: 200, baseType: !619, size: 8, offset: 904)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "pad0", scope: !5486, file: !72, line: 201, baseType: !2014, size: 48, offset: 912)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "bone", scope: !5486, file: !72, line: 203, baseType: !5183, size: 64, offset: 960)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5486, file: !72, line: 204, baseType: !5489, size: 64, offset: 1024)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !5486, file: !72, line: 205, baseType: !5489, size: 64, offset: 1088)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "iktree", scope: !5486, file: !72, line: 207, baseType: !660, size: 128, offset: 1152)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "siktree", scope: !5486, file: !72, line: 208, baseType: !660, size: 128, offset: 1280)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !5486, file: !72, line: 210, baseType: !3888, size: 64, offset: 1408)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !5486, file: !72, line: 211, baseType: !966, size: 64, offset: 1472)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "custom_tx", scope: !5486, file: !72, line: 212, baseType: !5489, size: 64, offset: 1536)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !5486, file: !72, line: 217, baseType: !835, size: 96, offset: 1600)
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5486, file: !72, line: 218, baseType: !835, size: 96, offset: 1696)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "eul", scope: !5486, file: !72, line: 221, baseType: !835, size: 96, offset: 1792)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !5486, file: !72, line: 222, baseType: !916, size: 128, offset: 1888)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !5486, file: !72, line: 223, baseType: !835, size: 96, offset: 2016)
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !5486, file: !72, line: 223, baseType: !713, size: 32, offset: 2112)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !5486, file: !72, line: 224, baseType: !632, size: 16, offset: 2144)
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5486, file: !72, line: 225, baseType: !632, size: 16, offset: 2160)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "chan_mat", scope: !5486, file: !72, line: 227, baseType: !1404, size: 512, offset: 2176)
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "pose_mat", scope: !5486, file: !72, line: 228, baseType: !1404, size: 512, offset: 2688)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !5486, file: !72, line: 230, baseType: !1404, size: 512, offset: 3200)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "pose_head", scope: !5486, file: !72, line: 233, baseType: !835, size: 96, offset: 3712)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "pose_tail", scope: !5486, file: !72, line: 234, baseType: !835, size: 96, offset: 3808)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "limitmin", scope: !5486, file: !72, line: 236, baseType: !835, size: 96, offset: 3904)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "limitmax", scope: !5486, file: !72, line: 236, baseType: !835, size: 96, offset: 4000)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness", scope: !5486, file: !72, line: 237, baseType: !835, size: 96, offset: 4096)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "ikstretch", scope: !5486, file: !72, line: 238, baseType: !713, size: 32, offset: 4192)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "ikrotweight", scope: !5486, file: !72, line: 239, baseType: !713, size: 32, offset: 4224)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "iklinweight", scope: !5486, file: !72, line: 240, baseType: !713, size: 32, offset: 4256)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !5486, file: !72, line: 242, baseType: !592, size: 64, offset: 4288)
!5529 = !DILocation(line: 213, column: 17, scope: !5483)
!5530 = !DILocation(line: 213, column: 52, scope: !5483)
!5531 = !DILocation(line: 213, column: 57, scope: !5483)
!5532 = !DILocation(line: 213, column: 65, scope: !5483)
!5533 = !DILocation(line: 213, column: 71, scope: !5483)
!5534 = !DILocation(line: 213, column: 76, scope: !5483)
!5535 = !DILocation(line: 213, column: 25, scope: !5483)
!5536 = !DILocation(line: 215, column: 7, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 215, column: 7)
!5538 = !DILocation(line: 215, column: 12, scope: !5537)
!5539 = !DILocation(line: 215, column: 25, scope: !5537)
!5540 = !DILocation(line: 215, column: 28, scope: !5537)
!5541 = !DILocation(line: 215, column: 7, scope: !5483)
!5542 = !DILocalVariable(name: "imat", scope: !5543, file: !3, line: 216, type: !1404)
!5543 = distinct !DILexicalBlock(scope: !5537, file: !3, line: 215, column: 35)
!5544 = !DILocation(line: 216, column: 10, scope: !5543)
!5545 = !DILocalVariable(name: "mat", scope: !5543, file: !3, line: 216, type: !1404)
!5546 = !DILocation(line: 216, column: 22, scope: !5543)
!5547 = !DILocation(line: 219, column: 16, scope: !5543)
!5548 = !DILocation(line: 219, column: 21, scope: !5543)
!5549 = !DILocation(line: 219, column: 26, scope: !5543)
!5550 = !DILocation(line: 219, column: 34, scope: !5543)
!5551 = !DILocation(line: 219, column: 41, scope: !5543)
!5552 = !DILocation(line: 219, column: 48, scope: !5543)
!5553 = !DILocation(line: 219, column: 4, scope: !5543)
!5554 = !DILocation(line: 221, column: 17, scope: !5543)
!5555 = !DILocation(line: 221, column: 23, scope: !5543)
!5556 = !DILocation(line: 221, column: 4, scope: !5543)
!5557 = !DILocation(line: 222, column: 16, scope: !5543)
!5558 = !DILocation(line: 222, column: 21, scope: !5543)
!5559 = !DILocation(line: 222, column: 32, scope: !5543)
!5560 = !DILocation(line: 222, column: 38, scope: !5543)
!5561 = !DILocation(line: 222, column: 42, scope: !5543)
!5562 = !DILocation(line: 222, column: 4, scope: !5543)
!5563 = !DILocation(line: 223, column: 3, scope: !5543)
!5564 = !DILocation(line: 225, column: 17, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5537, file: !3, line: 224, column: 8)
!5566 = !DILocation(line: 225, column: 22, scope: !5565)
!5567 = !DILocation(line: 225, column: 30, scope: !5565)
!5568 = !DILocation(line: 225, column: 36, scope: !5565)
!5569 = !DILocation(line: 225, column: 41, scope: !5565)
!5570 = !DILocation(line: 225, column: 49, scope: !5565)
!5571 = !DILocation(line: 225, column: 4, scope: !5565)
!5572 = !DILocation(line: 226, column: 16, scope: !5565)
!5573 = !DILocation(line: 226, column: 21, scope: !5565)
!5574 = !DILocation(line: 226, column: 32, scope: !5565)
!5575 = !DILocation(line: 226, column: 37, scope: !5565)
!5576 = !DILocation(line: 226, column: 45, scope: !5565)
!5577 = !DILocation(line: 226, column: 51, scope: !5565)
!5578 = !DILocation(line: 226, column: 55, scope: !5565)
!5579 = !DILocation(line: 226, column: 4, scope: !5565)
!5580 = !DILocation(line: 228, column: 2, scope: !5483)
!5581 = !DILocation(line: 229, column: 1, scope: !5457)
!5582 = distinct !DISubprogram(name: "BKE_object_support_modifier_type_check", scope: !3, file: !3, line: 231, type: !5583, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!5583 = !DISubroutineType(types: !5584)
!5584 = !{!1788, !5166, !73}
!5585 = !DILocalVariable(name: "ob", arg: 1, scope: !5582, file: !3, line: 231, type: !5166)
!5586 = !DILocation(line: 231, column: 53, scope: !5582)
!5587 = !DILocalVariable(name: "modifier_type", arg: 2, scope: !5582, file: !3, line: 231, type: !73)
!5588 = !DILocation(line: 231, column: 61, scope: !5582)
!5589 = !DILocalVariable(name: "mti", scope: !5582, file: !3, line: 233, type: !5590)
!5590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5591, size: 64)
!5591 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierTypeInfo", file: !87, line: 309, baseType: !5592)
!5592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierTypeInfo", file: !87, line: 121, size: 1728, elements: !5593)
!5593 = !{!5594, !5595, !5596, !5597, !5599, !5601, !5605, !5610, !5614, !5618, !5622, !5626, !5630, !5634, !5638, !5639, !5643, !5649, !5653, !5654, !5662, !5671}
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5592, file: !87, line: 123, baseType: !780, size: 256)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "structName", scope: !5592, file: !87, line: 128, baseType: !780, size: 256, offset: 256)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "structSize", scope: !5592, file: !87, line: 131, baseType: !73, size: 32, offset: 512)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5592, file: !87, line: 133, baseType: !5598, size: 32, offset: 544)
!5598 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierTypeType", file: !87, line: 71, baseType: !86)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5592, file: !87, line: 134, baseType: !5600, size: 32, offset: 576)
!5600 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierTypeFlag", file: !87, line: 104, baseType: !95)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "copyData", scope: !5592, file: !87, line: 142, baseType: !5602, size: 64, offset: 640)
!5602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5603, size: 64)
!5603 = !DISubroutineType(types: !5604)
!5604 = !{null, !985, !985}
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "deformVerts", scope: !5592, file: !87, line: 151, baseType: !5606, size: 64, offset: 704)
!5606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5607, size: 64)
!5607 = !DISubroutineType(types: !5608)
!5608 = !{null, !985, !966, !3130, !3431, !73, !5609}
!5609 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierApplyFlag", file: !87, line: 118, baseType: !107)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "deformMatrices", scope: !5592, file: !87, line: 157, baseType: !5611, size: 64, offset: 768)
!5611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5612, size: 64)
!5612 = !DISubroutineType(types: !5613)
!5613 = !{null, !985, !966, !3130, !3431, !3809, !73}
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "deformVertsEM", scope: !5592, file: !87, line: 163, baseType: !5615, size: 64, offset: 832)
!5615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5616, size: 64)
!5616 = !DISubroutineType(types: !5617)
!5617 = !{null, !985, !966, !4394, !3130, !3431, !73}
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "deformMatricesEM", scope: !5592, file: !87, line: 168, baseType: !5619, size: 64, offset: 896)
!5619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5620, size: 64)
!5620 = !DISubroutineType(types: !5621)
!5621 = !{null, !985, !966, !4394, !3130, !3431, !3809, !73}
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "applyModifier", scope: !5592, file: !87, line: 193, baseType: !5623, size: 64, offset: 960)
!5623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5624, size: 64)
!5624 = !DISubroutineType(types: !5625)
!5625 = !{!3130, !985, !966, !3130, !5609}
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "applyModifierEM", scope: !5592, file: !87, line: 204, baseType: !5627, size: 64, offset: 1024)
!5627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5628, size: 64)
!5628 = !DISubroutineType(types: !5629)
!5629 = !{!3130, !985, !966, !4394, !3130, !5609}
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "initData", scope: !5592, file: !87, line: 217, baseType: !5631, size: 64, offset: 1088)
!5631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5632, size: 64)
!5632 = !DISubroutineType(types: !5633)
!5633 = !{null, !985}
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "requiredDataMask", scope: !5592, file: !87, line: 235, baseType: !5635, size: 64, offset: 1152)
!5635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5636, size: 64)
!5636 = !DISubroutineType(types: !5637)
!5637 = !{!4408, !966, !985}
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "freeData", scope: !5592, file: !87, line: 242, baseType: !5631, size: 64, offset: 1216)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "isDisabled", scope: !5592, file: !87, line: 252, baseType: !5640, size: 64, offset: 1280)
!5640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5641, size: 64)
!5641 = !DISubroutineType(types: !5642)
!5642 = !{!1788, !985, !73}
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "updateDepgraph", scope: !5592, file: !87, line: 259, baseType: !5644, size: 64, offset: 1344)
!5644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5645, size: 64)
!5645 = !DISubroutineType(types: !5646)
!5646 = !{null, !985, !2261, !993, !966, !5647}
!5647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5648, size: 64)
!5648 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagNode", file: !87, line: 38, flags: DIFlagFwdDecl)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "dependsOnTime", scope: !5592, file: !87, line: 267, baseType: !5650, size: 64, offset: 1408)
!5650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5651, size: 64)
!5651 = !DISubroutineType(types: !5652)
!5652 = !{!1788, !985}
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "dependsOnNormals", scope: !5592, file: !87, line: 277, baseType: !5650, size: 64, offset: 1472)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "foreachObjectLink", scope: !5592, file: !87, line: 286, baseType: !5655, size: 64, offset: 1536)
!5655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5656, size: 64)
!5656 = !DISubroutineType(types: !5657)
!5657 = !{null, !985, !966, !5658, !592}
!5658 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectWalkFunc", file: !87, line: 106, baseType: !5659)
!5659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5660, size: 64)
!5660 = !DISubroutineType(types: !5661)
!5661 = !{null, !592, !966, !2397}
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "foreachIDLink", scope: !5592, file: !87, line: 297, baseType: !5663, size: 64, offset: 1600)
!5663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5664, size: 64)
!5664 = !DISubroutineType(types: !5665)
!5665 = !{null, !985, !966, !5666, !592}
!5666 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDWalkFunc", file: !87, line: 107, baseType: !5667)
!5667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5668, size: 64)
!5668 = !DISubroutineType(types: !5669)
!5669 = !{null, !592, !966, !5670}
!5670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 64)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "foreachTexLink", scope: !5592, file: !87, line: 307, baseType: !5672, size: 64, offset: 1664)
!5672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5673, size: 64)
!5673 = !DISubroutineType(types: !5674)
!5674 = !{null, !985, !966, !5675, !592}
!5675 = !DIDerivedType(tag: DW_TAG_typedef, name: "TexWalkFunc", file: !87, line: 108, baseType: !5676)
!5676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5677, size: 64)
!5677 = !DISubroutineType(types: !5678)
!5678 = !{null, !592, !966, !985, !2669}
!5679 = !DILocation(line: 233, column: 20, scope: !5582)
!5680 = !DILocation(line: 235, column: 29, scope: !5582)
!5681 = !DILocation(line: 235, column: 8, scope: !5582)
!5682 = !DILocation(line: 235, column: 6, scope: !5582)
!5683 = !DILocation(line: 237, column: 9, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5582, file: !3, line: 237, column: 6)
!5685 = !DILocation(line: 237, column: 14, scope: !5684)
!5686 = !DILocation(line: 237, column: 20, scope: !5684)
!5687 = !DILocation(line: 237, column: 52, scope: !5684)
!5688 = !DILocation(line: 238, column: 9, scope: !5684)
!5689 = !DILocation(line: 238, column: 13, scope: !5684)
!5690 = !DILocation(line: 238, column: 18, scope: !5684)
!5691 = !DILocation(line: 238, column: 29, scope: !5684)
!5692 = !DILocation(line: 238, column: 33, scope: !5684)
!5693 = !DILocation(line: 238, column: 38, scope: !5684)
!5694 = !DILocation(line: 238, column: 44, scope: !5684)
!5695 = !DILocation(line: 237, column: 6, scope: !5582)
!5696 = !DILocation(line: 240, column: 3, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5684, file: !3, line: 239, column: 2)
!5698 = !DILocation(line: 243, column: 2, scope: !5582)
!5699 = !DILocation(line: 244, column: 1, scope: !5582)
!5700 = distinct !DISubprogram(name: "BKE_object_link_modifiers", scope: !3, file: !3, line: 246, type: !5701, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!5701 = !DISubroutineType(types: !5702)
!5702 = !{null, !966, !966}
!5703 = !DILocalVariable(name: "ob_dst", arg: 1, scope: !5700, file: !3, line: 246, type: !966)
!5704 = !DILocation(line: 246, column: 47, scope: !5700)
!5705 = !DILocalVariable(name: "ob_src", arg: 2, scope: !5700, file: !3, line: 246, type: !966)
!5706 = !DILocation(line: 246, column: 70, scope: !5700)
!5707 = !DILocalVariable(name: "md", scope: !5700, file: !3, line: 248, type: !5260)
!5708 = !DILocation(line: 248, column: 16, scope: !5700)
!5709 = !DILocation(line: 249, column: 28, scope: !5700)
!5710 = !DILocation(line: 249, column: 2, scope: !5700)
!5711 = !DILocation(line: 251, column: 7, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5700, file: !3, line: 251, column: 6)
!5713 = !DILocation(line: 251, column: 6, scope: !5700)
!5714 = !DILocation(line: 254, column: 3, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 251, column: 76)
!5716 = !DILocation(line: 257, column: 12, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5700, file: !3, line: 257, column: 2)
!5718 = !DILocation(line: 257, column: 20, scope: !5717)
!5719 = !DILocation(line: 257, column: 30, scope: !5717)
!5720 = !DILocation(line: 257, column: 10, scope: !5717)
!5721 = !DILocation(line: 257, column: 7, scope: !5717)
!5722 = !DILocation(line: 257, column: 37, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5717, file: !3, line: 257, column: 2)
!5724 = !DILocation(line: 257, column: 2, scope: !5717)
!5725 = !DILocalVariable(name: "nmd", scope: !5726, file: !3, line: 258, type: !5260)
!5726 = distinct !DILexicalBlock(scope: !5723, file: !3, line: 257, column: 56)
!5727 = !DILocation(line: 258, column: 17, scope: !5726)
!5728 = !DILocation(line: 260, column: 7, scope: !5729)
!5729 = distinct !DILexicalBlock(scope: !5726, file: !3, line: 260, column: 7)
!5730 = !DILocation(line: 260, column: 7, scope: !5726)
!5731 = !DILocation(line: 266, column: 4, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5729, file: !3, line: 265, column: 3)
!5733 = !DILocation(line: 269, column: 47, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5726, file: !3, line: 269, column: 7)
!5735 = !DILocation(line: 269, column: 55, scope: !5734)
!5736 = !DILocation(line: 269, column: 59, scope: !5734)
!5737 = !DILocation(line: 269, column: 8, scope: !5734)
!5738 = !DILocation(line: 269, column: 7, scope: !5726)
!5739 = !DILocation(line: 270, column: 4, scope: !5734)
!5740 = !DILocation(line: 272, column: 7, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5726, file: !3, line: 272, column: 7)
!5742 = !DILocation(line: 272, column: 11, scope: !5741)
!5743 = !DILocation(line: 272, column: 16, scope: !5741)
!5744 = !DILocation(line: 272, column: 7, scope: !5726)
!5745 = !DILocation(line: 274, column: 36, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 272, column: 39)
!5747 = !DILocation(line: 274, column: 44, scope: !5746)
!5748 = !DILocation(line: 274, column: 4, scope: !5746)
!5749 = !DILocation(line: 275, column: 3, scope: !5746)
!5750 = !DILocation(line: 277, column: 22, scope: !5726)
!5751 = !DILocation(line: 277, column: 26, scope: !5726)
!5752 = !DILocation(line: 277, column: 9, scope: !5726)
!5753 = !DILocation(line: 277, column: 7, scope: !5726)
!5754 = !DILocation(line: 278, column: 15, scope: !5726)
!5755 = !DILocation(line: 278, column: 20, scope: !5726)
!5756 = !DILocation(line: 278, column: 26, scope: !5726)
!5757 = !DILocation(line: 278, column: 30, scope: !5726)
!5758 = !DILocation(line: 278, column: 3, scope: !5726)
!5759 = !DILocation(line: 279, column: 21, scope: !5726)
!5760 = !DILocation(line: 279, column: 25, scope: !5726)
!5761 = !DILocation(line: 279, column: 3, scope: !5726)
!5762 = !DILocation(line: 280, column: 16, scope: !5726)
!5763 = !DILocation(line: 280, column: 24, scope: !5726)
!5764 = !DILocation(line: 280, column: 35, scope: !5726)
!5765 = !DILocation(line: 280, column: 3, scope: !5726)
!5766 = !DILocation(line: 281, column: 25, scope: !5726)
!5767 = !DILocation(line: 281, column: 33, scope: !5726)
!5768 = !DILocation(line: 281, column: 44, scope: !5726)
!5769 = !DILocation(line: 281, column: 3, scope: !5726)
!5770 = !DILocation(line: 282, column: 2, scope: !5726)
!5771 = !DILocation(line: 257, column: 46, scope: !5723)
!5772 = !DILocation(line: 257, column: 50, scope: !5723)
!5773 = !DILocation(line: 257, column: 44, scope: !5723)
!5774 = !DILocation(line: 257, column: 2, scope: !5723)
!5775 = distinct !{!5775, !5724, !5776}
!5776 = !DILocation(line: 282, column: 2, scope: !5717)
!5777 = !DILocation(line: 284, column: 34, scope: !5700)
!5778 = !DILocation(line: 284, column: 42, scope: !5700)
!5779 = !DILocation(line: 284, column: 2, scope: !5700)
!5780 = !DILocation(line: 285, column: 27, scope: !5700)
!5781 = !DILocation(line: 285, column: 35, scope: !5700)
!5782 = !DILocation(line: 285, column: 2, scope: !5700)
!5783 = !DILocation(line: 288, column: 1, scope: !5700)
!5784 = distinct !DISubprogram(name: "BKE_object_copy_particlesystems", scope: !3, file: !3, line: 1294, type: !5785, scopeLine: 1295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!5785 = !DISubroutineType(types: !5786)
!5786 = !{null, !5166, !5166}
!5787 = !DILocalVariable(name: "obn", arg: 1, scope: !5784, file: !3, line: 1294, type: !5166)
!5788 = !DILocation(line: 1294, column: 46, scope: !5784)
!5789 = !DILocalVariable(name: "ob", arg: 2, scope: !5784, file: !3, line: 1294, type: !5166)
!5790 = !DILocation(line: 1294, column: 59, scope: !5784)
!5791 = !DILocalVariable(name: "psys", scope: !5784, file: !3, line: 1296, type: !5351)
!5792 = !DILocation(line: 1296, column: 18, scope: !5784)
!5793 = !DILocalVariable(name: "npsys", scope: !5784, file: !3, line: 1296, type: !5351)
!5794 = !DILocation(line: 1296, column: 25, scope: !5784)
!5795 = !DILocalVariable(name: "md", scope: !5784, file: !3, line: 1297, type: !5260)
!5796 = !DILocation(line: 1297, column: 16, scope: !5784)
!5797 = !DILocation(line: 1299, column: 6, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5784, file: !3, line: 1299, column: 6)
!5799 = !DILocation(line: 1299, column: 11, scope: !5798)
!5800 = !DILocation(line: 1299, column: 16, scope: !5798)
!5801 = !DILocation(line: 1299, column: 6, scope: !5784)
!5802 = !DILocation(line: 1301, column: 3, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5798, file: !3, line: 1299, column: 28)
!5804 = !DILocation(line: 1304, column: 22, scope: !5784)
!5805 = !DILocation(line: 1304, column: 27, scope: !5784)
!5806 = !DILocation(line: 1304, column: 2, scope: !5784)
!5807 = !DILocation(line: 1305, column: 14, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5784, file: !3, line: 1305, column: 2)
!5809 = !DILocation(line: 1305, column: 18, scope: !5808)
!5810 = !DILocation(line: 1305, column: 33, scope: !5808)
!5811 = !DILocation(line: 1305, column: 12, scope: !5808)
!5812 = !DILocation(line: 1305, column: 7, scope: !5808)
!5813 = !DILocation(line: 1305, column: 40, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5808, file: !3, line: 1305, column: 2)
!5815 = !DILocation(line: 1305, column: 2, scope: !5808)
!5816 = !DILocation(line: 1306, column: 31, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5814, file: !3, line: 1305, column: 65)
!5818 = !DILocation(line: 1306, column: 11, scope: !5817)
!5819 = !DILocation(line: 1306, column: 9, scope: !5817)
!5820 = !DILocation(line: 1308, column: 16, scope: !5817)
!5821 = !DILocation(line: 1308, column: 21, scope: !5817)
!5822 = !DILocation(line: 1308, column: 37, scope: !5817)
!5823 = !DILocation(line: 1308, column: 3, scope: !5817)
!5824 = !DILocation(line: 1311, column: 13, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5817, file: !3, line: 1311, column: 3)
!5826 = !DILocation(line: 1311, column: 18, scope: !5825)
!5827 = !DILocation(line: 1311, column: 28, scope: !5825)
!5828 = !DILocation(line: 1311, column: 11, scope: !5825)
!5829 = !DILocation(line: 1311, column: 8, scope: !5825)
!5830 = !DILocation(line: 1311, column: 35, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5825, file: !3, line: 1311, column: 3)
!5832 = !DILocation(line: 1311, column: 3, scope: !5825)
!5833 = !DILocation(line: 1312, column: 8, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 1312, column: 8)
!5835 = distinct !DILexicalBlock(scope: !5831, file: !3, line: 1311, column: 54)
!5836 = !DILocation(line: 1312, column: 12, scope: !5834)
!5837 = !DILocation(line: 1312, column: 17, scope: !5834)
!5838 = !DILocation(line: 1312, column: 8, scope: !5835)
!5839 = !DILocalVariable(name: "psmd", scope: !5840, file: !3, line: 1313, type: !4985)
!5840 = distinct !DILexicalBlock(scope: !5834, file: !3, line: 1312, column: 50)
!5841 = !DILocation(line: 1313, column: 33, scope: !5840)
!5842 = !DILocation(line: 1313, column: 70, scope: !5840)
!5843 = !DILocation(line: 1313, column: 40, scope: !5840)
!5844 = !DILocation(line: 1314, column: 9, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 1314, column: 9)
!5846 = !DILocation(line: 1314, column: 15, scope: !5845)
!5847 = !DILocation(line: 1314, column: 23, scope: !5845)
!5848 = !DILocation(line: 1314, column: 20, scope: !5845)
!5849 = !DILocation(line: 1314, column: 9, scope: !5840)
!5850 = !DILocation(line: 1315, column: 19, scope: !5845)
!5851 = !DILocation(line: 1315, column: 6, scope: !5845)
!5852 = !DILocation(line: 1315, column: 12, scope: !5845)
!5853 = !DILocation(line: 1315, column: 17, scope: !5845)
!5854 = !DILocation(line: 1316, column: 4, scope: !5840)
!5855 = !DILocation(line: 1317, column: 13, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5834, file: !3, line: 1317, column: 13)
!5857 = !DILocation(line: 1317, column: 17, scope: !5856)
!5858 = !DILocation(line: 1317, column: 22, scope: !5856)
!5859 = !DILocation(line: 1317, column: 13, scope: !5834)
!5860 = !DILocalVariable(name: "pmd", scope: !5861, file: !3, line: 1318, type: !4997)
!5861 = distinct !DILexicalBlock(scope: !5856, file: !3, line: 1317, column: 53)
!5862 = !DILocation(line: 1318, column: 31, scope: !5861)
!5863 = !DILocation(line: 1318, column: 65, scope: !5861)
!5864 = !DILocation(line: 1318, column: 37, scope: !5861)
!5865 = !DILocation(line: 1319, column: 9, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 1319, column: 9)
!5867 = !DILocation(line: 1319, column: 14, scope: !5866)
!5868 = !DILocation(line: 1319, column: 9, scope: !5861)
!5869 = !DILocation(line: 1320, column: 10, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 1320, column: 10)
!5871 = distinct !DILexicalBlock(scope: !5866, file: !3, line: 1319, column: 21)
!5872 = !DILocation(line: 1320, column: 15, scope: !5870)
!5873 = !DILocation(line: 1320, column: 22, scope: !5870)
!5874 = !DILocation(line: 1320, column: 30, scope: !5870)
!5875 = !DILocation(line: 1320, column: 27, scope: !5870)
!5876 = !DILocation(line: 1320, column: 10, scope: !5871)
!5877 = !DILocation(line: 1321, column: 26, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 1320, column: 36)
!5879 = !DILocation(line: 1321, column: 7, scope: !5878)
!5880 = !DILocation(line: 1321, column: 12, scope: !5878)
!5881 = !DILocation(line: 1321, column: 19, scope: !5878)
!5882 = !DILocation(line: 1321, column: 24, scope: !5878)
!5883 = !DILocation(line: 1322, column: 6, scope: !5878)
!5884 = !DILocation(line: 1323, column: 5, scope: !5871)
!5885 = !DILocation(line: 1324, column: 4, scope: !5861)
!5886 = !DILocation(line: 1325, column: 13, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5856, file: !3, line: 1325, column: 13)
!5888 = !DILocation(line: 1325, column: 17, scope: !5887)
!5889 = !DILocation(line: 1325, column: 22, scope: !5887)
!5890 = !DILocation(line: 1325, column: 13, scope: !5856)
!5891 = !DILocalVariable(name: "smd", scope: !5892, file: !3, line: 1326, type: !5045)
!5892 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 1325, column: 46)
!5893 = !DILocation(line: 1326, column: 24, scope: !5892)
!5894 = !DILocation(line: 1326, column: 52, scope: !5892)
!5895 = !DILocation(line: 1326, column: 30, scope: !5892)
!5896 = !DILocation(line: 1328, column: 9, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 1328, column: 9)
!5898 = !DILocation(line: 1328, column: 14, scope: !5897)
!5899 = !DILocation(line: 1328, column: 19, scope: !5897)
!5900 = !DILocation(line: 1328, column: 9, scope: !5892)
!5901 = !DILocation(line: 1329, column: 10, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5903, file: !3, line: 1329, column: 10)
!5903 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 1328, column: 43)
!5904 = !DILocation(line: 1329, column: 15, scope: !5902)
!5905 = !DILocation(line: 1329, column: 10, scope: !5903)
!5906 = !DILocation(line: 1330, column: 11, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5908, file: !3, line: 1330, column: 11)
!5908 = distinct !DILexicalBlock(scope: !5902, file: !3, line: 1329, column: 21)
!5909 = !DILocation(line: 1330, column: 16, scope: !5907)
!5910 = !DILocation(line: 1330, column: 22, scope: !5907)
!5911 = !DILocation(line: 1330, column: 30, scope: !5907)
!5912 = !DILocation(line: 1330, column: 27, scope: !5907)
!5913 = !DILocation(line: 1330, column: 11, scope: !5908)
!5914 = !DILocation(line: 1331, column: 26, scope: !5907)
!5915 = !DILocation(line: 1331, column: 8, scope: !5907)
!5916 = !DILocation(line: 1331, column: 13, scope: !5907)
!5917 = !DILocation(line: 1331, column: 19, scope: !5907)
!5918 = !DILocation(line: 1331, column: 24, scope: !5907)
!5919 = !DILocation(line: 1332, column: 6, scope: !5908)
!5920 = !DILocation(line: 1333, column: 5, scope: !5903)
!5921 = !DILocation(line: 1334, column: 4, scope: !5892)
!5922 = !DILocation(line: 1335, column: 3, scope: !5835)
!5923 = !DILocation(line: 1311, column: 44, scope: !5831)
!5924 = !DILocation(line: 1311, column: 48, scope: !5831)
!5925 = !DILocation(line: 1311, column: 42, scope: !5831)
!5926 = !DILocation(line: 1311, column: 3, scope: !5831)
!5927 = distinct !{!5927, !5832, !5928}
!5928 = !DILocation(line: 1335, column: 3, scope: !5825)
!5929 = !DILocation(line: 1336, column: 2, scope: !5817)
!5930 = !DILocation(line: 1305, column: 53, scope: !5814)
!5931 = !DILocation(line: 1305, column: 59, scope: !5814)
!5932 = !DILocation(line: 1305, column: 51, scope: !5814)
!5933 = !DILocation(line: 1305, column: 2, scope: !5814)
!5934 = distinct !{!5934, !5815, !5935}
!5935 = !DILocation(line: 1336, column: 2, scope: !5808)
!5936 = !DILocation(line: 1337, column: 1, scope: !5784)
!5937 = distinct !DISubprogram(name: "BKE_object_copy_softbody", scope: !3, file: !3, line: 1339, type: !5785, scopeLine: 1340, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!5938 = !DILocalVariable(name: "obn", arg: 1, scope: !5937, file: !3, line: 1339, type: !5166)
!5939 = !DILocation(line: 1339, column: 39, scope: !5937)
!5940 = !DILocalVariable(name: "ob", arg: 2, scope: !5937, file: !3, line: 1339, type: !5166)
!5941 = !DILocation(line: 1339, column: 52, scope: !5937)
!5942 = !DILocation(line: 1341, column: 6, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5937, file: !3, line: 1341, column: 6)
!5944 = !DILocation(line: 1341, column: 10, scope: !5943)
!5945 = !DILocation(line: 1341, column: 6, scope: !5937)
!5946 = !DILocation(line: 1342, column: 29, scope: !5943)
!5947 = !DILocation(line: 1342, column: 33, scope: !5943)
!5948 = !DILocation(line: 1342, column: 15, scope: !5943)
!5949 = !DILocation(line: 1342, column: 3, scope: !5943)
!5950 = !DILocation(line: 1342, column: 8, scope: !5943)
!5951 = !DILocation(line: 1342, column: 13, scope: !5943)
!5952 = !DILocation(line: 1343, column: 1, scope: !5937)
!5953 = distinct !DISubprogram(name: "BKE_object_free_derived_caches", scope: !3, file: !3, line: 291, type: !5284, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!5954 = !DILocalVariable(name: "ob", arg: 1, scope: !5953, file: !3, line: 291, type: !5166)
!5955 = !DILocation(line: 291, column: 45, scope: !5953)
!5956 = !DILocation(line: 294, column: 6, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5953, file: !3, line: 294, column: 6)
!5958 = !DILocation(line: 294, column: 10, scope: !5957)
!5959 = !DILocation(line: 294, column: 15, scope: !5957)
!5960 = !DILocation(line: 294, column: 6, scope: !5953)
!5961 = !DILocalVariable(name: "me", scope: !5962, file: !3, line: 295, type: !593)
!5962 = distinct !DILexicalBlock(scope: !5957, file: !3, line: 294, column: 27)
!5963 = !DILocation(line: 295, column: 9, scope: !5962)
!5964 = !DILocation(line: 295, column: 14, scope: !5962)
!5965 = !DILocation(line: 295, column: 18, scope: !5962)
!5966 = !DILocation(line: 297, column: 7, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5962, file: !3, line: 297, column: 7)
!5968 = !DILocation(line: 297, column: 11, scope: !5967)
!5969 = !DILocation(line: 297, column: 7, scope: !5962)
!5970 = !DILocation(line: 298, column: 4, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 297, column: 15)
!5972 = !DILocation(line: 298, column: 8, scope: !5971)
!5973 = !DILocation(line: 298, column: 12, scope: !5971)
!5974 = !DILocation(line: 298, column: 17, scope: !5971)
!5975 = !DILocation(line: 299, column: 3, scope: !5971)
!5976 = !DILocation(line: 300, column: 2, scope: !5962)
!5977 = !DILocation(line: 301, column: 11, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5957, file: !3, line: 301, column: 11)
!5979 = !DILocation(line: 301, column: 11, scope: !5957)
!5980 = !DILocalVariable(name: "cu", scope: !5981, file: !3, line: 302, type: !4467)
!5981 = distinct !DILexicalBlock(scope: !5978, file: !3, line: 301, column: 55)
!5982 = !DILocation(line: 302, column: 10, scope: !5981)
!5983 = !DILocation(line: 302, column: 15, scope: !5981)
!5984 = !DILocation(line: 302, column: 19, scope: !5981)
!5985 = !DILocation(line: 304, column: 7, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5981, file: !3, line: 304, column: 7)
!5987 = !DILocation(line: 304, column: 11, scope: !5986)
!5988 = !DILocation(line: 304, column: 7, scope: !5981)
!5989 = !DILocation(line: 305, column: 4, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5986, file: !3, line: 304, column: 15)
!5991 = !DILocation(line: 305, column: 8, scope: !5990)
!5992 = !DILocation(line: 305, column: 12, scope: !5990)
!5993 = !DILocation(line: 305, column: 17, scope: !5990)
!5994 = !DILocation(line: 306, column: 3, scope: !5990)
!5995 = !DILocation(line: 307, column: 2, scope: !5981)
!5996 = !DILocation(line: 309, column: 6, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5953, file: !3, line: 309, column: 6)
!5998 = !DILocation(line: 309, column: 10, scope: !5997)
!5999 = !DILocation(line: 309, column: 6, scope: !5953)
!6000 = !DILocation(line: 310, column: 3, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5997, file: !3, line: 309, column: 14)
!6002 = !DILocation(line: 310, column: 13, scope: !6001)
!6003 = !DILocation(line: 310, column: 17, scope: !6001)
!6004 = !DILocation(line: 311, column: 3, scope: !6001)
!6005 = !DILocation(line: 311, column: 7, scope: !6001)
!6006 = !DILocation(line: 311, column: 10, scope: !6001)
!6007 = !DILocation(line: 312, column: 2, scope: !6001)
!6008 = !DILocation(line: 314, column: 6, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !5953, file: !3, line: 314, column: 6)
!6010 = !DILocation(line: 314, column: 10, scope: !6009)
!6011 = !DILocation(line: 314, column: 6, scope: !5953)
!6012 = !DILocation(line: 315, column: 3, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 314, column: 24)
!6014 = !DILocation(line: 315, column: 7, scope: !6013)
!6015 = !DILocation(line: 315, column: 21, scope: !6013)
!6016 = !DILocation(line: 315, column: 31, scope: !6013)
!6017 = !DILocation(line: 316, column: 3, scope: !6013)
!6018 = !DILocation(line: 316, column: 7, scope: !6013)
!6019 = !DILocation(line: 316, column: 21, scope: !6013)
!6020 = !DILocation(line: 316, column: 29, scope: !6013)
!6021 = !DILocation(line: 316, column: 33, scope: !6013)
!6022 = !DILocation(line: 317, column: 3, scope: !6013)
!6023 = !DILocation(line: 317, column: 7, scope: !6013)
!6024 = !DILocation(line: 317, column: 20, scope: !6013)
!6025 = !DILocation(line: 318, column: 2, scope: !6013)
!6026 = !DILocation(line: 319, column: 6, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !5953, file: !3, line: 319, column: 6)
!6028 = !DILocation(line: 319, column: 10, scope: !6027)
!6029 = !DILocation(line: 319, column: 6, scope: !5953)
!6030 = !DILocation(line: 320, column: 3, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 319, column: 25)
!6032 = !DILocation(line: 320, column: 7, scope: !6031)
!6033 = !DILocation(line: 320, column: 22, scope: !6031)
!6034 = !DILocation(line: 320, column: 32, scope: !6031)
!6035 = !DILocation(line: 321, column: 3, scope: !6031)
!6036 = !DILocation(line: 321, column: 7, scope: !6031)
!6037 = !DILocation(line: 321, column: 22, scope: !6031)
!6038 = !DILocation(line: 321, column: 30, scope: !6031)
!6039 = !DILocation(line: 321, column: 34, scope: !6031)
!6040 = !DILocation(line: 322, column: 3, scope: !6031)
!6041 = !DILocation(line: 322, column: 7, scope: !6031)
!6042 = !DILocation(line: 322, column: 21, scope: !6031)
!6043 = !DILocation(line: 323, column: 2, scope: !6031)
!6044 = !DILocation(line: 325, column: 30, scope: !5953)
!6045 = !DILocation(line: 325, column: 2, scope: !5953)
!6046 = !DILocation(line: 326, column: 1, scope: !5953)
!6047 = distinct !DISubprogram(name: "BKE_object_free_ex", scope: !3, file: !3, line: 329, type: !6048, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!6048 = !DISubroutineType(types: !6049)
!6049 = !{null, !5166, !1788}
!6050 = !DILocalVariable(name: "ob", arg: 1, scope: !6047, file: !3, line: 329, type: !5166)
!6051 = !DILocation(line: 329, column: 33, scope: !6047)
!6052 = !DILocalVariable(name: "do_id_user", arg: 2, scope: !6047, file: !3, line: 329, type: !1788)
!6053 = !DILocation(line: 329, column: 42, scope: !6047)
!6054 = !DILocalVariable(name: "a", scope: !6047, file: !3, line: 331, type: !73)
!6055 = !DILocation(line: 331, column: 6, scope: !6047)
!6056 = !DILocation(line: 333, column: 33, scope: !6047)
!6057 = !DILocation(line: 333, column: 2, scope: !6047)
!6058 = !DILocation(line: 336, column: 6, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 336, column: 6)
!6060 = !DILocation(line: 336, column: 10, scope: !6059)
!6061 = !DILocation(line: 336, column: 6, scope: !6047)
!6062 = !DILocalVariable(name: "id", scope: !6063, file: !3, line: 337, type: !613)
!6063 = distinct !DILexicalBlock(scope: !6059, file: !3, line: 336, column: 16)
!6064 = !DILocation(line: 337, column: 7, scope: !6063)
!6065 = !DILocation(line: 337, column: 12, scope: !6063)
!6066 = !DILocation(line: 337, column: 16, scope: !6063)
!6067 = !DILocation(line: 338, column: 3, scope: !6063)
!6068 = !DILocation(line: 338, column: 7, scope: !6063)
!6069 = !DILocation(line: 338, column: 9, scope: !6063)
!6070 = !DILocation(line: 339, column: 7, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !6063, file: !3, line: 339, column: 7)
!6072 = !DILocation(line: 339, column: 11, scope: !6071)
!6073 = !DILocation(line: 339, column: 14, scope: !6071)
!6074 = !DILocation(line: 339, column: 19, scope: !6071)
!6075 = !DILocation(line: 339, column: 22, scope: !6071)
!6076 = !DILocation(line: 339, column: 26, scope: !6071)
!6077 = !DILocation(line: 339, column: 30, scope: !6071)
!6078 = !DILocation(line: 339, column: 7, scope: !6063)
!6079 = !DILocation(line: 340, column: 12, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 339, column: 39)
!6081 = !DILocation(line: 340, column: 16, scope: !6080)
!6082 = !DILocation(line: 340, column: 4, scope: !6080)
!6083 = !DILocation(line: 342, column: 30, scope: !6084)
!6084 = distinct !DILexicalBlock(scope: !6080, file: !3, line: 340, column: 22)
!6085 = !DILocation(line: 342, column: 22, scope: !6084)
!6086 = !DILocation(line: 342, column: 6, scope: !6084)
!6087 = !DILocation(line: 343, column: 6, scope: !6084)
!6088 = !DILocation(line: 345, column: 32, scope: !6084)
!6089 = !DILocation(line: 345, column: 23, scope: !6084)
!6090 = !DILocation(line: 345, column: 6, scope: !6084)
!6091 = !DILocation(line: 346, column: 6, scope: !6084)
!6092 = !DILocation(line: 348, column: 35, scope: !6084)
!6093 = !DILocation(line: 348, column: 23, scope: !6084)
!6094 = !DILocation(line: 348, column: 6, scope: !6084)
!6095 = !DILocation(line: 349, column: 6, scope: !6084)
!6096 = !DILocation(line: 351, column: 3, scope: !6080)
!6097 = !DILocation(line: 352, column: 3, scope: !6063)
!6098 = !DILocation(line: 352, column: 7, scope: !6063)
!6099 = !DILocation(line: 352, column: 12, scope: !6063)
!6100 = !DILocation(line: 353, column: 2, scope: !6063)
!6101 = !DILocation(line: 355, column: 6, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 355, column: 6)
!6103 = !DILocation(line: 355, column: 10, scope: !6102)
!6104 = !DILocation(line: 355, column: 6, scope: !6047)
!6105 = !DILocation(line: 356, column: 10, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6107, file: !3, line: 356, column: 3)
!6107 = distinct !DILexicalBlock(scope: !6102, file: !3, line: 355, column: 15)
!6108 = !DILocation(line: 356, column: 8, scope: !6106)
!6109 = !DILocation(line: 356, column: 15, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6106, file: !3, line: 356, column: 3)
!6111 = !DILocation(line: 356, column: 19, scope: !6110)
!6112 = !DILocation(line: 356, column: 23, scope: !6110)
!6113 = !DILocation(line: 356, column: 17, scope: !6110)
!6114 = !DILocation(line: 356, column: 3, scope: !6106)
!6115 = !DILocation(line: 357, column: 8, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6117, file: !3, line: 357, column: 8)
!6117 = distinct !DILexicalBlock(scope: !6110, file: !3, line: 356, column: 36)
!6118 = !DILocation(line: 357, column: 12, scope: !6116)
!6119 = !DILocation(line: 357, column: 16, scope: !6116)
!6120 = !DILocation(line: 357, column: 8, scope: !6117)
!6121 = !DILocation(line: 357, column: 20, scope: !6116)
!6122 = !DILocation(line: 357, column: 24, scope: !6116)
!6123 = !DILocation(line: 357, column: 28, scope: !6116)
!6124 = !DILocation(line: 357, column: 32, scope: !6116)
!6125 = !DILocation(line: 357, column: 35, scope: !6116)
!6126 = !DILocation(line: 357, column: 37, scope: !6116)
!6127 = !DILocation(line: 358, column: 3, scope: !6117)
!6128 = !DILocation(line: 356, column: 32, scope: !6110)
!6129 = !DILocation(line: 356, column: 3, scope: !6110)
!6130 = distinct !{!6130, !6114, !6131}
!6131 = !DILocation(line: 358, column: 3, scope: !6106)
!6132 = !DILocation(line: 359, column: 3, scope: !6107)
!6133 = !DILocation(line: 359, column: 13, scope: !6107)
!6134 = !DILocation(line: 359, column: 17, scope: !6107)
!6135 = !DILocation(line: 360, column: 2, scope: !6107)
!6136 = !DILocation(line: 361, column: 6, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 361, column: 6)
!6138 = !DILocation(line: 361, column: 10, scope: !6137)
!6139 = !DILocation(line: 361, column: 6, scope: !6047)
!6140 = !DILocation(line: 361, column: 19, scope: !6137)
!6141 = !DILocation(line: 361, column: 29, scope: !6137)
!6142 = !DILocation(line: 361, column: 33, scope: !6137)
!6143 = !DILocation(line: 362, column: 2, scope: !6047)
!6144 = !DILocation(line: 362, column: 6, scope: !6047)
!6145 = !DILocation(line: 362, column: 10, scope: !6047)
!6146 = !DILocation(line: 363, column: 2, scope: !6047)
!6147 = !DILocation(line: 363, column: 6, scope: !6047)
!6148 = !DILocation(line: 363, column: 14, scope: !6047)
!6149 = !DILocation(line: 364, column: 6, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 364, column: 6)
!6151 = !DILocation(line: 364, column: 10, scope: !6150)
!6152 = !DILocation(line: 364, column: 6, scope: !6047)
!6153 = !DILocation(line: 364, column: 17, scope: !6150)
!6154 = !DILocation(line: 364, column: 27, scope: !6150)
!6155 = !DILocation(line: 364, column: 31, scope: !6150)
!6156 = !DILocation(line: 365, column: 2, scope: !6047)
!6157 = !DILocation(line: 365, column: 6, scope: !6047)
!6158 = !DILocation(line: 365, column: 12, scope: !6047)
!6159 = !DILocation(line: 366, column: 6, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 366, column: 6)
!6161 = !DILocation(line: 366, column: 10, scope: !6160)
!6162 = !DILocation(line: 366, column: 6, scope: !6047)
!6163 = !DILocation(line: 366, column: 14, scope: !6160)
!6164 = !DILocation(line: 366, column: 24, scope: !6160)
!6165 = !DILocation(line: 366, column: 28, scope: !6160)
!6166 = !DILocation(line: 367, column: 2, scope: !6047)
!6167 = !DILocation(line: 367, column: 6, scope: !6047)
!6168 = !DILocation(line: 367, column: 9, scope: !6047)
!6169 = !DILocation(line: 368, column: 6, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 368, column: 6)
!6171 = !DILocation(line: 368, column: 10, scope: !6170)
!6172 = !DILocation(line: 368, column: 6, scope: !6047)
!6173 = !DILocation(line: 368, column: 39, scope: !6170)
!6174 = !DILocation(line: 368, column: 33, scope: !6170)
!6175 = !DILocation(line: 368, column: 15, scope: !6170)
!6176 = !DILocation(line: 369, column: 6, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 369, column: 6)
!6178 = !DILocation(line: 369, column: 10, scope: !6177)
!6179 = !DILocation(line: 369, column: 6, scope: !6047)
!6180 = !DILocation(line: 369, column: 19, scope: !6177)
!6181 = !DILocation(line: 369, column: 23, scope: !6177)
!6182 = !DILocation(line: 369, column: 32, scope: !6177)
!6183 = !DILocation(line: 369, column: 35, scope: !6177)
!6184 = !DILocation(line: 369, column: 37, scope: !6177)
!6185 = !DILocation(line: 370, column: 6, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 370, column: 6)
!6187 = !DILocation(line: 370, column: 10, scope: !6186)
!6188 = !DILocation(line: 370, column: 6, scope: !6047)
!6189 = !DILocation(line: 370, column: 22, scope: !6186)
!6190 = !DILocation(line: 370, column: 26, scope: !6186)
!6191 = !DILocation(line: 370, column: 32, scope: !6186)
!6192 = !DILocation(line: 370, column: 34, scope: !6186)
!6193 = !DILocation(line: 370, column: 15, scope: !6186)
!6194 = !DILocation(line: 371, column: 6, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 371, column: 6)
!6196 = !DILocation(line: 371, column: 10, scope: !6195)
!6197 = !DILocation(line: 371, column: 18, scope: !6195)
!6198 = !DILocation(line: 371, column: 6, scope: !6047)
!6199 = !DILocation(line: 372, column: 18, scope: !6195)
!6200 = !DILocation(line: 372, column: 22, scope: !6195)
!6201 = !DILocation(line: 372, column: 3, scope: !6195)
!6202 = !DILocation(line: 373, column: 6, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 373, column: 6)
!6204 = !DILocation(line: 373, column: 10, scope: !6203)
!6205 = !DILocation(line: 373, column: 6, scope: !6047)
!6206 = !DILocation(line: 374, column: 20, scope: !6203)
!6207 = !DILocation(line: 374, column: 24, scope: !6203)
!6208 = !DILocation(line: 374, column: 30, scope: !6203)
!6209 = !DILocation(line: 374, column: 3, scope: !6203)
!6210 = !DILocation(line: 375, column: 6, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 375, column: 6)
!6212 = !DILocation(line: 375, column: 10, scope: !6211)
!6213 = !DILocation(line: 375, column: 6, scope: !6047)
!6214 = !DILocation(line: 376, column: 27, scope: !6211)
!6215 = !DILocation(line: 376, column: 31, scope: !6211)
!6216 = !DILocation(line: 376, column: 3, scope: !6211)
!6217 = !DILocation(line: 377, column: 27, scope: !6047)
!6218 = !DILocation(line: 377, column: 31, scope: !6047)
!6219 = !DILocation(line: 377, column: 2, scope: !6047)
!6220 = !DILocation(line: 378, column: 28, scope: !6047)
!6221 = !DILocation(line: 378, column: 2, scope: !6047)
!6222 = !DILocation(line: 380, column: 16, scope: !6047)
!6223 = !DILocation(line: 380, column: 20, scope: !6047)
!6224 = !DILocation(line: 380, column: 2, scope: !6047)
!6225 = !DILocation(line: 381, column: 20, scope: !6047)
!6226 = !DILocation(line: 381, column: 24, scope: !6047)
!6227 = !DILocation(line: 381, column: 2, scope: !6047)
!6228 = !DILocation(line: 382, column: 18, scope: !6047)
!6229 = !DILocation(line: 382, column: 22, scope: !6047)
!6230 = !DILocation(line: 382, column: 2, scope: !6047)
!6231 = !DILocation(line: 384, column: 24, scope: !6047)
!6232 = !DILocation(line: 384, column: 28, scope: !6047)
!6233 = !DILocation(line: 384, column: 2, scope: !6047)
!6234 = !DILocation(line: 386, column: 19, scope: !6047)
!6235 = !DILocation(line: 386, column: 23, scope: !6047)
!6236 = !DILocation(line: 386, column: 2, scope: !6047)
!6237 = !DILocation(line: 387, column: 28, scope: !6047)
!6238 = !DILocation(line: 387, column: 2, scope: !6047)
!6239 = !DILocation(line: 388, column: 32, scope: !6047)
!6240 = !DILocation(line: 388, column: 2, scope: !6047)
!6241 = !DILocation(line: 390, column: 6, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 390, column: 6)
!6243 = !DILocation(line: 390, column: 10, scope: !6242)
!6244 = !DILocation(line: 390, column: 6, scope: !6047)
!6245 = !DILocation(line: 390, column: 23, scope: !6242)
!6246 = !DILocation(line: 390, column: 27, scope: !6242)
!6247 = !DILocation(line: 390, column: 16, scope: !6242)
!6248 = !DILocation(line: 391, column: 6, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 391, column: 6)
!6250 = !DILocation(line: 391, column: 10, scope: !6249)
!6251 = !DILocation(line: 391, column: 6, scope: !6047)
!6252 = !DILocation(line: 391, column: 25, scope: !6249)
!6253 = !DILocation(line: 391, column: 29, scope: !6249)
!6254 = !DILocation(line: 391, column: 17, scope: !6249)
!6255 = !DILocation(line: 392, column: 6, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 392, column: 6)
!6257 = !DILocation(line: 392, column: 10, scope: !6256)
!6258 = !DILocation(line: 392, column: 18, scope: !6256)
!6259 = !DILocation(line: 392, column: 6, scope: !6047)
!6260 = !DILocation(line: 392, column: 39, scope: !6256)
!6261 = !DILocation(line: 392, column: 25, scope: !6256)
!6262 = !DILocation(line: 394, column: 25, scope: !6047)
!6263 = !DILocation(line: 394, column: 2, scope: !6047)
!6264 = !DILocation(line: 396, column: 6, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 396, column: 6)
!6266 = !DILocation(line: 396, column: 10, scope: !6265)
!6267 = !DILocation(line: 396, column: 17, scope: !6265)
!6268 = !DILocation(line: 396, column: 6, scope: !6047)
!6269 = !DILocation(line: 396, column: 39, scope: !6265)
!6270 = !DILocation(line: 396, column: 43, scope: !6265)
!6271 = !DILocation(line: 396, column: 24, scope: !6265)
!6272 = !DILocation(line: 398, column: 17, scope: !6047)
!6273 = !DILocation(line: 398, column: 21, scope: !6047)
!6274 = !DILocation(line: 398, column: 2, scope: !6047)
!6275 = !DILocation(line: 401, column: 6, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 401, column: 6)
!6277 = !DILocation(line: 401, column: 10, scope: !6276)
!6278 = !DILocation(line: 401, column: 6, scope: !6047)
!6279 = !DILocation(line: 402, column: 29, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6276, file: !3, line: 401, column: 23)
!6281 = !DILocation(line: 402, column: 33, scope: !6280)
!6282 = !DILocation(line: 402, column: 46, scope: !6280)
!6283 = !DILocation(line: 402, column: 3, scope: !6280)
!6284 = !DILocation(line: 403, column: 7, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 403, column: 7)
!6286 = !DILocation(line: 403, column: 11, scope: !6285)
!6287 = !DILocation(line: 403, column: 24, scope: !6285)
!6288 = !DILocation(line: 403, column: 7, scope: !6280)
!6289 = !DILocation(line: 404, column: 14, scope: !6285)
!6290 = !DILocation(line: 404, column: 18, scope: !6285)
!6291 = !DILocation(line: 404, column: 31, scope: !6285)
!6292 = !DILocation(line: 404, column: 4, scope: !6285)
!6293 = !DILocation(line: 405, column: 3, scope: !6280)
!6294 = !DILocation(line: 405, column: 13, scope: !6280)
!6295 = !DILocation(line: 405, column: 17, scope: !6280)
!6296 = !DILocation(line: 406, column: 2, scope: !6280)
!6297 = !DILocation(line: 407, column: 1, scope: !6047)
!6298 = distinct !DISubprogram(name: "BKE_object_free", scope: !3, file: !3, line: 409, type: !5284, scopeLine: 410, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!6299 = !DILocalVariable(name: "ob", arg: 1, scope: !6298, file: !3, line: 409, type: !5166)
!6300 = !DILocation(line: 409, column: 30, scope: !6298)
!6301 = !DILocation(line: 411, column: 21, scope: !6298)
!6302 = !DILocation(line: 411, column: 2, scope: !6298)
!6303 = !DILocation(line: 412, column: 1, scope: !6298)
!6304 = distinct !DISubprogram(name: "BKE_object_unlink", scope: !3, file: !3, line: 425, type: !5284, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!6305 = !DILocalVariable(name: "ob", arg: 1, scope: !6304, file: !3, line: 425, type: !5166)
!6306 = !DILocation(line: 425, column: 32, scope: !6304)
!6307 = !DILocalVariable(name: "bmain", scope: !6304, file: !3, line: 427, type: !6308)
!6308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6309, size: 64)
!6309 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !6310, line: 104, baseType: !6311)
!6310 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !6310, line: 53, size: 15232, elements: !6312)
!6312 = !{!6313, !6315, !6316, !6317, !6318, !6319, !6320, !6321, !6322, !6324, !6325, !6326, !6327, !6328, !6329, !6330, !6331, !6332, !6333, !6334, !6335, !6336, !6337, !6338, !6339, !6340, !6341, !6342, !6343, !6344, !6345, !6346, !6347, !6348, !6349, !6350, !6351, !6352, !6353, !6354, !6355, !6356, !6357, !6358, !6359, !6360, !6361, !6366}
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6311, file: !6310, line: 54, baseType: !6314, size: 64)
!6314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6311, size: 64)
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6311, file: !6310, line: 54, baseType: !6314, size: 64, offset: 64)
!6316 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6311, file: !6310, line: 55, baseType: !618, size: 8192, offset: 128)
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !6311, file: !6310, line: 56, baseType: !632, size: 16, offset: 8320)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !6311, file: !6310, line: 56, baseType: !632, size: 16, offset: 8336)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !6311, file: !6310, line: 57, baseType: !632, size: 16, offset: 8352)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !6311, file: !6310, line: 57, baseType: !632, size: 16, offset: 8368)
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !6311, file: !6310, line: 58, baseType: !2359, size: 64, offset: 8384)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !6311, file: !6310, line: 59, baseType: !6323, size: 128, offset: 8448)
!6323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 128, elements: !3769)
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !6311, file: !6310, line: 60, baseType: !632, size: 16, offset: 8576)
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !6311, file: !6310, line: 62, baseType: !608, size: 64, offset: 8640)
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !6311, file: !6310, line: 63, baseType: !658, size: 128, offset: 8704)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !6311, file: !6310, line: 64, baseType: !658, size: 128, offset: 8832)
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !6311, file: !6310, line: 65, baseType: !658, size: 128, offset: 8960)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !6311, file: !6310, line: 66, baseType: !658, size: 128, offset: 9088)
!6330 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !6311, file: !6310, line: 67, baseType: !658, size: 128, offset: 9216)
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !6311, file: !6310, line: 68, baseType: !658, size: 128, offset: 9344)
!6332 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !6311, file: !6310, line: 69, baseType: !658, size: 128, offset: 9472)
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !6311, file: !6310, line: 70, baseType: !658, size: 128, offset: 9600)
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !6311, file: !6310, line: 71, baseType: !658, size: 128, offset: 9728)
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !6311, file: !6310, line: 72, baseType: !658, size: 128, offset: 9856)
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !6311, file: !6310, line: 73, baseType: !658, size: 128, offset: 9984)
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !6311, file: !6310, line: 74, baseType: !658, size: 128, offset: 10112)
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !6311, file: !6310, line: 75, baseType: !658, size: 128, offset: 10240)
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !6311, file: !6310, line: 76, baseType: !658, size: 128, offset: 10368)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !6311, file: !6310, line: 77, baseType: !658, size: 128, offset: 10496)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !6311, file: !6310, line: 78, baseType: !658, size: 128, offset: 10624)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !6311, file: !6310, line: 79, baseType: !658, size: 128, offset: 10752)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !6311, file: !6310, line: 80, baseType: !658, size: 128, offset: 10880)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !6311, file: !6310, line: 81, baseType: !658, size: 128, offset: 11008)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !6311, file: !6310, line: 82, baseType: !658, size: 128, offset: 11136)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !6311, file: !6310, line: 83, baseType: !658, size: 128, offset: 11264)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !6311, file: !6310, line: 84, baseType: !658, size: 128, offset: 11392)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !6311, file: !6310, line: 85, baseType: !658, size: 128, offset: 11520)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !6311, file: !6310, line: 86, baseType: !658, size: 128, offset: 11648)
!6350 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !6311, file: !6310, line: 87, baseType: !658, size: 128, offset: 11776)
!6351 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !6311, file: !6310, line: 88, baseType: !658, size: 128, offset: 11904)
!6352 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !6311, file: !6310, line: 89, baseType: !658, size: 128, offset: 12032)
!6353 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !6311, file: !6310, line: 90, baseType: !658, size: 128, offset: 12160)
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !6311, file: !6310, line: 91, baseType: !658, size: 128, offset: 12288)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !6311, file: !6310, line: 92, baseType: !658, size: 128, offset: 12416)
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !6311, file: !6310, line: 93, baseType: !658, size: 128, offset: 12544)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !6311, file: !6310, line: 94, baseType: !658, size: 128, offset: 12672)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !6311, file: !6310, line: 95, baseType: !658, size: 128, offset: 12800)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !6311, file: !6310, line: 96, baseType: !658, size: 128, offset: 12928)
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !6311, file: !6310, line: 98, baseType: !1260, size: 2048, offset: 13056)
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !6311, file: !6310, line: 101, baseType: !6362, size: 64, offset: 15104)
!6362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6363, size: 64)
!6363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !438, line: 58, size: 32, elements: !6364)
!6364 = !{!6365}
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6363, file: !438, line: 59, baseType: !73, size: 32)
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6311, file: !6310, line: 103, baseType: !6367, size: 64, offset: 15168)
!6367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6368, size: 64)
!6368 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !6310, line: 51, flags: DIFlagFwdDecl)
!6369 = !DILocation(line: 427, column: 8, scope: !6304)
!6370 = !DILocation(line: 427, column: 18, scope: !6304)
!6371 = !DILocalVariable(name: "obt", scope: !6304, file: !3, line: 428, type: !5166)
!6372 = !DILocation(line: 428, column: 10, scope: !6304)
!6373 = !DILocalVariable(name: "mat", scope: !6304, file: !3, line: 429, type: !6374)
!6374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6375, size: 64)
!6375 = !DIDerivedType(tag: DW_TAG_typedef, name: "Material", file: !798, line: 203, baseType: !797)
!6376 = !DILocation(line: 429, column: 12, scope: !6304)
!6377 = !DILocalVariable(name: "wrld", scope: !6304, file: !3, line: 430, type: !6378)
!6378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6379, size: 64)
!6379 = !DIDerivedType(tag: DW_TAG_typedef, name: "World", file: !1003, line: 131, baseType: !1002)
!6380 = !DILocation(line: 430, column: 9, scope: !6304)
!6381 = !DILocalVariable(name: "sc", scope: !6304, file: !3, line: 431, type: !6382)
!6382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6383, size: 64)
!6383 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !229, line: 80, baseType: !6384)
!6384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !229, line: 49, size: 1984, elements: !6385)
!6385 = !{!6386, !6387, !6388, !6389, !6390, !6391, !6392, !6393, !6394, !6395, !6396, !6397, !6398, !6399, !6400, !6401, !6402, !6403, !6404, !6405, !6406, !6407, !6408}
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6384, file: !229, line: 50, baseType: !599, size: 960)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !6384, file: !229, line: 52, baseType: !658, size: 128, offset: 960)
!6388 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !6384, file: !229, line: 53, baseType: !658, size: 128, offset: 1088)
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !6384, file: !229, line: 54, baseType: !658, size: 128, offset: 1216)
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !6384, file: !229, line: 55, baseType: !658, size: 128, offset: 1344)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !6384, file: !229, line: 57, baseType: !993, size: 64, offset: 1472)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !6384, file: !229, line: 58, baseType: !993, size: 64, offset: 1536)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !6384, file: !229, line: 60, baseType: !73, size: 32, offset: 1600)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !6384, file: !229, line: 61, baseType: !73, size: 32, offset: 1632)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6384, file: !229, line: 63, baseType: !632, size: 16, offset: 1664)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !6384, file: !229, line: 64, baseType: !632, size: 16, offset: 1680)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !6384, file: !229, line: 65, baseType: !632, size: 16, offset: 1696)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !6384, file: !229, line: 66, baseType: !632, size: 16, offset: 1712)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !6384, file: !229, line: 67, baseType: !632, size: 16, offset: 1728)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !6384, file: !229, line: 68, baseType: !632, size: 16, offset: 1744)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !6384, file: !229, line: 69, baseType: !632, size: 16, offset: 1760)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !6384, file: !229, line: 70, baseType: !632, size: 16, offset: 1776)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !6384, file: !229, line: 71, baseType: !632, size: 16, offset: 1792)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !6384, file: !229, line: 73, baseType: !632, size: 16, offset: 1808)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !6384, file: !229, line: 74, baseType: !632, size: 16, offset: 1824)
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6384, file: !229, line: 76, baseType: !632, size: 16, offset: 1840)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !6384, file: !229, line: 78, baseType: !4838, size: 64, offset: 1856)
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !6384, file: !229, line: 79, baseType: !592, size: 64, offset: 1920)
!6409 = !DILocation(line: 431, column: 11, scope: !6304)
!6410 = !DILocalVariable(name: "sce", scope: !6304, file: !3, line: 432, type: !6411)
!6411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6412, size: 64)
!6412 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !995, line: 1299, baseType: !994)
!6413 = !DILocation(line: 432, column: 9, scope: !6304)
!6414 = !DILocalVariable(name: "srl", scope: !6304, file: !3, line: 433, type: !6415)
!6415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6416, size: 64)
!6416 = !DIDerivedType(tag: DW_TAG_typedef, name: "SceneRenderLayer", file: !995, line: 194, baseType: !6417)
!6417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SceneRenderLayer", file: !995, line: 174, size: 1472, elements: !6418)
!6418 = !{!6419, !6421, !6422, !6423, !6424, !6425, !6426, !6427, !6428, !6429, !6430, !6431, !6432, !6433}
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6417, file: !995, line: 175, baseType: !6420, size: 64)
!6420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6417, size: 64)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6417, file: !995, line: 175, baseType: !6420, size: 64, offset: 64)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6417, file: !995, line: 177, baseType: !648, size: 512, offset: 128)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !6417, file: !995, line: 179, baseType: !796, size: 64, offset: 640)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !6417, file: !995, line: 180, baseType: !2379, size: 64, offset: 704)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !6417, file: !995, line: 182, baseType: !7, size: 32, offset: 768)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "lay_zmask", scope: !6417, file: !995, line: 183, baseType: !7, size: 32, offset: 800)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "lay_exclude", scope: !6417, file: !995, line: 184, baseType: !7, size: 32, offset: 832)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !6417, file: !995, line: 185, baseType: !73, size: 32, offset: 864)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !6417, file: !995, line: 187, baseType: !73, size: 32, offset: 896)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "pass_xor", scope: !6417, file: !995, line: 188, baseType: !73, size: 32, offset: 928)
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !6417, file: !995, line: 190, baseType: !73, size: 32, offset: 960)
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "pass_alpha_threshold", scope: !6417, file: !995, line: 191, baseType: !713, size: 32, offset: 992)
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "freestyleConfig", scope: !6417, file: !995, line: 193, baseType: !6434, size: 448, offset: 1024)
!6434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FreestyleConfig", file: !4650, line: 127, size: 448, elements: !6435)
!6435 = !{!6436, !6437, !6438, !6439, !6440, !6441, !6442, !6443}
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "modules", scope: !6434, file: !4650, line: 128, baseType: !658, size: 128)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6434, file: !4650, line: 130, baseType: !73, size: 32, offset: 128)
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "raycasting_algorithm", scope: !6434, file: !4650, line: 131, baseType: !73, size: 32, offset: 160)
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6434, file: !4650, line: 132, baseType: !73, size: 32, offset: 192)
!6440 = !DIDerivedType(tag: DW_TAG_member, name: "sphere_radius", scope: !6434, file: !4650, line: 133, baseType: !713, size: 32, offset: 224)
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "dkr_epsilon", scope: !6434, file: !4650, line: 134, baseType: !713, size: 32, offset: 256)
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "crease_angle", scope: !6434, file: !4650, line: 135, baseType: !713, size: 32, offset: 288)
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "linesets", scope: !6434, file: !4650, line: 137, baseType: !658, size: 128, offset: 320)
!6444 = !DILocation(line: 433, column: 20, scope: !6304)
!6445 = !DILocalVariable(name: "lineset", scope: !6304, file: !3, line: 434, type: !4648)
!6446 = !DILocation(line: 434, column: 20, scope: !6304)
!6447 = !DILocalVariable(name: "cu", scope: !6304, file: !3, line: 435, type: !4467)
!6448 = !DILocation(line: 435, column: 9, scope: !6304)
!6449 = !DILocalVariable(name: "tex", scope: !6304, file: !3, line: 436, type: !6450)
!6450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6451, size: 64)
!6451 = !DIDerivedType(tag: DW_TAG_typedef, name: "Tex", file: !751, line: 261, baseType: !2910)
!6452 = !DILocation(line: 436, column: 7, scope: !6304)
!6453 = !DILocalVariable(name: "group", scope: !6304, file: !3, line: 437, type: !6454)
!6454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6455, size: 64)
!6455 = !DIDerivedType(tag: DW_TAG_typedef, name: "Group", file: !2381, line: 61, baseType: !2380)
!6456 = !DILocation(line: 437, column: 9, scope: !6304)
!6457 = !DILocalVariable(name: "camera", scope: !6304, file: !3, line: 438, type: !6458)
!6458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6459, size: 64)
!6459 = !DIDerivedType(tag: DW_TAG_typedef, name: "Camera", file: !6460, line: 71, baseType: !6461)
!6460 = !DIFile(filename: "blender/source/blender/makesdna/DNA_camera_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Camera", file: !6460, line: 47, size: 1600, elements: !6462)
!6462 = !{!6463, !6464, !6465, !6466, !6467, !6468, !6469, !6470, !6471, !6472, !6473, !6474, !6475, !6476, !6477, !6478, !6479, !6480, !6481, !6482}
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6461, file: !6460, line: 48, baseType: !599, size: 960)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !6461, file: !6460, line: 49, baseType: !669, size: 64, offset: 960)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6461, file: !6460, line: 51, baseType: !619, size: 8, offset: 1024)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !6461, file: !6460, line: 52, baseType: !619, size: 8, offset: 1032)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6461, file: !6460, line: 53, baseType: !632, size: 16, offset: 1040)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "passepartalpha", scope: !6461, file: !6460, line: 54, baseType: !713, size: 32, offset: 1056)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !6461, file: !6460, line: 55, baseType: !713, size: 32, offset: 1088)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !6461, file: !6460, line: 55, baseType: !713, size: 32, offset: 1120)
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "lens", scope: !6461, file: !6460, line: 56, baseType: !713, size: 32, offset: 1152)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "ortho_scale", scope: !6461, file: !6460, line: 56, baseType: !713, size: 32, offset: 1184)
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "drawsize", scope: !6461, file: !6460, line: 56, baseType: !713, size: 32, offset: 1216)
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_x", scope: !6461, file: !6460, line: 57, baseType: !713, size: 32, offset: 1248)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_y", scope: !6461, file: !6460, line: 57, baseType: !713, size: 32, offset: 1280)
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "shiftx", scope: !6461, file: !6460, line: 58, baseType: !713, size: 32, offset: 1312)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "shifty", scope: !6461, file: !6460, line: 58, baseType: !713, size: 32, offset: 1344)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "YF_dofdist", scope: !6461, file: !6460, line: 63, baseType: !713, size: 32, offset: 1376)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !6461, file: !6460, line: 65, baseType: !749, size: 64, offset: 1408)
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "dof_ob", scope: !6461, file: !6460, line: 67, baseType: !966, size: 64, offset: 1472)
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_fit", scope: !6461, file: !6460, line: 69, baseType: !619, size: 8, offset: 1536)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6461, file: !6460, line: 70, baseType: !1537, size: 56, offset: 1544)
!6483 = !DILocation(line: 438, column: 10, scope: !6304)
!6484 = !DILocalVariable(name: "con", scope: !6304, file: !3, line: 439, type: !6485)
!6485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6486, size: 64)
!6486 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraint", file: !375, line: 76, baseType: !6487)
!6487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraint", file: !375, line: 54, size: 960, elements: !6488)
!6488 = !{!6489, !6491, !6492, !6493, !6494, !6495, !6496, !6497, !6498, !6499, !6500, !6501, !6502, !6503}
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6487, file: !375, line: 55, baseType: !6490, size: 64)
!6490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6487, size: 64)
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6487, file: !375, line: 55, baseType: !6490, size: 64, offset: 64)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6487, file: !375, line: 57, baseType: !592, size: 64, offset: 128)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6487, file: !375, line: 58, baseType: !632, size: 16, offset: 192)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6487, file: !375, line: 59, baseType: !632, size: 16, offset: 208)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "ownspace", scope: !6487, file: !375, line: 61, baseType: !619, size: 8, offset: 224)
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "tarspace", scope: !6487, file: !375, line: 62, baseType: !619, size: 8, offset: 232)
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6487, file: !375, line: 64, baseType: !648, size: 512, offset: 240)
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6487, file: !375, line: 66, baseType: !632, size: 16, offset: 752)
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "enforce", scope: !6487, file: !375, line: 68, baseType: !713, size: 32, offset: 768)
!6500 = !DIDerivedType(tag: DW_TAG_member, name: "headtail", scope: !6487, file: !375, line: 69, baseType: !713, size: 32, offset: 800)
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !6487, file: !375, line: 71, baseType: !749, size: 64, offset: 832)
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "lin_error", scope: !6487, file: !375, line: 74, baseType: !713, size: 32, offset: 896)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "rot_error", scope: !6487, file: !375, line: 75, baseType: !713, size: 32, offset: 928)
!6504 = !DILocation(line: 439, column: 15, scope: !6304)
!6505 = !DILocalVariable(name: "md", scope: !6304, file: !3, line: 441, type: !5260)
!6506 = !DILocation(line: 441, column: 16, scope: !6304)
!6507 = !DILocalVariable(name: "ar", scope: !6304, file: !3, line: 442, type: !6508)
!6508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6509, size: 64)
!6509 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !229, line: 267, baseType: !6510)
!6510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !229, line: 230, size: 3072, elements: !6511)
!6511 = !{!6512, !6514, !6515, !6516, !6517, !6518, !6519, !6520, !6521, !6522, !6523, !6524, !6525, !6526, !6527, !6528, !6529, !6530, !6531, !6532, !6533, !6536, !6537, !6538, !6539, !6540, !6541, !6542, !6543, !6544, !6545}
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6510, file: !229, line: 231, baseType: !6513, size: 64)
!6513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6510, size: 64)
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6510, file: !229, line: 231, baseType: !6513, size: 64, offset: 64)
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !6510, file: !229, line: 233, baseType: !4878, size: 1280, offset: 128)
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !6510, file: !229, line: 234, baseType: !2158, size: 128, offset: 1408)
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !6510, file: !229, line: 235, baseType: !2158, size: 128, offset: 1536)
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !6510, file: !229, line: 236, baseType: !632, size: 16, offset: 1664)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !6510, file: !229, line: 236, baseType: !632, size: 16, offset: 1680)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !6510, file: !229, line: 238, baseType: !632, size: 16, offset: 1696)
!6521 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !6510, file: !229, line: 239, baseType: !632, size: 16, offset: 1712)
!6522 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !6510, file: !229, line: 240, baseType: !632, size: 16, offset: 1728)
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6510, file: !229, line: 241, baseType: !632, size: 16, offset: 1744)
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !6510, file: !229, line: 243, baseType: !713, size: 32, offset: 1760)
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !6510, file: !229, line: 244, baseType: !632, size: 16, offset: 1792)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !6510, file: !229, line: 244, baseType: !632, size: 16, offset: 1808)
!6527 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !6510, file: !229, line: 246, baseType: !632, size: 16, offset: 1824)
!6528 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !6510, file: !229, line: 247, baseType: !632, size: 16, offset: 1840)
!6529 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !6510, file: !229, line: 248, baseType: !632, size: 16, offset: 1856)
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !6510, file: !229, line: 249, baseType: !632, size: 16, offset: 1872)
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !6510, file: !229, line: 250, baseType: !632, size: 16, offset: 1888)
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6510, file: !229, line: 251, baseType: !632, size: 16, offset: 1904)
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6510, file: !229, line: 253, baseType: !6534, size: 64, offset: 1920)
!6534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6535, size: 64)
!6535 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !229, line: 42, flags: DIFlagFwdDecl)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !6510, file: !229, line: 255, baseType: !658, size: 128, offset: 1984)
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !6510, file: !229, line: 256, baseType: !658, size: 128, offset: 2112)
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !6510, file: !229, line: 257, baseType: !658, size: 128, offset: 2240)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !6510, file: !229, line: 258, baseType: !658, size: 128, offset: 2368)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !6510, file: !229, line: 259, baseType: !658, size: 128, offset: 2496)
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !6510, file: !229, line: 260, baseType: !658, size: 128, offset: 2624)
!6542 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !6510, file: !229, line: 261, baseType: !658, size: 128, offset: 2752)
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !6510, file: !229, line: 263, baseType: !4838, size: 64, offset: 2880)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !6510, file: !229, line: 265, baseType: !1164, size: 64, offset: 2944)
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !6510, file: !229, line: 266, baseType: !592, size: 64, offset: 3008)
!6546 = !DILocation(line: 442, column: 11, scope: !6304)
!6547 = !DILocalVariable(name: "rv3d", scope: !6304, file: !3, line: 443, type: !4809)
!6548 = !DILocation(line: 443, column: 16, scope: !6304)
!6549 = !DILocalVariable(name: "lod", scope: !6304, file: !3, line: 444, type: !4220)
!6550 = !DILocation(line: 444, column: 12, scope: !6304)
!6551 = !DILocalVariable(name: "a", scope: !6304, file: !3, line: 445, type: !73)
!6552 = !DILocation(line: 445, column: 6, scope: !6304)
!6553 = !DILocalVariable(name: "found", scope: !6304, file: !3, line: 445, type: !73)
!6554 = !DILocation(line: 445, column: 9, scope: !6304)
!6555 = !DILocation(line: 447, column: 22, scope: !6304)
!6556 = !DILocation(line: 447, column: 26, scope: !6304)
!6557 = !DILocation(line: 447, column: 2, scope: !6304)
!6558 = !DILocation(line: 448, column: 20, scope: !6304)
!6559 = !DILocation(line: 448, column: 24, scope: !6304)
!6560 = !DILocation(line: 448, column: 2, scope: !6304)
!6561 = !DILocation(line: 452, column: 8, scope: !6304)
!6562 = !DILocation(line: 452, column: 15, scope: !6304)
!6563 = !DILocation(line: 452, column: 22, scope: !6304)
!6564 = !DILocation(line: 452, column: 6, scope: !6304)
!6565 = !DILocation(line: 453, column: 2, scope: !6304)
!6566 = !DILocation(line: 453, column: 9, scope: !6304)
!6567 = !DILocation(line: 454, column: 7, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6569, file: !3, line: 454, column: 7)
!6569 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 453, column: 14)
!6570 = !DILocation(line: 454, column: 12, scope: !6568)
!6571 = !DILocation(line: 454, column: 21, scope: !6568)
!6572 = !DILocation(line: 454, column: 18, scope: !6568)
!6573 = !DILocation(line: 454, column: 7, scope: !6569)
!6574 = !DILocation(line: 455, column: 4, scope: !6568)
!6575 = !DILocation(line: 455, column: 9, scope: !6568)
!6576 = !DILocation(line: 455, column: 15, scope: !6568)
!6577 = !DILocation(line: 456, column: 7, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6569, file: !3, line: 456, column: 7)
!6579 = !DILocation(line: 456, column: 12, scope: !6578)
!6580 = !DILocation(line: 456, column: 26, scope: !6578)
!6581 = !DILocation(line: 456, column: 23, scope: !6578)
!6582 = !DILocation(line: 456, column: 7, scope: !6569)
!6583 = !DILocation(line: 457, column: 4, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 456, column: 30)
!6585 = !DILocation(line: 457, column: 9, scope: !6584)
!6586 = !DILocation(line: 457, column: 20, scope: !6584)
!6587 = !DILocation(line: 458, column: 23, scope: !6584)
!6588 = !DILocation(line: 458, column: 28, scope: !6584)
!6589 = !DILocation(line: 458, column: 4, scope: !6584)
!6590 = !DILocation(line: 459, column: 3, scope: !6584)
!6591 = !DILocation(line: 460, column: 7, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6569, file: !3, line: 460, column: 7)
!6593 = !DILocation(line: 460, column: 12, scope: !6592)
!6594 = !DILocation(line: 460, column: 27, scope: !6592)
!6595 = !DILocation(line: 460, column: 24, scope: !6592)
!6596 = !DILocation(line: 460, column: 7, scope: !6569)
!6597 = !DILocation(line: 461, column: 4, scope: !6592)
!6598 = !DILocation(line: 461, column: 9, scope: !6592)
!6599 = !DILocation(line: 461, column: 21, scope: !6592)
!6600 = !DILocation(line: 463, column: 7, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6569, file: !3, line: 463, column: 7)
!6602 = !DILocation(line: 463, column: 12, scope: !6601)
!6603 = !DILocation(line: 463, column: 22, scope: !6601)
!6604 = !DILocation(line: 463, column: 19, scope: !6601)
!6605 = !DILocation(line: 463, column: 7, scope: !6569)
!6606 = !DILocation(line: 464, column: 4, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6601, file: !3, line: 463, column: 26)
!6608 = !DILocation(line: 464, column: 9, scope: !6607)
!6609 = !DILocation(line: 464, column: 16, scope: !6607)
!6610 = !DILocation(line: 465, column: 23, scope: !6607)
!6611 = !DILocation(line: 465, column: 28, scope: !6607)
!6612 = !DILocation(line: 465, column: 4, scope: !6607)
!6613 = !DILocation(line: 466, column: 3, scope: !6607)
!6614 = !DILocation(line: 468, column: 31, scope: !6569)
!6615 = !DILocation(line: 468, column: 72, scope: !6569)
!6616 = !DILocation(line: 468, column: 3, scope: !6569)
!6617 = !DILocation(line: 470, column: 7, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6569, file: !3, line: 470, column: 7)
!6619 = !DILocation(line: 470, column: 7, scope: !6569)
!6620 = !DILocation(line: 471, column: 9, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6618, file: !3, line: 470, column: 43)
!6622 = !DILocation(line: 471, column: 14, scope: !6621)
!6623 = !DILocation(line: 471, column: 7, scope: !6621)
!6624 = !DILocation(line: 473, column: 8, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6621, file: !3, line: 473, column: 8)
!6626 = !DILocation(line: 473, column: 12, scope: !6625)
!6627 = !DILocation(line: 473, column: 22, scope: !6625)
!6628 = !DILocation(line: 473, column: 19, scope: !6625)
!6629 = !DILocation(line: 473, column: 8, scope: !6621)
!6630 = !DILocation(line: 474, column: 5, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 473, column: 26)
!6632 = !DILocation(line: 474, column: 9, scope: !6631)
!6633 = !DILocation(line: 474, column: 16, scope: !6631)
!6634 = !DILocation(line: 475, column: 24, scope: !6631)
!6635 = !DILocation(line: 475, column: 29, scope: !6631)
!6636 = !DILocation(line: 475, column: 5, scope: !6631)
!6637 = !DILocation(line: 476, column: 4, scope: !6631)
!6638 = !DILocation(line: 477, column: 8, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6621, file: !3, line: 477, column: 8)
!6640 = !DILocation(line: 477, column: 12, scope: !6639)
!6641 = !DILocation(line: 477, column: 24, scope: !6639)
!6642 = !DILocation(line: 477, column: 21, scope: !6639)
!6643 = !DILocation(line: 477, column: 8, scope: !6621)
!6644 = !DILocation(line: 478, column: 5, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6639, file: !3, line: 477, column: 28)
!6646 = !DILocation(line: 478, column: 9, scope: !6645)
!6647 = !DILocation(line: 478, column: 18, scope: !6645)
!6648 = !DILocation(line: 479, column: 24, scope: !6645)
!6649 = !DILocation(line: 479, column: 29, scope: !6645)
!6650 = !DILocation(line: 479, column: 5, scope: !6645)
!6651 = !DILocation(line: 480, column: 4, scope: !6645)
!6652 = !DILocation(line: 481, column: 8, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6621, file: !3, line: 481, column: 8)
!6654 = !DILocation(line: 481, column: 12, scope: !6653)
!6655 = !DILocation(line: 481, column: 27, scope: !6653)
!6656 = !DILocation(line: 481, column: 24, scope: !6653)
!6657 = !DILocation(line: 481, column: 8, scope: !6621)
!6658 = !DILocation(line: 482, column: 5, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6653, file: !3, line: 481, column: 31)
!6660 = !DILocation(line: 482, column: 9, scope: !6659)
!6661 = !DILocation(line: 482, column: 21, scope: !6659)
!6662 = !DILocation(line: 483, column: 24, scope: !6659)
!6663 = !DILocation(line: 483, column: 29, scope: !6659)
!6664 = !DILocation(line: 483, column: 5, scope: !6659)
!6665 = !DILocation(line: 484, column: 4, scope: !6659)
!6666 = !DILocation(line: 485, column: 3, scope: !6621)
!6667 = !DILocation(line: 486, column: 12, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6618, file: !3, line: 486, column: 12)
!6669 = !DILocation(line: 486, column: 17, scope: !6668)
!6670 = !DILocation(line: 486, column: 22, scope: !6668)
!6671 = !DILocation(line: 486, column: 37, scope: !6668)
!6672 = !DILocation(line: 486, column: 40, scope: !6668)
!6673 = !DILocation(line: 486, column: 45, scope: !6668)
!6674 = !DILocation(line: 486, column: 12, scope: !6618)
!6675 = !DILocalVariable(name: "pchan", scope: !6676, file: !3, line: 487, type: !5484)
!6676 = distinct !DILexicalBlock(scope: !6668, file: !3, line: 486, column: 51)
!6677 = !DILocation(line: 487, column: 18, scope: !6676)
!6678 = !DILocation(line: 488, column: 17, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6676, file: !3, line: 488, column: 4)
!6680 = !DILocation(line: 488, column: 22, scope: !6679)
!6681 = !DILocation(line: 488, column: 28, scope: !6679)
!6682 = !DILocation(line: 488, column: 37, scope: !6679)
!6683 = !DILocation(line: 488, column: 15, scope: !6679)
!6684 = !DILocation(line: 488, column: 9, scope: !6679)
!6685 = !DILocation(line: 488, column: 44, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6679, file: !3, line: 488, column: 4)
!6687 = !DILocation(line: 488, column: 4, scope: !6679)
!6688 = !DILocation(line: 489, column: 16, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6690, file: !3, line: 489, column: 5)
!6690 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 488, column: 72)
!6691 = !DILocation(line: 489, column: 23, scope: !6689)
!6692 = !DILocation(line: 489, column: 35, scope: !6689)
!6693 = !DILocation(line: 489, column: 14, scope: !6689)
!6694 = !DILocation(line: 489, column: 10, scope: !6689)
!6695 = !DILocation(line: 489, column: 42, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 489, column: 5)
!6697 = !DILocation(line: 489, column: 5, scope: !6689)
!6698 = !DILocalVariable(name: "cti", scope: !6699, file: !3, line: 490, type: !6700)
!6699 = distinct !DILexicalBlock(scope: !6696, file: !3, line: 489, column: 64)
!6700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6701, size: 64)
!6701 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraintTypeInfo", file: !6702, line: 108, baseType: !6703)
!6702 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_constraint.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintTypeInfo", file: !6702, line: 80, size: 1088, elements: !6704)
!6704 = !{!6705, !6706, !6707, !6708, !6709, !6713, !6721, !6725, !6726, !6730, !6734, !6760}
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6703, file: !6702, line: 82, baseType: !632, size: 16)
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6703, file: !6702, line: 83, baseType: !632, size: 16, offset: 16)
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6703, file: !6702, line: 84, baseType: !780, size: 256, offset: 32)
!6708 = !DIDerivedType(tag: DW_TAG_member, name: "structName", scope: !6703, file: !6702, line: 85, baseType: !780, size: 256, offset: 288)
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "free_data", scope: !6703, file: !6702, line: 89, baseType: !6710, size: 64, offset: 576)
!6710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6711, size: 64)
!6711 = !DISubroutineType(types: !6712)
!6712 = !{null, !6490}
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "id_looper", scope: !6703, file: !6702, line: 91, baseType: !6714, size: 64, offset: 640)
!6714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6715, size: 64)
!6715 = !DISubroutineType(types: !6716)
!6716 = !{null, !6490, !6717, !592}
!6717 = !DIDerivedType(tag: DW_TAG_typedef, name: "ConstraintIDFunc", file: !6702, line: 65, baseType: !6718)
!6718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6719, size: 64)
!6719 = !DISubroutineType(types: !6720)
!6720 = !{null, !6490, !5670, !1788, !592}
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "copy_data", scope: !6703, file: !6702, line: 93, baseType: !6722, size: 64, offset: 704)
!6722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6723, size: 64)
!6723 = !DISubroutineType(types: !6724)
!6724 = !{null, !6490, !6490}
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "new_data", scope: !6703, file: !6702, line: 95, baseType: !1170, size: 64, offset: 768)
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "get_constraint_targets", scope: !6703, file: !6702, line: 99, baseType: !6727, size: 64, offset: 832)
!6727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6728, size: 64)
!6728 = !DISubroutineType(types: !6729)
!6729 = !{!73, !6490, !2681}
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "flush_constraint_targets", scope: !6703, file: !6702, line: 101, baseType: !6731, size: 64, offset: 896)
!6731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6732, size: 64)
!6732 = !DISubroutineType(types: !6733)
!6733 = !{null, !6490, !2681, !1788}
!6734 = !DIDerivedType(tag: DW_TAG_member, name: "get_target_matrix", scope: !6703, file: !6702, line: 105, baseType: !6735, size: 64, offset: 960)
!6735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6736, size: 64)
!6736 = !DISubroutineType(types: !6737)
!6737 = !{null, !6490, !6738, !6748, !713}
!6738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6739, size: 64)
!6739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintOb", file: !6702, line: 50, size: 1280, elements: !6740)
!6740 = !{!6741, !6742, !6743, !6744, !6745, !6746, !6747}
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !6739, file: !6702, line: 51, baseType: !993, size: 64)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !6739, file: !6702, line: 52, baseType: !966, size: 64, offset: 64)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "pchan", scope: !6739, file: !6702, line: 53, baseType: !5489, size: 64, offset: 128)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !6739, file: !6702, line: 55, baseType: !1404, size: 512, offset: 192)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "startmat", scope: !6739, file: !6702, line: 56, baseType: !1404, size: 512, offset: 704)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6739, file: !6702, line: 58, baseType: !632, size: 16, offset: 1216)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "rotOrder", scope: !6739, file: !6702, line: 59, baseType: !632, size: 16, offset: 1232)
!6748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6749, size: 64)
!6749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintTarget", file: !375, line: 85, size: 1280, elements: !6750)
!6750 = !{!6751, !6752, !6753, !6754, !6755, !6756, !6757, !6758, !6759}
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6749, file: !375, line: 86, baseType: !6748, size: 64)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6749, file: !375, line: 86, baseType: !6748, size: 64, offset: 64)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !6749, file: !375, line: 88, baseType: !966, size: 64, offset: 128)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !6749, file: !375, line: 89, baseType: !648, size: 512, offset: 192)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !6749, file: !375, line: 91, baseType: !1404, size: 512, offset: 704)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "space", scope: !6749, file: !375, line: 93, baseType: !632, size: 16, offset: 1216)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6749, file: !375, line: 94, baseType: !632, size: 16, offset: 1232)
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6749, file: !375, line: 95, baseType: !632, size: 16, offset: 1248)
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "rotOrder", scope: !6749, file: !375, line: 96, baseType: !632, size: 16, offset: 1264)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "evaluate_constraint", scope: !6703, file: !6702, line: 107, baseType: !6761, size: 64, offset: 1024)
!6761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6762, size: 64)
!6762 = !DISubroutineType(types: !6763)
!6763 = !{null, !6490, !6738, !2681}
!6764 = !DILocation(line: 490, column: 27, scope: !6699)
!6765 = !DILocation(line: 490, column: 61, scope: !6699)
!6766 = !DILocation(line: 490, column: 33, scope: !6699)
!6767 = !DILocalVariable(name: "targets", scope: !6699, file: !3, line: 491, type: !658)
!6768 = !DILocation(line: 491, column: 15, scope: !6699)
!6769 = !DILocalVariable(name: "ct", scope: !6699, file: !3, line: 492, type: !6770)
!6770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6771, size: 64)
!6771 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraintTarget", file: !375, line: 97, baseType: !6749)
!6772 = !DILocation(line: 492, column: 25, scope: !6699)
!6773 = !DILocation(line: 494, column: 10, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6699, file: !3, line: 494, column: 10)
!6775 = !DILocation(line: 494, column: 14, scope: !6774)
!6776 = !DILocation(line: 494, column: 17, scope: !6774)
!6777 = !DILocation(line: 494, column: 22, scope: !6774)
!6778 = !DILocation(line: 494, column: 10, scope: !6699)
!6779 = !DILocation(line: 495, column: 7, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6774, file: !3, line: 494, column: 46)
!6781 = !DILocation(line: 495, column: 12, scope: !6780)
!6782 = !DILocation(line: 495, column: 35, scope: !6780)
!6783 = !DILocation(line: 497, column: 25, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6780, file: !3, line: 497, column: 7)
!6785 = !DILocation(line: 497, column: 17, scope: !6784)
!6786 = !DILocation(line: 497, column: 15, scope: !6784)
!6787 = !DILocation(line: 497, column: 12, scope: !6784)
!6788 = !DILocation(line: 497, column: 32, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6784, file: !3, line: 497, column: 7)
!6790 = !DILocation(line: 497, column: 7, scope: !6784)
!6791 = !DILocation(line: 498, column: 12, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6793, file: !3, line: 498, column: 12)
!6793 = distinct !DILexicalBlock(scope: !6789, file: !3, line: 497, column: 51)
!6794 = !DILocation(line: 498, column: 16, scope: !6792)
!6795 = !DILocation(line: 498, column: 23, scope: !6792)
!6796 = !DILocation(line: 498, column: 20, scope: !6792)
!6797 = !DILocation(line: 498, column: 12, scope: !6793)
!6798 = !DILocation(line: 499, column: 9, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 498, column: 27)
!6800 = !DILocation(line: 499, column: 13, scope: !6799)
!6801 = !DILocation(line: 499, column: 17, scope: !6799)
!6802 = !DILocation(line: 500, column: 9, scope: !6799)
!6803 = !DILocation(line: 500, column: 13, scope: !6799)
!6804 = !DILocation(line: 500, column: 26, scope: !6799)
!6805 = !DILocation(line: 501, column: 28, scope: !6799)
!6806 = !DILocation(line: 501, column: 33, scope: !6799)
!6807 = !DILocation(line: 501, column: 9, scope: !6799)
!6808 = !DILocation(line: 502, column: 8, scope: !6799)
!6809 = !DILocation(line: 503, column: 7, scope: !6793)
!6810 = !DILocation(line: 497, column: 41, scope: !6789)
!6811 = !DILocation(line: 497, column: 45, scope: !6789)
!6812 = !DILocation(line: 497, column: 39, scope: !6789)
!6813 = !DILocation(line: 497, column: 7, scope: !6789)
!6814 = distinct !{!6814, !6790, !6815}
!6815 = !DILocation(line: 503, column: 7, scope: !6784)
!6816 = !DILocation(line: 505, column: 11, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6780, file: !3, line: 505, column: 11)
!6818 = !DILocation(line: 505, column: 16, scope: !6817)
!6819 = !DILocation(line: 505, column: 11, scope: !6780)
!6820 = !DILocation(line: 506, column: 8, scope: !6817)
!6821 = !DILocation(line: 506, column: 13, scope: !6817)
!6822 = !DILocation(line: 506, column: 38, scope: !6817)
!6823 = !DILocation(line: 507, column: 6, scope: !6780)
!6824 = !DILocation(line: 508, column: 5, scope: !6699)
!6825 = !DILocation(line: 489, column: 53, scope: !6696)
!6826 = !DILocation(line: 489, column: 58, scope: !6696)
!6827 = !DILocation(line: 489, column: 51, scope: !6696)
!6828 = !DILocation(line: 489, column: 5, scope: !6696)
!6829 = distinct !{!6829, !6697, !6830}
!6830 = !DILocation(line: 508, column: 5, scope: !6689)
!6831 = !DILocation(line: 509, column: 9, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6690, file: !3, line: 509, column: 9)
!6833 = !DILocation(line: 509, column: 16, scope: !6832)
!6834 = !DILocation(line: 509, column: 26, scope: !6832)
!6835 = !DILocation(line: 509, column: 23, scope: !6832)
!6836 = !DILocation(line: 509, column: 9, scope: !6690)
!6837 = !DILocation(line: 510, column: 6, scope: !6832)
!6838 = !DILocation(line: 510, column: 13, scope: !6832)
!6839 = !DILocation(line: 510, column: 20, scope: !6832)
!6840 = !DILocation(line: 511, column: 4, scope: !6690)
!6841 = !DILocation(line: 488, column: 59, scope: !6686)
!6842 = !DILocation(line: 488, column: 66, scope: !6686)
!6843 = !DILocation(line: 488, column: 57, scope: !6686)
!6844 = !DILocation(line: 488, column: 4, scope: !6686)
!6845 = distinct !{!6845, !6687, !6846}
!6846 = !DILocation(line: 511, column: 4, scope: !6679)
!6847 = !DILocation(line: 512, column: 3, scope: !6676)
!6848 = !DILocation(line: 513, column: 12, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6668, file: !3, line: 513, column: 12)
!6850 = !DILocation(line: 513, column: 12, scope: !6668)
!6851 = !DILocation(line: 514, column: 31, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6853, file: !3, line: 514, column: 8)
!6853 = distinct !DILexicalBlock(scope: !6849, file: !3, line: 513, column: 49)
!6854 = !DILocation(line: 514, column: 36, scope: !6852)
!6855 = !DILocation(line: 514, column: 8, scope: !6852)
!6856 = !DILocation(line: 514, column: 8, scope: !6853)
!6857 = !DILocation(line: 515, column: 24, scope: !6852)
!6858 = !DILocation(line: 515, column: 29, scope: !6852)
!6859 = !DILocation(line: 515, column: 5, scope: !6852)
!6860 = !DILocation(line: 516, column: 3, scope: !6853)
!6861 = !DILocation(line: 518, column: 22, scope: !6569)
!6862 = !DILocation(line: 518, column: 27, scope: !6569)
!6863 = !DILocation(line: 518, column: 3, scope: !6569)
!6864 = !DILocation(line: 520, column: 14, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6569, file: !3, line: 520, column: 3)
!6866 = !DILocation(line: 520, column: 19, scope: !6865)
!6867 = !DILocation(line: 520, column: 31, scope: !6865)
!6868 = !DILocation(line: 520, column: 12, scope: !6865)
!6869 = !DILocation(line: 520, column: 8, scope: !6865)
!6870 = !DILocation(line: 520, column: 38, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6865, file: !3, line: 520, column: 3)
!6872 = !DILocation(line: 520, column: 3, scope: !6865)
!6873 = !DILocalVariable(name: "cti", scope: !6874, file: !3, line: 521, type: !6700)
!6874 = distinct !DILexicalBlock(scope: !6871, file: !3, line: 520, column: 60)
!6875 = !DILocation(line: 521, column: 25, scope: !6874)
!6876 = !DILocation(line: 521, column: 59, scope: !6874)
!6877 = !DILocation(line: 521, column: 31, scope: !6874)
!6878 = !DILocalVariable(name: "targets", scope: !6874, file: !3, line: 522, type: !658)
!6879 = !DILocation(line: 522, column: 13, scope: !6874)
!6880 = !DILocalVariable(name: "ct", scope: !6874, file: !3, line: 523, type: !6770)
!6881 = !DILocation(line: 523, column: 23, scope: !6874)
!6882 = !DILocation(line: 525, column: 8, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6874, file: !3, line: 525, column: 8)
!6884 = !DILocation(line: 525, column: 12, scope: !6883)
!6885 = !DILocation(line: 525, column: 15, scope: !6883)
!6886 = !DILocation(line: 525, column: 20, scope: !6883)
!6887 = !DILocation(line: 525, column: 8, scope: !6874)
!6888 = !DILocation(line: 526, column: 5, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6883, file: !3, line: 525, column: 44)
!6890 = !DILocation(line: 526, column: 10, scope: !6889)
!6891 = !DILocation(line: 526, column: 33, scope: !6889)
!6892 = !DILocation(line: 528, column: 23, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6889, file: !3, line: 528, column: 5)
!6894 = !DILocation(line: 528, column: 15, scope: !6893)
!6895 = !DILocation(line: 528, column: 13, scope: !6893)
!6896 = !DILocation(line: 528, column: 10, scope: !6893)
!6897 = !DILocation(line: 528, column: 30, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6893, file: !3, line: 528, column: 5)
!6899 = !DILocation(line: 528, column: 5, scope: !6893)
!6900 = !DILocation(line: 529, column: 10, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6902, file: !3, line: 529, column: 10)
!6902 = distinct !DILexicalBlock(scope: !6898, file: !3, line: 528, column: 49)
!6903 = !DILocation(line: 529, column: 14, scope: !6901)
!6904 = !DILocation(line: 529, column: 21, scope: !6901)
!6905 = !DILocation(line: 529, column: 18, scope: !6901)
!6906 = !DILocation(line: 529, column: 10, scope: !6902)
!6907 = !DILocation(line: 530, column: 7, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6901, file: !3, line: 529, column: 25)
!6909 = !DILocation(line: 530, column: 11, scope: !6908)
!6910 = !DILocation(line: 530, column: 15, scope: !6908)
!6911 = !DILocation(line: 531, column: 7, scope: !6908)
!6912 = !DILocation(line: 531, column: 11, scope: !6908)
!6913 = !DILocation(line: 531, column: 24, scope: !6908)
!6914 = !DILocation(line: 532, column: 26, scope: !6908)
!6915 = !DILocation(line: 532, column: 31, scope: !6908)
!6916 = !DILocation(line: 532, column: 7, scope: !6908)
!6917 = !DILocation(line: 533, column: 6, scope: !6908)
!6918 = !DILocation(line: 534, column: 5, scope: !6902)
!6919 = !DILocation(line: 528, column: 39, scope: !6898)
!6920 = !DILocation(line: 528, column: 43, scope: !6898)
!6921 = !DILocation(line: 528, column: 37, scope: !6898)
!6922 = !DILocation(line: 528, column: 5, scope: !6898)
!6923 = distinct !{!6923, !6899, !6924}
!6924 = !DILocation(line: 534, column: 5, scope: !6893)
!6925 = !DILocation(line: 536, column: 9, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6889, file: !3, line: 536, column: 9)
!6927 = !DILocation(line: 536, column: 14, scope: !6926)
!6928 = !DILocation(line: 536, column: 9, scope: !6889)
!6929 = !DILocation(line: 537, column: 6, scope: !6926)
!6930 = !DILocation(line: 537, column: 11, scope: !6926)
!6931 = !DILocation(line: 537, column: 36, scope: !6926)
!6932 = !DILocation(line: 538, column: 4, scope: !6889)
!6933 = !DILocation(line: 539, column: 3, scope: !6874)
!6934 = !DILocation(line: 520, column: 49, scope: !6871)
!6935 = !DILocation(line: 520, column: 54, scope: !6871)
!6936 = !DILocation(line: 520, column: 47, scope: !6871)
!6937 = !DILocation(line: 520, column: 3, scope: !6871)
!6938 = distinct !{!6938, !6872, !6939}
!6939 = !DILocation(line: 539, column: 3, scope: !6865)
!6940 = !DILocation(line: 542, column: 7, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6569, file: !3, line: 542, column: 7)
!6942 = !DILocation(line: 542, column: 11, scope: !6941)
!6943 = !DILocation(line: 542, column: 7, scope: !6569)
!6944 = !DILocation(line: 543, column: 8, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 543, column: 8)
!6946 = distinct !DILexicalBlock(scope: !6941, file: !3, line: 542, column: 15)
!6947 = !DILocation(line: 543, column: 13, scope: !6945)
!6948 = !DILocation(line: 543, column: 8, scope: !6946)
!6949 = !DILocation(line: 544, column: 24, scope: !6945)
!6950 = !DILocation(line: 544, column: 29, scope: !6945)
!6951 = !DILocation(line: 544, column: 5, scope: !6945)
!6952 = !DILocation(line: 547, column: 14, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 547, column: 4)
!6954 = !DILocation(line: 547, column: 19, scope: !6953)
!6955 = !DILocation(line: 547, column: 29, scope: !6953)
!6956 = !DILocation(line: 547, column: 12, scope: !6953)
!6957 = !DILocation(line: 547, column: 9, scope: !6953)
!6958 = !DILocation(line: 547, column: 36, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6953, file: !3, line: 547, column: 4)
!6960 = !DILocation(line: 547, column: 4, scope: !6953)
!6961 = !DILocation(line: 548, column: 9, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 548, column: 9)
!6963 = !DILocation(line: 548, column: 13, scope: !6962)
!6964 = !DILocation(line: 548, column: 18, scope: !6962)
!6965 = !DILocation(line: 548, column: 9, scope: !6959)
!6966 = !DILocation(line: 549, column: 25, scope: !6962)
!6967 = !DILocation(line: 549, column: 30, scope: !6962)
!6968 = !DILocation(line: 549, column: 6, scope: !6962)
!6969 = !DILocation(line: 548, column: 21, scope: !6962)
!6970 = !DILocation(line: 547, column: 45, scope: !6959)
!6971 = !DILocation(line: 547, column: 49, scope: !6959)
!6972 = !DILocation(line: 547, column: 43, scope: !6959)
!6973 = !DILocation(line: 547, column: 4, scope: !6959)
!6974 = distinct !{!6974, !6960, !6975}
!6975 = !DILocation(line: 549, column: 48, scope: !6953)
!6976 = !DILocation(line: 550, column: 3, scope: !6946)
!6977 = !DILocation(line: 568, column: 7, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6569, file: !3, line: 568, column: 7)
!6979 = !DILocation(line: 568, column: 12, scope: !6978)
!6980 = !DILocation(line: 568, column: 27, scope: !6978)
!6981 = !DILocation(line: 568, column: 7, scope: !6569)
!6982 = !DILocalVariable(name: "tpsys", scope: !6983, file: !3, line: 569, type: !5351)
!6983 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 568, column: 34)
!6984 = !DILocation(line: 569, column: 20, scope: !6983)
!6985 = !DILocation(line: 569, column: 28, scope: !6983)
!6986 = !DILocation(line: 569, column: 33, scope: !6983)
!6987 = !DILocation(line: 569, column: 48, scope: !6983)
!6988 = !DILocation(line: 570, column: 4, scope: !6983)
!6989 = !DILocation(line: 570, column: 11, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6991, file: !3, line: 570, column: 4)
!6991 = distinct !DILexicalBlock(scope: !6983, file: !3, line: 570, column: 4)
!6992 = !DILocation(line: 570, column: 4, scope: !6991)
!6993 = !DILocalVariable(name: "state", scope: !6994, file: !3, line: 571, type: !6995)
!6994 = distinct !DILexicalBlock(scope: !6990, file: !3, line: 570, column: 39)
!6995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6996, size: 64)
!6996 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoidState", file: !191, line: 165, baseType: !6997)
!6997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidState", file: !191, line: 150, size: 1024, elements: !6998)
!6998 = !{!6999, !7001, !7002, !7003, !7004, !7005, !7006, !7007, !7008, !7009, !7010, !7011, !7012, !7013}
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6997, file: !191, line: 151, baseType: !7000, size: 64)
!7000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6997, size: 64)
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6997, file: !191, line: 151, baseType: !7000, size: 64, offset: 64)
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "rules", scope: !6997, file: !191, line: 152, baseType: !658, size: 128, offset: 128)
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "conditions", scope: !6997, file: !191, line: 153, baseType: !658, size: 128, offset: 256)
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "actions", scope: !6997, file: !191, line: 154, baseType: !658, size: 128, offset: 384)
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6997, file: !191, line: 155, baseType: !780, size: 256, offset: 512)
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6997, file: !191, line: 156, baseType: !73, size: 32, offset: 768)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6997, file: !191, line: 156, baseType: !73, size: 32, offset: 800)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "ruleset_type", scope: !6997, file: !191, line: 159, baseType: !73, size: 32, offset: 832)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "rule_fuzziness", scope: !6997, file: !191, line: 160, baseType: !713, size: 32, offset: 864)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "signal_id", scope: !6997, file: !191, line: 163, baseType: !73, size: 32, offset: 896)
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !6997, file: !191, line: 163, baseType: !73, size: 32, offset: 928)
!7012 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !6997, file: !191, line: 164, baseType: !713, size: 32, offset: 960)
!7013 = !DIDerivedType(tag: DW_TAG_member, name: "falloff", scope: !6997, file: !191, line: 164, baseType: !713, size: 32, offset: 992)
!7014 = !DILocation(line: 571, column: 16, scope: !6994)
!7015 = !DILocalVariable(name: "rule", scope: !6994, file: !3, line: 572, type: !7016)
!7016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4622, size: 64)
!7017 = !DILocation(line: 572, column: 15, scope: !6994)
!7018 = !DILocalVariable(name: "pt", scope: !6994, file: !3, line: 574, type: !7019)
!7019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7020, size: 64)
!7020 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleTarget", file: !2459, line: 85, baseType: !7021)
!7021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleTarget", file: !2459, line: 79, size: 320, elements: !7022)
!7022 = !{!7023, !7025, !7026, !7027, !7028, !7029, !7030, !7031}
!7023 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7021, file: !2459, line: 80, baseType: !7024, size: 64)
!7024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7021, size: 64)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7021, file: !2459, line: 80, baseType: !7024, size: 64, offset: 64)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !7021, file: !2459, line: 81, baseType: !966, size: 64, offset: 128)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !7021, file: !2459, line: 82, baseType: !73, size: 32, offset: 192)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7021, file: !2459, line: 83, baseType: !632, size: 16, offset: 224)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !7021, file: !2459, line: 83, baseType: !632, size: 16, offset: 240)
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !7021, file: !2459, line: 84, baseType: !713, size: 32, offset: 256)
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !7021, file: !2459, line: 84, baseType: !713, size: 32, offset: 288)
!7032 = !DILocation(line: 574, column: 21, scope: !6994)
!7033 = !DILocation(line: 574, column: 26, scope: !6994)
!7034 = !DILocation(line: 574, column: 33, scope: !6994)
!7035 = !DILocation(line: 574, column: 41, scope: !6994)
!7036 = !DILocation(line: 575, column: 5, scope: !6994)
!7037 = !DILocation(line: 575, column: 12, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !7039, file: !3, line: 575, column: 5)
!7039 = distinct !DILexicalBlock(scope: !6994, file: !3, line: 575, column: 5)
!7040 = !DILocation(line: 575, column: 5, scope: !7039)
!7041 = !DILocation(line: 576, column: 10, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !7043, file: !3, line: 576, column: 10)
!7043 = distinct !DILexicalBlock(scope: !7038, file: !3, line: 575, column: 31)
!7044 = !DILocation(line: 576, column: 14, scope: !7042)
!7045 = !DILocation(line: 576, column: 20, scope: !7042)
!7046 = !DILocation(line: 576, column: 17, scope: !7042)
!7047 = !DILocation(line: 576, column: 10, scope: !7043)
!7048 = !DILocation(line: 577, column: 7, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7042, file: !3, line: 576, column: 24)
!7050 = !DILocation(line: 577, column: 11, scope: !7049)
!7051 = !DILocation(line: 577, column: 14, scope: !7049)
!7052 = !DILocation(line: 578, column: 26, scope: !7049)
!7053 = !DILocation(line: 578, column: 31, scope: !7049)
!7054 = !DILocation(line: 578, column: 7, scope: !7049)
!7055 = !DILocation(line: 579, column: 7, scope: !7049)
!7056 = !DILocation(line: 581, column: 5, scope: !7043)
!7057 = !DILocation(line: 575, column: 21, scope: !7038)
!7058 = !DILocation(line: 575, column: 25, scope: !7038)
!7059 = !DILocation(line: 575, column: 19, scope: !7038)
!7060 = !DILocation(line: 575, column: 5, scope: !7038)
!7061 = distinct !{!7061, !7040, !7062}
!7062 = !DILocation(line: 581, column: 5, scope: !7039)
!7063 = !DILocation(line: 583, column: 9, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !6994, file: !3, line: 583, column: 9)
!7065 = !DILocation(line: 583, column: 16, scope: !7064)
!7066 = !DILocation(line: 583, column: 29, scope: !7064)
!7067 = !DILocation(line: 583, column: 26, scope: !7064)
!7068 = !DILocation(line: 583, column: 9, scope: !6994)
!7069 = !DILocation(line: 584, column: 6, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7064, file: !3, line: 583, column: 33)
!7071 = !DILocation(line: 584, column: 13, scope: !7070)
!7072 = !DILocation(line: 584, column: 23, scope: !7070)
!7073 = !DILocation(line: 585, column: 25, scope: !7070)
!7074 = !DILocation(line: 585, column: 30, scope: !7070)
!7075 = !DILocation(line: 585, column: 6, scope: !7070)
!7076 = !DILocation(line: 586, column: 5, scope: !7070)
!7077 = !DILocation(line: 588, column: 9, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !6994, file: !3, line: 588, column: 9)
!7079 = !DILocation(line: 588, column: 16, scope: !7078)
!7080 = !DILocation(line: 588, column: 22, scope: !7078)
!7081 = !DILocation(line: 588, column: 32, scope: !7078)
!7082 = !DILocation(line: 588, column: 29, scope: !7078)
!7083 = !DILocation(line: 588, column: 9, scope: !6994)
!7084 = !DILocation(line: 589, column: 6, scope: !7078)
!7085 = !DILocation(line: 589, column: 13, scope: !7078)
!7086 = !DILocation(line: 589, column: 19, scope: !7078)
!7087 = !DILocation(line: 589, column: 26, scope: !7078)
!7088 = !DILocation(line: 591, column: 9, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !6994, file: !3, line: 591, column: 9)
!7090 = !DILocation(line: 591, column: 16, scope: !7089)
!7091 = !DILocation(line: 591, column: 22, scope: !7089)
!7092 = !DILocation(line: 591, column: 31, scope: !7089)
!7093 = !DILocation(line: 591, column: 9, scope: !6994)
!7094 = !DILocalVariable(name: "pa", scope: !7095, file: !3, line: 592, type: !3077)
!7095 = distinct !DILexicalBlock(scope: !7089, file: !3, line: 591, column: 51)
!7096 = !DILocation(line: 592, column: 20, scope: !7095)
!7097 = !DILocalVariable(name: "bpa", scope: !7095, file: !3, line: 593, type: !2484)
!7098 = !DILocation(line: 593, column: 20, scope: !7095)
!7099 = !DILocalVariable(name: "p", scope: !7095, file: !3, line: 594, type: !73)
!7100 = !DILocation(line: 594, column: 10, scope: !7095)
!7101 = !DILocation(line: 596, column: 13, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7095, file: !3, line: 596, column: 6)
!7103 = !DILocation(line: 596, column: 23, scope: !7102)
!7104 = !DILocation(line: 596, column: 30, scope: !7102)
!7105 = !DILocation(line: 596, column: 21, scope: !7102)
!7106 = !DILocation(line: 596, column: 11, scope: !7102)
!7107 = !DILocation(line: 596, column: 41, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7102, file: !3, line: 596, column: 6)
!7109 = !DILocation(line: 596, column: 45, scope: !7108)
!7110 = !DILocation(line: 596, column: 52, scope: !7108)
!7111 = !DILocation(line: 596, column: 43, scope: !7108)
!7112 = !DILocation(line: 596, column: 6, scope: !7102)
!7113 = !DILocation(line: 597, column: 13, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7108, file: !3, line: 596, column: 72)
!7115 = !DILocation(line: 597, column: 17, scope: !7114)
!7116 = !DILocation(line: 597, column: 11, scope: !7114)
!7117 = !DILocation(line: 598, column: 11, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7114, file: !3, line: 598, column: 11)
!7119 = !DILocation(line: 598, column: 16, scope: !7118)
!7120 = !DILocation(line: 598, column: 26, scope: !7118)
!7121 = !DILocation(line: 598, column: 23, scope: !7118)
!7122 = !DILocation(line: 598, column: 11, scope: !7114)
!7123 = !DILocation(line: 599, column: 8, scope: !7118)
!7124 = !DILocation(line: 599, column: 13, scope: !7118)
!7125 = !DILocation(line: 599, column: 20, scope: !7118)
!7126 = !DILocation(line: 600, column: 6, scope: !7114)
!7127 = !DILocation(line: 596, column: 62, scope: !7108)
!7128 = !DILocation(line: 596, column: 68, scope: !7108)
!7129 = !DILocation(line: 596, column: 6, scope: !7108)
!7130 = distinct !{!7130, !7112, !7131}
!7131 = !DILocation(line: 600, column: 6, scope: !7102)
!7132 = !DILocation(line: 601, column: 5, scope: !7095)
!7133 = !DILocation(line: 602, column: 9, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !6994, file: !3, line: 602, column: 9)
!7135 = !DILocation(line: 602, column: 16, scope: !7134)
!7136 = !DILocation(line: 602, column: 22, scope: !7134)
!7137 = !DILocation(line: 602, column: 9, scope: !6994)
!7138 = !DILocation(line: 603, column: 19, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7140, file: !3, line: 603, column: 6)
!7140 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 602, column: 29)
!7141 = !DILocation(line: 603, column: 26, scope: !7139)
!7142 = !DILocation(line: 603, column: 32, scope: !7139)
!7143 = !DILocation(line: 603, column: 39, scope: !7139)
!7144 = !DILocation(line: 603, column: 46, scope: !7139)
!7145 = !DILocation(line: 603, column: 17, scope: !7139)
!7146 = !DILocation(line: 603, column: 11, scope: !7139)
!7147 = !DILocation(line: 603, column: 53, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 603, column: 6)
!7149 = !DILocation(line: 603, column: 6, scope: !7139)
!7150 = !DILocation(line: 604, column: 19, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 604, column: 7)
!7152 = distinct !DILexicalBlock(scope: !7148, file: !3, line: 603, column: 81)
!7153 = !DILocation(line: 604, column: 26, scope: !7151)
!7154 = !DILocation(line: 604, column: 32, scope: !7151)
!7155 = !DILocation(line: 604, column: 17, scope: !7151)
!7156 = !DILocation(line: 604, column: 12, scope: !7151)
!7157 = !DILocation(line: 604, column: 39, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7151, file: !3, line: 604, column: 7)
!7159 = !DILocation(line: 604, column: 7, scope: !7151)
!7160 = !DILocation(line: 605, column: 12, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7162, file: !3, line: 605, column: 12)
!7162 = distinct !DILexicalBlock(scope: !7158, file: !3, line: 604, column: 64)
!7163 = !DILocation(line: 605, column: 18, scope: !7161)
!7164 = !DILocation(line: 605, column: 23, scope: !7161)
!7165 = !DILocation(line: 605, column: 12, scope: !7162)
!7166 = !DILocalVariable(name: "gabr", scope: !7167, file: !3, line: 606, type: !4617)
!7167 = distinct !DILexicalBlock(scope: !7161, file: !3, line: 605, column: 47)
!7168 = !DILocation(line: 606, column: 28, scope: !7167)
!7169 = !DILocation(line: 606, column: 56, scope: !7167)
!7170 = !DILocation(line: 606, column: 35, scope: !7167)
!7171 = !DILocation(line: 607, column: 13, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 607, column: 13)
!7173 = !DILocation(line: 607, column: 19, scope: !7172)
!7174 = !DILocation(line: 607, column: 25, scope: !7172)
!7175 = !DILocation(line: 607, column: 22, scope: !7172)
!7176 = !DILocation(line: 607, column: 13, scope: !7167)
!7177 = !DILocation(line: 608, column: 10, scope: !7172)
!7178 = !DILocation(line: 608, column: 16, scope: !7172)
!7179 = !DILocation(line: 608, column: 19, scope: !7172)
!7180 = !DILocation(line: 609, column: 8, scope: !7167)
!7181 = !DILocation(line: 610, column: 17, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7161, file: !3, line: 610, column: 17)
!7183 = !DILocation(line: 610, column: 23, scope: !7182)
!7184 = !DILocation(line: 610, column: 28, scope: !7182)
!7185 = !DILocation(line: 610, column: 17, scope: !7161)
!7186 = !DILocalVariable(name: "flbr", scope: !7187, file: !3, line: 611, type: !4636)
!7187 = distinct !DILexicalBlock(scope: !7182, file: !3, line: 610, column: 59)
!7188 = !DILocation(line: 611, column: 31, scope: !7187)
!7189 = !DILocation(line: 611, column: 62, scope: !7187)
!7190 = !DILocation(line: 611, column: 38, scope: !7187)
!7191 = !DILocation(line: 612, column: 13, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7187, file: !3, line: 612, column: 13)
!7193 = !DILocation(line: 612, column: 19, scope: !7192)
!7194 = !DILocation(line: 612, column: 25, scope: !7192)
!7195 = !DILocation(line: 612, column: 22, scope: !7192)
!7196 = !DILocation(line: 612, column: 13, scope: !7187)
!7197 = !DILocation(line: 613, column: 10, scope: !7192)
!7198 = !DILocation(line: 613, column: 16, scope: !7192)
!7199 = !DILocation(line: 613, column: 19, scope: !7192)
!7200 = !DILocation(line: 614, column: 8, scope: !7187)
!7201 = !DILocation(line: 615, column: 7, scope: !7162)
!7202 = !DILocation(line: 604, column: 52, scope: !7158)
!7203 = !DILocation(line: 604, column: 58, scope: !7158)
!7204 = !DILocation(line: 604, column: 50, scope: !7158)
!7205 = !DILocation(line: 604, column: 7, scope: !7158)
!7206 = distinct !{!7206, !7159, !7207}
!7207 = !DILocation(line: 615, column: 7, scope: !7151)
!7208 = !DILocation(line: 616, column: 6, scope: !7152)
!7209 = !DILocation(line: 603, column: 68, scope: !7148)
!7210 = !DILocation(line: 603, column: 75, scope: !7148)
!7211 = !DILocation(line: 603, column: 66, scope: !7148)
!7212 = !DILocation(line: 603, column: 6, scope: !7148)
!7213 = distinct !{!7213, !7149, !7214}
!7214 = !DILocation(line: 616, column: 6, scope: !7139)
!7215 = !DILocation(line: 617, column: 5, scope: !7140)
!7216 = !DILocation(line: 619, column: 9, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !6994, file: !3, line: 619, column: 9)
!7218 = !DILocation(line: 619, column: 16, scope: !7217)
!7219 = !DILocation(line: 619, column: 26, scope: !7217)
!7220 = !DILocation(line: 619, column: 23, scope: !7217)
!7221 = !DILocation(line: 619, column: 9, scope: !6994)
!7222 = !DILocation(line: 620, column: 6, scope: !7217)
!7223 = !DILocation(line: 620, column: 13, scope: !7217)
!7224 = !DILocation(line: 620, column: 20, scope: !7217)
!7225 = !DILocation(line: 621, column: 4, scope: !6994)
!7226 = !DILocation(line: 570, column: 26, scope: !6990)
!7227 = !DILocation(line: 570, column: 33, scope: !6990)
!7228 = !DILocation(line: 570, column: 24, scope: !6990)
!7229 = !DILocation(line: 570, column: 4, scope: !6990)
!7230 = distinct !{!7230, !6992, !7231}
!7231 = !DILocation(line: 621, column: 4, scope: !6991)
!7232 = !DILocation(line: 622, column: 8, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !6983, file: !3, line: 622, column: 8)
!7234 = !DILocation(line: 622, column: 12, scope: !7233)
!7235 = !DILocation(line: 622, column: 8, scope: !6983)
!7236 = !DILocation(line: 623, column: 24, scope: !7233)
!7237 = !DILocation(line: 623, column: 29, scope: !7233)
!7238 = !DILocation(line: 623, column: 5, scope: !7233)
!7239 = !DILocation(line: 624, column: 3, scope: !6983)
!7240 = !DILocation(line: 627, column: 14, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !6569, file: !3, line: 627, column: 3)
!7242 = !DILocation(line: 627, column: 19, scope: !7241)
!7243 = !DILocation(line: 627, column: 29, scope: !7241)
!7244 = !DILocation(line: 627, column: 12, scope: !7241)
!7245 = !DILocation(line: 627, column: 8, scope: !7241)
!7246 = !DILocation(line: 627, column: 36, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 627, column: 3)
!7248 = !DILocation(line: 627, column: 3, scope: !7241)
!7249 = !DILocation(line: 628, column: 8, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7251, file: !3, line: 628, column: 8)
!7251 = distinct !DILexicalBlock(scope: !7247, file: !3, line: 627, column: 58)
!7252 = !DILocation(line: 628, column: 13, scope: !7250)
!7253 = !DILocation(line: 628, column: 23, scope: !7250)
!7254 = !DILocation(line: 628, column: 20, scope: !7250)
!7255 = !DILocation(line: 628, column: 8, scope: !7251)
!7256 = !DILocation(line: 629, column: 5, scope: !7250)
!7257 = !DILocation(line: 629, column: 10, scope: !7250)
!7258 = !DILocation(line: 629, column: 17, scope: !7250)
!7259 = !DILocation(line: 630, column: 3, scope: !7251)
!7260 = !DILocation(line: 627, column: 47, scope: !7247)
!7261 = !DILocation(line: 627, column: 52, scope: !7247)
!7262 = !DILocation(line: 627, column: 45, scope: !7247)
!7263 = !DILocation(line: 627, column: 3, scope: !7247)
!7264 = distinct !{!7264, !7248, !7265}
!7265 = !DILocation(line: 630, column: 3, scope: !7241)
!7266 = !DILocation(line: 632, column: 9, scope: !6569)
!7267 = !DILocation(line: 632, column: 14, scope: !6569)
!7268 = !DILocation(line: 632, column: 17, scope: !6569)
!7269 = !DILocation(line: 632, column: 7, scope: !6569)
!7270 = distinct !{!7270, !6565, !7271}
!7271 = !DILocation(line: 633, column: 2, scope: !6304)
!7272 = !DILocation(line: 636, column: 8, scope: !6304)
!7273 = !DILocation(line: 636, column: 15, scope: !6304)
!7274 = !DILocation(line: 636, column: 19, scope: !6304)
!7275 = !DILocation(line: 636, column: 6, scope: !6304)
!7276 = !DILocation(line: 637, column: 2, scope: !6304)
!7277 = !DILocation(line: 637, column: 9, scope: !6304)
!7278 = !DILocation(line: 639, column: 10, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7280, file: !3, line: 639, column: 3)
!7280 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 637, column: 14)
!7281 = !DILocation(line: 639, column: 8, scope: !7279)
!7282 = !DILocation(line: 639, column: 15, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7279, file: !3, line: 639, column: 3)
!7284 = !DILocation(line: 639, column: 17, scope: !7283)
!7285 = !DILocation(line: 639, column: 3, scope: !7279)
!7286 = !DILocation(line: 640, column: 8, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7288, file: !3, line: 640, column: 8)
!7288 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 639, column: 34)
!7289 = !DILocation(line: 640, column: 13, scope: !7287)
!7290 = !DILocation(line: 640, column: 18, scope: !7287)
!7291 = !DILocation(line: 640, column: 21, scope: !7287)
!7292 = !DILocation(line: 640, column: 24, scope: !7287)
!7293 = !DILocation(line: 640, column: 30, scope: !7287)
!7294 = !DILocation(line: 640, column: 35, scope: !7287)
!7295 = !DILocation(line: 640, column: 40, scope: !7287)
!7296 = !DILocation(line: 640, column: 44, scope: !7287)
!7297 = !DILocation(line: 640, column: 27, scope: !7287)
!7298 = !DILocation(line: 640, column: 8, scope: !7288)
!7299 = !DILocation(line: 642, column: 5, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7287, file: !3, line: 640, column: 52)
!7301 = !DILocation(line: 642, column: 10, scope: !7300)
!7302 = !DILocation(line: 642, column: 15, scope: !7300)
!7303 = !DILocation(line: 642, column: 19, scope: !7300)
!7304 = !DILocation(line: 642, column: 26, scope: !7300)
!7305 = !DILocation(line: 643, column: 4, scope: !7300)
!7306 = !DILocation(line: 644, column: 3, scope: !7288)
!7307 = !DILocation(line: 639, column: 30, scope: !7283)
!7308 = !DILocation(line: 639, column: 3, scope: !7283)
!7309 = distinct !{!7309, !7285, !7310}
!7310 = !DILocation(line: 644, column: 3, scope: !7279)
!7311 = !DILocation(line: 646, column: 9, scope: !7280)
!7312 = !DILocation(line: 646, column: 14, scope: !7280)
!7313 = !DILocation(line: 646, column: 17, scope: !7280)
!7314 = !DILocation(line: 646, column: 7, scope: !7280)
!7315 = distinct !{!7315, !7276, !7316}
!7316 = !DILocation(line: 647, column: 2, scope: !6304)
!7317 = !DILocation(line: 650, column: 13, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 650, column: 2)
!7319 = !DILocation(line: 650, column: 20, scope: !7318)
!7320 = !DILocation(line: 650, column: 24, scope: !7318)
!7321 = !DILocation(line: 650, column: 11, scope: !7318)
!7322 = !DILocation(line: 650, column: 7, scope: !7318)
!7323 = !DILocation(line: 650, column: 31, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7318, file: !3, line: 650, column: 2)
!7325 = !DILocation(line: 650, column: 2, scope: !7318)
!7326 = !DILocation(line: 651, column: 7, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7328, file: !3, line: 651, column: 7)
!7328 = distinct !DILexicalBlock(scope: !7324, file: !3, line: 650, column: 56)
!7329 = !DILocation(line: 651, column: 12, scope: !7327)
!7330 = !DILocation(line: 651, column: 16, scope: !7327)
!7331 = !DILocation(line: 651, column: 20, scope: !7327)
!7332 = !DILocation(line: 651, column: 26, scope: !7327)
!7333 = !DILocation(line: 651, column: 31, scope: !7327)
!7334 = !DILocation(line: 651, column: 36, scope: !7327)
!7335 = !DILocation(line: 651, column: 23, scope: !7327)
!7336 = !DILocation(line: 651, column: 7, scope: !7328)
!7337 = !DILocation(line: 651, column: 45, scope: !7327)
!7338 = !DILocation(line: 651, column: 50, scope: !7327)
!7339 = !DILocation(line: 651, column: 55, scope: !7327)
!7340 = !DILocation(line: 651, column: 62, scope: !7327)
!7341 = !DILocation(line: 652, column: 7, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7328, file: !3, line: 652, column: 7)
!7343 = !DILocation(line: 652, column: 12, scope: !7342)
!7344 = !DILocation(line: 652, column: 16, scope: !7342)
!7345 = !DILocation(line: 652, column: 20, scope: !7342)
!7346 = !DILocation(line: 652, column: 26, scope: !7342)
!7347 = !DILocation(line: 652, column: 31, scope: !7342)
!7348 = !DILocation(line: 652, column: 35, scope: !7342)
!7349 = !DILocation(line: 652, column: 23, scope: !7342)
!7350 = !DILocation(line: 652, column: 7, scope: !7328)
!7351 = !DILocation(line: 652, column: 44, scope: !7342)
!7352 = !DILocation(line: 652, column: 49, scope: !7342)
!7353 = !DILocation(line: 652, column: 53, scope: !7342)
!7354 = !DILocation(line: 652, column: 60, scope: !7342)
!7355 = !DILocation(line: 653, column: 7, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7328, file: !3, line: 653, column: 7)
!7357 = !DILocation(line: 653, column: 12, scope: !7356)
!7358 = !DILocation(line: 653, column: 16, scope: !7356)
!7359 = !DILocation(line: 653, column: 20, scope: !7356)
!7360 = !DILocation(line: 653, column: 26, scope: !7356)
!7361 = !DILocation(line: 653, column: 31, scope: !7356)
!7362 = !DILocation(line: 653, column: 35, scope: !7356)
!7363 = !DILocation(line: 653, column: 23, scope: !7356)
!7364 = !DILocation(line: 653, column: 7, scope: !7328)
!7365 = !DILocation(line: 653, column: 44, scope: !7356)
!7366 = !DILocation(line: 653, column: 49, scope: !7356)
!7367 = !DILocation(line: 653, column: 53, scope: !7356)
!7368 = !DILocation(line: 653, column: 60, scope: !7356)
!7369 = !DILocation(line: 654, column: 2, scope: !7328)
!7370 = !DILocation(line: 650, column: 42, scope: !7324)
!7371 = !DILocation(line: 650, column: 47, scope: !7324)
!7372 = !DILocation(line: 650, column: 50, scope: !7324)
!7373 = !DILocation(line: 650, column: 40, scope: !7324)
!7374 = !DILocation(line: 650, column: 2, scope: !7324)
!7375 = distinct !{!7375, !7325, !7376}
!7376 = !DILocation(line: 654, column: 2, scope: !7318)
!7377 = !DILocation(line: 657, column: 9, scope: !6304)
!7378 = !DILocation(line: 657, column: 16, scope: !6304)
!7379 = !DILocation(line: 657, column: 22, scope: !6304)
!7380 = !DILocation(line: 657, column: 7, scope: !6304)
!7381 = !DILocation(line: 658, column: 2, scope: !6304)
!7382 = !DILocation(line: 658, column: 9, scope: !6304)
!7383 = !DILocation(line: 659, column: 7, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7385, file: !3, line: 659, column: 7)
!7385 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 658, column: 15)
!7386 = !DILocation(line: 659, column: 13, scope: !7384)
!7387 = !DILocation(line: 659, column: 16, scope: !7384)
!7388 = !DILocation(line: 659, column: 20, scope: !7384)
!7389 = !DILocation(line: 659, column: 7, scope: !7385)
!7390 = !DILocation(line: 660, column: 11, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7392, file: !3, line: 660, column: 4)
!7392 = distinct !DILexicalBlock(scope: !7384, file: !3, line: 659, column: 29)
!7393 = !DILocation(line: 660, column: 9, scope: !7391)
!7394 = !DILocation(line: 660, column: 16, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7391, file: !3, line: 660, column: 4)
!7396 = !DILocation(line: 660, column: 18, scope: !7395)
!7397 = !DILocation(line: 660, column: 4, scope: !7391)
!7398 = !DILocation(line: 661, column: 9, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7400, file: !3, line: 661, column: 9)
!7400 = distinct !DILexicalBlock(scope: !7395, file: !3, line: 660, column: 35)
!7401 = !DILocation(line: 661, column: 15, scope: !7399)
!7402 = !DILocation(line: 661, column: 20, scope: !7399)
!7403 = !DILocation(line: 661, column: 23, scope: !7399)
!7404 = !DILocation(line: 661, column: 26, scope: !7399)
!7405 = !DILocation(line: 661, column: 32, scope: !7399)
!7406 = !DILocation(line: 661, column: 38, scope: !7399)
!7407 = !DILocation(line: 661, column: 43, scope: !7399)
!7408 = !DILocation(line: 661, column: 47, scope: !7399)
!7409 = !DILocation(line: 661, column: 29, scope: !7399)
!7410 = !DILocation(line: 661, column: 9, scope: !7400)
!7411 = !DILocation(line: 662, column: 6, scope: !7399)
!7412 = !DILocation(line: 662, column: 12, scope: !7399)
!7413 = !DILocation(line: 662, column: 17, scope: !7399)
!7414 = !DILocation(line: 662, column: 21, scope: !7399)
!7415 = !DILocation(line: 662, column: 28, scope: !7399)
!7416 = !DILocation(line: 663, column: 4, scope: !7400)
!7417 = !DILocation(line: 660, column: 31, scope: !7395)
!7418 = !DILocation(line: 660, column: 4, scope: !7395)
!7419 = distinct !{!7419, !7397, !7420}
!7420 = !DILocation(line: 663, column: 4, scope: !7391)
!7421 = !DILocation(line: 664, column: 3, scope: !7392)
!7422 = !DILocation(line: 666, column: 10, scope: !7385)
!7423 = !DILocation(line: 666, column: 16, scope: !7385)
!7424 = !DILocation(line: 666, column: 19, scope: !7385)
!7425 = !DILocation(line: 666, column: 8, scope: !7385)
!7426 = distinct !{!7426, !7381, !7427}
!7427 = !DILocation(line: 667, column: 2, scope: !6304)
!7428 = !DILocation(line: 670, column: 8, scope: !6304)
!7429 = !DILocation(line: 670, column: 15, scope: !6304)
!7430 = !DILocation(line: 670, column: 21, scope: !6304)
!7431 = !DILocation(line: 670, column: 6, scope: !6304)
!7432 = !DILocation(line: 671, column: 2, scope: !6304)
!7433 = !DILocation(line: 671, column: 9, scope: !6304)
!7434 = !DILocation(line: 672, column: 7, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7436, file: !3, line: 672, column: 7)
!7436 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 671, column: 14)
!7437 = !DILocation(line: 672, column: 12, scope: !7435)
!7438 = !DILocation(line: 672, column: 15, scope: !7435)
!7439 = !DILocation(line: 672, column: 19, scope: !7435)
!7440 = !DILocation(line: 672, column: 7, scope: !7436)
!7441 = !DILocation(line: 673, column: 8, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7443, file: !3, line: 673, column: 8)
!7443 = distinct !DILexicalBlock(scope: !7435, file: !3, line: 672, column: 28)
!7444 = !DILocation(line: 673, column: 13, scope: !7442)
!7445 = !DILocation(line: 673, column: 23, scope: !7442)
!7446 = !DILocation(line: 673, column: 20, scope: !7442)
!7447 = !DILocation(line: 673, column: 8, scope: !7443)
!7448 = !DILocation(line: 673, column: 27, scope: !7442)
!7449 = !DILocation(line: 673, column: 32, scope: !7442)
!7450 = !DILocation(line: 673, column: 39, scope: !7442)
!7451 = !DILocation(line: 674, column: 8, scope: !7452)
!7452 = distinct !DILexicalBlock(scope: !7443, file: !3, line: 674, column: 8)
!7453 = !DILocation(line: 674, column: 13, scope: !7452)
!7454 = !DILocation(line: 674, column: 27, scope: !7452)
!7455 = !DILocation(line: 674, column: 45, scope: !7452)
!7456 = !DILocation(line: 674, column: 42, scope: !7452)
!7457 = !DILocation(line: 674, column: 8, scope: !7443)
!7458 = !DILocation(line: 674, column: 49, scope: !7452)
!7459 = !DILocation(line: 674, column: 54, scope: !7452)
!7460 = !DILocation(line: 674, column: 68, scope: !7452)
!7461 = !DILocation(line: 674, column: 83, scope: !7452)
!7462 = !DILocation(line: 675, column: 8, scope: !7463)
!7463 = distinct !DILexicalBlock(scope: !7443, file: !3, line: 675, column: 8)
!7464 = !DILocation(line: 675, column: 13, scope: !7463)
!7465 = !DILocation(line: 675, column: 27, scope: !7463)
!7466 = !DILocation(line: 675, column: 36, scope: !7463)
!7467 = !DILocation(line: 675, column: 46, scope: !7463)
!7468 = !DILocation(line: 675, column: 43, scope: !7463)
!7469 = !DILocation(line: 675, column: 8, scope: !7443)
!7470 = !DILocation(line: 675, column: 50, scope: !7463)
!7471 = !DILocation(line: 675, column: 55, scope: !7463)
!7472 = !DILocation(line: 675, column: 69, scope: !7463)
!7473 = !DILocation(line: 675, column: 78, scope: !7463)
!7474 = !DILocation(line: 675, column: 85, scope: !7463)
!7475 = !DILocalVariable(name: "m", scope: !7476, file: !3, line: 679, type: !7477)
!7476 = distinct !DILexicalBlock(scope: !7443, file: !3, line: 678, column: 4)
!7477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7478, size: 64)
!7478 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimeMarker", file: !995, line: 805, baseType: !7479)
!7479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TimeMarker", file: !995, line: 799, size: 768, elements: !7480)
!7480 = !{!7481, !7483, !7484, !7485, !7486, !7487}
!7481 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7479, file: !995, line: 800, baseType: !7482, size: 64)
!7482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7479, size: 64)
!7483 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7479, file: !995, line: 800, baseType: !7482, size: 64, offset: 64)
!7484 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !7479, file: !995, line: 801, baseType: !73, size: 32, offset: 128)
!7485 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7479, file: !995, line: 802, baseType: !648, size: 512, offset: 160)
!7486 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7479, file: !995, line: 803, baseType: !7, size: 32, offset: 672)
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !7479, file: !995, line: 804, baseType: !966, size: 64, offset: 704)
!7488 = !DILocation(line: 679, column: 17, scope: !7476)
!7489 = !DILocation(line: 681, column: 14, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7476, file: !3, line: 681, column: 5)
!7491 = !DILocation(line: 681, column: 19, scope: !7490)
!7492 = !DILocation(line: 681, column: 27, scope: !7490)
!7493 = !DILocation(line: 681, column: 12, scope: !7490)
!7494 = !DILocation(line: 681, column: 10, scope: !7490)
!7495 = !DILocation(line: 681, column: 34, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7490, file: !3, line: 681, column: 5)
!7497 = !DILocation(line: 681, column: 5, scope: !7490)
!7498 = !DILocation(line: 682, column: 10, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7500, file: !3, line: 682, column: 10)
!7500 = distinct !DILexicalBlock(scope: !7496, file: !3, line: 681, column: 50)
!7501 = !DILocation(line: 682, column: 13, scope: !7499)
!7502 = !DILocation(line: 682, column: 23, scope: !7499)
!7503 = !DILocation(line: 682, column: 20, scope: !7499)
!7504 = !DILocation(line: 682, column: 10, scope: !7500)
!7505 = !DILocation(line: 683, column: 7, scope: !7499)
!7506 = !DILocation(line: 683, column: 10, scope: !7499)
!7507 = !DILocation(line: 683, column: 17, scope: !7499)
!7508 = !DILocation(line: 684, column: 5, scope: !7500)
!7509 = !DILocation(line: 681, column: 41, scope: !7496)
!7510 = !DILocation(line: 681, column: 44, scope: !7496)
!7511 = !DILocation(line: 681, column: 39, scope: !7496)
!7512 = !DILocation(line: 681, column: 5, scope: !7496)
!7513 = distinct !{!7513, !7497, !7514}
!7514 = !DILocation(line: 684, column: 5, scope: !7490)
!7515 = !DILocation(line: 687, column: 8, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7443, file: !3, line: 687, column: 8)
!7517 = !DILocation(line: 687, column: 13, scope: !7516)
!7518 = !DILocation(line: 687, column: 8, scope: !7443)
!7519 = !DILocalVariable(name: "seq", scope: !7520, file: !3, line: 688, type: !1213)
!7520 = distinct !DILexicalBlock(scope: !7516, file: !3, line: 687, column: 17)
!7521 = !DILocation(line: 688, column: 15, scope: !7520)
!7522 = !DILocalVariable(name: "iter_macro", scope: !7523, file: !3, line: 689, type: !7524)
!7523 = distinct !DILexicalBlock(scope: !7520, file: !3, line: 689, column: 5)
!7524 = !DIDerivedType(tag: DW_TAG_typedef, name: "SeqIterator", file: !7525, line: 63, baseType: !7526)
!7525 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_sequencer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SeqIterator", file: !7525, line: 57, size: 256, elements: !7527)
!7527 = !{!7528, !7530, !7531, !7532, !7533}
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !7526, file: !7525, line: 58, baseType: !7529, size: 64)
!7529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 64)
!7530 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !7526, file: !7525, line: 59, baseType: !73, size: 32, offset: 64)
!7531 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !7526, file: !7525, line: 59, baseType: !73, size: 32, offset: 96)
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !7526, file: !7525, line: 61, baseType: !1218, size: 64, offset: 128)
!7533 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !7526, file: !7525, line: 62, baseType: !73, size: 32, offset: 192)
!7534 = !DILocation(line: 689, column: 5, scope: !7523)
!7535 = !DILocation(line: 689, column: 5, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7523, file: !3, line: 689, column: 5)
!7537 = !DILocation(line: 689, column: 5, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7536, file: !3, line: 689, column: 5)
!7539 = !DILocation(line: 689, column: 5, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7538, file: !3, line: 689, column: 5)
!7541 = !DILocation(line: 691, column: 10, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7543, file: !3, line: 691, column: 10)
!7543 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 690, column: 5)
!7544 = !DILocation(line: 691, column: 15, scope: !7542)
!7545 = !DILocation(line: 691, column: 31, scope: !7542)
!7546 = !DILocation(line: 691, column: 28, scope: !7542)
!7547 = !DILocation(line: 691, column: 10, scope: !7543)
!7548 = !DILocation(line: 692, column: 7, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7542, file: !3, line: 691, column: 35)
!7550 = !DILocation(line: 692, column: 12, scope: !7549)
!7551 = !DILocation(line: 692, column: 25, scope: !7549)
!7552 = !DILocation(line: 693, column: 6, scope: !7549)
!7553 = !DILocation(line: 695, column: 5, scope: !7540)
!7554 = distinct !{!7554, !7535, !7555}
!7555 = !DILocation(line: 695, column: 5, scope: !7536)
!7556 = !DILocation(line: 695, column: 5, scope: !7523)
!7557 = !DILocation(line: 696, column: 4, scope: !7520)
!7558 = !DILocation(line: 698, column: 15, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7443, file: !3, line: 698, column: 4)
!7560 = !DILocation(line: 698, column: 20, scope: !7559)
!7561 = !DILocation(line: 698, column: 22, scope: !7559)
!7562 = !DILocation(line: 698, column: 29, scope: !7559)
!7563 = !DILocation(line: 698, column: 13, scope: !7559)
!7564 = !DILocation(line: 698, column: 9, scope: !7559)
!7565 = !DILocation(line: 698, column: 36, scope: !7566)
!7566 = distinct !DILexicalBlock(scope: !7559, file: !3, line: 698, column: 4)
!7567 = !DILocation(line: 698, column: 4, scope: !7559)
!7568 = !DILocation(line: 699, column: 40, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 699, column: 5)
!7570 = distinct !DILexicalBlock(scope: !7566, file: !3, line: 698, column: 58)
!7571 = !DILocation(line: 699, column: 45, scope: !7569)
!7572 = !DILocation(line: 699, column: 61, scope: !7569)
!7573 = !DILocation(line: 699, column: 70, scope: !7569)
!7574 = !DILocation(line: 699, column: 20, scope: !7569)
!7575 = !DILocation(line: 699, column: 18, scope: !7569)
!7576 = !DILocation(line: 699, column: 10, scope: !7569)
!7577 = !DILocation(line: 700, column: 10, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7569, file: !3, line: 699, column: 5)
!7579 = !DILocation(line: 699, column: 5, scope: !7569)
!7580 = !DILocation(line: 702, column: 10, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7582, file: !3, line: 702, column: 10)
!7582 = distinct !DILexicalBlock(scope: !7578, file: !3, line: 701, column: 5)
!7583 = !DILocation(line: 702, column: 19, scope: !7581)
!7584 = !DILocation(line: 702, column: 10, scope: !7582)
!7585 = !DILocation(line: 703, column: 42, scope: !7586)
!7586 = distinct !DILexicalBlock(scope: !7581, file: !3, line: 702, column: 30)
!7587 = !DILocation(line: 703, column: 51, scope: !7586)
!7588 = !DILocation(line: 703, column: 62, scope: !7586)
!7589 = !DILocation(line: 703, column: 7, scope: !7586)
!7590 = !DILocation(line: 704, column: 6, scope: !7586)
!7591 = !DILocation(line: 705, column: 5, scope: !7582)
!7592 = !DILocation(line: 700, column: 29, scope: !7578)
!7593 = !DILocation(line: 700, column: 38, scope: !7578)
!7594 = !DILocation(line: 700, column: 27, scope: !7578)
!7595 = !DILocation(line: 699, column: 5, scope: !7578)
!7596 = distinct !{!7596, !7579, !7597}
!7597 = !DILocation(line: 705, column: 5, scope: !7569)
!7598 = !DILocation(line: 706, column: 4, scope: !7570)
!7599 = !DILocation(line: 698, column: 47, scope: !7566)
!7600 = !DILocation(line: 698, column: 52, scope: !7566)
!7601 = !DILocation(line: 698, column: 45, scope: !7566)
!7602 = !DILocation(line: 698, column: 4, scope: !7566)
!7603 = distinct !{!7603, !7567, !7604}
!7604 = !DILocation(line: 706, column: 4, scope: !7559)
!7605 = !DILocation(line: 707, column: 3, scope: !7443)
!7606 = !DILocation(line: 709, column: 9, scope: !7436)
!7607 = !DILocation(line: 709, column: 14, scope: !7436)
!7608 = !DILocation(line: 709, column: 17, scope: !7436)
!7609 = !DILocation(line: 709, column: 7, scope: !7436)
!7610 = distinct !{!7610, !7432, !7611}
!7611 = !DILocation(line: 710, column: 2, scope: !6304)
!7612 = !DILocation(line: 713, column: 7, scope: !6304)
!7613 = !DILocation(line: 713, column: 14, scope: !6304)
!7614 = !DILocation(line: 713, column: 21, scope: !6304)
!7615 = !DILocation(line: 713, column: 5, scope: !6304)
!7616 = !DILocation(line: 714, column: 2, scope: !6304)
!7617 = !DILocation(line: 714, column: 9, scope: !6304)
!7618 = !DILocalVariable(name: "sa", scope: !7619, file: !3, line: 715, type: !7620)
!7619 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 714, column: 13)
!7620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7621, size: 64)
!7621 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrArea", file: !229, line: 228, baseType: !7622)
!7622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !229, line: 203, size: 1280, elements: !7623)
!7623 = !{!7624, !7626, !7627, !7644, !7645, !7646, !7647, !7648, !7649, !7650, !7651, !7652, !7653, !7654, !7655, !7656, !7657, !7658, !7659, !7662, !7663, !7664, !7665}
!7624 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7622, file: !229, line: 204, baseType: !7625, size: 64)
!7625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7622, size: 64)
!7626 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7622, file: !229, line: 204, baseType: !7625, size: 64, offset: 64)
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7622, file: !229, line: 206, baseType: !7628, size: 64, offset: 128)
!7628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7629, size: 64)
!7629 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !229, line: 87, baseType: !7630)
!7630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !229, line: 82, size: 256, elements: !7631)
!7631 = !{!7632, !7634, !7635, !7636, !7642, !7643}
!7632 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7630, file: !229, line: 83, baseType: !7633, size: 64)
!7633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7630, size: 64)
!7634 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7630, file: !229, line: 83, baseType: !7633, size: 64, offset: 64)
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !7630, file: !229, line: 83, baseType: !7633, size: 64, offset: 128)
!7636 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !7630, file: !229, line: 84, baseType: !7637, size: 32, offset: 192)
!7637 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !1135, line: 43, baseType: !7638)
!7638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !1135, line: 41, size: 32, elements: !7639)
!7639 = !{!7640, !7641}
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !7638, file: !1135, line: 42, baseType: !632, size: 16)
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !7638, file: !1135, line: 42, baseType: !632, size: 16, offset: 16)
!7642 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7630, file: !229, line: 86, baseType: !632, size: 16, offset: 224)
!7643 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !7630, file: !229, line: 86, baseType: !632, size: 16, offset: 240)
!7644 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7622, file: !229, line: 206, baseType: !7628, size: 64, offset: 192)
!7645 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7622, file: !229, line: 206, baseType: !7628, size: 64, offset: 256)
!7646 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7622, file: !229, line: 206, baseType: !7628, size: 64, offset: 320)
!7647 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !7622, file: !229, line: 207, baseType: !6382, size: 64, offset: 384)
!7648 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !7622, file: !229, line: 209, baseType: !2158, size: 128, offset: 448)
!7649 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !7622, file: !229, line: 211, baseType: !619, size: 8, offset: 576)
!7650 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !7622, file: !229, line: 211, baseType: !619, size: 8, offset: 584)
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !7622, file: !229, line: 212, baseType: !632, size: 16, offset: 592)
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !7622, file: !229, line: 212, baseType: !632, size: 16, offset: 608)
!7653 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !7622, file: !229, line: 214, baseType: !632, size: 16, offset: 624)
!7654 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !7622, file: !229, line: 215, baseType: !632, size: 16, offset: 640)
!7655 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7622, file: !229, line: 216, baseType: !632, size: 16, offset: 656)
!7656 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !7622, file: !229, line: 217, baseType: !632, size: 16, offset: 672)
!7657 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !7622, file: !229, line: 219, baseType: !619, size: 8, offset: 688)
!7658 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !7622, file: !229, line: 219, baseType: !619, size: 8, offset: 696)
!7659 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7622, file: !229, line: 221, baseType: !7660, size: 64, offset: 704)
!7660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7661, size: 64)
!7661 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !229, line: 39, flags: DIFlagFwdDecl)
!7662 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !7622, file: !229, line: 223, baseType: !658, size: 128, offset: 768)
!7663 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !7622, file: !229, line: 224, baseType: !658, size: 128, offset: 896)
!7664 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !7622, file: !229, line: 225, baseType: !658, size: 128, offset: 1024)
!7665 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !7622, file: !229, line: 227, baseType: !658, size: 128, offset: 1152)
!7666 = !DILocation(line: 715, column: 12, scope: !7619)
!7667 = !DILocation(line: 715, column: 17, scope: !7619)
!7668 = !DILocation(line: 715, column: 21, scope: !7619)
!7669 = !DILocation(line: 715, column: 30, scope: !7619)
!7670 = !DILocation(line: 716, column: 3, scope: !7619)
!7671 = !DILocation(line: 716, column: 10, scope: !7619)
!7672 = !DILocalVariable(name: "sl", scope: !7673, file: !3, line: 717, type: !4870)
!7673 = distinct !DILexicalBlock(scope: !7619, file: !3, line: 716, column: 14)
!7674 = !DILocation(line: 717, column: 15, scope: !7673)
!7675 = !DILocation(line: 719, column: 14, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7673, file: !3, line: 719, column: 4)
!7677 = !DILocation(line: 719, column: 18, scope: !7676)
!7678 = !DILocation(line: 719, column: 28, scope: !7676)
!7679 = !DILocation(line: 719, column: 12, scope: !7676)
!7680 = !DILocation(line: 719, column: 9, scope: !7676)
!7681 = !DILocation(line: 719, column: 35, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7676, file: !3, line: 719, column: 4)
!7683 = !DILocation(line: 719, column: 4, scope: !7676)
!7684 = !DILocation(line: 720, column: 9, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7686, file: !3, line: 720, column: 9)
!7686 = distinct !DILexicalBlock(scope: !7682, file: !3, line: 719, column: 54)
!7687 = !DILocation(line: 720, column: 13, scope: !7685)
!7688 = !DILocation(line: 720, column: 23, scope: !7685)
!7689 = !DILocation(line: 720, column: 9, scope: !7686)
!7690 = !DILocalVariable(name: "v3d", scope: !7691, file: !3, line: 721, type: !4717)
!7691 = distinct !DILexicalBlock(scope: !7685, file: !3, line: 720, column: 40)
!7692 = !DILocation(line: 721, column: 14, scope: !7691)
!7693 = !DILocation(line: 721, column: 31, scope: !7691)
!7694 = !DILocation(line: 721, column: 20, scope: !7691)
!7695 = !DILocation(line: 724, column: 10, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7691, file: !3, line: 724, column: 10)
!7697 = !DILocation(line: 724, column: 15, scope: !7696)
!7698 = !DILocation(line: 724, column: 28, scope: !7696)
!7699 = !DILocation(line: 724, column: 25, scope: !7696)
!7700 = !DILocation(line: 724, column: 10, scope: !7691)
!7701 = !DILocation(line: 725, column: 7, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7696, file: !3, line: 724, column: 32)
!7703 = !DILocation(line: 725, column: 12, scope: !7702)
!7704 = !DILocation(line: 725, column: 22, scope: !7702)
!7705 = !DILocation(line: 726, column: 7, scope: !7702)
!7706 = !DILocation(line: 726, column: 12, scope: !7702)
!7707 = !DILocation(line: 726, column: 30, scope: !7702)
!7708 = !DILocation(line: 727, column: 6, scope: !7702)
!7709 = !DILocation(line: 728, column: 10, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7691, file: !3, line: 728, column: 10)
!7711 = !DILocation(line: 728, column: 15, scope: !7710)
!7712 = !DILocation(line: 728, column: 23, scope: !7710)
!7713 = !DILocation(line: 728, column: 26, scope: !7710)
!7714 = !DILocation(line: 728, column: 31, scope: !7710)
!7715 = !DILocation(line: 728, column: 40, scope: !7710)
!7716 = !DILocation(line: 728, column: 53, scope: !7710)
!7717 = !DILocation(line: 728, column: 50, scope: !7710)
!7718 = !DILocation(line: 728, column: 10, scope: !7691)
!7719 = !DILocation(line: 729, column: 7, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7710, file: !3, line: 728, column: 57)
!7721 = !DILocation(line: 729, column: 12, scope: !7720)
!7722 = !DILocation(line: 729, column: 21, scope: !7720)
!7723 = !DILocation(line: 729, column: 31, scope: !7720)
!7724 = !DILocation(line: 730, column: 7, scope: !7720)
!7725 = !DILocation(line: 730, column: 12, scope: !7720)
!7726 = !DILocation(line: 730, column: 21, scope: !7720)
!7727 = !DILocation(line: 730, column: 39, scope: !7720)
!7728 = !DILocation(line: 731, column: 6, scope: !7720)
!7729 = !DILocation(line: 733, column: 12, scope: !7691)
!7730 = !DILocation(line: 734, column: 10, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7691, file: !3, line: 734, column: 10)
!7732 = !DILocation(line: 734, column: 15, scope: !7731)
!7733 = !DILocation(line: 734, column: 25, scope: !7731)
!7734 = !DILocation(line: 734, column: 22, scope: !7731)
!7735 = !DILocation(line: 734, column: 10, scope: !7691)
!7736 = !DILocation(line: 735, column: 7, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7731, file: !3, line: 734, column: 29)
!7738 = !DILocation(line: 735, column: 12, scope: !7737)
!7739 = !DILocation(line: 735, column: 19, scope: !7737)
!7740 = !DILocation(line: 736, column: 13, scope: !7737)
!7741 = !DILocation(line: 737, column: 6, scope: !7737)
!7742 = !DILocation(line: 738, column: 10, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7691, file: !3, line: 738, column: 10)
!7744 = !DILocation(line: 738, column: 15, scope: !7743)
!7745 = !DILocation(line: 738, column: 23, scope: !7743)
!7746 = !DILocation(line: 738, column: 26, scope: !7743)
!7747 = !DILocation(line: 738, column: 31, scope: !7743)
!7748 = !DILocation(line: 738, column: 40, scope: !7743)
!7749 = !DILocation(line: 738, column: 50, scope: !7743)
!7750 = !DILocation(line: 738, column: 47, scope: !7743)
!7751 = !DILocation(line: 738, column: 10, scope: !7691)
!7752 = !DILocation(line: 739, column: 7, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7743, file: !3, line: 738, column: 54)
!7754 = !DILocation(line: 739, column: 12, scope: !7753)
!7755 = !DILocation(line: 739, column: 21, scope: !7753)
!7756 = !DILocation(line: 739, column: 28, scope: !7753)
!7757 = !DILocation(line: 740, column: 13, scope: !7753)
!7758 = !DILocation(line: 741, column: 6, scope: !7753)
!7759 = !DILocation(line: 743, column: 10, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7691, file: !3, line: 743, column: 10)
!7761 = !DILocation(line: 743, column: 10, scope: !7691)
!7762 = !DILocation(line: 744, column: 11, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7764, file: !3, line: 744, column: 11)
!7764 = distinct !DILexicalBlock(scope: !7760, file: !3, line: 743, column: 17)
!7765 = !DILocation(line: 744, column: 15, scope: !7763)
!7766 = !DILocation(line: 744, column: 25, scope: !7763)
!7767 = !DILocation(line: 744, column: 11, scope: !7764)
!7768 = !DILocation(line: 745, column: 18, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7770, file: !3, line: 745, column: 8)
!7770 = distinct !DILexicalBlock(scope: !7763, file: !3, line: 744, column: 42)
!7771 = !DILocation(line: 745, column: 22, scope: !7769)
!7772 = !DILocation(line: 745, column: 33, scope: !7769)
!7773 = !DILocation(line: 745, column: 16, scope: !7769)
!7774 = !DILocation(line: 745, column: 13, scope: !7769)
!7775 = !DILocation(line: 745, column: 40, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 745, column: 8)
!7777 = !DILocation(line: 745, column: 8, scope: !7769)
!7778 = !DILocation(line: 746, column: 13, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7780, file: !3, line: 746, column: 13)
!7780 = distinct !DILexicalBlock(scope: !7776, file: !3, line: 745, column: 59)
!7781 = !DILocation(line: 746, column: 17, scope: !7779)
!7782 = !DILocation(line: 746, column: 28, scope: !7779)
!7783 = !DILocation(line: 746, column: 13, scope: !7780)
!7784 = !DILocation(line: 747, column: 33, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 746, column: 48)
!7786 = !DILocation(line: 747, column: 37, scope: !7785)
!7787 = !DILocation(line: 747, column: 17, scope: !7785)
!7788 = !DILocation(line: 747, column: 15, scope: !7785)
!7789 = !DILocation(line: 748, column: 14, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7785, file: !3, line: 748, column: 14)
!7791 = !DILocation(line: 748, column: 20, scope: !7790)
!7792 = !DILocation(line: 748, column: 25, scope: !7790)
!7793 = !DILocation(line: 748, column: 28, scope: !7790)
!7794 = !DILocation(line: 748, column: 34, scope: !7790)
!7795 = !DILocation(line: 748, column: 14, scope: !7785)
!7796 = !DILocation(line: 749, column: 15, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7798, file: !3, line: 749, column: 15)
!7798 = distinct !DILexicalBlock(scope: !7790, file: !3, line: 748, column: 40)
!7799 = !DILocation(line: 749, column: 21, scope: !7797)
!7800 = !DILocation(line: 749, column: 27, scope: !7797)
!7801 = !DILocation(line: 749, column: 15, scope: !7798)
!7802 = !DILocation(line: 750, column: 12, scope: !7797)
!7803 = !DILocation(line: 750, column: 18, scope: !7797)
!7804 = !DILocation(line: 750, column: 24, scope: !7797)
!7805 = !DILocation(line: 751, column: 10, scope: !7798)
!7806 = !DILocation(line: 752, column: 14, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7785, file: !3, line: 752, column: 14)
!7808 = !DILocation(line: 752, column: 20, scope: !7807)
!7809 = !DILocation(line: 752, column: 25, scope: !7807)
!7810 = !DILocation(line: 752, column: 28, scope: !7807)
!7811 = !DILocation(line: 752, column: 34, scope: !7807)
!7812 = !DILocation(line: 752, column: 14, scope: !7785)
!7813 = !DILocation(line: 753, column: 15, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7815, file: !3, line: 753, column: 15)
!7815 = distinct !DILexicalBlock(scope: !7807, file: !3, line: 752, column: 40)
!7816 = !DILocation(line: 753, column: 21, scope: !7814)
!7817 = !DILocation(line: 753, column: 29, scope: !7814)
!7818 = !DILocation(line: 753, column: 32, scope: !7814)
!7819 = !DILocation(line: 753, column: 38, scope: !7814)
!7820 = !DILocation(line: 753, column: 47, scope: !7814)
!7821 = !DILocation(line: 753, column: 53, scope: !7814)
!7822 = !DILocation(line: 753, column: 15, scope: !7815)
!7823 = !DILocation(line: 754, column: 12, scope: !7814)
!7824 = !DILocation(line: 754, column: 18, scope: !7814)
!7825 = !DILocation(line: 754, column: 27, scope: !7814)
!7826 = !DILocation(line: 754, column: 33, scope: !7814)
!7827 = !DILocation(line: 755, column: 10, scope: !7815)
!7828 = !DILocation(line: 756, column: 9, scope: !7785)
!7829 = !DILocation(line: 757, column: 8, scope: !7780)
!7830 = !DILocation(line: 745, column: 49, scope: !7776)
!7831 = !DILocation(line: 745, column: 53, scope: !7776)
!7832 = !DILocation(line: 745, column: 47, scope: !7776)
!7833 = !DILocation(line: 745, column: 8, scope: !7776)
!7834 = distinct !{!7834, !7777, !7835}
!7835 = !DILocation(line: 757, column: 8, scope: !7769)
!7836 = !DILocation(line: 758, column: 7, scope: !7770)
!7837 = !DILocation(line: 759, column: 6, scope: !7764)
!7838 = !DILocation(line: 760, column: 5, scope: !7691)
!7839 = !DILocation(line: 761, column: 14, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !7685, file: !3, line: 761, column: 14)
!7841 = !DILocation(line: 761, column: 18, scope: !7840)
!7842 = !DILocation(line: 761, column: 28, scope: !7840)
!7843 = !DILocation(line: 761, column: 14, scope: !7685)
!7844 = !DILocalVariable(name: "so", scope: !7845, file: !3, line: 762, type: !4865)
!7845 = distinct !DILexicalBlock(scope: !7840, file: !3, line: 761, column: 47)
!7846 = !DILocation(line: 762, column: 17, scope: !7845)
!7847 = !DILocation(line: 762, column: 35, scope: !7845)
!7848 = !DILocation(line: 762, column: 22, scope: !7845)
!7849 = !DILocation(line: 764, column: 10, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7845, file: !3, line: 764, column: 10)
!7851 = !DILocation(line: 764, column: 14, scope: !7850)
!7852 = !DILocation(line: 764, column: 10, scope: !7845)
!7853 = !DILocalVariable(name: "tselem", scope: !7854, file: !3, line: 765, type: !7855)
!7854 = distinct !DILexicalBlock(scope: !7850, file: !3, line: 764, column: 25)
!7855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7856, size: 64)
!7856 = !DIDerivedType(tag: DW_TAG_typedef, name: "TreeStoreElem", file: !4914, line: 42, baseType: !4913)
!7857 = !DILocation(line: 765, column: 22, scope: !7854)
!7858 = !DILocalVariable(name: "iter", scope: !7854, file: !3, line: 766, type: !7859)
!7859 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool_iter", file: !7860, line: 80, baseType: !7861)
!7860 = !DIFile(filename: "blender/source/blender/blenlib/BLI_mempool.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_iter", file: !7860, line: 76, size: 192, elements: !7862)
!7862 = !{!7863, !7866, !7869}
!7863 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !7861, file: !7860, line: 77, baseType: !7864, size: 64)
!7864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7865, size: 64)
!7865 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool", file: !7860, line: 47, baseType: !3161)
!7866 = !DIDerivedType(tag: DW_TAG_member, name: "curchunk", scope: !7861, file: !7860, line: 78, baseType: !7867, size: 64, offset: 64)
!7867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7868, size: 64)
!7868 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_chunk", file: !7860, line: 45, flags: DIFlagFwdDecl)
!7869 = !DIDerivedType(tag: DW_TAG_member, name: "curindex", scope: !7861, file: !7860, line: 79, baseType: !7, size: 32, offset: 128)
!7870 = !DILocation(line: 766, column: 24, scope: !7854)
!7871 = !DILocation(line: 767, column: 27, scope: !7854)
!7872 = !DILocation(line: 767, column: 31, scope: !7854)
!7873 = !DILocation(line: 767, column: 7, scope: !7854)
!7874 = !DILocation(line: 768, column: 7, scope: !7854)
!7875 = !DILocation(line: 768, column: 24, scope: !7854)
!7876 = !DILocation(line: 768, column: 22, scope: !7854)
!7877 = !DILocation(line: 769, column: 12, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !7879, file: !3, line: 769, column: 12)
!7879 = distinct !DILexicalBlock(scope: !7854, file: !3, line: 768, column: 54)
!7880 = !DILocation(line: 769, column: 20, scope: !7878)
!7881 = !DILocation(line: 769, column: 32, scope: !7878)
!7882 = !DILocation(line: 769, column: 26, scope: !7878)
!7883 = !DILocation(line: 769, column: 23, scope: !7878)
!7884 = !DILocation(line: 769, column: 12, scope: !7879)
!7885 = !DILocation(line: 769, column: 36, scope: !7878)
!7886 = !DILocation(line: 769, column: 44, scope: !7878)
!7887 = !DILocation(line: 769, column: 47, scope: !7878)
!7888 = distinct !{!7888, !7874, !7889}
!7889 = !DILocation(line: 770, column: 7, scope: !7854)
!7890 = !DILocation(line: 771, column: 6, scope: !7854)
!7891 = !DILocation(line: 772, column: 5, scope: !7845)
!7892 = !DILocation(line: 773, column: 14, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7840, file: !3, line: 773, column: 14)
!7894 = !DILocation(line: 773, column: 18, scope: !7893)
!7895 = !DILocation(line: 773, column: 28, scope: !7893)
!7896 = !DILocation(line: 773, column: 14, scope: !7840)
!7897 = !DILocalVariable(name: "sbuts", scope: !7898, file: !3, line: 774, type: !4926)
!7898 = distinct !DILexicalBlock(scope: !7893, file: !3, line: 773, column: 43)
!7899 = !DILocation(line: 774, column: 17, scope: !7898)
!7900 = !DILocation(line: 774, column: 38, scope: !7898)
!7901 = !DILocation(line: 774, column: 25, scope: !7898)
!7902 = !DILocation(line: 776, column: 10, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7898, file: !3, line: 776, column: 10)
!7904 = !DILocation(line: 776, column: 17, scope: !7903)
!7905 = !DILocation(line: 776, column: 32, scope: !7903)
!7906 = !DILocation(line: 776, column: 26, scope: !7903)
!7907 = !DILocation(line: 776, column: 23, scope: !7903)
!7908 = !DILocation(line: 776, column: 10, scope: !7898)
!7909 = !DILocation(line: 777, column: 7, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7903, file: !3, line: 776, column: 36)
!7911 = !DILocation(line: 777, column: 14, scope: !7910)
!7912 = !DILocation(line: 777, column: 19, scope: !7910)
!7913 = !DILocation(line: 778, column: 7, scope: !7910)
!7914 = !DILocation(line: 778, column: 14, scope: !7910)
!7915 = !DILocation(line: 778, column: 20, scope: !7910)
!7916 = !DILocation(line: 779, column: 6, scope: !7910)
!7917 = !DILocation(line: 780, column: 5, scope: !7898)
!7918 = !DILocation(line: 781, column: 14, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !7893, file: !3, line: 781, column: 14)
!7920 = !DILocation(line: 781, column: 18, scope: !7919)
!7921 = !DILocation(line: 781, column: 28, scope: !7919)
!7922 = !DILocation(line: 781, column: 14, scope: !7893)
!7923 = !DILocalVariable(name: "snode", scope: !7924, file: !3, line: 782, type: !4952)
!7924 = distinct !DILexicalBlock(scope: !7919, file: !3, line: 781, column: 43)
!7925 = !DILocation(line: 782, column: 17, scope: !7924)
!7926 = !DILocation(line: 782, column: 38, scope: !7924)
!7927 = !DILocation(line: 782, column: 25, scope: !7924)
!7928 = !DILocation(line: 784, column: 10, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7924, file: !3, line: 784, column: 10)
!7930 = !DILocation(line: 784, column: 17, scope: !7929)
!7931 = !DILocation(line: 784, column: 31, scope: !7929)
!7932 = !DILocation(line: 784, column: 25, scope: !7929)
!7933 = !DILocation(line: 784, column: 22, scope: !7929)
!7934 = !DILocation(line: 784, column: 10, scope: !7924)
!7935 = !DILocation(line: 785, column: 7, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7929, file: !3, line: 784, column: 35)
!7937 = !DILocation(line: 785, column: 14, scope: !7936)
!7938 = !DILocation(line: 785, column: 19, scope: !7936)
!7939 = !DILocation(line: 786, column: 7, scope: !7936)
!7940 = !DILocation(line: 786, column: 14, scope: !7936)
!7941 = !DILocation(line: 786, column: 19, scope: !7936)
!7942 = !DILocation(line: 787, column: 6, scope: !7936)
!7943 = !DILocation(line: 788, column: 5, scope: !7924)
!7944 = !DILocation(line: 789, column: 4, scope: !7686)
!7945 = !DILocation(line: 719, column: 44, scope: !7682)
!7946 = !DILocation(line: 719, column: 48, scope: !7682)
!7947 = !DILocation(line: 719, column: 42, scope: !7682)
!7948 = !DILocation(line: 719, column: 4, scope: !7682)
!7949 = distinct !{!7949, !7683, !7950}
!7950 = !DILocation(line: 789, column: 4, scope: !7676)
!7951 = !DILocation(line: 791, column: 9, scope: !7673)
!7952 = !DILocation(line: 791, column: 13, scope: !7673)
!7953 = !DILocation(line: 791, column: 7, scope: !7673)
!7954 = distinct !{!7954, !7670, !7955}
!7955 = !DILocation(line: 792, column: 3, scope: !7619)
!7956 = !DILocation(line: 793, column: 8, scope: !7619)
!7957 = !DILocation(line: 793, column: 12, scope: !7619)
!7958 = !DILocation(line: 793, column: 15, scope: !7619)
!7959 = !DILocation(line: 793, column: 6, scope: !7619)
!7960 = distinct !{!7960, !7616, !7961}
!7961 = !DILocation(line: 794, column: 2, scope: !6304)
!7962 = !DILocation(line: 797, column: 10, scope: !6304)
!7963 = !DILocation(line: 797, column: 17, scope: !6304)
!7964 = !DILocation(line: 797, column: 23, scope: !6304)
!7965 = !DILocation(line: 797, column: 8, scope: !6304)
!7966 = !DILocation(line: 798, column: 2, scope: !6304)
!7967 = !DILocation(line: 798, column: 9, scope: !6304)
!7968 = !DILocation(line: 799, column: 27, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 798, column: 16)
!7970 = !DILocation(line: 799, column: 34, scope: !7969)
!7971 = !DILocation(line: 799, column: 3, scope: !7969)
!7972 = !DILocation(line: 800, column: 11, scope: !7969)
!7973 = !DILocation(line: 800, column: 18, scope: !7969)
!7974 = !DILocation(line: 800, column: 21, scope: !7969)
!7975 = !DILocation(line: 800, column: 9, scope: !7969)
!7976 = distinct !{!7976, !7966, !7977}
!7977 = !DILocation(line: 801, column: 2, scope: !6304)
!7978 = !DILocation(line: 804, column: 11, scope: !6304)
!7979 = !DILocation(line: 804, column: 18, scope: !6304)
!7980 = !DILocation(line: 804, column: 25, scope: !6304)
!7981 = !DILocation(line: 804, column: 9, scope: !6304)
!7982 = !DILocation(line: 805, column: 2, scope: !6304)
!7983 = !DILocation(line: 805, column: 9, scope: !6304)
!7984 = !DILocation(line: 806, column: 7, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7986, file: !3, line: 806, column: 7)
!7986 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 805, column: 17)
!7987 = !DILocation(line: 806, column: 15, scope: !7985)
!7988 = !DILocation(line: 806, column: 25, scope: !7985)
!7989 = !DILocation(line: 806, column: 22, scope: !7985)
!7990 = !DILocation(line: 806, column: 7, scope: !7986)
!7991 = !DILocation(line: 807, column: 4, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7985, file: !3, line: 806, column: 29)
!7993 = !DILocation(line: 807, column: 12, scope: !7992)
!7994 = !DILocation(line: 807, column: 19, scope: !7992)
!7995 = !DILocation(line: 808, column: 3, scope: !7992)
!7996 = !DILocation(line: 809, column: 12, scope: !7986)
!7997 = !DILocation(line: 809, column: 20, scope: !7986)
!7998 = !DILocation(line: 809, column: 23, scope: !7986)
!7999 = !DILocation(line: 809, column: 10, scope: !7986)
!8000 = distinct !{!8000, !7982, !8001}
!8001 = !DILocation(line: 810, column: 2, scope: !6304)
!8002 = !DILocation(line: 811, column: 1, scope: !6304)
!8003 = distinct !DISubprogram(name: "unlink_object__unlinkModifierLinks", scope: !3, file: !3, line: 414, type: !8004, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!8004 = !DISubroutineType(types: !8005)
!8005 = !{null, !592, !5166, !8006}
!8006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5166, size: 64)
!8007 = !DILocalVariable(name: "userData", arg: 1, scope: !8003, file: !3, line: 414, type: !592)
!8008 = !DILocation(line: 414, column: 54, scope: !8003)
!8009 = !DILocalVariable(name: "ob", arg: 2, scope: !8003, file: !3, line: 414, type: !5166)
!8010 = !DILocation(line: 414, column: 72, scope: !8003)
!8011 = !DILocalVariable(name: "obpoin", arg: 3, scope: !8003, file: !3, line: 414, type: !8006)
!8012 = !DILocation(line: 414, column: 85, scope: !8003)
!8013 = !DILocalVariable(name: "unlinkOb", scope: !8003, file: !3, line: 416, type: !5166)
!8014 = !DILocation(line: 416, column: 10, scope: !8003)
!8015 = !DILocation(line: 416, column: 21, scope: !8003)
!8016 = !DILocation(line: 418, column: 7, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !8003, file: !3, line: 418, column: 6)
!8018 = !DILocation(line: 418, column: 6, scope: !8017)
!8019 = !DILocation(line: 418, column: 17, scope: !8017)
!8020 = !DILocation(line: 418, column: 14, scope: !8017)
!8021 = !DILocation(line: 418, column: 6, scope: !8003)
!8022 = !DILocation(line: 419, column: 4, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !8017, file: !3, line: 418, column: 27)
!8024 = !DILocation(line: 419, column: 11, scope: !8023)
!8025 = !DILocation(line: 421, column: 22, scope: !8023)
!8026 = !DILocation(line: 421, column: 26, scope: !8023)
!8027 = !DILocation(line: 421, column: 3, scope: !8023)
!8028 = !DILocation(line: 422, column: 2, scope: !8023)
!8029 = !DILocation(line: 423, column: 1, scope: !8003)
!8030 = distinct !DISubprogram(name: "BKE_object_is_in_editmode", scope: !3, file: !3, line: 814, type: !8031, scopeLine: 815, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!8031 = !DISubroutineType(types: !8032)
!8032 = !{!1788, !5166}
!8033 = !DILocalVariable(name: "ob", arg: 1, scope: !8030, file: !3, line: 814, type: !5166)
!8034 = !DILocation(line: 814, column: 40, scope: !8030)
!8035 = !DILocation(line: 816, column: 6, scope: !8036)
!8036 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 816, column: 6)
!8037 = !DILocation(line: 816, column: 10, scope: !8036)
!8038 = !DILocation(line: 816, column: 15, scope: !8036)
!8039 = !DILocation(line: 816, column: 6, scope: !8030)
!8040 = !DILocation(line: 817, column: 3, scope: !8036)
!8041 = !DILocation(line: 819, column: 6, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 819, column: 6)
!8043 = !DILocation(line: 819, column: 10, scope: !8042)
!8044 = !DILocation(line: 819, column: 15, scope: !8042)
!8045 = !DILocation(line: 819, column: 6, scope: !8030)
!8046 = !DILocalVariable(name: "me", scope: !8047, file: !3, line: 820, type: !593)
!8047 = distinct !DILexicalBlock(scope: !8042, file: !3, line: 819, column: 27)
!8048 = !DILocation(line: 820, column: 9, scope: !8047)
!8049 = !DILocation(line: 820, column: 14, scope: !8047)
!8050 = !DILocation(line: 820, column: 18, scope: !8047)
!8051 = !DILocation(line: 821, column: 7, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8047, file: !3, line: 821, column: 7)
!8053 = !DILocation(line: 821, column: 11, scope: !8052)
!8054 = !DILocation(line: 821, column: 7, scope: !8047)
!8055 = !DILocation(line: 822, column: 4, scope: !8052)
!8056 = !DILocation(line: 823, column: 2, scope: !8047)
!8057 = !DILocation(line: 824, column: 11, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8042, file: !3, line: 824, column: 11)
!8059 = !DILocation(line: 824, column: 15, scope: !8058)
!8060 = !DILocation(line: 824, column: 20, scope: !8058)
!8061 = !DILocation(line: 824, column: 11, scope: !8042)
!8062 = !DILocalVariable(name: "arm", scope: !8063, file: !3, line: 825, type: !5168)
!8063 = distinct !DILexicalBlock(scope: !8058, file: !3, line: 824, column: 36)
!8064 = !DILocation(line: 825, column: 14, scope: !8063)
!8065 = !DILocation(line: 825, column: 20, scope: !8063)
!8066 = !DILocation(line: 825, column: 24, scope: !8063)
!8067 = !DILocation(line: 827, column: 7, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8063, file: !3, line: 827, column: 7)
!8069 = !DILocation(line: 827, column: 12, scope: !8068)
!8070 = !DILocation(line: 827, column: 7, scope: !8063)
!8071 = !DILocation(line: 828, column: 4, scope: !8068)
!8072 = !DILocation(line: 829, column: 2, scope: !8063)
!8073 = !DILocation(line: 830, column: 11, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8058, file: !3, line: 830, column: 11)
!8075 = !DILocation(line: 830, column: 15, scope: !8074)
!8076 = !DILocation(line: 830, column: 20, scope: !8074)
!8077 = !DILocation(line: 830, column: 11, scope: !8058)
!8078 = !DILocalVariable(name: "cu", scope: !8079, file: !3, line: 831, type: !4467)
!8079 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 830, column: 32)
!8080 = !DILocation(line: 831, column: 10, scope: !8079)
!8081 = !DILocation(line: 831, column: 15, scope: !8079)
!8082 = !DILocation(line: 831, column: 19, scope: !8079)
!8083 = !DILocation(line: 833, column: 7, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 833, column: 7)
!8085 = !DILocation(line: 833, column: 11, scope: !8084)
!8086 = !DILocation(line: 833, column: 7, scope: !8079)
!8087 = !DILocation(line: 834, column: 4, scope: !8084)
!8088 = !DILocation(line: 835, column: 2, scope: !8079)
!8089 = !DILocation(line: 836, column: 11, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 836, column: 11)
!8091 = !DILocation(line: 836, column: 15, scope: !8090)
!8092 = !DILocation(line: 836, column: 20, scope: !8090)
!8093 = !DILocation(line: 836, column: 11, scope: !8074)
!8094 = !DILocalVariable(name: "mb", scope: !8095, file: !3, line: 837, type: !4568)
!8095 = distinct !DILexicalBlock(scope: !8090, file: !3, line: 836, column: 33)
!8096 = !DILocation(line: 837, column: 13, scope: !8095)
!8097 = !DILocation(line: 837, column: 18, scope: !8095)
!8098 = !DILocation(line: 837, column: 22, scope: !8095)
!8099 = !DILocation(line: 839, column: 7, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 839, column: 7)
!8101 = !DILocation(line: 839, column: 11, scope: !8100)
!8102 = !DILocation(line: 839, column: 7, scope: !8095)
!8103 = !DILocation(line: 840, column: 4, scope: !8100)
!8104 = !DILocation(line: 841, column: 2, scope: !8095)
!8105 = !DILocation(line: 842, column: 11, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8090, file: !3, line: 842, column: 11)
!8107 = !DILocation(line: 842, column: 15, scope: !8106)
!8108 = !DILocation(line: 842, column: 20, scope: !8106)
!8109 = !DILocation(line: 842, column: 11, scope: !8090)
!8110 = !DILocalVariable(name: "lt", scope: !8111, file: !3, line: 843, type: !8112)
!8111 = distinct !DILexicalBlock(scope: !8106, file: !3, line: 842, column: 35)
!8112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8113, size: 64)
!8113 = !DIDerivedType(tag: DW_TAG_typedef, name: "Lattice", file: !8114, line: 72, baseType: !8115)
!8114 = !DIFile(filename: "blender/source/blender/makesdna/DNA_lattice_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Lattice", file: !8114, line: 52, size: 2240, elements: !8116)
!8116 = !{!8117, !8118, !8119, !8120, !8121, !8122, !8123, !8124, !8125, !8126, !8127, !8128, !8129, !8130, !8131, !8132, !8133, !8134, !8135, !8136, !8137, !8138, !8149, !8150, !8151, !8152, !8153}
!8117 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8115, file: !8114, line: 53, baseType: !599, size: 960)
!8118 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !8115, file: !8114, line: 54, baseType: !669, size: 64, offset: 960)
!8119 = !DIDerivedType(tag: DW_TAG_member, name: "pntsu", scope: !8115, file: !8114, line: 56, baseType: !632, size: 16, offset: 1024)
!8120 = !DIDerivedType(tag: DW_TAG_member, name: "pntsv", scope: !8115, file: !8114, line: 56, baseType: !632, size: 16, offset: 1040)
!8121 = !DIDerivedType(tag: DW_TAG_member, name: "pntsw", scope: !8115, file: !8114, line: 56, baseType: !632, size: 16, offset: 1056)
!8122 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8115, file: !8114, line: 56, baseType: !632, size: 16, offset: 1072)
!8123 = !DIDerivedType(tag: DW_TAG_member, name: "opntsu", scope: !8115, file: !8114, line: 57, baseType: !632, size: 16, offset: 1088)
!8124 = !DIDerivedType(tag: DW_TAG_member, name: "opntsv", scope: !8115, file: !8114, line: 57, baseType: !632, size: 16, offset: 1104)
!8125 = !DIDerivedType(tag: DW_TAG_member, name: "opntsw", scope: !8115, file: !8114, line: 57, baseType: !632, size: 16, offset: 1120)
!8126 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !8115, file: !8114, line: 57, baseType: !632, size: 16, offset: 1136)
!8127 = !DIDerivedType(tag: DW_TAG_member, name: "typeu", scope: !8115, file: !8114, line: 58, baseType: !619, size: 8, offset: 1152)
!8128 = !DIDerivedType(tag: DW_TAG_member, name: "typev", scope: !8115, file: !8114, line: 58, baseType: !619, size: 8, offset: 1160)
!8129 = !DIDerivedType(tag: DW_TAG_member, name: "typew", scope: !8115, file: !8114, line: 58, baseType: !619, size: 8, offset: 1168)
!8130 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !8115, file: !8114, line: 58, baseType: !619, size: 8, offset: 1176)
!8131 = !DIDerivedType(tag: DW_TAG_member, name: "actbp", scope: !8115, file: !8114, line: 59, baseType: !73, size: 32, offset: 1184)
!8132 = !DIDerivedType(tag: DW_TAG_member, name: "fu", scope: !8115, file: !8114, line: 61, baseType: !713, size: 32, offset: 1216)
!8133 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !8115, file: !8114, line: 61, baseType: !713, size: 32, offset: 1248)
!8134 = !DIDerivedType(tag: DW_TAG_member, name: "fw", scope: !8115, file: !8114, line: 61, baseType: !713, size: 32, offset: 1280)
!8135 = !DIDerivedType(tag: DW_TAG_member, name: "du", scope: !8115, file: !8114, line: 61, baseType: !713, size: 32, offset: 1312)
!8136 = !DIDerivedType(tag: DW_TAG_member, name: "dv", scope: !8115, file: !8114, line: 61, baseType: !713, size: 32, offset: 1344)
!8137 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !8115, file: !8114, line: 61, baseType: !713, size: 32, offset: 1376)
!8138 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !8115, file: !8114, line: 63, baseType: !8139, size: 64, offset: 1408)
!8139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8140, size: 64)
!8140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BPoint", file: !1704, line: 136, size: 288, elements: !8141)
!8141 = !{!8142, !8143, !8144, !8145, !8146, !8147, !8148}
!8142 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !8140, file: !1704, line: 137, baseType: !916, size: 128)
!8143 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !8140, file: !1704, line: 138, baseType: !713, size: 32, offset: 128)
!8144 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !8140, file: !1704, line: 138, baseType: !713, size: 32, offset: 160)
!8145 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !8140, file: !1704, line: 139, baseType: !632, size: 16, offset: 192)
!8146 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !8140, file: !1704, line: 139, baseType: !632, size: 16, offset: 208)
!8147 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !8140, file: !1704, line: 140, baseType: !713, size: 32, offset: 224)
!8148 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8140, file: !1704, line: 140, baseType: !713, size: 32, offset: 256)
!8149 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !8115, file: !8114, line: 65, baseType: !749, size: 64, offset: 1472)
!8150 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8115, file: !8114, line: 66, baseType: !753, size: 64, offset: 1536)
!8151 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !8115, file: !8114, line: 68, baseType: !1797, size: 64, offset: 1600)
!8152 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !8115, file: !8114, line: 69, baseType: !648, size: 512, offset: 1664)
!8153 = !DIDerivedType(tag: DW_TAG_member, name: "editlatt", scope: !8115, file: !8114, line: 71, baseType: !8154, size: 64, offset: 2176)
!8154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8155, size: 64)
!8155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditLatt", file: !8114, line: 44, size: 128, elements: !8156)
!8156 = !{!8157, !8159, !8160}
!8157 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !8155, file: !8114, line: 45, baseType: !8158, size: 64)
!8158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8115, size: 64)
!8159 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !8155, file: !8114, line: 47, baseType: !73, size: 32, offset: 64)
!8160 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8155, file: !8114, line: 49, baseType: !1725, size: 32, offset: 96)
!8161 = !DILocation(line: 843, column: 12, scope: !8111)
!8162 = !DILocation(line: 843, column: 17, scope: !8111)
!8163 = !DILocation(line: 843, column: 21, scope: !8111)
!8164 = !DILocation(line: 845, column: 7, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8111, file: !3, line: 845, column: 7)
!8166 = !DILocation(line: 845, column: 11, scope: !8165)
!8167 = !DILocation(line: 845, column: 7, scope: !8111)
!8168 = !DILocation(line: 846, column: 4, scope: !8165)
!8169 = !DILocation(line: 847, column: 2, scope: !8111)
!8170 = !DILocation(line: 848, column: 11, scope: !8171)
!8171 = distinct !DILexicalBlock(scope: !8106, file: !3, line: 848, column: 11)
!8172 = !DILocation(line: 848, column: 15, scope: !8171)
!8173 = !DILocation(line: 848, column: 20, scope: !8171)
!8174 = !DILocation(line: 848, column: 31, scope: !8171)
!8175 = !DILocation(line: 848, column: 34, scope: !8171)
!8176 = !DILocation(line: 848, column: 38, scope: !8171)
!8177 = !DILocation(line: 848, column: 43, scope: !8171)
!8178 = !DILocation(line: 848, column: 11, scope: !8106)
!8179 = !DILocalVariable(name: "cu", scope: !8180, file: !3, line: 849, type: !4467)
!8180 = distinct !DILexicalBlock(scope: !8171, file: !3, line: 848, column: 56)
!8181 = !DILocation(line: 849, column: 10, scope: !8180)
!8182 = !DILocation(line: 849, column: 15, scope: !8180)
!8183 = !DILocation(line: 849, column: 19, scope: !8180)
!8184 = !DILocation(line: 851, column: 7, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 851, column: 7)
!8186 = !DILocation(line: 851, column: 11, scope: !8185)
!8187 = !DILocation(line: 851, column: 7, scope: !8180)
!8188 = !DILocation(line: 852, column: 4, scope: !8185)
!8189 = !DILocation(line: 853, column: 2, scope: !8180)
!8190 = !DILocation(line: 854, column: 2, scope: !8030)
!8191 = !DILocation(line: 855, column: 1, scope: !8030)
!8192 = distinct !DISubprogram(name: "BKE_object_is_in_editmode_vgroup", scope: !3, file: !3, line: 857, type: !8031, scopeLine: 858, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!8193 = !DILocalVariable(name: "ob", arg: 1, scope: !8192, file: !3, line: 857, type: !5166)
!8194 = !DILocation(line: 857, column: 47, scope: !8192)
!8195 = !DILocation(line: 859, column: 10, scope: !8192)
!8196 = !DILocation(line: 859, column: 43, scope: !8192)
!8197 = !DILocation(line: 860, column: 36, scope: !8192)
!8198 = !DILocation(line: 860, column: 10, scope: !8192)
!8199 = !DILocation(line: 0, scope: !8192)
!8200 = !DILocation(line: 859, column: 9, scope: !8192)
!8201 = !DILocation(line: 859, column: 2, scope: !8192)
!8202 = distinct !DISubprogram(name: "BKE_object_is_in_wpaint_select_vert", scope: !3, file: !3, line: 863, type: !8031, scopeLine: 864, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!8203 = !DILocalVariable(name: "ob", arg: 1, scope: !8202, file: !3, line: 863, type: !5166)
!8204 = !DILocation(line: 863, column: 50, scope: !8202)
!8205 = !DILocation(line: 865, column: 6, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8202, file: !3, line: 865, column: 6)
!8207 = !DILocation(line: 865, column: 10, scope: !8206)
!8208 = !DILocation(line: 865, column: 15, scope: !8206)
!8209 = !DILocation(line: 865, column: 6, scope: !8202)
!8210 = !DILocalVariable(name: "me", scope: !8211, file: !3, line: 866, type: !593)
!8211 = distinct !DILexicalBlock(scope: !8206, file: !3, line: 865, column: 27)
!8212 = !DILocation(line: 866, column: 9, scope: !8211)
!8213 = !DILocation(line: 866, column: 14, scope: !8211)
!8214 = !DILocation(line: 866, column: 18, scope: !8211)
!8215 = !DILocation(line: 867, column: 12, scope: !8211)
!8216 = !DILocation(line: 867, column: 16, scope: !8211)
!8217 = !DILocation(line: 867, column: 21, scope: !8211)
!8218 = !DILocation(line: 867, column: 45, scope: !8211)
!8219 = !DILocation(line: 868, column: 12, scope: !8211)
!8220 = !DILocation(line: 868, column: 16, scope: !8211)
!8221 = !DILocation(line: 868, column: 28, scope: !8211)
!8222 = !DILocation(line: 868, column: 37, scope: !8211)
!8223 = !DILocation(line: 869, column: 12, scope: !8211)
!8224 = !DILocation(line: 869, column: 39, scope: !8211)
!8225 = !DILocation(line: 0, scope: !8211)
!8226 = !DILocation(line: 867, column: 10, scope: !8211)
!8227 = !DILocation(line: 867, column: 3, scope: !8211)
!8228 = !DILocation(line: 872, column: 2, scope: !8202)
!8229 = !DILocation(line: 873, column: 1, scope: !8202)
!8230 = distinct !DISubprogram(name: "BKE_object_exists_check", scope: !3, file: !3, line: 875, type: !8031, scopeLine: 876, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!8231 = !DILocalVariable(name: "obtest", arg: 1, scope: !8230, file: !3, line: 875, type: !5166)
!8232 = !DILocation(line: 875, column: 38, scope: !8230)
!8233 = !DILocalVariable(name: "ob", scope: !8230, file: !3, line: 877, type: !5166)
!8234 = !DILocation(line: 877, column: 10, scope: !8230)
!8235 = !DILocation(line: 879, column: 6, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8230, file: !3, line: 879, column: 6)
!8237 = !DILocation(line: 879, column: 13, scope: !8236)
!8238 = !DILocation(line: 879, column: 6, scope: !8230)
!8239 = !DILocation(line: 879, column: 22, scope: !8236)
!8240 = !DILocation(line: 881, column: 9, scope: !8230)
!8241 = !DILocation(line: 881, column: 15, scope: !8230)
!8242 = !DILocation(line: 881, column: 22, scope: !8230)
!8243 = !DILocation(line: 881, column: 7, scope: !8230)
!8244 = !DILocation(line: 881, column: 5, scope: !8230)
!8245 = !DILocation(line: 882, column: 2, scope: !8230)
!8246 = !DILocation(line: 882, column: 9, scope: !8230)
!8247 = !DILocation(line: 883, column: 7, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8249, file: !3, line: 883, column: 7)
!8249 = distinct !DILexicalBlock(scope: !8230, file: !3, line: 882, column: 13)
!8250 = !DILocation(line: 883, column: 13, scope: !8248)
!8251 = !DILocation(line: 883, column: 10, scope: !8248)
!8252 = !DILocation(line: 883, column: 7, scope: !8249)
!8253 = !DILocation(line: 883, column: 21, scope: !8248)
!8254 = !DILocation(line: 884, column: 8, scope: !8249)
!8255 = !DILocation(line: 884, column: 12, scope: !8249)
!8256 = !DILocation(line: 884, column: 15, scope: !8249)
!8257 = !DILocation(line: 884, column: 6, scope: !8249)
!8258 = distinct !{!8258, !8245, !8259}
!8259 = !DILocation(line: 885, column: 2, scope: !8230)
!8260 = !DILocation(line: 886, column: 2, scope: !8230)
!8261 = !DILocation(line: 887, column: 1, scope: !8230)
!8262 = distinct !DISubprogram(name: "BKE_object_obdata_add_from_type", scope: !3, file: !3, line: 891, type: !8263, scopeLine: 892, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!8263 = !DISubroutineType(types: !8264)
!8264 = !{!592, !6308, !73}
!8265 = !DILocalVariable(name: "bmain", arg: 1, scope: !8262, file: !3, line: 891, type: !6308)
!8266 = !DILocation(line: 891, column: 45, scope: !8262)
!8267 = !DILocalVariable(name: "type", arg: 2, scope: !8262, file: !3, line: 891, type: !73)
!8268 = !DILocation(line: 891, column: 56, scope: !8262)
!8269 = !DILocation(line: 893, column: 10, scope: !8262)
!8270 = !DILocation(line: 893, column: 2, scope: !8262)
!8271 = !DILocation(line: 894, column: 42, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8262, file: !3, line: 893, column: 16)
!8273 = !DILocation(line: 894, column: 29, scope: !8272)
!8274 = !DILocation(line: 894, column: 22, scope: !8272)
!8275 = !DILocation(line: 895, column: 43, scope: !8272)
!8276 = !DILocation(line: 895, column: 29, scope: !8272)
!8277 = !DILocation(line: 895, column: 22, scope: !8272)
!8278 = !DILocation(line: 896, column: 43, scope: !8272)
!8279 = !DILocation(line: 896, column: 29, scope: !8272)
!8280 = !DILocation(line: 896, column: 22, scope: !8272)
!8281 = !DILocation(line: 897, column: 43, scope: !8272)
!8282 = !DILocation(line: 897, column: 29, scope: !8272)
!8283 = !DILocation(line: 897, column: 22, scope: !8272)
!8284 = !DILocation(line: 898, column: 43, scope: !8272)
!8285 = !DILocation(line: 898, column: 29, scope: !8272)
!8286 = !DILocation(line: 898, column: 22, scope: !8272)
!8287 = !DILocation(line: 899, column: 44, scope: !8272)
!8288 = !DILocation(line: 899, column: 29, scope: !8272)
!8289 = !DILocation(line: 899, column: 22, scope: !8272)
!8290 = !DILocation(line: 900, column: 42, scope: !8272)
!8291 = !DILocation(line: 900, column: 29, scope: !8272)
!8292 = !DILocation(line: 900, column: 22, scope: !8272)
!8293 = !DILocation(line: 901, column: 45, scope: !8272)
!8294 = !DILocation(line: 901, column: 29, scope: !8272)
!8295 = !DILocation(line: 901, column: 22, scope: !8272)
!8296 = !DILocation(line: 902, column: 46, scope: !8272)
!8297 = !DILocation(line: 902, column: 29, scope: !8272)
!8298 = !DILocation(line: 902, column: 22, scope: !8272)
!8299 = !DILocation(line: 903, column: 45, scope: !8272)
!8300 = !DILocation(line: 903, column: 29, scope: !8272)
!8301 = !DILocation(line: 903, column: 22, scope: !8272)
!8302 = !DILocation(line: 904, column: 22, scope: !8272)
!8303 = !DILocation(line: 906, column: 78, scope: !8272)
!8304 = !DILocation(line: 906, column: 4, scope: !8272)
!8305 = !DILocation(line: 907, column: 4, scope: !8272)
!8306 = !DILocation(line: 909, column: 1, scope: !8262)
!8307 = distinct !DISubprogram(name: "BKE_object_add_only_object", scope: !3, file: !3, line: 932, type: !8308, scopeLine: 933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!8308 = !DISubroutineType(types: !8309)
!8309 = !{!966, !6308, !73, !2669}
!8310 = !DILocalVariable(name: "bmain", arg: 1, scope: !8307, file: !3, line: 932, type: !6308)
!8311 = !DILocation(line: 932, column: 42, scope: !8307)
!8312 = !DILocalVariable(name: "type", arg: 2, scope: !8307, file: !3, line: 932, type: !73)
!8313 = !DILocation(line: 932, column: 53, scope: !8307)
!8314 = !DILocalVariable(name: "name", arg: 3, scope: !8307, file: !3, line: 932, type: !2669)
!8315 = !DILocation(line: 932, column: 71, scope: !8307)
!8316 = !DILocalVariable(name: "ob", scope: !8307, file: !3, line: 934, type: !5166)
!8317 = !DILocation(line: 934, column: 10, scope: !8307)
!8318 = !DILocation(line: 936, column: 7, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8307, file: !3, line: 936, column: 6)
!8320 = !DILocation(line: 936, column: 6, scope: !8307)
!8321 = !DILocation(line: 937, column: 29, scope: !8319)
!8322 = !DILocation(line: 937, column: 10, scope: !8319)
!8323 = !DILocation(line: 937, column: 8, scope: !8319)
!8324 = !DILocation(line: 937, column: 3, scope: !8319)
!8325 = !DILocation(line: 939, column: 26, scope: !8307)
!8326 = !DILocation(line: 939, column: 40, scope: !8307)
!8327 = !DILocation(line: 939, column: 7, scope: !8307)
!8328 = !DILocation(line: 939, column: 5, scope: !8307)
!8329 = !DILocation(line: 942, column: 13, scope: !8307)
!8330 = !DILocation(line: 942, column: 2, scope: !8307)
!8331 = !DILocation(line: 942, column: 6, scope: !8307)
!8332 = !DILocation(line: 942, column: 11, scope: !8307)
!8333 = !DILocation(line: 944, column: 28, scope: !8307)
!8334 = !DILocation(line: 944, column: 32, scope: !8307)
!8335 = !DILocation(line: 944, column: 39, scope: !8307)
!8336 = !DILocation(line: 944, column: 15, scope: !8307)
!8337 = !DILocation(line: 944, column: 19, scope: !8307)
!8338 = !DILocation(line: 944, column: 26, scope: !8307)
!8339 = !DILocation(line: 944, column: 2, scope: !8307)
!8340 = !DILocation(line: 944, column: 6, scope: !8307)
!8341 = !DILocation(line: 944, column: 13, scope: !8307)
!8342 = !DILocation(line: 945, column: 2, scope: !8307)
!8343 = !DILocation(line: 945, column: 6, scope: !8307)
!8344 = !DILocation(line: 945, column: 13, scope: !8307)
!8345 = !DILocation(line: 947, column: 30, scope: !8307)
!8346 = !DILocation(line: 947, column: 34, scope: !8307)
!8347 = !DILocation(line: 947, column: 42, scope: !8307)
!8348 = !DILocation(line: 947, column: 16, scope: !8307)
!8349 = !DILocation(line: 947, column: 20, scope: !8307)
!8350 = !DILocation(line: 947, column: 28, scope: !8307)
!8351 = !DILocation(line: 947, column: 2, scope: !8307)
!8352 = !DILocation(line: 947, column: 6, scope: !8307)
!8353 = !DILocation(line: 947, column: 14, scope: !8307)
!8354 = !DILocation(line: 948, column: 34, scope: !8307)
!8355 = !DILocation(line: 948, column: 38, scope: !8307)
!8356 = !DILocation(line: 948, column: 48, scope: !8307)
!8357 = !DILocation(line: 948, column: 18, scope: !8307)
!8358 = !DILocation(line: 948, column: 22, scope: !8307)
!8359 = !DILocation(line: 948, column: 32, scope: !8307)
!8360 = !DILocation(line: 948, column: 2, scope: !8307)
!8361 = !DILocation(line: 948, column: 6, scope: !8307)
!8362 = !DILocation(line: 948, column: 16, scope: !8307)
!8363 = !DILocation(line: 953, column: 2, scope: !8307)
!8364 = !DILocation(line: 953, column: 6, scope: !8307)
!8365 = !DILocation(line: 953, column: 14, scope: !8307)
!8366 = !DILocation(line: 955, column: 18, scope: !8307)
!8367 = !DILocation(line: 955, column: 22, scope: !8307)
!8368 = !DILocation(line: 955, column: 32, scope: !8307)
!8369 = !DILocation(line: 955, column: 36, scope: !8307)
!8370 = !DILocation(line: 955, column: 2, scope: !8307)
!8371 = !DILocation(line: 956, column: 18, scope: !8307)
!8372 = !DILocation(line: 956, column: 22, scope: !8307)
!8373 = !DILocation(line: 956, column: 33, scope: !8307)
!8374 = !DILocation(line: 956, column: 37, scope: !8307)
!8375 = !DILocation(line: 956, column: 2, scope: !8307)
!8376 = !DILocation(line: 958, column: 10, scope: !8307)
!8377 = !DILocation(line: 958, column: 14, scope: !8307)
!8378 = !DILocation(line: 958, column: 2, scope: !8307)
!8379 = !DILocation(line: 959, column: 10, scope: !8307)
!8380 = !DILocation(line: 959, column: 14, scope: !8307)
!8381 = !DILocation(line: 959, column: 2, scope: !8307)
!8382 = !DILocation(line: 962, column: 2, scope: !8307)
!8383 = !DILocation(line: 962, column: 6, scope: !8307)
!8384 = !DILocation(line: 962, column: 18, scope: !8307)
!8385 = !DILocation(line: 964, column: 10, scope: !8307)
!8386 = !DILocation(line: 964, column: 14, scope: !8307)
!8387 = !DILocation(line: 964, column: 2, scope: !8307)
!8388 = !DILocation(line: 965, column: 10, scope: !8307)
!8389 = !DILocation(line: 965, column: 14, scope: !8307)
!8390 = !DILocation(line: 965, column: 2, scope: !8307)
!8391 = !DILocation(line: 966, column: 10, scope: !8307)
!8392 = !DILocation(line: 966, column: 14, scope: !8307)
!8393 = !DILocation(line: 966, column: 2, scope: !8307)
!8394 = !DILocation(line: 967, column: 2, scope: !8307)
!8395 = !DILocation(line: 967, column: 6, scope: !8307)
!8396 = !DILocation(line: 967, column: 9, scope: !8307)
!8397 = !DILocation(line: 968, column: 2, scope: !8307)
!8398 = !DILocation(line: 968, column: 6, scope: !8307)
!8399 = !DILocation(line: 968, column: 21, scope: !8307)
!8400 = !DILocation(line: 969, column: 2, scope: !8307)
!8401 = !DILocation(line: 969, column: 6, scope: !8307)
!8402 = !DILocation(line: 969, column: 21, scope: !8307)
!8403 = !DILocation(line: 971, column: 6, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8307, file: !3, line: 971, column: 6)
!8405 = !DILocation(line: 971, column: 6, scope: !8307)
!8406 = !DILocation(line: 972, column: 3, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8404, file: !3, line: 971, column: 50)
!8408 = !DILocation(line: 972, column: 7, scope: !8407)
!8409 = !DILocation(line: 972, column: 17, scope: !8407)
!8410 = !DILocation(line: 973, column: 3, scope: !8407)
!8411 = !DILocation(line: 973, column: 7, scope: !8407)
!8412 = !DILocation(line: 973, column: 14, scope: !8407)
!8413 = !DILocation(line: 974, column: 2, scope: !8407)
!8414 = !DILocation(line: 976, column: 3, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !8404, file: !3, line: 975, column: 7)
!8416 = !DILocation(line: 976, column: 7, scope: !8415)
!8417 = !DILocation(line: 976, column: 17, scope: !8415)
!8418 = !DILocation(line: 977, column: 3, scope: !8415)
!8419 = !DILocation(line: 977, column: 7, scope: !8415)
!8420 = !DILocation(line: 977, column: 14, scope: !8415)
!8421 = !DILocation(line: 980, column: 2, scope: !8307)
!8422 = !DILocation(line: 980, column: 6, scope: !8307)
!8423 = !DILocation(line: 980, column: 12, scope: !8307)
!8424 = !DILocation(line: 980, column: 17, scope: !8307)
!8425 = !DILocation(line: 980, column: 21, scope: !8307)
!8426 = !DILocation(line: 980, column: 28, scope: !8307)
!8427 = !DILocation(line: 981, column: 2, scope: !8307)
!8428 = !DILocation(line: 981, column: 6, scope: !8307)
!8429 = !DILocation(line: 981, column: 13, scope: !8307)
!8430 = !DILocation(line: 981, column: 18, scope: !8307)
!8431 = !DILocation(line: 981, column: 22, scope: !8307)
!8432 = !DILocation(line: 981, column: 29, scope: !8307)
!8433 = !DILocation(line: 982, column: 2, scope: !8307)
!8434 = !DILocation(line: 982, column: 6, scope: !8307)
!8435 = !DILocation(line: 982, column: 17, scope: !8307)
!8436 = !DILocation(line: 985, column: 13, scope: !8307)
!8437 = !DILocation(line: 985, column: 17, scope: !8307)
!8438 = !DILocation(line: 985, column: 25, scope: !8307)
!8439 = !DILocation(line: 985, column: 2, scope: !8307)
!8440 = !DILocation(line: 985, column: 6, scope: !8307)
!8441 = !DILocation(line: 985, column: 11, scope: !8307)
!8442 = !DILocation(line: 986, column: 2, scope: !8307)
!8443 = !DILocation(line: 986, column: 6, scope: !8307)
!8444 = !DILocation(line: 986, column: 17, scope: !8307)
!8445 = !DILocation(line: 987, column: 2, scope: !8307)
!8446 = !DILocation(line: 987, column: 6, scope: !8307)
!8447 = !DILocation(line: 987, column: 14, scope: !8307)
!8448 = !DILocation(line: 988, column: 2, scope: !8307)
!8449 = !DILocation(line: 988, column: 6, scope: !8307)
!8450 = !DILocation(line: 988, column: 15, scope: !8307)
!8451 = !DILocation(line: 989, column: 2, scope: !8307)
!8452 = !DILocation(line: 989, column: 6, scope: !8307)
!8453 = !DILocation(line: 989, column: 29, scope: !8307)
!8454 = !DILocation(line: 990, column: 2, scope: !8307)
!8455 = !DILocation(line: 990, column: 6, scope: !8307)
!8456 = !DILocation(line: 990, column: 29, scope: !8307)
!8457 = !DILocation(line: 991, column: 2, scope: !8307)
!8458 = !DILocation(line: 991, column: 6, scope: !8307)
!8459 = !DILocation(line: 991, column: 29, scope: !8307)
!8460 = !DILocation(line: 992, column: 2, scope: !8307)
!8461 = !DILocation(line: 992, column: 6, scope: !8307)
!8462 = !DILocation(line: 992, column: 15, scope: !8307)
!8463 = !DILocation(line: 993, column: 2, scope: !8307)
!8464 = !DILocation(line: 993, column: 6, scope: !8307)
!8465 = !DILocation(line: 993, column: 13, scope: !8307)
!8466 = !DILocation(line: 994, column: 2, scope: !8307)
!8467 = !DILocation(line: 994, column: 6, scope: !8307)
!8468 = !DILocation(line: 994, column: 17, scope: !8307)
!8469 = !DILocation(line: 995, column: 2, scope: !8307)
!8470 = !DILocation(line: 995, column: 6, scope: !8307)
!8471 = !DILocation(line: 995, column: 12, scope: !8307)
!8472 = !DILocation(line: 996, column: 2, scope: !8307)
!8473 = !DILocation(line: 996, column: 6, scope: !8307)
!8474 = !DILocation(line: 996, column: 18, scope: !8307)
!8475 = !DILocation(line: 997, column: 2, scope: !8307)
!8476 = !DILocation(line: 997, column: 6, scope: !8307)
!8477 = !DILocation(line: 997, column: 18, scope: !8307)
!8478 = !DILocation(line: 998, column: 2, scope: !8307)
!8479 = !DILocation(line: 998, column: 6, scope: !8307)
!8480 = !DILocation(line: 998, column: 17, scope: !8307)
!8481 = !DILocation(line: 999, column: 2, scope: !8307)
!8482 = !DILocation(line: 999, column: 6, scope: !8307)
!8483 = !DILocation(line: 999, column: 17, scope: !8307)
!8484 = !DILocation(line: 1000, column: 2, scope: !8307)
!8485 = !DILocation(line: 1000, column: 6, scope: !8307)
!8486 = !DILocation(line: 1000, column: 16, scope: !8307)
!8487 = !DILocation(line: 1001, column: 2, scope: !8307)
!8488 = !DILocation(line: 1001, column: 6, scope: !8307)
!8489 = !DILocation(line: 1001, column: 15, scope: !8307)
!8490 = !DILocation(line: 1004, column: 2, scope: !8307)
!8491 = !DILocation(line: 1004, column: 6, scope: !8307)
!8492 = !DILocation(line: 1004, column: 23, scope: !8307)
!8493 = !DILocation(line: 1006, column: 22, scope: !8307)
!8494 = !DILocation(line: 1006, column: 26, scope: !8307)
!8495 = !DILocation(line: 1006, column: 2, scope: !8307)
!8496 = !DILocation(line: 1009, column: 25, scope: !8307)
!8497 = !DILocation(line: 1009, column: 29, scope: !8307)
!8498 = !DILocation(line: 1009, column: 2, scope: !8307)
!8499 = !DILocation(line: 1011, column: 9, scope: !8307)
!8500 = !DILocation(line: 1011, column: 2, scope: !8307)
!8501 = distinct !DISubprogram(name: "get_obdata_defname", scope: !3, file: !3, line: 911, type: !8502, scopeLine: 912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!8502 = !DISubroutineType(types: !8503)
!8503 = !{!2669, !73}
!8504 = !DILocalVariable(name: "type", arg: 1, scope: !8501, file: !3, line: 911, type: !73)
!8505 = !DILocation(line: 911, column: 43, scope: !8501)
!8506 = !DILocation(line: 913, column: 10, scope: !8501)
!8507 = !DILocation(line: 913, column: 2, scope: !8501)
!8508 = !DILocation(line: 914, column: 17, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 913, column: 16)
!8510 = !DILocation(line: 915, column: 18, scope: !8509)
!8511 = !DILocation(line: 916, column: 17, scope: !8509)
!8512 = !DILocation(line: 917, column: 17, scope: !8509)
!8513 = !DILocation(line: 918, column: 18, scope: !8509)
!8514 = !DILocation(line: 919, column: 19, scope: !8509)
!8515 = !DILocation(line: 920, column: 17, scope: !8509)
!8516 = !DILocation(line: 921, column: 20, scope: !8509)
!8517 = !DILocation(line: 922, column: 21, scope: !8509)
!8518 = !DILocation(line: 923, column: 20, scope: !8509)
!8519 = !DILocation(line: 924, column: 18, scope: !8509)
!8520 = !DILocation(line: 926, column: 65, scope: !8509)
!8521 = !DILocation(line: 926, column: 4, scope: !8509)
!8522 = !DILocation(line: 927, column: 4, scope: !8509)
!8523 = !DILocation(line: 929, column: 1, scope: !8501)
!8524 = distinct !DISubprogram(name: "BLI_listbase_clear", scope: !8525, file: !8525, line: 89, type: !8526, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!8525 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8526 = !DISubroutineType(types: !8527)
!8527 = !{null, !2681}
!8528 = !DILocalVariable(name: "lb", arg: 1, scope: !8524, file: !8525, line: 89, type: !2681)
!8529 = !DILocation(line: 89, column: 53, scope: !8524)
!8530 = !DILocation(line: 89, column: 71, scope: !8524)
!8531 = !DILocation(line: 89, column: 75, scope: !8524)
!8532 = !DILocation(line: 89, column: 80, scope: !8524)
!8533 = !DILocation(line: 89, column: 59, scope: !8524)
!8534 = !DILocation(line: 89, column: 63, scope: !8524)
!8535 = !DILocation(line: 89, column: 69, scope: !8524)
!8536 = !DILocation(line: 89, column: 93, scope: !8524)
!8537 = distinct !DISubprogram(name: "BKE_object_add", scope: !3, file: !3, line: 1016, type: !8538, scopeLine: 1017, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!8538 = !DISubroutineType(types: !8539)
!8539 = !{!966, !6308, !6411, !73}
!8540 = !DILocalVariable(name: "bmain", arg: 1, scope: !8537, file: !3, line: 1016, type: !6308)
!8541 = !DILocation(line: 1016, column: 30, scope: !8537)
!8542 = !DILocalVariable(name: "scene", arg: 2, scope: !8537, file: !3, line: 1016, type: !6411)
!8543 = !DILocation(line: 1016, column: 44, scope: !8537)
!8544 = !DILocalVariable(name: "type", arg: 3, scope: !8537, file: !3, line: 1016, type: !73)
!8545 = !DILocation(line: 1016, column: 55, scope: !8537)
!8546 = !DILocalVariable(name: "ob", scope: !8537, file: !3, line: 1018, type: !5166)
!8547 = !DILocation(line: 1018, column: 10, scope: !8537)
!8548 = !DILocalVariable(name: "base", scope: !8537, file: !3, line: 1019, type: !5321)
!8549 = !DILocation(line: 1019, column: 8, scope: !8537)
!8550 = !DILocalVariable(name: "name", scope: !8537, file: !3, line: 1020, type: !628)
!8551 = !DILocation(line: 1020, column: 7, scope: !8537)
!8552 = !DILocation(line: 1022, column: 14, scope: !8537)
!8553 = !DILocation(line: 1022, column: 39, scope: !8537)
!8554 = !DILocation(line: 1022, column: 20, scope: !8537)
!8555 = !DILocation(line: 1022, column: 2, scope: !8537)
!8556 = !DILocation(line: 1023, column: 34, scope: !8537)
!8557 = !DILocation(line: 1023, column: 41, scope: !8537)
!8558 = !DILocation(line: 1023, column: 47, scope: !8537)
!8559 = !DILocation(line: 1023, column: 7, scope: !8537)
!8560 = !DILocation(line: 1023, column: 5, scope: !8537)
!8561 = !DILocation(line: 1025, column: 45, scope: !8537)
!8562 = !DILocation(line: 1025, column: 52, scope: !8537)
!8563 = !DILocation(line: 1025, column: 13, scope: !8537)
!8564 = !DILocation(line: 1025, column: 2, scope: !8537)
!8565 = !DILocation(line: 1025, column: 6, scope: !8537)
!8566 = !DILocation(line: 1025, column: 11, scope: !8537)
!8567 = !DILocation(line: 1027, column: 12, scope: !8537)
!8568 = !DILocation(line: 1027, column: 19, scope: !8537)
!8569 = !DILocation(line: 1027, column: 2, scope: !8537)
!8570 = !DILocation(line: 1027, column: 6, scope: !8537)
!8571 = !DILocation(line: 1027, column: 10, scope: !8537)
!8572 = !DILocation(line: 1029, column: 28, scope: !8537)
!8573 = !DILocation(line: 1029, column: 35, scope: !8537)
!8574 = !DILocation(line: 1029, column: 9, scope: !8537)
!8575 = !DILocation(line: 1029, column: 7, scope: !8537)
!8576 = !DILocation(line: 1030, column: 30, scope: !8537)
!8577 = !DILocation(line: 1030, column: 2, scope: !8537)
!8578 = !DILocation(line: 1031, column: 24, scope: !8537)
!8579 = !DILocation(line: 1031, column: 31, scope: !8537)
!8580 = !DILocation(line: 1031, column: 2, scope: !8537)
!8581 = !DILocation(line: 1032, column: 23, scope: !8537)
!8582 = !DILocation(line: 1032, column: 31, scope: !8537)
!8583 = !DILocation(line: 1032, column: 35, scope: !8537)
!8584 = !DILocation(line: 1032, column: 2, scope: !8537)
!8585 = !DILocation(line: 1034, column: 9, scope: !8537)
!8586 = !DILocation(line: 1034, column: 2, scope: !8537)
!8587 = distinct !DISubprogram(name: "copy_softbody", scope: !3, file: !3, line: 1170, type: !8588, scopeLine: 1171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!8588 = !DISubroutineType(types: !8589)
!8589 = !{!4025, !8590, !1788}
!8590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8591, size: 64)
!8591 = !DIDerivedType(tag: DW_TAG_typedef, name: "SoftBody", file: !2376, line: 349, baseType: !4026)
!8592 = !DILocalVariable(name: "sb", arg: 1, scope: !8587, file: !3, line: 1170, type: !8590)
!8593 = !DILocation(line: 1170, column: 35, scope: !8587)
!8594 = !DILocalVariable(name: "copy_caches", arg: 2, scope: !8587, file: !3, line: 1170, type: !1788)
!8595 = !DILocation(line: 1170, column: 44, scope: !8587)
!8596 = !DILocalVariable(name: "sbn", scope: !8587, file: !3, line: 1172, type: !8590)
!8597 = !DILocation(line: 1172, column: 12, scope: !8587)
!8598 = !DILocation(line: 1174, column: 6, scope: !8599)
!8599 = distinct !DILexicalBlock(scope: !8587, file: !3, line: 1174, column: 6)
!8600 = !DILocation(line: 1174, column: 9, scope: !8599)
!8601 = !DILocation(line: 1174, column: 6, scope: !8587)
!8602 = !DILocation(line: 1174, column: 18, scope: !8599)
!8603 = !DILocation(line: 1176, column: 8, scope: !8587)
!8604 = !DILocation(line: 1176, column: 22, scope: !8587)
!8605 = !DILocation(line: 1176, column: 6, scope: !8587)
!8606 = !DILocation(line: 1178, column: 6, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8587, file: !3, line: 1178, column: 6)
!8608 = !DILocation(line: 1178, column: 18, scope: !8607)
!8609 = !DILocation(line: 1178, column: 6, scope: !8587)
!8610 = !DILocation(line: 1179, column: 20, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 1178, column: 28)
!8612 = !DILocation(line: 1179, column: 25, scope: !8611)
!8613 = !DILocation(line: 1179, column: 34, scope: !8611)
!8614 = !DILocation(line: 1179, column: 3, scope: !8611)
!8615 = !DILocation(line: 1179, column: 8, scope: !8611)
!8616 = !DILocation(line: 1179, column: 18, scope: !8611)
!8617 = !DILocation(line: 1180, column: 3, scope: !8611)
!8618 = !DILocation(line: 1180, column: 8, scope: !8611)
!8619 = !DILocation(line: 1180, column: 15, scope: !8611)
!8620 = !DILocation(line: 1181, column: 3, scope: !8611)
!8621 = !DILocation(line: 1181, column: 8, scope: !8611)
!8622 = !DILocation(line: 1181, column: 16, scope: !8611)
!8623 = !DILocation(line: 1182, column: 2, scope: !8611)
!8624 = !DILocation(line: 1184, column: 20, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 1183, column: 7)
!8626 = !DILocation(line: 1184, column: 24, scope: !8625)
!8627 = !DILocation(line: 1184, column: 3, scope: !8625)
!8628 = !DILocation(line: 1184, column: 8, scope: !8625)
!8629 = !DILocation(line: 1184, column: 18, scope: !8625)
!8630 = !DILocation(line: 1185, column: 19, scope: !8625)
!8631 = !DILocation(line: 1185, column: 23, scope: !8625)
!8632 = !DILocation(line: 1185, column: 3, scope: !8625)
!8633 = !DILocation(line: 1185, column: 8, scope: !8625)
!8634 = !DILocation(line: 1185, column: 17, scope: !8625)
!8635 = !DILocation(line: 1187, column: 7, scope: !8636)
!8636 = distinct !DILexicalBlock(scope: !8625, file: !3, line: 1187, column: 7)
!8637 = !DILocation(line: 1187, column: 12, scope: !8636)
!8638 = !DILocation(line: 1187, column: 7, scope: !8625)
!8639 = !DILocalVariable(name: "i", scope: !8640, file: !3, line: 1188, type: !73)
!8640 = distinct !DILexicalBlock(scope: !8636, file: !3, line: 1187, column: 20)
!8641 = !DILocation(line: 1188, column: 8, scope: !8640)
!8642 = !DILocation(line: 1190, column: 18, scope: !8640)
!8643 = !DILocation(line: 1190, column: 32, scope: !8640)
!8644 = !DILocation(line: 1190, column: 37, scope: !8640)
!8645 = !DILocation(line: 1190, column: 4, scope: !8640)
!8646 = !DILocation(line: 1190, column: 9, scope: !8640)
!8647 = !DILocation(line: 1190, column: 16, scope: !8640)
!8648 = !DILocation(line: 1192, column: 11, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8640, file: !3, line: 1192, column: 4)
!8650 = !DILocation(line: 1192, column: 9, scope: !8649)
!8651 = !DILocation(line: 1192, column: 16, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8649, file: !3, line: 1192, column: 4)
!8653 = !DILocation(line: 1192, column: 20, scope: !8652)
!8654 = !DILocation(line: 1192, column: 25, scope: !8652)
!8655 = !DILocation(line: 1192, column: 18, scope: !8652)
!8656 = !DILocation(line: 1192, column: 4, scope: !8649)
!8657 = !DILocation(line: 1193, column: 9, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8659, file: !3, line: 1193, column: 9)
!8659 = distinct !DILexicalBlock(scope: !8652, file: !3, line: 1192, column: 40)
!8660 = !DILocation(line: 1193, column: 14, scope: !8658)
!8661 = !DILocation(line: 1193, column: 21, scope: !8658)
!8662 = !DILocation(line: 1193, column: 24, scope: !8658)
!8663 = !DILocation(line: 1193, column: 9, scope: !8659)
!8664 = !DILocation(line: 1194, column: 31, scope: !8658)
!8665 = !DILocation(line: 1194, column: 45, scope: !8658)
!8666 = !DILocation(line: 1194, column: 50, scope: !8658)
!8667 = !DILocation(line: 1194, column: 57, scope: !8658)
!8668 = !DILocation(line: 1194, column: 60, scope: !8658)
!8669 = !DILocation(line: 1194, column: 6, scope: !8658)
!8670 = !DILocation(line: 1194, column: 11, scope: !8658)
!8671 = !DILocation(line: 1194, column: 18, scope: !8658)
!8672 = !DILocation(line: 1194, column: 21, scope: !8658)
!8673 = !DILocation(line: 1194, column: 29, scope: !8658)
!8674 = !DILocation(line: 1195, column: 4, scope: !8659)
!8675 = !DILocation(line: 1192, column: 36, scope: !8652)
!8676 = !DILocation(line: 1192, column: 4, scope: !8652)
!8677 = distinct !{!8677, !8656, !8678}
!8678 = !DILocation(line: 1195, column: 4, scope: !8649)
!8679 = !DILocation(line: 1196, column: 3, scope: !8640)
!8680 = !DILocation(line: 1198, column: 7, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8625, file: !3, line: 1198, column: 7)
!8682 = !DILocation(line: 1198, column: 11, scope: !8681)
!8683 = !DILocation(line: 1198, column: 7, scope: !8625)
!8684 = !DILocation(line: 1199, column: 19, scope: !8681)
!8685 = !DILocation(line: 1199, column: 33, scope: !8681)
!8686 = !DILocation(line: 1199, column: 37, scope: !8681)
!8687 = !DILocation(line: 1199, column: 4, scope: !8681)
!8688 = !DILocation(line: 1199, column: 9, scope: !8681)
!8689 = !DILocation(line: 1199, column: 17, scope: !8681)
!8690 = !DILocation(line: 1202, column: 2, scope: !8587)
!8691 = !DILocation(line: 1202, column: 7, scope: !8587)
!8692 = !DILocation(line: 1202, column: 12, scope: !8587)
!8693 = !DILocation(line: 1203, column: 16, scope: !8587)
!8694 = !DILocation(line: 1203, column: 21, scope: !8587)
!8695 = !DILocation(line: 1203, column: 33, scope: !8587)
!8696 = !DILocation(line: 1203, column: 2, scope: !8587)
!8697 = !DILocation(line: 1203, column: 7, scope: !8587)
!8698 = !DILocation(line: 1203, column: 14, scope: !8587)
!8699 = !DILocation(line: 1205, column: 2, scope: !8587)
!8700 = !DILocation(line: 1205, column: 7, scope: !8587)
!8701 = !DILocation(line: 1205, column: 15, scope: !8587)
!8702 = !DILocation(line: 1207, column: 43, scope: !8587)
!8703 = !DILocation(line: 1207, column: 48, scope: !8587)
!8704 = !DILocation(line: 1207, column: 59, scope: !8587)
!8705 = !DILocation(line: 1207, column: 63, scope: !8587)
!8706 = !DILocation(line: 1207, column: 73, scope: !8587)
!8707 = !DILocation(line: 1207, column: 20, scope: !8587)
!8708 = !DILocation(line: 1207, column: 2, scope: !8587)
!8709 = !DILocation(line: 1207, column: 7, scope: !8587)
!8710 = !DILocation(line: 1207, column: 18, scope: !8587)
!8711 = !DILocation(line: 1209, column: 6, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8587, file: !3, line: 1209, column: 6)
!8713 = !DILocation(line: 1209, column: 10, scope: !8712)
!8714 = !DILocation(line: 1209, column: 6, scope: !8587)
!8715 = !DILocation(line: 1210, column: 27, scope: !8712)
!8716 = !DILocation(line: 1210, column: 41, scope: !8712)
!8717 = !DILocation(line: 1210, column: 45, scope: !8712)
!8718 = !DILocation(line: 1210, column: 3, scope: !8712)
!8719 = !DILocation(line: 1210, column: 8, scope: !8712)
!8720 = !DILocation(line: 1210, column: 25, scope: !8712)
!8721 = !DILocation(line: 1212, column: 9, scope: !8587)
!8722 = !DILocation(line: 1212, column: 2, scope: !8587)
!8723 = !DILocation(line: 1213, column: 1, scope: !8587)
!8724 = distinct !DISubprogram(name: "copy_bulletsoftbody", scope: !3, file: !3, line: 1215, type: !8725, scopeLine: 1216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!8725 = !DISubroutineType(types: !8726)
!8726 = !{!3982, !8727}
!8727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8728, size: 64)
!8728 = !DIDerivedType(tag: DW_TAG_typedef, name: "BulletSoftBody", file: !2376, line: 252, baseType: !3983)
!8729 = !DILocalVariable(name: "bsb", arg: 1, scope: !8724, file: !3, line: 1215, type: !8727)
!8730 = !DILocation(line: 1215, column: 53, scope: !8724)
!8731 = !DILocalVariable(name: "bsbn", scope: !8724, file: !3, line: 1217, type: !8727)
!8732 = !DILocation(line: 1217, column: 18, scope: !8724)
!8733 = !DILocation(line: 1219, column: 6, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8724, file: !3, line: 1219, column: 6)
!8735 = !DILocation(line: 1219, column: 10, scope: !8734)
!8736 = !DILocation(line: 1219, column: 6, scope: !8724)
!8737 = !DILocation(line: 1220, column: 3, scope: !8734)
!8738 = !DILocation(line: 1221, column: 9, scope: !8724)
!8739 = !DILocation(line: 1221, column: 23, scope: !8724)
!8740 = !DILocation(line: 1221, column: 7, scope: !8724)
!8741 = !DILocation(line: 1223, column: 9, scope: !8724)
!8742 = !DILocation(line: 1223, column: 2, scope: !8724)
!8743 = !DILocation(line: 1224, column: 1, scope: !8724)
!8744 = distinct !DISubprogram(name: "copy_particlesystem", scope: !3, file: !3, line: 1226, type: !8745, scopeLine: 1227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!8745 = !DISubroutineType(types: !8746)
!8746 = !{!5351, !5351}
!8747 = !DILocalVariable(name: "psys", arg: 1, scope: !8744, file: !3, line: 1226, type: !5351)
!8748 = !DILocation(line: 1226, column: 60, scope: !8744)
!8749 = !DILocalVariable(name: "psysn", scope: !8744, file: !3, line: 1228, type: !5351)
!8750 = !DILocation(line: 1228, column: 18, scope: !8744)
!8751 = !DILocalVariable(name: "pa", scope: !8744, file: !3, line: 1229, type: !3077)
!8752 = !DILocation(line: 1229, column: 16, scope: !8744)
!8753 = !DILocalVariable(name: "p", scope: !8744, file: !3, line: 1230, type: !73)
!8754 = !DILocation(line: 1230, column: 6, scope: !8744)
!8755 = !DILocation(line: 1232, column: 10, scope: !8744)
!8756 = !DILocation(line: 1232, column: 24, scope: !8744)
!8757 = !DILocation(line: 1232, column: 8, scope: !8744)
!8758 = !DILocation(line: 1233, column: 21, scope: !8744)
!8759 = !DILocation(line: 1233, column: 35, scope: !8744)
!8760 = !DILocation(line: 1233, column: 41, scope: !8744)
!8761 = !DILocation(line: 1233, column: 2, scope: !8744)
!8762 = !DILocation(line: 1233, column: 9, scope: !8744)
!8763 = !DILocation(line: 1233, column: 19, scope: !8744)
!8764 = !DILocation(line: 1234, column: 17, scope: !8744)
!8765 = !DILocation(line: 1234, column: 31, scope: !8744)
!8766 = !DILocation(line: 1234, column: 37, scope: !8744)
!8767 = !DILocation(line: 1234, column: 2, scope: !8744)
!8768 = !DILocation(line: 1234, column: 9, scope: !8744)
!8769 = !DILocation(line: 1234, column: 15, scope: !8744)
!8770 = !DILocation(line: 1236, column: 6, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8744, file: !3, line: 1236, column: 6)
!8772 = !DILocation(line: 1236, column: 12, scope: !8771)
!8773 = !DILocation(line: 1236, column: 18, scope: !8771)
!8774 = !DILocation(line: 1236, column: 23, scope: !8771)
!8775 = !DILocation(line: 1236, column: 6, scope: !8744)
!8776 = !DILocation(line: 1237, column: 10, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8778, file: !3, line: 1237, column: 3)
!8778 = distinct !DILexicalBlock(scope: !8771, file: !3, line: 1236, column: 37)
!8779 = !DILocation(line: 1237, column: 20, scope: !8777)
!8780 = !DILocation(line: 1237, column: 27, scope: !8777)
!8781 = !DILocation(line: 1237, column: 18, scope: !8777)
!8782 = !DILocation(line: 1237, column: 8, scope: !8777)
!8783 = !DILocation(line: 1237, column: 38, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8777, file: !3, line: 1237, column: 3)
!8785 = !DILocation(line: 1237, column: 42, scope: !8784)
!8786 = !DILocation(line: 1237, column: 49, scope: !8784)
!8787 = !DILocation(line: 1237, column: 40, scope: !8784)
!8788 = !DILocation(line: 1237, column: 3, scope: !8777)
!8789 = !DILocation(line: 1238, column: 15, scope: !8784)
!8790 = !DILocation(line: 1238, column: 29, scope: !8784)
!8791 = !DILocation(line: 1238, column: 33, scope: !8784)
!8792 = !DILocation(line: 1238, column: 4, scope: !8784)
!8793 = !DILocation(line: 1238, column: 8, scope: !8784)
!8794 = !DILocation(line: 1238, column: 13, scope: !8784)
!8795 = !DILocation(line: 1237, column: 59, scope: !8784)
!8796 = !DILocation(line: 1237, column: 65, scope: !8784)
!8797 = !DILocation(line: 1237, column: 3, scope: !8784)
!8798 = distinct !{!8798, !8788, !8799}
!8799 = !DILocation(line: 1238, column: 37, scope: !8777)
!8800 = !DILocation(line: 1239, column: 2, scope: !8778)
!8801 = !DILocation(line: 1241, column: 6, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8744, file: !3, line: 1241, column: 6)
!8803 = !DILocation(line: 1241, column: 13, scope: !8802)
!8804 = !DILocation(line: 1241, column: 23, scope: !8802)
!8805 = !DILocation(line: 1241, column: 27, scope: !8802)
!8806 = !DILocation(line: 1241, column: 34, scope: !8802)
!8807 = !DILocation(line: 1241, column: 45, scope: !8802)
!8808 = !DILocation(line: 1241, column: 50, scope: !8802)
!8809 = !DILocation(line: 1241, column: 53, scope: !8802)
!8810 = !DILocation(line: 1241, column: 60, scope: !8802)
!8811 = !DILocation(line: 1241, column: 71, scope: !8802)
!8812 = !DILocation(line: 1241, column: 6, scope: !8744)
!8813 = !DILocalVariable(name: "key", scope: !8814, file: !3, line: 1242, type: !2482)
!8814 = distinct !DILexicalBlock(scope: !8802, file: !3, line: 1241, column: 78)
!8815 = !DILocation(line: 1242, column: 16, scope: !8814)
!8816 = !DILocation(line: 1242, column: 22, scope: !8814)
!8817 = !DILocation(line: 1242, column: 29, scope: !8814)
!8818 = !DILocation(line: 1242, column: 40, scope: !8814)
!8819 = !DILocalVariable(name: "boid", scope: !8814, file: !3, line: 1243, type: !2484)
!8820 = !DILocation(line: 1243, column: 17, scope: !8814)
!8821 = !DILocation(line: 1243, column: 24, scope: !8814)
!8822 = !DILocation(line: 1243, column: 31, scope: !8814)
!8823 = !DILocation(line: 1243, column: 42, scope: !8814)
!8824 = !DILocation(line: 1245, column: 7, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8814, file: !3, line: 1245, column: 7)
!8826 = !DILocation(line: 1245, column: 7, scope: !8814)
!8827 = !DILocation(line: 1246, column: 10, scope: !8825)
!8828 = !DILocation(line: 1246, column: 24, scope: !8825)
!8829 = !DILocation(line: 1246, column: 8, scope: !8825)
!8830 = !DILocation(line: 1246, column: 4, scope: !8825)
!8831 = !DILocation(line: 1248, column: 7, scope: !8832)
!8832 = distinct !DILexicalBlock(scope: !8814, file: !3, line: 1248, column: 7)
!8833 = !DILocation(line: 1248, column: 7, scope: !8814)
!8834 = !DILocation(line: 1249, column: 11, scope: !8832)
!8835 = !DILocation(line: 1249, column: 25, scope: !8832)
!8836 = !DILocation(line: 1249, column: 9, scope: !8832)
!8837 = !DILocation(line: 1249, column: 4, scope: !8832)
!8838 = !DILocation(line: 1251, column: 10, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8814, file: !3, line: 1251, column: 3)
!8840 = !DILocation(line: 1251, column: 20, scope: !8839)
!8841 = !DILocation(line: 1251, column: 27, scope: !8839)
!8842 = !DILocation(line: 1251, column: 18, scope: !8839)
!8843 = !DILocation(line: 1251, column: 8, scope: !8839)
!8844 = !DILocation(line: 1251, column: 38, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8839, file: !3, line: 1251, column: 3)
!8846 = !DILocation(line: 1251, column: 42, scope: !8845)
!8847 = !DILocation(line: 1251, column: 49, scope: !8845)
!8848 = !DILocation(line: 1251, column: 40, scope: !8845)
!8849 = !DILocation(line: 1251, column: 3, scope: !8839)
!8850 = !DILocation(line: 1252, column: 8, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8852, file: !3, line: 1252, column: 8)
!8852 = distinct !DILexicalBlock(scope: !8845, file: !3, line: 1251, column: 69)
!8853 = !DILocation(line: 1252, column: 8, scope: !8852)
!8854 = !DILocation(line: 1253, column: 20, scope: !8851)
!8855 = !DILocation(line: 1253, column: 5, scope: !8851)
!8856 = !DILocation(line: 1253, column: 9, scope: !8851)
!8857 = !DILocation(line: 1253, column: 14, scope: !8851)
!8858 = !DILocation(line: 1254, column: 8, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8852, file: !3, line: 1254, column: 8)
!8860 = !DILocation(line: 1254, column: 8, scope: !8852)
!8861 = !DILocation(line: 1255, column: 16, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8859, file: !3, line: 1254, column: 13)
!8863 = !DILocation(line: 1255, column: 5, scope: !8862)
!8864 = !DILocation(line: 1255, column: 9, scope: !8862)
!8865 = !DILocation(line: 1255, column: 14, scope: !8862)
!8866 = !DILocation(line: 1256, column: 12, scope: !8862)
!8867 = !DILocation(line: 1256, column: 16, scope: !8862)
!8868 = !DILocation(line: 1256, column: 9, scope: !8862)
!8869 = !DILocation(line: 1257, column: 4, scope: !8862)
!8870 = !DILocation(line: 1258, column: 3, scope: !8852)
!8871 = !DILocation(line: 1251, column: 59, scope: !8845)
!8872 = !DILocation(line: 1251, column: 65, scope: !8845)
!8873 = !DILocation(line: 1251, column: 3, scope: !8845)
!8874 = distinct !{!8874, !8849, !8875}
!8875 = !DILocation(line: 1258, column: 3, scope: !8839)
!8876 = !DILocation(line: 1259, column: 2, scope: !8814)
!8877 = !DILocation(line: 1261, column: 6, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8744, file: !3, line: 1261, column: 6)
!8879 = !DILocation(line: 1261, column: 12, scope: !8878)
!8880 = !DILocation(line: 1261, column: 6, scope: !8744)
!8881 = !DILocation(line: 1262, column: 38, scope: !8882)
!8882 = distinct !DILexicalBlock(scope: !8878, file: !3, line: 1261, column: 18)
!8883 = !DILocation(line: 1262, column: 17, scope: !8882)
!8884 = !DILocation(line: 1262, column: 3, scope: !8882)
!8885 = !DILocation(line: 1262, column: 10, scope: !8882)
!8886 = !DILocation(line: 1262, column: 15, scope: !8882)
!8887 = !DILocation(line: 1263, column: 37, scope: !8882)
!8888 = !DILocation(line: 1263, column: 43, scope: !8882)
!8889 = !DILocation(line: 1263, column: 21, scope: !8882)
!8890 = !DILocation(line: 1263, column: 65, scope: !8882)
!8891 = !DILocation(line: 1263, column: 72, scope: !8882)
!8892 = !DILocation(line: 1263, column: 49, scope: !8882)
!8893 = !DILocation(line: 1263, column: 3, scope: !8882)
!8894 = !DILocation(line: 1264, column: 22, scope: !8882)
!8895 = !DILocation(line: 1264, column: 28, scope: !8882)
!8896 = !DILocation(line: 1264, column: 40, scope: !8882)
!8897 = !DILocation(line: 1264, column: 3, scope: !8882)
!8898 = !DILocation(line: 1264, column: 9, scope: !8882)
!8899 = !DILocation(line: 1264, column: 20, scope: !8882)
!8900 = !DILocation(line: 1265, column: 2, scope: !8882)
!8901 = !DILocation(line: 1267, column: 21, scope: !8744)
!8902 = !DILocation(line: 1267, column: 28, scope: !8744)
!8903 = !DILocation(line: 1267, column: 38, scope: !8744)
!8904 = !DILocation(line: 1267, column: 44, scope: !8744)
!8905 = !DILocation(line: 1267, column: 2, scope: !8744)
!8906 = !DILocation(line: 1269, column: 2, scope: !8744)
!8907 = !DILocation(line: 1269, column: 9, scope: !8744)
!8908 = !DILocation(line: 1269, column: 19, scope: !8744)
!8909 = !DILocation(line: 1270, column: 2, scope: !8744)
!8910 = !DILocation(line: 1270, column: 9, scope: !8744)
!8911 = !DILocation(line: 1270, column: 20, scope: !8744)
!8912 = !DILocation(line: 1271, column: 2, scope: !8744)
!8913 = !DILocation(line: 1271, column: 9, scope: !8744)
!8914 = !DILocation(line: 1271, column: 14, scope: !8744)
!8915 = !DILocation(line: 1272, column: 2, scope: !8744)
!8916 = !DILocation(line: 1272, column: 9, scope: !8744)
!8917 = !DILocation(line: 1272, column: 13, scope: !8744)
!8918 = !DILocation(line: 1273, column: 2, scope: !8744)
!8919 = !DILocation(line: 1273, column: 9, scope: !8744)
!8920 = !DILocation(line: 1273, column: 19, scope: !8744)
!8921 = !DILocation(line: 1274, column: 2, scope: !8744)
!8922 = !DILocation(line: 1274, column: 9, scope: !8744)
!8923 = !DILocation(line: 1274, column: 14, scope: !8744)
!8924 = !DILocation(line: 1275, column: 2, scope: !8744)
!8925 = !DILocation(line: 1275, column: 9, scope: !8744)
!8926 = !DILocation(line: 1275, column: 17, scope: !8744)
!8927 = !DILocation(line: 1277, column: 22, scope: !8744)
!8928 = !DILocation(line: 1277, column: 29, scope: !8744)
!8929 = !DILocation(line: 1277, column: 2, scope: !8744)
!8930 = !DILocation(line: 1278, column: 22, scope: !8744)
!8931 = !DILocation(line: 1278, column: 29, scope: !8744)
!8932 = !DILocation(line: 1278, column: 2, scope: !8744)
!8933 = !DILocation(line: 1279, column: 2, scope: !8744)
!8934 = !DILocation(line: 1279, column: 9, scope: !8744)
!8935 = !DILocation(line: 1279, column: 20, scope: !8744)
!8936 = !DILocation(line: 1281, column: 45, scope: !8744)
!8937 = !DILocation(line: 1281, column: 52, scope: !8744)
!8938 = !DILocation(line: 1281, column: 63, scope: !8744)
!8939 = !DILocation(line: 1281, column: 69, scope: !8744)
!8940 = !DILocation(line: 1281, column: 22, scope: !8744)
!8941 = !DILocation(line: 1281, column: 2, scope: !8744)
!8942 = !DILocation(line: 1281, column: 9, scope: !8744)
!8943 = !DILocation(line: 1281, column: 20, scope: !8744)
!8944 = !DILocation(line: 1285, column: 6, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8744, file: !3, line: 1285, column: 6)
!8946 = !DILocation(line: 1285, column: 13, scope: !8945)
!8947 = !DILocation(line: 1285, column: 6, scope: !8744)
!8948 = !DILocation(line: 1286, column: 30, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8945, file: !3, line: 1285, column: 19)
!8950 = !DILocation(line: 1286, column: 37, scope: !8949)
!8951 = !DILocation(line: 1286, column: 3, scope: !8949)
!8952 = !DILocation(line: 1286, column: 10, scope: !8949)
!8953 = !DILocation(line: 1286, column: 16, scope: !8949)
!8954 = !DILocation(line: 1286, column: 28, scope: !8949)
!8955 = !DILocation(line: 1287, column: 2, scope: !8949)
!8956 = !DILocation(line: 1289, column: 19, scope: !8744)
!8957 = !DILocation(line: 1289, column: 26, scope: !8744)
!8958 = !DILocation(line: 1289, column: 13, scope: !8744)
!8959 = !DILocation(line: 1289, column: 2, scope: !8744)
!8960 = !DILocation(line: 1291, column: 9, scope: !8744)
!8961 = !DILocation(line: 1291, column: 2, scope: !8744)
!8962 = distinct !DISubprogram(name: "BKE_object_pose_context_check", scope: !3, file: !3, line: 1388, type: !8031, scopeLine: 1389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!8963 = !DILocalVariable(name: "ob", arg: 1, scope: !8962, file: !3, line: 1388, type: !5166)
!8964 = !DILocation(line: 1388, column: 44, scope: !8962)
!8965 = !DILocation(line: 1390, column: 7, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 1390, column: 6)
!8967 = !DILocation(line: 1390, column: 6, scope: !8966)
!8968 = !DILocation(line: 1390, column: 11, scope: !8966)
!8969 = !DILocation(line: 1391, column: 7, scope: !8966)
!8970 = !DILocation(line: 1391, column: 11, scope: !8966)
!8971 = !DILocation(line: 1391, column: 16, scope: !8966)
!8972 = !DILocation(line: 1391, column: 32, scope: !8966)
!8973 = !DILocation(line: 1392, column: 7, scope: !8966)
!8974 = !DILocation(line: 1392, column: 11, scope: !8966)
!8975 = !DILocation(line: 1392, column: 6, scope: !8966)
!8976 = !DILocation(line: 1392, column: 17, scope: !8966)
!8977 = !DILocation(line: 1393, column: 7, scope: !8966)
!8978 = !DILocation(line: 1393, column: 11, scope: !8966)
!8979 = !DILocation(line: 1393, column: 16, scope: !8966)
!8980 = !DILocation(line: 1390, column: 6, scope: !8962)
!8981 = !DILocation(line: 1395, column: 3, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8966, file: !3, line: 1394, column: 2)
!8983 = !DILocation(line: 1398, column: 3, scope: !8984)
!8984 = distinct !DILexicalBlock(scope: !8966, file: !3, line: 1397, column: 7)
!8985 = !DILocation(line: 1400, column: 1, scope: !8962)
!8986 = distinct !DISubprogram(name: "BKE_object_pose_armature_get", scope: !3, file: !3, line: 1402, type: !8987, scopeLine: 1403, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!8987 = !DISubroutineType(types: !8988)
!8988 = !{!966, !5166}
!8989 = !DILocalVariable(name: "ob", arg: 1, scope: !8986, file: !3, line: 1402, type: !5166)
!8990 = !DILocation(line: 1402, column: 46, scope: !8986)
!8991 = !DILocation(line: 1404, column: 6, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8986, file: !3, line: 1404, column: 6)
!8993 = !DILocation(line: 1404, column: 9, scope: !8992)
!8994 = !DILocation(line: 1404, column: 6, scope: !8986)
!8995 = !DILocation(line: 1405, column: 3, scope: !8992)
!8996 = !DILocation(line: 1407, column: 36, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8986, file: !3, line: 1407, column: 6)
!8998 = !DILocation(line: 1407, column: 6, scope: !8997)
!8999 = !DILocation(line: 1407, column: 6, scope: !8986)
!9000 = !DILocation(line: 1408, column: 10, scope: !8997)
!9001 = !DILocation(line: 1408, column: 3, scope: !8997)
!9002 = !DILocation(line: 1410, column: 38, scope: !8986)
!9003 = !DILocation(line: 1410, column: 7, scope: !8986)
!9004 = !DILocation(line: 1410, column: 5, scope: !8986)
!9005 = !DILocation(line: 1412, column: 36, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !8986, file: !3, line: 1412, column: 6)
!9007 = !DILocation(line: 1412, column: 6, scope: !9006)
!9008 = !DILocation(line: 1412, column: 6, scope: !8986)
!9009 = !DILocation(line: 1413, column: 10, scope: !9006)
!9010 = !DILocation(line: 1413, column: 3, scope: !9006)
!9011 = !DILocation(line: 1415, column: 2, scope: !8986)
!9012 = !DILocation(line: 1416, column: 1, scope: !8986)
!9013 = distinct !DISubprogram(name: "BKE_object_transform_copy", scope: !3, file: !3, line: 1418, type: !9014, scopeLine: 1419, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!9014 = !DISubroutineType(types: !9015)
!9015 = !{null, !5166, !9016}
!9016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9017, size: 64)
!9017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5167)
!9018 = !DILocalVariable(name: "ob_tar", arg: 1, scope: !9013, file: !3, line: 1418, type: !5166)
!9019 = !DILocation(line: 1418, column: 40, scope: !9013)
!9020 = !DILocalVariable(name: "ob_src", arg: 2, scope: !9013, file: !3, line: 1418, type: !9016)
!9021 = !DILocation(line: 1418, column: 62, scope: !9013)
!9022 = !DILocation(line: 1420, column: 13, scope: !9013)
!9023 = !DILocation(line: 1420, column: 21, scope: !9013)
!9024 = !DILocation(line: 1420, column: 26, scope: !9013)
!9025 = !DILocation(line: 1420, column: 34, scope: !9013)
!9026 = !DILocation(line: 1420, column: 2, scope: !9013)
!9027 = !DILocation(line: 1421, column: 13, scope: !9013)
!9028 = !DILocation(line: 1421, column: 21, scope: !9013)
!9029 = !DILocation(line: 1421, column: 26, scope: !9013)
!9030 = !DILocation(line: 1421, column: 34, scope: !9013)
!9031 = !DILocation(line: 1421, column: 2, scope: !9013)
!9032 = !DILocation(line: 1422, column: 13, scope: !9013)
!9033 = !DILocation(line: 1422, column: 21, scope: !9013)
!9034 = !DILocation(line: 1422, column: 27, scope: !9013)
!9035 = !DILocation(line: 1422, column: 35, scope: !9013)
!9036 = !DILocation(line: 1422, column: 2, scope: !9013)
!9037 = !DILocation(line: 1423, column: 13, scope: !9013)
!9038 = !DILocation(line: 1423, column: 21, scope: !9013)
!9039 = !DILocation(line: 1423, column: 30, scope: !9013)
!9040 = !DILocation(line: 1423, column: 38, scope: !9013)
!9041 = !DILocation(line: 1423, column: 2, scope: !9013)
!9042 = !DILocation(line: 1424, column: 21, scope: !9013)
!9043 = !DILocation(line: 1424, column: 29, scope: !9013)
!9044 = !DILocation(line: 1424, column: 2, scope: !9013)
!9045 = !DILocation(line: 1424, column: 10, scope: !9013)
!9046 = !DILocation(line: 1424, column: 19, scope: !9013)
!9047 = !DILocation(line: 1425, column: 20, scope: !9013)
!9048 = !DILocation(line: 1425, column: 28, scope: !9013)
!9049 = !DILocation(line: 1425, column: 2, scope: !9013)
!9050 = !DILocation(line: 1425, column: 10, scope: !9013)
!9051 = !DILocation(line: 1425, column: 18, scope: !9013)
!9052 = !DILocation(line: 1426, column: 13, scope: !9013)
!9053 = !DILocation(line: 1426, column: 21, scope: !9013)
!9054 = !DILocation(line: 1426, column: 27, scope: !9013)
!9055 = !DILocation(line: 1426, column: 35, scope: !9013)
!9056 = !DILocation(line: 1426, column: 2, scope: !9013)
!9057 = !DILocation(line: 1427, column: 1, scope: !9013)
!9058 = distinct !DISubprogram(name: "copy_v3_v3", scope: !9059, file: !9059, line: 64, type: !9060, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!9059 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9060 = !DISubroutineType(types: !9061)
!9061 = !{null, !1073, !3397}
!9062 = !DILocalVariable(name: "r", arg: 1, scope: !9058, file: !9059, line: 64, type: !1073)
!9063 = !DILocation(line: 64, column: 31, scope: !9058)
!9064 = !DILocalVariable(name: "a", arg: 2, scope: !9058, file: !9059, line: 64, type: !3397)
!9065 = !DILocation(line: 64, column: 49, scope: !9058)
!9066 = !DILocation(line: 66, column: 9, scope: !9058)
!9067 = !DILocation(line: 66, column: 2, scope: !9058)
!9068 = !DILocation(line: 66, column: 7, scope: !9058)
!9069 = !DILocation(line: 67, column: 9, scope: !9058)
!9070 = !DILocation(line: 67, column: 2, scope: !9058)
!9071 = !DILocation(line: 67, column: 7, scope: !9058)
!9072 = !DILocation(line: 68, column: 9, scope: !9058)
!9073 = !DILocation(line: 68, column: 2, scope: !9058)
!9074 = !DILocation(line: 68, column: 7, scope: !9058)
!9075 = !DILocation(line: 69, column: 1, scope: !9058)
!9076 = distinct !DISubprogram(name: "BKE_object_copy_ex", scope: !3, file: !3, line: 1429, type: !9077, scopeLine: 1430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!9077 = !DISubroutineType(types: !9078)
!9078 = !{!966, !6308, !5166, !1788}
!9079 = !DILocalVariable(name: "bmain", arg: 1, scope: !9076, file: !3, line: 1429, type: !6308)
!9080 = !DILocation(line: 1429, column: 34, scope: !9076)
!9081 = !DILocalVariable(name: "ob", arg: 2, scope: !9076, file: !3, line: 1429, type: !5166)
!9082 = !DILocation(line: 1429, column: 49, scope: !9076)
!9083 = !DILocalVariable(name: "copy_caches", arg: 3, scope: !9076, file: !3, line: 1429, type: !1788)
!9084 = !DILocation(line: 1429, column: 58, scope: !9076)
!9085 = !DILocalVariable(name: "obn", scope: !9076, file: !3, line: 1431, type: !5166)
!9086 = !DILocation(line: 1431, column: 10, scope: !9076)
!9087 = !DILocalVariable(name: "md", scope: !9076, file: !3, line: 1432, type: !5260)
!9088 = !DILocation(line: 1432, column: 16, scope: !9076)
!9089 = !DILocalVariable(name: "a", scope: !9076, file: !3, line: 1433, type: !73)
!9090 = !DILocation(line: 1433, column: 6, scope: !9076)
!9091 = !DILocation(line: 1435, column: 29, scope: !9076)
!9092 = !DILocation(line: 1435, column: 37, scope: !9076)
!9093 = !DILocation(line: 1435, column: 41, scope: !9076)
!9094 = !DILocation(line: 1435, column: 8, scope: !9076)
!9095 = !DILocation(line: 1435, column: 6, scope: !9076)
!9096 = !DILocation(line: 1437, column: 6, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 1437, column: 6)
!9098 = !DILocation(line: 1437, column: 10, scope: !9097)
!9099 = !DILocation(line: 1437, column: 6, scope: !9076)
!9100 = !DILocation(line: 1438, column: 14, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9097, file: !3, line: 1437, column: 18)
!9102 = !DILocation(line: 1438, column: 28, scope: !9101)
!9103 = !DILocation(line: 1438, column: 32, scope: !9101)
!9104 = !DILocation(line: 1438, column: 3, scope: !9101)
!9105 = !DILocation(line: 1438, column: 8, scope: !9101)
!9106 = !DILocation(line: 1438, column: 12, scope: !9101)
!9107 = !DILocation(line: 1439, column: 18, scope: !9101)
!9108 = !DILocation(line: 1439, column: 32, scope: !9101)
!9109 = !DILocation(line: 1439, column: 36, scope: !9101)
!9110 = !DILocation(line: 1439, column: 3, scope: !9101)
!9111 = !DILocation(line: 1439, column: 8, scope: !9101)
!9112 = !DILocation(line: 1439, column: 16, scope: !9101)
!9113 = !DILocation(line: 1440, column: 17, scope: !9101)
!9114 = !DILocation(line: 1440, column: 21, scope: !9101)
!9115 = !DILocation(line: 1440, column: 3, scope: !9101)
!9116 = !DILocation(line: 1440, column: 8, scope: !9101)
!9117 = !DILocation(line: 1440, column: 15, scope: !9101)
!9118 = !DILocation(line: 1441, column: 2, scope: !9101)
!9119 = !DILocation(line: 1443, column: 6, scope: !9120)
!9120 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 1443, column: 6)
!9121 = !DILocation(line: 1443, column: 10, scope: !9120)
!9122 = !DILocation(line: 1443, column: 6, scope: !9076)
!9123 = !DILocation(line: 1443, column: 30, scope: !9120)
!9124 = !DILocation(line: 1443, column: 44, scope: !9120)
!9125 = !DILocation(line: 1443, column: 48, scope: !9120)
!9126 = !DILocation(line: 1443, column: 17, scope: !9120)
!9127 = !DILocation(line: 1443, column: 22, scope: !9120)
!9128 = !DILocation(line: 1443, column: 28, scope: !9120)
!9129 = !DILocation(line: 1445, column: 6, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 1445, column: 6)
!9131 = !DILocation(line: 1445, column: 10, scope: !9130)
!9132 = !DILocation(line: 1445, column: 6, scope: !9076)
!9133 = !DILocation(line: 1445, column: 24, scope: !9130)
!9134 = !DILocation(line: 1445, column: 38, scope: !9130)
!9135 = !DILocation(line: 1445, column: 42, scope: !9130)
!9136 = !DILocation(line: 1445, column: 14, scope: !9130)
!9137 = !DILocation(line: 1445, column: 19, scope: !9130)
!9138 = !DILocation(line: 1445, column: 22, scope: !9130)
!9139 = !DILocation(line: 1446, column: 2, scope: !9076)
!9140 = !DILocation(line: 1446, column: 7, scope: !9076)
!9141 = !DILocation(line: 1446, column: 12, scope: !9076)
!9142 = !DILocation(line: 1448, column: 22, scope: !9076)
!9143 = !DILocation(line: 1448, column: 27, scope: !9076)
!9144 = !DILocation(line: 1448, column: 2, scope: !9076)
!9145 = !DILocation(line: 1450, column: 12, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 1450, column: 2)
!9147 = !DILocation(line: 1450, column: 16, scope: !9146)
!9148 = !DILocation(line: 1450, column: 26, scope: !9146)
!9149 = !DILocation(line: 1450, column: 10, scope: !9146)
!9150 = !DILocation(line: 1450, column: 7, scope: !9146)
!9151 = !DILocation(line: 1450, column: 33, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9146, file: !3, line: 1450, column: 2)
!9153 = !DILocation(line: 1450, column: 2, scope: !9146)
!9154 = !DILocalVariable(name: "nmd", scope: !9155, file: !3, line: 1451, type: !5260)
!9155 = distinct !DILexicalBlock(scope: !9152, file: !3, line: 1450, column: 52)
!9156 = !DILocation(line: 1451, column: 17, scope: !9155)
!9157 = !DILocation(line: 1451, column: 36, scope: !9155)
!9158 = !DILocation(line: 1451, column: 40, scope: !9155)
!9159 = !DILocation(line: 1451, column: 23, scope: !9155)
!9160 = !DILocation(line: 1452, column: 15, scope: !9155)
!9161 = !DILocation(line: 1452, column: 20, scope: !9155)
!9162 = !DILocation(line: 1452, column: 26, scope: !9155)
!9163 = !DILocation(line: 1452, column: 30, scope: !9155)
!9164 = !DILocation(line: 1452, column: 3, scope: !9155)
!9165 = !DILocation(line: 1453, column: 21, scope: !9155)
!9166 = !DILocation(line: 1453, column: 25, scope: !9155)
!9167 = !DILocation(line: 1453, column: 3, scope: !9155)
!9168 = !DILocation(line: 1454, column: 16, scope: !9155)
!9169 = !DILocation(line: 1454, column: 21, scope: !9155)
!9170 = !DILocation(line: 1454, column: 32, scope: !9155)
!9171 = !DILocation(line: 1454, column: 3, scope: !9155)
!9172 = !DILocation(line: 1455, column: 2, scope: !9155)
!9173 = !DILocation(line: 1450, column: 42, scope: !9152)
!9174 = !DILocation(line: 1450, column: 46, scope: !9152)
!9175 = !DILocation(line: 1450, column: 40, scope: !9152)
!9176 = !DILocation(line: 1450, column: 2, scope: !9152)
!9177 = distinct !{!9177, !9153, !9178}
!9178 = !DILocation(line: 1455, column: 2, scope: !9146)
!9179 = !DILocation(line: 1457, column: 22, scope: !9076)
!9180 = !DILocation(line: 1457, column: 27, scope: !9076)
!9181 = !DILocation(line: 1457, column: 2, scope: !9076)
!9182 = !DILocation(line: 1458, column: 27, scope: !9076)
!9183 = !DILocation(line: 1458, column: 32, scope: !9076)
!9184 = !DILocation(line: 1458, column: 39, scope: !9076)
!9185 = !DILocation(line: 1458, column: 43, scope: !9076)
!9186 = !DILocation(line: 1458, column: 2, scope: !9076)
!9187 = !DILocation(line: 1460, column: 16, scope: !9076)
!9188 = !DILocation(line: 1460, column: 21, scope: !9076)
!9189 = !DILocation(line: 1460, column: 31, scope: !9076)
!9190 = !DILocation(line: 1460, column: 35, scope: !9076)
!9191 = !DILocation(line: 1460, column: 2, scope: !9076)
!9192 = !DILocation(line: 1461, column: 20, scope: !9076)
!9193 = !DILocation(line: 1461, column: 25, scope: !9076)
!9194 = !DILocation(line: 1461, column: 39, scope: !9076)
!9195 = !DILocation(line: 1461, column: 43, scope: !9076)
!9196 = !DILocation(line: 1461, column: 2, scope: !9076)
!9197 = !DILocation(line: 1462, column: 18, scope: !9076)
!9198 = !DILocation(line: 1462, column: 23, scope: !9076)
!9199 = !DILocation(line: 1462, column: 35, scope: !9076)
!9200 = !DILocation(line: 1462, column: 39, scope: !9076)
!9201 = !DILocation(line: 1462, column: 2, scope: !9076)
!9202 = !DILocation(line: 1464, column: 6, scope: !9203)
!9203 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 1464, column: 6)
!9204 = !DILocation(line: 1464, column: 10, scope: !9203)
!9205 = !DILocation(line: 1464, column: 6, scope: !9076)
!9206 = !DILocation(line: 1465, column: 20, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9203, file: !3, line: 1464, column: 16)
!9208 = !DILocation(line: 1465, column: 25, scope: !9207)
!9209 = !DILocation(line: 1465, column: 3, scope: !9207)
!9210 = !DILocation(line: 1467, column: 7, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9207, file: !3, line: 1467, column: 7)
!9212 = !DILocation(line: 1467, column: 11, scope: !9211)
!9213 = !DILocation(line: 1467, column: 16, scope: !9211)
!9214 = !DILocation(line: 1467, column: 7, scope: !9207)
!9215 = !DILocation(line: 1468, column: 21, scope: !9211)
!9216 = !DILocation(line: 1468, column: 26, scope: !9211)
!9217 = !DILocation(line: 1468, column: 31, scope: !9211)
!9218 = !DILocation(line: 1468, column: 4, scope: !9211)
!9219 = !DILocation(line: 1469, column: 2, scope: !9207)
!9220 = !DILocation(line: 1470, column: 22, scope: !9076)
!9221 = !DILocation(line: 1470, column: 27, scope: !9076)
!9222 = !DILocation(line: 1470, column: 37, scope: !9076)
!9223 = !DILocation(line: 1470, column: 41, scope: !9076)
!9224 = !DILocation(line: 1470, column: 2, scope: !9076)
!9225 = !DILocation(line: 1471, column: 24, scope: !9076)
!9226 = !DILocation(line: 1471, column: 29, scope: !9076)
!9227 = !DILocation(line: 1471, column: 43, scope: !9076)
!9228 = !DILocation(line: 1471, column: 47, scope: !9076)
!9229 = !DILocation(line: 1471, column: 2, scope: !9076)
!9230 = !DILocation(line: 1473, column: 2, scope: !9076)
!9231 = !DILocation(line: 1473, column: 7, scope: !9076)
!9232 = !DILocation(line: 1473, column: 12, scope: !9076)
!9233 = !DILocation(line: 1474, column: 2, scope: !9076)
!9234 = !DILocation(line: 1474, column: 7, scope: !9076)
!9235 = !DILocation(line: 1474, column: 14, scope: !9076)
!9236 = !DILocation(line: 1477, column: 19, scope: !9076)
!9237 = !DILocation(line: 1477, column: 24, scope: !9076)
!9238 = !DILocation(line: 1477, column: 13, scope: !9076)
!9239 = !DILocation(line: 1477, column: 2, scope: !9076)
!9240 = !DILocation(line: 1478, column: 19, scope: !9076)
!9241 = !DILocation(line: 1478, column: 24, scope: !9076)
!9242 = !DILocation(line: 1478, column: 13, scope: !9076)
!9243 = !DILocation(line: 1478, column: 2, scope: !9076)
!9244 = !DILocation(line: 1479, column: 22, scope: !9076)
!9245 = !DILocation(line: 1479, column: 27, scope: !9076)
!9246 = !DILocation(line: 1479, column: 16, scope: !9076)
!9247 = !DILocation(line: 1479, column: 2, scope: !9076)
!9248 = !DILocation(line: 1481, column: 9, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 1481, column: 2)
!9250 = !DILocation(line: 1481, column: 7, scope: !9249)
!9251 = !DILocation(line: 1481, column: 14, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9249, file: !3, line: 1481, column: 2)
!9253 = !DILocation(line: 1481, column: 18, scope: !9252)
!9254 = !DILocation(line: 1481, column: 23, scope: !9252)
!9255 = !DILocation(line: 1481, column: 16, scope: !9252)
!9256 = !DILocation(line: 1481, column: 2, scope: !9249)
!9257 = !DILocation(line: 1481, column: 53, scope: !9252)
!9258 = !DILocation(line: 1481, column: 58, scope: !9252)
!9259 = !DILocation(line: 1481, column: 62, scope: !9252)
!9260 = !DILocation(line: 1481, column: 47, scope: !9252)
!9261 = !DILocation(line: 1481, column: 36, scope: !9252)
!9262 = !DILocation(line: 1481, column: 32, scope: !9252)
!9263 = !DILocation(line: 1481, column: 2, scope: !9252)
!9264 = distinct !{!9264, !9256, !9265}
!9265 = !DILocation(line: 1481, column: 64, scope: !9249)
!9266 = !DILocation(line: 1483, column: 6, scope: !9267)
!9267 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 1483, column: 6)
!9268 = !DILocation(line: 1483, column: 10, scope: !9267)
!9269 = !DILocation(line: 1483, column: 6, scope: !9076)
!9270 = !DILocation(line: 1484, column: 13, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9267, file: !3, line: 1483, column: 14)
!9272 = !DILocation(line: 1484, column: 27, scope: !9271)
!9273 = !DILocation(line: 1484, column: 31, scope: !9271)
!9274 = !DILocation(line: 1484, column: 3, scope: !9271)
!9275 = !DILocation(line: 1484, column: 8, scope: !9271)
!9276 = !DILocation(line: 1484, column: 11, scope: !9271)
!9277 = !DILocation(line: 1485, column: 7, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9271, file: !3, line: 1485, column: 7)
!9279 = !DILocation(line: 1485, column: 12, scope: !9278)
!9280 = !DILocation(line: 1485, column: 16, scope: !9278)
!9281 = !DILocation(line: 1485, column: 7, scope: !9271)
!9282 = !DILocation(line: 1486, column: 17, scope: !9278)
!9283 = !DILocation(line: 1486, column: 22, scope: !9278)
!9284 = !DILocation(line: 1486, column: 26, scope: !9278)
!9285 = !DILocation(line: 1486, column: 31, scope: !9278)
!9286 = !DILocation(line: 1486, column: 4, scope: !9278)
!9287 = !DILocation(line: 1487, column: 7, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9271, file: !3, line: 1487, column: 7)
!9289 = !DILocation(line: 1487, column: 12, scope: !9288)
!9290 = !DILocation(line: 1487, column: 16, scope: !9288)
!9291 = !DILocation(line: 1487, column: 7, scope: !9271)
!9292 = !DILocation(line: 1488, column: 19, scope: !9288)
!9293 = !DILocation(line: 1488, column: 33, scope: !9288)
!9294 = !DILocation(line: 1488, column: 37, scope: !9288)
!9295 = !DILocation(line: 1488, column: 41, scope: !9288)
!9296 = !DILocation(line: 1488, column: 4, scope: !9288)
!9297 = !DILocation(line: 1488, column: 9, scope: !9288)
!9298 = !DILocation(line: 1488, column: 13, scope: !9288)
!9299 = !DILocation(line: 1488, column: 17, scope: !9288)
!9300 = !DILocation(line: 1489, column: 2, scope: !9271)
!9301 = !DILocation(line: 1490, column: 28, scope: !9076)
!9302 = !DILocation(line: 1490, column: 32, scope: !9076)
!9303 = !DILocation(line: 1490, column: 38, scope: !9076)
!9304 = !DILocation(line: 1490, column: 14, scope: !9076)
!9305 = !DILocation(line: 1490, column: 2, scope: !9076)
!9306 = !DILocation(line: 1490, column: 7, scope: !9076)
!9307 = !DILocation(line: 1490, column: 12, scope: !9076)
!9308 = !DILocation(line: 1491, column: 35, scope: !9076)
!9309 = !DILocation(line: 1491, column: 39, scope: !9076)
!9310 = !DILocation(line: 1491, column: 15, scope: !9076)
!9311 = !DILocation(line: 1491, column: 2, scope: !9076)
!9312 = !DILocation(line: 1491, column: 7, scope: !9076)
!9313 = !DILocation(line: 1491, column: 13, scope: !9076)
!9314 = !DILocation(line: 1492, column: 52, scope: !9076)
!9315 = !DILocation(line: 1492, column: 26, scope: !9076)
!9316 = !DILocation(line: 1492, column: 2, scope: !9076)
!9317 = !DILocation(line: 1492, column: 7, scope: !9076)
!9318 = !DILocation(line: 1492, column: 24, scope: !9076)
!9319 = !DILocation(line: 1493, column: 60, scope: !9076)
!9320 = !DILocation(line: 1493, column: 30, scope: !9076)
!9321 = !DILocation(line: 1493, column: 2, scope: !9076)
!9322 = !DILocation(line: 1493, column: 7, scope: !9076)
!9323 = !DILocation(line: 1493, column: 28, scope: !9076)
!9324 = !DILocation(line: 1495, column: 34, scope: !9076)
!9325 = !DILocation(line: 1495, column: 39, scope: !9076)
!9326 = !DILocation(line: 1495, column: 2, scope: !9076)
!9327 = !DILocation(line: 1497, column: 2, scope: !9076)
!9328 = !DILocation(line: 1497, column: 7, scope: !9076)
!9329 = !DILocation(line: 1497, column: 21, scope: !9076)
!9330 = !DILocation(line: 1498, column: 2, scope: !9076)
!9331 = !DILocation(line: 1498, column: 7, scope: !9076)
!9332 = !DILocation(line: 1498, column: 20, scope: !9076)
!9333 = !DILocation(line: 1500, column: 22, scope: !9076)
!9334 = !DILocation(line: 1500, column: 27, scope: !9076)
!9335 = !DILocation(line: 1500, column: 2, scope: !9076)
!9336 = !DILocation(line: 1501, column: 22, scope: !9076)
!9337 = !DILocation(line: 1501, column: 27, scope: !9076)
!9338 = !DILocation(line: 1501, column: 2, scope: !9076)
!9339 = !DILocation(line: 1503, column: 2, scope: !9076)
!9340 = !DILocation(line: 1503, column: 7, scope: !9076)
!9341 = !DILocation(line: 1503, column: 13, scope: !9076)
!9342 = !DILocation(line: 1505, column: 18, scope: !9076)
!9343 = !DILocation(line: 1505, column: 23, scope: !9076)
!9344 = !DILocation(line: 1505, column: 2, scope: !9076)
!9345 = !DILocation(line: 1509, column: 2, scope: !9076)
!9346 = !DILocation(line: 1509, column: 7, scope: !9076)
!9347 = !DILocation(line: 1509, column: 19, scope: !9076)
!9348 = !DILocation(line: 1511, column: 9, scope: !9076)
!9349 = !DILocation(line: 1511, column: 2, scope: !9076)
!9350 = distinct !DISubprogram(name: "copy_object_pose", scope: !3, file: !3, line: 1345, type: !5785, scopeLine: 1346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!9351 = !DILocalVariable(name: "obn", arg: 1, scope: !9350, file: !3, line: 1345, type: !5166)
!9352 = !DILocation(line: 1345, column: 38, scope: !9350)
!9353 = !DILocalVariable(name: "ob", arg: 2, scope: !9350, file: !3, line: 1345, type: !5166)
!9354 = !DILocation(line: 1345, column: 51, scope: !9350)
!9355 = !DILocalVariable(name: "chan", scope: !9350, file: !3, line: 1347, type: !5484)
!9356 = !DILocation(line: 1347, column: 16, scope: !9350)
!9357 = !DILocation(line: 1350, column: 2, scope: !9350)
!9358 = !DILocation(line: 1350, column: 7, scope: !9350)
!9359 = !DILocation(line: 1350, column: 12, scope: !9350)
!9360 = !DILocation(line: 1351, column: 22, scope: !9350)
!9361 = !DILocation(line: 1351, column: 27, scope: !9350)
!9362 = !DILocation(line: 1351, column: 33, scope: !9350)
!9363 = !DILocation(line: 1351, column: 37, scope: !9350)
!9364 = !DILocation(line: 1351, column: 2, scope: !9350)
!9365 = !DILocation(line: 1353, column: 14, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9350, file: !3, line: 1353, column: 2)
!9367 = !DILocation(line: 1353, column: 19, scope: !9366)
!9368 = !DILocation(line: 1353, column: 25, scope: !9366)
!9369 = !DILocation(line: 1353, column: 34, scope: !9366)
!9370 = !DILocation(line: 1353, column: 12, scope: !9366)
!9371 = !DILocation(line: 1353, column: 7, scope: !9366)
!9372 = !DILocation(line: 1353, column: 41, scope: !9373)
!9373 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 1353, column: 2)
!9374 = !DILocation(line: 1353, column: 2, scope: !9366)
!9375 = !DILocalVariable(name: "con", scope: !9376, file: !3, line: 1354, type: !6485)
!9376 = distinct !DILexicalBlock(scope: !9373, file: !3, line: 1353, column: 66)
!9377 = !DILocation(line: 1354, column: 16, scope: !9376)
!9378 = !DILocation(line: 1356, column: 3, scope: !9376)
!9379 = !DILocation(line: 1356, column: 9, scope: !9376)
!9380 = !DILocation(line: 1356, column: 14, scope: !9376)
!9381 = !DILocation(line: 1358, column: 14, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9376, file: !3, line: 1358, column: 3)
!9383 = !DILocation(line: 1358, column: 20, scope: !9382)
!9384 = !DILocation(line: 1358, column: 32, scope: !9382)
!9385 = !DILocation(line: 1358, column: 12, scope: !9382)
!9386 = !DILocation(line: 1358, column: 8, scope: !9382)
!9387 = !DILocation(line: 1358, column: 39, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9382, file: !3, line: 1358, column: 3)
!9389 = !DILocation(line: 1358, column: 3, scope: !9382)
!9390 = !DILocalVariable(name: "cti", scope: !9391, file: !3, line: 1359, type: !6700)
!9391 = distinct !DILexicalBlock(scope: !9388, file: !3, line: 1358, column: 61)
!9392 = !DILocation(line: 1359, column: 25, scope: !9391)
!9393 = !DILocation(line: 1359, column: 59, scope: !9391)
!9394 = !DILocation(line: 1359, column: 31, scope: !9391)
!9395 = !DILocalVariable(name: "targets", scope: !9391, file: !3, line: 1360, type: !658)
!9396 = !DILocation(line: 1360, column: 13, scope: !9391)
!9397 = !DILocalVariable(name: "ct", scope: !9391, file: !3, line: 1361, type: !6770)
!9398 = !DILocation(line: 1361, column: 23, scope: !9391)
!9399 = !DILocation(line: 1363, column: 8, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9391, file: !3, line: 1363, column: 8)
!9401 = !DILocation(line: 1363, column: 12, scope: !9400)
!9402 = !DILocation(line: 1363, column: 15, scope: !9400)
!9403 = !DILocation(line: 1363, column: 20, scope: !9400)
!9404 = !DILocation(line: 1363, column: 8, scope: !9391)
!9405 = !DILocation(line: 1364, column: 5, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9400, file: !3, line: 1363, column: 44)
!9407 = !DILocation(line: 1364, column: 10, scope: !9406)
!9408 = !DILocation(line: 1364, column: 33, scope: !9406)
!9409 = !DILocation(line: 1366, column: 23, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9406, file: !3, line: 1366, column: 5)
!9411 = !DILocation(line: 1366, column: 15, scope: !9410)
!9412 = !DILocation(line: 1366, column: 13, scope: !9410)
!9413 = !DILocation(line: 1366, column: 10, scope: !9410)
!9414 = !DILocation(line: 1366, column: 30, scope: !9415)
!9415 = distinct !DILexicalBlock(scope: !9410, file: !3, line: 1366, column: 5)
!9416 = !DILocation(line: 1366, column: 5, scope: !9410)
!9417 = !DILocation(line: 1367, column: 10, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9419, file: !3, line: 1367, column: 10)
!9419 = distinct !DILexicalBlock(scope: !9415, file: !3, line: 1366, column: 49)
!9420 = !DILocation(line: 1367, column: 14, scope: !9418)
!9421 = !DILocation(line: 1367, column: 21, scope: !9418)
!9422 = !DILocation(line: 1367, column: 18, scope: !9418)
!9423 = !DILocation(line: 1367, column: 10, scope: !9419)
!9424 = !DILocation(line: 1368, column: 17, scope: !9418)
!9425 = !DILocation(line: 1368, column: 7, scope: !9418)
!9426 = !DILocation(line: 1368, column: 11, scope: !9418)
!9427 = !DILocation(line: 1368, column: 15, scope: !9418)
!9428 = !DILocation(line: 1369, column: 5, scope: !9419)
!9429 = !DILocation(line: 1366, column: 39, scope: !9415)
!9430 = !DILocation(line: 1366, column: 43, scope: !9415)
!9431 = !DILocation(line: 1366, column: 37, scope: !9415)
!9432 = !DILocation(line: 1366, column: 5, scope: !9415)
!9433 = distinct !{!9433, !9416, !9434}
!9434 = !DILocation(line: 1369, column: 5, scope: !9410)
!9435 = !DILocation(line: 1371, column: 9, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9406, file: !3, line: 1371, column: 9)
!9437 = !DILocation(line: 1371, column: 14, scope: !9436)
!9438 = !DILocation(line: 1371, column: 9, scope: !9406)
!9439 = !DILocation(line: 1372, column: 6, scope: !9436)
!9440 = !DILocation(line: 1372, column: 11, scope: !9436)
!9441 = !DILocation(line: 1372, column: 36, scope: !9436)
!9442 = !DILocation(line: 1373, column: 4, scope: !9406)
!9443 = !DILocation(line: 1374, column: 3, scope: !9391)
!9444 = !DILocation(line: 1358, column: 50, scope: !9388)
!9445 = !DILocation(line: 1358, column: 55, scope: !9388)
!9446 = !DILocation(line: 1358, column: 48, scope: !9388)
!9447 = !DILocation(line: 1358, column: 3, scope: !9388)
!9448 = distinct !{!9448, !9389, !9449}
!9449 = !DILocation(line: 1374, column: 3, scope: !9382)
!9450 = !DILocation(line: 1375, column: 2, scope: !9376)
!9451 = !DILocation(line: 1353, column: 54, scope: !9373)
!9452 = !DILocation(line: 1353, column: 60, scope: !9373)
!9453 = !DILocation(line: 1353, column: 52, scope: !9373)
!9454 = !DILocation(line: 1353, column: 2, scope: !9373)
!9455 = distinct !{!9455, !9374, !9456}
!9456 = !DILocation(line: 1375, column: 2, scope: !9366)
!9457 = !DILocation(line: 1376, column: 1, scope: !9350)
!9458 = distinct !DISubprogram(name: "copy_object_lod", scope: !3, file: !3, line: 1378, type: !5785, scopeLine: 1379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!9459 = !DILocalVariable(name: "obn", arg: 1, scope: !9458, file: !3, line: 1378, type: !5166)
!9460 = !DILocation(line: 1378, column: 37, scope: !9458)
!9461 = !DILocalVariable(name: "ob", arg: 2, scope: !9458, file: !3, line: 1378, type: !5166)
!9462 = !DILocation(line: 1378, column: 50, scope: !9458)
!9463 = !DILocation(line: 1380, column: 21, scope: !9458)
!9464 = !DILocation(line: 1380, column: 26, scope: !9458)
!9465 = !DILocation(line: 1380, column: 38, scope: !9458)
!9466 = !DILocation(line: 1380, column: 42, scope: !9458)
!9467 = !DILocation(line: 1380, column: 2, scope: !9458)
!9468 = !DILocation(line: 1382, column: 6, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9458, file: !3, line: 1382, column: 6)
!9470 = !DILocation(line: 1382, column: 11, scope: !9469)
!9471 = !DILocation(line: 1382, column: 21, scope: !9469)
!9472 = !DILocation(line: 1382, column: 6, scope: !9458)
!9473 = !DILocation(line: 1383, column: 48, scope: !9469)
!9474 = !DILocation(line: 1383, column: 16, scope: !9469)
!9475 = !DILocation(line: 1383, column: 21, scope: !9469)
!9476 = !DILocation(line: 1383, column: 31, scope: !9469)
!9477 = !DILocation(line: 1383, column: 4, scope: !9469)
!9478 = !DILocation(line: 1383, column: 39, scope: !9469)
!9479 = !DILocation(line: 1383, column: 46, scope: !9469)
!9480 = !DILocation(line: 1383, column: 3, scope: !9469)
!9481 = !DILocation(line: 1385, column: 32, scope: !9458)
!9482 = !DILocation(line: 1385, column: 37, scope: !9458)
!9483 = !DILocation(line: 1385, column: 47, scope: !9458)
!9484 = !DILocation(line: 1385, column: 20, scope: !9458)
!9485 = !DILocation(line: 1385, column: 2, scope: !9458)
!9486 = !DILocation(line: 1385, column: 7, scope: !9458)
!9487 = !DILocation(line: 1385, column: 18, scope: !9458)
!9488 = !DILocation(line: 1386, column: 1, scope: !9458)
!9489 = distinct !DISubprogram(name: "BKE_object_copy", scope: !3, file: !3, line: 1515, type: !8987, scopeLine: 1516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!9490 = !DILocalVariable(name: "ob", arg: 1, scope: !9489, file: !3, line: 1515, type: !5166)
!9491 = !DILocation(line: 1515, column: 33, scope: !9489)
!9492 = !DILocation(line: 1517, column: 30, scope: !9489)
!9493 = !DILocation(line: 1517, column: 36, scope: !9489)
!9494 = !DILocation(line: 1517, column: 9, scope: !9489)
!9495 = !DILocation(line: 1517, column: 2, scope: !9489)
!9496 = distinct !DISubprogram(name: "BKE_object_make_local", scope: !3, file: !3, line: 1549, type: !5284, scopeLine: 1550, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!9497 = !DILocalVariable(name: "ob", arg: 1, scope: !9496, file: !3, line: 1549, type: !5166)
!9498 = !DILocation(line: 1549, column: 36, scope: !9496)
!9499 = !DILocalVariable(name: "bmain", scope: !9496, file: !3, line: 1551, type: !6308)
!9500 = !DILocation(line: 1551, column: 8, scope: !9496)
!9501 = !DILocation(line: 1551, column: 18, scope: !9496)
!9502 = !DILocalVariable(name: "sce", scope: !9496, file: !3, line: 1552, type: !6411)
!9503 = !DILocation(line: 1552, column: 9, scope: !9496)
!9504 = !DILocalVariable(name: "base", scope: !9496, file: !3, line: 1553, type: !5321)
!9505 = !DILocation(line: 1553, column: 8, scope: !9496)
!9506 = !DILocalVariable(name: "is_local", scope: !9496, file: !3, line: 1554, type: !1788)
!9507 = !DILocation(line: 1554, column: 7, scope: !9496)
!9508 = !DILocalVariable(name: "is_lib", scope: !9496, file: !3, line: 1554, type: !1788)
!9509 = !DILocation(line: 1554, column: 25, scope: !9496)
!9510 = !DILocation(line: 1561, column: 6, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9496, file: !3, line: 1561, column: 6)
!9512 = !DILocation(line: 1561, column: 10, scope: !9511)
!9513 = !DILocation(line: 1561, column: 13, scope: !9511)
!9514 = !DILocation(line: 1561, column: 17, scope: !9511)
!9515 = !DILocation(line: 1561, column: 6, scope: !9496)
!9516 = !DILocation(line: 1561, column: 26, scope: !9511)
!9517 = !DILocation(line: 1563, column: 14, scope: !9496)
!9518 = !DILocation(line: 1563, column: 18, scope: !9496)
!9519 = !DILocation(line: 1563, column: 29, scope: !9496)
!9520 = !DILocation(line: 1563, column: 2, scope: !9496)
!9521 = !DILocation(line: 1563, column: 6, scope: !9496)
!9522 = !DILocation(line: 1563, column: 12, scope: !9496)
!9523 = !DILocation(line: 1565, column: 6, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9496, file: !3, line: 1565, column: 6)
!9525 = !DILocation(line: 1565, column: 10, scope: !9524)
!9526 = !DILocation(line: 1565, column: 13, scope: !9524)
!9527 = !DILocation(line: 1565, column: 16, scope: !9524)
!9528 = !DILocation(line: 1565, column: 6, scope: !9496)
!9529 = !DILocation(line: 1566, column: 21, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9524, file: !3, line: 1565, column: 22)
!9531 = !DILocation(line: 1566, column: 29, scope: !9530)
!9532 = !DILocation(line: 1566, column: 33, scope: !9530)
!9533 = !DILocation(line: 1566, column: 3, scope: !9530)
!9534 = !DILocation(line: 1567, column: 23, scope: !9530)
!9535 = !DILocation(line: 1567, column: 3, scope: !9530)
!9536 = !DILocation(line: 1568, column: 2, scope: !9530)
!9537 = !DILocation(line: 1570, column: 14, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9539, file: !3, line: 1570, column: 3)
!9539 = distinct !DILexicalBlock(scope: !9524, file: !3, line: 1569, column: 7)
!9540 = !DILocation(line: 1570, column: 21, scope: !9538)
!9541 = !DILocation(line: 1570, column: 27, scope: !9538)
!9542 = !DILocation(line: 1570, column: 12, scope: !9538)
!9543 = !DILocation(line: 1570, column: 8, scope: !9538)
!9544 = !DILocation(line: 1570, column: 34, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9538, file: !3, line: 1570, column: 3)
!9546 = !DILocation(line: 1570, column: 38, scope: !9545)
!9547 = !DILocation(line: 1570, column: 41, scope: !9545)
!9548 = !DILocation(line: 0, scope: !9545)
!9549 = !DILocation(line: 1570, column: 3, scope: !9538)
!9550 = !DILocation(line: 1571, column: 28, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9552, file: !3, line: 1571, column: 8)
!9552 = distinct !DILexicalBlock(scope: !9545, file: !3, line: 1570, column: 88)
!9553 = !DILocation(line: 1571, column: 33, scope: !9551)
!9554 = !DILocation(line: 1571, column: 8, scope: !9551)
!9555 = !DILocation(line: 1571, column: 8, scope: !9552)
!9556 = !DILocation(line: 1572, column: 9, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9558, file: !3, line: 1572, column: 9)
!9558 = distinct !DILexicalBlock(scope: !9551, file: !3, line: 1571, column: 38)
!9559 = !DILocation(line: 1572, column: 14, scope: !9557)
!9560 = !DILocation(line: 1572, column: 17, scope: !9557)
!9561 = !DILocation(line: 1572, column: 9, scope: !9558)
!9562 = !DILocation(line: 1572, column: 29, scope: !9557)
!9563 = !DILocation(line: 1572, column: 22, scope: !9557)
!9564 = !DILocation(line: 1573, column: 19, scope: !9557)
!9565 = !DILocation(line: 1574, column: 4, scope: !9558)
!9566 = !DILocation(line: 1575, column: 3, scope: !9552)
!9567 = !DILocation(line: 1570, column: 74, scope: !9545)
!9568 = !DILocation(line: 1570, column: 79, scope: !9545)
!9569 = !DILocation(line: 1570, column: 82, scope: !9545)
!9570 = !DILocation(line: 1570, column: 72, scope: !9545)
!9571 = !DILocation(line: 1570, column: 3, scope: !9545)
!9572 = distinct !{!9572, !9549, !9573}
!9573 = !DILocation(line: 1575, column: 3, scope: !9538)
!9574 = !DILocation(line: 1577, column: 7, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9539, file: !3, line: 1577, column: 7)
!9576 = !DILocation(line: 1577, column: 16, scope: !9575)
!9577 = !DILocation(line: 1577, column: 19, scope: !9575)
!9578 = !DILocation(line: 1577, column: 26, scope: !9575)
!9579 = !DILocation(line: 1577, column: 7, scope: !9539)
!9580 = !DILocation(line: 1578, column: 22, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9575, file: !3, line: 1577, column: 36)
!9582 = !DILocation(line: 1578, column: 30, scope: !9581)
!9583 = !DILocation(line: 1578, column: 34, scope: !9581)
!9584 = !DILocation(line: 1578, column: 4, scope: !9581)
!9585 = !DILocation(line: 1579, column: 24, scope: !9581)
!9586 = !DILocation(line: 1579, column: 4, scope: !9581)
!9587 = !DILocation(line: 1580, column: 3, scope: !9581)
!9588 = !DILocation(line: 1581, column: 12, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9575, file: !3, line: 1581, column: 12)
!9590 = !DILocation(line: 1581, column: 21, scope: !9589)
!9591 = !DILocation(line: 1581, column: 24, scope: !9589)
!9592 = !DILocation(line: 1581, column: 12, scope: !9575)
!9593 = !DILocalVariable(name: "ob_new", scope: !9594, file: !3, line: 1582, type: !5166)
!9594 = distinct !DILexicalBlock(scope: !9589, file: !3, line: 1581, column: 32)
!9595 = !DILocation(line: 1582, column: 12, scope: !9594)
!9596 = !DILocation(line: 1582, column: 37, scope: !9594)
!9597 = !DILocation(line: 1582, column: 21, scope: !9594)
!9598 = !DILocation(line: 1584, column: 4, scope: !9594)
!9599 = !DILocation(line: 1584, column: 12, scope: !9594)
!9600 = !DILocation(line: 1584, column: 15, scope: !9594)
!9601 = !DILocation(line: 1584, column: 18, scope: !9594)
!9602 = !DILocation(line: 1587, column: 27, scope: !9594)
!9603 = !DILocation(line: 1587, column: 34, scope: !9594)
!9604 = !DILocation(line: 1587, column: 38, scope: !9594)
!9605 = !DILocation(line: 1587, column: 41, scope: !9594)
!9606 = !DILocation(line: 1587, column: 47, scope: !9594)
!9607 = !DILocation(line: 1587, column: 55, scope: !9594)
!9608 = !DILocation(line: 1587, column: 4, scope: !9594)
!9609 = !DILocation(line: 1589, column: 10, scope: !9594)
!9610 = !DILocation(line: 1589, column: 17, scope: !9594)
!9611 = !DILocation(line: 1589, column: 23, scope: !9594)
!9612 = !DILocation(line: 1589, column: 8, scope: !9594)
!9613 = !DILocation(line: 1590, column: 4, scope: !9594)
!9614 = !DILocation(line: 1590, column: 11, scope: !9594)
!9615 = !DILocation(line: 1591, column: 9, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9617, file: !3, line: 1591, column: 9)
!9617 = distinct !DILexicalBlock(scope: !9594, file: !3, line: 1590, column: 16)
!9618 = !DILocation(line: 1591, column: 14, scope: !9616)
!9619 = !DILocation(line: 1591, column: 17, scope: !9616)
!9620 = !DILocation(line: 1591, column: 21, scope: !9616)
!9621 = !DILocation(line: 1591, column: 9, scope: !9617)
!9622 = !DILocation(line: 1592, column: 13, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9616, file: !3, line: 1591, column: 30)
!9624 = !DILocation(line: 1592, column: 18, scope: !9623)
!9625 = !DILocation(line: 1592, column: 23, scope: !9623)
!9626 = !DILocation(line: 1592, column: 11, scope: !9623)
!9627 = !DILocation(line: 1593, column: 6, scope: !9623)
!9628 = !DILocation(line: 1593, column: 13, scope: !9623)
!9629 = !DILocation(line: 1594, column: 11, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !9631, file: !3, line: 1594, column: 11)
!9631 = distinct !DILexicalBlock(scope: !9623, file: !3, line: 1593, column: 19)
!9632 = !DILocation(line: 1594, column: 17, scope: !9630)
!9633 = !DILocation(line: 1594, column: 27, scope: !9630)
!9634 = !DILocation(line: 1594, column: 24, scope: !9630)
!9635 = !DILocation(line: 1594, column: 11, scope: !9631)
!9636 = !DILocation(line: 1595, column: 23, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9630, file: !3, line: 1594, column: 31)
!9638 = !DILocation(line: 1595, column: 8, scope: !9637)
!9639 = !DILocation(line: 1595, column: 14, scope: !9637)
!9640 = !DILocation(line: 1595, column: 21, scope: !9637)
!9641 = !DILocation(line: 1596, column: 8, scope: !9637)
!9642 = !DILocation(line: 1596, column: 16, scope: !9637)
!9643 = !DILocation(line: 1596, column: 19, scope: !9637)
!9644 = !DILocation(line: 1596, column: 21, scope: !9637)
!9645 = !DILocation(line: 1597, column: 8, scope: !9637)
!9646 = !DILocation(line: 1597, column: 12, scope: !9637)
!9647 = !DILocation(line: 1597, column: 15, scope: !9637)
!9648 = !DILocation(line: 1597, column: 17, scope: !9637)
!9649 = !DILocation(line: 1598, column: 7, scope: !9637)
!9650 = !DILocation(line: 1599, column: 14, scope: !9631)
!9651 = !DILocation(line: 1599, column: 20, scope: !9631)
!9652 = !DILocation(line: 1599, column: 12, scope: !9631)
!9653 = distinct !{!9653, !9627, !9654}
!9654 = !DILocation(line: 1600, column: 6, scope: !9623)
!9655 = !DILocation(line: 1601, column: 5, scope: !9623)
!9656 = !DILocation(line: 1602, column: 11, scope: !9617)
!9657 = !DILocation(line: 1602, column: 16, scope: !9617)
!9658 = !DILocation(line: 1602, column: 19, scope: !9617)
!9659 = !DILocation(line: 1602, column: 9, scope: !9617)
!9660 = distinct !{!9660, !9613, !9661}
!9661 = !DILocation(line: 1603, column: 4, scope: !9594)
!9662 = !DILocation(line: 1604, column: 3, scope: !9594)
!9663 = !DILocation(line: 1606, column: 1, scope: !9496)
!9664 = distinct !DISubprogram(name: "extern_local_object", scope: !3, file: !3, line: 1532, type: !5284, scopeLine: 1533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!9665 = !DILocalVariable(name: "ob", arg: 1, scope: !9664, file: !3, line: 1532, type: !5166)
!9666 = !DILocation(line: 1532, column: 41, scope: !9664)
!9667 = !DILocalVariable(name: "psys", scope: !9664, file: !3, line: 1534, type: !5351)
!9668 = !DILocation(line: 1534, column: 18, scope: !9664)
!9669 = !DILocation(line: 1536, column: 22, scope: !9664)
!9670 = !DILocation(line: 1536, column: 26, scope: !9664)
!9671 = !DILocation(line: 1536, column: 16, scope: !9664)
!9672 = !DILocation(line: 1536, column: 2, scope: !9664)
!9673 = !DILocation(line: 1537, column: 22, scope: !9664)
!9674 = !DILocation(line: 1537, column: 26, scope: !9664)
!9675 = !DILocation(line: 1537, column: 16, scope: !9664)
!9676 = !DILocation(line: 1537, column: 2, scope: !9664)
!9677 = !DILocation(line: 1538, column: 22, scope: !9664)
!9678 = !DILocation(line: 1538, column: 26, scope: !9664)
!9679 = !DILocation(line: 1538, column: 16, scope: !9664)
!9680 = !DILocation(line: 1538, column: 2, scope: !9664)
!9681 = !DILocation(line: 1539, column: 22, scope: !9664)
!9682 = !DILocation(line: 1539, column: 26, scope: !9664)
!9683 = !DILocation(line: 1539, column: 16, scope: !9664)
!9684 = !DILocation(line: 1539, column: 2, scope: !9664)
!9685 = !DILocation(line: 1541, column: 23, scope: !9664)
!9686 = !DILocation(line: 1541, column: 27, scope: !9664)
!9687 = !DILocation(line: 1541, column: 32, scope: !9664)
!9688 = !DILocation(line: 1541, column: 36, scope: !9664)
!9689 = !DILocation(line: 1541, column: 2, scope: !9664)
!9690 = !DILocation(line: 1543, column: 14, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 1543, column: 2)
!9692 = !DILocation(line: 1543, column: 18, scope: !9691)
!9693 = !DILocation(line: 1543, column: 33, scope: !9691)
!9694 = !DILocation(line: 1543, column: 12, scope: !9691)
!9695 = !DILocation(line: 1543, column: 7, scope: !9691)
!9696 = !DILocation(line: 1543, column: 40, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9691, file: !3, line: 1543, column: 2)
!9698 = !DILocation(line: 1543, column: 2, scope: !9691)
!9699 = !DILocation(line: 1544, column: 23, scope: !9697)
!9700 = !DILocation(line: 1544, column: 29, scope: !9697)
!9701 = !DILocation(line: 1544, column: 17, scope: !9697)
!9702 = !DILocation(line: 1544, column: 3, scope: !9697)
!9703 = !DILocation(line: 1543, column: 53, scope: !9697)
!9704 = !DILocation(line: 1543, column: 59, scope: !9697)
!9705 = !DILocation(line: 1543, column: 51, scope: !9697)
!9706 = !DILocation(line: 1543, column: 2, scope: !9697)
!9707 = distinct !{!9707, !9698, !9708}
!9708 = !DILocation(line: 1544, column: 33, scope: !9691)
!9709 = !DILocation(line: 1546, column: 26, scope: !9664)
!9710 = !DILocation(line: 1546, column: 2, scope: !9664)
!9711 = !DILocation(line: 1547, column: 1, scope: !9664)
!9712 = distinct !DISubprogram(name: "BKE_object_is_libdata", scope: !3, file: !3, line: 1611, type: !8031, scopeLine: 1612, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!9713 = !DILocalVariable(name: "ob", arg: 1, scope: !9712, file: !3, line: 1611, type: !5166)
!9714 = !DILocation(line: 1611, column: 36, scope: !9712)
!9715 = !DILocation(line: 1613, column: 7, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !9712, file: !3, line: 1613, column: 6)
!9717 = !DILocation(line: 1613, column: 6, scope: !9712)
!9718 = !DILocation(line: 1613, column: 11, scope: !9716)
!9719 = !DILocation(line: 1614, column: 6, scope: !9720)
!9720 = distinct !DILexicalBlock(scope: !9712, file: !3, line: 1614, column: 6)
!9721 = !DILocation(line: 1614, column: 10, scope: !9720)
!9722 = !DILocation(line: 1614, column: 6, scope: !9712)
!9723 = !DILocation(line: 1614, column: 17, scope: !9720)
!9724 = !DILocation(line: 1615, column: 6, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9712, file: !3, line: 1615, column: 6)
!9726 = !DILocation(line: 1615, column: 10, scope: !9725)
!9727 = !DILocation(line: 1615, column: 13, scope: !9725)
!9728 = !DILocation(line: 1615, column: 6, scope: !9712)
!9729 = !DILocation(line: 1615, column: 18, scope: !9725)
!9730 = !DILocation(line: 1616, column: 2, scope: !9712)
!9731 = !DILocation(line: 1617, column: 1, scope: !9712)
!9732 = distinct !DISubprogram(name: "BKE_object_obdata_is_libdata", scope: !3, file: !3, line: 1620, type: !8031, scopeLine: 1621, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!9733 = !DILocalVariable(name: "ob", arg: 1, scope: !9732, file: !3, line: 1620, type: !5166)
!9734 = !DILocation(line: 1620, column: 43, scope: !9732)
!9735 = !DILocation(line: 1622, column: 7, scope: !9736)
!9736 = distinct !DILexicalBlock(scope: !9732, file: !3, line: 1622, column: 6)
!9737 = !DILocation(line: 1622, column: 6, scope: !9732)
!9738 = !DILocation(line: 1622, column: 11, scope: !9736)
!9739 = !DILocation(line: 1623, column: 6, scope: !9740)
!9740 = distinct !DILexicalBlock(scope: !9732, file: !3, line: 1623, column: 6)
!9741 = !DILocation(line: 1623, column: 10, scope: !9740)
!9742 = !DILocation(line: 1623, column: 16, scope: !9740)
!9743 = !DILocation(line: 1623, column: 20, scope: !9740)
!9744 = !DILocation(line: 1623, column: 24, scope: !9740)
!9745 = !DILocation(line: 1623, column: 29, scope: !9740)
!9746 = !DILocation(line: 1623, column: 37, scope: !9740)
!9747 = !DILocation(line: 1623, column: 47, scope: !9740)
!9748 = !DILocation(line: 1623, column: 51, scope: !9740)
!9749 = !DILocation(line: 1623, column: 41, scope: !9740)
!9750 = !DILocation(line: 1623, column: 58, scope: !9740)
!9751 = !DILocation(line: 1623, column: 62, scope: !9740)
!9752 = !DILocation(line: 1623, column: 6, scope: !9732)
!9753 = !DILocation(line: 1623, column: 72, scope: !9740)
!9754 = !DILocation(line: 1624, column: 6, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9732, file: !3, line: 1624, column: 6)
!9756 = !DILocation(line: 1624, column: 10, scope: !9755)
!9757 = !DILocation(line: 1624, column: 13, scope: !9755)
!9758 = !DILocation(line: 1624, column: 6, scope: !9732)
!9759 = !DILocation(line: 1624, column: 18, scope: !9755)
!9760 = !DILocation(line: 1625, column: 6, scope: !9761)
!9761 = distinct !DILexicalBlock(scope: !9732, file: !3, line: 1625, column: 6)
!9762 = !DILocation(line: 1625, column: 10, scope: !9761)
!9763 = !DILocation(line: 1625, column: 15, scope: !9761)
!9764 = !DILocation(line: 1625, column: 6, scope: !9732)
!9765 = !DILocation(line: 1625, column: 24, scope: !9761)
!9766 = !DILocation(line: 1626, column: 13, scope: !9767)
!9767 = distinct !DILexicalBlock(scope: !9732, file: !3, line: 1626, column: 6)
!9768 = !DILocation(line: 1626, column: 17, scope: !9767)
!9769 = !DILocation(line: 1626, column: 7, scope: !9767)
!9770 = !DILocation(line: 1626, column: 24, scope: !9767)
!9771 = !DILocation(line: 1626, column: 6, scope: !9767)
!9772 = !DILocation(line: 1626, column: 6, scope: !9732)
!9773 = !DILocation(line: 1626, column: 29, scope: !9767)
!9774 = !DILocation(line: 1628, column: 2, scope: !9732)
!9775 = !DILocation(line: 1629, column: 1, scope: !9732)
!9776 = distinct !DISubprogram(name: "BKE_object_copy_proxy_drivers", scope: !3, file: !3, line: 1647, type: !5785, scopeLine: 1648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!9777 = !DILocalVariable(name: "ob", arg: 1, scope: !9776, file: !3, line: 1647, type: !5166)
!9778 = !DILocation(line: 1647, column: 44, scope: !9776)
!9779 = !DILocalVariable(name: "target", arg: 2, scope: !9776, file: !3, line: 1647, type: !5166)
!9780 = !DILocation(line: 1647, column: 56, scope: !9776)
!9781 = !DILocation(line: 1649, column: 7, scope: !9782)
!9782 = distinct !DILexicalBlock(scope: !9776, file: !3, line: 1649, column: 6)
!9783 = !DILocation(line: 1649, column: 15, scope: !9782)
!9784 = !DILocation(line: 1649, column: 6, scope: !9782)
!9785 = !DILocation(line: 1649, column: 20, scope: !9782)
!9786 = !DILocation(line: 1649, column: 24, scope: !9782)
!9787 = !DILocation(line: 1649, column: 32, scope: !9782)
!9788 = !DILocation(line: 1649, column: 37, scope: !9782)
!9789 = !DILocation(line: 1649, column: 45, scope: !9782)
!9790 = !DILocation(line: 1649, column: 23, scope: !9782)
!9791 = !DILocation(line: 1649, column: 6, scope: !9776)
!9792 = !DILocalVariable(name: "fcu", scope: !9793, file: !3, line: 1650, type: !9794)
!9793 = distinct !DILexicalBlock(scope: !9782, file: !3, line: 1649, column: 53)
!9794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9795, size: 64)
!9795 = !DIDerivedType(tag: DW_TAG_typedef, name: "FCurve", file: !343, line: 463, baseType: !9796)
!9796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FCurve", file: !343, line: 433, size: 896, elements: !9797)
!9797 = !{!9798, !9800, !9801, !9823, !9835, !9836, !9838, !9846, !9847, !9848, !9849, !9850, !9851, !9852, !9853, !9854, !9855}
!9798 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9796, file: !343, line: 434, baseType: !9799, size: 64)
!9799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9796, size: 64)
!9800 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9796, file: !343, line: 434, baseType: !9799, size: 64, offset: 64)
!9801 = !DIDerivedType(tag: DW_TAG_member, name: "grp", scope: !9796, file: !343, line: 437, baseType: !9802, size: 64, offset: 128)
!9802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9803, size: 64)
!9803 = !DIDerivedType(tag: DW_TAG_typedef, name: "bActionGroup", file: !72, line: 450, baseType: !9804)
!9804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bActionGroup", file: !72, line: 440, size: 960, elements: !9805)
!9805 = !{!9806, !9808, !9809, !9810, !9811, !9812, !9813}
!9806 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9804, file: !72, line: 441, baseType: !9807, size: 64)
!9807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9804, size: 64)
!9808 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9804, file: !72, line: 441, baseType: !9807, size: 64, offset: 64)
!9809 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !9804, file: !72, line: 443, baseType: !658, size: 128, offset: 128)
!9810 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9804, file: !72, line: 445, baseType: !73, size: 32, offset: 256)
!9811 = !DIDerivedType(tag: DW_TAG_member, name: "customCol", scope: !9804, file: !72, line: 446, baseType: !73, size: 32, offset: 288)
!9812 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9804, file: !72, line: 447, baseType: !648, size: 512, offset: 320)
!9813 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !9804, file: !72, line: 449, baseType: !9814, size: 128, offset: 832)
!9814 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThemeWireColor", file: !9815, line: 347, baseType: !9816)
!9815 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ThemeWireColor", file: !9815, line: 340, size: 128, elements: !9817)
!9817 = !{!9818, !9819, !9820, !9821, !9822}
!9818 = !DIDerivedType(tag: DW_TAG_member, name: "solid", scope: !9816, file: !9815, line: 341, baseType: !1725, size: 32)
!9819 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !9816, file: !9815, line: 342, baseType: !1725, size: 32, offset: 32)
!9820 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !9816, file: !9815, line: 343, baseType: !1725, size: 32, offset: 64)
!9821 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9816, file: !9815, line: 345, baseType: !632, size: 16, offset: 96)
!9822 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9816, file: !9815, line: 346, baseType: !632, size: 16, offset: 112)
!9823 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !9796, file: !343, line: 440, baseType: !9824, size: 64, offset: 192)
!9824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9825, size: 64)
!9825 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelDriver", file: !343, line: 386, baseType: !9826)
!9826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChannelDriver", file: !343, line: 371, size: 2368, elements: !9827)
!9827 = !{!9828, !9829, !9830, !9831, !9832, !9833, !9834}
!9828 = !DIDerivedType(tag: DW_TAG_member, name: "variables", scope: !9826, file: !343, line: 372, baseType: !658, size: 128)
!9829 = !DIDerivedType(tag: DW_TAG_member, name: "expression", scope: !9826, file: !343, line: 377, baseType: !1260, size: 2048, offset: 128)
!9830 = !DIDerivedType(tag: DW_TAG_member, name: "expr_comp", scope: !9826, file: !343, line: 378, baseType: !592, size: 64, offset: 2176)
!9831 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !9826, file: !343, line: 380, baseType: !713, size: 32, offset: 2240)
!9832 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !9826, file: !343, line: 381, baseType: !713, size: 32, offset: 2272)
!9833 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9826, file: !343, line: 384, baseType: !73, size: 32, offset: 2304)
!9834 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9826, file: !343, line: 385, baseType: !73, size: 32, offset: 2336)
!9835 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !9796, file: !343, line: 442, baseType: !658, size: 128, offset: 256)
!9836 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !9796, file: !343, line: 445, baseType: !9837, size: 64, offset: 384)
!9837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 64)
!9838 = !DIDerivedType(tag: DW_TAG_member, name: "fpt", scope: !9796, file: !343, line: 446, baseType: !9839, size: 64, offset: 448)
!9839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9840, size: 64)
!9840 = !DIDerivedType(tag: DW_TAG_typedef, name: "FPoint", file: !343, line: 430, baseType: !9841)
!9841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FPoint", file: !343, line: 426, size: 128, elements: !9842)
!9842 = !{!9843, !9844, !9845}
!9843 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !9841, file: !343, line: 427, baseType: !1118, size: 64)
!9844 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9841, file: !343, line: 428, baseType: !73, size: 32, offset: 64)
!9845 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9841, file: !343, line: 429, baseType: !73, size: 32, offset: 96)
!9846 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !9796, file: !343, line: 447, baseType: !7, size: 32, offset: 512)
!9847 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !9796, file: !343, line: 450, baseType: !713, size: 32, offset: 544)
!9848 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9796, file: !343, line: 451, baseType: !632, size: 16, offset: 576)
!9849 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !9796, file: !343, line: 452, baseType: !632, size: 16, offset: 592)
!9850 = !DIDerivedType(tag: DW_TAG_member, name: "array_index", scope: !9796, file: !343, line: 455, baseType: !73, size: 32, offset: 608)
!9851 = !DIDerivedType(tag: DW_TAG_member, name: "rna_path", scope: !9796, file: !343, line: 456, baseType: !1164, size: 64, offset: 640)
!9852 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !9796, file: !343, line: 459, baseType: !73, size: 32, offset: 704)
!9853 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !9796, file: !343, line: 460, baseType: !835, size: 96, offset: 736)
!9854 = !DIDerivedType(tag: DW_TAG_member, name: "prev_norm_factor", scope: !9796, file: !343, line: 462, baseType: !713, size: 32, offset: 832)
!9855 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9796, file: !343, line: 462, baseType: !713, size: 32, offset: 864)
!9856 = !DILocation(line: 1650, column: 11, scope: !9793)
!9857 = !DILocation(line: 1653, column: 8, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9793, file: !3, line: 1653, column: 7)
!9859 = !DILocation(line: 1653, column: 12, scope: !9858)
!9860 = !DILocation(line: 1653, column: 7, scope: !9793)
!9861 = !DILocation(line: 1654, column: 35, scope: !9858)
!9862 = !DILocation(line: 1654, column: 39, scope: !9858)
!9863 = !DILocation(line: 1654, column: 14, scope: !9858)
!9864 = !DILocation(line: 1654, column: 4, scope: !9858)
!9865 = !DILocation(line: 1654, column: 8, scope: !9858)
!9866 = !DILocation(line: 1654, column: 12, scope: !9858)
!9867 = !DILocation(line: 1657, column: 17, scope: !9793)
!9868 = !DILocation(line: 1657, column: 21, scope: !9793)
!9869 = !DILocation(line: 1657, column: 26, scope: !9793)
!9870 = !DILocation(line: 1657, column: 3, scope: !9793)
!9871 = !DILocation(line: 1658, column: 17, scope: !9793)
!9872 = !DILocation(line: 1658, column: 21, scope: !9793)
!9873 = !DILocation(line: 1658, column: 26, scope: !9793)
!9874 = !DILocation(line: 1658, column: 36, scope: !9793)
!9875 = !DILocation(line: 1658, column: 44, scope: !9793)
!9876 = !DILocation(line: 1658, column: 49, scope: !9793)
!9877 = !DILocation(line: 1658, column: 3, scope: !9793)
!9878 = !DILocation(line: 1660, column: 14, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9793, file: !3, line: 1660, column: 3)
!9880 = !DILocation(line: 1660, column: 18, scope: !9879)
!9881 = !DILocation(line: 1660, column: 23, scope: !9879)
!9882 = !DILocation(line: 1660, column: 31, scope: !9879)
!9883 = !DILocation(line: 1660, column: 12, scope: !9879)
!9884 = !DILocation(line: 1660, column: 8, scope: !9879)
!9885 = !DILocation(line: 1660, column: 38, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9879, file: !3, line: 1660, column: 3)
!9887 = !DILocation(line: 1660, column: 3, scope: !9879)
!9888 = !DILocalVariable(name: "driver", scope: !9889, file: !3, line: 1661, type: !9824)
!9889 = distinct !DILexicalBlock(scope: !9886, file: !3, line: 1660, column: 60)
!9890 = !DILocation(line: 1661, column: 19, scope: !9889)
!9891 = !DILocation(line: 1661, column: 28, scope: !9889)
!9892 = !DILocation(line: 1661, column: 33, scope: !9889)
!9893 = !DILocalVariable(name: "dvar", scope: !9889, file: !3, line: 1662, type: !9894)
!9894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9895, size: 64)
!9895 = !DIDerivedType(tag: DW_TAG_typedef, name: "DriverVar", file: !343, line: 338, baseType: !9896)
!9896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DriverVar", file: !343, line: 328, size: 4288, elements: !9897)
!9897 = !{!9898, !9900, !9901, !9902, !9913, !9914, !9915}
!9898 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9896, file: !343, line: 329, baseType: !9899, size: 64)
!9899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9896, size: 64)
!9900 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9896, file: !343, line: 329, baseType: !9899, size: 64, offset: 64)
!9901 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9896, file: !343, line: 331, baseType: !648, size: 512, offset: 128)
!9902 = !DIDerivedType(tag: DW_TAG_member, name: "targets", scope: !9896, file: !343, line: 333, baseType: !9903, size: 3584, offset: 640)
!9903 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9904, size: 3584, elements: !1504)
!9904 = !DIDerivedType(tag: DW_TAG_typedef, name: "DriverTarget", file: !343, line: 279, baseType: !9905)
!9905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DriverTarget", file: !343, line: 269, size: 448, elements: !9906)
!9906 = !{!9907, !9908, !9909, !9910, !9911, !9912}
!9907 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9905, file: !343, line: 270, baseType: !613, size: 64)
!9908 = !DIDerivedType(tag: DW_TAG_member, name: "rna_path", scope: !9905, file: !343, line: 272, baseType: !1164, size: 64, offset: 64)
!9909 = !DIDerivedType(tag: DW_TAG_member, name: "pchan_name", scope: !9905, file: !343, line: 274, baseType: !780, size: 256, offset: 128)
!9910 = !DIDerivedType(tag: DW_TAG_member, name: "transChan", scope: !9905, file: !343, line: 275, baseType: !632, size: 16, offset: 384)
!9911 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9905, file: !343, line: 277, baseType: !632, size: 16, offset: 400)
!9912 = !DIDerivedType(tag: DW_TAG_member, name: "idtype", scope: !9905, file: !343, line: 278, baseType: !73, size: 32, offset: 416)
!9913 = !DIDerivedType(tag: DW_TAG_member, name: "num_targets", scope: !9896, file: !343, line: 334, baseType: !632, size: 16, offset: 4224)
!9914 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9896, file: !343, line: 336, baseType: !632, size: 16, offset: 4240)
!9915 = !DIDerivedType(tag: DW_TAG_member, name: "curval", scope: !9896, file: !343, line: 337, baseType: !713, size: 32, offset: 4256)
!9916 = !DILocation(line: 1662, column: 15, scope: !9889)
!9917 = !DILocation(line: 1664, column: 16, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9889, file: !3, line: 1664, column: 4)
!9919 = !DILocation(line: 1664, column: 24, scope: !9918)
!9920 = !DILocation(line: 1664, column: 34, scope: !9918)
!9921 = !DILocation(line: 1664, column: 14, scope: !9918)
!9922 = !DILocation(line: 1664, column: 9, scope: !9918)
!9923 = !DILocation(line: 1664, column: 41, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9918, file: !3, line: 1664, column: 4)
!9925 = !DILocation(line: 1664, column: 4, scope: !9918)
!9926 = !DILocalVariable(name: "dtar", scope: !9927, file: !3, line: 1666, type: !9929)
!9927 = distinct !DILexicalBlock(scope: !9928, file: !3, line: 1666, column: 5)
!9928 = distinct !DILexicalBlock(scope: !9924, file: !3, line: 1664, column: 66)
!9929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9904, size: 64)
!9930 = !DILocation(line: 1666, column: 5, scope: !9927)
!9931 = !DILocalVariable(name: "tarIndex", scope: !9927, file: !3, line: 1666, type: !73)
!9932 = !DILocation(line: 1666, column: 5, scope: !9933)
!9933 = distinct !DILexicalBlock(scope: !9934, file: !3, line: 1666, column: 5)
!9934 = distinct !DILexicalBlock(scope: !9927, file: !3, line: 1666, column: 5)
!9935 = !DILocation(line: 1666, column: 5, scope: !9934)
!9936 = !DILocation(line: 1668, column: 10, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9938, file: !3, line: 1668, column: 10)
!9938 = distinct !DILexicalBlock(scope: !9933, file: !3, line: 1667, column: 5)
!9939 = !DILocation(line: 1668, column: 16, scope: !9937)
!9940 = !DILocation(line: 1668, column: 10, scope: !9938)
!9941 = !DILocation(line: 1669, column: 21, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9943, file: !3, line: 1669, column: 11)
!9943 = distinct !DILexicalBlock(scope: !9937, file: !3, line: 1668, column: 20)
!9944 = !DILocation(line: 1669, column: 27, scope: !9942)
!9945 = !DILocation(line: 1669, column: 11, scope: !9942)
!9946 = !DILocation(line: 1669, column: 33, scope: !9942)
!9947 = !DILocation(line: 1669, column: 30, scope: !9942)
!9948 = !DILocation(line: 1669, column: 11, scope: !9943)
!9949 = !DILocation(line: 1670, column: 25, scope: !9942)
!9950 = !DILocation(line: 1670, column: 19, scope: !9942)
!9951 = !DILocation(line: 1670, column: 8, scope: !9942)
!9952 = !DILocation(line: 1670, column: 14, scope: !9942)
!9953 = !DILocation(line: 1670, column: 17, scope: !9942)
!9954 = !DILocation(line: 1675, column: 12, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9956, file: !3, line: 1675, column: 12)
!9956 = distinct !DILexicalBlock(scope: !9942, file: !3, line: 1671, column: 12)
!9957 = !DILocation(line: 1675, column: 16, scope: !9955)
!9958 = !DILocation(line: 1675, column: 19, scope: !9955)
!9959 = !DILocation(line: 1675, column: 23, scope: !9955)
!9960 = !DILocation(line: 1675, column: 12, scope: !9956)
!9961 = !DILocation(line: 1676, column: 29, scope: !9955)
!9962 = !DILocation(line: 1676, column: 35, scope: !9955)
!9963 = !DILocation(line: 1676, column: 9, scope: !9955)
!9964 = !DILocation(line: 1678, column: 6, scope: !9943)
!9965 = !DILocation(line: 1679, column: 5, scope: !9938)
!9966 = distinct !{!9966, !9935, !9967}
!9967 = !DILocation(line: 1679, column: 5, scope: !9934)
!9968 = !DILocation(line: 1681, column: 4, scope: !9928)
!9969 = !DILocation(line: 1664, column: 54, scope: !9924)
!9970 = !DILocation(line: 1664, column: 60, scope: !9924)
!9971 = !DILocation(line: 1664, column: 52, scope: !9924)
!9972 = !DILocation(line: 1664, column: 4, scope: !9924)
!9973 = distinct !{!9973, !9925, !9974}
!9974 = !DILocation(line: 1681, column: 4, scope: !9918)
!9975 = !DILocation(line: 1682, column: 3, scope: !9889)
!9976 = !DILocation(line: 1660, column: 49, scope: !9886)
!9977 = !DILocation(line: 1660, column: 54, scope: !9886)
!9978 = !DILocation(line: 1660, column: 47, scope: !9886)
!9979 = !DILocation(line: 1660, column: 3, scope: !9886)
!9980 = distinct !{!9980, !9887, !9981}
!9981 = !DILocation(line: 1682, column: 3, scope: !9879)
!9982 = !DILocation(line: 1683, column: 2, scope: !9793)
!9983 = !DILocation(line: 1684, column: 1, scope: !9776)
!9984 = distinct !DISubprogram(name: "BKE_object_make_proxy", scope: !3, file: !3, line: 1690, type: !9985, scopeLine: 1691, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!9985 = !DISubroutineType(types: !9986)
!9986 = !{null, !5166, !5166, !5166}
!9987 = !DILocalVariable(name: "ob", arg: 1, scope: !9984, file: !3, line: 1690, type: !5166)
!9988 = !DILocation(line: 1690, column: 36, scope: !9984)
!9989 = !DILocalVariable(name: "target", arg: 2, scope: !9984, file: !3, line: 1690, type: !5166)
!9990 = !DILocation(line: 1690, column: 48, scope: !9984)
!9991 = !DILocalVariable(name: "gob", arg: 3, scope: !9984, file: !3, line: 1690, type: !5166)
!9992 = !DILocation(line: 1690, column: 64, scope: !9984)
!9993 = !DILocation(line: 1693, column: 6, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 1693, column: 6)
!9995 = !DILocation(line: 1693, column: 10, scope: !9994)
!9996 = !DILocation(line: 1693, column: 13, scope: !9994)
!9997 = !DILocation(line: 1693, column: 17, scope: !9994)
!9998 = !DILocation(line: 1693, column: 20, scope: !9994)
!9999 = !DILocation(line: 1693, column: 28, scope: !9994)
!10000 = !DILocation(line: 1693, column: 31, scope: !9994)
!10001 = !DILocation(line: 1693, column: 35, scope: !9994)
!10002 = !DILocation(line: 1693, column: 6, scope: !9984)
!10003 = !DILocation(line: 1694, column: 3, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !9994, file: !3, line: 1693, column: 44)
!10005 = !DILocation(line: 1695, column: 3, scope: !10004)
!10006 = !DILocation(line: 1698, column: 14, scope: !9984)
!10007 = !DILocation(line: 1698, column: 2, scope: !9984)
!10008 = !DILocation(line: 1698, column: 6, scope: !9984)
!10009 = !DILocation(line: 1698, column: 12, scope: !9984)
!10010 = !DILocation(line: 1699, column: 20, scope: !9984)
!10011 = !DILocation(line: 1699, column: 2, scope: !9984)
!10012 = !DILocation(line: 1699, column: 6, scope: !9984)
!10013 = !DILocation(line: 1699, column: 18, scope: !9984)
!10014 = !DILocation(line: 1700, column: 17, scope: !9984)
!10015 = !DILocation(line: 1700, column: 25, scope: !9984)
!10016 = !DILocation(line: 1700, column: 2, scope: !9984)
!10017 = !DILocation(line: 1702, column: 21, scope: !9984)
!10018 = !DILocation(line: 1702, column: 25, scope: !9984)
!10019 = !DILocation(line: 1702, column: 2, scope: !9984)
!10020 = !DILocation(line: 1703, column: 21, scope: !9984)
!10021 = !DILocation(line: 1703, column: 29, scope: !9984)
!10022 = !DILocation(line: 1703, column: 2, scope: !9984)
!10023 = !DILocation(line: 1711, column: 6, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 1711, column: 6)
!10025 = !DILocation(line: 1711, column: 6, scope: !9984)
!10026 = !DILocation(line: 1712, column: 17, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !10024, file: !3, line: 1711, column: 11)
!10028 = !DILocation(line: 1712, column: 25, scope: !10027)
!10029 = !DILocation(line: 1712, column: 3, scope: !10027)
!10030 = !DILocation(line: 1712, column: 7, scope: !10027)
!10031 = !DILocation(line: 1712, column: 15, scope: !10027)
!10032 = !DILocation(line: 1713, column: 15, scope: !10027)
!10033 = !DILocation(line: 1713, column: 19, scope: !10027)
!10034 = !DILocation(line: 1713, column: 26, scope: !10027)
!10035 = !DILocation(line: 1713, column: 31, scope: !10027)
!10036 = !DILocation(line: 1713, column: 38, scope: !10027)
!10037 = !DILocation(line: 1713, column: 46, scope: !10027)
!10038 = !DILocation(line: 1713, column: 3, scope: !10027)
!10039 = !DILocation(line: 1714, column: 7, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10027, file: !3, line: 1714, column: 7)
!10041 = !DILocation(line: 1714, column: 12, scope: !10040)
!10042 = !DILocation(line: 1714, column: 7, scope: !10027)
!10043 = !DILocalVariable(name: "tvec", scope: !10044, file: !3, line: 1715, type: !835)
!10044 = distinct !DILexicalBlock(scope: !10040, file: !3, line: 1714, column: 23)
!10045 = !DILocation(line: 1715, column: 10, scope: !10044)
!10046 = !DILocation(line: 1716, column: 15, scope: !10044)
!10047 = !DILocation(line: 1716, column: 21, scope: !10044)
!10048 = !DILocation(line: 1716, column: 26, scope: !10044)
!10049 = !DILocation(line: 1716, column: 37, scope: !10044)
!10050 = !DILocation(line: 1716, column: 4, scope: !10044)
!10051 = !DILocation(line: 1717, column: 19, scope: !10044)
!10052 = !DILocation(line: 1717, column: 23, scope: !10044)
!10053 = !DILocation(line: 1717, column: 30, scope: !10044)
!10054 = !DILocation(line: 1717, column: 4, scope: !10044)
!10055 = !DILocation(line: 1718, column: 14, scope: !10044)
!10056 = !DILocation(line: 1718, column: 18, scope: !10044)
!10057 = !DILocation(line: 1718, column: 28, scope: !10044)
!10058 = !DILocation(line: 1718, column: 4, scope: !10044)
!10059 = !DILocation(line: 1719, column: 3, scope: !10044)
!10060 = !DILocation(line: 1720, column: 25, scope: !10027)
!10061 = !DILocation(line: 1720, column: 29, scope: !10027)
!10062 = !DILocation(line: 1720, column: 33, scope: !10027)
!10063 = !DILocation(line: 1720, column: 3, scope: !10027)
!10064 = !DILocation(line: 1721, column: 2, scope: !10027)
!10065 = !DILocation(line: 1723, column: 29, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10024, file: !3, line: 1722, column: 7)
!10067 = !DILocation(line: 1723, column: 33, scope: !10066)
!10068 = !DILocation(line: 1723, column: 3, scope: !10066)
!10069 = !DILocation(line: 1724, column: 16, scope: !10066)
!10070 = !DILocation(line: 1724, column: 24, scope: !10066)
!10071 = !DILocation(line: 1724, column: 3, scope: !10066)
!10072 = !DILocation(line: 1724, column: 7, scope: !10066)
!10073 = !DILocation(line: 1724, column: 14, scope: !10066)
!10074 = !DILocation(line: 1725, column: 14, scope: !10066)
!10075 = !DILocation(line: 1725, column: 18, scope: !10066)
!10076 = !DILocation(line: 1725, column: 29, scope: !10066)
!10077 = !DILocation(line: 1725, column: 37, scope: !10066)
!10078 = !DILocation(line: 1725, column: 3, scope: !10066)
!10079 = !DILocation(line: 1729, column: 32, scope: !9984)
!10080 = !DILocation(line: 1729, column: 36, scope: !9984)
!10081 = !DILocation(line: 1729, column: 2, scope: !9984)
!10082 = !DILocation(line: 1735, column: 13, scope: !9984)
!10083 = !DILocation(line: 1735, column: 21, scope: !9984)
!10084 = !DILocation(line: 1735, column: 2, scope: !9984)
!10085 = !DILocation(line: 1735, column: 6, scope: !9984)
!10086 = !DILocation(line: 1735, column: 11, scope: !9984)
!10087 = !DILocation(line: 1736, column: 13, scope: !9984)
!10088 = !DILocation(line: 1736, column: 21, scope: !9984)
!10089 = !DILocation(line: 1736, column: 2, scope: !9984)
!10090 = !DILocation(line: 1736, column: 6, scope: !9984)
!10091 = !DILocation(line: 1736, column: 11, scope: !9984)
!10092 = !DILocation(line: 1737, column: 19, scope: !9984)
!10093 = !DILocation(line: 1737, column: 23, scope: !9984)
!10094 = !DILocation(line: 1737, column: 13, scope: !9984)
!10095 = !DILocation(line: 1737, column: 2, scope: !9984)
!10096 = !DILocation(line: 1740, column: 15, scope: !9984)
!10097 = !DILocation(line: 1740, column: 19, scope: !9984)
!10098 = !DILocation(line: 1740, column: 26, scope: !9984)
!10099 = !DILocation(line: 1740, column: 2, scope: !9984)
!10100 = !DILocation(line: 1740, column: 6, scope: !9984)
!10101 = !DILocation(line: 1740, column: 13, scope: !9984)
!10102 = !DILocation(line: 1741, column: 6, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 1741, column: 6)
!10104 = !DILocation(line: 1741, column: 10, scope: !10103)
!10105 = !DILocation(line: 1741, column: 6, scope: !9984)
!10106 = !DILocation(line: 1741, column: 15, scope: !10103)
!10107 = !DILocation(line: 1741, column: 25, scope: !10103)
!10108 = !DILocation(line: 1741, column: 29, scope: !10103)
!10109 = !DILocation(line: 1742, column: 6, scope: !10110)
!10110 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 1742, column: 6)
!10111 = !DILocation(line: 1742, column: 10, scope: !10110)
!10112 = !DILocation(line: 1742, column: 6, scope: !9984)
!10113 = !DILocation(line: 1742, column: 19, scope: !10110)
!10114 = !DILocation(line: 1742, column: 29, scope: !10110)
!10115 = !DILocation(line: 1742, column: 33, scope: !10110)
!10116 = !DILocation(line: 1743, column: 2, scope: !9984)
!10117 = !DILocation(line: 1743, column: 6, scope: !9984)
!10118 = !DILocation(line: 1743, column: 10, scope: !9984)
!10119 = !DILocation(line: 1744, column: 2, scope: !9984)
!10120 = !DILocation(line: 1744, column: 6, scope: !9984)
!10121 = !DILocation(line: 1744, column: 14, scope: !9984)
!10122 = !DILocation(line: 1745, column: 7, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 1745, column: 6)
!10124 = !DILocation(line: 1745, column: 15, scope: !10123)
!10125 = !DILocation(line: 1745, column: 6, scope: !10123)
!10126 = !DILocation(line: 1745, column: 23, scope: !10123)
!10127 = !DILocation(line: 1745, column: 27, scope: !10123)
!10128 = !DILocation(line: 1745, column: 35, scope: !10123)
!10129 = !DILocation(line: 1745, column: 26, scope: !10123)
!10130 = !DILocation(line: 1745, column: 40, scope: !10123)
!10131 = !DILocation(line: 1745, column: 43, scope: !10123)
!10132 = !DILocation(line: 1745, column: 6, scope: !9984)
!10133 = !DILocalVariable(name: "i", scope: !10134, file: !3, line: 1746, type: !73)
!10134 = distinct !DILexicalBlock(scope: !10123, file: !3, line: 1745, column: 79)
!10135 = !DILocation(line: 1746, column: 7, scope: !10134)
!10136 = !DILocation(line: 1748, column: 16, scope: !10134)
!10137 = !DILocation(line: 1748, column: 24, scope: !10134)
!10138 = !DILocation(line: 1748, column: 3, scope: !10134)
!10139 = !DILocation(line: 1748, column: 7, scope: !10134)
!10140 = !DILocation(line: 1748, column: 14, scope: !10134)
!10141 = !DILocation(line: 1749, column: 16, scope: !10134)
!10142 = !DILocation(line: 1749, column: 24, scope: !10134)
!10143 = !DILocation(line: 1749, column: 3, scope: !10134)
!10144 = !DILocation(line: 1749, column: 7, scope: !10134)
!10145 = !DILocation(line: 1749, column: 14, scope: !10134)
!10146 = !DILocation(line: 1751, column: 13, scope: !10134)
!10147 = !DILocation(line: 1751, column: 27, scope: !10134)
!10148 = !DILocation(line: 1751, column: 35, scope: !10134)
!10149 = !DILocation(line: 1751, column: 3, scope: !10134)
!10150 = !DILocation(line: 1751, column: 7, scope: !10134)
!10151 = !DILocation(line: 1751, column: 11, scope: !10134)
!10152 = !DILocation(line: 1752, column: 17, scope: !10134)
!10153 = !DILocation(line: 1752, column: 31, scope: !10134)
!10154 = !DILocation(line: 1752, column: 39, scope: !10134)
!10155 = !DILocation(line: 1752, column: 3, scope: !10134)
!10156 = !DILocation(line: 1752, column: 7, scope: !10134)
!10157 = !DILocation(line: 1752, column: 15, scope: !10134)
!10158 = !DILocation(line: 1753, column: 10, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10134, file: !3, line: 1753, column: 3)
!10160 = !DILocation(line: 1753, column: 8, scope: !10159)
!10161 = !DILocation(line: 1753, column: 15, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10159, file: !3, line: 1753, column: 3)
!10163 = !DILocation(line: 1753, column: 19, scope: !10162)
!10164 = !DILocation(line: 1753, column: 27, scope: !10162)
!10165 = !DILocation(line: 1753, column: 17, scope: !10162)
!10166 = !DILocation(line: 1753, column: 3, scope: !10159)
!10167 = !DILocation(line: 1755, column: 21, scope: !10168)
!10168 = distinct !DILexicalBlock(scope: !10162, file: !3, line: 1753, column: 40)
!10169 = !DILocation(line: 1755, column: 25, scope: !10168)
!10170 = !DILocation(line: 1755, column: 29, scope: !10168)
!10171 = !DILocation(line: 1755, column: 15, scope: !10168)
!10172 = !DILocation(line: 1755, column: 4, scope: !10168)
!10173 = !DILocation(line: 1756, column: 3, scope: !10168)
!10174 = !DILocation(line: 1753, column: 36, scope: !10162)
!10175 = !DILocation(line: 1753, column: 3, scope: !10162)
!10176 = distinct !{!10176, !10166, !10177}
!10177 = !DILocation(line: 1756, column: 3, scope: !10159)
!10178 = !DILocation(line: 1757, column: 2, scope: !10134)
!10179 = !DILocation(line: 1760, column: 6, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 1760, column: 6)
!10181 = !DILocation(line: 1760, column: 14, scope: !10180)
!10182 = !DILocation(line: 1760, column: 19, scope: !10180)
!10183 = !DILocation(line: 1760, column: 6, scope: !9984)
!10184 = !DILocation(line: 1761, column: 20, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10180, file: !3, line: 1760, column: 35)
!10186 = !DILocation(line: 1761, column: 24, scope: !10185)
!10187 = !DILocation(line: 1761, column: 3, scope: !10185)
!10188 = !DILocation(line: 1762, column: 17, scope: !10185)
!10189 = !DILocation(line: 1762, column: 21, scope: !10185)
!10190 = !DILocation(line: 1762, column: 3, scope: !10185)
!10191 = !DILocation(line: 1763, column: 20, scope: !10185)
!10192 = !DILocation(line: 1763, column: 24, scope: !10185)
!10193 = !DILocation(line: 1763, column: 28, scope: !10185)
!10194 = !DILocation(line: 1763, column: 3, scope: !10185)
!10195 = !DILocation(line: 1765, column: 26, scope: !10185)
!10196 = !DILocation(line: 1765, column: 3, scope: !10185)
!10197 = !DILocation(line: 1766, column: 2, scope: !10185)
!10198 = !DILocation(line: 1767, column: 11, scope: !10199)
!10199 = distinct !DILexicalBlock(scope: !10180, file: !3, line: 1767, column: 11)
!10200 = !DILocation(line: 1767, column: 19, scope: !10199)
!10201 = !DILocation(line: 1767, column: 24, scope: !10199)
!10202 = !DILocation(line: 1767, column: 11, scope: !10180)
!10203 = !DILocation(line: 1768, column: 24, scope: !10204)
!10204 = distinct !DILexicalBlock(scope: !10199, file: !3, line: 1767, column: 37)
!10205 = !DILocation(line: 1768, column: 32, scope: !10204)
!10206 = !DILocation(line: 1768, column: 3, scope: !10204)
!10207 = !DILocation(line: 1768, column: 7, scope: !10204)
!10208 = !DILocation(line: 1768, column: 22, scope: !10204)
!10209 = !DILocation(line: 1769, column: 24, scope: !10204)
!10210 = !DILocation(line: 1769, column: 32, scope: !10204)
!10211 = !DILocation(line: 1769, column: 3, scope: !10204)
!10212 = !DILocation(line: 1769, column: 7, scope: !10204)
!10213 = !DILocation(line: 1769, column: 22, scope: !10204)
!10214 = !DILocation(line: 1770, column: 2, scope: !10204)
!10215 = !DILocation(line: 1773, column: 6, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 1773, column: 6)
!10217 = !DILocation(line: 1773, column: 10, scope: !10216)
!10218 = !DILocation(line: 1773, column: 13, scope: !10216)
!10219 = !DILocation(line: 1773, column: 6, scope: !9984)
!10220 = !DILocation(line: 1774, column: 20, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !10216, file: !3, line: 1773, column: 25)
!10222 = !DILocation(line: 1774, column: 24, scope: !10221)
!10223 = !DILocation(line: 1774, column: 27, scope: !10221)
!10224 = !DILocation(line: 1774, column: 3, scope: !10221)
!10225 = !DILocation(line: 1775, column: 3, scope: !10221)
!10226 = !DILocation(line: 1775, column: 13, scope: !10221)
!10227 = !DILocation(line: 1775, column: 17, scope: !10221)
!10228 = !DILocation(line: 1775, column: 20, scope: !10221)
!10229 = !DILocation(line: 1776, column: 3, scope: !10221)
!10230 = !DILocation(line: 1776, column: 7, scope: !10221)
!10231 = !DILocation(line: 1776, column: 10, scope: !10221)
!10232 = !DILocation(line: 1776, column: 21, scope: !10221)
!10233 = !DILocation(line: 1777, column: 2, scope: !10221)
!10234 = !DILocation(line: 1778, column: 6, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 1778, column: 6)
!10236 = !DILocation(line: 1778, column: 14, scope: !10235)
!10237 = !DILocation(line: 1778, column: 17, scope: !10235)
!10238 = !DILocation(line: 1778, column: 6, scope: !9984)
!10239 = !DILocation(line: 1779, column: 40, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10235, file: !3, line: 1778, column: 29)
!10241 = !DILocation(line: 1779, column: 48, scope: !10240)
!10242 = !DILocation(line: 1779, column: 51, scope: !10240)
!10243 = !DILocation(line: 1779, column: 23, scope: !10240)
!10244 = !DILocation(line: 1779, column: 3, scope: !10240)
!10245 = !DILocation(line: 1779, column: 7, scope: !10240)
!10246 = !DILocation(line: 1779, column: 10, scope: !10240)
!10247 = !DILocation(line: 1779, column: 21, scope: !10240)
!10248 = !DILocation(line: 1780, column: 2, scope: !10240)
!10249 = !DILocation(line: 1783, column: 11, scope: !9984)
!10250 = !DILocation(line: 1783, column: 19, scope: !9984)
!10251 = !DILocation(line: 1783, column: 2, scope: !9984)
!10252 = !DILocation(line: 1783, column: 6, scope: !9984)
!10253 = !DILocation(line: 1783, column: 9, scope: !9984)
!10254 = !DILocation(line: 1784, column: 1, scope: !9984)
!10255 = distinct !DISubprogram(name: "sub_v3_v3", scope: !9059, file: !9059, line: 350, type: !9060, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!10256 = !DILocalVariable(name: "r", arg: 1, scope: !10255, file: !9059, line: 350, type: !1073)
!10257 = !DILocation(line: 350, column: 30, scope: !10255)
!10258 = !DILocalVariable(name: "a", arg: 2, scope: !10255, file: !9059, line: 350, type: !3397)
!10259 = !DILocation(line: 350, column: 48, scope: !10255)
!10260 = !DILocation(line: 352, column: 10, scope: !10255)
!10261 = !DILocation(line: 352, column: 2, scope: !10255)
!10262 = !DILocation(line: 352, column: 7, scope: !10255)
!10263 = !DILocation(line: 353, column: 10, scope: !10255)
!10264 = !DILocation(line: 353, column: 2, scope: !10255)
!10265 = !DILocation(line: 353, column: 7, scope: !10255)
!10266 = !DILocation(line: 354, column: 10, scope: !10255)
!10267 = !DILocation(line: 354, column: 2, scope: !10255)
!10268 = !DILocation(line: 354, column: 7, scope: !10255)
!10269 = !DILocation(line: 355, column: 1, scope: !10255)
!10270 = distinct !DISubprogram(name: "BKE_object_apply_mat4", scope: !3, file: !3, line: 2481, type: !10271, scopeLine: 2482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!10271 = !DISubroutineType(types: !10272)
!10272 = !{null, !5166, !3458, !3482, !3482}
!10273 = !DILocalVariable(name: "ob", arg: 1, scope: !10270, file: !3, line: 2481, type: !5166)
!10274 = !DILocation(line: 2481, column: 36, scope: !10270)
!10275 = !DILocalVariable(name: "mat", arg: 2, scope: !10270, file: !3, line: 2481, type: !3458)
!10276 = !DILocation(line: 2481, column: 46, scope: !10270)
!10277 = !DILocalVariable(name: "use_compat", arg: 3, scope: !10270, file: !3, line: 2481, type: !3482)
!10278 = !DILocation(line: 2481, column: 68, scope: !10270)
!10279 = !DILocalVariable(name: "use_parent", arg: 4, scope: !10270, file: !3, line: 2481, type: !3482)
!10280 = !DILocation(line: 2481, column: 91, scope: !10270)
!10281 = !DILocalVariable(name: "rot", scope: !10270, file: !3, line: 2483, type: !1708)
!10282 = !DILocation(line: 2483, column: 8, scope: !10270)
!10283 = !DILocation(line: 2485, column: 6, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10270, file: !3, line: 2485, column: 6)
!10285 = !DILocation(line: 2485, column: 17, scope: !10284)
!10286 = !DILocation(line: 2485, column: 20, scope: !10284)
!10287 = !DILocation(line: 2485, column: 24, scope: !10284)
!10288 = !DILocation(line: 2485, column: 6, scope: !10270)
!10289 = !DILocalVariable(name: "rmat", scope: !10290, file: !3, line: 2486, type: !1404)
!10290 = distinct !DILexicalBlock(scope: !10284, file: !3, line: 2485, column: 32)
!10291 = !DILocation(line: 2486, column: 9, scope: !10290)
!10292 = !DILocalVariable(name: "diff_mat", scope: !10290, file: !3, line: 2486, type: !1404)
!10293 = !DILocation(line: 2486, column: 21, scope: !10290)
!10294 = !DILocalVariable(name: "imat", scope: !10290, file: !3, line: 2486, type: !1404)
!10295 = !DILocation(line: 2486, column: 37, scope: !10290)
!10296 = !DILocalVariable(name: "parent_mat", scope: !10290, file: !3, line: 2486, type: !1404)
!10297 = !DILocation(line: 2486, column: 49, scope: !10290)
!10298 = !DILocation(line: 2488, column: 30, scope: !10290)
!10299 = !DILocation(line: 2488, column: 34, scope: !10290)
!10300 = !DILocation(line: 2488, column: 38, scope: !10290)
!10301 = !DILocation(line: 2488, column: 46, scope: !10290)
!10302 = !DILocation(line: 2488, column: 3, scope: !10290)
!10303 = !DILocation(line: 2490, column: 15, scope: !10290)
!10304 = !DILocation(line: 2490, column: 25, scope: !10290)
!10305 = !DILocation(line: 2490, column: 37, scope: !10290)
!10306 = !DILocation(line: 2490, column: 41, scope: !10290)
!10307 = !DILocation(line: 2490, column: 3, scope: !10290)
!10308 = !DILocation(line: 2491, column: 16, scope: !10290)
!10309 = !DILocation(line: 2491, column: 22, scope: !10290)
!10310 = !DILocation(line: 2491, column: 3, scope: !10290)
!10311 = !DILocation(line: 2492, column: 15, scope: !10290)
!10312 = !DILocation(line: 2492, column: 21, scope: !10290)
!10313 = !DILocation(line: 2492, column: 27, scope: !10290)
!10314 = !DILocation(line: 2492, column: 3, scope: !10290)
!10315 = !DILocation(line: 2493, column: 25, scope: !10290)
!10316 = !DILocation(line: 2493, column: 29, scope: !10290)
!10317 = !DILocation(line: 2493, column: 35, scope: !10290)
!10318 = !DILocation(line: 2493, column: 3, scope: !10290)
!10319 = !DILocation(line: 2496, column: 24, scope: !10290)
!10320 = !DILocation(line: 2496, column: 28, scope: !10290)
!10321 = !DILocation(line: 2496, column: 33, scope: !10290)
!10322 = !DILocation(line: 2496, column: 38, scope: !10290)
!10323 = !DILocation(line: 2496, column: 42, scope: !10290)
!10324 = !DILocation(line: 2496, column: 48, scope: !10290)
!10325 = !DILocation(line: 2496, column: 3, scope: !10290)
!10326 = !DILocation(line: 2497, column: 26, scope: !10290)
!10327 = !DILocation(line: 2497, column: 30, scope: !10290)
!10328 = !DILocation(line: 2497, column: 35, scope: !10290)
!10329 = !DILocation(line: 2497, column: 3, scope: !10290)
!10330 = !DILocation(line: 2498, column: 2, scope: !10290)
!10331 = !DILocation(line: 2500, column: 24, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10284, file: !3, line: 2499, column: 7)
!10333 = !DILocation(line: 2500, column: 28, scope: !10332)
!10334 = !DILocation(line: 2500, column: 33, scope: !10332)
!10335 = !DILocation(line: 2500, column: 38, scope: !10332)
!10336 = !DILocation(line: 2500, column: 42, scope: !10332)
!10337 = !DILocation(line: 2500, column: 48, scope: !10332)
!10338 = !DILocation(line: 2500, column: 3, scope: !10332)
!10339 = !DILocation(line: 2501, column: 26, scope: !10332)
!10340 = !DILocation(line: 2501, column: 30, scope: !10332)
!10341 = !DILocation(line: 2501, column: 35, scope: !10332)
!10342 = !DILocation(line: 2501, column: 3, scope: !10332)
!10343 = !DILocation(line: 2504, column: 12, scope: !10270)
!10344 = !DILocation(line: 2504, column: 16, scope: !10270)
!10345 = !DILocation(line: 2504, column: 21, scope: !10270)
!10346 = !DILocation(line: 2504, column: 25, scope: !10270)
!10347 = !DILocation(line: 2504, column: 2, scope: !10270)
!10348 = !DILocation(line: 2506, column: 6, scope: !10349)
!10349 = distinct !DILexicalBlock(scope: !10270, file: !3, line: 2506, column: 6)
!10350 = !DILocation(line: 2506, column: 10, scope: !10349)
!10351 = !DILocation(line: 2506, column: 20, scope: !10349)
!10352 = !DILocation(line: 2506, column: 6, scope: !10270)
!10353 = !DILocation(line: 2506, column: 44, scope: !10349)
!10354 = !DILocation(line: 2506, column: 48, scope: !10349)
!10355 = !DILocation(line: 2506, column: 29, scope: !10349)
!10356 = !DILocation(line: 2506, column: 33, scope: !10349)
!10357 = !DILocation(line: 2506, column: 41, scope: !10349)
!10358 = !DILocation(line: 2507, column: 6, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10270, file: !3, line: 2507, column: 6)
!10360 = !DILocation(line: 2507, column: 10, scope: !10359)
!10361 = !DILocation(line: 2507, column: 20, scope: !10359)
!10362 = !DILocation(line: 2507, column: 6, scope: !10270)
!10363 = !DILocation(line: 2507, column: 44, scope: !10359)
!10364 = !DILocation(line: 2507, column: 48, scope: !10359)
!10365 = !DILocation(line: 2507, column: 29, scope: !10359)
!10366 = !DILocation(line: 2507, column: 33, scope: !10359)
!10367 = !DILocation(line: 2507, column: 41, scope: !10359)
!10368 = !DILocation(line: 2508, column: 6, scope: !10369)
!10369 = distinct !DILexicalBlock(scope: !10270, file: !3, line: 2508, column: 6)
!10370 = !DILocation(line: 2508, column: 10, scope: !10369)
!10371 = !DILocation(line: 2508, column: 20, scope: !10369)
!10372 = !DILocation(line: 2508, column: 6, scope: !10270)
!10373 = !DILocation(line: 2508, column: 44, scope: !10369)
!10374 = !DILocation(line: 2508, column: 48, scope: !10369)
!10375 = !DILocation(line: 2508, column: 29, scope: !10369)
!10376 = !DILocation(line: 2508, column: 33, scope: !10369)
!10377 = !DILocation(line: 2508, column: 41, scope: !10369)
!10378 = !DILocation(line: 2511, column: 1, scope: !10270)
!10379 = distinct !DISubprogram(name: "armature_set_id_extern", scope: !3, file: !3, line: 1634, type: !5284, scopeLine: 1635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!10380 = !DILocalVariable(name: "ob", arg: 1, scope: !10379, file: !3, line: 1634, type: !5166)
!10381 = !DILocation(line: 1634, column: 44, scope: !10379)
!10382 = !DILocalVariable(name: "arm", scope: !10379, file: !3, line: 1636, type: !5168)
!10383 = !DILocation(line: 1636, column: 13, scope: !10379)
!10384 = !DILocation(line: 1636, column: 19, scope: !10379)
!10385 = !DILocation(line: 1636, column: 23, scope: !10379)
!10386 = !DILocalVariable(name: "pchan", scope: !10379, file: !3, line: 1637, type: !5484)
!10387 = !DILocation(line: 1637, column: 16, scope: !10379)
!10388 = !DILocalVariable(name: "lay", scope: !10379, file: !3, line: 1638, type: !7)
!10389 = !DILocation(line: 1638, column: 15, scope: !10379)
!10390 = !DILocation(line: 1638, column: 21, scope: !10379)
!10391 = !DILocation(line: 1638, column: 26, scope: !10379)
!10392 = !DILocation(line: 1640, column: 15, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10379, file: !3, line: 1640, column: 2)
!10394 = !DILocation(line: 1640, column: 19, scope: !10393)
!10395 = !DILocation(line: 1640, column: 25, scope: !10393)
!10396 = !DILocation(line: 1640, column: 34, scope: !10393)
!10397 = !DILocation(line: 1640, column: 13, scope: !10393)
!10398 = !DILocation(line: 1640, column: 7, scope: !10393)
!10399 = !DILocation(line: 1640, column: 41, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !10393, file: !3, line: 1640, column: 2)
!10401 = !DILocation(line: 1640, column: 2, scope: !10393)
!10402 = !DILocation(line: 1641, column: 9, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !10404, file: !3, line: 1641, column: 7)
!10404 = distinct !DILexicalBlock(scope: !10400, file: !3, line: 1640, column: 69)
!10405 = !DILocation(line: 1641, column: 16, scope: !10403)
!10406 = !DILocation(line: 1641, column: 22, scope: !10403)
!10407 = !DILocation(line: 1641, column: 30, scope: !10403)
!10408 = !DILocation(line: 1641, column: 28, scope: !10403)
!10409 = !DILocation(line: 1641, column: 7, scope: !10404)
!10410 = !DILocation(line: 1642, column: 24, scope: !10403)
!10411 = !DILocation(line: 1642, column: 31, scope: !10403)
!10412 = !DILocation(line: 1642, column: 18, scope: !10403)
!10413 = !DILocation(line: 1642, column: 4, scope: !10403)
!10414 = !DILocation(line: 1643, column: 2, scope: !10404)
!10415 = !DILocation(line: 1640, column: 56, scope: !10400)
!10416 = !DILocation(line: 1640, column: 63, scope: !10400)
!10417 = !DILocation(line: 1640, column: 54, scope: !10400)
!10418 = !DILocation(line: 1640, column: 2, scope: !10400)
!10419 = distinct !{!10419, !10401, !10420}
!10420 = !DILocation(line: 1643, column: 2, scope: !10393)
!10421 = !DILocation(line: 1645, column: 1, scope: !10379)
!10422 = distinct !DISubprogram(name: "BKE_object_obdata_size_init", scope: !3, file: !3, line: 1790, type: !10423, scopeLine: 1791, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!10423 = !DISubroutineType(types: !10424)
!10424 = !{null, !966, !3209}
!10425 = !DILocalVariable(name: "ob", arg: 1, scope: !10422, file: !3, line: 1790, type: !966)
!10426 = !DILocation(line: 1790, column: 49, scope: !10422)
!10427 = !DILocalVariable(name: "size", arg: 2, scope: !10422, file: !3, line: 1790, type: !3209)
!10428 = !DILocation(line: 1790, column: 65, scope: !10422)
!10429 = !DILocation(line: 1793, column: 10, scope: !10422)
!10430 = !DILocation(line: 1793, column: 14, scope: !10422)
!10431 = !DILocation(line: 1793, column: 2, scope: !10422)
!10432 = !DILocation(line: 1796, column: 26, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10434, file: !3, line: 1795, column: 3)
!10434 = distinct !DILexicalBlock(scope: !10422, file: !3, line: 1793, column: 20)
!10435 = !DILocation(line: 1796, column: 4, scope: !10433)
!10436 = !DILocation(line: 1796, column: 8, scope: !10433)
!10437 = !DILocation(line: 1796, column: 23, scope: !10433)
!10438 = !DILocation(line: 1797, column: 4, scope: !10433)
!10439 = !DILocalVariable(name: "cu", scope: !10440, file: !3, line: 1801, type: !4467)
!10440 = distinct !DILexicalBlock(scope: !10434, file: !3, line: 1800, column: 3)
!10441 = !DILocation(line: 1801, column: 11, scope: !10440)
!10442 = !DILocation(line: 1801, column: 16, scope: !10440)
!10443 = !DILocation(line: 1801, column: 20, scope: !10440)
!10444 = !DILocation(line: 1802, column: 17, scope: !10440)
!10445 = !DILocation(line: 1802, column: 4, scope: !10440)
!10446 = !DILocation(line: 1802, column: 8, scope: !10440)
!10447 = !DILocation(line: 1802, column: 14, scope: !10440)
!10448 = !DILocation(line: 1803, column: 4, scope: !10440)
!10449 = !DILocalVariable(name: "cam", scope: !10450, file: !3, line: 1807, type: !6458)
!10450 = distinct !DILexicalBlock(scope: !10434, file: !3, line: 1806, column: 3)
!10451 = !DILocation(line: 1807, column: 12, scope: !10450)
!10452 = !DILocation(line: 1807, column: 18, scope: !10450)
!10453 = !DILocation(line: 1807, column: 22, scope: !10450)
!10454 = !DILocation(line: 1808, column: 21, scope: !10450)
!10455 = !DILocation(line: 1808, column: 4, scope: !10450)
!10456 = !DILocation(line: 1808, column: 9, scope: !10450)
!10457 = !DILocation(line: 1808, column: 18, scope: !10450)
!10458 = !DILocation(line: 1809, column: 4, scope: !10450)
!10459 = !DILocalVariable(name: "lamp", scope: !10460, file: !3, line: 1813, type: !10461)
!10460 = distinct !DILexicalBlock(scope: !10434, file: !3, line: 1812, column: 3)
!10461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10462, size: 64)
!10462 = !DIDerivedType(tag: DW_TAG_typedef, name: "Lamp", file: !10463, line: 113, baseType: !10464)
!10463 = !DIFile(filename: "blender/source/blender/makesdna/DNA_lamp_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Lamp", file: !10463, line: 48, size: 4160, elements: !10465)
!10465 = !{!10466, !10467, !10468, !10469, !10470, !10471, !10472, !10473, !10474, !10475, !10476, !10477, !10478, !10479, !10480, !10481, !10482, !10483, !10484, !10485, !10486, !10487, !10488, !10489, !10490, !10491, !10492, !10493, !10494, !10495, !10496, !10497, !10498, !10499, !10500, !10501, !10502, !10503, !10504, !10505, !10506, !10507, !10508, !10509, !10510, !10511, !10512, !10513, !10514, !10515, !10516, !10517, !10518, !10519, !10520, !10521, !10522, !10523, !10524, !10525, !10526, !10527, !10528, !10529, !10530, !10531, !10532, !10533, !10534, !10535, !10536, !10537, !10538, !10539, !10540}
!10466 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10464, file: !10463, line: 49, baseType: !599, size: 960)
!10467 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !10464, file: !10463, line: 50, baseType: !669, size: 64, offset: 960)
!10468 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10464, file: !10463, line: 52, baseType: !632, size: 16, offset: 1024)
!10469 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !10464, file: !10463, line: 52, baseType: !632, size: 16, offset: 1040)
!10470 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !10464, file: !10463, line: 53, baseType: !73, size: 32, offset: 1056)
!10471 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !10464, file: !10463, line: 55, baseType: !632, size: 16, offset: 1088)
!10472 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !10464, file: !10463, line: 55, baseType: !632, size: 16, offset: 1104)
!10473 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !10464, file: !10463, line: 56, baseType: !713, size: 32, offset: 1120)
!10474 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !10464, file: !10463, line: 56, baseType: !713, size: 32, offset: 1152)
!10475 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !10464, file: !10463, line: 56, baseType: !713, size: 32, offset: 1184)
!10476 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !10464, file: !10463, line: 56, baseType: !713, size: 32, offset: 1216)
!10477 = !DIDerivedType(tag: DW_TAG_member, name: "shdwr", scope: !10464, file: !10463, line: 57, baseType: !713, size: 32, offset: 1248)
!10478 = !DIDerivedType(tag: DW_TAG_member, name: "shdwg", scope: !10464, file: !10463, line: 57, baseType: !713, size: 32, offset: 1280)
!10479 = !DIDerivedType(tag: DW_TAG_member, name: "shdwb", scope: !10464, file: !10463, line: 57, baseType: !713, size: 32, offset: 1312)
!10480 = !DIDerivedType(tag: DW_TAG_member, name: "shdwpad", scope: !10464, file: !10463, line: 57, baseType: !713, size: 32, offset: 1344)
!10481 = !DIDerivedType(tag: DW_TAG_member, name: "energy", scope: !10464, file: !10463, line: 59, baseType: !713, size: 32, offset: 1376)
!10482 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !10464, file: !10463, line: 59, baseType: !713, size: 32, offset: 1408)
!10483 = !DIDerivedType(tag: DW_TAG_member, name: "spotsize", scope: !10464, file: !10463, line: 59, baseType: !713, size: 32, offset: 1440)
!10484 = !DIDerivedType(tag: DW_TAG_member, name: "spotblend", scope: !10464, file: !10463, line: 59, baseType: !713, size: 32, offset: 1472)
!10485 = !DIDerivedType(tag: DW_TAG_member, name: "haint", scope: !10464, file: !10463, line: 60, baseType: !713, size: 32, offset: 1504)
!10486 = !DIDerivedType(tag: DW_TAG_member, name: "att1", scope: !10464, file: !10463, line: 63, baseType: !713, size: 32, offset: 1536)
!10487 = !DIDerivedType(tag: DW_TAG_member, name: "att2", scope: !10464, file: !10463, line: 63, baseType: !713, size: 32, offset: 1568)
!10488 = !DIDerivedType(tag: DW_TAG_member, name: "curfalloff", scope: !10464, file: !10463, line: 64, baseType: !1644, size: 64, offset: 1600)
!10489 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !10464, file: !10463, line: 65, baseType: !632, size: 16, offset: 1664)
!10490 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !10464, file: !10463, line: 66, baseType: !632, size: 16, offset: 1680)
!10491 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !10464, file: !10463, line: 68, baseType: !713, size: 32, offset: 1696)
!10492 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !10464, file: !10463, line: 68, baseType: !713, size: 32, offset: 1728)
!10493 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !10464, file: !10463, line: 69, baseType: !713, size: 32, offset: 1760)
!10494 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !10464, file: !10463, line: 69, baseType: !713, size: 32, offset: 1792)
!10495 = !DIDerivedType(tag: DW_TAG_member, name: "compressthresh", scope: !10464, file: !10463, line: 69, baseType: !713, size: 32, offset: 1824)
!10496 = !DIDerivedType(tag: DW_TAG_member, name: "bleedbias", scope: !10464, file: !10463, line: 69, baseType: !713, size: 32, offset: 1856)
!10497 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !10464, file: !10463, line: 69, baseType: !713, size: 32, offset: 1888)
!10498 = !DIDerivedType(tag: DW_TAG_member, name: "bufsize", scope: !10464, file: !10463, line: 70, baseType: !632, size: 16, offset: 1920)
!10499 = !DIDerivedType(tag: DW_TAG_member, name: "samp", scope: !10464, file: !10463, line: 70, baseType: !632, size: 16, offset: 1936)
!10500 = !DIDerivedType(tag: DW_TAG_member, name: "buffers", scope: !10464, file: !10463, line: 70, baseType: !632, size: 16, offset: 1952)
!10501 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !10464, file: !10463, line: 70, baseType: !632, size: 16, offset: 1968)
!10502 = !DIDerivedType(tag: DW_TAG_member, name: "bufflag", scope: !10464, file: !10463, line: 71, baseType: !619, size: 8, offset: 1984)
!10503 = !DIDerivedType(tag: DW_TAG_member, name: "buftype", scope: !10464, file: !10463, line: 71, baseType: !619, size: 8, offset: 1992)
!10504 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp", scope: !10464, file: !10463, line: 73, baseType: !632, size: 16, offset: 2000)
!10505 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampy", scope: !10464, file: !10463, line: 73, baseType: !632, size: 16, offset: 2016)
!10506 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampz", scope: !10464, file: !10463, line: 73, baseType: !632, size: 16, offset: 2032)
!10507 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_type", scope: !10464, file: !10463, line: 74, baseType: !632, size: 16, offset: 2048)
!10508 = !DIDerivedType(tag: DW_TAG_member, name: "area_shape", scope: !10464, file: !10463, line: 75, baseType: !632, size: 16, offset: 2064)
!10509 = !DIDerivedType(tag: DW_TAG_member, name: "area_size", scope: !10464, file: !10463, line: 76, baseType: !713, size: 32, offset: 2080)
!10510 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizey", scope: !10464, file: !10463, line: 76, baseType: !713, size: 32, offset: 2112)
!10511 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizez", scope: !10464, file: !10463, line: 76, baseType: !713, size: 32, offset: 2144)
!10512 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh", scope: !10464, file: !10463, line: 77, baseType: !713, size: 32, offset: 2176)
!10513 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_method", scope: !10464, file: !10463, line: 78, baseType: !632, size: 16, offset: 2208)
!10514 = !DIDerivedType(tag: DW_TAG_member, name: "shadowmap_type", scope: !10464, file: !10463, line: 79, baseType: !632, size: 16, offset: 2224)
!10515 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !10464, file: !10463, line: 82, baseType: !632, size: 16, offset: 2240)
!10516 = !DIDerivedType(tag: DW_TAG_member, name: "shadhalostep", scope: !10464, file: !10463, line: 82, baseType: !632, size: 16, offset: 2256)
!10517 = !DIDerivedType(tag: DW_TAG_member, name: "sun_effect_type", scope: !10464, file: !10463, line: 85, baseType: !632, size: 16, offset: 2272)
!10518 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendtype", scope: !10464, file: !10463, line: 86, baseType: !632, size: 16, offset: 2288)
!10519 = !DIDerivedType(tag: DW_TAG_member, name: "horizon_brightness", scope: !10464, file: !10463, line: 87, baseType: !713, size: 32, offset: 2304)
!10520 = !DIDerivedType(tag: DW_TAG_member, name: "spread", scope: !10464, file: !10463, line: 88, baseType: !713, size: 32, offset: 2336)
!10521 = !DIDerivedType(tag: DW_TAG_member, name: "sun_brightness", scope: !10464, file: !10463, line: 89, baseType: !713, size: 32, offset: 2368)
!10522 = !DIDerivedType(tag: DW_TAG_member, name: "sun_size", scope: !10464, file: !10463, line: 90, baseType: !713, size: 32, offset: 2400)
!10523 = !DIDerivedType(tag: DW_TAG_member, name: "backscattered_light", scope: !10464, file: !10463, line: 91, baseType: !713, size: 32, offset: 2432)
!10524 = !DIDerivedType(tag: DW_TAG_member, name: "sun_intensity", scope: !10464, file: !10463, line: 92, baseType: !713, size: 32, offset: 2464)
!10525 = !DIDerivedType(tag: DW_TAG_member, name: "atm_turbidity", scope: !10464, file: !10463, line: 93, baseType: !713, size: 32, offset: 2496)
!10526 = !DIDerivedType(tag: DW_TAG_member, name: "atm_inscattering_factor", scope: !10464, file: !10463, line: 94, baseType: !713, size: 32, offset: 2528)
!10527 = !DIDerivedType(tag: DW_TAG_member, name: "atm_extinction_factor", scope: !10464, file: !10463, line: 95, baseType: !713, size: 32, offset: 2560)
!10528 = !DIDerivedType(tag: DW_TAG_member, name: "atm_distance_factor", scope: !10464, file: !10463, line: 96, baseType: !713, size: 32, offset: 2592)
!10529 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendfac", scope: !10464, file: !10463, line: 97, baseType: !713, size: 32, offset: 2624)
!10530 = !DIDerivedType(tag: DW_TAG_member, name: "sky_exposure", scope: !10464, file: !10463, line: 98, baseType: !713, size: 32, offset: 2656)
!10531 = !DIDerivedType(tag: DW_TAG_member, name: "shadow_frustum_size", scope: !10464, file: !10463, line: 99, baseType: !713, size: 32, offset: 2688)
!10532 = !DIDerivedType(tag: DW_TAG_member, name: "sky_colorspace", scope: !10464, file: !10463, line: 100, baseType: !632, size: 16, offset: 2720)
!10533 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !10464, file: !10463, line: 101, baseType: !1979, size: 16, offset: 2736)
!10534 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !10464, file: !10463, line: 103, baseType: !749, size: 64, offset: 2752)
!10535 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !10464, file: !10463, line: 104, baseType: !957, size: 1152, offset: 2816)
!10536 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !10464, file: !10463, line: 105, baseType: !632, size: 16, offset: 3968)
!10537 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !10464, file: !10463, line: 105, baseType: !632, size: 16, offset: 3984)
!10538 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !10464, file: !10463, line: 106, baseType: !1725, size: 32, offset: 4000)
!10539 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !10464, file: !10463, line: 109, baseType: !1084, size: 64, offset: 4032)
!10540 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !10464, file: !10463, line: 112, baseType: !1100, size: 64, offset: 4096)
!10541 = !DILocation(line: 1813, column: 10, scope: !10460)
!10542 = !DILocation(line: 1813, column: 17, scope: !10460)
!10543 = !DILocation(line: 1813, column: 21, scope: !10460)
!10544 = !DILocation(line: 1814, column: 18, scope: !10460)
!10545 = !DILocation(line: 1814, column: 4, scope: !10460)
!10546 = !DILocation(line: 1814, column: 10, scope: !10460)
!10547 = !DILocation(line: 1814, column: 15, scope: !10460)
!10548 = !DILocation(line: 1815, column: 24, scope: !10460)
!10549 = !DILocation(line: 1815, column: 4, scope: !10460)
!10550 = !DILocation(line: 1815, column: 10, scope: !10460)
!10551 = !DILocation(line: 1815, column: 21, scope: !10460)
!10552 = !DILocation(line: 1816, column: 24, scope: !10460)
!10553 = !DILocation(line: 1816, column: 4, scope: !10460)
!10554 = !DILocation(line: 1816, column: 10, scope: !10460)
!10555 = !DILocation(line: 1816, column: 21, scope: !10460)
!10556 = !DILocation(line: 1817, column: 24, scope: !10460)
!10557 = !DILocation(line: 1817, column: 4, scope: !10460)
!10558 = !DILocation(line: 1817, column: 10, scope: !10460)
!10559 = !DILocation(line: 1817, column: 21, scope: !10460)
!10560 = !DILocation(line: 1818, column: 4, scope: !10460)
!10561 = !DILocalVariable(name: "lt", scope: !10562, file: !3, line: 1824, type: !8158)
!10562 = distinct !DILexicalBlock(scope: !10434, file: !3, line: 1823, column: 3)
!10563 = !DILocation(line: 1824, column: 20, scope: !10562)
!10564 = !DILocation(line: 1824, column: 25, scope: !10562)
!10565 = !DILocation(line: 1824, column: 29, scope: !10562)
!10566 = !DILocalVariable(name: "mat", scope: !10562, file: !3, line: 1825, type: !1404)
!10567 = !DILocation(line: 1825, column: 10, scope: !10562)
!10568 = !DILocation(line: 1827, column: 12, scope: !10562)
!10569 = !DILocation(line: 1827, column: 4, scope: !10562)
!10570 = !DILocation(line: 1828, column: 16, scope: !10562)
!10571 = !DILocation(line: 1828, column: 21, scope: !10562)
!10572 = !DILocation(line: 1828, column: 4, scope: !10562)
!10573 = !DILocation(line: 1830, column: 26, scope: !10562)
!10574 = !DILocation(line: 1830, column: 44, scope: !10562)
!10575 = !DILocation(line: 1830, column: 4, scope: !10562)
!10576 = !DILocation(line: 1831, column: 4, scope: !10562)
!10577 = !DILocation(line: 1834, column: 1, scope: !10422)
!10578 = distinct !DISubprogram(name: "BKE_object_scale_to_mat3", scope: !3, file: !3, line: 1838, type: !10579, scopeLine: 1839, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!10579 = !DISubroutineType(types: !10580)
!10580 = !{null, !5166, !3431}
!10581 = !DILocalVariable(name: "ob", arg: 1, scope: !10578, file: !3, line: 1838, type: !5166)
!10582 = !DILocation(line: 1838, column: 39, scope: !10578)
!10583 = !DILocalVariable(name: "mat", arg: 2, scope: !10578, file: !3, line: 1838, type: !3431)
!10584 = !DILocation(line: 1838, column: 49, scope: !10578)
!10585 = !DILocalVariable(name: "vec", scope: !10578, file: !3, line: 1840, type: !835)
!10586 = !DILocation(line: 1840, column: 8, scope: !10578)
!10587 = !DILocation(line: 1841, column: 14, scope: !10578)
!10588 = !DILocation(line: 1841, column: 19, scope: !10578)
!10589 = !DILocation(line: 1841, column: 23, scope: !10578)
!10590 = !DILocation(line: 1841, column: 29, scope: !10578)
!10591 = !DILocation(line: 1841, column: 33, scope: !10578)
!10592 = !DILocation(line: 1841, column: 2, scope: !10578)
!10593 = !DILocation(line: 1842, column: 15, scope: !10578)
!10594 = !DILocation(line: 1842, column: 20, scope: !10578)
!10595 = !DILocation(line: 1842, column: 2, scope: !10578)
!10596 = !DILocation(line: 1843, column: 1, scope: !10578)
!10597 = distinct !DISubprogram(name: "mul_v3_v3v3", scope: !9059, file: !9059, line: 557, type: !10598, scopeLine: 558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!10598 = !DISubroutineType(types: !10599)
!10599 = !{null, !1073, !3397, !3397}
!10600 = !DILocalVariable(name: "r", arg: 1, scope: !10597, file: !9059, line: 557, type: !1073)
!10601 = !DILocation(line: 557, column: 32, scope: !10597)
!10602 = !DILocalVariable(name: "v1", arg: 2, scope: !10597, file: !9059, line: 557, type: !3397)
!10603 = !DILocation(line: 557, column: 50, scope: !10597)
!10604 = !DILocalVariable(name: "v2", arg: 3, scope: !10597, file: !9059, line: 557, type: !3397)
!10605 = !DILocation(line: 557, column: 69, scope: !10597)
!10606 = !DILocation(line: 559, column: 9, scope: !10597)
!10607 = !DILocation(line: 559, column: 17, scope: !10597)
!10608 = !DILocation(line: 559, column: 15, scope: !10597)
!10609 = !DILocation(line: 559, column: 2, scope: !10597)
!10610 = !DILocation(line: 559, column: 7, scope: !10597)
!10611 = !DILocation(line: 560, column: 9, scope: !10597)
!10612 = !DILocation(line: 560, column: 17, scope: !10597)
!10613 = !DILocation(line: 560, column: 15, scope: !10597)
!10614 = !DILocation(line: 560, column: 2, scope: !10597)
!10615 = !DILocation(line: 560, column: 7, scope: !10597)
!10616 = !DILocation(line: 561, column: 9, scope: !10597)
!10617 = !DILocation(line: 561, column: 17, scope: !10597)
!10618 = !DILocation(line: 561, column: 15, scope: !10597)
!10619 = !DILocation(line: 561, column: 2, scope: !10597)
!10620 = !DILocation(line: 561, column: 7, scope: !10597)
!10621 = !DILocation(line: 562, column: 1, scope: !10597)
!10622 = distinct !DISubprogram(name: "BKE_object_rot_to_mat3", scope: !3, file: !3, line: 1845, type: !10623, scopeLine: 1846, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!10623 = !DISubroutineType(types: !10624)
!10624 = !{null, !5166, !3431, !1788}
!10625 = !DILocalVariable(name: "ob", arg: 1, scope: !10622, file: !3, line: 1845, type: !5166)
!10626 = !DILocation(line: 1845, column: 37, scope: !10622)
!10627 = !DILocalVariable(name: "mat", arg: 2, scope: !10622, file: !3, line: 1845, type: !3431)
!10628 = !DILocation(line: 1845, column: 47, scope: !10622)
!10629 = !DILocalVariable(name: "use_drot", arg: 3, scope: !10622, file: !3, line: 1845, type: !1788)
!10630 = !DILocation(line: 1845, column: 63, scope: !10622)
!10631 = !DILocalVariable(name: "rmat", scope: !10622, file: !3, line: 1847, type: !1708)
!10632 = !DILocation(line: 1847, column: 8, scope: !10622)
!10633 = !DILocalVariable(name: "dmat", scope: !10622, file: !3, line: 1847, type: !1708)
!10634 = !DILocation(line: 1847, column: 20, scope: !10622)
!10635 = !DILocation(line: 1854, column: 6, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10622, file: !3, line: 1854, column: 6)
!10637 = !DILocation(line: 1854, column: 10, scope: !10636)
!10638 = !DILocation(line: 1854, column: 18, scope: !10636)
!10639 = !DILocation(line: 1854, column: 6, scope: !10622)
!10640 = !DILocation(line: 1856, column: 16, scope: !10641)
!10641 = distinct !DILexicalBlock(scope: !10636, file: !3, line: 1854, column: 23)
!10642 = !DILocation(line: 1856, column: 22, scope: !10641)
!10643 = !DILocation(line: 1856, column: 26, scope: !10641)
!10644 = !DILocation(line: 1856, column: 31, scope: !10641)
!10645 = !DILocation(line: 1856, column: 35, scope: !10641)
!10646 = !DILocation(line: 1856, column: 3, scope: !10641)
!10647 = !DILocation(line: 1857, column: 16, scope: !10641)
!10648 = !DILocation(line: 1857, column: 22, scope: !10641)
!10649 = !DILocation(line: 1857, column: 26, scope: !10641)
!10650 = !DILocation(line: 1857, column: 32, scope: !10641)
!10651 = !DILocation(line: 1857, column: 36, scope: !10641)
!10652 = !DILocation(line: 1857, column: 3, scope: !10641)
!10653 = !DILocation(line: 1858, column: 2, scope: !10641)
!10654 = !DILocation(line: 1859, column: 11, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10636, file: !3, line: 1859, column: 11)
!10656 = !DILocation(line: 1859, column: 15, scope: !10655)
!10657 = !DILocation(line: 1859, column: 23, scope: !10655)
!10658 = !DILocation(line: 1859, column: 11, scope: !10636)
!10659 = !DILocation(line: 1861, column: 22, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10655, file: !3, line: 1859, column: 46)
!10661 = !DILocation(line: 1861, column: 28, scope: !10660)
!10662 = !DILocation(line: 1861, column: 32, scope: !10660)
!10663 = !DILocation(line: 1861, column: 41, scope: !10660)
!10664 = !DILocation(line: 1861, column: 45, scope: !10660)
!10665 = !DILocation(line: 1861, column: 3, scope: !10660)
!10666 = !DILocation(line: 1862, column: 22, scope: !10660)
!10667 = !DILocation(line: 1862, column: 28, scope: !10660)
!10668 = !DILocation(line: 1862, column: 32, scope: !10660)
!10669 = !DILocation(line: 1862, column: 42, scope: !10660)
!10670 = !DILocation(line: 1862, column: 46, scope: !10660)
!10671 = !DILocation(line: 1862, column: 3, scope: !10660)
!10672 = !DILocation(line: 1863, column: 2, scope: !10660)
!10673 = !DILocalVariable(name: "tquat", scope: !10674, file: !3, line: 1866, type: !916)
!10674 = distinct !DILexicalBlock(scope: !10655, file: !3, line: 1864, column: 7)
!10675 = !DILocation(line: 1866, column: 9, scope: !10674)
!10676 = !DILocation(line: 1868, column: 19, scope: !10674)
!10677 = !DILocation(line: 1868, column: 26, scope: !10674)
!10678 = !DILocation(line: 1868, column: 30, scope: !10674)
!10679 = !DILocation(line: 1868, column: 3, scope: !10674)
!10680 = !DILocation(line: 1869, column: 16, scope: !10674)
!10681 = !DILocation(line: 1869, column: 22, scope: !10674)
!10682 = !DILocation(line: 1869, column: 3, scope: !10674)
!10683 = !DILocation(line: 1871, column: 19, scope: !10674)
!10684 = !DILocation(line: 1871, column: 26, scope: !10674)
!10685 = !DILocation(line: 1871, column: 30, scope: !10674)
!10686 = !DILocation(line: 1871, column: 3, scope: !10674)
!10687 = !DILocation(line: 1872, column: 16, scope: !10674)
!10688 = !DILocation(line: 1872, column: 22, scope: !10674)
!10689 = !DILocation(line: 1872, column: 3, scope: !10674)
!10690 = !DILocation(line: 1876, column: 6, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10622, file: !3, line: 1876, column: 6)
!10692 = !DILocation(line: 1876, column: 6, scope: !10622)
!10693 = !DILocation(line: 1877, column: 15, scope: !10691)
!10694 = !DILocation(line: 1877, column: 20, scope: !10691)
!10695 = !DILocation(line: 1877, column: 26, scope: !10691)
!10696 = !DILocation(line: 1877, column: 3, scope: !10691)
!10697 = !DILocation(line: 1879, column: 14, scope: !10691)
!10698 = !DILocation(line: 1879, column: 19, scope: !10691)
!10699 = !DILocation(line: 1879, column: 3, scope: !10691)
!10700 = !DILocation(line: 1880, column: 1, scope: !10622)
!10701 = distinct !DISubprogram(name: "BKE_object_mat3_to_rot", scope: !3, file: !3, line: 1882, type: !10623, scopeLine: 1883, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!10702 = !DILocalVariable(name: "ob", arg: 1, scope: !10701, file: !3, line: 1882, type: !5166)
!10703 = !DILocation(line: 1882, column: 37, scope: !10701)
!10704 = !DILocalVariable(name: "mat", arg: 2, scope: !10701, file: !3, line: 1882, type: !3431)
!10705 = !DILocation(line: 1882, column: 47, scope: !10701)
!10706 = !DILocalVariable(name: "use_compat", arg: 3, scope: !10701, file: !3, line: 1882, type: !1788)
!10707 = !DILocation(line: 1882, column: 63, scope: !10701)
!10708 = !DILocation(line: 1884, column: 10, scope: !10701)
!10709 = !DILocation(line: 1884, column: 14, scope: !10701)
!10710 = !DILocation(line: 1884, column: 2, scope: !10701)
!10711 = !DILocalVariable(name: "dquat", scope: !10712, file: !3, line: 1887, type: !916)
!10712 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 1886, column: 3)
!10713 = distinct !DILexicalBlock(scope: !10701, file: !3, line: 1884, column: 23)
!10714 = !DILocation(line: 1887, column: 10, scope: !10712)
!10715 = !DILocation(line: 1888, column: 17, scope: !10712)
!10716 = !DILocation(line: 1888, column: 21, scope: !10712)
!10717 = !DILocation(line: 1888, column: 27, scope: !10712)
!10718 = !DILocation(line: 1888, column: 4, scope: !10712)
!10719 = !DILocation(line: 1889, column: 20, scope: !10712)
!10720 = !DILocation(line: 1889, column: 27, scope: !10712)
!10721 = !DILocation(line: 1889, column: 31, scope: !10712)
!10722 = !DILocation(line: 1889, column: 4, scope: !10712)
!10723 = !DILocation(line: 1890, column: 14, scope: !10712)
!10724 = !DILocation(line: 1890, column: 4, scope: !10712)
!10725 = !DILocation(line: 1891, column: 16, scope: !10712)
!10726 = !DILocation(line: 1891, column: 20, scope: !10712)
!10727 = !DILocation(line: 1891, column: 26, scope: !10712)
!10728 = !DILocation(line: 1891, column: 33, scope: !10712)
!10729 = !DILocation(line: 1891, column: 37, scope: !10712)
!10730 = !DILocation(line: 1891, column: 4, scope: !10712)
!10731 = !DILocation(line: 1892, column: 4, scope: !10712)
!10732 = !DILocation(line: 1896, column: 23, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 1895, column: 3)
!10734 = !DILocation(line: 1896, column: 27, scope: !10733)
!10735 = !DILocation(line: 1896, column: 37, scope: !10733)
!10736 = !DILocation(line: 1896, column: 41, scope: !10733)
!10737 = !DILocation(line: 1896, column: 51, scope: !10733)
!10738 = !DILocation(line: 1896, column: 4, scope: !10733)
!10739 = !DILocation(line: 1897, column: 14, scope: !10733)
!10740 = !DILocation(line: 1897, column: 18, scope: !10733)
!10741 = !DILocation(line: 1897, column: 27, scope: !10733)
!10742 = !DILocation(line: 1897, column: 31, scope: !10733)
!10743 = !DILocation(line: 1897, column: 4, scope: !10733)
!10744 = !DILocation(line: 1898, column: 20, scope: !10733)
!10745 = !DILocation(line: 1898, column: 24, scope: !10733)
!10746 = !DILocation(line: 1898, column: 4, scope: !10733)
!10747 = !DILocation(line: 1898, column: 8, scope: !10733)
!10748 = !DILocation(line: 1898, column: 17, scope: !10733)
!10749 = !DILocation(line: 1899, column: 4, scope: !10733)
!10750 = !DILocalVariable(name: "quat", scope: !10751, file: !3, line: 1903, type: !916)
!10751 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 1902, column: 3)
!10752 = !DILocation(line: 1903, column: 10, scope: !10751)
!10753 = !DILocalVariable(name: "dquat", scope: !10751, file: !3, line: 1904, type: !916)
!10754 = !DILocation(line: 1904, column: 10, scope: !10751)
!10755 = !DILocalVariable(name: "tmat", scope: !10751, file: !3, line: 1905, type: !1708)
!10756 = !DILocation(line: 1905, column: 10, scope: !10751)
!10757 = !DILocation(line: 1908, column: 17, scope: !10751)
!10758 = !DILocation(line: 1908, column: 23, scope: !10751)
!10759 = !DILocation(line: 1908, column: 4, scope: !10751)
!10760 = !DILocation(line: 1909, column: 17, scope: !10751)
!10761 = !DILocation(line: 1909, column: 24, scope: !10751)
!10762 = !DILocation(line: 1909, column: 28, scope: !10751)
!10763 = !DILocation(line: 1909, column: 34, scope: !10751)
!10764 = !DILocation(line: 1909, column: 38, scope: !10751)
!10765 = !DILocation(line: 1909, column: 4, scope: !10751)
!10766 = !DILocation(line: 1910, column: 14, scope: !10751)
!10767 = !DILocation(line: 1910, column: 4, scope: !10751)
!10768 = !DILocation(line: 1911, column: 16, scope: !10751)
!10769 = !DILocation(line: 1911, column: 22, scope: !10751)
!10770 = !DILocation(line: 1911, column: 29, scope: !10751)
!10771 = !DILocation(line: 1911, column: 4, scope: !10751)
!10772 = !DILocation(line: 1912, column: 17, scope: !10751)
!10773 = !DILocation(line: 1912, column: 23, scope: !10751)
!10774 = !DILocation(line: 1912, column: 4, scope: !10751)
!10775 = !DILocation(line: 1915, column: 8, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10751, file: !3, line: 1915, column: 8)
!10777 = !DILocation(line: 1915, column: 8, scope: !10751)
!10778 = !DILocation(line: 1915, column: 44, scope: !10776)
!10779 = !DILocation(line: 1915, column: 48, scope: !10776)
!10780 = !DILocation(line: 1915, column: 53, scope: !10776)
!10781 = !DILocation(line: 1915, column: 57, scope: !10776)
!10782 = !DILocation(line: 1915, column: 62, scope: !10776)
!10783 = !DILocation(line: 1915, column: 66, scope: !10776)
!10784 = !DILocation(line: 1915, column: 75, scope: !10776)
!10785 = !DILocation(line: 1915, column: 20, scope: !10776)
!10786 = !DILocation(line: 1916, column: 33, scope: !10776)
!10787 = !DILocation(line: 1916, column: 37, scope: !10776)
!10788 = !DILocation(line: 1916, column: 42, scope: !10776)
!10789 = !DILocation(line: 1916, column: 46, scope: !10776)
!10790 = !DILocation(line: 1916, column: 55, scope: !10776)
!10791 = !DILocation(line: 1916, column: 20, scope: !10776)
!10792 = !DILocation(line: 1917, column: 4, scope: !10751)
!10793 = !DILocation(line: 1920, column: 1, scope: !10701)
!10794 = distinct !DISubprogram(name: "BKE_object_tfm_protected_backup", scope: !3, file: !3, line: 1922, type: !10795, scopeLine: 1924, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!10795 = !DISubroutineType(types: !10796)
!10796 = !{null, !9016, !10797}
!10797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10798, size: 64)
!10798 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectTfmProtectedChannels", file: !547, line: 164, baseType: !10799)
!10799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ObjectTfmProtectedChannels", file: !547, line: 157, size: 1088, elements: !10800)
!10800 = !{!10801, !10802, !10803, !10804, !10805, !10806, !10807, !10808, !10809, !10810, !10811, !10812}
!10801 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !10799, file: !547, line: 158, baseType: !835, size: 96)
!10802 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !10799, file: !547, line: 158, baseType: !835, size: 96, offset: 96)
!10803 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10799, file: !547, line: 159, baseType: !835, size: 96, offset: 192)
!10804 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !10799, file: !547, line: 159, baseType: !835, size: 96, offset: 288)
!10805 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !10799, file: !547, line: 160, baseType: !835, size: 96, offset: 384)
!10806 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !10799, file: !547, line: 160, baseType: !835, size: 96, offset: 480)
!10807 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !10799, file: !547, line: 161, baseType: !916, size: 128, offset: 576)
!10808 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !10799, file: !547, line: 161, baseType: !916, size: 128, offset: 704)
!10809 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !10799, file: !547, line: 162, baseType: !835, size: 96, offset: 832)
!10810 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !10799, file: !547, line: 162, baseType: !835, size: 96, offset: 928)
!10811 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !10799, file: !547, line: 163, baseType: !713, size: 32, offset: 1024)
!10812 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !10799, file: !547, line: 163, baseType: !713, size: 32, offset: 1056)
!10813 = !DILocalVariable(name: "ob", arg: 1, scope: !10794, file: !3, line: 1922, type: !9016)
!10814 = !DILocation(line: 1922, column: 52, scope: !10794)
!10815 = !DILocalVariable(name: "obtfm", arg: 2, scope: !10794, file: !3, line: 1923, type: !10797)
!10816 = !DILocation(line: 1923, column: 66, scope: !10794)
!10817 = !DILocation(line: 1930, column: 2, scope: !10794)
!10818 = !DILocation(line: 1931, column: 2, scope: !10794)
!10819 = !DILocation(line: 1932, column: 2, scope: !10794)
!10820 = !DILocation(line: 1933, column: 2, scope: !10794)
!10821 = !DILocation(line: 1934, column: 2, scope: !10794)
!10822 = !DILocation(line: 1935, column: 2, scope: !10794)
!10823 = !DILocation(line: 1936, column: 2, scope: !10794)
!10824 = !DILocation(line: 1937, column: 2, scope: !10794)
!10825 = !DILocation(line: 1938, column: 2, scope: !10794)
!10826 = !DILocation(line: 1939, column: 2, scope: !10794)
!10827 = !DILocation(line: 1940, column: 2, scope: !10794)
!10828 = !DILocation(line: 1941, column: 2, scope: !10794)
!10829 = !DILocation(line: 1947, column: 1, scope: !10794)
!10830 = distinct !DISubprogram(name: "copy_v4_v4", scope: !9059, file: !9059, line: 71, type: !9060, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!10831 = !DILocalVariable(name: "r", arg: 1, scope: !10830, file: !9059, line: 71, type: !1073)
!10832 = !DILocation(line: 71, column: 31, scope: !10830)
!10833 = !DILocalVariable(name: "a", arg: 2, scope: !10830, file: !9059, line: 71, type: !3397)
!10834 = !DILocation(line: 71, column: 49, scope: !10830)
!10835 = !DILocation(line: 73, column: 9, scope: !10830)
!10836 = !DILocation(line: 73, column: 2, scope: !10830)
!10837 = !DILocation(line: 73, column: 7, scope: !10830)
!10838 = !DILocation(line: 74, column: 9, scope: !10830)
!10839 = !DILocation(line: 74, column: 2, scope: !10830)
!10840 = !DILocation(line: 74, column: 7, scope: !10830)
!10841 = !DILocation(line: 75, column: 9, scope: !10830)
!10842 = !DILocation(line: 75, column: 2, scope: !10830)
!10843 = !DILocation(line: 75, column: 7, scope: !10830)
!10844 = !DILocation(line: 76, column: 9, scope: !10830)
!10845 = !DILocation(line: 76, column: 2, scope: !10830)
!10846 = !DILocation(line: 76, column: 7, scope: !10830)
!10847 = !DILocation(line: 77, column: 1, scope: !10830)
!10848 = distinct !DISubprogram(name: "BKE_object_tfm_protected_restore", scope: !3, file: !3, line: 1949, type: !10849, scopeLine: 1952, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!10849 = !DISubroutineType(types: !10850)
!10850 = !{null, !5166, !10851, !3399}
!10851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10852, size: 64)
!10852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10798)
!10853 = !DILocalVariable(name: "ob", arg: 1, scope: !10848, file: !3, line: 1949, type: !5166)
!10854 = !DILocation(line: 1949, column: 47, scope: !10848)
!10855 = !DILocalVariable(name: "obtfm", arg: 2, scope: !10848, file: !3, line: 1950, type: !10851)
!10856 = !DILocation(line: 1950, column: 73, scope: !10848)
!10857 = !DILocalVariable(name: "protectflag", arg: 3, scope: !10848, file: !3, line: 1951, type: !3399)
!10858 = !DILocation(line: 1951, column: 51, scope: !10848)
!10859 = !DILocalVariable(name: "i", scope: !10848, file: !3, line: 1953, type: !7)
!10860 = !DILocation(line: 1953, column: 15, scope: !10848)
!10861 = !DILocation(line: 1955, column: 9, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10848, file: !3, line: 1955, column: 2)
!10863 = !DILocation(line: 1955, column: 7, scope: !10862)
!10864 = !DILocation(line: 1955, column: 14, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10862, file: !3, line: 1955, column: 2)
!10866 = !DILocation(line: 1955, column: 16, scope: !10865)
!10867 = !DILocation(line: 1955, column: 2, scope: !10862)
!10868 = !DILocation(line: 1956, column: 7, scope: !10869)
!10869 = distinct !DILexicalBlock(scope: !10870, file: !3, line: 1956, column: 7)
!10870 = distinct !DILexicalBlock(scope: !10865, file: !3, line: 1955, column: 26)
!10871 = !DILocation(line: 1956, column: 38, scope: !10869)
!10872 = !DILocation(line: 1956, column: 35, scope: !10869)
!10873 = !DILocation(line: 1956, column: 19, scope: !10869)
!10874 = !DILocation(line: 1956, column: 7, scope: !10870)
!10875 = !DILocation(line: 1957, column: 18, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10869, file: !3, line: 1956, column: 42)
!10877 = !DILocation(line: 1957, column: 25, scope: !10876)
!10878 = !DILocation(line: 1957, column: 29, scope: !10876)
!10879 = !DILocation(line: 1957, column: 4, scope: !10876)
!10880 = !DILocation(line: 1957, column: 8, scope: !10876)
!10881 = !DILocation(line: 1957, column: 12, scope: !10876)
!10882 = !DILocation(line: 1957, column: 15, scope: !10876)
!10883 = !DILocation(line: 1958, column: 18, scope: !10876)
!10884 = !DILocation(line: 1958, column: 25, scope: !10876)
!10885 = !DILocation(line: 1958, column: 30, scope: !10876)
!10886 = !DILocation(line: 1958, column: 4, scope: !10876)
!10887 = !DILocation(line: 1958, column: 8, scope: !10876)
!10888 = !DILocation(line: 1958, column: 13, scope: !10876)
!10889 = !DILocation(line: 1958, column: 16, scope: !10876)
!10890 = !DILocation(line: 1959, column: 3, scope: !10876)
!10891 = !DILocation(line: 1961, column: 7, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10870, file: !3, line: 1961, column: 7)
!10893 = !DILocation(line: 1961, column: 40, scope: !10892)
!10894 = !DILocation(line: 1961, column: 37, scope: !10892)
!10895 = !DILocation(line: 1961, column: 19, scope: !10892)
!10896 = !DILocation(line: 1961, column: 7, scope: !10870)
!10897 = !DILocation(line: 1962, column: 19, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10892, file: !3, line: 1961, column: 44)
!10899 = !DILocation(line: 1962, column: 26, scope: !10898)
!10900 = !DILocation(line: 1962, column: 31, scope: !10898)
!10901 = !DILocation(line: 1962, column: 4, scope: !10898)
!10902 = !DILocation(line: 1962, column: 8, scope: !10898)
!10903 = !DILocation(line: 1962, column: 13, scope: !10898)
!10904 = !DILocation(line: 1962, column: 16, scope: !10898)
!10905 = !DILocation(line: 1963, column: 20, scope: !10898)
!10906 = !DILocation(line: 1963, column: 27, scope: !10898)
!10907 = !DILocation(line: 1963, column: 34, scope: !10898)
!10908 = !DILocation(line: 1963, column: 4, scope: !10898)
!10909 = !DILocation(line: 1963, column: 8, scope: !10898)
!10910 = !DILocation(line: 1963, column: 15, scope: !10898)
!10911 = !DILocation(line: 1963, column: 18, scope: !10898)
!10912 = !DILocation(line: 1964, column: 3, scope: !10898)
!10913 = !DILocation(line: 1966, column: 7, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10870, file: !3, line: 1966, column: 7)
!10915 = !DILocation(line: 1966, column: 38, scope: !10914)
!10916 = !DILocation(line: 1966, column: 35, scope: !10914)
!10917 = !DILocation(line: 1966, column: 19, scope: !10914)
!10918 = !DILocation(line: 1966, column: 7, scope: !10870)
!10919 = !DILocation(line: 1967, column: 18, scope: !10920)
!10920 = distinct !DILexicalBlock(scope: !10914, file: !3, line: 1966, column: 42)
!10921 = !DILocation(line: 1967, column: 25, scope: !10920)
!10922 = !DILocation(line: 1967, column: 29, scope: !10920)
!10923 = !DILocation(line: 1967, column: 4, scope: !10920)
!10924 = !DILocation(line: 1967, column: 8, scope: !10920)
!10925 = !DILocation(line: 1967, column: 12, scope: !10920)
!10926 = !DILocation(line: 1967, column: 15, scope: !10920)
!10927 = !DILocation(line: 1968, column: 18, scope: !10920)
!10928 = !DILocation(line: 1968, column: 25, scope: !10920)
!10929 = !DILocation(line: 1968, column: 30, scope: !10920)
!10930 = !DILocation(line: 1968, column: 4, scope: !10920)
!10931 = !DILocation(line: 1968, column: 8, scope: !10920)
!10932 = !DILocation(line: 1968, column: 13, scope: !10920)
!10933 = !DILocation(line: 1968, column: 16, scope: !10920)
!10934 = !DILocation(line: 1970, column: 23, scope: !10920)
!10935 = !DILocation(line: 1970, column: 30, scope: !10920)
!10936 = !DILocation(line: 1970, column: 35, scope: !10920)
!10937 = !DILocation(line: 1970, column: 37, scope: !10920)
!10938 = !DILocation(line: 1970, column: 4, scope: !10920)
!10939 = !DILocation(line: 1970, column: 8, scope: !10920)
!10940 = !DILocation(line: 1970, column: 13, scope: !10920)
!10941 = !DILocation(line: 1970, column: 15, scope: !10920)
!10942 = !DILocation(line: 1970, column: 20, scope: !10920)
!10943 = !DILocation(line: 1971, column: 23, scope: !10920)
!10944 = !DILocation(line: 1971, column: 30, scope: !10920)
!10945 = !DILocation(line: 1971, column: 36, scope: !10920)
!10946 = !DILocation(line: 1971, column: 38, scope: !10920)
!10947 = !DILocation(line: 1971, column: 4, scope: !10920)
!10948 = !DILocation(line: 1971, column: 8, scope: !10920)
!10949 = !DILocation(line: 1971, column: 14, scope: !10920)
!10950 = !DILocation(line: 1971, column: 16, scope: !10920)
!10951 = !DILocation(line: 1971, column: 21, scope: !10920)
!10952 = !DILocation(line: 1973, column: 22, scope: !10920)
!10953 = !DILocation(line: 1973, column: 29, scope: !10920)
!10954 = !DILocation(line: 1973, column: 37, scope: !10920)
!10955 = !DILocation(line: 1973, column: 4, scope: !10920)
!10956 = !DILocation(line: 1973, column: 8, scope: !10920)
!10957 = !DILocation(line: 1973, column: 16, scope: !10920)
!10958 = !DILocation(line: 1973, column: 19, scope: !10920)
!10959 = !DILocation(line: 1974, column: 22, scope: !10920)
!10960 = !DILocation(line: 1974, column: 29, scope: !10920)
!10961 = !DILocation(line: 1974, column: 38, scope: !10920)
!10962 = !DILocation(line: 1974, column: 4, scope: !10920)
!10963 = !DILocation(line: 1974, column: 8, scope: !10920)
!10964 = !DILocation(line: 1974, column: 17, scope: !10920)
!10965 = !DILocation(line: 1974, column: 20, scope: !10920)
!10966 = !DILocation(line: 1975, column: 3, scope: !10920)
!10967 = !DILocation(line: 1976, column: 2, scope: !10870)
!10968 = !DILocation(line: 1955, column: 22, scope: !10865)
!10969 = !DILocation(line: 1955, column: 2, scope: !10865)
!10970 = distinct !{!10970, !10867, !10971}
!10971 = !DILocation(line: 1976, column: 2, scope: !10862)
!10972 = !DILocation(line: 1978, column: 7, scope: !10973)
!10973 = distinct !DILexicalBlock(scope: !10848, file: !3, line: 1978, column: 6)
!10974 = !DILocation(line: 1978, column: 19, scope: !10973)
!10975 = !DILocation(line: 1978, column: 36, scope: !10973)
!10976 = !DILocation(line: 1978, column: 40, scope: !10973)
!10977 = !DILocation(line: 1978, column: 52, scope: !10973)
!10978 = !DILocation(line: 1978, column: 6, scope: !10848)
!10979 = !DILocation(line: 1979, column: 18, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10973, file: !3, line: 1978, column: 69)
!10981 = !DILocation(line: 1979, column: 25, scope: !10980)
!10982 = !DILocation(line: 1979, column: 3, scope: !10980)
!10983 = !DILocation(line: 1979, column: 7, scope: !10980)
!10984 = !DILocation(line: 1979, column: 15, scope: !10980)
!10985 = !DILocation(line: 1980, column: 18, scope: !10980)
!10986 = !DILocation(line: 1980, column: 25, scope: !10980)
!10987 = !DILocation(line: 1980, column: 3, scope: !10980)
!10988 = !DILocation(line: 1980, column: 7, scope: !10980)
!10989 = !DILocation(line: 1980, column: 16, scope: !10980)
!10990 = !DILocation(line: 1982, column: 19, scope: !10980)
!10991 = !DILocation(line: 1982, column: 26, scope: !10980)
!10992 = !DILocation(line: 1982, column: 3, scope: !10980)
!10993 = !DILocation(line: 1982, column: 7, scope: !10980)
!10994 = !DILocation(line: 1982, column: 16, scope: !10980)
!10995 = !DILocation(line: 1983, column: 19, scope: !10980)
!10996 = !DILocation(line: 1983, column: 26, scope: !10980)
!10997 = !DILocation(line: 1983, column: 3, scope: !10980)
!10998 = !DILocation(line: 1983, column: 7, scope: !10980)
!10999 = !DILocation(line: 1983, column: 17, scope: !10980)
!11000 = !DILocation(line: 1984, column: 2, scope: !10980)
!11001 = !DILocation(line: 1985, column: 1, scope: !10848)
!11002 = distinct !DISubprogram(name: "BKE_object_to_mat3", scope: !3, file: !3, line: 1987, type: !10579, scopeLine: 1988, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!11003 = !DILocalVariable(name: "ob", arg: 1, scope: !11002, file: !3, line: 1987, type: !5166)
!11004 = !DILocation(line: 1987, column: 33, scope: !11002)
!11005 = !DILocalVariable(name: "mat", arg: 2, scope: !11002, file: !3, line: 1987, type: !3431)
!11006 = !DILocation(line: 1987, column: 43, scope: !11002)
!11007 = !DILocalVariable(name: "smat", scope: !11002, file: !3, line: 1989, type: !1708)
!11008 = !DILocation(line: 1989, column: 8, scope: !11002)
!11009 = !DILocalVariable(name: "rmat", scope: !11002, file: !3, line: 1990, type: !1708)
!11010 = !DILocation(line: 1990, column: 8, scope: !11002)
!11011 = !DILocation(line: 1994, column: 27, scope: !11002)
!11012 = !DILocation(line: 1994, column: 31, scope: !11002)
!11013 = !DILocation(line: 1994, column: 2, scope: !11002)
!11014 = !DILocation(line: 1997, column: 25, scope: !11002)
!11015 = !DILocation(line: 1997, column: 29, scope: !11002)
!11016 = !DILocation(line: 1997, column: 2, scope: !11002)
!11017 = !DILocation(line: 1998, column: 14, scope: !11002)
!11018 = !DILocation(line: 1998, column: 19, scope: !11002)
!11019 = !DILocation(line: 1998, column: 25, scope: !11002)
!11020 = !DILocation(line: 1998, column: 2, scope: !11002)
!11021 = !DILocation(line: 1999, column: 1, scope: !11002)
!11022 = distinct !DISubprogram(name: "BKE_object_to_mat4", scope: !3, file: !3, line: 2001, type: !11023, scopeLine: 2002, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!11023 = !DISubroutineType(types: !11024)
!11024 = !{null, !5166, !3458}
!11025 = !DILocalVariable(name: "ob", arg: 1, scope: !11022, file: !3, line: 2001, type: !5166)
!11026 = !DILocation(line: 2001, column: 33, scope: !11022)
!11027 = !DILocalVariable(name: "mat", arg: 2, scope: !11022, file: !3, line: 2001, type: !3458)
!11028 = !DILocation(line: 2001, column: 43, scope: !11022)
!11029 = !DILocalVariable(name: "tmat", scope: !11022, file: !3, line: 2003, type: !1708)
!11030 = !DILocation(line: 2003, column: 8, scope: !11022)
!11031 = !DILocation(line: 2005, column: 21, scope: !11022)
!11032 = !DILocation(line: 2005, column: 25, scope: !11022)
!11033 = !DILocation(line: 2005, column: 2, scope: !11022)
!11034 = !DILocation(line: 2007, column: 13, scope: !11022)
!11035 = !DILocation(line: 2007, column: 18, scope: !11022)
!11036 = !DILocation(line: 2007, column: 2, scope: !11022)
!11037 = !DILocation(line: 2009, column: 14, scope: !11022)
!11038 = !DILocation(line: 2009, column: 22, scope: !11022)
!11039 = !DILocation(line: 2009, column: 26, scope: !11022)
!11040 = !DILocation(line: 2009, column: 31, scope: !11022)
!11041 = !DILocation(line: 2009, column: 35, scope: !11022)
!11042 = !DILocation(line: 2009, column: 2, scope: !11022)
!11043 = !DILocation(line: 2010, column: 1, scope: !11022)
!11044 = distinct !DISubprogram(name: "add_v3_v3v3", scope: !9059, file: !9059, line: 309, type: !10598, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!11045 = !DILocalVariable(name: "r", arg: 1, scope: !11044, file: !9059, line: 309, type: !1073)
!11046 = !DILocation(line: 309, column: 32, scope: !11044)
!11047 = !DILocalVariable(name: "a", arg: 2, scope: !11044, file: !9059, line: 309, type: !3397)
!11048 = !DILocation(line: 309, column: 50, scope: !11044)
!11049 = !DILocalVariable(name: "b", arg: 3, scope: !11044, file: !9059, line: 309, type: !3397)
!11050 = !DILocation(line: 309, column: 68, scope: !11044)
!11051 = !DILocation(line: 311, column: 9, scope: !11044)
!11052 = !DILocation(line: 311, column: 16, scope: !11044)
!11053 = !DILocation(line: 311, column: 14, scope: !11044)
!11054 = !DILocation(line: 311, column: 2, scope: !11044)
!11055 = !DILocation(line: 311, column: 7, scope: !11044)
!11056 = !DILocation(line: 312, column: 9, scope: !11044)
!11057 = !DILocation(line: 312, column: 16, scope: !11044)
!11058 = !DILocation(line: 312, column: 14, scope: !11044)
!11059 = !DILocation(line: 312, column: 2, scope: !11044)
!11060 = !DILocation(line: 312, column: 7, scope: !11044)
!11061 = !DILocation(line: 313, column: 9, scope: !11044)
!11062 = !DILocation(line: 313, column: 16, scope: !11044)
!11063 = !DILocation(line: 313, column: 14, scope: !11044)
!11064 = !DILocation(line: 313, column: 2, scope: !11044)
!11065 = !DILocation(line: 313, column: 7, scope: !11044)
!11066 = !DILocation(line: 314, column: 1, scope: !11044)
!11067 = distinct !DISubprogram(name: "BKE_object_matrix_local_get", scope: !3, file: !3, line: 2012, type: !11068, scopeLine: 2013, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!11068 = !DISubroutineType(types: !11069)
!11069 = !{null, !966, !3458}
!11070 = !DILocalVariable(name: "ob", arg: 1, scope: !11067, file: !3, line: 2012, type: !966)
!11071 = !DILocation(line: 2012, column: 49, scope: !11067)
!11072 = !DILocalVariable(name: "mat", arg: 2, scope: !11067, file: !3, line: 2012, type: !3458)
!11073 = !DILocation(line: 2012, column: 59, scope: !11067)
!11074 = !DILocation(line: 2014, column: 6, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11067, file: !3, line: 2014, column: 6)
!11076 = !DILocation(line: 2014, column: 10, scope: !11075)
!11077 = !DILocation(line: 2014, column: 6, scope: !11067)
!11078 = !DILocalVariable(name: "invmat", scope: !11079, file: !3, line: 2015, type: !1404)
!11079 = distinct !DILexicalBlock(scope: !11075, file: !3, line: 2014, column: 18)
!11080 = !DILocation(line: 2015, column: 9, scope: !11079)
!11081 = !DILocation(line: 2016, column: 16, scope: !11079)
!11082 = !DILocation(line: 2016, column: 24, scope: !11079)
!11083 = !DILocation(line: 2016, column: 28, scope: !11079)
!11084 = !DILocation(line: 2016, column: 36, scope: !11079)
!11085 = !DILocation(line: 2016, column: 3, scope: !11079)
!11086 = !DILocation(line: 2017, column: 15, scope: !11079)
!11087 = !DILocation(line: 2017, column: 20, scope: !11079)
!11088 = !DILocation(line: 2017, column: 28, scope: !11079)
!11089 = !DILocation(line: 2017, column: 32, scope: !11079)
!11090 = !DILocation(line: 2017, column: 3, scope: !11079)
!11091 = !DILocation(line: 2018, column: 2, scope: !11079)
!11092 = !DILocation(line: 2020, column: 14, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11075, file: !3, line: 2019, column: 7)
!11094 = !DILocation(line: 2020, column: 19, scope: !11093)
!11095 = !DILocation(line: 2020, column: 23, scope: !11093)
!11096 = !DILocation(line: 2020, column: 3, scope: !11093)
!11097 = !DILocation(line: 2022, column: 1, scope: !11067)
!11098 = distinct !DISubprogram(name: "BKE_object_where_is_calc_time_ex", scope: !3, file: !3, line: 2373, type: !11099, scopeLine: 2375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!11099 = !DISubroutineType(types: !11100)
!11100 = !{null, !6411, !5166, !713, !11101, !3431}
!11101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11102, size: 64)
!11102 = !DIDerivedType(tag: DW_TAG_typedef, name: "RigidBodyWorld", file: !2371, line: 74, baseType: !2370)
!11103 = !DILocalVariable(name: "scene", arg: 1, scope: !11098, file: !3, line: 2373, type: !6411)
!11104 = !DILocation(line: 2373, column: 46, scope: !11098)
!11105 = !DILocalVariable(name: "ob", arg: 2, scope: !11098, file: !3, line: 2373, type: !5166)
!11106 = !DILocation(line: 2373, column: 61, scope: !11098)
!11107 = !DILocalVariable(name: "ctime", arg: 3, scope: !11098, file: !3, line: 2373, type: !713)
!11108 = !DILocation(line: 2373, column: 71, scope: !11098)
!11109 = !DILocalVariable(name: "rbw", arg: 4, scope: !11098, file: !3, line: 2374, type: !11101)
!11110 = !DILocation(line: 2374, column: 55, scope: !11098)
!11111 = !DILocalVariable(name: "r_originmat", arg: 5, scope: !11098, file: !3, line: 2374, type: !3431)
!11112 = !DILocation(line: 2374, column: 66, scope: !11098)
!11113 = !DILocation(line: 2376, column: 6, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11098, file: !3, line: 2376, column: 6)
!11115 = !DILocation(line: 2376, column: 9, scope: !11114)
!11116 = !DILocation(line: 2376, column: 6, scope: !11098)
!11117 = !DILocation(line: 2376, column: 18, scope: !11114)
!11118 = !DILocation(line: 2379, column: 32, scope: !11098)
!11119 = !DILocation(line: 2379, column: 40, scope: !11098)
!11120 = !DILocation(line: 2379, column: 44, scope: !11098)
!11121 = !DILocation(line: 2379, column: 48, scope: !11098)
!11122 = !DILocation(line: 2379, column: 52, scope: !11098)
!11123 = !DILocation(line: 2379, column: 57, scope: !11098)
!11124 = !DILocation(line: 2379, column: 2, scope: !11098)
!11125 = !DILocation(line: 2381, column: 6, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11098, file: !3, line: 2381, column: 6)
!11127 = !DILocation(line: 2381, column: 10, scope: !11126)
!11128 = !DILocation(line: 2381, column: 6, scope: !11098)
!11129 = !DILocalVariable(name: "par", scope: !11130, file: !3, line: 2382, type: !5166)
!11130 = distinct !DILexicalBlock(scope: !11126, file: !3, line: 2381, column: 18)
!11131 = !DILocation(line: 2382, column: 11, scope: !11130)
!11132 = !DILocation(line: 2382, column: 17, scope: !11130)
!11133 = !DILocation(line: 2382, column: 21, scope: !11130)
!11134 = !DILocalVariable(name: "slowmat", scope: !11130, file: !3, line: 2383, type: !1404)
!11135 = !DILocation(line: 2383, column: 9, scope: !11130)
!11136 = !DILocation(line: 2386, column: 19, scope: !11130)
!11137 = !DILocation(line: 2386, column: 26, scope: !11130)
!11138 = !DILocation(line: 2386, column: 30, scope: !11130)
!11139 = !DILocation(line: 2386, column: 35, scope: !11130)
!11140 = !DILocation(line: 2386, column: 39, scope: !11130)
!11141 = !DILocation(line: 2386, column: 46, scope: !11130)
!11142 = !DILocation(line: 2386, column: 55, scope: !11130)
!11143 = !DILocation(line: 2386, column: 3, scope: !11130)
!11144 = !DILocation(line: 2391, column: 7, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11130, file: !3, line: 2391, column: 7)
!11146 = !DILocation(line: 2391, column: 11, scope: !11145)
!11147 = !DILocation(line: 2391, column: 19, scope: !11145)
!11148 = !DILocation(line: 2391, column: 7, scope: !11130)
!11149 = !DILocation(line: 2392, column: 33, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11151, file: !3, line: 2392, column: 8)
!11151 = distinct !DILexicalBlock(scope: !11145, file: !3, line: 2391, column: 30)
!11152 = !DILocation(line: 2392, column: 37, scope: !11150)
!11153 = !DILocation(line: 2392, column: 41, scope: !11150)
!11154 = !DILocation(line: 2392, column: 48, scope: !11150)
!11155 = !DILocation(line: 2392, column: 9, scope: !11150)
!11156 = !DILocation(line: 2392, column: 8, scope: !11151)
!11157 = !DILocation(line: 2393, column: 5, scope: !11150)
!11158 = !DILocation(line: 2394, column: 3, scope: !11151)
!11159 = !DILocation(line: 2395, column: 2, scope: !11130)
!11160 = !DILocation(line: 2397, column: 22, scope: !11161)
!11161 = distinct !DILexicalBlock(scope: !11126, file: !3, line: 2396, column: 7)
!11162 = !DILocation(line: 2397, column: 26, scope: !11161)
!11163 = !DILocation(line: 2397, column: 30, scope: !11161)
!11164 = !DILocation(line: 2397, column: 3, scope: !11161)
!11165 = !DILocation(line: 2401, column: 8, scope: !11098)
!11166 = !DILocation(line: 2401, column: 14, scope: !11098)
!11167 = !DILocation(line: 2401, column: 20, scope: !11098)
!11168 = !DILocation(line: 2401, column: 27, scope: !11098)
!11169 = !DILocation(line: 2401, column: 6, scope: !11098)
!11170 = !DILocation(line: 2403, column: 32, scope: !11098)
!11171 = !DILocation(line: 2403, column: 37, scope: !11098)
!11172 = !DILocation(line: 2403, column: 41, scope: !11098)
!11173 = !DILocation(line: 2403, column: 2, scope: !11098)
!11174 = !DILocation(line: 2406, column: 6, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11098, file: !3, line: 2406, column: 6)
!11176 = !DILocation(line: 2406, column: 10, scope: !11175)
!11177 = !DILocation(line: 2406, column: 22, scope: !11175)
!11178 = !DILocation(line: 2406, column: 28, scope: !11175)
!11179 = !DILocation(line: 2406, column: 33, scope: !11175)
!11180 = !DILocation(line: 2406, column: 37, scope: !11175)
!11181 = !DILocation(line: 2406, column: 47, scope: !11175)
!11182 = !DILocation(line: 2406, column: 6, scope: !11098)
!11183 = !DILocalVariable(name: "cob", scope: !11184, file: !3, line: 2407, type: !11185)
!11184 = distinct !DILexicalBlock(scope: !11175, file: !3, line: 2406, column: 69)
!11185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11186, size: 64)
!11186 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraintOb", file: !6702, line: 60, baseType: !6739)
!11187 = !DILocation(line: 2407, column: 18, scope: !11184)
!11188 = !DILocation(line: 2408, column: 37, scope: !11184)
!11189 = !DILocation(line: 2408, column: 44, scope: !11184)
!11190 = !DILocation(line: 2408, column: 9, scope: !11184)
!11191 = !DILocation(line: 2408, column: 7, scope: !11184)
!11192 = !DILocation(line: 2409, column: 26, scope: !11184)
!11193 = !DILocation(line: 2409, column: 30, scope: !11184)
!11194 = !DILocation(line: 2409, column: 43, scope: !11184)
!11195 = !DILocation(line: 2409, column: 48, scope: !11184)
!11196 = !DILocation(line: 2409, column: 3, scope: !11184)
!11197 = !DILocation(line: 2410, column: 32, scope: !11184)
!11198 = !DILocation(line: 2410, column: 3, scope: !11184)
!11199 = !DILocation(line: 2411, column: 2, scope: !11184)
!11200 = !DILocation(line: 2414, column: 21, scope: !11201)
!11201 = distinct !DILexicalBlock(scope: !11098, file: !3, line: 2414, column: 6)
!11202 = !DILocation(line: 2414, column: 25, scope: !11201)
!11203 = !DILocation(line: 2414, column: 6, scope: !11201)
!11204 = !DILocation(line: 2414, column: 6, scope: !11098)
!11205 = !DILocation(line: 2414, column: 33, scope: !11201)
!11206 = !DILocation(line: 2414, column: 37, scope: !11201)
!11207 = !DILocation(line: 2414, column: 47, scope: !11201)
!11208 = !DILocation(line: 2415, column: 7, scope: !11201)
!11209 = !DILocation(line: 2415, column: 11, scope: !11201)
!11210 = !DILocation(line: 2415, column: 21, scope: !11201)
!11211 = !DILocation(line: 2416, column: 1, scope: !11098)
!11212 = distinct !DISubprogram(name: "solve_parenting", scope: !3, file: !3, line: 2319, type: !11213, scopeLine: 2321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!11213 = !DISubroutineType(types: !11214)
!11214 = !{null, !6411, !5166, !5166, !3458, !3458, !3431, !3482}
!11215 = !DILocalVariable(name: "scene", arg: 1, scope: !11212, file: !3, line: 2319, type: !6411)
!11216 = !DILocation(line: 2319, column: 36, scope: !11212)
!11217 = !DILocalVariable(name: "ob", arg: 2, scope: !11212, file: !3, line: 2319, type: !5166)
!11218 = !DILocation(line: 2319, column: 51, scope: !11212)
!11219 = !DILocalVariable(name: "par", arg: 3, scope: !11212, file: !3, line: 2319, type: !5166)
!11220 = !DILocation(line: 2319, column: 63, scope: !11212)
!11221 = !DILocalVariable(name: "obmat", arg: 4, scope: !11212, file: !3, line: 2319, type: !3458)
!11222 = !DILocation(line: 2319, column: 74, scope: !11212)
!11223 = !DILocalVariable(name: "slowmat", arg: 5, scope: !11212, file: !3, line: 2319, type: !3458)
!11224 = !DILocation(line: 2319, column: 93, scope: !11212)
!11225 = !DILocalVariable(name: "r_originmat", arg: 6, scope: !11212, file: !3, line: 2320, type: !3431)
!11226 = !DILocation(line: 2320, column: 35, scope: !11212)
!11227 = !DILocalVariable(name: "set_origin", arg: 7, scope: !11212, file: !3, line: 2320, type: !3482)
!11228 = !DILocation(line: 2320, column: 65, scope: !11212)
!11229 = !DILocalVariable(name: "totmat", scope: !11212, file: !3, line: 2322, type: !1404)
!11230 = !DILocation(line: 2322, column: 8, scope: !11212)
!11231 = !DILocalVariable(name: "tmat", scope: !11212, file: !3, line: 2323, type: !1404)
!11232 = !DILocation(line: 2323, column: 8, scope: !11212)
!11233 = !DILocalVariable(name: "locmat", scope: !11212, file: !3, line: 2324, type: !1404)
!11234 = !DILocation(line: 2324, column: 8, scope: !11212)
!11235 = !DILocation(line: 2326, column: 21, scope: !11212)
!11236 = !DILocation(line: 2326, column: 25, scope: !11212)
!11237 = !DILocation(line: 2326, column: 2, scope: !11212)
!11238 = !DILocation(line: 2328, column: 6, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11212, file: !3, line: 2328, column: 6)
!11240 = !DILocation(line: 2328, column: 10, scope: !11239)
!11241 = !DILocation(line: 2328, column: 18, scope: !11239)
!11242 = !DILocation(line: 2328, column: 6, scope: !11212)
!11243 = !DILocation(line: 2328, column: 40, scope: !11239)
!11244 = !DILocation(line: 2328, column: 49, scope: !11239)
!11245 = !DILocation(line: 2328, column: 29, scope: !11239)
!11246 = !DILocation(line: 2330, column: 23, scope: !11212)
!11247 = !DILocation(line: 2330, column: 30, scope: !11212)
!11248 = !DILocation(line: 2330, column: 34, scope: !11212)
!11249 = !DILocation(line: 2330, column: 39, scope: !11212)
!11250 = !DILocation(line: 2330, column: 2, scope: !11212)
!11251 = !DILocation(line: 2333, column: 14, scope: !11212)
!11252 = !DILocation(line: 2333, column: 20, scope: !11212)
!11253 = !DILocation(line: 2333, column: 28, scope: !11212)
!11254 = !DILocation(line: 2333, column: 32, scope: !11212)
!11255 = !DILocation(line: 2333, column: 2, scope: !11212)
!11256 = !DILocation(line: 2334, column: 14, scope: !11212)
!11257 = !DILocation(line: 2334, column: 21, scope: !11212)
!11258 = !DILocation(line: 2334, column: 27, scope: !11212)
!11259 = !DILocation(line: 2334, column: 2, scope: !11212)
!11260 = !DILocation(line: 2336, column: 6, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11212, file: !3, line: 2336, column: 6)
!11262 = !DILocation(line: 2336, column: 6, scope: !11212)
!11263 = !DILocation(line: 2338, column: 14, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11261, file: !3, line: 2336, column: 19)
!11265 = !DILocation(line: 2338, column: 27, scope: !11264)
!11266 = !DILocation(line: 2338, column: 3, scope: !11264)
!11267 = !DILocation(line: 2339, column: 2, scope: !11264)
!11268 = !DILocation(line: 2342, column: 6, scope: !11269)
!11269 = distinct !DILexicalBlock(scope: !11212, file: !3, line: 2342, column: 6)
!11270 = !DILocation(line: 2342, column: 6, scope: !11212)
!11271 = !DILocation(line: 2343, column: 8, scope: !11272)
!11272 = distinct !DILexicalBlock(scope: !11273, file: !3, line: 2343, column: 7)
!11273 = distinct !DILexicalBlock(scope: !11269, file: !3, line: 2342, column: 18)
!11274 = !DILocation(line: 2343, column: 12, scope: !11272)
!11275 = !DILocation(line: 2343, column: 20, scope: !11272)
!11276 = !DILocation(line: 2343, column: 31, scope: !11272)
!11277 = !DILocation(line: 2343, column: 7, scope: !11273)
!11278 = !DILocation(line: 2344, column: 15, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11272, file: !3, line: 2343, column: 43)
!11280 = !DILocation(line: 2344, column: 19, scope: !11279)
!11281 = !DILocation(line: 2344, column: 25, scope: !11279)
!11282 = !DILocation(line: 2344, column: 30, scope: !11279)
!11283 = !DILocation(line: 2344, column: 4, scope: !11279)
!11284 = !DILocation(line: 2345, column: 3, scope: !11279)
!11285 = !DILocation(line: 2347, column: 15, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11272, file: !3, line: 2346, column: 8)
!11287 = !DILocation(line: 2347, column: 19, scope: !11286)
!11288 = !DILocation(line: 2347, column: 25, scope: !11286)
!11289 = !DILocation(line: 2347, column: 4, scope: !11286)
!11290 = !DILocation(line: 2349, column: 2, scope: !11273)
!11291 = !DILocation(line: 2350, column: 1, scope: !11212)
!11292 = distinct !DISubprogram(name: "where_is_object_parslow", scope: !3, file: !3, line: 2352, type: !11293, scopeLine: 2353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!11293 = !DISubroutineType(types: !11294)
!11294 = !{!1788, !5166, !3458, !3458}
!11295 = !DILocalVariable(name: "ob", arg: 1, scope: !11292, file: !3, line: 2352, type: !5166)
!11296 = !DILocation(line: 2352, column: 45, scope: !11292)
!11297 = !DILocalVariable(name: "obmat", arg: 2, scope: !11292, file: !3, line: 2352, type: !3458)
!11298 = !DILocation(line: 2352, column: 55, scope: !11292)
!11299 = !DILocalVariable(name: "slowmat", arg: 3, scope: !11292, file: !3, line: 2352, type: !3458)
!11300 = !DILocation(line: 2352, column: 74, scope: !11292)
!11301 = !DILocalVariable(name: "fp1", scope: !11292, file: !3, line: 2354, type: !1073)
!11302 = !DILocation(line: 2354, column: 9, scope: !11292)
!11303 = !DILocalVariable(name: "fp2", scope: !11292, file: !3, line: 2354, type: !1073)
!11304 = !DILocation(line: 2354, column: 15, scope: !11292)
!11305 = !DILocalVariable(name: "fac1", scope: !11292, file: !3, line: 2355, type: !713)
!11306 = !DILocation(line: 2355, column: 8, scope: !11292)
!11307 = !DILocalVariable(name: "fac2", scope: !11292, file: !3, line: 2355, type: !713)
!11308 = !DILocation(line: 2355, column: 14, scope: !11292)
!11309 = !DILocalVariable(name: "a", scope: !11292, file: !3, line: 2356, type: !73)
!11310 = !DILocation(line: 2356, column: 6, scope: !11292)
!11311 = !DILocation(line: 2359, column: 31, scope: !11292)
!11312 = !DILocation(line: 2359, column: 35, scope: !11292)
!11313 = !DILocation(line: 2359, column: 25, scope: !11292)
!11314 = !DILocation(line: 2359, column: 23, scope: !11292)
!11315 = !DILocation(line: 2359, column: 15, scope: !11292)
!11316 = !DILocation(line: 2359, column: 7, scope: !11292)
!11317 = !DILocation(line: 2360, column: 6, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11292, file: !3, line: 2360, column: 6)
!11319 = !DILocation(line: 2360, column: 11, scope: !11318)
!11320 = !DILocation(line: 2360, column: 6, scope: !11292)
!11321 = !DILocation(line: 2360, column: 20, scope: !11318)
!11322 = !DILocation(line: 2361, column: 16, scope: !11292)
!11323 = !DILocation(line: 2361, column: 14, scope: !11292)
!11324 = !DILocation(line: 2361, column: 7, scope: !11292)
!11325 = !DILocation(line: 2363, column: 8, scope: !11292)
!11326 = !DILocation(line: 2363, column: 6, scope: !11292)
!11327 = !DILocation(line: 2364, column: 8, scope: !11292)
!11328 = !DILocation(line: 2364, column: 6, scope: !11292)
!11329 = !DILocation(line: 2365, column: 9, scope: !11330)
!11330 = distinct !DILexicalBlock(scope: !11292, file: !3, line: 2365, column: 2)
!11331 = !DILocation(line: 2365, column: 7, scope: !11330)
!11332 = !DILocation(line: 2365, column: 14, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11330, file: !3, line: 2365, column: 2)
!11334 = !DILocation(line: 2365, column: 16, scope: !11333)
!11335 = !DILocation(line: 2365, column: 2, scope: !11330)
!11336 = !DILocation(line: 2366, column: 12, scope: !11337)
!11337 = distinct !DILexicalBlock(scope: !11333, file: !3, line: 2365, column: 41)
!11338 = !DILocation(line: 2366, column: 19, scope: !11337)
!11339 = !DILocation(line: 2366, column: 17, scope: !11337)
!11340 = !DILocation(line: 2366, column: 28, scope: !11337)
!11341 = !DILocation(line: 2366, column: 35, scope: !11337)
!11342 = !DILocation(line: 2366, column: 33, scope: !11337)
!11343 = !DILocation(line: 2366, column: 26, scope: !11337)
!11344 = !DILocation(line: 2366, column: 3, scope: !11337)
!11345 = !DILocation(line: 2366, column: 10, scope: !11337)
!11346 = !DILocation(line: 2367, column: 2, scope: !11337)
!11347 = !DILocation(line: 2365, column: 23, scope: !11333)
!11348 = !DILocation(line: 2365, column: 30, scope: !11333)
!11349 = !DILocation(line: 2365, column: 37, scope: !11333)
!11350 = !DILocation(line: 2365, column: 2, scope: !11333)
!11351 = distinct !{!11351, !11335, !11352}
!11352 = !DILocation(line: 2367, column: 2, scope: !11330)
!11353 = !DILocation(line: 2369, column: 2, scope: !11292)
!11354 = !DILocation(line: 2370, column: 1, scope: !11292)
!11355 = distinct !DISubprogram(name: "BKE_object_where_is_calc_time", scope: !3, file: !3, line: 2418, type: !11356, scopeLine: 2419, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!11356 = !DISubroutineType(types: !11357)
!11357 = !{null, !6411, !5166, !713}
!11358 = !DILocalVariable(name: "scene", arg: 1, scope: !11355, file: !3, line: 2418, type: !6411)
!11359 = !DILocation(line: 2418, column: 43, scope: !11355)
!11360 = !DILocalVariable(name: "ob", arg: 2, scope: !11355, file: !3, line: 2418, type: !5166)
!11361 = !DILocation(line: 2418, column: 58, scope: !11355)
!11362 = !DILocalVariable(name: "ctime", arg: 3, scope: !11355, file: !3, line: 2418, type: !713)
!11363 = !DILocation(line: 2418, column: 68, scope: !11355)
!11364 = !DILocation(line: 2420, column: 35, scope: !11355)
!11365 = !DILocation(line: 2420, column: 42, scope: !11355)
!11366 = !DILocation(line: 2420, column: 46, scope: !11355)
!11367 = !DILocation(line: 2420, column: 2, scope: !11355)
!11368 = !DILocation(line: 2421, column: 1, scope: !11355)
!11369 = distinct !DISubprogram(name: "BKE_object_where_is_calc_mat4", scope: !3, file: !3, line: 2427, type: !11370, scopeLine: 2428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!11370 = !DISubroutineType(types: !11371)
!11371 = !{null, !6411, !5166, !3458}
!11372 = !DILocalVariable(name: "scene", arg: 1, scope: !11369, file: !3, line: 2427, type: !6411)
!11373 = !DILocation(line: 2427, column: 43, scope: !11369)
!11374 = !DILocalVariable(name: "ob", arg: 2, scope: !11369, file: !3, line: 2427, type: !5166)
!11375 = !DILocation(line: 2427, column: 58, scope: !11369)
!11376 = !DILocalVariable(name: "obmat", arg: 3, scope: !11369, file: !3, line: 2427, type: !3458)
!11377 = !DILocation(line: 2427, column: 68, scope: !11369)
!11378 = !DILocation(line: 2430, column: 6, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11369, file: !3, line: 2430, column: 6)
!11380 = !DILocation(line: 2430, column: 10, scope: !11379)
!11381 = !DILocation(line: 2430, column: 6, scope: !11369)
!11382 = !DILocalVariable(name: "slowmat", scope: !11383, file: !3, line: 2431, type: !1404)
!11383 = distinct !DILexicalBlock(scope: !11379, file: !3, line: 2430, column: 18)
!11384 = !DILocation(line: 2431, column: 9, scope: !11383)
!11385 = !DILocalVariable(name: "par", scope: !11383, file: !3, line: 2433, type: !5166)
!11386 = !DILocation(line: 2433, column: 11, scope: !11383)
!11387 = !DILocation(line: 2433, column: 17, scope: !11383)
!11388 = !DILocation(line: 2433, column: 21, scope: !11383)
!11389 = !DILocation(line: 2435, column: 19, scope: !11383)
!11390 = !DILocation(line: 2435, column: 26, scope: !11383)
!11391 = !DILocation(line: 2435, column: 30, scope: !11383)
!11392 = !DILocation(line: 2435, column: 35, scope: !11383)
!11393 = !DILocation(line: 2435, column: 42, scope: !11383)
!11394 = !DILocation(line: 2435, column: 3, scope: !11383)
!11395 = !DILocation(line: 2437, column: 7, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11383, file: !3, line: 2437, column: 7)
!11397 = !DILocation(line: 2437, column: 11, scope: !11396)
!11398 = !DILocation(line: 2437, column: 19, scope: !11396)
!11399 = !DILocation(line: 2437, column: 7, scope: !11383)
!11400 = !DILocation(line: 2438, column: 28, scope: !11396)
!11401 = !DILocation(line: 2438, column: 32, scope: !11396)
!11402 = !DILocation(line: 2438, column: 39, scope: !11396)
!11403 = !DILocation(line: 2438, column: 4, scope: !11396)
!11404 = !DILocation(line: 2439, column: 2, scope: !11383)
!11405 = !DILocation(line: 2441, column: 22, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11379, file: !3, line: 2440, column: 7)
!11407 = !DILocation(line: 2441, column: 26, scope: !11406)
!11408 = !DILocation(line: 2441, column: 3, scope: !11406)
!11409 = !DILocation(line: 2443, column: 1, scope: !11369)
!11410 = distinct !DISubprogram(name: "BKE_object_where_is_calc_ex", scope: !3, file: !3, line: 2445, type: !11411, scopeLine: 2446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!11411 = !DISubroutineType(types: !11412)
!11412 = !{null, !6411, !11101, !5166, !3431}
!11413 = !DILocalVariable(name: "scene", arg: 1, scope: !11410, file: !3, line: 2445, type: !6411)
!11414 = !DILocation(line: 2445, column: 41, scope: !11410)
!11415 = !DILocalVariable(name: "rbw", arg: 2, scope: !11410, file: !3, line: 2445, type: !11101)
!11416 = !DILocation(line: 2445, column: 64, scope: !11410)
!11417 = !DILocalVariable(name: "ob", arg: 3, scope: !11410, file: !3, line: 2445, type: !5166)
!11418 = !DILocation(line: 2445, column: 77, scope: !11410)
!11419 = !DILocalVariable(name: "r_originmat", arg: 4, scope: !11410, file: !3, line: 2445, type: !3431)
!11420 = !DILocation(line: 2445, column: 87, scope: !11410)
!11421 = !DILocation(line: 2447, column: 35, scope: !11410)
!11422 = !DILocation(line: 2447, column: 42, scope: !11410)
!11423 = !DILocation(line: 2447, column: 66, scope: !11410)
!11424 = !DILocation(line: 2447, column: 46, scope: !11410)
!11425 = !DILocation(line: 2447, column: 74, scope: !11410)
!11426 = !DILocation(line: 2447, column: 79, scope: !11410)
!11427 = !DILocation(line: 2447, column: 2, scope: !11410)
!11428 = !DILocation(line: 2448, column: 1, scope: !11410)
!11429 = distinct !DISubprogram(name: "BKE_object_where_is_calc", scope: !3, file: !3, line: 2449, type: !11430, scopeLine: 2450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!11430 = !DISubroutineType(types: !11431)
!11431 = !{null, !6411, !5166}
!11432 = !DILocalVariable(name: "scene", arg: 1, scope: !11429, file: !3, line: 2449, type: !6411)
!11433 = !DILocation(line: 2449, column: 38, scope: !11429)
!11434 = !DILocalVariable(name: "ob", arg: 2, scope: !11429, file: !3, line: 2449, type: !5166)
!11435 = !DILocation(line: 2449, column: 53, scope: !11429)
!11436 = !DILocation(line: 2451, column: 35, scope: !11429)
!11437 = !DILocation(line: 2451, column: 42, scope: !11429)
!11438 = !DILocation(line: 2451, column: 66, scope: !11429)
!11439 = !DILocation(line: 2451, column: 46, scope: !11429)
!11440 = !DILocation(line: 2451, column: 2, scope: !11429)
!11441 = !DILocation(line: 2452, column: 1, scope: !11429)
!11442 = distinct !DISubprogram(name: "BKE_object_workob_calc_parent", scope: !3, file: !3, line: 2455, type: !11443, scopeLine: 2456, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!11443 = !DISubroutineType(types: !11444)
!11444 = !{null, !6411, !5166, !5166}
!11445 = !DILocalVariable(name: "scene", arg: 1, scope: !11442, file: !3, line: 2455, type: !6411)
!11446 = !DILocation(line: 2455, column: 43, scope: !11442)
!11447 = !DILocalVariable(name: "ob", arg: 2, scope: !11442, file: !3, line: 2455, type: !5166)
!11448 = !DILocation(line: 2455, column: 58, scope: !11442)
!11449 = !DILocalVariable(name: "workob", arg: 3, scope: !11442, file: !3, line: 2455, type: !5166)
!11450 = !DILocation(line: 2455, column: 70, scope: !11442)
!11451 = !DILocation(line: 2457, column: 26, scope: !11442)
!11452 = !DILocation(line: 2457, column: 2, scope: !11442)
!11453 = !DILocation(line: 2459, column: 10, scope: !11442)
!11454 = !DILocation(line: 2459, column: 18, scope: !11442)
!11455 = !DILocation(line: 2459, column: 2, scope: !11442)
!11456 = !DILocation(line: 2460, column: 10, scope: !11442)
!11457 = !DILocation(line: 2460, column: 18, scope: !11442)
!11458 = !DILocation(line: 2460, column: 2, scope: !11442)
!11459 = !DILocation(line: 2461, column: 10, scope: !11442)
!11460 = !DILocation(line: 2461, column: 18, scope: !11442)
!11461 = !DILocation(line: 2461, column: 2, scope: !11442)
!11462 = !DILocation(line: 2462, column: 19, scope: !11442)
!11463 = !DILocation(line: 2462, column: 23, scope: !11442)
!11464 = !DILocation(line: 2462, column: 2, scope: !11442)
!11465 = !DILocation(line: 2462, column: 10, scope: !11442)
!11466 = !DILocation(line: 2462, column: 17, scope: !11442)
!11467 = !DILocation(line: 2464, column: 22, scope: !11442)
!11468 = !DILocation(line: 2464, column: 26, scope: !11442)
!11469 = !DILocation(line: 2464, column: 2, scope: !11442)
!11470 = !DILocation(line: 2464, column: 10, scope: !11442)
!11471 = !DILocation(line: 2464, column: 20, scope: !11442)
!11472 = !DILocation(line: 2465, column: 19, scope: !11442)
!11473 = !DILocation(line: 2465, column: 23, scope: !11442)
!11474 = !DILocation(line: 2465, column: 2, scope: !11442)
!11475 = !DILocation(line: 2465, column: 10, scope: !11442)
!11476 = !DILocation(line: 2465, column: 17, scope: !11442)
!11477 = !DILocation(line: 2467, column: 20, scope: !11442)
!11478 = !DILocation(line: 2467, column: 24, scope: !11442)
!11479 = !DILocation(line: 2467, column: 2, scope: !11442)
!11480 = !DILocation(line: 2467, column: 10, scope: !11442)
!11481 = !DILocation(line: 2467, column: 18, scope: !11442)
!11482 = !DILocation(line: 2468, column: 17, scope: !11442)
!11483 = !DILocation(line: 2468, column: 21, scope: !11442)
!11484 = !DILocation(line: 2468, column: 2, scope: !11442)
!11485 = !DILocation(line: 2468, column: 10, scope: !11442)
!11486 = !DILocation(line: 2468, column: 15, scope: !11442)
!11487 = !DILocation(line: 2469, column: 17, scope: !11442)
!11488 = !DILocation(line: 2469, column: 21, scope: !11442)
!11489 = !DILocation(line: 2469, column: 2, scope: !11442)
!11490 = !DILocation(line: 2469, column: 10, scope: !11442)
!11491 = !DILocation(line: 2469, column: 15, scope: !11442)
!11492 = !DILocation(line: 2470, column: 17, scope: !11442)
!11493 = !DILocation(line: 2470, column: 21, scope: !11442)
!11494 = !DILocation(line: 2470, column: 2, scope: !11442)
!11495 = !DILocation(line: 2470, column: 10, scope: !11442)
!11496 = !DILocation(line: 2470, column: 15, scope: !11442)
!11497 = !DILocation(line: 2472, column: 30, scope: !11442)
!11498 = !DILocation(line: 2472, column: 34, scope: !11442)
!11499 = !DILocation(line: 2472, column: 46, scope: !11442)
!11500 = !DILocation(line: 2472, column: 2, scope: !11442)
!11501 = !DILocation(line: 2472, column: 10, scope: !11442)
!11502 = !DILocation(line: 2472, column: 22, scope: !11442)
!11503 = !DILocation(line: 2472, column: 28, scope: !11442)
!11504 = !DILocation(line: 2473, column: 29, scope: !11442)
!11505 = !DILocation(line: 2473, column: 33, scope: !11442)
!11506 = !DILocation(line: 2473, column: 45, scope: !11442)
!11507 = !DILocation(line: 2473, column: 2, scope: !11442)
!11508 = !DILocation(line: 2473, column: 10, scope: !11442)
!11509 = !DILocation(line: 2473, column: 22, scope: !11442)
!11510 = !DILocation(line: 2473, column: 27, scope: !11442)
!11511 = !DILocation(line: 2475, column: 14, scope: !11442)
!11512 = !DILocation(line: 2475, column: 22, scope: !11442)
!11513 = !DILocation(line: 2475, column: 33, scope: !11442)
!11514 = !DILocation(line: 2475, column: 37, scope: !11442)
!11515 = !DILocation(line: 2475, column: 2, scope: !11442)
!11516 = !DILocation(line: 2477, column: 27, scope: !11442)
!11517 = !DILocation(line: 2477, column: 34, scope: !11442)
!11518 = !DILocation(line: 2477, column: 2, scope: !11442)
!11519 = !DILocation(line: 2478, column: 1, scope: !11442)
!11520 = distinct !DISubprogram(name: "ob_get_parent_matrix", scope: !3, file: !3, line: 2273, type: !11521, scopeLine: 2274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!11521 = !DISubroutineType(types: !11522)
!11522 = !{null, !6411, !5166, !5166, !3458}
!11523 = !DILocalVariable(name: "scene", arg: 1, scope: !11520, file: !3, line: 2273, type: !6411)
!11524 = !DILocation(line: 2273, column: 41, scope: !11520)
!11525 = !DILocalVariable(name: "ob", arg: 2, scope: !11520, file: !3, line: 2273, type: !5166)
!11526 = !DILocation(line: 2273, column: 56, scope: !11520)
!11527 = !DILocalVariable(name: "par", arg: 3, scope: !11520, file: !3, line: 2273, type: !5166)
!11528 = !DILocation(line: 2273, column: 68, scope: !11520)
!11529 = !DILocalVariable(name: "parentmat", arg: 4, scope: !11520, file: !3, line: 2273, type: !3458)
!11530 = !DILocation(line: 2273, column: 79, scope: !11520)
!11531 = !DILocalVariable(name: "tmat", scope: !11520, file: !3, line: 2275, type: !1404)
!11532 = !DILocation(line: 2275, column: 8, scope: !11520)
!11533 = !DILocalVariable(name: "vec", scope: !11520, file: !3, line: 2276, type: !835)
!11534 = !DILocation(line: 2276, column: 8, scope: !11520)
!11535 = !DILocalVariable(name: "ok", scope: !11520, file: !3, line: 2277, type: !1788)
!11536 = !DILocation(line: 2277, column: 7, scope: !11520)
!11537 = !DILocation(line: 2279, column: 10, scope: !11520)
!11538 = !DILocation(line: 2279, column: 14, scope: !11520)
!11539 = !DILocation(line: 2279, column: 22, scope: !11520)
!11540 = !DILocation(line: 2279, column: 2, scope: !11520)
!11541 = !DILocation(line: 2281, column: 7, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11520, file: !3, line: 2279, column: 33)
!11543 = !DILocation(line: 2282, column: 8, scope: !11544)
!11544 = distinct !DILexicalBlock(scope: !11542, file: !3, line: 2282, column: 8)
!11545 = !DILocation(line: 2282, column: 13, scope: !11544)
!11546 = !DILocation(line: 2282, column: 18, scope: !11544)
!11547 = !DILocation(line: 2282, column: 8, scope: !11542)
!11548 = !DILocation(line: 2283, column: 9, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11550, file: !3, line: 2283, column: 9)
!11550 = distinct !DILexicalBlock(scope: !11544, file: !3, line: 2282, column: 31)
!11551 = !DILocation(line: 2283, column: 15, scope: !11549)
!11552 = !DILocation(line: 2283, column: 28, scope: !11549)
!11553 = !DILocation(line: 2283, column: 33, scope: !11549)
!11554 = !DILocation(line: 2283, column: 19, scope: !11549)
!11555 = !DILocation(line: 2283, column: 40, scope: !11549)
!11556 = !DILocation(line: 2283, column: 45, scope: !11549)
!11557 = !DILocation(line: 2283, column: 9, scope: !11550)
!11558 = !DILocation(line: 2284, column: 18, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11549, file: !3, line: 2283, column: 56)
!11560 = !DILocation(line: 2284, column: 25, scope: !11559)
!11561 = !DILocation(line: 2284, column: 29, scope: !11559)
!11562 = !DILocation(line: 2284, column: 34, scope: !11559)
!11563 = !DILocation(line: 2284, column: 6, scope: !11559)
!11564 = !DILocation(line: 2285, column: 9, scope: !11559)
!11565 = !DILocation(line: 2286, column: 5, scope: !11559)
!11566 = !DILocation(line: 2287, column: 4, scope: !11550)
!11567 = !DILocation(line: 2289, column: 8, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11542, file: !3, line: 2289, column: 8)
!11569 = !DILocation(line: 2289, column: 8, scope: !11542)
!11570 = !DILocation(line: 2289, column: 24, scope: !11568)
!11571 = !DILocation(line: 2289, column: 35, scope: !11568)
!11572 = !DILocation(line: 2289, column: 40, scope: !11568)
!11573 = !DILocation(line: 2289, column: 47, scope: !11568)
!11574 = !DILocation(line: 2289, column: 12, scope: !11568)
!11575 = !DILocation(line: 2290, column: 20, scope: !11568)
!11576 = !DILocation(line: 2290, column: 31, scope: !11568)
!11577 = !DILocation(line: 2290, column: 36, scope: !11568)
!11578 = !DILocation(line: 2290, column: 9, scope: !11568)
!11579 = !DILocation(line: 2292, column: 4, scope: !11542)
!11580 = !DILocation(line: 2294, column: 15, scope: !11542)
!11581 = !DILocation(line: 2294, column: 19, scope: !11542)
!11582 = !DILocation(line: 2294, column: 24, scope: !11542)
!11583 = !DILocation(line: 2294, column: 4, scope: !11542)
!11584 = !DILocation(line: 2295, column: 16, scope: !11542)
!11585 = !DILocation(line: 2295, column: 27, scope: !11542)
!11586 = !DILocation(line: 2295, column: 32, scope: !11542)
!11587 = !DILocation(line: 2295, column: 39, scope: !11542)
!11588 = !DILocation(line: 2295, column: 4, scope: !11542)
!11589 = !DILocation(line: 2296, column: 4, scope: !11542)
!11590 = !DILocation(line: 2299, column: 12, scope: !11542)
!11591 = !DILocation(line: 2299, column: 4, scope: !11542)
!11592 = !DILocation(line: 2300, column: 17, scope: !11542)
!11593 = !DILocation(line: 2300, column: 22, scope: !11542)
!11594 = !DILocation(line: 2300, column: 26, scope: !11542)
!11595 = !DILocation(line: 2300, column: 32, scope: !11542)
!11596 = !DILocation(line: 2300, column: 4, scope: !11542)
!11597 = !DILocation(line: 2301, column: 16, scope: !11542)
!11598 = !DILocation(line: 2301, column: 30, scope: !11542)
!11599 = !DILocation(line: 2301, column: 35, scope: !11542)
!11600 = !DILocation(line: 2301, column: 42, scope: !11542)
!11601 = !DILocation(line: 2301, column: 4, scope: !11542)
!11602 = !DILocation(line: 2302, column: 4, scope: !11542)
!11603 = !DILocation(line: 2304, column: 16, scope: !11542)
!11604 = !DILocation(line: 2304, column: 20, scope: !11542)
!11605 = !DILocation(line: 2304, column: 25, scope: !11542)
!11606 = !DILocation(line: 2304, column: 4, scope: !11542)
!11607 = !DILocation(line: 2306, column: 16, scope: !11542)
!11608 = !DILocation(line: 2306, column: 27, scope: !11542)
!11609 = !DILocation(line: 2306, column: 32, scope: !11542)
!11610 = !DILocation(line: 2306, column: 39, scope: !11542)
!11611 = !DILocation(line: 2306, column: 4, scope: !11542)
!11612 = !DILocation(line: 2307, column: 4, scope: !11542)
!11613 = !DILocation(line: 2310, column: 15, scope: !11542)
!11614 = !DILocation(line: 2310, column: 26, scope: !11542)
!11615 = !DILocation(line: 2310, column: 31, scope: !11542)
!11616 = !DILocation(line: 2310, column: 4, scope: !11542)
!11617 = !DILocation(line: 2311, column: 4, scope: !11542)
!11618 = !DILocation(line: 2314, column: 1, scope: !11520)
!11619 = distinct !DISubprogram(name: "BKE_boundbox_alloc_unit", scope: !3, file: !3, line: 2513, type: !11620, scopeLine: 2514, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!11620 = !DISubroutineType(types: !11621)
!11621 = !{!738}
!11622 = !DILocalVariable(name: "bb", scope: !11619, file: !3, line: 2515, type: !11623)
!11623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11624, size: 64)
!11624 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoundBox", file: !114, line: 100, baseType: !739)
!11625 = !DILocation(line: 2515, column: 12, scope: !11619)
!11626 = !DILocalVariable(name: "min", scope: !11619, file: !3, line: 2516, type: !11627)
!11627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3209, size: 96, elements: !836)
!11628 = !DILocation(line: 2516, column: 14, scope: !11619)
!11629 = !DILocalVariable(name: "max", scope: !11619, file: !3, line: 2516, type: !11627)
!11630 = !DILocation(line: 2516, column: 46, scope: !11619)
!11631 = !DILocation(line: 2518, column: 7, scope: !11619)
!11632 = !DILocation(line: 2518, column: 5, scope: !11619)
!11633 = !DILocation(line: 2519, column: 32, scope: !11619)
!11634 = !DILocation(line: 2519, column: 36, scope: !11619)
!11635 = !DILocation(line: 2519, column: 41, scope: !11619)
!11636 = !DILocation(line: 2519, column: 2, scope: !11619)
!11637 = !DILocation(line: 2521, column: 9, scope: !11619)
!11638 = !DILocation(line: 2521, column: 2, scope: !11619)
!11639 = distinct !DISubprogram(name: "BKE_boundbox_init_from_minmax", scope: !3, file: !3, line: 2524, type: !11640, scopeLine: 2525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!11640 = !DISubroutineType(types: !11641)
!11641 = !{null, !11623, !3397, !3397}
!11642 = !DILocalVariable(name: "bb", arg: 1, scope: !11639, file: !3, line: 2524, type: !11623)
!11643 = !DILocation(line: 2524, column: 46, scope: !11639)
!11644 = !DILocalVariable(name: "min", arg: 2, scope: !11639, file: !3, line: 2524, type: !3397)
!11645 = !DILocation(line: 2524, column: 62, scope: !11639)
!11646 = !DILocalVariable(name: "max", arg: 3, scope: !11639, file: !3, line: 2524, type: !3397)
!11647 = !DILocation(line: 2524, column: 82, scope: !11639)
!11648 = !DILocation(line: 2526, column: 66, scope: !11639)
!11649 = !DILocation(line: 2526, column: 50, scope: !11639)
!11650 = !DILocation(line: 2526, column: 54, scope: !11639)
!11651 = !DILocation(line: 2526, column: 64, scope: !11639)
!11652 = !DILocation(line: 2526, column: 34, scope: !11639)
!11653 = !DILocation(line: 2526, column: 38, scope: !11639)
!11654 = !DILocation(line: 2526, column: 48, scope: !11639)
!11655 = !DILocation(line: 2526, column: 18, scope: !11639)
!11656 = !DILocation(line: 2526, column: 22, scope: !11639)
!11657 = !DILocation(line: 2526, column: 32, scope: !11639)
!11658 = !DILocation(line: 2526, column: 2, scope: !11639)
!11659 = !DILocation(line: 2526, column: 6, scope: !11639)
!11660 = !DILocation(line: 2526, column: 16, scope: !11639)
!11661 = !DILocation(line: 2527, column: 66, scope: !11639)
!11662 = !DILocation(line: 2527, column: 50, scope: !11639)
!11663 = !DILocation(line: 2527, column: 54, scope: !11639)
!11664 = !DILocation(line: 2527, column: 64, scope: !11639)
!11665 = !DILocation(line: 2527, column: 34, scope: !11639)
!11666 = !DILocation(line: 2527, column: 38, scope: !11639)
!11667 = !DILocation(line: 2527, column: 48, scope: !11639)
!11668 = !DILocation(line: 2527, column: 18, scope: !11639)
!11669 = !DILocation(line: 2527, column: 22, scope: !11639)
!11670 = !DILocation(line: 2527, column: 32, scope: !11639)
!11671 = !DILocation(line: 2527, column: 2, scope: !11639)
!11672 = !DILocation(line: 2527, column: 6, scope: !11639)
!11673 = !DILocation(line: 2527, column: 16, scope: !11639)
!11674 = !DILocation(line: 2529, column: 66, scope: !11639)
!11675 = !DILocation(line: 2529, column: 50, scope: !11639)
!11676 = !DILocation(line: 2529, column: 54, scope: !11639)
!11677 = !DILocation(line: 2529, column: 64, scope: !11639)
!11678 = !DILocation(line: 2529, column: 34, scope: !11639)
!11679 = !DILocation(line: 2529, column: 38, scope: !11639)
!11680 = !DILocation(line: 2529, column: 48, scope: !11639)
!11681 = !DILocation(line: 2529, column: 18, scope: !11639)
!11682 = !DILocation(line: 2529, column: 22, scope: !11639)
!11683 = !DILocation(line: 2529, column: 32, scope: !11639)
!11684 = !DILocation(line: 2529, column: 2, scope: !11639)
!11685 = !DILocation(line: 2529, column: 6, scope: !11639)
!11686 = !DILocation(line: 2529, column: 16, scope: !11639)
!11687 = !DILocation(line: 2530, column: 66, scope: !11639)
!11688 = !DILocation(line: 2530, column: 50, scope: !11639)
!11689 = !DILocation(line: 2530, column: 54, scope: !11639)
!11690 = !DILocation(line: 2530, column: 64, scope: !11639)
!11691 = !DILocation(line: 2530, column: 34, scope: !11639)
!11692 = !DILocation(line: 2530, column: 38, scope: !11639)
!11693 = !DILocation(line: 2530, column: 48, scope: !11639)
!11694 = !DILocation(line: 2530, column: 18, scope: !11639)
!11695 = !DILocation(line: 2530, column: 22, scope: !11639)
!11696 = !DILocation(line: 2530, column: 32, scope: !11639)
!11697 = !DILocation(line: 2530, column: 2, scope: !11639)
!11698 = !DILocation(line: 2530, column: 6, scope: !11639)
!11699 = !DILocation(line: 2530, column: 16, scope: !11639)
!11700 = !DILocation(line: 2532, column: 66, scope: !11639)
!11701 = !DILocation(line: 2532, column: 50, scope: !11639)
!11702 = !DILocation(line: 2532, column: 54, scope: !11639)
!11703 = !DILocation(line: 2532, column: 64, scope: !11639)
!11704 = !DILocation(line: 2532, column: 34, scope: !11639)
!11705 = !DILocation(line: 2532, column: 38, scope: !11639)
!11706 = !DILocation(line: 2532, column: 48, scope: !11639)
!11707 = !DILocation(line: 2532, column: 18, scope: !11639)
!11708 = !DILocation(line: 2532, column: 22, scope: !11639)
!11709 = !DILocation(line: 2532, column: 32, scope: !11639)
!11710 = !DILocation(line: 2532, column: 2, scope: !11639)
!11711 = !DILocation(line: 2532, column: 6, scope: !11639)
!11712 = !DILocation(line: 2532, column: 16, scope: !11639)
!11713 = !DILocation(line: 2533, column: 66, scope: !11639)
!11714 = !DILocation(line: 2533, column: 50, scope: !11639)
!11715 = !DILocation(line: 2533, column: 54, scope: !11639)
!11716 = !DILocation(line: 2533, column: 64, scope: !11639)
!11717 = !DILocation(line: 2533, column: 34, scope: !11639)
!11718 = !DILocation(line: 2533, column: 38, scope: !11639)
!11719 = !DILocation(line: 2533, column: 48, scope: !11639)
!11720 = !DILocation(line: 2533, column: 18, scope: !11639)
!11721 = !DILocation(line: 2533, column: 22, scope: !11639)
!11722 = !DILocation(line: 2533, column: 32, scope: !11639)
!11723 = !DILocation(line: 2533, column: 2, scope: !11639)
!11724 = !DILocation(line: 2533, column: 6, scope: !11639)
!11725 = !DILocation(line: 2533, column: 16, scope: !11639)
!11726 = !DILocation(line: 2534, column: 1, scope: !11639)
!11727 = distinct !DISubprogram(name: "BKE_boundbox_calc_center_aabb", scope: !3, file: !3, line: 2536, type: !11728, scopeLine: 2537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!11728 = !DISubroutineType(types: !11729)
!11729 = !{null, !11730, !1073}
!11730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11731, size: 64)
!11731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11624)
!11732 = !DILocalVariable(name: "bb", arg: 1, scope: !11727, file: !3, line: 2536, type: !11730)
!11733 = !DILocation(line: 2536, column: 52, scope: !11727)
!11734 = !DILocalVariable(name: "r_cent", arg: 2, scope: !11727, file: !3, line: 2536, type: !1073)
!11735 = !DILocation(line: 2536, column: 62, scope: !11727)
!11736 = !DILocation(line: 2538, column: 22, scope: !11727)
!11737 = !DILocation(line: 2538, column: 26, scope: !11727)
!11738 = !DILocation(line: 2538, column: 38, scope: !11727)
!11739 = !DILocation(line: 2538, column: 42, scope: !11727)
!11740 = !DILocation(line: 2538, column: 36, scope: !11727)
!11741 = !DILocation(line: 2538, column: 19, scope: !11727)
!11742 = !DILocation(line: 2538, column: 2, scope: !11727)
!11743 = !DILocation(line: 2538, column: 12, scope: !11727)
!11744 = !DILocation(line: 2539, column: 22, scope: !11727)
!11745 = !DILocation(line: 2539, column: 26, scope: !11727)
!11746 = !DILocation(line: 2539, column: 38, scope: !11727)
!11747 = !DILocation(line: 2539, column: 42, scope: !11727)
!11748 = !DILocation(line: 2539, column: 36, scope: !11727)
!11749 = !DILocation(line: 2539, column: 19, scope: !11727)
!11750 = !DILocation(line: 2539, column: 2, scope: !11727)
!11751 = !DILocation(line: 2539, column: 12, scope: !11727)
!11752 = !DILocation(line: 2540, column: 22, scope: !11727)
!11753 = !DILocation(line: 2540, column: 26, scope: !11727)
!11754 = !DILocation(line: 2540, column: 38, scope: !11727)
!11755 = !DILocation(line: 2540, column: 42, scope: !11727)
!11756 = !DILocation(line: 2540, column: 36, scope: !11727)
!11757 = !DILocation(line: 2540, column: 19, scope: !11727)
!11758 = !DILocation(line: 2540, column: 2, scope: !11727)
!11759 = !DILocation(line: 2540, column: 12, scope: !11727)
!11760 = !DILocation(line: 2541, column: 1, scope: !11727)
!11761 = distinct !DISubprogram(name: "BKE_boundbox_calc_size_aabb", scope: !3, file: !3, line: 2543, type: !11728, scopeLine: 2544, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!11762 = !DILocalVariable(name: "bb", arg: 1, scope: !11761, file: !3, line: 2543, type: !11730)
!11763 = !DILocation(line: 2543, column: 50, scope: !11761)
!11764 = !DILocalVariable(name: "r_size", arg: 2, scope: !11761, file: !3, line: 2543, type: !1073)
!11765 = !DILocation(line: 2543, column: 60, scope: !11761)
!11766 = !DILocation(line: 2545, column: 27, scope: !11761)
!11767 = !DILocation(line: 2545, column: 31, scope: !11761)
!11768 = !DILocation(line: 2545, column: 43, scope: !11761)
!11769 = !DILocation(line: 2545, column: 47, scope: !11761)
!11770 = !DILocation(line: 2545, column: 41, scope: !11761)
!11771 = !DILocation(line: 2545, column: 21, scope: !11761)
!11772 = !DILocation(line: 2545, column: 19, scope: !11761)
!11773 = !DILocation(line: 2545, column: 2, scope: !11761)
!11774 = !DILocation(line: 2545, column: 12, scope: !11761)
!11775 = !DILocation(line: 2546, column: 27, scope: !11761)
!11776 = !DILocation(line: 2546, column: 31, scope: !11761)
!11777 = !DILocation(line: 2546, column: 43, scope: !11761)
!11778 = !DILocation(line: 2546, column: 47, scope: !11761)
!11779 = !DILocation(line: 2546, column: 41, scope: !11761)
!11780 = !DILocation(line: 2546, column: 21, scope: !11761)
!11781 = !DILocation(line: 2546, column: 19, scope: !11761)
!11782 = !DILocation(line: 2546, column: 2, scope: !11761)
!11783 = !DILocation(line: 2546, column: 12, scope: !11761)
!11784 = !DILocation(line: 2547, column: 27, scope: !11761)
!11785 = !DILocation(line: 2547, column: 31, scope: !11761)
!11786 = !DILocation(line: 2547, column: 43, scope: !11761)
!11787 = !DILocation(line: 2547, column: 47, scope: !11761)
!11788 = !DILocation(line: 2547, column: 41, scope: !11761)
!11789 = !DILocation(line: 2547, column: 21, scope: !11761)
!11790 = !DILocation(line: 2547, column: 19, scope: !11761)
!11791 = !DILocation(line: 2547, column: 2, scope: !11761)
!11792 = !DILocation(line: 2547, column: 12, scope: !11761)
!11793 = !DILocation(line: 2548, column: 1, scope: !11761)
!11794 = distinct !DISubprogram(name: "BKE_object_boundbox_get", scope: !3, file: !3, line: 2550, type: !11795, scopeLine: 2551, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!11795 = !DISubroutineType(types: !11796)
!11796 = !{!738, !5166}
!11797 = !DILocalVariable(name: "ob", arg: 1, scope: !11794, file: !3, line: 2550, type: !5166)
!11798 = !DILocation(line: 2550, column: 43, scope: !11794)
!11799 = !DILocalVariable(name: "bb", scope: !11794, file: !3, line: 2552, type: !11623)
!11800 = !DILocation(line: 2552, column: 12, scope: !11794)
!11801 = !DILocation(line: 2554, column: 6, scope: !11802)
!11802 = distinct !DILexicalBlock(scope: !11794, file: !3, line: 2554, column: 6)
!11803 = !DILocation(line: 2554, column: 10, scope: !11802)
!11804 = !DILocation(line: 2554, column: 15, scope: !11802)
!11805 = !DILocation(line: 2554, column: 6, scope: !11794)
!11806 = !DILocation(line: 2555, column: 30, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !11802, file: !3, line: 2554, column: 27)
!11808 = !DILocation(line: 2555, column: 8, scope: !11807)
!11809 = !DILocation(line: 2555, column: 6, scope: !11807)
!11810 = !DILocation(line: 2556, column: 2, scope: !11807)
!11811 = !DILocation(line: 2557, column: 11, scope: !11812)
!11812 = distinct !DILexicalBlock(scope: !11802, file: !3, line: 2557, column: 11)
!11813 = !DILocation(line: 2557, column: 11, scope: !11802)
!11814 = !DILocation(line: 2558, column: 31, scope: !11815)
!11815 = distinct !DILexicalBlock(scope: !11812, file: !3, line: 2557, column: 55)
!11816 = !DILocation(line: 2558, column: 8, scope: !11815)
!11817 = !DILocation(line: 2558, column: 6, scope: !11815)
!11818 = !DILocation(line: 2559, column: 2, scope: !11815)
!11819 = !DILocation(line: 2560, column: 11, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11812, file: !3, line: 2560, column: 11)
!11821 = !DILocation(line: 2560, column: 15, scope: !11820)
!11822 = !DILocation(line: 2560, column: 20, scope: !11820)
!11823 = !DILocation(line: 2560, column: 11, scope: !11812)
!11824 = !DILocation(line: 2561, column: 8, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11820, file: !3, line: 2560, column: 33)
!11826 = !DILocation(line: 2561, column: 12, scope: !11825)
!11827 = !DILocation(line: 2561, column: 6, scope: !11825)
!11828 = !DILocation(line: 2562, column: 2, scope: !11825)
!11829 = !DILocation(line: 2563, column: 9, scope: !11794)
!11830 = !DILocation(line: 2563, column: 2, scope: !11794)
!11831 = distinct !DISubprogram(name: "BKE_object_boundbox_flag", scope: !3, file: !3, line: 2567, type: !11832, scopeLine: 2568, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!11832 = !DISubroutineType(types: !11833)
!11833 = !{null, !5166, !73, !3482}
!11834 = !DILocalVariable(name: "ob", arg: 1, scope: !11831, file: !3, line: 2567, type: !5166)
!11835 = !DILocation(line: 2567, column: 39, scope: !11831)
!11836 = !DILocalVariable(name: "flag", arg: 2, scope: !11831, file: !3, line: 2567, type: !73)
!11837 = !DILocation(line: 2567, column: 47, scope: !11831)
!11838 = !DILocalVariable(name: "set", arg: 3, scope: !11831, file: !3, line: 2567, type: !3482)
!11839 = !DILocation(line: 2567, column: 64, scope: !11831)
!11840 = !DILocalVariable(name: "bb", scope: !11831, file: !3, line: 2569, type: !11623)
!11841 = !DILocation(line: 2569, column: 12, scope: !11831)
!11842 = !DILocation(line: 2569, column: 41, scope: !11831)
!11843 = !DILocation(line: 2569, column: 17, scope: !11831)
!11844 = !DILocation(line: 2570, column: 6, scope: !11845)
!11845 = distinct !DILexicalBlock(scope: !11831, file: !3, line: 2570, column: 6)
!11846 = !DILocation(line: 2570, column: 6, scope: !11831)
!11847 = !DILocation(line: 2571, column: 7, scope: !11848)
!11848 = distinct !DILexicalBlock(scope: !11849, file: !3, line: 2571, column: 7)
!11849 = distinct !DILexicalBlock(scope: !11845, file: !3, line: 2570, column: 10)
!11850 = !DILocation(line: 2571, column: 7, scope: !11849)
!11851 = !DILocation(line: 2571, column: 24, scope: !11848)
!11852 = !DILocation(line: 2571, column: 12, scope: !11848)
!11853 = !DILocation(line: 2571, column: 16, scope: !11848)
!11854 = !DILocation(line: 2571, column: 21, scope: !11848)
!11855 = !DILocation(line: 2572, column: 21, scope: !11848)
!11856 = !DILocation(line: 2572, column: 20, scope: !11848)
!11857 = !DILocation(line: 2572, column: 8, scope: !11848)
!11858 = !DILocation(line: 2572, column: 12, scope: !11848)
!11859 = !DILocation(line: 2572, column: 17, scope: !11848)
!11860 = !DILocation(line: 2573, column: 2, scope: !11849)
!11861 = !DILocation(line: 2574, column: 1, scope: !11831)
!11862 = distinct !DISubprogram(name: "BKE_object_dimensions_get", scope: !3, file: !3, line: 2576, type: !11863, scopeLine: 2577, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!11863 = !DISubroutineType(types: !11864)
!11864 = !{null, !5166, !1073}
!11865 = !DILocalVariable(name: "ob", arg: 1, scope: !11862, file: !3, line: 2576, type: !5166)
!11866 = !DILocation(line: 2576, column: 40, scope: !11862)
!11867 = !DILocalVariable(name: "vec", arg: 2, scope: !11862, file: !3, line: 2576, type: !1073)
!11868 = !DILocation(line: 2576, column: 50, scope: !11862)
!11869 = !DILocalVariable(name: "bb", scope: !11862, file: !3, line: 2578, type: !11623)
!11870 = !DILocation(line: 2578, column: 12, scope: !11862)
!11871 = !DILocation(line: 2580, column: 31, scope: !11862)
!11872 = !DILocation(line: 2580, column: 7, scope: !11862)
!11873 = !DILocation(line: 2580, column: 5, scope: !11862)
!11874 = !DILocation(line: 2581, column: 6, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11862, file: !3, line: 2581, column: 6)
!11876 = !DILocation(line: 2581, column: 6, scope: !11862)
!11877 = !DILocalVariable(name: "scale", scope: !11878, file: !3, line: 2582, type: !835)
!11878 = distinct !DILexicalBlock(scope: !11875, file: !3, line: 2581, column: 10)
!11879 = !DILocation(line: 2582, column: 9, scope: !11878)
!11880 = !DILocation(line: 2584, column: 16, scope: !11878)
!11881 = !DILocation(line: 2584, column: 23, scope: !11878)
!11882 = !DILocation(line: 2584, column: 27, scope: !11878)
!11883 = !DILocation(line: 2584, column: 3, scope: !11878)
!11884 = !DILocation(line: 2586, column: 18, scope: !11878)
!11885 = !DILocation(line: 2586, column: 12, scope: !11878)
!11886 = !DILocation(line: 2586, column: 31, scope: !11878)
!11887 = !DILocation(line: 2586, column: 35, scope: !11878)
!11888 = !DILocation(line: 2586, column: 47, scope: !11878)
!11889 = !DILocation(line: 2586, column: 51, scope: !11878)
!11890 = !DILocation(line: 2586, column: 45, scope: !11878)
!11891 = !DILocation(line: 2586, column: 28, scope: !11878)
!11892 = !DILocation(line: 2586, column: 3, scope: !11878)
!11893 = !DILocation(line: 2586, column: 10, scope: !11878)
!11894 = !DILocation(line: 2587, column: 18, scope: !11878)
!11895 = !DILocation(line: 2587, column: 12, scope: !11878)
!11896 = !DILocation(line: 2587, column: 31, scope: !11878)
!11897 = !DILocation(line: 2587, column: 35, scope: !11878)
!11898 = !DILocation(line: 2587, column: 47, scope: !11878)
!11899 = !DILocation(line: 2587, column: 51, scope: !11878)
!11900 = !DILocation(line: 2587, column: 45, scope: !11878)
!11901 = !DILocation(line: 2587, column: 28, scope: !11878)
!11902 = !DILocation(line: 2587, column: 3, scope: !11878)
!11903 = !DILocation(line: 2587, column: 10, scope: !11878)
!11904 = !DILocation(line: 2588, column: 18, scope: !11878)
!11905 = !DILocation(line: 2588, column: 12, scope: !11878)
!11906 = !DILocation(line: 2588, column: 31, scope: !11878)
!11907 = !DILocation(line: 2588, column: 35, scope: !11878)
!11908 = !DILocation(line: 2588, column: 47, scope: !11878)
!11909 = !DILocation(line: 2588, column: 51, scope: !11878)
!11910 = !DILocation(line: 2588, column: 45, scope: !11878)
!11911 = !DILocation(line: 2588, column: 28, scope: !11878)
!11912 = !DILocation(line: 2588, column: 3, scope: !11878)
!11913 = !DILocation(line: 2588, column: 10, scope: !11878)
!11914 = !DILocation(line: 2589, column: 2, scope: !11878)
!11915 = !DILocation(line: 2591, column: 11, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11875, file: !3, line: 2590, column: 7)
!11917 = !DILocation(line: 2591, column: 3, scope: !11916)
!11918 = !DILocation(line: 2593, column: 1, scope: !11862)
!11919 = distinct !DISubprogram(name: "zero_v3", scope: !9059, file: !9059, line: 43, type: !11920, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!11920 = !DISubroutineType(types: !11921)
!11921 = !{null, !1073}
!11922 = !DILocalVariable(name: "r", arg: 1, scope: !11919, file: !9059, line: 43, type: !1073)
!11923 = !DILocation(line: 43, column: 28, scope: !11919)
!11924 = !DILocation(line: 45, column: 2, scope: !11919)
!11925 = !DILocation(line: 45, column: 7, scope: !11919)
!11926 = !DILocation(line: 46, column: 2, scope: !11919)
!11927 = !DILocation(line: 46, column: 7, scope: !11919)
!11928 = !DILocation(line: 47, column: 2, scope: !11919)
!11929 = !DILocation(line: 47, column: 7, scope: !11919)
!11930 = !DILocation(line: 48, column: 1, scope: !11919)
!11931 = distinct !DISubprogram(name: "BKE_object_dimensions_set", scope: !3, file: !3, line: 2595, type: !11932, scopeLine: 2596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!11932 = !DISubroutineType(types: !11933)
!11933 = !{null, !5166, !3397}
!11934 = !DILocalVariable(name: "ob", arg: 1, scope: !11931, file: !3, line: 2595, type: !5166)
!11935 = !DILocation(line: 2595, column: 40, scope: !11931)
!11936 = !DILocalVariable(name: "value", arg: 2, scope: !11931, file: !3, line: 2595, type: !3397)
!11937 = !DILocation(line: 2595, column: 56, scope: !11931)
!11938 = !DILocalVariable(name: "bb", scope: !11931, file: !3, line: 2597, type: !11623)
!11939 = !DILocation(line: 2597, column: 12, scope: !11931)
!11940 = !DILocation(line: 2599, column: 31, scope: !11931)
!11941 = !DILocation(line: 2599, column: 7, scope: !11931)
!11942 = !DILocation(line: 2599, column: 5, scope: !11931)
!11943 = !DILocation(line: 2600, column: 6, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11931, file: !3, line: 2600, column: 6)
!11945 = !DILocation(line: 2600, column: 6, scope: !11931)
!11946 = !DILocalVariable(name: "scale", scope: !11947, file: !3, line: 2601, type: !835)
!11947 = distinct !DILexicalBlock(scope: !11944, file: !3, line: 2600, column: 10)
!11948 = !DILocation(line: 2601, column: 9, scope: !11947)
!11949 = !DILocalVariable(name: "len", scope: !11947, file: !3, line: 2601, type: !835)
!11950 = !DILocation(line: 2601, column: 19, scope: !11947)
!11951 = !DILocation(line: 2603, column: 16, scope: !11947)
!11952 = !DILocation(line: 2603, column: 23, scope: !11947)
!11953 = !DILocation(line: 2603, column: 27, scope: !11947)
!11954 = !DILocation(line: 2603, column: 3, scope: !11947)
!11955 = !DILocation(line: 2605, column: 12, scope: !11947)
!11956 = !DILocation(line: 2605, column: 16, scope: !11947)
!11957 = !DILocation(line: 2605, column: 28, scope: !11947)
!11958 = !DILocation(line: 2605, column: 32, scope: !11947)
!11959 = !DILocation(line: 2605, column: 26, scope: !11947)
!11960 = !DILocation(line: 2605, column: 3, scope: !11947)
!11961 = !DILocation(line: 2605, column: 10, scope: !11947)
!11962 = !DILocation(line: 2606, column: 12, scope: !11947)
!11963 = !DILocation(line: 2606, column: 16, scope: !11947)
!11964 = !DILocation(line: 2606, column: 28, scope: !11947)
!11965 = !DILocation(line: 2606, column: 32, scope: !11947)
!11966 = !DILocation(line: 2606, column: 26, scope: !11947)
!11967 = !DILocation(line: 2606, column: 3, scope: !11947)
!11968 = !DILocation(line: 2606, column: 10, scope: !11947)
!11969 = !DILocation(line: 2607, column: 12, scope: !11947)
!11970 = !DILocation(line: 2607, column: 16, scope: !11947)
!11971 = !DILocation(line: 2607, column: 28, scope: !11947)
!11972 = !DILocation(line: 2607, column: 32, scope: !11947)
!11973 = !DILocation(line: 2607, column: 26, scope: !11947)
!11974 = !DILocation(line: 2607, column: 3, scope: !11947)
!11975 = !DILocation(line: 2607, column: 10, scope: !11947)
!11976 = !DILocation(line: 2609, column: 7, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11947, file: !3, line: 2609, column: 7)
!11978 = !DILocation(line: 2609, column: 14, scope: !11977)
!11979 = !DILocation(line: 2609, column: 7, scope: !11947)
!11980 = !DILocation(line: 2609, column: 35, scope: !11977)
!11981 = !DILocation(line: 2609, column: 46, scope: !11977)
!11982 = !DILocation(line: 2609, column: 44, scope: !11977)
!11983 = !DILocation(line: 2609, column: 21, scope: !11977)
!11984 = !DILocation(line: 2609, column: 25, scope: !11977)
!11985 = !DILocation(line: 2609, column: 33, scope: !11977)
!11986 = !DILocation(line: 2610, column: 7, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11947, file: !3, line: 2610, column: 7)
!11988 = !DILocation(line: 2610, column: 14, scope: !11987)
!11989 = !DILocation(line: 2610, column: 7, scope: !11947)
!11990 = !DILocation(line: 2610, column: 35, scope: !11987)
!11991 = !DILocation(line: 2610, column: 46, scope: !11987)
!11992 = !DILocation(line: 2610, column: 44, scope: !11987)
!11993 = !DILocation(line: 2610, column: 21, scope: !11987)
!11994 = !DILocation(line: 2610, column: 25, scope: !11987)
!11995 = !DILocation(line: 2610, column: 33, scope: !11987)
!11996 = !DILocation(line: 2611, column: 7, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11947, file: !3, line: 2611, column: 7)
!11998 = !DILocation(line: 2611, column: 14, scope: !11997)
!11999 = !DILocation(line: 2611, column: 7, scope: !11947)
!12000 = !DILocation(line: 2611, column: 35, scope: !11997)
!12001 = !DILocation(line: 2611, column: 46, scope: !11997)
!12002 = !DILocation(line: 2611, column: 44, scope: !11997)
!12003 = !DILocation(line: 2611, column: 21, scope: !11997)
!12004 = !DILocation(line: 2611, column: 25, scope: !11997)
!12005 = !DILocation(line: 2611, column: 33, scope: !11997)
!12006 = !DILocation(line: 2612, column: 2, scope: !11947)
!12007 = !DILocation(line: 2613, column: 1, scope: !11931)
!12008 = distinct !DISubprogram(name: "BKE_object_minmax", scope: !3, file: !3, line: 2615, type: !12009, scopeLine: 2616, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!12009 = !DISubroutineType(types: !12010)
!12010 = !{null, !5166, !1073, !1073, !3482}
!12011 = !DILocalVariable(name: "ob", arg: 1, scope: !12008, file: !3, line: 2615, type: !5166)
!12012 = !DILocation(line: 2615, column: 32, scope: !12008)
!12013 = !DILocalVariable(name: "min_r", arg: 2, scope: !12008, file: !3, line: 2615, type: !1073)
!12014 = !DILocation(line: 2615, column: 42, scope: !12008)
!12015 = !DILocalVariable(name: "max_r", arg: 3, scope: !12008, file: !3, line: 2615, type: !1073)
!12016 = !DILocation(line: 2615, column: 58, scope: !12008)
!12017 = !DILocalVariable(name: "use_hidden", arg: 4, scope: !12008, file: !3, line: 2615, type: !3482)
!12018 = !DILocation(line: 2615, column: 79, scope: !12008)
!12019 = !DILocalVariable(name: "bb", scope: !12008, file: !3, line: 2617, type: !11624)
!12020 = !DILocation(line: 2617, column: 11, scope: !12008)
!12021 = !DILocalVariable(name: "vec", scope: !12008, file: !3, line: 2618, type: !835)
!12022 = !DILocation(line: 2618, column: 8, scope: !12008)
!12023 = !DILocalVariable(name: "a", scope: !12008, file: !3, line: 2619, type: !73)
!12024 = !DILocation(line: 2619, column: 6, scope: !12008)
!12025 = !DILocalVariable(name: "changed", scope: !12008, file: !3, line: 2620, type: !1788)
!12026 = !DILocation(line: 2620, column: 7, scope: !12008)
!12027 = !DILocation(line: 2622, column: 10, scope: !12008)
!12028 = !DILocation(line: 2622, column: 14, scope: !12008)
!12029 = !DILocation(line: 2622, column: 2, scope: !12008)
!12030 = !DILocation(line: 2627, column: 33, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12032, file: !3, line: 2626, column: 3)
!12032 = distinct !DILexicalBlock(scope: !12008, file: !3, line: 2622, column: 20)
!12033 = !DILocation(line: 2627, column: 10, scope: !12031)
!12034 = !DILocation(line: 2627, column: 9, scope: !12031)
!12035 = !DILocation(line: 2629, column: 11, scope: !12036)
!12036 = distinct !DILexicalBlock(scope: !12031, file: !3, line: 2629, column: 4)
!12037 = !DILocation(line: 2629, column: 9, scope: !12036)
!12038 = !DILocation(line: 2629, column: 16, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !12036, file: !3, line: 2629, column: 4)
!12040 = !DILocation(line: 2629, column: 18, scope: !12039)
!12041 = !DILocation(line: 2629, column: 4, scope: !12036)
!12042 = !DILocation(line: 2630, column: 15, scope: !12043)
!12043 = distinct !DILexicalBlock(scope: !12039, file: !3, line: 2629, column: 28)
!12044 = !DILocation(line: 2630, column: 19, scope: !12043)
!12045 = !DILocation(line: 2630, column: 29, scope: !12043)
!12046 = !DILocation(line: 2630, column: 33, scope: !12043)
!12047 = !DILocation(line: 2630, column: 26, scope: !12043)
!12048 = !DILocation(line: 2630, column: 5, scope: !12043)
!12049 = !DILocation(line: 2631, column: 20, scope: !12043)
!12050 = !DILocation(line: 2631, column: 27, scope: !12043)
!12051 = !DILocation(line: 2631, column: 37, scope: !12043)
!12052 = !DILocation(line: 2631, column: 41, scope: !12043)
!12053 = !DILocation(line: 2631, column: 34, scope: !12043)
!12054 = !DILocation(line: 2631, column: 5, scope: !12043)
!12055 = !DILocation(line: 2632, column: 4, scope: !12043)
!12056 = !DILocation(line: 2629, column: 24, scope: !12039)
!12057 = !DILocation(line: 2629, column: 4, scope: !12039)
!12058 = distinct !{!12058, !12041, !12059}
!12059 = !DILocation(line: 2632, column: 4, scope: !12036)
!12060 = !DILocation(line: 2633, column: 12, scope: !12031)
!12061 = !DILocation(line: 2634, column: 4, scope: !12031)
!12062 = !DILocalVariable(name: "lt", scope: !12063, file: !3, line: 2638, type: !8112)
!12063 = distinct !DILexicalBlock(scope: !12032, file: !3, line: 2637, column: 3)
!12064 = !DILocation(line: 2638, column: 13, scope: !12063)
!12065 = !DILocation(line: 2638, column: 18, scope: !12063)
!12066 = !DILocation(line: 2638, column: 22, scope: !12063)
!12067 = !DILocalVariable(name: "bp", scope: !12063, file: !3, line: 2639, type: !12068)
!12068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12069, size: 64)
!12069 = !DIDerivedType(tag: DW_TAG_typedef, name: "BPoint", file: !1704, line: 141, baseType: !8140)
!12070 = !DILocation(line: 2639, column: 12, scope: !12063)
!12071 = !DILocation(line: 2639, column: 17, scope: !12063)
!12072 = !DILocation(line: 2639, column: 21, scope: !12063)
!12073 = !DILocalVariable(name: "u", scope: !12063, file: !3, line: 2640, type: !73)
!12074 = !DILocation(line: 2640, column: 8, scope: !12063)
!12075 = !DILocalVariable(name: "v", scope: !12063, file: !3, line: 2640, type: !73)
!12076 = !DILocation(line: 2640, column: 11, scope: !12063)
!12077 = !DILocalVariable(name: "w", scope: !12063, file: !3, line: 2640, type: !73)
!12078 = !DILocation(line: 2640, column: 14, scope: !12063)
!12079 = !DILocation(line: 2642, column: 11, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !12063, file: !3, line: 2642, column: 4)
!12081 = !DILocation(line: 2642, column: 9, scope: !12080)
!12082 = !DILocation(line: 2642, column: 16, scope: !12083)
!12083 = distinct !DILexicalBlock(scope: !12080, file: !3, line: 2642, column: 4)
!12084 = !DILocation(line: 2642, column: 20, scope: !12083)
!12085 = !DILocation(line: 2642, column: 24, scope: !12083)
!12086 = !DILocation(line: 2642, column: 18, scope: !12083)
!12087 = !DILocation(line: 2642, column: 4, scope: !12080)
!12088 = !DILocation(line: 2643, column: 12, scope: !12089)
!12089 = distinct !DILexicalBlock(scope: !12090, file: !3, line: 2643, column: 5)
!12090 = distinct !DILexicalBlock(scope: !12083, file: !3, line: 2642, column: 36)
!12091 = !DILocation(line: 2643, column: 10, scope: !12089)
!12092 = !DILocation(line: 2643, column: 17, scope: !12093)
!12093 = distinct !DILexicalBlock(scope: !12089, file: !3, line: 2643, column: 5)
!12094 = !DILocation(line: 2643, column: 21, scope: !12093)
!12095 = !DILocation(line: 2643, column: 25, scope: !12093)
!12096 = !DILocation(line: 2643, column: 19, scope: !12093)
!12097 = !DILocation(line: 2643, column: 5, scope: !12089)
!12098 = !DILocation(line: 2644, column: 13, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12100, file: !3, line: 2644, column: 6)
!12100 = distinct !DILexicalBlock(scope: !12093, file: !3, line: 2643, column: 37)
!12101 = !DILocation(line: 2644, column: 11, scope: !12099)
!12102 = !DILocation(line: 2644, column: 18, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12099, file: !3, line: 2644, column: 6)
!12104 = !DILocation(line: 2644, column: 22, scope: !12103)
!12105 = !DILocation(line: 2644, column: 26, scope: !12103)
!12106 = !DILocation(line: 2644, column: 20, scope: !12103)
!12107 = !DILocation(line: 2644, column: 6, scope: !12099)
!12108 = !DILocation(line: 2645, column: 19, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12103, file: !3, line: 2644, column: 44)
!12110 = !DILocation(line: 2645, column: 24, scope: !12109)
!12111 = !DILocation(line: 2645, column: 28, scope: !12109)
!12112 = !DILocation(line: 2645, column: 35, scope: !12109)
!12113 = !DILocation(line: 2645, column: 39, scope: !12109)
!12114 = !DILocation(line: 2645, column: 7, scope: !12109)
!12115 = !DILocation(line: 2646, column: 22, scope: !12109)
!12116 = !DILocation(line: 2646, column: 29, scope: !12109)
!12117 = !DILocation(line: 2646, column: 36, scope: !12109)
!12118 = !DILocation(line: 2646, column: 7, scope: !12109)
!12119 = !DILocation(line: 2647, column: 6, scope: !12109)
!12120 = !DILocation(line: 2644, column: 34, scope: !12103)
!12121 = !DILocation(line: 2644, column: 40, scope: !12103)
!12122 = !DILocation(line: 2644, column: 6, scope: !12103)
!12123 = distinct !{!12123, !12107, !12124}
!12124 = !DILocation(line: 2647, column: 6, scope: !12099)
!12125 = !DILocation(line: 2648, column: 5, scope: !12100)
!12126 = !DILocation(line: 2643, column: 33, scope: !12093)
!12127 = !DILocation(line: 2643, column: 5, scope: !12093)
!12128 = distinct !{!12128, !12097, !12129}
!12129 = !DILocation(line: 2648, column: 5, scope: !12089)
!12130 = !DILocation(line: 2649, column: 4, scope: !12090)
!12131 = !DILocation(line: 2642, column: 32, scope: !12083)
!12132 = !DILocation(line: 2642, column: 4, scope: !12083)
!12133 = distinct !{!12133, !12087, !12134}
!12134 = !DILocation(line: 2649, column: 4, scope: !12080)
!12135 = !DILocation(line: 2650, column: 12, scope: !12063)
!12136 = !DILocation(line: 2651, column: 4, scope: !12063)
!12137 = !DILocation(line: 2655, column: 8, scope: !12138)
!12138 = distinct !DILexicalBlock(scope: !12139, file: !3, line: 2655, column: 8)
!12139 = distinct !DILexicalBlock(scope: !12032, file: !3, line: 2654, column: 3)
!12140 = !DILocation(line: 2655, column: 12, scope: !12138)
!12141 = !DILocation(line: 2655, column: 8, scope: !12139)
!12142 = !DILocalVariable(name: "arm", scope: !12143, file: !3, line: 2656, type: !5168)
!12143 = distinct !DILexicalBlock(scope: !12138, file: !3, line: 2655, column: 18)
!12144 = !DILocation(line: 2656, column: 16, scope: !12143)
!12145 = !DILocation(line: 2656, column: 22, scope: !12143)
!12146 = !DILocation(line: 2656, column: 26, scope: !12143)
!12147 = !DILocalVariable(name: "pchan", scope: !12143, file: !3, line: 2657, type: !5484)
!12148 = !DILocation(line: 2657, column: 19, scope: !12143)
!12149 = !DILocation(line: 2659, column: 18, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12143, file: !3, line: 2659, column: 5)
!12151 = !DILocation(line: 2659, column: 22, scope: !12150)
!12152 = !DILocation(line: 2659, column: 28, scope: !12150)
!12153 = !DILocation(line: 2659, column: 37, scope: !12150)
!12154 = !DILocation(line: 2659, column: 16, scope: !12150)
!12155 = !DILocation(line: 2659, column: 10, scope: !12150)
!12156 = !DILocation(line: 2659, column: 44, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12150, file: !3, line: 2659, column: 5)
!12158 = !DILocation(line: 2659, column: 5, scope: !12150)
!12159 = !DILocation(line: 2662, column: 10, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12161, file: !3, line: 2662, column: 10)
!12161 = distinct !DILexicalBlock(scope: !12157, file: !3, line: 2659, column: 72)
!12162 = !DILocation(line: 2662, column: 17, scope: !12160)
!12163 = !DILocation(line: 2662, column: 22, scope: !12160)
!12164 = !DILocation(line: 2662, column: 28, scope: !12160)
!12165 = !DILocation(line: 2662, column: 39, scope: !12160)
!12166 = !DILocation(line: 2662, column: 49, scope: !12160)
!12167 = !DILocation(line: 2662, column: 53, scope: !12160)
!12168 = !DILocation(line: 0, scope: !12160)
!12169 = !DILocation(line: 2662, column: 85, scope: !12160)
!12170 = !DILocation(line: 2662, column: 10, scope: !12161)
!12171 = !DILocation(line: 2663, column: 19, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12160, file: !3, line: 2662, column: 97)
!12173 = !DILocation(line: 2663, column: 24, scope: !12172)
!12174 = !DILocation(line: 2663, column: 28, scope: !12172)
!12175 = !DILocation(line: 2663, column: 35, scope: !12172)
!12176 = !DILocation(line: 2663, column: 42, scope: !12172)
!12177 = !DILocation(line: 2663, column: 7, scope: !12172)
!12178 = !DILocation(line: 2664, column: 22, scope: !12172)
!12179 = !DILocation(line: 2664, column: 29, scope: !12172)
!12180 = !DILocation(line: 2664, column: 36, scope: !12172)
!12181 = !DILocation(line: 2664, column: 7, scope: !12172)
!12182 = !DILocation(line: 2665, column: 19, scope: !12172)
!12183 = !DILocation(line: 2665, column: 24, scope: !12172)
!12184 = !DILocation(line: 2665, column: 28, scope: !12172)
!12185 = !DILocation(line: 2665, column: 35, scope: !12172)
!12186 = !DILocation(line: 2665, column: 42, scope: !12172)
!12187 = !DILocation(line: 2665, column: 7, scope: !12172)
!12188 = !DILocation(line: 2666, column: 22, scope: !12172)
!12189 = !DILocation(line: 2666, column: 29, scope: !12172)
!12190 = !DILocation(line: 2666, column: 36, scope: !12172)
!12191 = !DILocation(line: 2666, column: 7, scope: !12172)
!12192 = !DILocation(line: 2668, column: 15, scope: !12172)
!12193 = !DILocation(line: 2669, column: 6, scope: !12172)
!12194 = !DILocation(line: 2670, column: 5, scope: !12161)
!12195 = !DILocation(line: 2659, column: 59, scope: !12157)
!12196 = !DILocation(line: 2659, column: 66, scope: !12157)
!12197 = !DILocation(line: 2659, column: 57, scope: !12157)
!12198 = !DILocation(line: 2659, column: 5, scope: !12157)
!12199 = distinct !{!12199, !12158, !12200}
!12200 = !DILocation(line: 2670, column: 5, scope: !12150)
!12201 = !DILocation(line: 2671, column: 4, scope: !12143)
!12202 = !DILocation(line: 2672, column: 4, scope: !12139)
!12203 = !DILocalVariable(name: "me", scope: !12204, file: !3, line: 2676, type: !593)
!12204 = distinct !DILexicalBlock(scope: !12032, file: !3, line: 2675, column: 3)
!12205 = !DILocation(line: 2676, column: 10, scope: !12204)
!12206 = !DILocation(line: 2676, column: 36, scope: !12204)
!12207 = !DILocation(line: 2676, column: 15, scope: !12204)
!12208 = !DILocation(line: 2678, column: 8, scope: !12209)
!12209 = distinct !DILexicalBlock(scope: !12204, file: !3, line: 2678, column: 8)
!12210 = !DILocation(line: 2678, column: 8, scope: !12204)
!12211 = !DILocation(line: 2679, column: 33, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12209, file: !3, line: 2678, column: 12)
!12213 = !DILocation(line: 2679, column: 11, scope: !12212)
!12214 = !DILocation(line: 2679, column: 10, scope: !12212)
!12215 = !DILocation(line: 2681, column: 12, scope: !12216)
!12216 = distinct !DILexicalBlock(scope: !12212, file: !3, line: 2681, column: 5)
!12217 = !DILocation(line: 2681, column: 10, scope: !12216)
!12218 = !DILocation(line: 2681, column: 17, scope: !12219)
!12219 = distinct !DILexicalBlock(scope: !12216, file: !3, line: 2681, column: 5)
!12220 = !DILocation(line: 2681, column: 19, scope: !12219)
!12221 = !DILocation(line: 2681, column: 5, scope: !12216)
!12222 = !DILocation(line: 2682, column: 16, scope: !12223)
!12223 = distinct !DILexicalBlock(scope: !12219, file: !3, line: 2681, column: 29)
!12224 = !DILocation(line: 2682, column: 20, scope: !12223)
!12225 = !DILocation(line: 2682, column: 30, scope: !12223)
!12226 = !DILocation(line: 2682, column: 34, scope: !12223)
!12227 = !DILocation(line: 2682, column: 27, scope: !12223)
!12228 = !DILocation(line: 2682, column: 6, scope: !12223)
!12229 = !DILocation(line: 2683, column: 21, scope: !12223)
!12230 = !DILocation(line: 2683, column: 28, scope: !12223)
!12231 = !DILocation(line: 2683, column: 38, scope: !12223)
!12232 = !DILocation(line: 2683, column: 42, scope: !12223)
!12233 = !DILocation(line: 2683, column: 35, scope: !12223)
!12234 = !DILocation(line: 2683, column: 6, scope: !12223)
!12235 = !DILocation(line: 2684, column: 5, scope: !12223)
!12236 = !DILocation(line: 2681, column: 25, scope: !12219)
!12237 = !DILocation(line: 2681, column: 5, scope: !12219)
!12238 = distinct !{!12238, !12221, !12239}
!12239 = !DILocation(line: 2684, column: 5, scope: !12216)
!12240 = !DILocation(line: 2685, column: 13, scope: !12212)
!12241 = !DILocation(line: 2686, column: 4, scope: !12212)
!12242 = !DILocation(line: 2687, column: 4, scope: !12204)
!12243 = !DILocalVariable(name: "ob_min", scope: !12244, file: !3, line: 2691, type: !835)
!12244 = distinct !DILexicalBlock(scope: !12032, file: !3, line: 2690, column: 3)
!12245 = !DILocation(line: 2691, column: 10, scope: !12244)
!12246 = !DILocalVariable(name: "ob_max", scope: !12244, file: !3, line: 2691, type: !835)
!12247 = !DILocation(line: 2691, column: 21, scope: !12244)
!12248 = !DILocation(line: 2693, column: 34, scope: !12244)
!12249 = !DILocation(line: 2693, column: 38, scope: !12244)
!12250 = !DILocation(line: 2693, column: 44, scope: !12244)
!12251 = !DILocation(line: 2693, column: 52, scope: !12244)
!12252 = !DILocation(line: 2693, column: 60, scope: !12244)
!12253 = !DILocation(line: 2693, column: 64, scope: !12244)
!12254 = !DILocation(line: 2693, column: 14, scope: !12244)
!12255 = !DILocation(line: 2693, column: 12, scope: !12244)
!12256 = !DILocation(line: 2694, column: 8, scope: !12257)
!12257 = distinct !DILexicalBlock(scope: !12244, file: !3, line: 2694, column: 8)
!12258 = !DILocation(line: 2694, column: 8, scope: !12244)
!12259 = !DILocation(line: 2695, column: 20, scope: !12260)
!12260 = distinct !DILexicalBlock(scope: !12257, file: !3, line: 2694, column: 17)
!12261 = !DILocation(line: 2695, column: 27, scope: !12260)
!12262 = !DILocation(line: 2695, column: 34, scope: !12260)
!12263 = !DILocation(line: 2695, column: 5, scope: !12260)
!12264 = !DILocation(line: 2696, column: 20, scope: !12260)
!12265 = !DILocation(line: 2696, column: 27, scope: !12260)
!12266 = !DILocation(line: 2696, column: 34, scope: !12260)
!12267 = !DILocation(line: 2696, column: 5, scope: !12260)
!12268 = !DILocation(line: 2697, column: 4, scope: !12260)
!12269 = !DILocation(line: 2698, column: 4, scope: !12244)
!12270 = !DILocation(line: 2702, column: 6, scope: !12271)
!12271 = distinct !DILexicalBlock(scope: !12008, file: !3, line: 2702, column: 6)
!12272 = !DILocation(line: 2702, column: 14, scope: !12271)
!12273 = !DILocation(line: 2702, column: 6, scope: !12008)
!12274 = !DILocalVariable(name: "size", scope: !12275, file: !3, line: 2703, type: !835)
!12275 = distinct !DILexicalBlock(scope: !12271, file: !3, line: 2702, column: 24)
!12276 = !DILocation(line: 2703, column: 9, scope: !12275)
!12277 = !DILocation(line: 2705, column: 14, scope: !12275)
!12278 = !DILocation(line: 2705, column: 20, scope: !12275)
!12279 = !DILocation(line: 2705, column: 24, scope: !12275)
!12280 = !DILocation(line: 2705, column: 3, scope: !12275)
!12281 = !DILocation(line: 2706, column: 7, scope: !12282)
!12282 = distinct !DILexicalBlock(scope: !12275, file: !3, line: 2706, column: 7)
!12283 = !DILocation(line: 2706, column: 11, scope: !12282)
!12284 = !DILocation(line: 2706, column: 16, scope: !12282)
!12285 = !DILocation(line: 2706, column: 7, scope: !12275)
!12286 = !DILocation(line: 2707, column: 14, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !12282, file: !3, line: 2706, column: 29)
!12288 = !DILocation(line: 2707, column: 20, scope: !12287)
!12289 = !DILocation(line: 2707, column: 24, scope: !12287)
!12290 = !DILocation(line: 2707, column: 4, scope: !12287)
!12291 = !DILocation(line: 2708, column: 3, scope: !12287)
!12292 = !DILocation(line: 2710, column: 18, scope: !12275)
!12293 = !DILocation(line: 2710, column: 25, scope: !12275)
!12294 = !DILocation(line: 2710, column: 32, scope: !12275)
!12295 = !DILocation(line: 2710, column: 36, scope: !12275)
!12296 = !DILocation(line: 2710, column: 3, scope: !12275)
!12297 = !DILocation(line: 2712, column: 14, scope: !12275)
!12298 = !DILocation(line: 2712, column: 19, scope: !12275)
!12299 = !DILocation(line: 2712, column: 23, scope: !12275)
!12300 = !DILocation(line: 2712, column: 3, scope: !12275)
!12301 = !DILocation(line: 2713, column: 13, scope: !12275)
!12302 = !DILocation(line: 2713, column: 18, scope: !12275)
!12303 = !DILocation(line: 2713, column: 3, scope: !12275)
!12304 = !DILocation(line: 2714, column: 18, scope: !12275)
!12305 = !DILocation(line: 2714, column: 25, scope: !12275)
!12306 = !DILocation(line: 2714, column: 32, scope: !12275)
!12307 = !DILocation(line: 2714, column: 3, scope: !12275)
!12308 = !DILocation(line: 2716, column: 14, scope: !12275)
!12309 = !DILocation(line: 2716, column: 19, scope: !12275)
!12310 = !DILocation(line: 2716, column: 23, scope: !12275)
!12311 = !DILocation(line: 2716, column: 3, scope: !12275)
!12312 = !DILocation(line: 2717, column: 13, scope: !12275)
!12313 = !DILocation(line: 2717, column: 18, scope: !12275)
!12314 = !DILocation(line: 2717, column: 3, scope: !12275)
!12315 = !DILocation(line: 2718, column: 18, scope: !12275)
!12316 = !DILocation(line: 2718, column: 25, scope: !12275)
!12317 = !DILocation(line: 2718, column: 32, scope: !12275)
!12318 = !DILocation(line: 2718, column: 3, scope: !12275)
!12319 = !DILocation(line: 2719, column: 2, scope: !12275)
!12320 = !DILocation(line: 2720, column: 1, scope: !12008)
!12321 = distinct !DISubprogram(name: "mul_v3_fl", scope: !9059, file: !9059, line: 392, type: !12322, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!12322 = !DISubroutineType(types: !12323)
!12323 = !{null, !1073, !713}
!12324 = !DILocalVariable(name: "r", arg: 1, scope: !12321, file: !9059, line: 392, type: !1073)
!12325 = !DILocation(line: 392, column: 30, scope: !12321)
!12326 = !DILocalVariable(name: "f", arg: 2, scope: !12321, file: !9059, line: 392, type: !713)
!12327 = !DILocation(line: 392, column: 42, scope: !12321)
!12328 = !DILocation(line: 394, column: 10, scope: !12321)
!12329 = !DILocation(line: 394, column: 2, scope: !12321)
!12330 = !DILocation(line: 394, column: 7, scope: !12321)
!12331 = !DILocation(line: 395, column: 10, scope: !12321)
!12332 = !DILocation(line: 395, column: 2, scope: !12321)
!12333 = !DILocation(line: 395, column: 7, scope: !12321)
!12334 = !DILocation(line: 396, column: 10, scope: !12321)
!12335 = !DILocation(line: 396, column: 2, scope: !12321)
!12336 = !DILocation(line: 396, column: 7, scope: !12321)
!12337 = !DILocation(line: 397, column: 1, scope: !12321)
!12338 = distinct !DISubprogram(name: "add_v3_v3", scope: !9059, file: !9059, line: 302, type: !9060, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!12339 = !DILocalVariable(name: "r", arg: 1, scope: !12338, file: !9059, line: 302, type: !1073)
!12340 = !DILocation(line: 302, column: 30, scope: !12338)
!12341 = !DILocalVariable(name: "a", arg: 2, scope: !12338, file: !9059, line: 302, type: !3397)
!12342 = !DILocation(line: 302, column: 48, scope: !12338)
!12343 = !DILocation(line: 304, column: 10, scope: !12338)
!12344 = !DILocation(line: 304, column: 2, scope: !12338)
!12345 = !DILocation(line: 304, column: 7, scope: !12338)
!12346 = !DILocation(line: 305, column: 10, scope: !12338)
!12347 = !DILocation(line: 305, column: 2, scope: !12338)
!12348 = !DILocation(line: 305, column: 7, scope: !12338)
!12349 = !DILocation(line: 306, column: 10, scope: !12338)
!12350 = !DILocation(line: 306, column: 2, scope: !12338)
!12351 = !DILocation(line: 306, column: 7, scope: !12338)
!12352 = !DILocation(line: 307, column: 1, scope: !12338)
!12353 = distinct !DISubprogram(name: "BKE_object_empty_draw_type_set", scope: !3, file: !3, line: 2722, type: !12354, scopeLine: 2723, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!12354 = !DISubroutineType(types: !12355)
!12355 = !{null, !5166, !12356}
!12356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !73)
!12357 = !DILocalVariable(name: "ob", arg: 1, scope: !12353, file: !3, line: 2722, type: !5166)
!12358 = !DILocation(line: 2722, column: 45, scope: !12353)
!12359 = !DILocalVariable(name: "value", arg: 2, scope: !12353, file: !3, line: 2722, type: !12356)
!12360 = !DILocation(line: 2722, column: 59, scope: !12353)
!12361 = !DILocation(line: 2724, column: 23, scope: !12353)
!12362 = !DILocation(line: 2724, column: 2, scope: !12353)
!12363 = !DILocation(line: 2724, column: 6, scope: !12353)
!12364 = !DILocation(line: 2724, column: 21, scope: !12353)
!12365 = !DILocation(line: 2726, column: 6, scope: !12366)
!12366 = distinct !DILexicalBlock(scope: !12353, file: !3, line: 2726, column: 6)
!12367 = !DILocation(line: 2726, column: 10, scope: !12366)
!12368 = !DILocation(line: 2726, column: 15, scope: !12366)
!12369 = !DILocation(line: 2726, column: 27, scope: !12366)
!12370 = !DILocation(line: 2726, column: 30, scope: !12366)
!12371 = !DILocation(line: 2726, column: 34, scope: !12366)
!12372 = !DILocation(line: 2726, column: 49, scope: !12366)
!12373 = !DILocation(line: 2726, column: 6, scope: !12353)
!12374 = !DILocation(line: 2727, column: 8, scope: !12375)
!12375 = distinct !DILexicalBlock(scope: !12376, file: !3, line: 2727, column: 7)
!12376 = distinct !DILexicalBlock(scope: !12366, file: !3, line: 2726, column: 68)
!12377 = !DILocation(line: 2727, column: 12, scope: !12375)
!12378 = !DILocation(line: 2727, column: 7, scope: !12376)
!12379 = !DILocation(line: 2728, column: 16, scope: !12380)
!12380 = distinct !DILexicalBlock(scope: !12375, file: !3, line: 2727, column: 19)
!12381 = !DILocation(line: 2728, column: 4, scope: !12380)
!12382 = !DILocation(line: 2728, column: 8, scope: !12380)
!12383 = !DILocation(line: 2728, column: 14, scope: !12380)
!12384 = !DILocation(line: 2729, column: 4, scope: !12380)
!12385 = !DILocation(line: 2729, column: 8, scope: !12380)
!12386 = !DILocation(line: 2729, column: 15, scope: !12380)
!12387 = !DILocation(line: 2729, column: 18, scope: !12380)
!12388 = !DILocation(line: 2730, column: 4, scope: !12380)
!12389 = !DILocation(line: 2730, column: 8, scope: !12380)
!12390 = !DILocation(line: 2730, column: 15, scope: !12380)
!12391 = !DILocation(line: 2730, column: 22, scope: !12380)
!12392 = !DILocation(line: 2731, column: 4, scope: !12380)
!12393 = !DILocation(line: 2731, column: 8, scope: !12380)
!12394 = !DILocation(line: 2731, column: 15, scope: !12380)
!12395 = !DILocation(line: 2731, column: 20, scope: !12380)
!12396 = !DILocation(line: 2732, column: 4, scope: !12380)
!12397 = !DILocation(line: 2732, column: 8, scope: !12380)
!12398 = !DILocation(line: 2732, column: 15, scope: !12380)
!12399 = !DILocation(line: 2732, column: 23, scope: !12380)
!12400 = !DILocation(line: 2733, column: 3, scope: !12380)
!12401 = !DILocation(line: 2734, column: 2, scope: !12376)
!12402 = !DILocation(line: 2736, column: 7, scope: !12403)
!12403 = distinct !DILexicalBlock(scope: !12404, file: !3, line: 2736, column: 7)
!12404 = distinct !DILexicalBlock(scope: !12366, file: !3, line: 2735, column: 7)
!12405 = !DILocation(line: 2736, column: 11, scope: !12403)
!12406 = !DILocation(line: 2736, column: 7, scope: !12404)
!12407 = !DILocation(line: 2737, column: 4, scope: !12408)
!12408 = distinct !DILexicalBlock(scope: !12403, file: !3, line: 2736, column: 18)
!12409 = !DILocation(line: 2737, column: 14, scope: !12408)
!12410 = !DILocation(line: 2737, column: 18, scope: !12408)
!12411 = !DILocation(line: 2738, column: 4, scope: !12408)
!12412 = !DILocation(line: 2738, column: 8, scope: !12408)
!12413 = !DILocation(line: 2738, column: 14, scope: !12408)
!12414 = !DILocation(line: 2739, column: 3, scope: !12408)
!12415 = !DILocation(line: 2741, column: 1, scope: !12353)
!12416 = distinct !DISubprogram(name: "BKE_object_minmax_dupli", scope: !3, file: !3, line: 2743, type: !12417, scopeLine: 2744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!12417 = !DISubroutineType(types: !12418)
!12418 = !{!1788, !6411, !5166, !1073, !1073, !3482}
!12419 = !DILocalVariable(name: "scene", arg: 1, scope: !12416, file: !3, line: 2743, type: !6411)
!12420 = !DILocation(line: 2743, column: 37, scope: !12416)
!12421 = !DILocalVariable(name: "ob", arg: 2, scope: !12416, file: !3, line: 2743, type: !5166)
!12422 = !DILocation(line: 2743, column: 52, scope: !12416)
!12423 = !DILocalVariable(name: "r_min", arg: 3, scope: !12416, file: !3, line: 2743, type: !1073)
!12424 = !DILocation(line: 2743, column: 62, scope: !12416)
!12425 = !DILocalVariable(name: "r_max", arg: 4, scope: !12416, file: !3, line: 2743, type: !1073)
!12426 = !DILocation(line: 2743, column: 78, scope: !12416)
!12427 = !DILocalVariable(name: "use_hidden", arg: 5, scope: !12416, file: !3, line: 2743, type: !3482)
!12428 = !DILocation(line: 2743, column: 99, scope: !12416)
!12429 = !DILocalVariable(name: "ok", scope: !12416, file: !3, line: 2745, type: !1788)
!12430 = !DILocation(line: 2745, column: 7, scope: !12416)
!12431 = !DILocation(line: 2746, column: 7, scope: !12432)
!12432 = distinct !DILexicalBlock(scope: !12416, file: !3, line: 2746, column: 6)
!12433 = !DILocation(line: 2746, column: 11, scope: !12432)
!12434 = !DILocation(line: 2746, column: 21, scope: !12432)
!12435 = !DILocation(line: 2746, column: 33, scope: !12432)
!12436 = !DILocation(line: 2746, column: 6, scope: !12416)
!12437 = !DILocation(line: 2747, column: 10, scope: !12438)
!12438 = distinct !DILexicalBlock(scope: !12432, file: !3, line: 2746, column: 39)
!12439 = !DILocation(line: 2747, column: 3, scope: !12438)
!12440 = !DILocalVariable(name: "lb", scope: !12441, file: !3, line: 2750, type: !1209)
!12441 = distinct !DILexicalBlock(scope: !12432, file: !3, line: 2749, column: 7)
!12442 = !DILocation(line: 2750, column: 13, scope: !12441)
!12443 = !DILocalVariable(name: "dob", scope: !12441, file: !3, line: 2751, type: !12444)
!12444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12445, size: 64)
!12445 = !DIDerivedType(tag: DW_TAG_typedef, name: "DupliObject", file: !114, line: 331, baseType: !12446)
!12446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DupliObject", file: !114, line: 316, size: 1216, elements: !12447)
!12447 = !{!12448, !12450, !12451, !12452, !12453, !12454, !12455, !12456, !12457, !12458, !12460}
!12448 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12446, file: !114, line: 317, baseType: !12449, size: 64)
!12449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12446, size: 64)
!12450 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12446, file: !114, line: 317, baseType: !12449, size: 64, offset: 64)
!12451 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !12446, file: !114, line: 318, baseType: !966, size: 64, offset: 128)
!12452 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !12446, file: !114, line: 319, baseType: !1404, size: 512, offset: 192)
!12453 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !12446, file: !114, line: 320, baseType: !835, size: 96, offset: 704)
!12454 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !12446, file: !114, line: 320, baseType: !1118, size: 64, offset: 800)
!12455 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !12446, file: !114, line: 322, baseType: !632, size: 16, offset: 864)
!12456 = !DIDerivedType(tag: DW_TAG_member, name: "no_draw", scope: !12446, file: !114, line: 323, baseType: !619, size: 8, offset: 880)
!12457 = !DIDerivedType(tag: DW_TAG_member, name: "animated", scope: !12446, file: !114, line: 323, baseType: !619, size: 8, offset: 888)
!12458 = !DIDerivedType(tag: DW_TAG_member, name: "persistent_id", scope: !12446, file: !114, line: 327, baseType: !12459, size: 256, offset: 896)
!12459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !73, size: 256, elements: !1504)
!12460 = !DIDerivedType(tag: DW_TAG_member, name: "particle_system", scope: !12446, file: !114, line: 330, baseType: !2683, size: 64, offset: 1152)
!12461 = !DILocation(line: 2751, column: 16, scope: !12441)
!12462 = !DILocation(line: 2752, column: 27, scope: !12441)
!12463 = !DILocation(line: 2752, column: 33, scope: !12441)
!12464 = !DILocation(line: 2752, column: 43, scope: !12441)
!12465 = !DILocation(line: 2752, column: 50, scope: !12441)
!12466 = !DILocation(line: 2752, column: 8, scope: !12441)
!12467 = !DILocation(line: 2752, column: 6, scope: !12441)
!12468 = !DILocation(line: 2753, column: 14, scope: !12469)
!12469 = distinct !DILexicalBlock(scope: !12441, file: !3, line: 2753, column: 3)
!12470 = !DILocation(line: 2753, column: 18, scope: !12469)
!12471 = !DILocation(line: 2753, column: 12, scope: !12469)
!12472 = !DILocation(line: 2753, column: 8, scope: !12469)
!12473 = !DILocation(line: 2753, column: 25, scope: !12474)
!12474 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 2753, column: 3)
!12475 = !DILocation(line: 2753, column: 3, scope: !12469)
!12476 = !DILocation(line: 2754, column: 9, scope: !12477)
!12477 = distinct !DILexicalBlock(scope: !12478, file: !3, line: 2754, column: 8)
!12478 = distinct !DILexicalBlock(scope: !12474, file: !3, line: 2753, column: 47)
!12479 = !DILocation(line: 2754, column: 20, scope: !12477)
!12480 = !DILocation(line: 2754, column: 30, scope: !12477)
!12481 = !DILocation(line: 2754, column: 34, scope: !12477)
!12482 = !DILocation(line: 2754, column: 39, scope: !12477)
!12483 = !DILocation(line: 2754, column: 47, scope: !12477)
!12484 = !DILocation(line: 2754, column: 8, scope: !12478)
!12485 = !DILocation(line: 2756, column: 4, scope: !12486)
!12486 = distinct !DILexicalBlock(scope: !12477, file: !3, line: 2754, column: 54)
!12487 = !DILocalVariable(name: "bb", scope: !12488, file: !3, line: 2758, type: !11623)
!12488 = distinct !DILexicalBlock(scope: !12477, file: !3, line: 2757, column: 9)
!12489 = !DILocation(line: 2758, column: 15, scope: !12488)
!12490 = !DILocation(line: 2758, column: 44, scope: !12488)
!12491 = !DILocation(line: 2758, column: 49, scope: !12488)
!12492 = !DILocation(line: 2758, column: 20, scope: !12488)
!12493 = !DILocation(line: 2760, column: 9, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12488, file: !3, line: 2760, column: 9)
!12495 = !DILocation(line: 2760, column: 9, scope: !12488)
!12496 = !DILocalVariable(name: "i", scope: !12497, file: !3, line: 2761, type: !73)
!12497 = distinct !DILexicalBlock(scope: !12494, file: !3, line: 2760, column: 13)
!12498 = !DILocation(line: 2761, column: 10, scope: !12497)
!12499 = !DILocation(line: 2762, column: 13, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12497, file: !3, line: 2762, column: 6)
!12501 = !DILocation(line: 2762, column: 11, scope: !12500)
!12502 = !DILocation(line: 2762, column: 18, scope: !12503)
!12503 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 2762, column: 6)
!12504 = !DILocation(line: 2762, column: 20, scope: !12503)
!12505 = !DILocation(line: 2762, column: 6, scope: !12500)
!12506 = !DILocalVariable(name: "vec", scope: !12507, file: !3, line: 2763, type: !835)
!12507 = distinct !DILexicalBlock(scope: !12503, file: !3, line: 2762, column: 30)
!12508 = !DILocation(line: 2763, column: 13, scope: !12507)
!12509 = !DILocation(line: 2764, column: 19, scope: !12507)
!12510 = !DILocation(line: 2764, column: 24, scope: !12507)
!12511 = !DILocation(line: 2764, column: 29, scope: !12507)
!12512 = !DILocation(line: 2764, column: 34, scope: !12507)
!12513 = !DILocation(line: 2764, column: 38, scope: !12507)
!12514 = !DILocation(line: 2764, column: 42, scope: !12507)
!12515 = !DILocation(line: 2764, column: 7, scope: !12507)
!12516 = !DILocation(line: 2765, column: 22, scope: !12507)
!12517 = !DILocation(line: 2765, column: 29, scope: !12507)
!12518 = !DILocation(line: 2765, column: 36, scope: !12507)
!12519 = !DILocation(line: 2765, column: 7, scope: !12507)
!12520 = !DILocation(line: 2766, column: 6, scope: !12507)
!12521 = !DILocation(line: 2762, column: 26, scope: !12503)
!12522 = !DILocation(line: 2762, column: 6, scope: !12503)
!12523 = distinct !{!12523, !12505, !12524}
!12524 = !DILocation(line: 2766, column: 6, scope: !12500)
!12525 = !DILocation(line: 2768, column: 9, scope: !12497)
!12526 = !DILocation(line: 2769, column: 5, scope: !12497)
!12527 = !DILocation(line: 2771, column: 3, scope: !12478)
!12528 = !DILocation(line: 2753, column: 36, scope: !12474)
!12529 = !DILocation(line: 2753, column: 41, scope: !12474)
!12530 = !DILocation(line: 2753, column: 34, scope: !12474)
!12531 = !DILocation(line: 2753, column: 3, scope: !12474)
!12532 = distinct !{!12532, !12475, !12533}
!12533 = !DILocation(line: 2771, column: 3, scope: !12469)
!12534 = !DILocation(line: 2772, column: 25, scope: !12441)
!12535 = !DILocation(line: 2772, column: 3, scope: !12441)
!12536 = !DILocation(line: 2775, column: 9, scope: !12416)
!12537 = !DILocation(line: 2775, column: 2, scope: !12416)
!12538 = !DILocation(line: 2776, column: 1, scope: !12416)
!12539 = distinct !DISubprogram(name: "BKE_object_foreach_display_point", scope: !3, file: !3, line: 2778, type: !12540, scopeLine: 2781, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!12540 = !DISubroutineType(types: !12541)
!12541 = !{null, !5166, !3458, !12542, !592}
!12542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12543, size: 64)
!12543 = !DISubroutineType(types: !12544)
!12544 = !{null, !3397, !592}
!12545 = !DILocalVariable(name: "ob", arg: 1, scope: !12539, file: !3, line: 2779, type: !5166)
!12546 = !DILocation(line: 2779, column: 17, scope: !12539)
!12547 = !DILocalVariable(name: "obmat", arg: 2, scope: !12539, file: !3, line: 2779, type: !3458)
!12548 = !DILocation(line: 2779, column: 27, scope: !12539)
!12549 = !DILocalVariable(name: "func_cb", arg: 3, scope: !12539, file: !3, line: 2780, type: !12542)
!12550 = !DILocation(line: 2780, column: 16, scope: !12539)
!12551 = !DILocalVariable(name: "user_data", arg: 4, scope: !12539, file: !3, line: 2780, type: !592)
!12552 = !DILocation(line: 2780, column: 56, scope: !12539)
!12553 = !DILocalVariable(name: "co", scope: !12539, file: !3, line: 2782, type: !835)
!12554 = !DILocation(line: 2782, column: 8, scope: !12539)
!12555 = !DILocation(line: 2784, column: 6, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12539, file: !3, line: 2784, column: 6)
!12557 = !DILocation(line: 2784, column: 10, scope: !12556)
!12558 = !DILocation(line: 2784, column: 6, scope: !12539)
!12559 = !DILocalVariable(name: "dm", scope: !12560, file: !3, line: 2785, type: !3203)
!12560 = distinct !DILexicalBlock(scope: !12556, file: !3, line: 2784, column: 24)
!12561 = !DILocation(line: 2785, column: 16, scope: !12560)
!12562 = !DILocation(line: 2785, column: 21, scope: !12560)
!12563 = !DILocation(line: 2785, column: 25, scope: !12560)
!12564 = !DILocalVariable(name: "mv", scope: !12560, file: !3, line: 2786, type: !4452)
!12565 = !DILocation(line: 2786, column: 10, scope: !12560)
!12566 = !DILocation(line: 2786, column: 15, scope: !12560)
!12567 = !DILocation(line: 2786, column: 19, scope: !12560)
!12568 = !DILocation(line: 2786, column: 32, scope: !12560)
!12569 = !DILocalVariable(name: "totvert", scope: !12560, file: !3, line: 2787, type: !73)
!12570 = !DILocation(line: 2787, column: 7, scope: !12560)
!12571 = !DILocation(line: 2787, column: 17, scope: !12560)
!12572 = !DILocation(line: 2787, column: 21, scope: !12560)
!12573 = !DILocation(line: 2787, column: 33, scope: !12560)
!12574 = !DILocalVariable(name: "i", scope: !12560, file: !3, line: 2788, type: !73)
!12575 = !DILocation(line: 2788, column: 7, scope: !12560)
!12576 = !DILocation(line: 2790, column: 10, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12560, file: !3, line: 2790, column: 3)
!12578 = !DILocation(line: 2790, column: 8, scope: !12577)
!12579 = !DILocation(line: 2790, column: 15, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12577, file: !3, line: 2790, column: 3)
!12581 = !DILocation(line: 2790, column: 19, scope: !12580)
!12582 = !DILocation(line: 2790, column: 17, scope: !12580)
!12583 = !DILocation(line: 2790, column: 3, scope: !12577)
!12584 = !DILocation(line: 2791, column: 16, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12580, file: !3, line: 2790, column: 39)
!12586 = !DILocation(line: 2791, column: 20, scope: !12585)
!12587 = !DILocation(line: 2791, column: 27, scope: !12585)
!12588 = !DILocation(line: 2791, column: 31, scope: !12585)
!12589 = !DILocation(line: 2791, column: 4, scope: !12585)
!12590 = !DILocation(line: 2792, column: 4, scope: !12585)
!12591 = !DILocation(line: 2792, column: 12, scope: !12585)
!12592 = !DILocation(line: 2792, column: 16, scope: !12585)
!12593 = !DILocation(line: 2793, column: 3, scope: !12585)
!12594 = !DILocation(line: 2790, column: 29, scope: !12580)
!12595 = !DILocation(line: 2790, column: 35, scope: !12580)
!12596 = !DILocation(line: 2790, column: 3, scope: !12580)
!12597 = distinct !{!12597, !12583, !12598}
!12598 = !DILocation(line: 2793, column: 3, scope: !12577)
!12599 = !DILocation(line: 2794, column: 2, scope: !12560)
!12600 = !DILocation(line: 2795, column: 11, scope: !12601)
!12601 = distinct !DILexicalBlock(scope: !12556, file: !3, line: 2795, column: 11)
!12602 = !DILocation(line: 2795, column: 15, scope: !12601)
!12603 = !DILocation(line: 2795, column: 27, scope: !12601)
!12604 = !DILocation(line: 2795, column: 30, scope: !12601)
!12605 = !DILocation(line: 2795, column: 34, scope: !12601)
!12606 = !DILocation(line: 2795, column: 47, scope: !12601)
!12607 = !DILocation(line: 2795, column: 52, scope: !12601)
!12608 = !DILocation(line: 2795, column: 11, scope: !12556)
!12609 = !DILocalVariable(name: "dl", scope: !12610, file: !3, line: 2796, type: !12611)
!12610 = distinct !DILexicalBlock(scope: !12601, file: !3, line: 2795, column: 59)
!12611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12612, size: 64)
!12612 = !DIDerivedType(tag: DW_TAG_typedef, name: "DispList", file: !12613, line: 79, baseType: !12614)
!12613 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_displist.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!12614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DispList", file: !12613, line: 68, size: 576, elements: !12615)
!12615 = !{!12616, !12618, !12619, !12620, !12621, !12622, !12623, !12624, !12625, !12626, !12627, !12628, !12629, !12630}
!12616 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12614, file: !12613, line: 69, baseType: !12617, size: 64)
!12617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12614, size: 64)
!12618 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12614, file: !12613, line: 69, baseType: !12617, size: 64, offset: 64)
!12619 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !12614, file: !12613, line: 70, baseType: !632, size: 16, offset: 128)
!12620 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !12614, file: !12613, line: 70, baseType: !632, size: 16, offset: 144)
!12621 = !DIDerivedType(tag: DW_TAG_member, name: "parts", scope: !12614, file: !12613, line: 71, baseType: !73, size: 32, offset: 160)
!12622 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !12614, file: !12613, line: 71, baseType: !73, size: 32, offset: 192)
!12623 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !12614, file: !12613, line: 72, baseType: !632, size: 16, offset: 224)
!12624 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !12614, file: !12613, line: 72, baseType: !632, size: 16, offset: 240)
!12625 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !12614, file: !12613, line: 73, baseType: !1073, size: 64, offset: 256)
!12626 = !DIDerivedType(tag: DW_TAG_member, name: "nors", scope: !12614, file: !12613, line: 73, baseType: !1073, size: 64, offset: 320)
!12627 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !12614, file: !12613, line: 74, baseType: !3368, size: 64, offset: 384)
!12628 = !DIDerivedType(tag: DW_TAG_member, name: "charidx", scope: !12614, file: !12613, line: 75, baseType: !73, size: 32, offset: 448)
!12629 = !DIDerivedType(tag: DW_TAG_member, name: "totindex", scope: !12614, file: !12613, line: 76, baseType: !73, size: 32, offset: 480)
!12630 = !DIDerivedType(tag: DW_TAG_member, name: "bevelSplitFlag", scope: !12614, file: !12613, line: 78, baseType: !1094, size: 64, offset: 512)
!12631 = !DILocation(line: 2796, column: 13, scope: !12610)
!12632 = !DILocation(line: 2798, column: 13, scope: !12633)
!12633 = distinct !DILexicalBlock(scope: !12610, file: !3, line: 2798, column: 3)
!12634 = !DILocation(line: 2798, column: 17, scope: !12633)
!12635 = !DILocation(line: 2798, column: 30, scope: !12633)
!12636 = !DILocation(line: 2798, column: 35, scope: !12633)
!12637 = !DILocation(line: 2798, column: 11, scope: !12633)
!12638 = !DILocation(line: 2798, column: 8, scope: !12633)
!12639 = !DILocation(line: 2798, column: 42, scope: !12640)
!12640 = distinct !DILexicalBlock(scope: !12633, file: !3, line: 2798, column: 3)
!12641 = !DILocation(line: 2798, column: 3, scope: !12633)
!12642 = !DILocalVariable(name: "v3", scope: !12643, file: !3, line: 2799, type: !3397)
!12643 = distinct !DILexicalBlock(scope: !12640, file: !3, line: 2798, column: 61)
!12644 = !DILocation(line: 2799, column: 17, scope: !12643)
!12645 = !DILocation(line: 2799, column: 22, scope: !12643)
!12646 = !DILocation(line: 2799, column: 26, scope: !12643)
!12647 = !DILocalVariable(name: "totvert", scope: !12643, file: !3, line: 2800, type: !73)
!12648 = !DILocation(line: 2800, column: 8, scope: !12643)
!12649 = !DILocation(line: 2800, column: 18, scope: !12643)
!12650 = !DILocation(line: 2800, column: 22, scope: !12643)
!12651 = !DILocalVariable(name: "i", scope: !12643, file: !3, line: 2801, type: !73)
!12652 = !DILocation(line: 2801, column: 8, scope: !12643)
!12653 = !DILocation(line: 2803, column: 11, scope: !12654)
!12654 = distinct !DILexicalBlock(scope: !12643, file: !3, line: 2803, column: 4)
!12655 = !DILocation(line: 2803, column: 9, scope: !12654)
!12656 = !DILocation(line: 2803, column: 16, scope: !12657)
!12657 = distinct !DILexicalBlock(scope: !12654, file: !3, line: 2803, column: 4)
!12658 = !DILocation(line: 2803, column: 20, scope: !12657)
!12659 = !DILocation(line: 2803, column: 18, scope: !12657)
!12660 = !DILocation(line: 2803, column: 4, scope: !12654)
!12661 = !DILocation(line: 2804, column: 17, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12657, file: !3, line: 2803, column: 43)
!12663 = !DILocation(line: 2804, column: 21, scope: !12662)
!12664 = !DILocation(line: 2804, column: 28, scope: !12662)
!12665 = !DILocation(line: 2804, column: 5, scope: !12662)
!12666 = !DILocation(line: 2805, column: 5, scope: !12662)
!12667 = !DILocation(line: 2805, column: 13, scope: !12662)
!12668 = !DILocation(line: 2805, column: 17, scope: !12662)
!12669 = !DILocation(line: 2806, column: 4, scope: !12662)
!12670 = !DILocation(line: 2803, column: 30, scope: !12657)
!12671 = !DILocation(line: 2803, column: 37, scope: !12657)
!12672 = !DILocation(line: 2803, column: 4, scope: !12657)
!12673 = distinct !{!12673, !12660, !12674}
!12674 = !DILocation(line: 2806, column: 4, scope: !12654)
!12675 = !DILocation(line: 2807, column: 3, scope: !12643)
!12676 = !DILocation(line: 2798, column: 51, scope: !12640)
!12677 = !DILocation(line: 2798, column: 55, scope: !12640)
!12678 = !DILocation(line: 2798, column: 49, scope: !12640)
!12679 = !DILocation(line: 2798, column: 3, scope: !12640)
!12680 = distinct !{!12680, !12641, !12681}
!12681 = !DILocation(line: 2807, column: 3, scope: !12633)
!12682 = !DILocation(line: 2808, column: 2, scope: !12610)
!12683 = !DILocation(line: 2809, column: 1, scope: !12539)
!12684 = distinct !DISubprogram(name: "BKE_scene_foreach_display_point", scope: !3, file: !3, line: 2811, type: !12685, scopeLine: 2814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!12685 = !DISubroutineType(types: !12686)
!12686 = !{null, !6411, !4717, !3399, !12542, !592}
!12687 = !DILocalVariable(name: "scene", arg: 1, scope: !12684, file: !3, line: 2812, type: !6411)
!12688 = !DILocation(line: 2812, column: 16, scope: !12684)
!12689 = !DILocalVariable(name: "v3d", arg: 2, scope: !12684, file: !3, line: 2812, type: !4717)
!12690 = !DILocation(line: 2812, column: 31, scope: !12684)
!12691 = !DILocalVariable(name: "flag", arg: 3, scope: !12684, file: !3, line: 2812, type: !3399)
!12692 = !DILocation(line: 2812, column: 48, scope: !12684)
!12693 = !DILocalVariable(name: "func_cb", arg: 4, scope: !12684, file: !3, line: 2813, type: !12542)
!12694 = !DILocation(line: 2813, column: 16, scope: !12684)
!12695 = !DILocalVariable(name: "user_data", arg: 5, scope: !12684, file: !3, line: 2813, type: !592)
!12696 = !DILocation(line: 2813, column: 56, scope: !12684)
!12697 = !DILocalVariable(name: "base", scope: !12684, file: !3, line: 2815, type: !5321)
!12698 = !DILocation(line: 2815, column: 8, scope: !12684)
!12699 = !DILocalVariable(name: "ob", scope: !12684, file: !3, line: 2816, type: !5166)
!12700 = !DILocation(line: 2816, column: 10, scope: !12684)
!12701 = !DILocation(line: 2818, column: 14, scope: !12702)
!12702 = distinct !DILexicalBlock(scope: !12684, file: !3, line: 2818, column: 2)
!12703 = !DILocation(line: 2818, column: 12, scope: !12702)
!12704 = !DILocation(line: 2818, column: 7, scope: !12702)
!12705 = !DILocation(line: 2818, column: 25, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12702, file: !3, line: 2818, column: 2)
!12707 = !DILocation(line: 2818, column: 2, scope: !12702)
!12708 = !DILocation(line: 2819, column: 7, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12710, file: !3, line: 2819, column: 7)
!12710 = distinct !DILexicalBlock(scope: !12706, file: !3, line: 2818, column: 50)
!12711 = !DILocation(line: 2819, column: 45, scope: !12709)
!12712 = !DILocation(line: 2819, column: 49, scope: !12709)
!12713 = !DILocation(line: 2819, column: 55, scope: !12709)
!12714 = !DILocation(line: 2819, column: 62, scope: !12709)
!12715 = !DILocation(line: 2819, column: 60, scope: !12709)
!12716 = !DILocation(line: 2819, column: 71, scope: !12709)
!12717 = !DILocation(line: 2819, column: 68, scope: !12709)
!12718 = !DILocation(line: 2819, column: 7, scope: !12710)
!12719 = !DILocation(line: 2820, column: 9, scope: !12720)
!12720 = distinct !DILexicalBlock(scope: !12709, file: !3, line: 2819, column: 77)
!12721 = !DILocation(line: 2820, column: 15, scope: !12720)
!12722 = !DILocation(line: 2820, column: 7, scope: !12720)
!12723 = !DILocation(line: 2822, column: 9, scope: !12724)
!12724 = distinct !DILexicalBlock(scope: !12720, file: !3, line: 2822, column: 8)
!12725 = !DILocation(line: 2822, column: 13, scope: !12724)
!12726 = !DILocation(line: 2822, column: 23, scope: !12724)
!12727 = !DILocation(line: 2822, column: 35, scope: !12724)
!12728 = !DILocation(line: 2822, column: 8, scope: !12720)
!12729 = !DILocation(line: 2823, column: 38, scope: !12730)
!12730 = distinct !DILexicalBlock(scope: !12724, file: !3, line: 2822, column: 41)
!12731 = !DILocation(line: 2823, column: 42, scope: !12730)
!12732 = !DILocation(line: 2823, column: 46, scope: !12730)
!12733 = !DILocation(line: 2823, column: 53, scope: !12730)
!12734 = !DILocation(line: 2823, column: 62, scope: !12730)
!12735 = !DILocation(line: 2823, column: 5, scope: !12730)
!12736 = !DILocation(line: 2824, column: 4, scope: !12730)
!12737 = !DILocalVariable(name: "lb", scope: !12738, file: !3, line: 2826, type: !1209)
!12738 = distinct !DILexicalBlock(scope: !12724, file: !3, line: 2825, column: 9)
!12739 = !DILocation(line: 2826, column: 15, scope: !12738)
!12740 = !DILocalVariable(name: "dob", scope: !12738, file: !3, line: 2827, type: !12444)
!12741 = !DILocation(line: 2827, column: 18, scope: !12738)
!12742 = !DILocation(line: 2829, column: 29, scope: !12738)
!12743 = !DILocation(line: 2829, column: 35, scope: !12738)
!12744 = !DILocation(line: 2829, column: 45, scope: !12738)
!12745 = !DILocation(line: 2829, column: 52, scope: !12738)
!12746 = !DILocation(line: 2829, column: 10, scope: !12738)
!12747 = !DILocation(line: 2829, column: 8, scope: !12738)
!12748 = !DILocation(line: 2830, column: 16, scope: !12749)
!12749 = distinct !DILexicalBlock(scope: !12738, file: !3, line: 2830, column: 5)
!12750 = !DILocation(line: 2830, column: 20, scope: !12749)
!12751 = !DILocation(line: 2830, column: 14, scope: !12749)
!12752 = !DILocation(line: 2830, column: 10, scope: !12749)
!12753 = !DILocation(line: 2830, column: 27, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12749, file: !3, line: 2830, column: 5)
!12755 = !DILocation(line: 2830, column: 5, scope: !12749)
!12756 = !DILocation(line: 2831, column: 10, scope: !12757)
!12757 = distinct !DILexicalBlock(scope: !12758, file: !3, line: 2831, column: 10)
!12758 = distinct !DILexicalBlock(scope: !12754, file: !3, line: 2830, column: 49)
!12759 = !DILocation(line: 2831, column: 15, scope: !12757)
!12760 = !DILocation(line: 2831, column: 23, scope: !12757)
!12761 = !DILocation(line: 2831, column: 10, scope: !12758)
!12762 = !DILocation(line: 2832, column: 40, scope: !12763)
!12763 = distinct !DILexicalBlock(scope: !12757, file: !3, line: 2831, column: 29)
!12764 = !DILocation(line: 2832, column: 45, scope: !12763)
!12765 = !DILocation(line: 2832, column: 49, scope: !12763)
!12766 = !DILocation(line: 2832, column: 54, scope: !12763)
!12767 = !DILocation(line: 2832, column: 59, scope: !12763)
!12768 = !DILocation(line: 2832, column: 68, scope: !12763)
!12769 = !DILocation(line: 2832, column: 7, scope: !12763)
!12770 = !DILocation(line: 2833, column: 6, scope: !12763)
!12771 = !DILocation(line: 2834, column: 5, scope: !12758)
!12772 = !DILocation(line: 2830, column: 38, scope: !12754)
!12773 = !DILocation(line: 2830, column: 43, scope: !12754)
!12774 = !DILocation(line: 2830, column: 36, scope: !12754)
!12775 = !DILocation(line: 2830, column: 5, scope: !12754)
!12776 = distinct !{!12776, !12755, !12777}
!12777 = !DILocation(line: 2834, column: 5, scope: !12749)
!12778 = !DILocation(line: 2835, column: 27, scope: !12738)
!12779 = !DILocation(line: 2835, column: 5, scope: !12738)
!12780 = !DILocation(line: 2837, column: 3, scope: !12720)
!12781 = !DILocation(line: 2838, column: 2, scope: !12710)
!12782 = !DILocation(line: 2818, column: 38, scope: !12706)
!12783 = !DILocation(line: 2818, column: 44, scope: !12706)
!12784 = !DILocation(line: 2818, column: 36, scope: !12706)
!12785 = !DILocation(line: 2818, column: 2, scope: !12706)
!12786 = distinct !{!12786, !12707, !12787}
!12787 = !DILocation(line: 2838, column: 2, scope: !12702)
!12788 = !DILocation(line: 2839, column: 1, scope: !12684)
!12789 = distinct !DISubprogram(name: "BKE_object_tfm_backup", scope: !3, file: !3, line: 2855, type: !12790, scopeLine: 2856, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!12790 = !DISubroutineType(types: !12791)
!12791 = !{!592, !5166}
!12792 = !DILocalVariable(name: "ob", arg: 1, scope: !12789, file: !3, line: 2855, type: !5166)
!12793 = !DILocation(line: 2855, column: 37, scope: !12789)
!12794 = !DILocalVariable(name: "obtfm", scope: !12789, file: !3, line: 2857, type: !5235)
!12795 = !DILocation(line: 2857, column: 13, scope: !12789)
!12796 = !DILocation(line: 2857, column: 21, scope: !12789)
!12797 = !DILocation(line: 2858, column: 13, scope: !12789)
!12798 = !DILocation(line: 2858, column: 20, scope: !12789)
!12799 = !DILocation(line: 2858, column: 25, scope: !12789)
!12800 = !DILocation(line: 2858, column: 29, scope: !12789)
!12801 = !DILocation(line: 2858, column: 2, scope: !12789)
!12802 = !DILocation(line: 2859, column: 13, scope: !12789)
!12803 = !DILocation(line: 2859, column: 20, scope: !12789)
!12804 = !DILocation(line: 2859, column: 26, scope: !12789)
!12805 = !DILocation(line: 2859, column: 30, scope: !12789)
!12806 = !DILocation(line: 2859, column: 2, scope: !12789)
!12807 = !DILocation(line: 2860, column: 13, scope: !12789)
!12808 = !DILocation(line: 2860, column: 20, scope: !12789)
!12809 = !DILocation(line: 2860, column: 26, scope: !12789)
!12810 = !DILocation(line: 2860, column: 30, scope: !12789)
!12811 = !DILocation(line: 2860, column: 2, scope: !12789)
!12812 = !DILocation(line: 2861, column: 13, scope: !12789)
!12813 = !DILocation(line: 2861, column: 20, scope: !12789)
!12814 = !DILocation(line: 2861, column: 26, scope: !12789)
!12815 = !DILocation(line: 2861, column: 30, scope: !12789)
!12816 = !DILocation(line: 2861, column: 2, scope: !12789)
!12817 = !DILocation(line: 2862, column: 13, scope: !12789)
!12818 = !DILocation(line: 2862, column: 20, scope: !12789)
!12819 = !DILocation(line: 2862, column: 28, scope: !12789)
!12820 = !DILocation(line: 2862, column: 32, scope: !12789)
!12821 = !DILocation(line: 2862, column: 2, scope: !12789)
!12822 = !DILocation(line: 2863, column: 13, scope: !12789)
!12823 = !DILocation(line: 2863, column: 20, scope: !12789)
!12824 = !DILocation(line: 2863, column: 25, scope: !12789)
!12825 = !DILocation(line: 2863, column: 29, scope: !12789)
!12826 = !DILocation(line: 2863, column: 2, scope: !12789)
!12827 = !DILocation(line: 2864, column: 13, scope: !12789)
!12828 = !DILocation(line: 2864, column: 20, scope: !12789)
!12829 = !DILocation(line: 2864, column: 26, scope: !12789)
!12830 = !DILocation(line: 2864, column: 30, scope: !12789)
!12831 = !DILocation(line: 2864, column: 2, scope: !12789)
!12832 = !DILocation(line: 2865, column: 13, scope: !12789)
!12833 = !DILocation(line: 2865, column: 20, scope: !12789)
!12834 = !DILocation(line: 2865, column: 26, scope: !12789)
!12835 = !DILocation(line: 2865, column: 30, scope: !12789)
!12836 = !DILocation(line: 2865, column: 2, scope: !12789)
!12837 = !DILocation(line: 2866, column: 13, scope: !12789)
!12838 = !DILocation(line: 2866, column: 20, scope: !12789)
!12839 = !DILocation(line: 2866, column: 27, scope: !12789)
!12840 = !DILocation(line: 2866, column: 31, scope: !12789)
!12841 = !DILocation(line: 2866, column: 2, scope: !12789)
!12842 = !DILocation(line: 2867, column: 13, scope: !12789)
!12843 = !DILocation(line: 2867, column: 20, scope: !12789)
!12844 = !DILocation(line: 2867, column: 29, scope: !12789)
!12845 = !DILocation(line: 2867, column: 33, scope: !12789)
!12846 = !DILocation(line: 2867, column: 2, scope: !12789)
!12847 = !DILocation(line: 2868, column: 13, scope: !12789)
!12848 = !DILocation(line: 2868, column: 20, scope: !12789)
!12849 = !DILocation(line: 2868, column: 30, scope: !12789)
!12850 = !DILocation(line: 2868, column: 34, scope: !12789)
!12851 = !DILocation(line: 2868, column: 2, scope: !12789)
!12852 = !DILocation(line: 2869, column: 20, scope: !12789)
!12853 = !DILocation(line: 2869, column: 24, scope: !12789)
!12854 = !DILocation(line: 2869, column: 2, scope: !12789)
!12855 = !DILocation(line: 2869, column: 9, scope: !12789)
!12856 = !DILocation(line: 2869, column: 18, scope: !12789)
!12857 = !DILocation(line: 2870, column: 21, scope: !12789)
!12858 = !DILocation(line: 2870, column: 25, scope: !12789)
!12859 = !DILocation(line: 2870, column: 2, scope: !12789)
!12860 = !DILocation(line: 2870, column: 9, scope: !12789)
!12861 = !DILocation(line: 2870, column: 19, scope: !12789)
!12862 = !DILocation(line: 2871, column: 13, scope: !12789)
!12863 = !DILocation(line: 2871, column: 20, scope: !12789)
!12864 = !DILocation(line: 2871, column: 27, scope: !12789)
!12865 = !DILocation(line: 2871, column: 31, scope: !12789)
!12866 = !DILocation(line: 2871, column: 2, scope: !12789)
!12867 = !DILocation(line: 2872, column: 13, scope: !12789)
!12868 = !DILocation(line: 2872, column: 20, scope: !12789)
!12869 = !DILocation(line: 2872, column: 31, scope: !12789)
!12870 = !DILocation(line: 2872, column: 35, scope: !12789)
!12871 = !DILocation(line: 2872, column: 2, scope: !12789)
!12872 = !DILocation(line: 2873, column: 13, scope: !12789)
!12873 = !DILocation(line: 2873, column: 20, scope: !12789)
!12874 = !DILocation(line: 2873, column: 30, scope: !12789)
!12875 = !DILocation(line: 2873, column: 34, scope: !12789)
!12876 = !DILocation(line: 2873, column: 2, scope: !12789)
!12877 = !DILocation(line: 2874, column: 13, scope: !12789)
!12878 = !DILocation(line: 2874, column: 20, scope: !12789)
!12879 = !DILocation(line: 2874, column: 26, scope: !12789)
!12880 = !DILocation(line: 2874, column: 30, scope: !12789)
!12881 = !DILocation(line: 2874, column: 2, scope: !12789)
!12882 = !DILocation(line: 2876, column: 17, scope: !12789)
!12883 = !DILocation(line: 2876, column: 9, scope: !12789)
!12884 = !DILocation(line: 2876, column: 2, scope: !12789)
!12885 = distinct !DISubprogram(name: "BKE_object_tfm_restore", scope: !3, file: !3, line: 2879, type: !12886, scopeLine: 2880, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!12886 = !DISubroutineType(types: !12887)
!12887 = !{null, !5166, !592}
!12888 = !DILocalVariable(name: "ob", arg: 1, scope: !12885, file: !3, line: 2879, type: !5166)
!12889 = !DILocation(line: 2879, column: 37, scope: !12885)
!12890 = !DILocalVariable(name: "obtfm_pt", arg: 2, scope: !12885, file: !3, line: 2879, type: !592)
!12891 = !DILocation(line: 2879, column: 47, scope: !12885)
!12892 = !DILocalVariable(name: "obtfm", scope: !12885, file: !3, line: 2881, type: !5235)
!12893 = !DILocation(line: 2881, column: 13, scope: !12885)
!12894 = !DILocation(line: 2881, column: 34, scope: !12885)
!12895 = !DILocation(line: 2881, column: 21, scope: !12885)
!12896 = !DILocation(line: 2882, column: 13, scope: !12885)
!12897 = !DILocation(line: 2882, column: 17, scope: !12885)
!12898 = !DILocation(line: 2882, column: 22, scope: !12885)
!12899 = !DILocation(line: 2882, column: 29, scope: !12885)
!12900 = !DILocation(line: 2882, column: 2, scope: !12885)
!12901 = !DILocation(line: 2883, column: 13, scope: !12885)
!12902 = !DILocation(line: 2883, column: 17, scope: !12885)
!12903 = !DILocation(line: 2883, column: 23, scope: !12885)
!12904 = !DILocation(line: 2883, column: 30, scope: !12885)
!12905 = !DILocation(line: 2883, column: 2, scope: !12885)
!12906 = !DILocation(line: 2884, column: 13, scope: !12885)
!12907 = !DILocation(line: 2884, column: 17, scope: !12885)
!12908 = !DILocation(line: 2884, column: 23, scope: !12885)
!12909 = !DILocation(line: 2884, column: 30, scope: !12885)
!12910 = !DILocation(line: 2884, column: 2, scope: !12885)
!12911 = !DILocation(line: 2885, column: 13, scope: !12885)
!12912 = !DILocation(line: 2885, column: 17, scope: !12885)
!12913 = !DILocation(line: 2885, column: 23, scope: !12885)
!12914 = !DILocation(line: 2885, column: 30, scope: !12885)
!12915 = !DILocation(line: 2885, column: 2, scope: !12885)
!12916 = !DILocation(line: 2886, column: 13, scope: !12885)
!12917 = !DILocation(line: 2886, column: 17, scope: !12885)
!12918 = !DILocation(line: 2886, column: 25, scope: !12885)
!12919 = !DILocation(line: 2886, column: 32, scope: !12885)
!12920 = !DILocation(line: 2886, column: 2, scope: !12885)
!12921 = !DILocation(line: 2887, column: 13, scope: !12885)
!12922 = !DILocation(line: 2887, column: 17, scope: !12885)
!12923 = !DILocation(line: 2887, column: 22, scope: !12885)
!12924 = !DILocation(line: 2887, column: 29, scope: !12885)
!12925 = !DILocation(line: 2887, column: 2, scope: !12885)
!12926 = !DILocation(line: 2888, column: 13, scope: !12885)
!12927 = !DILocation(line: 2888, column: 17, scope: !12885)
!12928 = !DILocation(line: 2888, column: 23, scope: !12885)
!12929 = !DILocation(line: 2888, column: 30, scope: !12885)
!12930 = !DILocation(line: 2888, column: 2, scope: !12885)
!12931 = !DILocation(line: 2889, column: 13, scope: !12885)
!12932 = !DILocation(line: 2889, column: 17, scope: !12885)
!12933 = !DILocation(line: 2889, column: 23, scope: !12885)
!12934 = !DILocation(line: 2889, column: 30, scope: !12885)
!12935 = !DILocation(line: 2889, column: 2, scope: !12885)
!12936 = !DILocation(line: 2890, column: 13, scope: !12885)
!12937 = !DILocation(line: 2890, column: 17, scope: !12885)
!12938 = !DILocation(line: 2890, column: 24, scope: !12885)
!12939 = !DILocation(line: 2890, column: 31, scope: !12885)
!12940 = !DILocation(line: 2890, column: 2, scope: !12885)
!12941 = !DILocation(line: 2891, column: 13, scope: !12885)
!12942 = !DILocation(line: 2891, column: 17, scope: !12885)
!12943 = !DILocation(line: 2891, column: 26, scope: !12885)
!12944 = !DILocation(line: 2891, column: 33, scope: !12885)
!12945 = !DILocation(line: 2891, column: 2, scope: !12885)
!12946 = !DILocation(line: 2892, column: 13, scope: !12885)
!12947 = !DILocation(line: 2892, column: 17, scope: !12885)
!12948 = !DILocation(line: 2892, column: 27, scope: !12885)
!12949 = !DILocation(line: 2892, column: 34, scope: !12885)
!12950 = !DILocation(line: 2892, column: 2, scope: !12885)
!12951 = !DILocation(line: 2893, column: 17, scope: !12885)
!12952 = !DILocation(line: 2893, column: 24, scope: !12885)
!12953 = !DILocation(line: 2893, column: 2, scope: !12885)
!12954 = !DILocation(line: 2893, column: 6, scope: !12885)
!12955 = !DILocation(line: 2893, column: 15, scope: !12885)
!12956 = !DILocation(line: 2894, column: 18, scope: !12885)
!12957 = !DILocation(line: 2894, column: 25, scope: !12885)
!12958 = !DILocation(line: 2894, column: 2, scope: !12885)
!12959 = !DILocation(line: 2894, column: 6, scope: !12885)
!12960 = !DILocation(line: 2894, column: 16, scope: !12885)
!12961 = !DILocation(line: 2895, column: 13, scope: !12885)
!12962 = !DILocation(line: 2895, column: 17, scope: !12885)
!12963 = !DILocation(line: 2895, column: 24, scope: !12885)
!12964 = !DILocation(line: 2895, column: 31, scope: !12885)
!12965 = !DILocation(line: 2895, column: 2, scope: !12885)
!12966 = !DILocation(line: 2896, column: 13, scope: !12885)
!12967 = !DILocation(line: 2896, column: 17, scope: !12885)
!12968 = !DILocation(line: 2896, column: 28, scope: !12885)
!12969 = !DILocation(line: 2896, column: 35, scope: !12885)
!12970 = !DILocation(line: 2896, column: 2, scope: !12885)
!12971 = !DILocation(line: 2897, column: 13, scope: !12885)
!12972 = !DILocation(line: 2897, column: 17, scope: !12885)
!12973 = !DILocation(line: 2897, column: 27, scope: !12885)
!12974 = !DILocation(line: 2897, column: 34, scope: !12885)
!12975 = !DILocation(line: 2897, column: 2, scope: !12885)
!12976 = !DILocation(line: 2898, column: 13, scope: !12885)
!12977 = !DILocation(line: 2898, column: 17, scope: !12885)
!12978 = !DILocation(line: 2898, column: 23, scope: !12885)
!12979 = !DILocation(line: 2898, column: 30, scope: !12885)
!12980 = !DILocation(line: 2898, column: 2, scope: !12885)
!12981 = !DILocation(line: 2899, column: 1, scope: !12885)
!12982 = distinct !DISubprogram(name: "BKE_object_parent_loop_check", scope: !3, file: !3, line: 2901, type: !12983, scopeLine: 2902, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!12983 = !DISubroutineType(types: !12984)
!12984 = !{!1788, !9016, !9016}
!12985 = !DILocalVariable(name: "par", arg: 1, scope: !12982, file: !3, line: 2901, type: !9016)
!12986 = !DILocation(line: 2901, column: 49, scope: !12982)
!12987 = !DILocalVariable(name: "ob", arg: 2, scope: !12982, file: !3, line: 2901, type: !9016)
!12988 = !DILocation(line: 2901, column: 68, scope: !12982)
!12989 = !DILocation(line: 2904, column: 6, scope: !12990)
!12990 = distinct !DILexicalBlock(scope: !12982, file: !3, line: 2904, column: 6)
!12991 = !DILocation(line: 2904, column: 10, scope: !12990)
!12992 = !DILocation(line: 2904, column: 6, scope: !12982)
!12993 = !DILocation(line: 2904, column: 19, scope: !12990)
!12994 = !DILocation(line: 2905, column: 6, scope: !12995)
!12995 = distinct !DILexicalBlock(scope: !12982, file: !3, line: 2905, column: 6)
!12996 = !DILocation(line: 2905, column: 12, scope: !12995)
!12997 = !DILocation(line: 2905, column: 9, scope: !12995)
!12998 = !DILocation(line: 2905, column: 6, scope: !12982)
!12999 = !DILocation(line: 2905, column: 17, scope: !12995)
!13000 = !DILocation(line: 2906, column: 38, scope: !12982)
!13001 = !DILocation(line: 2906, column: 43, scope: !12982)
!13002 = !DILocation(line: 2906, column: 51, scope: !12982)
!13003 = !DILocation(line: 2906, column: 9, scope: !12982)
!13004 = !DILocation(line: 2906, column: 2, scope: !12982)
!13005 = !DILocation(line: 2907, column: 1, scope: !12982)
!13006 = distinct !DISubprogram(name: "BKE_object_handle_update_ex", scope: !3, file: !3, line: 2917, type: !13007, scopeLine: 2921, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!13007 = !DISubroutineType(types: !13008)
!13008 = !{null, !13009, !6411, !5166, !11101, !3482}
!13009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13010, size: 64)
!13010 = !DIDerivedType(tag: DW_TAG_typedef, name: "EvaluationContext", file: !438, line: 60, baseType: !6363)
!13011 = !DILocalVariable(name: "eval_ctx", arg: 1, scope: !13006, file: !3, line: 2917, type: !13009)
!13012 = !DILocation(line: 2917, column: 53, scope: !13006)
!13013 = !DILocalVariable(name: "scene", arg: 2, scope: !13006, file: !3, line: 2918, type: !6411)
!13014 = !DILocation(line: 2918, column: 41, scope: !13006)
!13015 = !DILocalVariable(name: "ob", arg: 3, scope: !13006, file: !3, line: 2918, type: !5166)
!13016 = !DILocation(line: 2918, column: 56, scope: !13006)
!13017 = !DILocalVariable(name: "rbw", arg: 4, scope: !13006, file: !3, line: 2919, type: !11101)
!13018 = !DILocation(line: 2919, column: 50, scope: !13006)
!13019 = !DILocalVariable(name: "do_proxy_update", arg: 5, scope: !13006, file: !3, line: 2920, type: !3482)
!13020 = !DILocation(line: 2920, column: 45, scope: !13006)
!13021 = !DILocation(line: 2922, column: 6, scope: !13022)
!13022 = distinct !DILexicalBlock(scope: !13006, file: !3, line: 2922, column: 6)
!13023 = !DILocation(line: 2922, column: 10, scope: !13022)
!13024 = !DILocation(line: 2922, column: 17, scope: !13022)
!13025 = !DILocation(line: 2922, column: 6, scope: !13006)
!13026 = !DILocation(line: 2924, column: 7, scope: !13027)
!13027 = distinct !DILexicalBlock(scope: !13028, file: !3, line: 2924, column: 7)
!13028 = distinct !DILexicalBlock(scope: !13022, file: !3, line: 2922, column: 34)
!13029 = !DILocation(line: 2924, column: 11, scope: !13027)
!13030 = !DILocation(line: 2924, column: 7, scope: !13028)
!13031 = !DILocation(line: 2925, column: 32, scope: !13027)
!13032 = !DILocation(line: 2925, column: 36, scope: !13027)
!13033 = !DILocation(line: 2925, column: 4, scope: !13027)
!13034 = !DILocation(line: 2927, column: 7, scope: !13035)
!13035 = distinct !DILexicalBlock(scope: !13028, file: !3, line: 2927, column: 7)
!13036 = !DILocation(line: 2927, column: 11, scope: !13035)
!13037 = !DILocation(line: 2927, column: 18, scope: !13035)
!13038 = !DILocation(line: 2927, column: 7, scope: !13028)
!13039 = !DILocation(line: 2928, column: 8, scope: !13040)
!13040 = distinct !DILexicalBlock(scope: !13041, file: !3, line: 2928, column: 8)
!13041 = distinct !DILexicalBlock(scope: !13035, file: !3, line: 2927, column: 36)
!13042 = !DILocation(line: 2928, column: 12, scope: !13040)
!13043 = !DILocation(line: 2928, column: 17, scope: !13040)
!13044 = !DILocation(line: 2928, column: 8, scope: !13041)
!13045 = !DILocation(line: 2933, column: 9, scope: !13046)
!13046 = distinct !DILexicalBlock(scope: !13047, file: !3, line: 2933, column: 9)
!13047 = distinct !DILexicalBlock(scope: !13040, file: !3, line: 2928, column: 33)
!13048 = !DILocation(line: 2933, column: 13, scope: !13046)
!13049 = !DILocation(line: 2933, column: 18, scope: !13046)
!13050 = !DILocation(line: 2933, column: 26, scope: !13046)
!13051 = !DILocation(line: 2933, column: 30, scope: !13046)
!13052 = !DILocation(line: 2933, column: 34, scope: !13046)
!13053 = !DILocation(line: 2933, column: 40, scope: !13046)
!13054 = !DILocation(line: 2933, column: 45, scope: !13046)
!13055 = !DILocation(line: 2933, column: 9, scope: !13047)
!13056 = !DILocation(line: 2934, column: 23, scope: !13046)
!13057 = !DILocation(line: 2934, column: 27, scope: !13046)
!13058 = !DILocation(line: 2934, column: 31, scope: !13046)
!13059 = !DILocation(line: 2934, column: 6, scope: !13046)
!13060 = !DILocation(line: 2935, column: 4, scope: !13047)
!13061 = !DILocation(line: 2936, column: 3, scope: !13041)
!13062 = !DILocation(line: 2941, column: 7, scope: !13063)
!13063 = distinct !DILexicalBlock(scope: !13028, file: !3, line: 2941, column: 7)
!13064 = !DILocation(line: 2941, column: 11, scope: !13063)
!13065 = !DILocation(line: 2941, column: 18, scope: !13063)
!13066 = !DILocation(line: 2941, column: 7, scope: !13028)
!13067 = !DILocation(line: 2943, column: 10, scope: !13068)
!13068 = distinct !DILexicalBlock(scope: !13069, file: !3, line: 2943, column: 8)
!13069 = distinct !DILexicalBlock(scope: !13063, file: !3, line: 2941, column: 35)
!13070 = !DILocation(line: 2943, column: 16, scope: !13068)
!13071 = !DILocation(line: 2943, column: 8, scope: !13069)
!13072 = !DILocation(line: 2944, column: 29, scope: !13068)
!13073 = !DILocation(line: 2944, column: 33, scope: !13068)
!13074 = !DILocation(line: 2944, column: 36, scope: !13068)
!13075 = !DILocation(line: 2944, column: 41, scope: !13068)
!13076 = !DILocation(line: 2944, column: 5, scope: !13068)
!13077 = !DILocation(line: 2947, column: 8, scope: !13078)
!13078 = distinct !DILexicalBlock(scope: !13069, file: !3, line: 2947, column: 8)
!13079 = !DILocation(line: 2947, column: 12, scope: !13078)
!13080 = !DILocation(line: 2947, column: 15, scope: !13078)
!13081 = !DILocation(line: 2947, column: 19, scope: !13078)
!13082 = !DILocation(line: 2947, column: 22, scope: !13078)
!13083 = !DILocation(line: 2947, column: 26, scope: !13078)
!13084 = !DILocation(line: 2947, column: 8, scope: !13069)
!13085 = !DILocation(line: 2949, column: 9, scope: !13086)
!13086 = distinct !DILexicalBlock(scope: !13087, file: !3, line: 2949, column: 9)
!13087 = distinct !DILexicalBlock(scope: !13078, file: !3, line: 2947, column: 38)
!13088 = !DILocation(line: 2949, column: 13, scope: !13086)
!13089 = !DILocation(line: 2949, column: 25, scope: !13086)
!13090 = !DILocation(line: 2949, column: 9, scope: !13087)
!13091 = !DILocalVariable(name: "obg", scope: !13092, file: !3, line: 2950, type: !5166)
!13092 = distinct !DILexicalBlock(scope: !13086, file: !3, line: 2949, column: 38)
!13093 = !DILocation(line: 2950, column: 14, scope: !13092)
!13094 = !DILocation(line: 2950, column: 20, scope: !13092)
!13095 = !DILocation(line: 2950, column: 24, scope: !13092)
!13096 = !DILocation(line: 2950, column: 36, scope: !13092)
!13097 = !DILocation(line: 2951, column: 19, scope: !13092)
!13098 = !DILocation(line: 2951, column: 24, scope: !13092)
!13099 = !DILocation(line: 2951, column: 30, scope: !13092)
!13100 = !DILocation(line: 2951, column: 35, scope: !13092)
!13101 = !DILocation(line: 2951, column: 6, scope: !13092)
!13102 = !DILocation(line: 2952, column: 18, scope: !13092)
!13103 = !DILocation(line: 2952, column: 22, scope: !13092)
!13104 = !DILocation(line: 2952, column: 29, scope: !13092)
!13105 = !DILocation(line: 2952, column: 34, scope: !13092)
!13106 = !DILocation(line: 2952, column: 40, scope: !13092)
!13107 = !DILocation(line: 2952, column: 44, scope: !13092)
!13108 = !DILocation(line: 2952, column: 56, scope: !13092)
!13109 = !DILocation(line: 2952, column: 6, scope: !13092)
!13110 = !DILocation(line: 2953, column: 10, scope: !13111)
!13111 = distinct !DILexicalBlock(scope: !13092, file: !3, line: 2953, column: 10)
!13112 = !DILocation(line: 2953, column: 15, scope: !13111)
!13113 = !DILocation(line: 2953, column: 10, scope: !13092)
!13114 = !DILocation(line: 2954, column: 17, scope: !13115)
!13115 = distinct !DILexicalBlock(scope: !13111, file: !3, line: 2953, column: 26)
!13116 = !DILocation(line: 2954, column: 21, scope: !13115)
!13117 = !DILocation(line: 2954, column: 31, scope: !13115)
!13118 = !DILocation(line: 2954, column: 36, scope: !13115)
!13119 = !DILocation(line: 2954, column: 47, scope: !13115)
!13120 = !DILocation(line: 2954, column: 7, scope: !13115)
!13121 = !DILocation(line: 2955, column: 6, scope: !13115)
!13122 = !DILocation(line: 2956, column: 5, scope: !13092)
!13123 = !DILocation(line: 2958, column: 17, scope: !13086)
!13124 = !DILocation(line: 2958, column: 21, scope: !13086)
!13125 = !DILocation(line: 2958, column: 28, scope: !13086)
!13126 = !DILocation(line: 2958, column: 32, scope: !13086)
!13127 = !DILocation(line: 2958, column: 44, scope: !13086)
!13128 = !DILocation(line: 2958, column: 6, scope: !13086)
!13129 = !DILocation(line: 2959, column: 4, scope: !13087)
!13130 = !DILocation(line: 2961, column: 33, scope: !13078)
!13131 = !DILocation(line: 2961, column: 40, scope: !13078)
!13132 = !DILocation(line: 2961, column: 45, scope: !13078)
!13133 = !DILocation(line: 2961, column: 5, scope: !13078)
!13134 = !DILocation(line: 2962, column: 3, scope: !13069)
!13135 = !DILocation(line: 2964, column: 7, scope: !13136)
!13136 = distinct !DILexicalBlock(scope: !13028, file: !3, line: 2964, column: 7)
!13137 = !DILocation(line: 2964, column: 11, scope: !13136)
!13138 = !DILocation(line: 2964, column: 18, scope: !13136)
!13139 = !DILocation(line: 2964, column: 7, scope: !13028)
!13140 = !DILocalVariable(name: "data_id", scope: !13141, file: !3, line: 2965, type: !613)
!13141 = distinct !DILexicalBlock(scope: !13136, file: !3, line: 2964, column: 36)
!13142 = !DILocation(line: 2965, column: 8, scope: !13141)
!13143 = !DILocation(line: 2965, column: 24, scope: !13141)
!13144 = !DILocation(line: 2965, column: 28, scope: !13141)
!13145 = !DILocation(line: 2965, column: 18, scope: !13141)
!13146 = !DILocalVariable(name: "adt", scope: !13141, file: !3, line: 2966, type: !13147)
!13147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13148, size: 64)
!13148 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimData", file: !343, line: 869, baseType: !670)
!13149 = !DILocation(line: 2966, column: 14, scope: !13141)
!13150 = !DILocation(line: 2966, column: 41, scope: !13141)
!13151 = !DILocation(line: 2966, column: 20, scope: !13141)
!13152 = !DILocalVariable(name: "key", scope: !13141, file: !3, line: 2967, type: !13153)
!13153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13154, size: 64)
!13154 = !DIDerivedType(tag: DW_TAG_typedef, name: "Key", file: !587, line: 105, baseType: !754)
!13155 = !DILocation(line: 2967, column: 9, scope: !13141)
!13156 = !DILocalVariable(name: "ctime", scope: !13141, file: !3, line: 2968, type: !713)
!13157 = !DILocation(line: 2968, column: 10, scope: !13141)
!13158 = !DILocation(line: 2968, column: 38, scope: !13141)
!13159 = !DILocation(line: 2968, column: 18, scope: !13141)
!13160 = !DILocation(line: 2970, column: 10, scope: !13161)
!13161 = distinct !DILexicalBlock(scope: !13141, file: !3, line: 2970, column: 8)
!13162 = !DILocation(line: 2970, column: 16, scope: !13161)
!13163 = !DILocation(line: 2970, column: 8, scope: !13141)
!13164 = !DILocation(line: 2971, column: 31, scope: !13161)
!13165 = !DILocation(line: 2971, column: 35, scope: !13161)
!13166 = !DILocation(line: 2971, column: 38, scope: !13161)
!13167 = !DILocation(line: 2971, column: 43, scope: !13161)
!13168 = !DILocation(line: 2971, column: 5, scope: !13161)
!13169 = !DILocation(line: 2973, column: 8, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13141, file: !3, line: 2973, column: 8)
!13171 = !DILocation(line: 2973, column: 8, scope: !13141)
!13172 = !DILocation(line: 2976, column: 35, scope: !13173)
!13173 = distinct !DILexicalBlock(scope: !13170, file: !3, line: 2973, column: 13)
!13174 = !DILocation(line: 2976, column: 42, scope: !13173)
!13175 = !DILocation(line: 2976, column: 51, scope: !13173)
!13176 = !DILocation(line: 2976, column: 56, scope: !13173)
!13177 = !DILocation(line: 2976, column: 5, scope: !13173)
!13178 = !DILocation(line: 2977, column: 4, scope: !13173)
!13179 = !DILocation(line: 2979, column: 30, scope: !13141)
!13180 = !DILocation(line: 2979, column: 10, scope: !13141)
!13181 = !DILocation(line: 2979, column: 8, scope: !13141)
!13182 = !DILocation(line: 2980, column: 8, scope: !13183)
!13183 = distinct !DILexicalBlock(scope: !13141, file: !3, line: 2980, column: 8)
!13184 = !DILocation(line: 2980, column: 12, scope: !13183)
!13185 = !DILocation(line: 2980, column: 15, scope: !13183)
!13186 = !DILocation(line: 2980, column: 20, scope: !13183)
!13187 = !DILocation(line: 2980, column: 26, scope: !13183)
!13188 = !DILocation(line: 2980, column: 8, scope: !13141)
!13189 = !DILocation(line: 2981, column: 11, scope: !13190)
!13190 = distinct !DILexicalBlock(scope: !13191, file: !3, line: 2981, column: 9)
!13191 = distinct !DILexicalBlock(scope: !13183, file: !3, line: 2980, column: 33)
!13192 = !DILocation(line: 2981, column: 15, scope: !13190)
!13193 = !DILocation(line: 2981, column: 25, scope: !13190)
!13194 = !DILocation(line: 2981, column: 9, scope: !13191)
!13195 = !DILocation(line: 2982, column: 36, scope: !13190)
!13196 = !DILocation(line: 2982, column: 44, scope: !13190)
!13197 = !DILocation(line: 2982, column: 49, scope: !13190)
!13198 = !DILocation(line: 2982, column: 53, scope: !13190)
!13199 = !DILocation(line: 2982, column: 58, scope: !13190)
!13200 = !DILocation(line: 2982, column: 63, scope: !13190)
!13201 = !DILocation(line: 2982, column: 6, scope: !13190)
!13202 = !DILocation(line: 2983, column: 4, scope: !13191)
!13203 = !DILocation(line: 2986, column: 12, scope: !13141)
!13204 = !DILocation(line: 2986, column: 16, scope: !13141)
!13205 = !DILocation(line: 2986, column: 4, scope: !13141)
!13206 = !DILocalVariable(name: "em", scope: !13207, file: !3, line: 2989, type: !13209)
!13207 = distinct !DILexicalBlock(scope: !13208, file: !3, line: 2988, column: 5)
!13208 = distinct !DILexicalBlock(scope: !13141, file: !3, line: 2986, column: 22)
!13209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13210, size: 64)
!13210 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEditMesh", file: !4396, line: 83, baseType: !4395)
!13211 = !DILocation(line: 2989, column: 18, scope: !13207)
!13212 = !DILocation(line: 2989, column: 24, scope: !13207)
!13213 = !DILocation(line: 2989, column: 30, scope: !13207)
!13214 = !DILocation(line: 2989, column: 37, scope: !13207)
!13215 = !DILocation(line: 2989, column: 27, scope: !13207)
!13216 = !DILocation(line: 2989, column: 23, scope: !13207)
!13217 = !DILocation(line: 2989, column: 72, scope: !13207)
!13218 = !DILocation(line: 2989, column: 47, scope: !13207)
!13219 = !DILocalVariable(name: "data_mask", scope: !13207, file: !3, line: 2990, type: !2359)
!13220 = !DILocation(line: 2990, column: 15, scope: !13207)
!13221 = !DILocation(line: 2990, column: 27, scope: !13207)
!13222 = !DILocation(line: 2990, column: 34, scope: !13207)
!13223 = !DILocation(line: 2990, column: 52, scope: !13207)
!13224 = !DILocation(line: 2990, column: 50, scope: !13207)
!13225 = !DILocation(line: 2997, column: 10, scope: !13226)
!13226 = distinct !DILexicalBlock(scope: !13207, file: !3, line: 2997, column: 10)
!13227 = !DILocation(line: 2997, column: 10, scope: !13207)
!13228 = !DILocation(line: 2998, column: 23, scope: !13229)
!13229 = distinct !DILexicalBlock(scope: !13226, file: !3, line: 2997, column: 14)
!13230 = !DILocation(line: 2998, column: 30, scope: !13229)
!13231 = !DILocation(line: 2998, column: 34, scope: !13229)
!13232 = !DILocation(line: 2998, column: 39, scope: !13229)
!13233 = !DILocation(line: 2998, column: 7, scope: !13229)
!13234 = !DILocation(line: 2999, column: 6, scope: !13229)
!13235 = !DILocation(line: 3001, column: 23, scope: !13236)
!13236 = distinct !DILexicalBlock(scope: !13226, file: !3, line: 3000, column: 11)
!13237 = !DILocation(line: 3001, column: 30, scope: !13236)
!13238 = !DILocation(line: 3001, column: 40, scope: !13236)
!13239 = !DILocation(line: 3001, column: 7, scope: !13236)
!13240 = !DILocation(line: 3003, column: 6, scope: !13207)
!13241 = !DILocation(line: 3006, column: 10, scope: !13242)
!13242 = distinct !DILexicalBlock(scope: !13208, file: !3, line: 3006, column: 10)
!13243 = !DILocation(line: 3006, column: 14, scope: !13242)
!13244 = !DILocation(line: 3006, column: 17, scope: !13242)
!13245 = !DILocation(line: 3006, column: 21, scope: !13242)
!13246 = !DILocation(line: 3006, column: 24, scope: !13242)
!13247 = !DILocation(line: 3006, column: 28, scope: !13242)
!13248 = !DILocation(line: 3006, column: 10, scope: !13208)
!13249 = !DILocation(line: 3007, column: 32, scope: !13250)
!13250 = distinct !DILexicalBlock(scope: !13251, file: !3, line: 3007, column: 11)
!13251 = distinct !DILexicalBlock(scope: !13242, file: !3, line: 3006, column: 40)
!13252 = !DILocation(line: 3007, column: 36, scope: !13250)
!13253 = !DILocation(line: 3007, column: 42, scope: !13250)
!13254 = !DILocation(line: 3007, column: 46, scope: !13250)
!13255 = !DILocation(line: 3007, column: 58, scope: !13250)
!13256 = !DILocation(line: 3007, column: 11, scope: !13250)
!13257 = !DILocation(line: 3007, column: 64, scope: !13250)
!13258 = !DILocation(line: 3007, column: 11, scope: !13251)
!13259 = !DILocation(line: 3009, column: 15, scope: !13260)
!13260 = distinct !DILexicalBlock(scope: !13250, file: !3, line: 3007, column: 74)
!13261 = !DILocation(line: 3009, column: 19, scope: !13260)
!13262 = !DILocation(line: 3009, column: 22, scope: !13260)
!13263 = !DILocation(line: 3009, column: 27, scope: !13260)
!13264 = !DILocation(line: 3009, column: 32, scope: !13260)
!13265 = !DILocation(line: 3009, column: 36, scope: !13260)
!13266 = !DILocation(line: 3009, column: 48, scope: !13260)
!13267 = !DILocation(line: 3009, column: 51, scope: !13260)
!13268 = !DILocation(line: 3009, column: 56, scope: !13260)
!13269 = !DILocation(line: 3008, column: 8, scope: !13260)
!13270 = !DILocation(line: 3010, column: 7, scope: !13260)
!13271 = !DILocation(line: 3011, column: 6, scope: !13251)
!13272 = !DILocation(line: 3013, column: 25, scope: !13273)
!13273 = distinct !DILexicalBlock(scope: !13242, file: !3, line: 3012, column: 11)
!13274 = !DILocation(line: 3013, column: 32, scope: !13273)
!13275 = !DILocation(line: 3013, column: 7, scope: !13273)
!13276 = !DILocation(line: 3015, column: 6, scope: !13208)
!13277 = !DILocation(line: 3018, column: 30, scope: !13208)
!13278 = !DILocation(line: 3018, column: 40, scope: !13208)
!13279 = !DILocation(line: 3018, column: 47, scope: !13208)
!13280 = !DILocation(line: 3018, column: 6, scope: !13208)
!13281 = !DILocation(line: 3019, column: 6, scope: !13208)
!13282 = !DILocation(line: 3024, column: 35, scope: !13208)
!13283 = !DILocation(line: 3024, column: 42, scope: !13208)
!13284 = !DILocation(line: 3024, column: 6, scope: !13208)
!13285 = !DILocation(line: 3025, column: 6, scope: !13208)
!13286 = !DILocation(line: 3028, column: 33, scope: !13208)
!13287 = !DILocation(line: 3028, column: 40, scope: !13208)
!13288 = !DILocation(line: 3028, column: 6, scope: !13208)
!13289 = !DILocation(line: 3029, column: 6, scope: !13208)
!13290 = !DILocation(line: 3032, column: 10, scope: !13291)
!13291 = distinct !DILexicalBlock(scope: !13208, file: !3, line: 3032, column: 10)
!13292 = !DILocation(line: 3032, column: 14, scope: !13291)
!13293 = !DILocation(line: 3032, column: 29, scope: !13291)
!13294 = !DILocation(line: 3032, column: 47, scope: !13291)
!13295 = !DILocation(line: 3032, column: 50, scope: !13291)
!13296 = !DILocation(line: 3032, column: 54, scope: !13291)
!13297 = !DILocation(line: 3032, column: 10, scope: !13208)
!13298 = !DILocation(line: 3033, column: 33, scope: !13299)
!13299 = distinct !DILexicalBlock(scope: !13291, file: !3, line: 3033, column: 11)
!13300 = !DILocation(line: 3033, column: 37, scope: !13299)
!13301 = !DILocation(line: 3033, column: 11, scope: !13299)
!13302 = !DILocation(line: 3033, column: 11, scope: !13291)
!13303 = !DILocation(line: 3034, column: 40, scope: !13299)
!13304 = !DILocation(line: 3034, column: 44, scope: !13299)
!13305 = !DILocation(line: 3034, column: 56, scope: !13299)
!13306 = !DILocation(line: 3034, column: 51, scope: !13299)
!13307 = !DILocation(line: 3034, column: 8, scope: !13299)
!13308 = !DILocation(line: 3033, column: 41, scope: !13299)
!13309 = !DILocation(line: 3035, column: 6, scope: !13208)
!13310 = !DILocation(line: 3043, column: 8, scope: !13311)
!13311 = distinct !DILexicalBlock(scope: !13141, file: !3, line: 3043, column: 8)
!13312 = !DILocation(line: 3043, column: 12, scope: !13311)
!13313 = !DILocation(line: 3043, column: 8, scope: !13141)
!13314 = !DILocalVariable(name: "a", scope: !13315, file: !3, line: 3044, type: !73)
!13315 = distinct !DILexicalBlock(scope: !13311, file: !3, line: 3043, column: 20)
!13316 = !DILocation(line: 3044, column: 9, scope: !13315)
!13317 = !DILocation(line: 3046, column: 12, scope: !13318)
!13318 = distinct !DILexicalBlock(scope: !13315, file: !3, line: 3046, column: 5)
!13319 = !DILocation(line: 3046, column: 10, scope: !13318)
!13320 = !DILocation(line: 3046, column: 17, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13318, file: !3, line: 3046, column: 5)
!13322 = !DILocation(line: 3046, column: 22, scope: !13321)
!13323 = !DILocation(line: 3046, column: 26, scope: !13321)
!13324 = !DILocation(line: 3046, column: 19, scope: !13321)
!13325 = !DILocation(line: 3046, column: 5, scope: !13318)
!13326 = !DILocalVariable(name: "ma", scope: !13327, file: !3, line: 3047, type: !6374)
!13327 = distinct !DILexicalBlock(scope: !13321, file: !3, line: 3046, column: 39)
!13328 = !DILocation(line: 3047, column: 16, scope: !13327)
!13329 = !DILocation(line: 3047, column: 43, scope: !13327)
!13330 = !DILocation(line: 3047, column: 47, scope: !13327)
!13331 = !DILocation(line: 3047, column: 21, scope: !13327)
!13332 = !DILocation(line: 3049, column: 10, scope: !13333)
!13333 = distinct !DILexicalBlock(scope: !13327, file: !3, line: 3049, column: 10)
!13334 = !DILocation(line: 3049, column: 10, scope: !13327)
!13335 = !DILocation(line: 3051, column: 31, scope: !13336)
!13336 = distinct !DILexicalBlock(scope: !13333, file: !3, line: 3049, column: 14)
!13337 = !DILocation(line: 3051, column: 38, scope: !13336)
!13338 = !DILocation(line: 3051, column: 42, scope: !13336)
!13339 = !DILocation(line: 3051, column: 7, scope: !13336)
!13340 = !DILocation(line: 3052, column: 6, scope: !13336)
!13341 = !DILocation(line: 3053, column: 5, scope: !13327)
!13342 = !DILocation(line: 3046, column: 35, scope: !13321)
!13343 = !DILocation(line: 3046, column: 5, scope: !13321)
!13344 = distinct !{!13344, !13325, !13345}
!13345 = !DILocation(line: 3053, column: 5, scope: !13318)
!13346 = !DILocation(line: 3054, column: 4, scope: !13315)
!13347 = !DILocation(line: 3055, column: 13, scope: !13348)
!13348 = distinct !DILexicalBlock(scope: !13311, file: !3, line: 3055, column: 13)
!13349 = !DILocation(line: 3055, column: 17, scope: !13348)
!13350 = !DILocation(line: 3055, column: 22, scope: !13348)
!13351 = !DILocation(line: 3055, column: 13, scope: !13311)
!13352 = !DILocation(line: 3056, column: 25, scope: !13348)
!13353 = !DILocation(line: 3056, column: 32, scope: !13348)
!13354 = !DILocation(line: 3056, column: 36, scope: !13348)
!13355 = !DILocation(line: 3056, column: 42, scope: !13348)
!13356 = !DILocation(line: 3056, column: 5, scope: !13348)
!13357 = !DILocation(line: 3059, column: 8, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13141, file: !3, line: 3059, column: 8)
!13359 = !DILocation(line: 3059, column: 14, scope: !13358)
!13360 = !DILocation(line: 3059, column: 21, scope: !13358)
!13361 = !DILocation(line: 3059, column: 11, scope: !13358)
!13362 = !DILocation(line: 3059, column: 28, scope: !13358)
!13363 = !DILocation(line: 3059, column: 31, scope: !13358)
!13364 = !DILocation(line: 3059, column: 35, scope: !13358)
!13365 = !DILocation(line: 3059, column: 50, scope: !13358)
!13366 = !DILocation(line: 3059, column: 8, scope: !13141)
!13367 = !DILocalVariable(name: "tpsys", scope: !13368, file: !3, line: 3060, type: !5351)
!13368 = distinct !DILexicalBlock(scope: !13358, file: !3, line: 3059, column: 57)
!13369 = !DILocation(line: 3060, column: 21, scope: !13368)
!13370 = !DILocalVariable(name: "psys", scope: !13368, file: !3, line: 3060, type: !5351)
!13371 = !DILocation(line: 3060, column: 29, scope: !13368)
!13372 = !DILocalVariable(name: "dm", scope: !13368, file: !3, line: 3061, type: !3203)
!13373 = !DILocation(line: 3061, column: 18, scope: !13368)
!13374 = !DILocation(line: 3062, column: 5, scope: !13368)
!13375 = !DILocation(line: 3062, column: 9, scope: !13368)
!13376 = !DILocation(line: 3062, column: 19, scope: !13368)
!13377 = !DILocation(line: 3064, column: 12, scope: !13368)
!13378 = !DILocation(line: 3064, column: 16, scope: !13368)
!13379 = !DILocation(line: 3064, column: 31, scope: !13368)
!13380 = !DILocation(line: 3064, column: 10, scope: !13368)
!13381 = !DILocation(line: 3065, column: 5, scope: !13368)
!13382 = !DILocation(line: 3065, column: 12, scope: !13368)
!13383 = !DILocation(line: 3067, column: 10, scope: !13384)
!13384 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 3067, column: 10)
!13385 = distinct !DILexicalBlock(scope: !13368, file: !3, line: 3065, column: 18)
!13386 = !DILocation(line: 3067, column: 16, scope: !13384)
!13387 = !DILocation(line: 3067, column: 23, scope: !13384)
!13388 = !DILocation(line: 3067, column: 10, scope: !13385)
!13389 = !DILocation(line: 3068, column: 25, scope: !13390)
!13390 = distinct !DILexicalBlock(scope: !13384, file: !3, line: 3067, column: 43)
!13391 = !DILocation(line: 3068, column: 29, scope: !13390)
!13392 = !DILocation(line: 3068, column: 7, scope: !13390)
!13393 = !DILocation(line: 3069, column: 6, scope: !13390)
!13394 = !DILocation(line: 3071, column: 29, scope: !13395)
!13395 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 3071, column: 10)
!13396 = !DILocation(line: 3071, column: 33, scope: !13395)
!13397 = !DILocation(line: 3071, column: 10, scope: !13395)
!13398 = !DILocation(line: 3071, column: 10, scope: !13385)
!13399 = !DILocation(line: 3073, column: 11, scope: !13400)
!13400 = distinct !DILexicalBlock(scope: !13401, file: !3, line: 3073, column: 11)
!13401 = distinct !DILexicalBlock(scope: !13395, file: !3, line: 3071, column: 40)
!13402 = !DILocation(line: 3073, column: 17, scope: !13400)
!13403 = !DILocation(line: 3073, column: 22, scope: !13400)
!13404 = !DILocation(line: 3073, column: 26, scope: !13400)
!13405 = !DILocation(line: 3073, column: 32, scope: !13400)
!13406 = !DILocation(line: 3073, column: 38, scope: !13400)
!13407 = !DILocation(line: 3073, column: 46, scope: !13400)
!13408 = !DILocation(line: 3073, column: 64, scope: !13400)
!13409 = !DILocation(line: 3073, column: 67, scope: !13400)
!13410 = !DILocation(line: 3073, column: 77, scope: !13400)
!13411 = !DILocation(line: 3073, column: 82, scope: !13400)
!13412 = !DILocation(line: 3073, column: 102, scope: !13400)
!13413 = !DILocation(line: 3074, column: 13, scope: !13400)
!13414 = !DILocation(line: 3074, column: 19, scope: !13400)
!13415 = !DILocation(line: 3074, column: 25, scope: !13400)
!13416 = !DILocation(line: 3074, column: 32, scope: !13400)
!13417 = !DILocation(line: 3074, column: 48, scope: !13400)
!13418 = !DILocation(line: 3074, column: 51, scope: !13400)
!13419 = !DILocation(line: 3074, column: 57, scope: !13400)
!13420 = !DILocation(line: 3074, column: 63, scope: !13400)
!13421 = !DILocation(line: 3074, column: 71, scope: !13400)
!13422 = !DILocation(line: 3075, column: 13, scope: !13400)
!13423 = !DILocation(line: 3075, column: 19, scope: !13400)
!13424 = !DILocation(line: 3075, column: 25, scope: !13400)
!13425 = !DILocation(line: 3075, column: 32, scope: !13400)
!13426 = !DILocation(line: 3075, column: 48, scope: !13400)
!13427 = !DILocation(line: 3075, column: 51, scope: !13400)
!13428 = !DILocation(line: 3075, column: 57, scope: !13400)
!13429 = !DILocation(line: 3075, column: 63, scope: !13400)
!13430 = !DILocation(line: 3073, column: 11, scope: !13401)
!13431 = !DILocation(line: 3077, column: 8, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !13400, file: !3, line: 3076, column: 7)
!13433 = !DILocation(line: 3077, column: 12, scope: !13432)
!13434 = !DILocation(line: 3077, column: 22, scope: !13432)
!13435 = !DILocation(line: 3078, column: 7, scope: !13432)
!13436 = !DILocation(line: 3080, column: 30, scope: !13401)
!13437 = !DILocation(line: 3080, column: 37, scope: !13401)
!13438 = !DILocation(line: 3080, column: 41, scope: !13401)
!13439 = !DILocation(line: 3080, column: 7, scope: !13401)
!13440 = !DILocation(line: 3081, column: 14, scope: !13401)
!13441 = !DILocation(line: 3081, column: 20, scope: !13401)
!13442 = !DILocation(line: 3081, column: 12, scope: !13401)
!13443 = !DILocation(line: 3082, column: 6, scope: !13401)
!13444 = !DILocation(line: 3083, column: 15, scope: !13445)
!13445 = distinct !DILexicalBlock(scope: !13395, file: !3, line: 3083, column: 15)
!13446 = !DILocation(line: 3083, column: 21, scope: !13445)
!13447 = !DILocation(line: 3083, column: 26, scope: !13445)
!13448 = !DILocation(line: 3083, column: 15, scope: !13395)
!13449 = !DILocation(line: 3084, column: 15, scope: !13450)
!13450 = distinct !DILexicalBlock(scope: !13445, file: !3, line: 3083, column: 41)
!13451 = !DILocation(line: 3084, column: 21, scope: !13450)
!13452 = !DILocation(line: 3084, column: 13, scope: !13450)
!13453 = !DILocation(line: 3085, column: 20, scope: !13450)
!13454 = !DILocation(line: 3085, column: 24, scope: !13450)
!13455 = !DILocation(line: 3085, column: 40, scope: !13450)
!13456 = !DILocation(line: 3085, column: 7, scope: !13450)
!13457 = !DILocation(line: 3086, column: 17, scope: !13450)
!13458 = !DILocation(line: 3086, column: 21, scope: !13450)
!13459 = !DILocation(line: 3086, column: 7, scope: !13450)
!13460 = !DILocation(line: 3087, column: 14, scope: !13450)
!13461 = !DILocation(line: 3087, column: 12, scope: !13450)
!13462 = !DILocation(line: 3088, column: 6, scope: !13450)
!13463 = !DILocation(line: 3090, column: 14, scope: !13445)
!13464 = !DILocation(line: 3090, column: 20, scope: !13445)
!13465 = !DILocation(line: 3090, column: 12, scope: !13445)
!13466 = distinct !{!13466, !13381, !13467}
!13467 = !DILocation(line: 3091, column: 5, scope: !13368)
!13468 = !DILocation(line: 3093, column: 9, scope: !13469)
!13469 = distinct !DILexicalBlock(scope: !13368, file: !3, line: 3093, column: 9)
!13470 = !DILocation(line: 3093, column: 19, scope: !13469)
!13471 = !DILocation(line: 3093, column: 24, scope: !13469)
!13472 = !DILocation(line: 3093, column: 43, scope: !13469)
!13473 = !DILocation(line: 3093, column: 46, scope: !13469)
!13474 = !DILocation(line: 3093, column: 50, scope: !13469)
!13475 = !DILocation(line: 3093, column: 60, scope: !13469)
!13476 = !DILocation(line: 3093, column: 9, scope: !13368)
!13477 = !DILocation(line: 3097, column: 38, scope: !13478)
!13478 = distinct !DILexicalBlock(scope: !13469, file: !3, line: 3093, column: 77)
!13479 = !DILocation(line: 3097, column: 45, scope: !13478)
!13480 = !DILocation(line: 3097, column: 49, scope: !13478)
!13481 = !DILocation(line: 3097, column: 66, scope: !13478)
!13482 = !DILocation(line: 3097, column: 83, scope: !13478)
!13483 = !DILocation(line: 3097, column: 11, scope: !13478)
!13484 = !DILocation(line: 3097, column: 9, scope: !13478)
!13485 = !DILocation(line: 3098, column: 6, scope: !13478)
!13486 = !DILocation(line: 3098, column: 10, scope: !13478)
!13487 = !DILocation(line: 3098, column: 18, scope: !13478)
!13488 = !DILocation(line: 3100, column: 18, scope: !13489)
!13489 = distinct !DILexicalBlock(scope: !13478, file: !3, line: 3100, column: 6)
!13490 = !DILocation(line: 3100, column: 22, scope: !13489)
!13491 = !DILocation(line: 3100, column: 37, scope: !13489)
!13492 = !DILocation(line: 3100, column: 16, scope: !13489)
!13493 = !DILocation(line: 3100, column: 11, scope: !13489)
!13494 = !DILocation(line: 3100, column: 44, scope: !13495)
!13495 = distinct !DILexicalBlock(scope: !13489, file: !3, line: 3100, column: 6)
!13496 = !DILocation(line: 3100, column: 6, scope: !13489)
!13497 = !DILocation(line: 3101, column: 25, scope: !13495)
!13498 = !DILocation(line: 3101, column: 29, scope: !13495)
!13499 = !DILocation(line: 3101, column: 7, scope: !13495)
!13500 = !DILocation(line: 3101, column: 36, scope: !13495)
!13501 = !DILocation(line: 3101, column: 41, scope: !13495)
!13502 = !DILocation(line: 3100, column: 57, scope: !13495)
!13503 = !DILocation(line: 3100, column: 63, scope: !13495)
!13504 = !DILocation(line: 3100, column: 55, scope: !13495)
!13505 = !DILocation(line: 3100, column: 6, scope: !13495)
!13506 = distinct !{!13506, !13496, !13507}
!13507 = !DILocation(line: 3101, column: 45, scope: !13489)
!13508 = !DILocation(line: 3102, column: 5, scope: !13478)
!13509 = !DILocation(line: 3103, column: 4, scope: !13368)
!13510 = !DILocation(line: 3106, column: 3, scope: !13141)
!13511 = !DILocation(line: 3108, column: 3, scope: !13028)
!13512 = !DILocation(line: 3108, column: 7, scope: !13028)
!13513 = !DILocation(line: 3108, column: 14, scope: !13028)
!13514 = !DILocation(line: 3109, column: 2, scope: !13028)
!13515 = !DILocation(line: 3112, column: 6, scope: !13516)
!13516 = distinct !DILexicalBlock(scope: !13006, file: !3, line: 3112, column: 6)
!13517 = !DILocation(line: 3112, column: 10, scope: !13516)
!13518 = !DILocation(line: 3112, column: 6, scope: !13006)
!13519 = !DILocation(line: 3114, column: 27, scope: !13520)
!13520 = distinct !DILexicalBlock(scope: !13516, file: !3, line: 3112, column: 17)
!13521 = !DILocation(line: 3114, column: 3, scope: !13520)
!13522 = !DILocation(line: 3114, column: 7, scope: !13520)
!13523 = !DILocation(line: 3114, column: 14, scope: !13520)
!13524 = !DILocation(line: 3114, column: 25, scope: !13520)
!13525 = !DILocation(line: 3118, column: 7, scope: !13526)
!13526 = distinct !DILexicalBlock(scope: !13520, file: !3, line: 3118, column: 7)
!13527 = !DILocation(line: 3118, column: 11, scope: !13526)
!13528 = !DILocation(line: 3118, column: 23, scope: !13526)
!13529 = !DILocation(line: 3118, column: 7, scope: !13520)
!13530 = !DILocation(line: 3119, column: 8, scope: !13531)
!13531 = distinct !DILexicalBlock(scope: !13532, file: !3, line: 3119, column: 8)
!13532 = distinct !DILexicalBlock(scope: !13526, file: !3, line: 3118, column: 32)
!13533 = !DILocation(line: 3119, column: 8, scope: !13532)
!13534 = !DILocation(line: 3121, column: 30, scope: !13535)
!13535 = distinct !DILexicalBlock(scope: !13531, file: !3, line: 3119, column: 25)
!13536 = !DILocation(line: 3121, column: 40, scope: !13535)
!13537 = !DILocation(line: 3121, column: 47, scope: !13535)
!13538 = !DILocation(line: 3121, column: 51, scope: !13535)
!13539 = !DILocation(line: 3121, column: 5, scope: !13535)
!13540 = !DILocation(line: 3122, column: 4, scope: !13535)
!13541 = !DILocation(line: 3123, column: 3, scope: !13532)
!13542 = !DILocation(line: 3124, column: 2, scope: !13520)
!13543 = !DILocation(line: 3125, column: 1, scope: !13006)
!13544 = distinct !DISubprogram(name: "BKE_object_handle_update", scope: !3, file: !3, line: 3131, type: !13545, scopeLine: 3132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!13545 = !DISubroutineType(types: !13546)
!13546 = !{null, !13009, !6411, !5166}
!13547 = !DILocalVariable(name: "eval_ctx", arg: 1, scope: !13544, file: !3, line: 3131, type: !13009)
!13548 = !DILocation(line: 3131, column: 50, scope: !13544)
!13549 = !DILocalVariable(name: "scene", arg: 2, scope: !13544, file: !3, line: 3131, type: !6411)
!13550 = !DILocation(line: 3131, column: 67, scope: !13544)
!13551 = !DILocalVariable(name: "ob", arg: 3, scope: !13544, file: !3, line: 3131, type: !5166)
!13552 = !DILocation(line: 3131, column: 82, scope: !13544)
!13553 = !DILocation(line: 3133, column: 30, scope: !13544)
!13554 = !DILocation(line: 3133, column: 40, scope: !13544)
!13555 = !DILocation(line: 3133, column: 47, scope: !13544)
!13556 = !DILocation(line: 3133, column: 2, scope: !13544)
!13557 = !DILocation(line: 3134, column: 1, scope: !13544)
!13558 = distinct !DISubprogram(name: "BKE_object_sculpt_modifiers_changed", scope: !3, file: !3, line: 3136, type: !5284, scopeLine: 3137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!13559 = !DILocalVariable(name: "ob", arg: 1, scope: !13558, file: !3, line: 3136, type: !5166)
!13560 = !DILocation(line: 3136, column: 50, scope: !13558)
!13561 = !DILocalVariable(name: "ss", scope: !13558, file: !3, line: 3138, type: !13562)
!13562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13563, size: 64)
!13563 = !DIDerivedType(tag: DW_TAG_typedef, name: "SculptSession", file: !974, line: 206, baseType: !973)
!13564 = !DILocation(line: 3138, column: 17, scope: !13558)
!13565 = !DILocation(line: 3138, column: 22, scope: !13558)
!13566 = !DILocation(line: 3138, column: 26, scope: !13558)
!13567 = !DILocation(line: 3140, column: 6, scope: !13568)
!13568 = distinct !DILexicalBlock(scope: !13558, file: !3, line: 3140, column: 6)
!13569 = !DILocation(line: 3140, column: 6, scope: !13558)
!13570 = !DILocation(line: 3141, column: 8, scope: !13571)
!13571 = distinct !DILexicalBlock(scope: !13572, file: !3, line: 3141, column: 7)
!13572 = distinct !DILexicalBlock(scope: !13568, file: !3, line: 3140, column: 10)
!13573 = !DILocation(line: 3141, column: 12, scope: !13571)
!13574 = !DILocation(line: 3141, column: 7, scope: !13572)
!13575 = !DILocation(line: 3145, column: 8, scope: !13576)
!13576 = distinct !DILexicalBlock(scope: !13577, file: !3, line: 3145, column: 8)
!13577 = distinct !DILexicalBlock(scope: !13571, file: !3, line: 3141, column: 19)
!13578 = !DILocation(line: 3145, column: 12, scope: !13576)
!13579 = !DILocation(line: 3145, column: 8, scope: !13577)
!13580 = !DILocation(line: 3146, column: 19, scope: !13581)
!13581 = distinct !DILexicalBlock(scope: !13576, file: !3, line: 3145, column: 18)
!13582 = !DILocation(line: 3146, column: 23, scope: !13581)
!13583 = !DILocation(line: 3146, column: 5, scope: !13581)
!13584 = !DILocation(line: 3147, column: 5, scope: !13581)
!13585 = !DILocation(line: 3147, column: 9, scope: !13581)
!13586 = !DILocation(line: 3147, column: 14, scope: !13581)
!13587 = !DILocation(line: 3148, column: 4, scope: !13581)
!13588 = !DILocation(line: 3150, column: 38, scope: !13577)
!13589 = !DILocation(line: 3150, column: 42, scope: !13577)
!13590 = !DILocation(line: 3150, column: 4, scope: !13577)
!13591 = !DILocation(line: 3151, column: 3, scope: !13577)
!13592 = !DILocalVariable(name: "nodes", scope: !13593, file: !3, line: 3153, type: !13594)
!13593 = distinct !DILexicalBlock(scope: !13571, file: !3, line: 3152, column: 8)
!13594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13595, size: 64)
!13595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13596, size: 64)
!13596 = !DIDerivedType(tag: DW_TAG_typedef, name: "PBVHNode", file: !3353, line: 47, baseType: !13597)
!13597 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVHNode", file: !3353, line: 42, flags: DIFlagFwdDecl)
!13598 = !DILocation(line: 3153, column: 15, scope: !13593)
!13599 = !DILocalVariable(name: "n", scope: !13593, file: !3, line: 3154, type: !73)
!13600 = !DILocation(line: 3154, column: 8, scope: !13593)
!13601 = !DILocalVariable(name: "totnode", scope: !13593, file: !3, line: 3154, type: !73)
!13602 = !DILocation(line: 3154, column: 11, scope: !13593)
!13603 = !DILocation(line: 3156, column: 27, scope: !13593)
!13604 = !DILocation(line: 3156, column: 31, scope: !13593)
!13605 = !DILocation(line: 3156, column: 4, scope: !13593)
!13606 = !DILocation(line: 3158, column: 11, scope: !13607)
!13607 = distinct !DILexicalBlock(scope: !13593, file: !3, line: 3158, column: 4)
!13608 = !DILocation(line: 3158, column: 9, scope: !13607)
!13609 = !DILocation(line: 3158, column: 16, scope: !13610)
!13610 = distinct !DILexicalBlock(scope: !13607, file: !3, line: 3158, column: 4)
!13611 = !DILocation(line: 3158, column: 20, scope: !13610)
!13612 = !DILocation(line: 3158, column: 18, scope: !13610)
!13613 = !DILocation(line: 3158, column: 4, scope: !13607)
!13614 = !DILocation(line: 3159, column: 31, scope: !13610)
!13615 = !DILocation(line: 3159, column: 37, scope: !13610)
!13616 = !DILocation(line: 3159, column: 5, scope: !13610)
!13617 = !DILocation(line: 3158, column: 30, scope: !13610)
!13618 = !DILocation(line: 3158, column: 4, scope: !13610)
!13619 = distinct !{!13619, !13613, !13620}
!13620 = !DILocation(line: 3159, column: 39, scope: !13607)
!13621 = !DILocation(line: 3161, column: 4, scope: !13593)
!13622 = !DILocation(line: 3161, column: 14, scope: !13593)
!13623 = !DILocation(line: 3163, column: 2, scope: !13572)
!13624 = !DILocation(line: 3164, column: 1, scope: !13558)
!13625 = distinct !DISubprogram(name: "BKE_object_obdata_texspace_get", scope: !3, file: !3, line: 3166, type: !13626, scopeLine: 3167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!13626 = !DISubroutineType(types: !13627)
!13627 = !{!73, !5166, !13628, !13629, !13629, !13629}
!13628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4465, size: 64)
!13629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!13630 = !DILocalVariable(name: "ob", arg: 1, scope: !13625, file: !3, line: 3166, type: !5166)
!13631 = !DILocation(line: 3166, column: 44, scope: !13625)
!13632 = !DILocalVariable(name: "r_texflag", arg: 2, scope: !13625, file: !3, line: 3166, type: !13628)
!13633 = !DILocation(line: 3166, column: 56, scope: !13625)
!13634 = !DILocalVariable(name: "r_loc", arg: 3, scope: !13625, file: !3, line: 3166, type: !13629)
!13635 = !DILocation(line: 3166, column: 75, scope: !13625)
!13636 = !DILocalVariable(name: "r_size", arg: 4, scope: !13625, file: !3, line: 3166, type: !13629)
!13637 = !DILocation(line: 3166, column: 90, scope: !13625)
!13638 = !DILocalVariable(name: "r_rot", arg: 5, scope: !13625, file: !3, line: 3166, type: !13629)
!13639 = !DILocation(line: 3166, column: 106, scope: !13625)
!13640 = !DILocation(line: 3169, column: 6, scope: !13641)
!13641 = distinct !DILexicalBlock(scope: !13625, file: !3, line: 3169, column: 6)
!13642 = !DILocation(line: 3169, column: 10, scope: !13641)
!13643 = !DILocation(line: 3169, column: 15, scope: !13641)
!13644 = !DILocation(line: 3169, column: 6, scope: !13625)
!13645 = !DILocation(line: 3170, column: 3, scope: !13641)
!13646 = !DILocation(line: 3172, column: 10, scope: !13625)
!13647 = !DILocation(line: 3172, column: 2, scope: !13625)
!13648 = !DILocalVariable(name: "me", scope: !13649, file: !3, line: 3175, type: !593)
!13649 = distinct !DILexicalBlock(scope: !13650, file: !3, line: 3174, column: 3)
!13650 = distinct !DILexicalBlock(scope: !13625, file: !3, line: 3172, column: 38)
!13651 = !DILocation(line: 3175, column: 10, scope: !13649)
!13652 = !DILocation(line: 3175, column: 15, scope: !13649)
!13653 = !DILocation(line: 3175, column: 19, scope: !13649)
!13654 = !DILocation(line: 3176, column: 8, scope: !13655)
!13655 = distinct !DILexicalBlock(scope: !13649, file: !3, line: 3176, column: 8)
!13656 = !DILocation(line: 3176, column: 8, scope: !13649)
!13657 = !DILocation(line: 3176, column: 33, scope: !13655)
!13658 = !DILocation(line: 3176, column: 37, scope: !13655)
!13659 = !DILocation(line: 3176, column: 20, scope: !13655)
!13660 = !DILocation(line: 3176, column: 30, scope: !13655)
!13661 = !DILocation(line: 3176, column: 19, scope: !13655)
!13662 = !DILocation(line: 3177, column: 8, scope: !13663)
!13663 = distinct !DILexicalBlock(scope: !13649, file: !3, line: 3177, column: 8)
!13664 = !DILocation(line: 3177, column: 8, scope: !13649)
!13665 = !DILocation(line: 3177, column: 24, scope: !13663)
!13666 = !DILocation(line: 3177, column: 28, scope: !13663)
!13667 = !DILocation(line: 3177, column: 16, scope: !13663)
!13668 = !DILocation(line: 3177, column: 22, scope: !13663)
!13669 = !DILocation(line: 3177, column: 15, scope: !13663)
!13670 = !DILocation(line: 3178, column: 8, scope: !13671)
!13671 = distinct !DILexicalBlock(scope: !13649, file: !3, line: 3178, column: 8)
!13672 = !DILocation(line: 3178, column: 8, scope: !13649)
!13673 = !DILocation(line: 3178, column: 26, scope: !13671)
!13674 = !DILocation(line: 3178, column: 30, scope: !13671)
!13675 = !DILocation(line: 3178, column: 17, scope: !13671)
!13676 = !DILocation(line: 3178, column: 24, scope: !13671)
!13677 = !DILocation(line: 3178, column: 16, scope: !13671)
!13678 = !DILocation(line: 3179, column: 8, scope: !13679)
!13679 = distinct !DILexicalBlock(scope: !13649, file: !3, line: 3179, column: 8)
!13680 = !DILocation(line: 3179, column: 8, scope: !13649)
!13681 = !DILocation(line: 3179, column: 24, scope: !13679)
!13682 = !DILocation(line: 3179, column: 28, scope: !13679)
!13683 = !DILocation(line: 3179, column: 16, scope: !13679)
!13684 = !DILocation(line: 3179, column: 22, scope: !13679)
!13685 = !DILocation(line: 3179, column: 15, scope: !13679)
!13686 = !DILocation(line: 3180, column: 4, scope: !13649)
!13687 = !DILocalVariable(name: "cu", scope: !13688, file: !3, line: 3184, type: !4467)
!13688 = distinct !DILexicalBlock(scope: !13650, file: !3, line: 3183, column: 3)
!13689 = !DILocation(line: 3184, column: 11, scope: !13688)
!13690 = !DILocation(line: 3184, column: 16, scope: !13688)
!13691 = !DILocation(line: 3184, column: 20, scope: !13688)
!13692 = !DILocation(line: 3185, column: 8, scope: !13693)
!13693 = distinct !DILexicalBlock(scope: !13688, file: !3, line: 3185, column: 8)
!13694 = !DILocation(line: 3185, column: 8, scope: !13688)
!13695 = !DILocation(line: 3185, column: 33, scope: !13693)
!13696 = !DILocation(line: 3185, column: 37, scope: !13693)
!13697 = !DILocation(line: 3185, column: 20, scope: !13693)
!13698 = !DILocation(line: 3185, column: 30, scope: !13693)
!13699 = !DILocation(line: 3185, column: 19, scope: !13693)
!13700 = !DILocation(line: 3186, column: 8, scope: !13701)
!13701 = distinct !DILexicalBlock(scope: !13688, file: !3, line: 3186, column: 8)
!13702 = !DILocation(line: 3186, column: 8, scope: !13688)
!13703 = !DILocation(line: 3186, column: 24, scope: !13701)
!13704 = !DILocation(line: 3186, column: 28, scope: !13701)
!13705 = !DILocation(line: 3186, column: 16, scope: !13701)
!13706 = !DILocation(line: 3186, column: 22, scope: !13701)
!13707 = !DILocation(line: 3186, column: 15, scope: !13701)
!13708 = !DILocation(line: 3187, column: 8, scope: !13709)
!13709 = distinct !DILexicalBlock(scope: !13688, file: !3, line: 3187, column: 8)
!13710 = !DILocation(line: 3187, column: 8, scope: !13688)
!13711 = !DILocation(line: 3187, column: 26, scope: !13709)
!13712 = !DILocation(line: 3187, column: 30, scope: !13709)
!13713 = !DILocation(line: 3187, column: 17, scope: !13709)
!13714 = !DILocation(line: 3187, column: 24, scope: !13709)
!13715 = !DILocation(line: 3187, column: 16, scope: !13709)
!13716 = !DILocation(line: 3188, column: 8, scope: !13717)
!13717 = distinct !DILexicalBlock(scope: !13688, file: !3, line: 3188, column: 8)
!13718 = !DILocation(line: 3188, column: 8, scope: !13688)
!13719 = !DILocation(line: 3188, column: 24, scope: !13717)
!13720 = !DILocation(line: 3188, column: 28, scope: !13717)
!13721 = !DILocation(line: 3188, column: 16, scope: !13717)
!13722 = !DILocation(line: 3188, column: 22, scope: !13717)
!13723 = !DILocation(line: 3188, column: 15, scope: !13717)
!13724 = !DILocation(line: 3189, column: 4, scope: !13688)
!13725 = !DILocalVariable(name: "mb", scope: !13726, file: !3, line: 3193, type: !4568)
!13726 = distinct !DILexicalBlock(scope: !13650, file: !3, line: 3192, column: 3)
!13727 = !DILocation(line: 3193, column: 14, scope: !13726)
!13728 = !DILocation(line: 3193, column: 19, scope: !13726)
!13729 = !DILocation(line: 3193, column: 23, scope: !13726)
!13730 = !DILocation(line: 3194, column: 8, scope: !13731)
!13731 = distinct !DILexicalBlock(scope: !13726, file: !3, line: 3194, column: 8)
!13732 = !DILocation(line: 3194, column: 8, scope: !13726)
!13733 = !DILocation(line: 3194, column: 33, scope: !13731)
!13734 = !DILocation(line: 3194, column: 37, scope: !13731)
!13735 = !DILocation(line: 3194, column: 20, scope: !13731)
!13736 = !DILocation(line: 3194, column: 30, scope: !13731)
!13737 = !DILocation(line: 3194, column: 19, scope: !13731)
!13738 = !DILocation(line: 3195, column: 8, scope: !13739)
!13739 = distinct !DILexicalBlock(scope: !13726, file: !3, line: 3195, column: 8)
!13740 = !DILocation(line: 3195, column: 8, scope: !13726)
!13741 = !DILocation(line: 3195, column: 24, scope: !13739)
!13742 = !DILocation(line: 3195, column: 28, scope: !13739)
!13743 = !DILocation(line: 3195, column: 16, scope: !13739)
!13744 = !DILocation(line: 3195, column: 22, scope: !13739)
!13745 = !DILocation(line: 3195, column: 15, scope: !13739)
!13746 = !DILocation(line: 3196, column: 8, scope: !13747)
!13747 = distinct !DILexicalBlock(scope: !13726, file: !3, line: 3196, column: 8)
!13748 = !DILocation(line: 3196, column: 8, scope: !13726)
!13749 = !DILocation(line: 3196, column: 26, scope: !13747)
!13750 = !DILocation(line: 3196, column: 30, scope: !13747)
!13751 = !DILocation(line: 3196, column: 17, scope: !13747)
!13752 = !DILocation(line: 3196, column: 24, scope: !13747)
!13753 = !DILocation(line: 3196, column: 16, scope: !13747)
!13754 = !DILocation(line: 3197, column: 8, scope: !13755)
!13755 = distinct !DILexicalBlock(scope: !13726, file: !3, line: 3197, column: 8)
!13756 = !DILocation(line: 3197, column: 8, scope: !13726)
!13757 = !DILocation(line: 3197, column: 24, scope: !13755)
!13758 = !DILocation(line: 3197, column: 28, scope: !13755)
!13759 = !DILocation(line: 3197, column: 16, scope: !13755)
!13760 = !DILocation(line: 3197, column: 22, scope: !13755)
!13761 = !DILocation(line: 3197, column: 15, scope: !13755)
!13762 = !DILocation(line: 3198, column: 4, scope: !13726)
!13763 = !DILocation(line: 3201, column: 4, scope: !13650)
!13764 = !DILocation(line: 3203, column: 2, scope: !13625)
!13765 = !DILocation(line: 3204, column: 1, scope: !13625)
!13766 = distinct !DISubprogram(name: "BKE_boundbox_ray_hit_check", scope: !3, file: !3, line: 3210, type: !13767, scopeLine: 3214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!13767 = !DISubroutineType(types: !13768)
!13768 = !{!1788, !13769, !3397, !3397, !1073}
!13769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13770, size: 64)
!13770 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !739)
!13771 = !DILocalVariable(name: "bb", arg: 1, scope: !13766, file: !3, line: 3211, type: !13769)
!13772 = !DILocation(line: 3211, column: 32, scope: !13766)
!13773 = !DILocalVariable(name: "ray_start", arg: 2, scope: !13766, file: !3, line: 3212, type: !3397)
!13774 = !DILocation(line: 3212, column: 21, scope: !13766)
!13775 = !DILocalVariable(name: "ray_normal", arg: 3, scope: !13766, file: !3, line: 3212, type: !3397)
!13776 = !DILocation(line: 3212, column: 47, scope: !13766)
!13777 = !DILocalVariable(name: "r_lambda", arg: 4, scope: !13766, file: !3, line: 3213, type: !1073)
!13778 = !DILocation(line: 3213, column: 16, scope: !13766)
!13779 = !DILocalVariable(name: "triangle_indexes", scope: !13766, file: !3, line: 3215, type: !13780)
!13780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12356, size: 1152, elements: !13781)
!13781 = !{!3562, !745}
!13782 = !DILocation(line: 3215, column: 12, scope: !13766)
!13783 = !DILocalVariable(name: "result", scope: !13766, file: !3, line: 3223, type: !1788)
!13784 = !DILocation(line: 3223, column: 7, scope: !13766)
!13785 = !DILocalVariable(name: "i", scope: !13766, file: !3, line: 3224, type: !73)
!13786 = !DILocation(line: 3224, column: 6, scope: !13766)
!13787 = !DILocation(line: 3226, column: 9, scope: !13788)
!13788 = distinct !DILexicalBlock(scope: !13766, file: !3, line: 3226, column: 2)
!13789 = !DILocation(line: 3226, column: 7, scope: !13788)
!13790 = !DILocation(line: 3226, column: 14, scope: !13791)
!13791 = distinct !DILexicalBlock(scope: !13788, file: !3, line: 3226, column: 2)
!13792 = !DILocation(line: 3226, column: 16, scope: !13791)
!13793 = !DILocation(line: 3226, column: 21, scope: !13791)
!13794 = !DILocation(line: 3226, column: 26, scope: !13791)
!13795 = !DILocation(line: 3226, column: 33, scope: !13791)
!13796 = !DILocation(line: 3226, column: 36, scope: !13791)
!13797 = !DILocation(line: 0, scope: !13791)
!13798 = !DILocation(line: 3226, column: 2, scope: !13788)
!13799 = !DILocalVariable(name: "lambda", scope: !13800, file: !3, line: 3227, type: !713)
!13800 = distinct !DILexicalBlock(scope: !13791, file: !3, line: 3226, column: 52)
!13801 = !DILocation(line: 3227, column: 9, scope: !13800)
!13802 = !DILocalVariable(name: "v1", scope: !13800, file: !3, line: 3228, type: !73)
!13803 = !DILocation(line: 3228, column: 7, scope: !13800)
!13804 = !DILocalVariable(name: "v2", scope: !13800, file: !3, line: 3228, type: !73)
!13805 = !DILocation(line: 3228, column: 11, scope: !13800)
!13806 = !DILocalVariable(name: "v3", scope: !13800, file: !3, line: 3228, type: !73)
!13807 = !DILocation(line: 3228, column: 15, scope: !13800)
!13808 = !DILocation(line: 3229, column: 25, scope: !13800)
!13809 = !DILocation(line: 3229, column: 8, scope: !13800)
!13810 = !DILocation(line: 3229, column: 6, scope: !13800)
!13811 = !DILocation(line: 3230, column: 25, scope: !13800)
!13812 = !DILocation(line: 3230, column: 8, scope: !13800)
!13813 = !DILocation(line: 3230, column: 6, scope: !13800)
!13814 = !DILocation(line: 3231, column: 25, scope: !13800)
!13815 = !DILocation(line: 3231, column: 8, scope: !13800)
!13816 = !DILocation(line: 3231, column: 6, scope: !13800)
!13817 = !DILocation(line: 3232, column: 24, scope: !13818)
!13818 = distinct !DILexicalBlock(scope: !13800, file: !3, line: 3232, column: 7)
!13819 = !DILocation(line: 3232, column: 35, scope: !13818)
!13820 = !DILocation(line: 3232, column: 47, scope: !13818)
!13821 = !DILocation(line: 3232, column: 51, scope: !13818)
!13822 = !DILocation(line: 3232, column: 55, scope: !13818)
!13823 = !DILocation(line: 3232, column: 60, scope: !13818)
!13824 = !DILocation(line: 3232, column: 64, scope: !13818)
!13825 = !DILocation(line: 3232, column: 68, scope: !13818)
!13826 = !DILocation(line: 3232, column: 73, scope: !13818)
!13827 = !DILocation(line: 3232, column: 77, scope: !13818)
!13828 = !DILocation(line: 3232, column: 81, scope: !13818)
!13829 = !DILocation(line: 3232, column: 7, scope: !13818)
!13830 = !DILocation(line: 3232, column: 101, scope: !13818)
!13831 = !DILocation(line: 3233, column: 9, scope: !13818)
!13832 = !DILocation(line: 3233, column: 18, scope: !13818)
!13833 = !DILocation(line: 3233, column: 22, scope: !13818)
!13834 = !DILocation(line: 3233, column: 21, scope: !13818)
!13835 = !DILocation(line: 3233, column: 33, scope: !13818)
!13836 = !DILocation(line: 3233, column: 31, scope: !13818)
!13837 = !DILocation(line: 3232, column: 7, scope: !13800)
!13838 = !DILocation(line: 3235, column: 11, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13818, file: !3, line: 3234, column: 3)
!13840 = !DILocation(line: 3236, column: 8, scope: !13841)
!13841 = distinct !DILexicalBlock(scope: !13839, file: !3, line: 3236, column: 8)
!13842 = !DILocation(line: 3236, column: 8, scope: !13839)
!13843 = !DILocation(line: 3237, column: 17, scope: !13844)
!13844 = distinct !DILexicalBlock(scope: !13841, file: !3, line: 3236, column: 18)
!13845 = !DILocation(line: 3237, column: 6, scope: !13844)
!13846 = !DILocation(line: 3237, column: 15, scope: !13844)
!13847 = !DILocation(line: 3238, column: 4, scope: !13844)
!13848 = !DILocation(line: 3239, column: 3, scope: !13839)
!13849 = !DILocation(line: 3240, column: 2, scope: !13800)
!13850 = !DILocation(line: 3226, column: 48, scope: !13791)
!13851 = !DILocation(line: 3226, column: 2, scope: !13791)
!13852 = distinct !{!13852, !13798, !13853}
!13853 = !DILocation(line: 3240, column: 2, scope: !13788)
!13854 = !DILocation(line: 3242, column: 9, scope: !13766)
!13855 = !DILocation(line: 3242, column: 2, scope: !13766)
!13856 = distinct !DISubprogram(name: "BKE_object_insert_ptcache", scope: !3, file: !3, line: 3253, type: !13857, scopeLine: 3254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!13857 = !DISubroutineType(types: !13858)
!13858 = !{!73, !5166}
!13859 = !DILocalVariable(name: "ob", arg: 1, scope: !13856, file: !3, line: 3253, type: !5166)
!13860 = !DILocation(line: 3253, column: 39, scope: !13856)
!13861 = !DILocalVariable(name: "link", scope: !13856, file: !3, line: 3255, type: !13862)
!13862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13863, size: 64)
!13863 = !DIDerivedType(tag: DW_TAG_typedef, name: "LinkData", file: !659, line: 66, baseType: !13864)
!13864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LinkData", file: !659, line: 63, size: 192, elements: !13865)
!13865 = !{!13866, !13868, !13869}
!13866 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13864, file: !659, line: 64, baseType: !13867, size: 64)
!13867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13864, size: 64)
!13868 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13864, file: !659, line: 64, baseType: !13867, size: 64, offset: 64)
!13869 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13864, file: !659, line: 65, baseType: !592, size: 64, offset: 128)
!13870 = !DILocation(line: 3255, column: 12, scope: !13856)
!13871 = !DILocalVariable(name: "i", scope: !13856, file: !3, line: 3256, type: !73)
!13872 = !DILocation(line: 3256, column: 6, scope: !13856)
!13873 = !DILocation(line: 3258, column: 16, scope: !13856)
!13874 = !DILocation(line: 3258, column: 20, scope: !13856)
!13875 = !DILocation(line: 3258, column: 2, scope: !13856)
!13876 = !DILocation(line: 3260, column: 14, scope: !13877)
!13877 = distinct !DILexicalBlock(scope: !13856, file: !3, line: 3260, column: 2)
!13878 = !DILocation(line: 3260, column: 18, scope: !13877)
!13879 = !DILocation(line: 3260, column: 25, scope: !13877)
!13880 = !DILocation(line: 3260, column: 12, scope: !13877)
!13881 = !DILocation(line: 3260, column: 34, scope: !13877)
!13882 = !DILocation(line: 3260, column: 7, scope: !13877)
!13883 = !DILocation(line: 3260, column: 39, scope: !13884)
!13884 = distinct !DILexicalBlock(scope: !13877, file: !3, line: 3260, column: 2)
!13885 = !DILocation(line: 3260, column: 2, scope: !13877)
!13886 = !DILocalVariable(name: "index", scope: !13887, file: !3, line: 3261, type: !73)
!13887 = distinct !DILexicalBlock(scope: !13884, file: !3, line: 3260, column: 69)
!13888 = !DILocation(line: 3261, column: 7, scope: !13887)
!13889 = !DILocation(line: 3261, column: 15, scope: !13887)
!13890 = !DILocation(line: 3263, column: 7, scope: !13891)
!13891 = distinct !DILexicalBlock(scope: !13887, file: !3, line: 3263, column: 7)
!13892 = !DILocation(line: 3263, column: 11, scope: !13891)
!13893 = !DILocation(line: 3263, column: 9, scope: !13891)
!13894 = !DILocation(line: 3263, column: 7, scope: !13887)
!13895 = !DILocation(line: 3264, column: 4, scope: !13891)
!13896 = !DILocation(line: 3265, column: 2, scope: !13887)
!13897 = !DILocation(line: 3260, column: 52, scope: !13884)
!13898 = !DILocation(line: 3260, column: 58, scope: !13884)
!13899 = !DILocation(line: 3260, column: 50, scope: !13884)
!13900 = !DILocation(line: 3260, column: 65, scope: !13884)
!13901 = !DILocation(line: 3260, column: 2, scope: !13884)
!13902 = distinct !{!13902, !13885, !13903}
!13903 = !DILocation(line: 3265, column: 2, scope: !13877)
!13904 = !DILocation(line: 3267, column: 9, scope: !13856)
!13905 = !DILocation(line: 3267, column: 7, scope: !13856)
!13906 = !DILocation(line: 3268, column: 15, scope: !13856)
!13907 = !DILocation(line: 3268, column: 2, scope: !13856)
!13908 = !DILocation(line: 3268, column: 8, scope: !13856)
!13909 = !DILocation(line: 3268, column: 13, scope: !13856)
!13910 = !DILocation(line: 3269, column: 15, scope: !13856)
!13911 = !DILocation(line: 3269, column: 19, scope: !13856)
!13912 = !DILocation(line: 3269, column: 27, scope: !13856)
!13913 = !DILocation(line: 3269, column: 2, scope: !13856)
!13914 = !DILocation(line: 3271, column: 9, scope: !13856)
!13915 = !DILocation(line: 3271, column: 2, scope: !13856)
!13916 = distinct !DISubprogram(name: "pc_cmp", scope: !3, file: !3, line: 3245, type: !13917, scopeLine: 3246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!13917 = !DISubroutineType(types: !13918)
!13918 = !{!73, !13919, !13919}
!13919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13920, size: 64)
!13920 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!13921 = !DILocalVariable(name: "a", arg: 1, scope: !13916, file: !3, line: 3245, type: !13919)
!13922 = !DILocation(line: 3245, column: 31, scope: !13916)
!13923 = !DILocalVariable(name: "b", arg: 2, scope: !13916, file: !3, line: 3245, type: !13919)
!13924 = !DILocation(line: 3245, column: 46, scope: !13916)
!13925 = !DILocalVariable(name: "ad", scope: !13916, file: !3, line: 3247, type: !13926)
!13926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13927, size: 64)
!13927 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13863)
!13928 = !DILocation(line: 3247, column: 18, scope: !13916)
!13929 = !DILocation(line: 3247, column: 23, scope: !13916)
!13930 = !DILocalVariable(name: "bd", scope: !13916, file: !3, line: 3247, type: !13926)
!13931 = !DILocation(line: 3247, column: 27, scope: !13916)
!13932 = !DILocation(line: 3247, column: 32, scope: !13916)
!13933 = !DILocation(line: 3248, column: 6, scope: !13934)
!13934 = distinct !DILexicalBlock(scope: !13916, file: !3, line: 3248, column: 6)
!13935 = !DILocation(line: 3248, column: 39, scope: !13934)
!13936 = !DILocation(line: 3248, column: 37, scope: !13934)
!13937 = !DILocation(line: 3248, column: 6, scope: !13916)
!13938 = !DILocation(line: 3249, column: 3, scope: !13934)
!13939 = !DILocation(line: 3250, column: 7, scope: !13934)
!13940 = !DILocation(line: 3251, column: 1, scope: !13916)
!13941 = distinct !DISubprogram(name: "BKE_object_delete_ptcache", scope: !3, file: !3, line: 3293, type: !13942, scopeLine: 3294, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!13942 = !DISubroutineType(types: !13943)
!13943 = !{null, !5166, !73}
!13944 = !DILocalVariable(name: "ob", arg: 1, scope: !13941, file: !3, line: 3293, type: !5166)
!13945 = !DILocation(line: 3293, column: 40, scope: !13941)
!13946 = !DILocalVariable(name: "index", arg: 2, scope: !13941, file: !3, line: 3293, type: !73)
!13947 = !DILocation(line: 3293, column: 48, scope: !13941)
!13948 = !DILocalVariable(name: "list_index", scope: !13941, file: !3, line: 3295, type: !73)
!13949 = !DILocation(line: 3295, column: 6, scope: !13941)
!13950 = !DILocation(line: 3295, column: 33, scope: !13941)
!13951 = !DILocation(line: 3295, column: 37, scope: !13941)
!13952 = !DILocation(line: 3295, column: 45, scope: !13941)
!13953 = !DILocation(line: 3295, column: 19, scope: !13941)
!13954 = !DILocalVariable(name: "link", scope: !13941, file: !3, line: 3296, type: !13862)
!13955 = !DILocation(line: 3296, column: 12, scope: !13941)
!13956 = !DILocation(line: 3296, column: 33, scope: !13941)
!13957 = !DILocation(line: 3296, column: 37, scope: !13941)
!13958 = !DILocation(line: 3296, column: 45, scope: !13941)
!13959 = !DILocation(line: 3296, column: 19, scope: !13941)
!13960 = !DILocation(line: 3297, column: 17, scope: !13941)
!13961 = !DILocation(line: 3297, column: 21, scope: !13941)
!13962 = !DILocation(line: 3297, column: 29, scope: !13941)
!13963 = !DILocation(line: 3297, column: 2, scope: !13941)
!13964 = !DILocation(line: 3298, column: 1, scope: !13941)
!13965 = distinct !DISubprogram(name: "pc_findindex", scope: !3, file: !3, line: 3274, type: !13966, scopeLine: 3275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!13966 = !DISubroutineType(types: !13967)
!13967 = !{!73, !1209, !73}
!13968 = !DILocalVariable(name: "listbase", arg: 1, scope: !13965, file: !3, line: 3274, type: !1209)
!13969 = !DILocation(line: 3274, column: 35, scope: !13965)
!13970 = !DILocalVariable(name: "index", arg: 2, scope: !13965, file: !3, line: 3274, type: !73)
!13971 = !DILocation(line: 3274, column: 49, scope: !13965)
!13972 = !DILocalVariable(name: "link", scope: !13965, file: !3, line: 3276, type: !13862)
!13973 = !DILocation(line: 3276, column: 12, scope: !13965)
!13974 = !DILocalVariable(name: "number", scope: !13965, file: !3, line: 3277, type: !73)
!13975 = !DILocation(line: 3277, column: 6, scope: !13965)
!13976 = !DILocation(line: 3279, column: 6, scope: !13977)
!13977 = distinct !DILexicalBlock(scope: !13965, file: !3, line: 3279, column: 6)
!13978 = !DILocation(line: 3279, column: 15, scope: !13977)
!13979 = !DILocation(line: 3279, column: 6, scope: !13965)
!13980 = !DILocation(line: 3279, column: 24, scope: !13977)
!13981 = !DILocation(line: 3281, column: 9, scope: !13965)
!13982 = !DILocation(line: 3281, column: 19, scope: !13965)
!13983 = !DILocation(line: 3281, column: 7, scope: !13965)
!13984 = !DILocation(line: 3282, column: 2, scope: !13965)
!13985 = !DILocation(line: 3282, column: 9, scope: !13965)
!13986 = !DILocation(line: 3283, column: 7, scope: !13987)
!13987 = distinct !DILexicalBlock(scope: !13988, file: !3, line: 3283, column: 7)
!13988 = distinct !DILexicalBlock(scope: !13965, file: !3, line: 3282, column: 15)
!13989 = !DILocation(line: 3283, column: 43, scope: !13987)
!13990 = !DILocation(line: 3283, column: 40, scope: !13987)
!13991 = !DILocation(line: 3283, column: 7, scope: !13988)
!13992 = !DILocation(line: 3284, column: 11, scope: !13987)
!13993 = !DILocation(line: 3284, column: 4, scope: !13987)
!13994 = !DILocation(line: 3286, column: 9, scope: !13988)
!13995 = !DILocation(line: 3287, column: 10, scope: !13988)
!13996 = !DILocation(line: 3287, column: 16, scope: !13988)
!13997 = !DILocation(line: 3287, column: 8, scope: !13988)
!13998 = distinct !{!13998, !13984, !13999}
!13999 = !DILocation(line: 3288, column: 2, scope: !13965)
!14000 = !DILocation(line: 3290, column: 2, scope: !13965)
!14001 = !DILocation(line: 3291, column: 1, scope: !13965)
!14002 = distinct !DISubprogram(name: "BKE_object_insert_shape_key", scope: !3, file: !3, line: 3413, type: !14003, scopeLine: 3414, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!14003 = !DISubroutineType(types: !14004)
!14004 = !{!764, !6411, !5166, !2669, !3482}
!14005 = !DILocalVariable(name: "scene", arg: 1, scope: !14002, file: !3, line: 3413, type: !6411)
!14006 = !DILocation(line: 3413, column: 46, scope: !14002)
!14007 = !DILocalVariable(name: "ob", arg: 2, scope: !14002, file: !3, line: 3413, type: !5166)
!14008 = !DILocation(line: 3413, column: 61, scope: !14002)
!14009 = !DILocalVariable(name: "name", arg: 3, scope: !14002, file: !3, line: 3413, type: !2669)
!14010 = !DILocation(line: 3413, column: 77, scope: !14002)
!14011 = !DILocalVariable(name: "from_mix", arg: 4, scope: !14002, file: !3, line: 3413, type: !3482)
!14012 = !DILocation(line: 3413, column: 94, scope: !14002)
!14013 = !DILocation(line: 3415, column: 10, scope: !14002)
!14014 = !DILocation(line: 3415, column: 14, scope: !14002)
!14015 = !DILocation(line: 3415, column: 2, scope: !14002)
!14016 = !DILocation(line: 3417, column: 26, scope: !14017)
!14017 = distinct !DILexicalBlock(scope: !14002, file: !3, line: 3415, column: 20)
!14018 = !DILocation(line: 3417, column: 33, scope: !14017)
!14019 = !DILocation(line: 3417, column: 37, scope: !14017)
!14020 = !DILocation(line: 3417, column: 43, scope: !14017)
!14021 = !DILocation(line: 3417, column: 11, scope: !14017)
!14022 = !DILocation(line: 3417, column: 4, scope: !14017)
!14023 = !DILocation(line: 3420, column: 27, scope: !14017)
!14024 = !DILocation(line: 3420, column: 34, scope: !14017)
!14025 = !DILocation(line: 3420, column: 38, scope: !14017)
!14026 = !DILocation(line: 3420, column: 44, scope: !14017)
!14027 = !DILocation(line: 3420, column: 11, scope: !14017)
!14028 = !DILocation(line: 3420, column: 4, scope: !14017)
!14029 = !DILocation(line: 3422, column: 26, scope: !14017)
!14030 = !DILocation(line: 3422, column: 33, scope: !14017)
!14031 = !DILocation(line: 3422, column: 37, scope: !14017)
!14032 = !DILocation(line: 3422, column: 43, scope: !14017)
!14033 = !DILocation(line: 3422, column: 11, scope: !14017)
!14034 = !DILocation(line: 3422, column: 4, scope: !14017)
!14035 = !DILocation(line: 3424, column: 4, scope: !14017)
!14036 = !DILocation(line: 3427, column: 1, scope: !14002)
!14037 = distinct !DISubprogram(name: "insert_meshkey", scope: !3, file: !3, line: 3303, type: !14038, scopeLine: 3304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!14038 = !DISubroutineType(types: !14039)
!14039 = !{!759, !6411, !5166, !2669, !3482}
!14040 = !DILocalVariable(name: "scene", arg: 1, scope: !14037, file: !3, line: 3303, type: !6411)
!14041 = !DILocation(line: 3303, column: 40, scope: !14037)
!14042 = !DILocalVariable(name: "ob", arg: 2, scope: !14037, file: !3, line: 3303, type: !5166)
!14043 = !DILocation(line: 3303, column: 55, scope: !14037)
!14044 = !DILocalVariable(name: "name", arg: 3, scope: !14037, file: !3, line: 3303, type: !2669)
!14045 = !DILocation(line: 3303, column: 71, scope: !14037)
!14046 = !DILocalVariable(name: "from_mix", arg: 4, scope: !14037, file: !3, line: 3303, type: !3482)
!14047 = !DILocation(line: 3303, column: 88, scope: !14037)
!14048 = !DILocalVariable(name: "me", scope: !14037, file: !3, line: 3305, type: !593)
!14049 = !DILocation(line: 3305, column: 8, scope: !14037)
!14050 = !DILocation(line: 3305, column: 13, scope: !14037)
!14051 = !DILocation(line: 3305, column: 17, scope: !14037)
!14052 = !DILocalVariable(name: "key", scope: !14037, file: !3, line: 3306, type: !13153)
!14053 = !DILocation(line: 3306, column: 7, scope: !14037)
!14054 = !DILocation(line: 3306, column: 13, scope: !14037)
!14055 = !DILocation(line: 3306, column: 17, scope: !14037)
!14056 = !DILocalVariable(name: "kb", scope: !14037, file: !3, line: 3307, type: !759)
!14057 = !DILocation(line: 3307, column: 12, scope: !14037)
!14058 = !DILocalVariable(name: "newkey", scope: !14037, file: !3, line: 3308, type: !73)
!14059 = !DILocation(line: 3308, column: 6, scope: !14037)
!14060 = !DILocation(line: 3310, column: 6, scope: !14061)
!14061 = distinct !DILexicalBlock(scope: !14037, file: !3, line: 3310, column: 6)
!14062 = !DILocation(line: 3310, column: 10, scope: !14061)
!14063 = !DILocation(line: 3310, column: 6, scope: !14037)
!14064 = !DILocation(line: 3311, column: 37, scope: !14065)
!14065 = distinct !DILexicalBlock(scope: !14061, file: !3, line: 3310, column: 19)
!14066 = !DILocation(line: 3311, column: 31, scope: !14065)
!14067 = !DILocation(line: 3311, column: 19, scope: !14065)
!14068 = !DILocation(line: 3311, column: 9, scope: !14065)
!14069 = !DILocation(line: 3311, column: 13, scope: !14065)
!14070 = !DILocation(line: 3311, column: 17, scope: !14065)
!14071 = !DILocation(line: 3311, column: 7, scope: !14065)
!14072 = !DILocation(line: 3312, column: 3, scope: !14065)
!14073 = !DILocation(line: 3312, column: 8, scope: !14065)
!14074 = !DILocation(line: 3312, column: 13, scope: !14065)
!14075 = !DILocation(line: 3313, column: 10, scope: !14065)
!14076 = !DILocation(line: 3314, column: 2, scope: !14065)
!14077 = !DILocation(line: 3316, column: 6, scope: !14078)
!14078 = distinct !DILexicalBlock(scope: !14037, file: !3, line: 3316, column: 6)
!14079 = !DILocation(line: 3316, column: 13, scope: !14078)
!14080 = !DILocation(line: 3316, column: 16, scope: !14078)
!14081 = !DILocation(line: 3316, column: 25, scope: !14078)
!14082 = !DILocation(line: 3316, column: 6, scope: !14037)
!14083 = !DILocation(line: 3318, column: 31, scope: !14084)
!14084 = distinct !DILexicalBlock(scope: !14078, file: !3, line: 3316, column: 35)
!14085 = !DILocation(line: 3318, column: 36, scope: !14084)
!14086 = !DILocation(line: 3318, column: 8, scope: !14084)
!14087 = !DILocation(line: 3318, column: 6, scope: !14084)
!14088 = !DILocation(line: 3319, column: 29, scope: !14084)
!14089 = !DILocation(line: 3319, column: 33, scope: !14084)
!14090 = !DILocation(line: 3319, column: 3, scope: !14084)
!14091 = !DILocation(line: 3320, column: 2, scope: !14084)
!14092 = !DILocalVariable(name: "totelem", scope: !14093, file: !3, line: 3323, type: !73)
!14093 = distinct !DILexicalBlock(scope: !14078, file: !3, line: 3321, column: 7)
!14094 = !DILocation(line: 3323, column: 7, scope: !14093)
!14095 = !DILocalVariable(name: "data", scope: !14093, file: !3, line: 3324, type: !1073)
!14096 = !DILocation(line: 3324, column: 10, scope: !14093)
!14097 = !DILocation(line: 3324, column: 41, scope: !14093)
!14098 = !DILocation(line: 3324, column: 48, scope: !14093)
!14099 = !DILocation(line: 3324, column: 17, scope: !14093)
!14100 = !DILocation(line: 3327, column: 31, scope: !14093)
!14101 = !DILocation(line: 3327, column: 36, scope: !14093)
!14102 = !DILocation(line: 3327, column: 8, scope: !14093)
!14103 = !DILocation(line: 3327, column: 6, scope: !14093)
!14104 = !DILocation(line: 3328, column: 14, scope: !14093)
!14105 = !DILocation(line: 3328, column: 3, scope: !14093)
!14106 = !DILocation(line: 3328, column: 7, scope: !14093)
!14107 = !DILocation(line: 3328, column: 12, scope: !14093)
!14108 = !DILocation(line: 3329, column: 17, scope: !14093)
!14109 = !DILocation(line: 3329, column: 3, scope: !14093)
!14110 = !DILocation(line: 3329, column: 7, scope: !14093)
!14111 = !DILocation(line: 3329, column: 15, scope: !14093)
!14112 = !DILocation(line: 3332, column: 9, scope: !14037)
!14113 = !DILocation(line: 3332, column: 2, scope: !14037)
!14114 = distinct !DISubprogram(name: "insert_curvekey", scope: !3, file: !3, line: 3373, type: !14038, scopeLine: 3374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!14115 = !DILocalVariable(name: "scene", arg: 1, scope: !14114, file: !3, line: 3373, type: !6411)
!14116 = !DILocation(line: 3373, column: 41, scope: !14114)
!14117 = !DILocalVariable(name: "ob", arg: 2, scope: !14114, file: !3, line: 3373, type: !5166)
!14118 = !DILocation(line: 3373, column: 56, scope: !14114)
!14119 = !DILocalVariable(name: "name", arg: 3, scope: !14114, file: !3, line: 3373, type: !2669)
!14120 = !DILocation(line: 3373, column: 72, scope: !14114)
!14121 = !DILocalVariable(name: "from_mix", arg: 4, scope: !14114, file: !3, line: 3373, type: !3482)
!14122 = !DILocation(line: 3373, column: 89, scope: !14114)
!14123 = !DILocalVariable(name: "cu", scope: !14114, file: !3, line: 3375, type: !4467)
!14124 = !DILocation(line: 3375, column: 9, scope: !14114)
!14125 = !DILocation(line: 3375, column: 14, scope: !14114)
!14126 = !DILocation(line: 3375, column: 18, scope: !14114)
!14127 = !DILocalVariable(name: "key", scope: !14114, file: !3, line: 3376, type: !13153)
!14128 = !DILocation(line: 3376, column: 7, scope: !14114)
!14129 = !DILocation(line: 3376, column: 13, scope: !14114)
!14130 = !DILocation(line: 3376, column: 17, scope: !14114)
!14131 = !DILocalVariable(name: "kb", scope: !14114, file: !3, line: 3377, type: !759)
!14132 = !DILocation(line: 3377, column: 12, scope: !14114)
!14133 = !DILocalVariable(name: "lb", scope: !14114, file: !3, line: 3378, type: !1209)
!14134 = !DILocation(line: 3378, column: 12, scope: !14114)
!14135 = !DILocation(line: 3378, column: 37, scope: !14114)
!14136 = !DILocation(line: 3378, column: 17, scope: !14114)
!14137 = !DILocalVariable(name: "newkey", scope: !14114, file: !3, line: 3379, type: !73)
!14138 = !DILocation(line: 3379, column: 6, scope: !14114)
!14139 = !DILocation(line: 3381, column: 6, scope: !14140)
!14140 = distinct !DILexicalBlock(scope: !14114, file: !3, line: 3381, column: 6)
!14141 = !DILocation(line: 3381, column: 10, scope: !14140)
!14142 = !DILocation(line: 3381, column: 6, scope: !14114)
!14143 = !DILocation(line: 3382, column: 37, scope: !14144)
!14144 = distinct !DILexicalBlock(scope: !14140, file: !3, line: 3381, column: 19)
!14145 = !DILocation(line: 3382, column: 31, scope: !14144)
!14146 = !DILocation(line: 3382, column: 19, scope: !14144)
!14147 = !DILocation(line: 3382, column: 9, scope: !14144)
!14148 = !DILocation(line: 3382, column: 13, scope: !14144)
!14149 = !DILocation(line: 3382, column: 17, scope: !14144)
!14150 = !DILocation(line: 3382, column: 7, scope: !14144)
!14151 = !DILocation(line: 3383, column: 3, scope: !14144)
!14152 = !DILocation(line: 3383, column: 8, scope: !14144)
!14153 = !DILocation(line: 3383, column: 13, scope: !14144)
!14154 = !DILocation(line: 3384, column: 10, scope: !14144)
!14155 = !DILocation(line: 3385, column: 2, scope: !14144)
!14156 = !DILocation(line: 3387, column: 6, scope: !14157)
!14157 = distinct !DILexicalBlock(scope: !14114, file: !3, line: 3387, column: 6)
!14158 = !DILocation(line: 3387, column: 13, scope: !14157)
!14159 = !DILocation(line: 3387, column: 16, scope: !14157)
!14160 = !DILocation(line: 3387, column: 25, scope: !14157)
!14161 = !DILocation(line: 3387, column: 6, scope: !14114)
!14162 = !DILocation(line: 3389, column: 31, scope: !14163)
!14163 = distinct !DILexicalBlock(scope: !14157, file: !3, line: 3387, column: 35)
!14164 = !DILocation(line: 3389, column: 36, scope: !14163)
!14165 = !DILocation(line: 3389, column: 8, scope: !14163)
!14166 = !DILocation(line: 3389, column: 6, scope: !14163)
!14167 = !DILocation(line: 3390, column: 8, scope: !14168)
!14168 = distinct !DILexicalBlock(scope: !14163, file: !3, line: 3390, column: 7)
!14169 = !DILocation(line: 3390, column: 7, scope: !14163)
!14170 = !DILocalVariable(name: "basekb", scope: !14171, file: !3, line: 3391, type: !759)
!14171 = distinct !DILexicalBlock(scope: !14168, file: !3, line: 3390, column: 16)
!14172 = !DILocation(line: 3391, column: 14, scope: !14171)
!14173 = !DILocation(line: 3391, column: 35, scope: !14171)
!14174 = !DILocation(line: 3391, column: 40, scope: !14171)
!14175 = !DILocation(line: 3391, column: 46, scope: !14171)
!14176 = !DILocation(line: 3391, column: 23, scope: !14171)
!14177 = !DILocation(line: 3392, column: 15, scope: !14171)
!14178 = !DILocation(line: 3392, column: 29, scope: !14171)
!14179 = !DILocation(line: 3392, column: 37, scope: !14171)
!14180 = !DILocation(line: 3392, column: 4, scope: !14171)
!14181 = !DILocation(line: 3392, column: 8, scope: !14171)
!14182 = !DILocation(line: 3392, column: 13, scope: !14171)
!14183 = !DILocation(line: 3393, column: 18, scope: !14171)
!14184 = !DILocation(line: 3393, column: 26, scope: !14171)
!14185 = !DILocation(line: 3393, column: 4, scope: !14171)
!14186 = !DILocation(line: 3393, column: 8, scope: !14171)
!14187 = !DILocation(line: 3393, column: 16, scope: !14171)
!14188 = !DILocation(line: 3394, column: 3, scope: !14171)
!14189 = !DILocation(line: 3396, column: 31, scope: !14190)
!14190 = distinct !DILexicalBlock(scope: !14168, file: !3, line: 3395, column: 8)
!14191 = !DILocation(line: 3396, column: 35, scope: !14190)
!14192 = !DILocation(line: 3396, column: 39, scope: !14190)
!14193 = !DILocation(line: 3396, column: 4, scope: !14190)
!14194 = !DILocation(line: 3398, column: 2, scope: !14163)
!14195 = !DILocalVariable(name: "totelem", scope: !14196, file: !3, line: 3401, type: !73)
!14196 = distinct !DILexicalBlock(scope: !14157, file: !3, line: 3399, column: 7)
!14197 = !DILocation(line: 3401, column: 7, scope: !14196)
!14198 = !DILocalVariable(name: "data", scope: !14196, file: !3, line: 3402, type: !1073)
!14199 = !DILocation(line: 3402, column: 10, scope: !14196)
!14200 = !DILocation(line: 3402, column: 41, scope: !14196)
!14201 = !DILocation(line: 3402, column: 48, scope: !14196)
!14202 = !DILocation(line: 3402, column: 17, scope: !14196)
!14203 = !DILocation(line: 3405, column: 31, scope: !14196)
!14204 = !DILocation(line: 3405, column: 36, scope: !14196)
!14205 = !DILocation(line: 3405, column: 8, scope: !14196)
!14206 = !DILocation(line: 3405, column: 6, scope: !14196)
!14207 = !DILocation(line: 3406, column: 17, scope: !14196)
!14208 = !DILocation(line: 3406, column: 3, scope: !14196)
!14209 = !DILocation(line: 3406, column: 7, scope: !14196)
!14210 = !DILocation(line: 3406, column: 15, scope: !14196)
!14211 = !DILocation(line: 3407, column: 14, scope: !14196)
!14212 = !DILocation(line: 3407, column: 3, scope: !14196)
!14213 = !DILocation(line: 3407, column: 7, scope: !14196)
!14214 = !DILocation(line: 3407, column: 12, scope: !14196)
!14215 = !DILocation(line: 3410, column: 9, scope: !14114)
!14216 = !DILocation(line: 3410, column: 2, scope: !14114)
!14217 = distinct !DISubprogram(name: "insert_lattkey", scope: !3, file: !3, line: 3335, type: !14038, scopeLine: 3336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!14218 = !DILocalVariable(name: "scene", arg: 1, scope: !14217, file: !3, line: 3335, type: !6411)
!14219 = !DILocation(line: 3335, column: 40, scope: !14217)
!14220 = !DILocalVariable(name: "ob", arg: 2, scope: !14217, file: !3, line: 3335, type: !5166)
!14221 = !DILocation(line: 3335, column: 55, scope: !14217)
!14222 = !DILocalVariable(name: "name", arg: 3, scope: !14217, file: !3, line: 3335, type: !2669)
!14223 = !DILocation(line: 3335, column: 71, scope: !14217)
!14224 = !DILocalVariable(name: "from_mix", arg: 4, scope: !14217, file: !3, line: 3335, type: !3482)
!14225 = !DILocation(line: 3335, column: 88, scope: !14217)
!14226 = !DILocalVariable(name: "lt", scope: !14217, file: !3, line: 3337, type: !8112)
!14227 = !DILocation(line: 3337, column: 11, scope: !14217)
!14228 = !DILocation(line: 3337, column: 16, scope: !14217)
!14229 = !DILocation(line: 3337, column: 20, scope: !14217)
!14230 = !DILocalVariable(name: "key", scope: !14217, file: !3, line: 3338, type: !13153)
!14231 = !DILocation(line: 3338, column: 7, scope: !14217)
!14232 = !DILocation(line: 3338, column: 13, scope: !14217)
!14233 = !DILocation(line: 3338, column: 17, scope: !14217)
!14234 = !DILocalVariable(name: "kb", scope: !14217, file: !3, line: 3339, type: !759)
!14235 = !DILocation(line: 3339, column: 12, scope: !14217)
!14236 = !DILocalVariable(name: "newkey", scope: !14217, file: !3, line: 3340, type: !73)
!14237 = !DILocation(line: 3340, column: 6, scope: !14217)
!14238 = !DILocation(line: 3342, column: 6, scope: !14239)
!14239 = distinct !DILexicalBlock(scope: !14217, file: !3, line: 3342, column: 6)
!14240 = !DILocation(line: 3342, column: 10, scope: !14239)
!14241 = !DILocation(line: 3342, column: 6, scope: !14217)
!14242 = !DILocation(line: 3343, column: 37, scope: !14243)
!14243 = distinct !DILexicalBlock(scope: !14239, file: !3, line: 3342, column: 19)
!14244 = !DILocation(line: 3343, column: 31, scope: !14243)
!14245 = !DILocation(line: 3343, column: 19, scope: !14243)
!14246 = !DILocation(line: 3343, column: 9, scope: !14243)
!14247 = !DILocation(line: 3343, column: 13, scope: !14243)
!14248 = !DILocation(line: 3343, column: 17, scope: !14243)
!14249 = !DILocation(line: 3343, column: 7, scope: !14243)
!14250 = !DILocation(line: 3344, column: 3, scope: !14243)
!14251 = !DILocation(line: 3344, column: 8, scope: !14243)
!14252 = !DILocation(line: 3344, column: 13, scope: !14243)
!14253 = !DILocation(line: 3345, column: 10, scope: !14243)
!14254 = !DILocation(line: 3346, column: 2, scope: !14243)
!14255 = !DILocation(line: 3348, column: 6, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14217, file: !3, line: 3348, column: 6)
!14257 = !DILocation(line: 3348, column: 13, scope: !14256)
!14258 = !DILocation(line: 3348, column: 16, scope: !14256)
!14259 = !DILocation(line: 3348, column: 25, scope: !14256)
!14260 = !DILocation(line: 3348, column: 6, scope: !14217)
!14261 = !DILocation(line: 3349, column: 31, scope: !14262)
!14262 = distinct !DILexicalBlock(scope: !14256, file: !3, line: 3348, column: 35)
!14263 = !DILocation(line: 3349, column: 36, scope: !14262)
!14264 = !DILocation(line: 3349, column: 8, scope: !14262)
!14265 = !DILocation(line: 3349, column: 6, scope: !14262)
!14266 = !DILocation(line: 3350, column: 8, scope: !14267)
!14267 = distinct !DILexicalBlock(scope: !14262, file: !3, line: 3350, column: 7)
!14268 = !DILocation(line: 3350, column: 7, scope: !14262)
!14269 = !DILocalVariable(name: "basekb", scope: !14270, file: !3, line: 3351, type: !759)
!14270 = distinct !DILexicalBlock(scope: !14267, file: !3, line: 3350, column: 16)
!14271 = !DILocation(line: 3351, column: 14, scope: !14270)
!14272 = !DILocation(line: 3351, column: 35, scope: !14270)
!14273 = !DILocation(line: 3351, column: 40, scope: !14270)
!14274 = !DILocation(line: 3351, column: 46, scope: !14270)
!14275 = !DILocation(line: 3351, column: 23, scope: !14270)
!14276 = !DILocation(line: 3352, column: 15, scope: !14270)
!14277 = !DILocation(line: 3352, column: 29, scope: !14270)
!14278 = !DILocation(line: 3352, column: 37, scope: !14270)
!14279 = !DILocation(line: 3352, column: 4, scope: !14270)
!14280 = !DILocation(line: 3352, column: 8, scope: !14270)
!14281 = !DILocation(line: 3352, column: 13, scope: !14270)
!14282 = !DILocation(line: 3353, column: 18, scope: !14270)
!14283 = !DILocation(line: 3353, column: 26, scope: !14270)
!14284 = !DILocation(line: 3353, column: 4, scope: !14270)
!14285 = !DILocation(line: 3353, column: 8, scope: !14270)
!14286 = !DILocation(line: 3353, column: 16, scope: !14270)
!14287 = !DILocation(line: 3354, column: 3, scope: !14270)
!14288 = !DILocation(line: 3356, column: 33, scope: !14289)
!14289 = distinct !DILexicalBlock(scope: !14267, file: !3, line: 3355, column: 8)
!14290 = !DILocation(line: 3356, column: 37, scope: !14289)
!14291 = !DILocation(line: 3356, column: 4, scope: !14289)
!14292 = !DILocation(line: 3358, column: 2, scope: !14262)
!14293 = !DILocalVariable(name: "totelem", scope: !14294, file: !3, line: 3361, type: !73)
!14294 = distinct !DILexicalBlock(scope: !14256, file: !3, line: 3359, column: 7)
!14295 = !DILocation(line: 3361, column: 7, scope: !14294)
!14296 = !DILocalVariable(name: "data", scope: !14294, file: !3, line: 3362, type: !1073)
!14297 = !DILocation(line: 3362, column: 10, scope: !14294)
!14298 = !DILocation(line: 3362, column: 41, scope: !14294)
!14299 = !DILocation(line: 3362, column: 48, scope: !14294)
!14300 = !DILocation(line: 3362, column: 17, scope: !14294)
!14301 = !DILocation(line: 3365, column: 31, scope: !14294)
!14302 = !DILocation(line: 3365, column: 36, scope: !14294)
!14303 = !DILocation(line: 3365, column: 8, scope: !14294)
!14304 = !DILocation(line: 3365, column: 6, scope: !14294)
!14305 = !DILocation(line: 3366, column: 17, scope: !14294)
!14306 = !DILocation(line: 3366, column: 3, scope: !14294)
!14307 = !DILocation(line: 3366, column: 7, scope: !14294)
!14308 = !DILocation(line: 3366, column: 15, scope: !14294)
!14309 = !DILocation(line: 3367, column: 14, scope: !14294)
!14310 = !DILocation(line: 3367, column: 3, scope: !14294)
!14311 = !DILocation(line: 3367, column: 7, scope: !14294)
!14312 = !DILocation(line: 3367, column: 12, scope: !14294)
!14313 = !DILocation(line: 3370, column: 9, scope: !14217)
!14314 = !DILocation(line: 3370, column: 2, scope: !14217)
!14315 = distinct !DISubprogram(name: "BKE_object_is_child_recursive", scope: !3, file: !3, line: 3429, type: !14316, scopeLine: 3430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!14316 = !DISubroutineType(types: !14317)
!14317 = !{!1788, !5166, !5166}
!14318 = !DILocalVariable(name: "ob_parent", arg: 1, scope: !14315, file: !3, line: 3429, type: !5166)
!14319 = !DILocation(line: 3429, column: 44, scope: !14315)
!14320 = !DILocalVariable(name: "ob_child", arg: 2, scope: !14315, file: !3, line: 3429, type: !5166)
!14321 = !DILocation(line: 3429, column: 63, scope: !14315)
!14322 = !DILocation(line: 3431, column: 18, scope: !14323)
!14323 = distinct !DILexicalBlock(scope: !14315, file: !3, line: 3431, column: 2)
!14324 = !DILocation(line: 3431, column: 28, scope: !14323)
!14325 = !DILocation(line: 3431, column: 16, scope: !14323)
!14326 = !DILocation(line: 3431, column: 7, scope: !14323)
!14327 = !DILocation(line: 3431, column: 36, scope: !14328)
!14328 = distinct !DILexicalBlock(scope: !14323, file: !3, line: 3431, column: 2)
!14329 = !DILocation(line: 3431, column: 2, scope: !14323)
!14330 = !DILocation(line: 3432, column: 7, scope: !14331)
!14331 = distinct !DILexicalBlock(scope: !14332, file: !3, line: 3432, column: 7)
!14332 = distinct !DILexicalBlock(scope: !14328, file: !3, line: 3431, column: 75)
!14333 = !DILocation(line: 3432, column: 19, scope: !14331)
!14334 = !DILocation(line: 3432, column: 16, scope: !14331)
!14335 = !DILocation(line: 3432, column: 7, scope: !14332)
!14336 = !DILocation(line: 3433, column: 4, scope: !14337)
!14337 = distinct !DILexicalBlock(scope: !14331, file: !3, line: 3432, column: 30)
!14338 = !DILocation(line: 3435, column: 2, scope: !14332)
!14339 = !DILocation(line: 3431, column: 57, scope: !14328)
!14340 = !DILocation(line: 3431, column: 67, scope: !14328)
!14341 = !DILocation(line: 3431, column: 55, scope: !14328)
!14342 = !DILocation(line: 3431, column: 2, scope: !14328)
!14343 = distinct !{!14343, !14329, !14344}
!14344 = !DILocation(line: 3435, column: 2, scope: !14323)
!14345 = !DILocation(line: 3436, column: 2, scope: !14315)
!14346 = !DILocation(line: 3437, column: 1, scope: !14315)
!14347 = distinct !DISubprogram(name: "BKE_object_is_modified", scope: !3, file: !3, line: 3441, type: !14348, scopeLine: 3442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!14348 = !DISubroutineType(types: !14349)
!14349 = !{!73, !6411, !5166}
!14350 = !DILocalVariable(name: "scene", arg: 1, scope: !14347, file: !3, line: 3441, type: !6411)
!14351 = !DILocation(line: 3441, column: 35, scope: !14347)
!14352 = !DILocalVariable(name: "ob", arg: 2, scope: !14347, file: !3, line: 3441, type: !5166)
!14353 = !DILocation(line: 3441, column: 50, scope: !14347)
!14354 = !DILocalVariable(name: "flag", scope: !14347, file: !3, line: 3443, type: !73)
!14355 = !DILocation(line: 3443, column: 6, scope: !14347)
!14356 = !DILocation(line: 3445, column: 26, scope: !14357)
!14357 = distinct !DILexicalBlock(scope: !14347, file: !3, line: 3445, column: 6)
!14358 = !DILocation(line: 3445, column: 6, scope: !14357)
!14359 = !DILocation(line: 3445, column: 6, scope: !14347)
!14360 = !DILocation(line: 3446, column: 8, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !14357, file: !3, line: 3445, column: 31)
!14362 = !DILocation(line: 3447, column: 2, scope: !14361)
!14363 = !DILocalVariable(name: "md", scope: !14364, file: !3, line: 3449, type: !5260)
!14364 = distinct !DILexicalBlock(scope: !14357, file: !3, line: 3448, column: 7)
!14365 = !DILocation(line: 3449, column: 17, scope: !14364)
!14366 = !DILocalVariable(name: "virtualModifierData", scope: !14364, file: !3, line: 3450, type: !14367)
!14367 = !DIDerivedType(tag: DW_TAG_typedef, name: "VirtualModifierData", file: !87, line: 391, baseType: !14368)
!14368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VirtualModifierData", file: !87, line: 386, size: 5568, elements: !14369)
!14369 = !{!14370, !14371, !14380, !14389}
!14370 = !DIDerivedType(tag: DW_TAG_member, name: "amd", scope: !14368, file: !87, line: 387, baseType: !5262, size: 1600)
!14371 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !14368, file: !87, line: 388, baseType: !14372, size: 1536, offset: 1600)
!14372 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveModifierData", file: !128, line: 154, baseType: !14373)
!14373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveModifierData", file: !128, line: 147, size: 1536, elements: !14374)
!14374 = !{!14375, !14376, !14377, !14378, !14379}
!14375 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !14373, file: !128, line: 148, baseType: !981, size: 896)
!14376 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !14373, file: !128, line: 150, baseType: !966, size: 64, offset: 896)
!14377 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14373, file: !128, line: 151, baseType: !648, size: 512, offset: 960)
!14378 = !DIDerivedType(tag: DW_TAG_member, name: "defaxis", scope: !14373, file: !128, line: 152, baseType: !632, size: 16, offset: 1472)
!14379 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !14373, file: !128, line: 153, baseType: !2014, size: 48, offset: 1488)
!14380 = !DIDerivedType(tag: DW_TAG_member, name: "lmd", scope: !14368, file: !87, line: 389, baseType: !14381, size: 1536, offset: 3136)
!14381 = !DIDerivedType(tag: DW_TAG_typedef, name: "LatticeModifierData", file: !128, line: 145, baseType: !14382)
!14382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LatticeModifierData", file: !128, line: 138, size: 1536, elements: !14383)
!14383 = !{!14384, !14385, !14386, !14387, !14388}
!14384 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !14382, file: !128, line: 139, baseType: !981, size: 896)
!14385 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !14382, file: !128, line: 141, baseType: !966, size: 64, offset: 896)
!14386 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14382, file: !128, line: 142, baseType: !648, size: 512, offset: 960)
!14387 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !14382, file: !128, line: 143, baseType: !713, size: 32, offset: 1472)
!14388 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !14382, file: !128, line: 144, baseType: !1725, size: 32, offset: 1504)
!14389 = !DIDerivedType(tag: DW_TAG_member, name: "smd", scope: !14368, file: !87, line: 390, baseType: !14390, size: 896, offset: 4672)
!14390 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShapeKeyModifierData", file: !128, line: 816, baseType: !14391)
!14391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShapeKeyModifierData", file: !128, line: 814, size: 896, elements: !14392)
!14392 = !{!14393}
!14393 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !14391, file: !128, line: 815, baseType: !981, size: 896)
!14394 = !DILocation(line: 3450, column: 23, scope: !14364)
!14395 = !DILocation(line: 3452, column: 46, scope: !14396)
!14396 = distinct !DILexicalBlock(scope: !14364, file: !3, line: 3452, column: 3)
!14397 = !DILocation(line: 3452, column: 13, scope: !14396)
!14398 = !DILocation(line: 3452, column: 11, scope: !14396)
!14399 = !DILocation(line: 3452, column: 8, scope: !14396)
!14400 = !DILocation(line: 3453, column: 8, scope: !14401)
!14401 = distinct !DILexicalBlock(scope: !14396, file: !3, line: 3452, column: 3)
!14402 = !DILocation(line: 3453, column: 11, scope: !14401)
!14403 = !DILocation(line: 3453, column: 15, scope: !14401)
!14404 = !DILocation(line: 3453, column: 20, scope: !14401)
!14405 = !DILocation(line: 0, scope: !14401)
!14406 = !DILocation(line: 3452, column: 3, scope: !14396)
!14407 = !DILocation(line: 3456, column: 9, scope: !14408)
!14408 = distinct !DILexicalBlock(scope: !14409, file: !3, line: 3456, column: 8)
!14409 = distinct !DILexicalBlock(scope: !14401, file: !3, line: 3455, column: 3)
!14410 = !DILocation(line: 3456, column: 14, scope: !14408)
!14411 = !DILocation(line: 3456, column: 38, scope: !14408)
!14412 = !DILocation(line: 3456, column: 43, scope: !14408)
!14413 = !DILocation(line: 3456, column: 65, scope: !14408)
!14414 = !DILocation(line: 3456, column: 72, scope: !14408)
!14415 = !DILocation(line: 3456, column: 46, scope: !14408)
!14416 = !DILocation(line: 3456, column: 8, scope: !14409)
!14417 = !DILocation(line: 3457, column: 10, scope: !14408)
!14418 = !DILocation(line: 3457, column: 5, scope: !14408)
!14419 = !DILocation(line: 3459, column: 9, scope: !14420)
!14420 = distinct !DILexicalBlock(scope: !14409, file: !3, line: 3459, column: 8)
!14421 = !DILocation(line: 3459, column: 14, scope: !14420)
!14422 = !DILocation(line: 3459, column: 40, scope: !14420)
!14423 = !DILocation(line: 3459, column: 45, scope: !14420)
!14424 = !DILocation(line: 3459, column: 67, scope: !14420)
!14425 = !DILocation(line: 3459, column: 74, scope: !14420)
!14426 = !DILocation(line: 3459, column: 48, scope: !14420)
!14427 = !DILocation(line: 3459, column: 8, scope: !14409)
!14428 = !DILocation(line: 3460, column: 10, scope: !14420)
!14429 = !DILocation(line: 3460, column: 5, scope: !14420)
!14430 = !DILocation(line: 3461, column: 3, scope: !14409)
!14431 = !DILocation(line: 3454, column: 13, scope: !14401)
!14432 = !DILocation(line: 3454, column: 17, scope: !14401)
!14433 = !DILocation(line: 3454, column: 11, scope: !14401)
!14434 = !DILocation(line: 3452, column: 3, scope: !14401)
!14435 = distinct !{!14435, !14406, !14436}
!14436 = !DILocation(line: 3461, column: 3, scope: !14396)
!14437 = !DILocation(line: 3464, column: 9, scope: !14347)
!14438 = !DILocation(line: 3464, column: 2, scope: !14347)
!14439 = distinct !DISubprogram(name: "BKE_object_is_deform_modified", scope: !3, file: !3, line: 3470, type: !14348, scopeLine: 3471, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!14440 = !DILocalVariable(name: "scene", arg: 1, scope: !14439, file: !3, line: 3470, type: !6411)
!14441 = !DILocation(line: 3470, column: 42, scope: !14439)
!14442 = !DILocalVariable(name: "ob", arg: 2, scope: !14439, file: !3, line: 3470, type: !5166)
!14443 = !DILocation(line: 3470, column: 57, scope: !14439)
!14444 = !DILocalVariable(name: "md", scope: !14439, file: !3, line: 3472, type: !5260)
!14445 = !DILocation(line: 3472, column: 16, scope: !14439)
!14446 = !DILocalVariable(name: "virtualModifierData", scope: !14439, file: !3, line: 3473, type: !14367)
!14447 = !DILocation(line: 3473, column: 22, scope: !14439)
!14448 = !DILocalVariable(name: "flag", scope: !14439, file: !3, line: 3474, type: !73)
!14449 = !DILocation(line: 3474, column: 6, scope: !14439)
!14450 = !DILocation(line: 3476, column: 26, scope: !14451)
!14451 = distinct !DILexicalBlock(scope: !14439, file: !3, line: 3476, column: 6)
!14452 = !DILocation(line: 3476, column: 6, scope: !14451)
!14453 = !DILocation(line: 3476, column: 6, scope: !14439)
!14454 = !DILocation(line: 3477, column: 8, scope: !14451)
!14455 = !DILocation(line: 3477, column: 3, scope: !14451)
!14456 = !DILocation(line: 3480, column: 45, scope: !14457)
!14457 = distinct !DILexicalBlock(scope: !14439, file: !3, line: 3480, column: 2)
!14458 = !DILocation(line: 3480, column: 12, scope: !14457)
!14459 = !DILocation(line: 3480, column: 10, scope: !14457)
!14460 = !DILocation(line: 3480, column: 7, scope: !14457)
!14461 = !DILocation(line: 3481, column: 7, scope: !14462)
!14462 = distinct !DILexicalBlock(scope: !14457, file: !3, line: 3480, column: 2)
!14463 = !DILocation(line: 3481, column: 10, scope: !14462)
!14464 = !DILocation(line: 3481, column: 14, scope: !14462)
!14465 = !DILocation(line: 3481, column: 19, scope: !14462)
!14466 = !DILocation(line: 0, scope: !14462)
!14467 = !DILocation(line: 3480, column: 2, scope: !14457)
!14468 = !DILocalVariable(name: "mti", scope: !14469, file: !3, line: 3484, type: !5590)
!14469 = distinct !DILexicalBlock(scope: !14462, file: !3, line: 3483, column: 2)
!14470 = !DILocation(line: 3484, column: 21, scope: !14469)
!14471 = !DILocation(line: 3484, column: 48, scope: !14469)
!14472 = !DILocation(line: 3484, column: 52, scope: !14469)
!14473 = !DILocation(line: 3484, column: 27, scope: !14469)
!14474 = !DILocation(line: 3486, column: 7, scope: !14475)
!14475 = distinct !DILexicalBlock(scope: !14469, file: !3, line: 3486, column: 7)
!14476 = !DILocation(line: 3486, column: 12, scope: !14475)
!14477 = !DILocation(line: 3486, column: 17, scope: !14475)
!14478 = !DILocation(line: 3486, column: 7, scope: !14469)
!14479 = !DILocation(line: 3487, column: 10, scope: !14480)
!14480 = distinct !DILexicalBlock(scope: !14481, file: !3, line: 3487, column: 8)
!14481 = distinct !DILexicalBlock(scope: !14475, file: !3, line: 3486, column: 50)
!14482 = !DILocation(line: 3487, column: 15, scope: !14480)
!14483 = !DILocation(line: 3487, column: 39, scope: !14480)
!14484 = !DILocation(line: 3487, column: 61, scope: !14480)
!14485 = !DILocation(line: 3487, column: 68, scope: !14480)
!14486 = !DILocation(line: 3487, column: 42, scope: !14480)
!14487 = !DILocation(line: 3487, column: 8, scope: !14481)
!14488 = !DILocation(line: 3488, column: 10, scope: !14480)
!14489 = !DILocation(line: 3488, column: 5, scope: !14480)
!14490 = !DILocation(line: 3490, column: 10, scope: !14491)
!14491 = distinct !DILexicalBlock(scope: !14481, file: !3, line: 3490, column: 8)
!14492 = !DILocation(line: 3490, column: 15, scope: !14491)
!14493 = !DILocation(line: 3490, column: 41, scope: !14491)
!14494 = !DILocation(line: 3490, column: 63, scope: !14491)
!14495 = !DILocation(line: 3490, column: 70, scope: !14491)
!14496 = !DILocation(line: 3490, column: 44, scope: !14491)
!14497 = !DILocation(line: 3490, column: 8, scope: !14481)
!14498 = !DILocation(line: 3491, column: 10, scope: !14491)
!14499 = !DILocation(line: 3491, column: 5, scope: !14491)
!14500 = !DILocation(line: 3492, column: 3, scope: !14481)
!14501 = !DILocation(line: 3493, column: 2, scope: !14469)
!14502 = !DILocation(line: 3482, column: 12, scope: !14462)
!14503 = !DILocation(line: 3482, column: 16, scope: !14462)
!14504 = !DILocation(line: 3482, column: 10, scope: !14462)
!14505 = !DILocation(line: 3480, column: 2, scope: !14462)
!14506 = distinct !{!14506, !14467, !14507}
!14507 = !DILocation(line: 3493, column: 2, scope: !14457)
!14508 = !DILocation(line: 3495, column: 9, scope: !14439)
!14509 = !DILocation(line: 3495, column: 2, scope: !14439)
!14510 = distinct !DISubprogram(name: "BKE_object_is_animated", scope: !3, file: !3, line: 3499, type: !14511, scopeLine: 3500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!14511 = !DISubroutineType(types: !14512)
!14512 = !{!1788, !6411, !5166}
!14513 = !DILocalVariable(name: "scene", arg: 1, scope: !14510, file: !3, line: 3499, type: !6411)
!14514 = !DILocation(line: 3499, column: 36, scope: !14510)
!14515 = !DILocalVariable(name: "ob", arg: 2, scope: !14510, file: !3, line: 3499, type: !5166)
!14516 = !DILocation(line: 3499, column: 51, scope: !14510)
!14517 = !DILocalVariable(name: "md", scope: !14510, file: !3, line: 3501, type: !5260)
!14518 = !DILocation(line: 3501, column: 16, scope: !14510)
!14519 = !DILocalVariable(name: "virtualModifierData", scope: !14510, file: !3, line: 3502, type: !14367)
!14520 = !DILocation(line: 3502, column: 22, scope: !14510)
!14521 = !DILocation(line: 3504, column: 45, scope: !14522)
!14522 = distinct !DILexicalBlock(scope: !14510, file: !3, line: 3504, column: 2)
!14523 = !DILocation(line: 3504, column: 12, scope: !14522)
!14524 = !DILocation(line: 3504, column: 10, scope: !14522)
!14525 = !DILocation(line: 3504, column: 7, scope: !14522)
!14526 = !DILocation(line: 3504, column: 72, scope: !14527)
!14527 = distinct !DILexicalBlock(scope: !14522, file: !3, line: 3504, column: 2)
!14528 = !DILocation(line: 3504, column: 2, scope: !14522)
!14529 = !DILocation(line: 3505, column: 30, scope: !14530)
!14530 = distinct !DILexicalBlock(scope: !14527, file: !3, line: 3505, column: 7)
!14531 = !DILocation(line: 3505, column: 7, scope: !14530)
!14532 = !DILocation(line: 3505, column: 34, scope: !14530)
!14533 = !DILocation(line: 3506, column: 27, scope: !14530)
!14534 = !DILocation(line: 3506, column: 34, scope: !14530)
!14535 = !DILocation(line: 3506, column: 8, scope: !14530)
!14536 = !DILocation(line: 3506, column: 62, scope: !14530)
!14537 = !DILocation(line: 3507, column: 27, scope: !14530)
!14538 = !DILocation(line: 3507, column: 34, scope: !14530)
!14539 = !DILocation(line: 3507, column: 8, scope: !14530)
!14540 = !DILocation(line: 3505, column: 7, scope: !14527)
!14541 = !DILocation(line: 3509, column: 4, scope: !14542)
!14542 = distinct !DILexicalBlock(scope: !14530, file: !3, line: 3508, column: 3)
!14543 = !DILocation(line: 3507, column: 59, scope: !14530)
!14544 = !DILocation(line: 3504, column: 81, scope: !14527)
!14545 = !DILocation(line: 3504, column: 85, scope: !14527)
!14546 = !DILocation(line: 3504, column: 79, scope: !14527)
!14547 = !DILocation(line: 3504, column: 2, scope: !14527)
!14548 = distinct !{!14548, !14528, !14549}
!14549 = !DILocation(line: 3510, column: 3, scope: !14522)
!14550 = !DILocation(line: 3511, column: 2, scope: !14510)
!14551 = !DILocation(line: 3512, column: 1, scope: !14510)
!14552 = distinct !DISubprogram(name: "BKE_object_relink", scope: !3, file: !3, line: 3520, type: !5284, scopeLine: 3521, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!14553 = !DILocalVariable(name: "ob", arg: 1, scope: !14552, file: !3, line: 3520, type: !5166)
!14554 = !DILocation(line: 3520, column: 32, scope: !14552)
!14555 = !DILocation(line: 3522, column: 6, scope: !14556)
!14556 = distinct !DILexicalBlock(scope: !14552, file: !3, line: 3522, column: 6)
!14557 = !DILocation(line: 3522, column: 10, scope: !14556)
!14558 = !DILocation(line: 3522, column: 13, scope: !14556)
!14559 = !DILocation(line: 3522, column: 6, scope: !14552)
!14560 = !DILocation(line: 3523, column: 3, scope: !14556)
!14561 = !DILocation(line: 3525, column: 26, scope: !14552)
!14562 = !DILocation(line: 3525, column: 30, scope: !14552)
!14563 = !DILocation(line: 3525, column: 2, scope: !14552)
!14564 = !DILocation(line: 3526, column: 6, scope: !14565)
!14565 = distinct !DILexicalBlock(scope: !14552, file: !3, line: 3526, column: 6)
!14566 = !DILocation(line: 3526, column: 10, scope: !14565)
!14567 = !DILocation(line: 3526, column: 6, scope: !14552)
!14568 = !DILocalVariable(name: "chan", scope: !14569, file: !3, line: 3527, type: !5484)
!14569 = distinct !DILexicalBlock(scope: !14565, file: !3, line: 3526, column: 16)
!14570 = !DILocation(line: 3527, column: 17, scope: !14569)
!14571 = !DILocation(line: 3528, column: 15, scope: !14572)
!14572 = distinct !DILexicalBlock(scope: !14569, file: !3, line: 3528, column: 3)
!14573 = !DILocation(line: 3528, column: 19, scope: !14572)
!14574 = !DILocation(line: 3528, column: 25, scope: !14572)
!14575 = !DILocation(line: 3528, column: 34, scope: !14572)
!14576 = !DILocation(line: 3528, column: 13, scope: !14572)
!14577 = !DILocation(line: 3528, column: 8, scope: !14572)
!14578 = !DILocation(line: 3528, column: 41, scope: !14579)
!14579 = distinct !DILexicalBlock(scope: !14572, file: !3, line: 3528, column: 3)
!14580 = !DILocation(line: 3528, column: 3, scope: !14572)
!14581 = !DILocation(line: 3529, column: 28, scope: !14582)
!14582 = distinct !DILexicalBlock(scope: !14579, file: !3, line: 3528, column: 66)
!14583 = !DILocation(line: 3529, column: 34, scope: !14582)
!14584 = !DILocation(line: 3529, column: 4, scope: !14582)
!14585 = !DILocation(line: 3530, column: 3, scope: !14582)
!14586 = !DILocation(line: 3528, column: 54, scope: !14579)
!14587 = !DILocation(line: 3528, column: 60, scope: !14579)
!14588 = !DILocation(line: 3528, column: 52, scope: !14579)
!14589 = !DILocation(line: 3528, column: 3, scope: !14579)
!14590 = distinct !{!14590, !14580, !14591}
!14591 = !DILocation(line: 3530, column: 3, scope: !14572)
!14592 = !DILocation(line: 3531, column: 2, scope: !14569)
!14593 = !DILocation(line: 3532, column: 26, scope: !14552)
!14594 = !DILocation(line: 3532, column: 2, scope: !14552)
!14595 = !DILocation(line: 3534, column: 6, scope: !14596)
!14596 = distinct !DILexicalBlock(scope: !14552, file: !3, line: 3534, column: 6)
!14597 = !DILocation(line: 3534, column: 10, scope: !14596)
!14598 = !DILocation(line: 3534, column: 6, scope: !14552)
!14599 = !DILocation(line: 3535, column: 23, scope: !14596)
!14600 = !DILocation(line: 3535, column: 27, scope: !14596)
!14601 = !DILocation(line: 3535, column: 3, scope: !14596)
!14602 = !DILocation(line: 3537, column: 6, scope: !14603)
!14603 = distinct !DILexicalBlock(scope: !14552, file: !3, line: 3537, column: 6)
!14604 = !DILocation(line: 3537, column: 10, scope: !14603)
!14605 = !DILocation(line: 3537, column: 6, scope: !14552)
!14606 = !DILocation(line: 3538, column: 35, scope: !14603)
!14607 = !DILocation(line: 3538, column: 39, scope: !14603)
!14608 = !DILocation(line: 3538, column: 3, scope: !14603)
!14609 = !DILocation(line: 3540, column: 2, scope: !14610)
!14610 = distinct !DILexicalBlock(scope: !14552, file: !3, line: 3540, column: 2)
!14611 = !DILocation(line: 3540, column: 2, scope: !14552)
!14612 = !DILocation(line: 3542, column: 2, scope: !14613)
!14613 = distinct !DILexicalBlock(scope: !14552, file: !3, line: 3542, column: 2)
!14614 = !DILocation(line: 3542, column: 2, scope: !14552)
!14615 = !DILocation(line: 3543, column: 2, scope: !14616)
!14616 = distinct !DILexicalBlock(scope: !14552, file: !3, line: 3543, column: 2)
!14617 = !DILocation(line: 3543, column: 2, scope: !14552)
!14618 = !DILocation(line: 3544, column: 1, scope: !14552)
!14619 = distinct !DISubprogram(name: "copy_object__forwardModifierLinks", scope: !3, file: !3, line: 3514, type: !14620, scopeLine: 3515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!14620 = !DISubroutineType(types: !14621)
!14621 = !{null, !592, !5166, !14622}
!14622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!14623 = !DILocalVariable(name: "UNUSED_userData", arg: 1, scope: !14619, file: !3, line: 3514, type: !592)
!14624 = !DILocation(line: 3514, column: 53, scope: !14619)
!14625 = !DILocalVariable(name: "UNUSED_ob", arg: 2, scope: !14619, file: !3, line: 3514, type: !5166)
!14626 = !DILocation(line: 3514, column: 79, scope: !14619)
!14627 = !DILocalVariable(name: "idpoin", arg: 3, scope: !14619, file: !3, line: 3514, type: !14622)
!14628 = !DILocation(line: 3514, column: 96, scope: !14619)
!14629 = !DILocation(line: 3517, column: 7, scope: !14630)
!14630 = distinct !DILexicalBlock(scope: !14619, file: !3, line: 3517, column: 6)
!14631 = !DILocation(line: 3517, column: 6, scope: !14630)
!14632 = !DILocation(line: 3517, column: 14, scope: !14630)
!14633 = !DILocation(line: 3517, column: 19, scope: !14630)
!14634 = !DILocation(line: 3517, column: 18, scope: !14630)
!14635 = !DILocation(line: 3517, column: 28, scope: !14630)
!14636 = !DILocation(line: 3517, column: 17, scope: !14630)
!14637 = !DILocation(line: 3517, column: 6, scope: !14619)
!14638 = !DILocation(line: 3517, column: 47, scope: !14630)
!14639 = !DILocation(line: 3517, column: 46, scope: !14630)
!14640 = !DILocation(line: 3517, column: 56, scope: !14630)
!14641 = !DILocation(line: 3517, column: 36, scope: !14630)
!14642 = !DILocation(line: 3517, column: 43, scope: !14630)
!14643 = !DILocation(line: 3517, column: 35, scope: !14630)
!14644 = !DILocation(line: 3518, column: 1, scope: !14619)
!14645 = distinct !DISubprogram(name: "BKE_object_movieclip_get", scope: !3, file: !3, line: 3546, type: !14646, scopeLine: 3547, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!14646 = !DISubroutineType(types: !14647)
!14647 = !{!1320, !6411, !5166, !1788}
!14648 = !DILocalVariable(name: "scene", arg: 1, scope: !14645, file: !3, line: 3546, type: !6411)
!14649 = !DILocation(line: 3546, column: 44, scope: !14645)
!14650 = !DILocalVariable(name: "ob", arg: 2, scope: !14645, file: !3, line: 3546, type: !5166)
!14651 = !DILocation(line: 3546, column: 59, scope: !14645)
!14652 = !DILocalVariable(name: "use_default", arg: 3, scope: !14645, file: !3, line: 3546, type: !1788)
!14653 = !DILocation(line: 3546, column: 68, scope: !14645)
!14654 = !DILocalVariable(name: "clip", scope: !14645, file: !3, line: 3548, type: !14655)
!14655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14656, size: 64)
!14656 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieClip", file: !1322, line: 101, baseType: !1321)
!14657 = !DILocation(line: 3548, column: 13, scope: !14645)
!14658 = !DILocation(line: 3548, column: 20, scope: !14645)
!14659 = !DILocation(line: 3548, column: 34, scope: !14645)
!14660 = !DILocation(line: 3548, column: 41, scope: !14645)
!14661 = !DILocalVariable(name: "con", scope: !14645, file: !3, line: 3549, type: !6485)
!14662 = !DILocation(line: 3549, column: 15, scope: !14645)
!14663 = !DILocation(line: 3549, column: 21, scope: !14645)
!14664 = !DILocation(line: 3549, column: 25, scope: !14645)
!14665 = !DILocation(line: 3549, column: 37, scope: !14645)
!14666 = !DILocalVariable(name: "scon", scope: !14645, file: !3, line: 3549, type: !6485)
!14667 = !DILocation(line: 3549, column: 45, scope: !14645)
!14668 = !DILocation(line: 3551, column: 2, scope: !14645)
!14669 = !DILocation(line: 3551, column: 9, scope: !14645)
!14670 = !DILocation(line: 3552, column: 7, scope: !14671)
!14671 = distinct !DILexicalBlock(scope: !14672, file: !3, line: 3552, column: 7)
!14672 = distinct !DILexicalBlock(scope: !14645, file: !3, line: 3551, column: 14)
!14673 = !DILocation(line: 3552, column: 12, scope: !14671)
!14674 = !DILocation(line: 3552, column: 17, scope: !14671)
!14675 = !DILocation(line: 3552, column: 7, scope: !14672)
!14676 = !DILocation(line: 3553, column: 8, scope: !14677)
!14677 = distinct !DILexicalBlock(scope: !14678, file: !3, line: 3553, column: 8)
!14678 = distinct !DILexicalBlock(scope: !14671, file: !3, line: 3552, column: 50)
!14679 = !DILocation(line: 3553, column: 13, scope: !14677)
!14680 = !DILocation(line: 3553, column: 21, scope: !14677)
!14681 = !DILocation(line: 3553, column: 25, scope: !14677)
!14682 = !DILocation(line: 3553, column: 31, scope: !14677)
!14683 = !DILocation(line: 3553, column: 36, scope: !14677)
!14684 = !DILocation(line: 3553, column: 8, scope: !14678)
!14685 = !DILocation(line: 3554, column: 12, scope: !14677)
!14686 = !DILocation(line: 3554, column: 10, scope: !14677)
!14687 = !DILocation(line: 3554, column: 5, scope: !14677)
!14688 = !DILocation(line: 3555, column: 3, scope: !14678)
!14689 = !DILocation(line: 3557, column: 9, scope: !14672)
!14690 = !DILocation(line: 3557, column: 14, scope: !14672)
!14691 = !DILocation(line: 3557, column: 7, scope: !14672)
!14692 = distinct !{!14692, !14668, !14693}
!14693 = !DILocation(line: 3558, column: 2, scope: !14645)
!14694 = !DILocation(line: 3560, column: 6, scope: !14695)
!14695 = distinct !DILexicalBlock(scope: !14645, file: !3, line: 3560, column: 6)
!14696 = !DILocation(line: 3560, column: 6, scope: !14645)
!14697 = !DILocalVariable(name: "solver", scope: !14698, file: !3, line: 3561, type: !14699)
!14698 = distinct !DILexicalBlock(scope: !14695, file: !3, line: 3560, column: 12)
!14699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14700, size: 64)
!14700 = !DIDerivedType(tag: DW_TAG_typedef, name: "bCameraSolverConstraint", file: !375, line: 444, baseType: !14701)
!14701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bCameraSolverConstraint", file: !375, line: 441, size: 128, elements: !14702)
!14702 = !{!14703, !14704, !14705}
!14703 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !14701, file: !375, line: 442, baseType: !1320, size: 64)
!14704 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !14701, file: !375, line: 443, baseType: !73, size: 32, offset: 64)
!14705 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !14701, file: !375, line: 443, baseType: !73, size: 32, offset: 96)
!14706 = !DILocation(line: 3561, column: 28, scope: !14698)
!14707 = !DILocation(line: 3561, column: 37, scope: !14698)
!14708 = !DILocation(line: 3561, column: 43, scope: !14698)
!14709 = !DILocation(line: 3562, column: 8, scope: !14710)
!14710 = distinct !DILexicalBlock(scope: !14698, file: !3, line: 3562, column: 7)
!14711 = !DILocation(line: 3562, column: 16, scope: !14710)
!14712 = !DILocation(line: 3562, column: 21, scope: !14710)
!14713 = !DILocation(line: 3562, column: 48, scope: !14710)
!14714 = !DILocation(line: 3562, column: 7, scope: !14698)
!14715 = !DILocation(line: 3563, column: 11, scope: !14710)
!14716 = !DILocation(line: 3563, column: 19, scope: !14710)
!14717 = !DILocation(line: 3563, column: 9, scope: !14710)
!14718 = !DILocation(line: 3563, column: 4, scope: !14710)
!14719 = !DILocation(line: 3565, column: 11, scope: !14710)
!14720 = !DILocation(line: 3565, column: 18, scope: !14710)
!14721 = !DILocation(line: 3565, column: 9, scope: !14710)
!14722 = !DILocation(line: 3566, column: 2, scope: !14698)
!14723 = !DILocation(line: 3568, column: 9, scope: !14645)
!14724 = !DILocation(line: 3568, column: 2, scope: !14645)
!14725 = distinct !DISubprogram(name: "BKE_object_relational_superset", scope: !3, file: !3, line: 3612, type: !14726, scopeLine: 3613, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!14726 = !DISubroutineType(types: !14727)
!14727 = !{!3182, !993, !14728, !14729}
!14728 = !DIDerivedType(tag: DW_TAG_typedef, name: "eObjectSet", file: !547, line: 213, baseType: !546)
!14729 = !DIDerivedType(tag: DW_TAG_typedef, name: "eObRelationTypes", file: !547, line: 207, baseType: !552)
!14730 = !DILocalVariable(name: "scene", arg: 1, scope: !14725, file: !3, line: 3612, type: !993)
!14731 = !DILocation(line: 3612, column: 56, scope: !14725)
!14732 = !DILocalVariable(name: "objectSet", arg: 2, scope: !14725, file: !3, line: 3612, type: !14728)
!14733 = !DILocation(line: 3612, column: 74, scope: !14725)
!14734 = !DILocalVariable(name: "includeFilter", arg: 3, scope: !14725, file: !3, line: 3612, type: !14729)
!14735 = !DILocation(line: 3612, column: 102, scope: !14725)
!14736 = !DILocalVariable(name: "links", scope: !14725, file: !3, line: 3614, type: !14737)
!14737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14738, size: 64)
!14738 = !DIDerivedType(tag: DW_TAG_typedef, name: "LinkNode", file: !3184, line: 48, baseType: !3183)
!14739 = !DILocation(line: 3614, column: 12, scope: !14725)
!14740 = !DILocalVariable(name: "base", scope: !14725, file: !3, line: 3616, type: !5321)
!14741 = !DILocation(line: 3616, column: 8, scope: !14725)
!14742 = !DILocation(line: 3619, column: 14, scope: !14743)
!14743 = distinct !DILexicalBlock(scope: !14725, file: !3, line: 3619, column: 2)
!14744 = !DILocation(line: 3619, column: 21, scope: !14743)
!14745 = !DILocation(line: 3619, column: 26, scope: !14743)
!14746 = !DILocation(line: 3619, column: 12, scope: !14743)
!14747 = !DILocation(line: 3619, column: 7, scope: !14743)
!14748 = !DILocation(line: 3619, column: 33, scope: !14749)
!14749 = distinct !DILexicalBlock(scope: !14743, file: !3, line: 3619, column: 2)
!14750 = !DILocation(line: 3619, column: 2, scope: !14743)
!14751 = !DILocation(line: 3620, column: 3, scope: !14752)
!14752 = distinct !DILexicalBlock(scope: !14749, file: !3, line: 3619, column: 58)
!14753 = !DILocation(line: 3620, column: 9, scope: !14752)
!14754 = !DILocation(line: 3620, column: 17, scope: !14752)
!14755 = !DILocation(line: 3620, column: 20, scope: !14752)
!14756 = !DILocation(line: 3620, column: 25, scope: !14752)
!14757 = !DILocation(line: 3621, column: 2, scope: !14752)
!14758 = !DILocation(line: 3619, column: 46, scope: !14749)
!14759 = !DILocation(line: 3619, column: 52, scope: !14749)
!14760 = !DILocation(line: 3619, column: 44, scope: !14749)
!14761 = !DILocation(line: 3619, column: 2, scope: !14749)
!14762 = distinct !{!14762, !14750, !14763}
!14763 = !DILocation(line: 3621, column: 2, scope: !14743)
!14764 = !DILocation(line: 3624, column: 14, scope: !14765)
!14765 = distinct !DILexicalBlock(scope: !14725, file: !3, line: 3624, column: 2)
!14766 = !DILocation(line: 3624, column: 21, scope: !14765)
!14767 = !DILocation(line: 3624, column: 26, scope: !14765)
!14768 = !DILocation(line: 3624, column: 12, scope: !14765)
!14769 = !DILocation(line: 3624, column: 7, scope: !14765)
!14770 = !DILocation(line: 3624, column: 33, scope: !14771)
!14771 = distinct !DILexicalBlock(scope: !14765, file: !3, line: 3624, column: 2)
!14772 = !DILocation(line: 3624, column: 2, scope: !14765)
!14773 = !DILocation(line: 3625, column: 7, scope: !14774)
!14774 = distinct !DILexicalBlock(scope: !14775, file: !3, line: 3625, column: 7)
!14775 = distinct !DILexicalBlock(scope: !14771, file: !3, line: 3624, column: 58)
!14776 = !DILocation(line: 3625, column: 17, scope: !14774)
!14777 = !DILocation(line: 3625, column: 7, scope: !14775)
!14778 = !DILocalVariable(name: "ob", scope: !14779, file: !3, line: 3627, type: !5166)
!14779 = distinct !DILexicalBlock(scope: !14774, file: !3, line: 3625, column: 32)
!14780 = !DILocation(line: 3627, column: 12, scope: !14779)
!14781 = !DILocation(line: 3627, column: 17, scope: !14779)
!14782 = !DILocation(line: 3627, column: 23, scope: !14779)
!14783 = !DILocation(line: 3628, column: 27, scope: !14779)
!14784 = !DILocation(line: 3628, column: 4, scope: !14779)
!14785 = !DILocation(line: 3629, column: 3, scope: !14779)
!14786 = !DILocation(line: 3631, column: 9, scope: !14787)
!14787 = distinct !DILexicalBlock(scope: !14788, file: !3, line: 3631, column: 8)
!14788 = distinct !DILexicalBlock(scope: !14774, file: !3, line: 3630, column: 8)
!14789 = !DILocation(line: 3631, column: 19, scope: !14787)
!14790 = !DILocation(line: 3631, column: 38, scope: !14787)
!14791 = !DILocation(line: 3631, column: 41, scope: !14787)
!14792 = !DILocation(line: 3631, column: 92, scope: !14787)
!14793 = !DILocation(line: 3632, column: 9, scope: !14787)
!14794 = !DILocation(line: 3632, column: 19, scope: !14787)
!14795 = !DILocation(line: 3632, column: 38, scope: !14787)
!14796 = !DILocation(line: 3632, column: 41, scope: !14787)
!14797 = !DILocation(line: 3631, column: 8, scope: !14788)
!14798 = !DILocalVariable(name: "ob", scope: !14799, file: !3, line: 3634, type: !5166)
!14799 = distinct !DILexicalBlock(scope: !14787, file: !3, line: 3633, column: 4)
!14800 = !DILocation(line: 3634, column: 13, scope: !14799)
!14801 = !DILocation(line: 3634, column: 18, scope: !14799)
!14802 = !DILocation(line: 3634, column: 24, scope: !14799)
!14803 = !DILocation(line: 3636, column: 25, scope: !14804)
!14804 = distinct !DILexicalBlock(scope: !14799, file: !3, line: 3636, column: 9)
!14805 = !DILocation(line: 3636, column: 9, scope: !14804)
!14806 = !DILocation(line: 3636, column: 9, scope: !14799)
!14807 = !DILocation(line: 3637, column: 29, scope: !14804)
!14808 = !DILocation(line: 3637, column: 6, scope: !14804)
!14809 = !DILocation(line: 3640, column: 9, scope: !14810)
!14810 = distinct !DILexicalBlock(scope: !14799, file: !3, line: 3640, column: 9)
!14811 = !DILocation(line: 3640, column: 23, scope: !14810)
!14812 = !DILocation(line: 3640, column: 9, scope: !14799)
!14813 = !DILocalVariable(name: "parent", scope: !14814, file: !3, line: 3641, type: !5166)
!14814 = distinct !DILexicalBlock(scope: !14810, file: !3, line: 3640, column: 68)
!14815 = !DILocation(line: 3641, column: 14, scope: !14814)
!14816 = !DILocation(line: 3641, column: 23, scope: !14814)
!14817 = !DILocation(line: 3641, column: 27, scope: !14814)
!14818 = !DILocation(line: 3642, column: 26, scope: !14819)
!14819 = distinct !DILexicalBlock(scope: !14814, file: !3, line: 3642, column: 10)
!14820 = !DILocation(line: 3642, column: 10, scope: !14819)
!14821 = !DILocation(line: 3642, column: 10, scope: !14814)
!14822 = !DILocation(line: 3644, column: 30, scope: !14823)
!14823 = distinct !DILexicalBlock(scope: !14819, file: !3, line: 3642, column: 35)
!14824 = !DILocation(line: 3644, column: 7, scope: !14823)
!14825 = !DILocation(line: 3647, column: 11, scope: !14826)
!14826 = distinct !DILexicalBlock(scope: !14823, file: !3, line: 3647, column: 11)
!14827 = !DILocation(line: 3647, column: 25, scope: !14826)
!14828 = !DILocation(line: 3647, column: 11, scope: !14823)
!14829 = !DILocation(line: 3648, column: 17, scope: !14830)
!14830 = distinct !DILexicalBlock(scope: !14826, file: !3, line: 3647, column: 52)
!14831 = !DILocation(line: 3648, column: 25, scope: !14830)
!14832 = !DILocation(line: 3648, column: 15, scope: !14830)
!14833 = !DILocation(line: 3649, column: 8, scope: !14830)
!14834 = !DILocation(line: 3649, column: 31, scope: !14830)
!14835 = !DILocation(line: 3649, column: 15, scope: !14830)
!14836 = !DILocation(line: 3651, column: 32, scope: !14837)
!14837 = distinct !DILexicalBlock(scope: !14830, file: !3, line: 3649, column: 40)
!14838 = !DILocation(line: 3651, column: 9, scope: !14837)
!14839 = !DILocation(line: 3652, column: 18, scope: !14837)
!14840 = !DILocation(line: 3652, column: 26, scope: !14837)
!14841 = !DILocation(line: 3652, column: 16, scope: !14837)
!14842 = distinct !{!14842, !14833, !14843}
!14843 = !DILocation(line: 3653, column: 8, scope: !14830)
!14844 = !DILocation(line: 3654, column: 7, scope: !14830)
!14845 = !DILocation(line: 3655, column: 6, scope: !14823)
!14846 = !DILocation(line: 3656, column: 5, scope: !14814)
!14847 = !DILocation(line: 3659, column: 9, scope: !14848)
!14848 = distinct !DILexicalBlock(scope: !14799, file: !3, line: 3659, column: 9)
!14849 = !DILocation(line: 3659, column: 23, scope: !14848)
!14850 = !DILocation(line: 3659, column: 9, scope: !14799)
!14851 = !DILocalVariable(name: "local_base", scope: !14852, file: !3, line: 3660, type: !5321)
!14852 = distinct !DILexicalBlock(scope: !14848, file: !3, line: 3659, column: 72)
!14853 = !DILocation(line: 3660, column: 12, scope: !14852)
!14854 = !DILocation(line: 3661, column: 24, scope: !14855)
!14855 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 3661, column: 6)
!14856 = !DILocation(line: 3661, column: 31, scope: !14855)
!14857 = !DILocation(line: 3661, column: 36, scope: !14855)
!14858 = !DILocation(line: 3661, column: 22, scope: !14855)
!14859 = !DILocation(line: 3661, column: 11, scope: !14855)
!14860 = !DILocation(line: 3661, column: 43, scope: !14861)
!14861 = distinct !DILexicalBlock(scope: !14855, file: !3, line: 3661, column: 6)
!14862 = !DILocation(line: 3661, column: 6, scope: !14855)
!14863 = !DILocation(line: 3662, column: 11, scope: !14864)
!14864 = distinct !DILexicalBlock(scope: !14865, file: !3, line: 3662, column: 11)
!14865 = distinct !DILexicalBlock(scope: !14861, file: !3, line: 3661, column: 86)
!14866 = !DILocation(line: 3662, column: 11, scope: !14865)
!14867 = !DILocalVariable(name: "child", scope: !14868, file: !3, line: 3664, type: !5166)
!14868 = distinct !DILexicalBlock(scope: !14864, file: !3, line: 3662, column: 70)
!14869 = !DILocation(line: 3664, column: 16, scope: !14868)
!14870 = !DILocation(line: 3664, column: 24, scope: !14868)
!14871 = !DILocation(line: 3664, column: 36, scope: !14868)
!14872 = !DILocation(line: 3665, column: 28, scope: !14873)
!14873 = distinct !DILexicalBlock(scope: !14868, file: !3, line: 3665, column: 12)
!14874 = !DILocation(line: 3665, column: 12, scope: !14873)
!14875 = !DILocation(line: 3665, column: 12, scope: !14868)
!14876 = !DILocation(line: 3666, column: 14, scope: !14877)
!14877 = distinct !DILexicalBlock(scope: !14878, file: !3, line: 3666, column: 13)
!14878 = distinct !DILexicalBlock(scope: !14873, file: !3, line: 3665, column: 36)
!14879 = !DILocation(line: 3666, column: 28, scope: !14877)
!14880 = !DILocation(line: 3666, column: 56, scope: !14877)
!14881 = !DILocation(line: 3666, column: 89, scope: !14877)
!14882 = !DILocation(line: 3666, column: 93, scope: !14877)
!14883 = !DILocation(line: 3666, column: 59, scope: !14877)
!14884 = !DILocation(line: 3666, column: 101, scope: !14877)
!14885 = !DILocation(line: 3667, column: 14, scope: !14877)
!14886 = !DILocation(line: 3667, column: 28, scope: !14877)
!14887 = !DILocation(line: 3667, column: 46, scope: !14877)
!14888 = !DILocation(line: 3667, column: 49, scope: !14877)
!14889 = !DILocation(line: 3667, column: 56, scope: !14877)
!14890 = !DILocation(line: 3667, column: 63, scope: !14877)
!14891 = !DILocation(line: 3667, column: 66, scope: !14877)
!14892 = !DILocation(line: 3667, column: 73, scope: !14877)
!14893 = !DILocation(line: 3667, column: 83, scope: !14877)
!14894 = !DILocation(line: 3667, column: 80, scope: !14877)
!14895 = !DILocation(line: 3666, column: 13, scope: !14878)
!14896 = !DILocation(line: 3669, column: 33, scope: !14897)
!14897 = distinct !DILexicalBlock(scope: !14877, file: !3, line: 3668, column: 9)
!14898 = !DILocation(line: 3669, column: 10, scope: !14897)
!14899 = !DILocation(line: 3670, column: 9, scope: !14897)
!14900 = !DILocation(line: 3671, column: 8, scope: !14878)
!14901 = !DILocation(line: 3672, column: 7, scope: !14868)
!14902 = !DILocation(line: 3673, column: 6, scope: !14865)
!14903 = !DILocation(line: 3661, column: 68, scope: !14861)
!14904 = !DILocation(line: 3661, column: 80, scope: !14861)
!14905 = !DILocation(line: 3661, column: 66, scope: !14861)
!14906 = !DILocation(line: 3661, column: 6, scope: !14861)
!14907 = distinct !{!14907, !14862, !14908}
!14908 = !DILocation(line: 3673, column: 6, scope: !14855)
!14909 = !DILocation(line: 3674, column: 5, scope: !14852)
!14910 = !DILocation(line: 3678, column: 9, scope: !14911)
!14911 = distinct !DILexicalBlock(scope: !14799, file: !3, line: 3678, column: 9)
!14912 = !DILocation(line: 3678, column: 23, scope: !14911)
!14913 = !DILocation(line: 3678, column: 9, scope: !14799)
!14914 = !DILocalVariable(name: "arm", scope: !14915, file: !3, line: 3679, type: !5166)
!14915 = distinct !DILexicalBlock(scope: !14911, file: !3, line: 3678, column: 46)
!14916 = !DILocation(line: 3679, column: 14, scope: !14915)
!14917 = !DILocation(line: 3679, column: 40, scope: !14915)
!14918 = !DILocation(line: 3679, column: 20, scope: !14915)
!14919 = !DILocation(line: 3680, column: 26, scope: !14920)
!14920 = distinct !DILexicalBlock(scope: !14915, file: !3, line: 3680, column: 10)
!14921 = !DILocation(line: 3680, column: 10, scope: !14920)
!14922 = !DILocation(line: 3680, column: 10, scope: !14915)
!14923 = !DILocation(line: 3681, column: 30, scope: !14924)
!14924 = distinct !DILexicalBlock(scope: !14920, file: !3, line: 3680, column: 32)
!14925 = !DILocation(line: 3681, column: 7, scope: !14924)
!14926 = !DILocation(line: 3682, column: 6, scope: !14924)
!14927 = !DILocation(line: 3683, column: 5, scope: !14915)
!14928 = !DILocation(line: 3685, column: 4, scope: !14799)
!14929 = !DILocation(line: 3687, column: 2, scope: !14775)
!14930 = !DILocation(line: 3624, column: 46, scope: !14771)
!14931 = !DILocation(line: 3624, column: 52, scope: !14771)
!14932 = !DILocation(line: 3624, column: 44, scope: !14771)
!14933 = !DILocation(line: 3624, column: 2, scope: !14771)
!14934 = distinct !{!14934, !14772, !14935}
!14935 = !DILocation(line: 3687, column: 2, scope: !14765)
!14936 = !DILocation(line: 3689, column: 9, scope: !14725)
!14937 = !DILocation(line: 3689, column: 2, scope: !14725)
!14938 = distinct !DISubprogram(name: "obrel_list_add", scope: !3, file: !3, line: 3599, type: !14939, scopeLine: 3600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!14939 = !DISubroutineType(types: !14940)
!14940 = !{null, !14941, !5166}
!14941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14737, size: 64)
!14942 = !DILocalVariable(name: "links", arg: 1, scope: !14938, file: !3, line: 3599, type: !14941)
!14943 = !DILocation(line: 3599, column: 39, scope: !14938)
!14944 = !DILocalVariable(name: "ob", arg: 2, scope: !14938, file: !3, line: 3599, type: !5166)
!14945 = !DILocation(line: 3599, column: 54, scope: !14938)
!14946 = !DILocation(line: 3601, column: 23, scope: !14938)
!14947 = !DILocation(line: 3601, column: 30, scope: !14938)
!14948 = !DILocation(line: 3601, column: 2, scope: !14938)
!14949 = !DILocation(line: 3602, column: 2, scope: !14938)
!14950 = !DILocation(line: 3602, column: 6, scope: !14938)
!14951 = !DILocation(line: 3602, column: 9, scope: !14938)
!14952 = !DILocation(line: 3602, column: 14, scope: !14938)
!14953 = !DILocation(line: 3603, column: 1, scope: !14938)
!14954 = distinct !DISubprogram(name: "obrel_list_test", scope: !3, file: !3, line: 3594, type: !8031, scopeLine: 3595, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!14955 = !DILocalVariable(name: "ob", arg: 1, scope: !14954, file: !3, line: 3594, type: !5166)
!14956 = !DILocation(line: 3594, column: 37, scope: !14954)
!14957 = !DILocation(line: 3596, column: 9, scope: !14954)
!14958 = !DILocation(line: 3596, column: 12, scope: !14954)
!14959 = !DILocation(line: 3596, column: 17, scope: !14954)
!14960 = !DILocation(line: 3596, column: 21, scope: !14954)
!14961 = !DILocation(line: 3596, column: 24, scope: !14954)
!14962 = !DILocation(line: 3596, column: 29, scope: !14954)
!14963 = !DILocation(line: 3596, column: 15, scope: !14954)
!14964 = !DILocation(line: 0, scope: !14954)
!14965 = !DILocation(line: 3596, column: 2, scope: !14954)
!14966 = distinct !DISubprogram(name: "obrel_armature_find", scope: !3, file: !3, line: 3575, type: !14967, scopeLine: 3576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!14967 = !DISubroutineType(types: !14968)
!14968 = !{!5166, !5166}
!14969 = !DILocalVariable(name: "ob", arg: 1, scope: !14966, file: !3, line: 3575, type: !5166)
!14970 = !DILocation(line: 3575, column: 44, scope: !14966)
!14971 = !DILocalVariable(name: "ob_arm", scope: !14966, file: !3, line: 3577, type: !5166)
!14972 = !DILocation(line: 3577, column: 10, scope: !14966)
!14973 = !DILocation(line: 3579, column: 6, scope: !14974)
!14974 = distinct !DILexicalBlock(scope: !14966, file: !3, line: 3579, column: 6)
!14975 = !DILocation(line: 3579, column: 10, scope: !14974)
!14976 = !DILocation(line: 3579, column: 17, scope: !14974)
!14977 = !DILocation(line: 3579, column: 20, scope: !14974)
!14978 = !DILocation(line: 3579, column: 24, scope: !14974)
!14979 = !DILocation(line: 3579, column: 32, scope: !14974)
!14980 = !DILocation(line: 3579, column: 43, scope: !14974)
!14981 = !DILocation(line: 3579, column: 46, scope: !14974)
!14982 = !DILocation(line: 3579, column: 50, scope: !14974)
!14983 = !DILocation(line: 3579, column: 58, scope: !14974)
!14984 = !DILocation(line: 3579, column: 63, scope: !14974)
!14985 = !DILocation(line: 3579, column: 6, scope: !14966)
!14986 = !DILocation(line: 3580, column: 12, scope: !14987)
!14987 = distinct !DILexicalBlock(scope: !14974, file: !3, line: 3579, column: 79)
!14988 = !DILocation(line: 3580, column: 16, scope: !14987)
!14989 = !DILocation(line: 3580, column: 10, scope: !14987)
!14990 = !DILocation(line: 3581, column: 2, scope: !14987)
!14991 = !DILocalVariable(name: "mod", scope: !14992, file: !3, line: 3583, type: !5260)
!14992 = distinct !DILexicalBlock(scope: !14974, file: !3, line: 3582, column: 7)
!14993 = !DILocation(line: 3583, column: 17, scope: !14992)
!14994 = !DILocation(line: 3584, column: 30, scope: !14995)
!14995 = distinct !DILexicalBlock(scope: !14992, file: !3, line: 3584, column: 3)
!14996 = !DILocation(line: 3584, column: 34, scope: !14995)
!14997 = !DILocation(line: 3584, column: 44, scope: !14995)
!14998 = !DILocation(line: 3584, column: 14, scope: !14995)
!14999 = !DILocation(line: 3584, column: 12, scope: !14995)
!15000 = !DILocation(line: 3584, column: 8, scope: !14995)
!15001 = !DILocation(line: 3584, column: 51, scope: !15002)
!15002 = distinct !DILexicalBlock(scope: !14995, file: !3, line: 3584, column: 3)
!15003 = !DILocation(line: 3584, column: 3, scope: !14995)
!15004 = !DILocation(line: 3585, column: 8, scope: !15005)
!15005 = distinct !DILexicalBlock(scope: !15006, file: !3, line: 3585, column: 8)
!15006 = distinct !DILexicalBlock(scope: !15002, file: !3, line: 3584, column: 73)
!15007 = !DILocation(line: 3585, column: 13, scope: !15005)
!15008 = !DILocation(line: 3585, column: 18, scope: !15005)
!15009 = !DILocation(line: 3585, column: 8, scope: !15006)
!15010 = !DILocation(line: 3586, column: 39, scope: !15011)
!15011 = distinct !DILexicalBlock(scope: !15005, file: !3, line: 3585, column: 45)
!15012 = !DILocation(line: 3586, column: 45, scope: !15011)
!15013 = !DILocation(line: 3586, column: 12, scope: !15011)
!15014 = !DILocation(line: 3587, column: 4, scope: !15011)
!15015 = !DILocation(line: 3588, column: 3, scope: !15006)
!15016 = !DILocation(line: 3584, column: 62, scope: !15002)
!15017 = !DILocation(line: 3584, column: 67, scope: !15002)
!15018 = !DILocation(line: 3584, column: 60, scope: !15002)
!15019 = !DILocation(line: 3584, column: 3, scope: !15002)
!15020 = distinct !{!15020, !15003, !15021}
!15021 = !DILocation(line: 3588, column: 3, scope: !14995)
!15022 = !DILocation(line: 3591, column: 9, scope: !14966)
!15023 = !DILocation(line: 3591, column: 2, scope: !14966)
!15024 = distinct !DISubprogram(name: "BKE_object_groups", scope: !3, file: !3, line: 3695, type: !15025, scopeLine: 3696, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!15025 = !DISubroutineType(types: !15026)
!15026 = !{!3182, !5166}
!15027 = !DILocalVariable(name: "ob", arg: 1, scope: !15024, file: !3, line: 3695, type: !5166)
!15028 = !DILocation(line: 3695, column: 44, scope: !15024)
!15029 = !DILocalVariable(name: "group_linknode", scope: !15024, file: !3, line: 3697, type: !14737)
!15030 = !DILocation(line: 3697, column: 12, scope: !15024)
!15031 = !DILocalVariable(name: "group", scope: !15024, file: !3, line: 3698, type: !6454)
!15032 = !DILocation(line: 3698, column: 9, scope: !15024)
!15033 = !DILocation(line: 3699, column: 2, scope: !15024)
!15034 = !DILocation(line: 3699, column: 40, scope: !15024)
!15035 = !DILocation(line: 3699, column: 47, scope: !15024)
!15036 = !DILocation(line: 3699, column: 18, scope: !15024)
!15037 = !DILocation(line: 3699, column: 16, scope: !15024)
!15038 = !DILocation(line: 3700, column: 41, scope: !15039)
!15039 = distinct !DILexicalBlock(scope: !15024, file: !3, line: 3699, column: 53)
!15040 = !DILocation(line: 3700, column: 3, scope: !15039)
!15041 = distinct !{!15041, !15033, !15042}
!15042 = !DILocation(line: 3701, column: 2, scope: !15024)
!15043 = !DILocation(line: 3703, column: 9, scope: !15024)
!15044 = !DILocation(line: 3703, column: 2, scope: !15024)
!15045 = distinct !DISubprogram(name: "BKE_object_groups_clear", scope: !3, file: !3, line: 3706, type: !15046, scopeLine: 3707, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!15046 = !DISubroutineType(types: !15047)
!15047 = !{null, !6411, !5321, !5166}
!15048 = !DILocalVariable(name: "scene", arg: 1, scope: !15045, file: !3, line: 3706, type: !6411)
!15049 = !DILocation(line: 3706, column: 37, scope: !15045)
!15050 = !DILocalVariable(name: "base", arg: 2, scope: !15045, file: !3, line: 3706, type: !5321)
!15051 = !DILocation(line: 3706, column: 50, scope: !15045)
!15052 = !DILocalVariable(name: "object", arg: 3, scope: !15045, file: !3, line: 3706, type: !5166)
!15053 = !DILocation(line: 3706, column: 64, scope: !15045)
!15054 = !DILocalVariable(name: "group", scope: !15045, file: !3, line: 3708, type: !6454)
!15055 = !DILocation(line: 3708, column: 9, scope: !15045)
!15056 = !DILocation(line: 3712, column: 6, scope: !15057)
!15057 = distinct !DILexicalBlock(scope: !15045, file: !3, line: 3712, column: 6)
!15058 = !DILocation(line: 3712, column: 12, scope: !15057)
!15059 = !DILocation(line: 3712, column: 15, scope: !15057)
!15060 = !DILocation(line: 3712, column: 20, scope: !15057)
!15061 = !DILocation(line: 3712, column: 6, scope: !15045)
!15062 = !DILocation(line: 3713, column: 30, scope: !15063)
!15063 = distinct !DILexicalBlock(scope: !15057, file: !3, line: 3712, column: 29)
!15064 = !DILocation(line: 3713, column: 37, scope: !15063)
!15065 = !DILocation(line: 3713, column: 10, scope: !15063)
!15066 = !DILocation(line: 3713, column: 8, scope: !15063)
!15067 = !DILocation(line: 3714, column: 2, scope: !15063)
!15068 = !DILocation(line: 3716, column: 2, scope: !15045)
!15069 = !DILocation(line: 3716, column: 40, scope: !15045)
!15070 = !DILocation(line: 3716, column: 47, scope: !15045)
!15071 = !DILocation(line: 3716, column: 53, scope: !15045)
!15072 = !DILocation(line: 3716, column: 18, scope: !15045)
!15073 = !DILocation(line: 3716, column: 16, scope: !15045)
!15074 = !DILocation(line: 3717, column: 27, scope: !15075)
!15075 = distinct !DILexicalBlock(scope: !15045, file: !3, line: 3716, column: 63)
!15076 = !DILocation(line: 3717, column: 34, scope: !15075)
!15077 = !DILocation(line: 3717, column: 42, scope: !15075)
!15078 = !DILocation(line: 3717, column: 49, scope: !15075)
!15079 = !DILocation(line: 3717, column: 3, scope: !15075)
!15080 = distinct !{!15080, !15068, !15081}
!15081 = !DILocation(line: 3718, column: 2, scope: !15045)
!15082 = !DILocation(line: 3719, column: 1, scope: !15045)
!15083 = distinct !DISubprogram(name: "BKE_object_as_kdtree", scope: !3, file: !3, line: 3730, type: !15084, scopeLine: 3731, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!15084 = !DISubroutineType(types: !15085)
!15085 = !{!2514, !5166, !3368}
!15086 = !DILocalVariable(name: "ob", arg: 1, scope: !15083, file: !3, line: 3730, type: !5166)
!15087 = !DILocation(line: 3730, column: 38, scope: !15083)
!15088 = !DILocalVariable(name: "r_tot", arg: 2, scope: !15083, file: !3, line: 3730, type: !3368)
!15089 = !DILocation(line: 3730, column: 47, scope: !15083)
!15090 = !DILocalVariable(name: "tree", scope: !15083, file: !3, line: 3732, type: !15091)
!15091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15092, size: 64)
!15092 = !DIDerivedType(tag: DW_TAG_typedef, name: "KDTree", file: !2516, line: 37, baseType: !2515)
!15093 = !DILocation(line: 3732, column: 10, scope: !15083)
!15094 = !DILocalVariable(name: "tot", scope: !15083, file: !3, line: 3733, type: !7)
!15095 = !DILocation(line: 3733, column: 15, scope: !15083)
!15096 = !DILocation(line: 3735, column: 10, scope: !15083)
!15097 = !DILocation(line: 3735, column: 14, scope: !15083)
!15098 = !DILocation(line: 3735, column: 2, scope: !15083)
!15099 = !DILocalVariable(name: "me", scope: !15100, file: !3, line: 3738, type: !593)
!15100 = distinct !DILexicalBlock(scope: !15101, file: !3, line: 3737, column: 3)
!15101 = distinct !DILexicalBlock(scope: !15083, file: !3, line: 3735, column: 20)
!15102 = !DILocation(line: 3738, column: 10, scope: !15100)
!15103 = !DILocation(line: 3738, column: 15, scope: !15100)
!15104 = !DILocation(line: 3738, column: 19, scope: !15100)
!15105 = !DILocalVariable(name: "i", scope: !15100, file: !3, line: 3739, type: !7)
!15106 = !DILocation(line: 3739, column: 17, scope: !15100)
!15107 = !DILocalVariable(name: "dm", scope: !15100, file: !3, line: 3741, type: !3203)
!15108 = !DILocation(line: 3741, column: 17, scope: !15100)
!15109 = !DILocation(line: 3741, column: 22, scope: !15100)
!15110 = !DILocation(line: 3741, column: 26, scope: !15100)
!15111 = !DILocation(line: 3741, column: 42, scope: !15100)
!15112 = !DILocation(line: 3741, column: 46, scope: !15100)
!15113 = !DILocation(line: 3741, column: 62, scope: !15100)
!15114 = !DILocation(line: 3741, column: 66, scope: !15100)
!15115 = !DILocalVariable(name: "index", scope: !15100, file: !3, line: 3742, type: !15116)
!15116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12356, size: 64)
!15117 = !DILocation(line: 3742, column: 15, scope: !15100)
!15118 = !DILocation(line: 3744, column: 8, scope: !15119)
!15119 = distinct !DILexicalBlock(scope: !15100, file: !3, line: 3744, column: 8)
!15120 = !DILocation(line: 3744, column: 11, scope: !15119)
!15121 = !DILocation(line: 3744, column: 45, scope: !15119)
!15122 = !DILocation(line: 3744, column: 49, scope: !15119)
!15123 = !DILocation(line: 3744, column: 23, scope: !15119)
!15124 = !DILocation(line: 3744, column: 21, scope: !15119)
!15125 = !DILocation(line: 3744, column: 8, scope: !15100)
!15126 = !DILocalVariable(name: "mvert", scope: !15127, file: !3, line: 3745, type: !4452)
!15127 = distinct !DILexicalBlock(scope: !15119, file: !3, line: 3744, column: 75)
!15128 = !DILocation(line: 3745, column: 12, scope: !15127)
!15129 = !DILocation(line: 3745, column: 20, scope: !15127)
!15130 = !DILocation(line: 3745, column: 24, scope: !15127)
!15131 = !DILocation(line: 3745, column: 37, scope: !15127)
!15132 = !DILocalVariable(name: "totvert", scope: !15127, file: !3, line: 3746, type: !7)
!15133 = !DILocation(line: 3746, column: 18, scope: !15127)
!15134 = !DILocation(line: 3746, column: 28, scope: !15127)
!15135 = !DILocation(line: 3746, column: 32, scope: !15127)
!15136 = !DILocation(line: 3746, column: 44, scope: !15127)
!15137 = !DILocation(line: 3749, column: 9, scope: !15127)
!15138 = !DILocation(line: 3750, column: 27, scope: !15127)
!15139 = !DILocation(line: 3750, column: 12, scope: !15127)
!15140 = !DILocation(line: 3750, column: 10, scope: !15127)
!15141 = !DILocation(line: 3753, column: 12, scope: !15142)
!15142 = distinct !DILexicalBlock(scope: !15127, file: !3, line: 3753, column: 5)
!15143 = !DILocation(line: 3753, column: 10, scope: !15142)
!15144 = !DILocation(line: 3753, column: 17, scope: !15145)
!15145 = distinct !DILexicalBlock(scope: !15142, file: !3, line: 3753, column: 5)
!15146 = !DILocation(line: 3753, column: 21, scope: !15145)
!15147 = !DILocation(line: 3753, column: 19, scope: !15145)
!15148 = !DILocation(line: 3753, column: 5, scope: !15142)
!15149 = !DILocation(line: 3754, column: 10, scope: !15150)
!15150 = distinct !DILexicalBlock(scope: !15151, file: !3, line: 3754, column: 10)
!15151 = distinct !DILexicalBlock(scope: !15145, file: !3, line: 3753, column: 35)
!15152 = !DILocation(line: 3754, column: 16, scope: !15150)
!15153 = !DILocation(line: 3754, column: 19, scope: !15150)
!15154 = !DILocation(line: 3754, column: 10, scope: !15151)
!15155 = !DILocalVariable(name: "co", scope: !15156, file: !3, line: 3755, type: !835)
!15156 = distinct !DILexicalBlock(scope: !15150, file: !3, line: 3754, column: 38)
!15157 = !DILocation(line: 3755, column: 13, scope: !15156)
!15158 = !DILocation(line: 3756, column: 19, scope: !15156)
!15159 = !DILocation(line: 3756, column: 23, scope: !15156)
!15160 = !DILocation(line: 3756, column: 27, scope: !15156)
!15161 = !DILocation(line: 3756, column: 34, scope: !15156)
!15162 = !DILocation(line: 3756, column: 40, scope: !15156)
!15163 = !DILocation(line: 3756, column: 43, scope: !15156)
!15164 = !DILocation(line: 3756, column: 7, scope: !15156)
!15165 = !DILocation(line: 3757, column: 25, scope: !15156)
!15166 = !DILocation(line: 3757, column: 31, scope: !15156)
!15167 = !DILocation(line: 3757, column: 37, scope: !15156)
!15168 = !DILocation(line: 3757, column: 41, scope: !15156)
!15169 = !DILocation(line: 3757, column: 7, scope: !15156)
!15170 = !DILocation(line: 3758, column: 10, scope: !15156)
!15171 = !DILocation(line: 3759, column: 6, scope: !15156)
!15172 = !DILocation(line: 3760, column: 5, scope: !15151)
!15173 = !DILocation(line: 3753, column: 31, scope: !15145)
!15174 = !DILocation(line: 3753, column: 5, scope: !15145)
!15175 = distinct !{!15175, !15148, !15176}
!15176 = !DILocation(line: 3760, column: 5, scope: !15142)
!15177 = !DILocation(line: 3761, column: 4, scope: !15127)
!15178 = !DILocalVariable(name: "mvert", scope: !15179, file: !3, line: 3763, type: !4452)
!15179 = distinct !DILexicalBlock(scope: !15119, file: !3, line: 3762, column: 9)
!15180 = !DILocation(line: 3763, column: 12, scope: !15179)
!15181 = !DILocation(line: 3763, column: 20, scope: !15179)
!15182 = !DILocation(line: 3763, column: 24, scope: !15179)
!15183 = !DILocation(line: 3765, column: 11, scope: !15179)
!15184 = !DILocation(line: 3765, column: 15, scope: !15179)
!15185 = !DILocation(line: 3765, column: 9, scope: !15179)
!15186 = !DILocation(line: 3766, column: 27, scope: !15179)
!15187 = !DILocation(line: 3766, column: 12, scope: !15179)
!15188 = !DILocation(line: 3766, column: 10, scope: !15179)
!15189 = !DILocation(line: 3768, column: 12, scope: !15190)
!15190 = distinct !DILexicalBlock(scope: !15179, file: !3, line: 3768, column: 5)
!15191 = !DILocation(line: 3768, column: 10, scope: !15190)
!15192 = !DILocation(line: 3768, column: 17, scope: !15193)
!15193 = distinct !DILexicalBlock(scope: !15190, file: !3, line: 3768, column: 5)
!15194 = !DILocation(line: 3768, column: 21, scope: !15193)
!15195 = !DILocation(line: 3768, column: 19, scope: !15193)
!15196 = !DILocation(line: 3768, column: 5, scope: !15190)
!15197 = !DILocalVariable(name: "co", scope: !15198, file: !3, line: 3769, type: !835)
!15198 = distinct !DILexicalBlock(scope: !15193, file: !3, line: 3768, column: 31)
!15199 = !DILocation(line: 3769, column: 12, scope: !15198)
!15200 = !DILocation(line: 3770, column: 18, scope: !15198)
!15201 = !DILocation(line: 3770, column: 22, scope: !15198)
!15202 = !DILocation(line: 3770, column: 26, scope: !15198)
!15203 = !DILocation(line: 3770, column: 33, scope: !15198)
!15204 = !DILocation(line: 3770, column: 39, scope: !15198)
!15205 = !DILocation(line: 3770, column: 42, scope: !15198)
!15206 = !DILocation(line: 3770, column: 6, scope: !15198)
!15207 = !DILocation(line: 3771, column: 24, scope: !15198)
!15208 = !DILocation(line: 3771, column: 30, scope: !15198)
!15209 = !DILocation(line: 3771, column: 33, scope: !15198)
!15210 = !DILocation(line: 3771, column: 6, scope: !15198)
!15211 = !DILocation(line: 3772, column: 5, scope: !15198)
!15212 = !DILocation(line: 3768, column: 27, scope: !15193)
!15213 = !DILocation(line: 3768, column: 5, scope: !15193)
!15214 = distinct !{!15214, !15196, !15215}
!15215 = !DILocation(line: 3772, column: 5, scope: !15190)
!15216 = !DILocation(line: 3775, column: 23, scope: !15100)
!15217 = !DILocation(line: 3775, column: 4, scope: !15100)
!15218 = !DILocation(line: 3776, column: 4, scope: !15100)
!15219 = !DILocalVariable(name: "cu", scope: !15220, file: !3, line: 3782, type: !4467)
!15220 = distinct !DILexicalBlock(scope: !15101, file: !3, line: 3780, column: 3)
!15221 = !DILocation(line: 3782, column: 11, scope: !15220)
!15222 = !DILocation(line: 3782, column: 16, scope: !15220)
!15223 = !DILocation(line: 3782, column: 20, scope: !15220)
!15224 = !DILocalVariable(name: "i", scope: !15220, file: !3, line: 3783, type: !7)
!15225 = !DILocation(line: 3783, column: 17, scope: !15220)
!15226 = !DILocalVariable(name: "a", scope: !15220, file: !3, line: 3783, type: !7)
!15227 = !DILocation(line: 3783, column: 20, scope: !15220)
!15228 = !DILocalVariable(name: "nu", scope: !15220, file: !3, line: 3785, type: !15229)
!15229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15230, size: 64)
!15230 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nurb", file: !1704, line: 166, baseType: !15231)
!15231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Nurb", file: !1704, line: 147, size: 704, elements: !15232)
!15232 = !{!15233, !15235, !15236, !15237, !15238, !15239, !15240, !15241, !15242, !15243, !15244, !15245, !15246, !15247, !15248, !15249, !15250, !15251, !15252, !15253, !15254, !15255}
!15233 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !15231, file: !1704, line: 148, baseType: !15234, size: 64)
!15234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15231, size: 64)
!15235 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !15231, file: !1704, line: 148, baseType: !15234, size: 64, offset: 64)
!15236 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !15231, file: !1704, line: 149, baseType: !632, size: 16, offset: 128)
!15237 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !15231, file: !1704, line: 150, baseType: !632, size: 16, offset: 144)
!15238 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !15231, file: !1704, line: 151, baseType: !632, size: 16, offset: 160)
!15239 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !15231, file: !1704, line: 151, baseType: !632, size: 16, offset: 176)
!15240 = !DIDerivedType(tag: DW_TAG_member, name: "pntsu", scope: !15231, file: !1704, line: 152, baseType: !73, size: 32, offset: 192)
!15241 = !DIDerivedType(tag: DW_TAG_member, name: "pntsv", scope: !15231, file: !1704, line: 152, baseType: !73, size: 32, offset: 224)
!15242 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !15231, file: !1704, line: 153, baseType: !1080, size: 32, offset: 256)
!15243 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !15231, file: !1704, line: 154, baseType: !632, size: 16, offset: 288)
!15244 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !15231, file: !1704, line: 154, baseType: !632, size: 16, offset: 304)
!15245 = !DIDerivedType(tag: DW_TAG_member, name: "orderu", scope: !15231, file: !1704, line: 155, baseType: !632, size: 16, offset: 320)
!15246 = !DIDerivedType(tag: DW_TAG_member, name: "orderv", scope: !15231, file: !1704, line: 155, baseType: !632, size: 16, offset: 336)
!15247 = !DIDerivedType(tag: DW_TAG_member, name: "flagu", scope: !15231, file: !1704, line: 156, baseType: !632, size: 16, offset: 352)
!15248 = !DIDerivedType(tag: DW_TAG_member, name: "flagv", scope: !15231, file: !1704, line: 156, baseType: !632, size: 16, offset: 368)
!15249 = !DIDerivedType(tag: DW_TAG_member, name: "knotsu", scope: !15231, file: !1704, line: 158, baseType: !1073, size: 64, offset: 384)
!15250 = !DIDerivedType(tag: DW_TAG_member, name: "knotsv", scope: !15231, file: !1704, line: 158, baseType: !1073, size: 64, offset: 448)
!15251 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !15231, file: !1704, line: 159, baseType: !12068, size: 64, offset: 512)
!15252 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !15231, file: !1704, line: 160, baseType: !9837, size: 64, offset: 576)
!15253 = !DIDerivedType(tag: DW_TAG_member, name: "tilt_interp", scope: !15231, file: !1704, line: 162, baseType: !632, size: 16, offset: 640)
!15254 = !DIDerivedType(tag: DW_TAG_member, name: "radius_interp", scope: !15231, file: !1704, line: 163, baseType: !632, size: 16, offset: 656)
!15255 = !DIDerivedType(tag: DW_TAG_member, name: "charidx", scope: !15231, file: !1704, line: 165, baseType: !73, size: 32, offset: 672)
!15256 = !DILocation(line: 3785, column: 10, scope: !15220)
!15257 = !DILocation(line: 3787, column: 52, scope: !15220)
!15258 = !DILocation(line: 3787, column: 56, scope: !15220)
!15259 = !DILocation(line: 3787, column: 10, scope: !15220)
!15260 = !DILocation(line: 3787, column: 8, scope: !15220)
!15261 = !DILocation(line: 3788, column: 26, scope: !15220)
!15262 = !DILocation(line: 3788, column: 11, scope: !15220)
!15263 = !DILocation(line: 3788, column: 9, scope: !15220)
!15264 = !DILocation(line: 3789, column: 6, scope: !15220)
!15265 = !DILocation(line: 3791, column: 9, scope: !15220)
!15266 = !DILocation(line: 3791, column: 13, scope: !15220)
!15267 = !DILocation(line: 3791, column: 18, scope: !15220)
!15268 = !DILocation(line: 3791, column: 7, scope: !15220)
!15269 = !DILocation(line: 3792, column: 4, scope: !15220)
!15270 = !DILocation(line: 3792, column: 11, scope: !15220)
!15271 = !DILocation(line: 3793, column: 9, scope: !15272)
!15272 = distinct !DILexicalBlock(scope: !15273, file: !3, line: 3793, column: 9)
!15273 = distinct !DILexicalBlock(scope: !15220, file: !3, line: 3792, column: 15)
!15274 = !DILocation(line: 3793, column: 13, scope: !15272)
!15275 = !DILocation(line: 3793, column: 9, scope: !15273)
!15276 = !DILocalVariable(name: "bezt", scope: !15277, file: !3, line: 3794, type: !9837)
!15277 = distinct !DILexicalBlock(scope: !15272, file: !3, line: 3793, column: 19)
!15278 = !DILocation(line: 3794, column: 17, scope: !15277)
!15279 = !DILocation(line: 3796, column: 13, scope: !15277)
!15280 = !DILocation(line: 3796, column: 17, scope: !15277)
!15281 = !DILocation(line: 3796, column: 11, scope: !15277)
!15282 = !DILocation(line: 3797, column: 10, scope: !15277)
!15283 = !DILocation(line: 3797, column: 14, scope: !15277)
!15284 = !DILocation(line: 3797, column: 8, scope: !15277)
!15285 = !DILocation(line: 3798, column: 6, scope: !15277)
!15286 = !DILocation(line: 3798, column: 14, scope: !15277)
!15287 = !DILocalVariable(name: "co", scope: !15288, file: !3, line: 3799, type: !835)
!15288 = distinct !DILexicalBlock(scope: !15277, file: !3, line: 3798, column: 18)
!15289 = !DILocation(line: 3799, column: 13, scope: !15288)
!15290 = !DILocation(line: 3800, column: 19, scope: !15288)
!15291 = !DILocation(line: 3800, column: 23, scope: !15288)
!15292 = !DILocation(line: 3800, column: 27, scope: !15288)
!15293 = !DILocation(line: 3800, column: 34, scope: !15288)
!15294 = !DILocation(line: 3800, column: 40, scope: !15288)
!15295 = !DILocation(line: 3800, column: 7, scope: !15288)
!15296 = !DILocation(line: 3801, column: 25, scope: !15288)
!15297 = !DILocation(line: 3801, column: 32, scope: !15288)
!15298 = !DILocation(line: 3801, column: 36, scope: !15288)
!15299 = !DILocation(line: 3801, column: 7, scope: !15288)
!15300 = !DILocation(line: 3802, column: 11, scope: !15288)
!15301 = distinct !{!15301, !15285, !15302}
!15302 = !DILocation(line: 3803, column: 6, scope: !15277)
!15303 = !DILocation(line: 3804, column: 5, scope: !15277)
!15304 = !DILocalVariable(name: "bp", scope: !15305, file: !3, line: 3806, type: !12068)
!15305 = distinct !DILexicalBlock(scope: !15272, file: !3, line: 3805, column: 10)
!15306 = !DILocation(line: 3806, column: 14, scope: !15305)
!15307 = !DILocation(line: 3808, column: 11, scope: !15305)
!15308 = !DILocation(line: 3808, column: 15, scope: !15305)
!15309 = !DILocation(line: 3808, column: 9, scope: !15305)
!15310 = !DILocation(line: 3809, column: 10, scope: !15305)
!15311 = !DILocation(line: 3809, column: 14, scope: !15305)
!15312 = !DILocation(line: 3809, column: 22, scope: !15305)
!15313 = !DILocation(line: 3809, column: 26, scope: !15305)
!15314 = !DILocation(line: 3809, column: 20, scope: !15305)
!15315 = !DILocation(line: 3809, column: 8, scope: !15305)
!15316 = !DILocation(line: 3810, column: 6, scope: !15305)
!15317 = !DILocation(line: 3810, column: 14, scope: !15305)
!15318 = !DILocalVariable(name: "co", scope: !15319, file: !3, line: 3811, type: !835)
!15319 = distinct !DILexicalBlock(scope: !15305, file: !3, line: 3810, column: 18)
!15320 = !DILocation(line: 3811, column: 13, scope: !15319)
!15321 = !DILocation(line: 3812, column: 19, scope: !15319)
!15322 = !DILocation(line: 3812, column: 23, scope: !15319)
!15323 = !DILocation(line: 3812, column: 27, scope: !15319)
!15324 = !DILocation(line: 3812, column: 34, scope: !15319)
!15325 = !DILocation(line: 3812, column: 38, scope: !15319)
!15326 = !DILocation(line: 3812, column: 7, scope: !15319)
!15327 = !DILocation(line: 3813, column: 25, scope: !15319)
!15328 = !DILocation(line: 3813, column: 32, scope: !15319)
!15329 = !DILocation(line: 3813, column: 36, scope: !15319)
!15330 = !DILocation(line: 3813, column: 7, scope: !15319)
!15331 = !DILocation(line: 3814, column: 9, scope: !15319)
!15332 = distinct !{!15332, !15316, !15333}
!15333 = !DILocation(line: 3815, column: 6, scope: !15305)
!15334 = !DILocation(line: 3817, column: 10, scope: !15273)
!15335 = !DILocation(line: 3817, column: 14, scope: !15273)
!15336 = !DILocation(line: 3817, column: 8, scope: !15273)
!15337 = distinct !{!15337, !15269, !15338}
!15338 = !DILocation(line: 3818, column: 4, scope: !15220)
!15339 = !DILocation(line: 3820, column: 23, scope: !15220)
!15340 = !DILocation(line: 3820, column: 4, scope: !15220)
!15341 = !DILocation(line: 3821, column: 4, scope: !15220)
!15342 = !DILocalVariable(name: "lt", scope: !15343, file: !3, line: 3826, type: !8112)
!15343 = distinct !DILexicalBlock(scope: !15101, file: !3, line: 3824, column: 3)
!15344 = !DILocation(line: 3826, column: 13, scope: !15343)
!15345 = !DILocation(line: 3826, column: 18, scope: !15343)
!15346 = !DILocation(line: 3826, column: 22, scope: !15343)
!15347 = !DILocalVariable(name: "bp", scope: !15343, file: !3, line: 3827, type: !12068)
!15348 = !DILocation(line: 3827, column: 12, scope: !15343)
!15349 = !DILocalVariable(name: "i", scope: !15343, file: !3, line: 3828, type: !7)
!15350 = !DILocation(line: 3828, column: 17, scope: !15343)
!15351 = !DILocation(line: 3830, column: 10, scope: !15343)
!15352 = !DILocation(line: 3830, column: 14, scope: !15343)
!15353 = !DILocation(line: 3830, column: 22, scope: !15343)
!15354 = !DILocation(line: 3830, column: 26, scope: !15343)
!15355 = !DILocation(line: 3830, column: 20, scope: !15343)
!15356 = !DILocation(line: 3830, column: 34, scope: !15343)
!15357 = !DILocation(line: 3830, column: 38, scope: !15343)
!15358 = !DILocation(line: 3830, column: 32, scope: !15343)
!15359 = !DILocation(line: 3830, column: 8, scope: !15343)
!15360 = !DILocation(line: 3831, column: 26, scope: !15343)
!15361 = !DILocation(line: 3831, column: 11, scope: !15343)
!15362 = !DILocation(line: 3831, column: 9, scope: !15343)
!15363 = !DILocation(line: 3832, column: 6, scope: !15343)
!15364 = !DILocation(line: 3834, column: 14, scope: !15365)
!15365 = distinct !DILexicalBlock(scope: !15343, file: !3, line: 3834, column: 4)
!15366 = !DILocation(line: 3834, column: 18, scope: !15365)
!15367 = !DILocation(line: 3834, column: 12, scope: !15365)
!15368 = !DILocation(line: 3834, column: 9, scope: !15365)
!15369 = !DILocation(line: 3834, column: 23, scope: !15370)
!15370 = distinct !DILexicalBlock(scope: !15365, file: !3, line: 3834, column: 4)
!15371 = !DILocation(line: 3834, column: 27, scope: !15370)
!15372 = !DILocation(line: 3834, column: 25, scope: !15370)
!15373 = !DILocation(line: 3834, column: 4, scope: !15365)
!15374 = !DILocalVariable(name: "co", scope: !15375, file: !3, line: 3835, type: !835)
!15375 = distinct !DILexicalBlock(scope: !15370, file: !3, line: 3834, column: 38)
!15376 = !DILocation(line: 3835, column: 11, scope: !15375)
!15377 = !DILocation(line: 3836, column: 17, scope: !15375)
!15378 = !DILocation(line: 3836, column: 21, scope: !15375)
!15379 = !DILocation(line: 3836, column: 25, scope: !15375)
!15380 = !DILocation(line: 3836, column: 32, scope: !15375)
!15381 = !DILocation(line: 3836, column: 36, scope: !15375)
!15382 = !DILocation(line: 3836, column: 5, scope: !15375)
!15383 = !DILocation(line: 3837, column: 23, scope: !15375)
!15384 = !DILocation(line: 3837, column: 30, scope: !15375)
!15385 = !DILocation(line: 3837, column: 34, scope: !15375)
!15386 = !DILocation(line: 3837, column: 5, scope: !15375)
!15387 = !DILocation(line: 3838, column: 4, scope: !15375)
!15388 = !DILocation(line: 3834, column: 34, scope: !15370)
!15389 = !DILocation(line: 3834, column: 4, scope: !15370)
!15390 = distinct !{!15390, !15373, !15391}
!15391 = !DILocation(line: 3838, column: 4, scope: !15365)
!15392 = !DILocation(line: 3840, column: 23, scope: !15343)
!15393 = !DILocation(line: 3840, column: 4, scope: !15343)
!15394 = !DILocation(line: 3841, column: 4, scope: !15343)
!15395 = !DILocation(line: 3845, column: 11, scope: !15083)
!15396 = !DILocation(line: 3845, column: 3, scope: !15083)
!15397 = !DILocation(line: 3845, column: 9, scope: !15083)
!15398 = !DILocation(line: 3846, column: 9, scope: !15083)
!15399 = !DILocation(line: 3846, column: 2, scope: !15083)
!15400 = distinct !DISubprogram(name: "extern_local_object__modifiersForeachIDLink", scope: !3, file: !3, line: 1520, type: !14620, scopeLine: 1523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!15401 = !DILocalVariable(name: "UNUSED_userData", arg: 1, scope: !15400, file: !3, line: 1521, type: !592)
!15402 = !DILocation(line: 1521, column: 15, scope: !15400)
!15403 = !DILocalVariable(name: "UNUSED_ob", arg: 2, scope: !15400, file: !3, line: 1521, type: !5166)
!15404 = !DILocation(line: 1521, column: 41, scope: !15400)
!15405 = !DILocalVariable(name: "idpoin", arg: 3, scope: !15400, file: !3, line: 1522, type: !14622)
!15406 = !DILocation(line: 1522, column: 14, scope: !15400)
!15407 = !DILocation(line: 1524, column: 7, scope: !15408)
!15408 = distinct !DILexicalBlock(scope: !15400, file: !3, line: 1524, column: 6)
!15409 = !DILocation(line: 1524, column: 6, scope: !15408)
!15410 = !DILocation(line: 1524, column: 6, scope: !15400)
!15411 = !DILocation(line: 1526, column: 7, scope: !15412)
!15412 = distinct !DILexicalBlock(scope: !15413, file: !3, line: 1526, column: 7)
!15413 = distinct !DILexicalBlock(scope: !15408, file: !3, line: 1524, column: 15)
!15414 = !DILocation(line: 1526, column: 7, scope: !15413)
!15415 = !DILocation(line: 1527, column: 19, scope: !15416)
!15416 = distinct !DILexicalBlock(scope: !15412, file: !3, line: 1526, column: 48)
!15417 = !DILocation(line: 1527, column: 18, scope: !15416)
!15418 = !DILocation(line: 1527, column: 4, scope: !15416)
!15419 = !DILocation(line: 1528, column: 3, scope: !15416)
!15420 = !DILocation(line: 1529, column: 2, scope: !15413)
!15421 = !DILocation(line: 1530, column: 1, scope: !15400)
!15422 = distinct !DISubprogram(name: "ob_parcurve", scope: !3, file: !3, line: 2027, type: !11521, scopeLine: 2028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!15423 = !DILocalVariable(name: "scene", arg: 1, scope: !15422, file: !3, line: 2027, type: !6411)
!15424 = !DILocation(line: 2027, column: 32, scope: !15422)
!15425 = !DILocalVariable(name: "ob", arg: 2, scope: !15422, file: !3, line: 2027, type: !5166)
!15426 = !DILocation(line: 2027, column: 47, scope: !15422)
!15427 = !DILocalVariable(name: "par", arg: 3, scope: !15422, file: !3, line: 2027, type: !5166)
!15428 = !DILocation(line: 2027, column: 59, scope: !15422)
!15429 = !DILocalVariable(name: "mat", arg: 4, scope: !15422, file: !3, line: 2027, type: !3458)
!15430 = !DILocation(line: 2027, column: 70, scope: !15422)
!15431 = !DILocalVariable(name: "cu", scope: !15422, file: !3, line: 2029, type: !4467)
!15432 = !DILocation(line: 2029, column: 9, scope: !15422)
!15433 = !DILocalVariable(name: "vec", scope: !15422, file: !3, line: 2030, type: !916)
!15434 = !DILocation(line: 2030, column: 8, scope: !15422)
!15435 = !DILocalVariable(name: "dir", scope: !15422, file: !3, line: 2030, type: !835)
!15436 = !DILocation(line: 2030, column: 16, scope: !15422)
!15437 = !DILocalVariable(name: "quat", scope: !15422, file: !3, line: 2030, type: !916)
!15438 = !DILocation(line: 2030, column: 24, scope: !15422)
!15439 = !DILocalVariable(name: "radius", scope: !15422, file: !3, line: 2030, type: !713)
!15440 = !DILocation(line: 2030, column: 33, scope: !15422)
!15441 = !DILocalVariable(name: "ctime", scope: !15422, file: !3, line: 2030, type: !713)
!15442 = !DILocation(line: 2030, column: 41, scope: !15422)
!15443 = !DILocation(line: 2032, column: 10, scope: !15422)
!15444 = !DILocation(line: 2032, column: 2, scope: !15422)
!15445 = !DILocation(line: 2034, column: 7, scope: !15422)
!15446 = !DILocation(line: 2034, column: 12, scope: !15422)
!15447 = !DILocation(line: 2034, column: 5, scope: !15422)
!15448 = !DILocation(line: 2035, column: 6, scope: !15449)
!15449 = distinct !DILexicalBlock(scope: !15422, file: !3, line: 2035, column: 6)
!15450 = !DILocation(line: 2035, column: 6, scope: !15422)
!15451 = !DILocation(line: 2036, column: 32, scope: !15449)
!15452 = !DILocation(line: 2036, column: 39, scope: !15449)
!15453 = !DILocation(line: 2036, column: 3, scope: !15449)
!15454 = !DILocation(line: 2037, column: 6, scope: !15455)
!15455 = distinct !DILexicalBlock(scope: !15422, file: !3, line: 2037, column: 6)
!15456 = !DILocation(line: 2037, column: 11, scope: !15455)
!15457 = !DILocation(line: 2037, column: 24, scope: !15455)
!15458 = !DILocation(line: 2037, column: 29, scope: !15455)
!15459 = !DILocation(line: 2037, column: 6, scope: !15422)
!15460 = !DILocation(line: 2037, column: 38, scope: !15455)
!15461 = !DILocation(line: 2040, column: 6, scope: !15462)
!15462 = distinct !DILexicalBlock(scope: !15422, file: !3, line: 2040, column: 6)
!15463 = !DILocation(line: 2040, column: 10, scope: !15462)
!15464 = !DILocation(line: 2040, column: 18, scope: !15462)
!15465 = !DILocation(line: 2040, column: 6, scope: !15422)
!15466 = !DILocation(line: 2041, column: 9, scope: !15467)
!15467 = distinct !DILexicalBlock(scope: !15462, file: !3, line: 2040, column: 37)
!15468 = !DILocation(line: 2042, column: 2, scope: !15467)
!15469 = !DILocation(line: 2044, column: 11, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !15462, file: !3, line: 2044, column: 11)
!15471 = !DILocation(line: 2044, column: 11, scope: !15462)
!15472 = !DILocation(line: 2051, column: 7, scope: !15473)
!15473 = distinct !DILexicalBlock(scope: !15474, file: !3, line: 2051, column: 7)
!15474 = distinct !DILexicalBlock(scope: !15470, file: !3, line: 2044, column: 28)
!15475 = !DILocation(line: 2051, column: 11, scope: !15473)
!15476 = !DILocation(line: 2051, column: 7, scope: !15474)
!15477 = !DILocation(line: 2052, column: 12, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15473, file: !3, line: 2051, column: 20)
!15479 = !DILocation(line: 2052, column: 16, scope: !15478)
!15480 = !DILocation(line: 2052, column: 24, scope: !15478)
!15481 = !DILocation(line: 2052, column: 28, scope: !15478)
!15482 = !DILocation(line: 2052, column: 22, scope: !15478)
!15483 = !DILocation(line: 2052, column: 10, scope: !15478)
!15484 = !DILocation(line: 2053, column: 3, scope: !15478)
!15485 = !DILocation(line: 2055, column: 12, scope: !15486)
!15486 = distinct !DILexicalBlock(scope: !15473, file: !3, line: 2054, column: 8)
!15487 = !DILocation(line: 2055, column: 16, scope: !15486)
!15488 = !DILocation(line: 2055, column: 10, scope: !15486)
!15489 = !DILocation(line: 2058, column: 3, scope: !15490)
!15490 = distinct !DILexicalBlock(scope: !15491, file: !3, line: 2058, column: 3)
!15491 = distinct !DILexicalBlock(scope: !15474, file: !3, line: 2058, column: 3)
!15492 = !DILocation(line: 2058, column: 3, scope: !15491)
!15493 = !DILocation(line: 2058, column: 3, scope: !15494)
!15494 = distinct !DILexicalBlock(scope: !15490, file: !3, line: 2058, column: 3)
!15495 = !DILocation(line: 2059, column: 2, scope: !15474)
!15496 = !DILocation(line: 2061, column: 31, scope: !15497)
!15497 = distinct !DILexicalBlock(scope: !15470, file: !3, line: 2060, column: 7)
!15498 = !DILocation(line: 2061, column: 11, scope: !15497)
!15499 = !DILocation(line: 2061, column: 9, scope: !15497)
!15500 = !DILocation(line: 2062, column: 7, scope: !15501)
!15501 = distinct !DILexicalBlock(scope: !15497, file: !3, line: 2062, column: 7)
!15502 = !DILocation(line: 2062, column: 11, scope: !15501)
!15503 = !DILocation(line: 2062, column: 7, scope: !15497)
!15504 = !DILocation(line: 2063, column: 13, scope: !15505)
!15505 = distinct !DILexicalBlock(scope: !15501, file: !3, line: 2062, column: 20)
!15506 = !DILocation(line: 2063, column: 17, scope: !15505)
!15507 = !DILocation(line: 2063, column: 10, scope: !15505)
!15508 = !DILocation(line: 2064, column: 3, scope: !15505)
!15509 = !DILocation(line: 2066, column: 3, scope: !15510)
!15510 = distinct !DILexicalBlock(scope: !15511, file: !3, line: 2066, column: 3)
!15511 = distinct !DILexicalBlock(scope: !15497, file: !3, line: 2066, column: 3)
!15512 = !DILocation(line: 2066, column: 3, scope: !15511)
!15513 = !DILocation(line: 2066, column: 3, scope: !15514)
!15514 = distinct !DILexicalBlock(scope: !15510, file: !3, line: 2066, column: 3)
!15515 = !DILocation(line: 2070, column: 20, scope: !15516)
!15516 = distinct !DILexicalBlock(scope: !15422, file: !3, line: 2070, column: 6)
!15517 = !DILocation(line: 2070, column: 25, scope: !15516)
!15518 = !DILocation(line: 2070, column: 32, scope: !15516)
!15519 = !DILocation(line: 2070, column: 37, scope: !15516)
!15520 = !DILocation(line: 2070, column: 42, scope: !15516)
!15521 = !DILocation(line: 2070, column: 46, scope: !15516)
!15522 = !DILocation(line: 2070, column: 51, scope: !15516)
!15523 = !DILocation(line: 2070, column: 65, scope: !15516)
!15524 = !DILocation(line: 2070, column: 6, scope: !15516)
!15525 = !DILocation(line: 2070, column: 6, scope: !15422)
!15526 = !DILocation(line: 2072, column: 7, scope: !15527)
!15527 = distinct !DILexicalBlock(scope: !15528, file: !3, line: 2072, column: 7)
!15528 = distinct !DILexicalBlock(scope: !15516, file: !3, line: 2070, column: 94)
!15529 = !DILocation(line: 2072, column: 11, scope: !15527)
!15530 = !DILocation(line: 2072, column: 16, scope: !15527)
!15531 = !DILocation(line: 2072, column: 7, scope: !15528)
!15532 = !DILocation(line: 2086, column: 21, scope: !15533)
!15533 = distinct !DILexicalBlock(scope: !15527, file: !3, line: 2072, column: 29)
!15534 = !DILocation(line: 2086, column: 27, scope: !15533)
!15535 = !DILocation(line: 2086, column: 31, scope: !15533)
!15536 = !DILocation(line: 2086, column: 42, scope: !15533)
!15537 = !DILocation(line: 2086, column: 46, scope: !15533)
!15538 = !DILocation(line: 2086, column: 4, scope: !15533)
!15539 = !DILocation(line: 2088, column: 17, scope: !15533)
!15540 = !DILocation(line: 2088, column: 4, scope: !15533)
!15541 = !DILocation(line: 2089, column: 17, scope: !15533)
!15542 = !DILocation(line: 2089, column: 22, scope: !15533)
!15543 = !DILocation(line: 2089, column: 4, scope: !15533)
!15544 = !DILocation(line: 2090, column: 3, scope: !15533)
!15545 = !DILocation(line: 2092, column: 7, scope: !15546)
!15546 = distinct !DILexicalBlock(scope: !15528, file: !3, line: 2092, column: 7)
!15547 = !DILocation(line: 2092, column: 11, scope: !15546)
!15548 = !DILocation(line: 2092, column: 16, scope: !15546)
!15549 = !DILocation(line: 2092, column: 7, scope: !15528)
!15550 = !DILocalVariable(name: "tmat", scope: !15551, file: !3, line: 2093, type: !1404)
!15551 = distinct !DILexicalBlock(scope: !15546, file: !3, line: 2092, column: 34)
!15552 = !DILocation(line: 2093, column: 10, scope: !15551)
!15553 = !DILocalVariable(name: "rmat", scope: !15551, file: !3, line: 2093, type: !1404)
!15554 = !DILocation(line: 2093, column: 22, scope: !15551)
!15555 = !DILocation(line: 2094, column: 16, scope: !15551)
!15556 = !DILocation(line: 2094, column: 22, scope: !15551)
!15557 = !DILocation(line: 2094, column: 4, scope: !15551)
!15558 = !DILocation(line: 2095, column: 16, scope: !15551)
!15559 = !DILocation(line: 2095, column: 22, scope: !15551)
!15560 = !DILocation(line: 2095, column: 28, scope: !15551)
!15561 = !DILocation(line: 2095, column: 4, scope: !15551)
!15562 = !DILocation(line: 2096, column: 15, scope: !15551)
!15563 = !DILocation(line: 2096, column: 20, scope: !15551)
!15564 = !DILocation(line: 2096, column: 4, scope: !15551)
!15565 = !DILocation(line: 2097, column: 3, scope: !15551)
!15566 = !DILocation(line: 2099, column: 14, scope: !15528)
!15567 = !DILocation(line: 2099, column: 22, scope: !15528)
!15568 = !DILocation(line: 2099, column: 3, scope: !15528)
!15569 = !DILocation(line: 2101, column: 2, scope: !15528)
!15570 = !DILocation(line: 2102, column: 1, scope: !15422)
!15571 = distinct !DISubprogram(name: "ob_parbone", scope: !3, file: !3, line: 2104, type: !15572, scopeLine: 2105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!15572 = !DISubroutineType(types: !15573)
!15573 = !{null, !5166, !5166, !3458}
!15574 = !DILocalVariable(name: "ob", arg: 1, scope: !15571, file: !3, line: 2104, type: !5166)
!15575 = !DILocation(line: 2104, column: 32, scope: !15571)
!15576 = !DILocalVariable(name: "par", arg: 2, scope: !15571, file: !3, line: 2104, type: !5166)
!15577 = !DILocation(line: 2104, column: 44, scope: !15571)
!15578 = !DILocalVariable(name: "mat", arg: 3, scope: !15571, file: !3, line: 2104, type: !3458)
!15579 = !DILocation(line: 2104, column: 55, scope: !15571)
!15580 = !DILocalVariable(name: "pchan", scope: !15571, file: !3, line: 2106, type: !5484)
!15581 = !DILocation(line: 2106, column: 16, scope: !15571)
!15582 = !DILocalVariable(name: "vec", scope: !15571, file: !3, line: 2107, type: !835)
!15583 = !DILocation(line: 2107, column: 8, scope: !15571)
!15584 = !DILocation(line: 2109, column: 6, scope: !15585)
!15585 = distinct !DILexicalBlock(scope: !15571, file: !3, line: 2109, column: 6)
!15586 = !DILocation(line: 2109, column: 11, scope: !15585)
!15587 = !DILocation(line: 2109, column: 16, scope: !15585)
!15588 = !DILocation(line: 2109, column: 6, scope: !15571)
!15589 = !DILocation(line: 2110, column: 11, scope: !15590)
!15590 = distinct !DILexicalBlock(scope: !15585, file: !3, line: 2109, column: 32)
!15591 = !DILocation(line: 2110, column: 3, scope: !15590)
!15592 = !DILocation(line: 2111, column: 3, scope: !15590)
!15593 = !DILocation(line: 2115, column: 37, scope: !15571)
!15594 = !DILocation(line: 2115, column: 42, scope: !15571)
!15595 = !DILocation(line: 2115, column: 48, scope: !15571)
!15596 = !DILocation(line: 2115, column: 52, scope: !15571)
!15597 = !DILocation(line: 2115, column: 10, scope: !15571)
!15598 = !DILocation(line: 2115, column: 8, scope: !15571)
!15599 = !DILocation(line: 2116, column: 7, scope: !15600)
!15600 = distinct !DILexicalBlock(scope: !15571, file: !3, line: 2116, column: 6)
!15601 = !DILocation(line: 2116, column: 13, scope: !15600)
!15602 = !DILocation(line: 2116, column: 17, scope: !15600)
!15603 = !DILocation(line: 2116, column: 24, scope: !15600)
!15604 = !DILocation(line: 2116, column: 6, scope: !15571)
!15605 = !DILocation(line: 2117, column: 65, scope: !15606)
!15606 = distinct !DILexicalBlock(scope: !15600, file: !3, line: 2116, column: 30)
!15607 = !DILocation(line: 2117, column: 69, scope: !15606)
!15608 = !DILocation(line: 2117, column: 72, scope: !15606)
!15609 = !DILocation(line: 2117, column: 77, scope: !15606)
!15610 = !DILocation(line: 2117, column: 82, scope: !15606)
!15611 = !DILocation(line: 2117, column: 86, scope: !15606)
!15612 = !DILocation(line: 2117, column: 3, scope: !15606)
!15613 = !DILocation(line: 2118, column: 11, scope: !15606)
!15614 = !DILocation(line: 2118, column: 3, scope: !15606)
!15615 = !DILocation(line: 2119, column: 3, scope: !15606)
!15616 = !DILocation(line: 2123, column: 6, scope: !15617)
!15617 = distinct !DILexicalBlock(scope: !15571, file: !3, line: 2123, column: 6)
!15618 = !DILocation(line: 2123, column: 13, scope: !15617)
!15619 = !DILocation(line: 2123, column: 19, scope: !15617)
!15620 = !DILocation(line: 2123, column: 24, scope: !15617)
!15621 = !DILocation(line: 2123, column: 6, scope: !15571)
!15622 = !DILocation(line: 2126, column: 14, scope: !15623)
!15623 = distinct !DILexicalBlock(scope: !15617, file: !3, line: 2123, column: 51)
!15624 = !DILocation(line: 2126, column: 19, scope: !15623)
!15625 = !DILocation(line: 2126, column: 26, scope: !15623)
!15626 = !DILocation(line: 2126, column: 3, scope: !15623)
!15627 = !DILocation(line: 2127, column: 2, scope: !15623)
!15628 = !DILocation(line: 2129, column: 14, scope: !15629)
!15629 = distinct !DILexicalBlock(scope: !15617, file: !3, line: 2128, column: 7)
!15630 = !DILocation(line: 2129, column: 19, scope: !15629)
!15631 = !DILocation(line: 2129, column: 26, scope: !15629)
!15632 = !DILocation(line: 2129, column: 3, scope: !15629)
!15633 = !DILocation(line: 2132, column: 14, scope: !15629)
!15634 = !DILocation(line: 2132, column: 19, scope: !15629)
!15635 = !DILocation(line: 2132, column: 3, scope: !15629)
!15636 = !DILocation(line: 2133, column: 13, scope: !15629)
!15637 = !DILocation(line: 2133, column: 18, scope: !15629)
!15638 = !DILocation(line: 2133, column: 25, scope: !15629)
!15639 = !DILocation(line: 2133, column: 31, scope: !15629)
!15640 = !DILocation(line: 2133, column: 3, scope: !15629)
!15641 = !DILocation(line: 2134, column: 13, scope: !15629)
!15642 = !DILocation(line: 2134, column: 21, scope: !15629)
!15643 = !DILocation(line: 2134, column: 3, scope: !15629)
!15644 = !DILocation(line: 2136, column: 1, scope: !15571)
!15645 = distinct !DISubprogram(name: "give_parvert", scope: !3, file: !3, line: 2138, type: !15646, scopeLine: 2139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!15646 = !DISubroutineType(types: !15647)
!15647 = !{null, !5166, !73, !1073}
!15648 = !DILocalVariable(name: "par", arg: 1, scope: !15645, file: !3, line: 2138, type: !5166)
!15649 = !DILocation(line: 2138, column: 34, scope: !15645)
!15650 = !DILocalVariable(name: "nr", arg: 2, scope: !15645, file: !3, line: 2138, type: !73)
!15651 = !DILocation(line: 2138, column: 43, scope: !15645)
!15652 = !DILocalVariable(name: "vec", arg: 3, scope: !15645, file: !3, line: 2138, type: !1073)
!15653 = !DILocation(line: 2138, column: 53, scope: !15645)
!15654 = !DILocation(line: 2140, column: 10, scope: !15645)
!15655 = !DILocation(line: 2140, column: 2, scope: !15645)
!15656 = !DILocation(line: 2142, column: 6, scope: !15657)
!15657 = distinct !DILexicalBlock(scope: !15645, file: !3, line: 2142, column: 6)
!15658 = !DILocation(line: 2142, column: 11, scope: !15657)
!15659 = !DILocation(line: 2142, column: 16, scope: !15657)
!15660 = !DILocation(line: 2142, column: 6, scope: !15645)
!15661 = !DILocalVariable(name: "me", scope: !15662, file: !3, line: 2143, type: !593)
!15662 = distinct !DILexicalBlock(scope: !15657, file: !3, line: 2142, column: 28)
!15663 = !DILocation(line: 2143, column: 9, scope: !15662)
!15664 = !DILocation(line: 2143, column: 14, scope: !15662)
!15665 = !DILocation(line: 2143, column: 19, scope: !15662)
!15666 = !DILocalVariable(name: "em", scope: !15662, file: !3, line: 2144, type: !13209)
!15667 = !DILocation(line: 2144, column: 15, scope: !15662)
!15668 = !DILocation(line: 2144, column: 20, scope: !15662)
!15669 = !DILocation(line: 2144, column: 24, scope: !15662)
!15670 = !DILocalVariable(name: "dm", scope: !15662, file: !3, line: 2145, type: !3203)
!15671 = !DILocation(line: 2145, column: 16, scope: !15662)
!15672 = !DILocation(line: 2147, column: 9, scope: !15662)
!15673 = !DILocation(line: 2147, column: 8, scope: !15662)
!15674 = !DILocation(line: 2147, column: 15, scope: !15662)
!15675 = !DILocation(line: 2147, column: 19, scope: !15662)
!15676 = !DILocation(line: 2147, column: 34, scope: !15662)
!15677 = !DILocation(line: 2147, column: 39, scope: !15662)
!15678 = !DILocation(line: 2147, column: 6, scope: !15662)
!15679 = !DILocation(line: 2149, column: 7, scope: !15680)
!15680 = distinct !DILexicalBlock(scope: !15662, file: !3, line: 2149, column: 7)
!15681 = !DILocation(line: 2149, column: 7, scope: !15662)
!15682 = !DILocalVariable(name: "count", scope: !15683, file: !3, line: 2150, type: !73)
!15683 = distinct !DILexicalBlock(scope: !15680, file: !3, line: 2149, column: 11)
!15684 = !DILocation(line: 2150, column: 8, scope: !15683)
!15685 = !DILocalVariable(name: "numVerts", scope: !15683, file: !3, line: 2151, type: !73)
!15686 = !DILocation(line: 2151, column: 8, scope: !15683)
!15687 = !DILocation(line: 2151, column: 19, scope: !15683)
!15688 = !DILocation(line: 2151, column: 23, scope: !15683)
!15689 = !DILocation(line: 2151, column: 35, scope: !15683)
!15690 = !DILocation(line: 2153, column: 8, scope: !15691)
!15691 = distinct !DILexicalBlock(scope: !15683, file: !3, line: 2153, column: 8)
!15692 = !DILocation(line: 2153, column: 13, scope: !15691)
!15693 = !DILocation(line: 2153, column: 11, scope: !15691)
!15694 = !DILocation(line: 2153, column: 8, scope: !15683)
!15695 = !DILocalVariable(name: "i", scope: !15696, file: !3, line: 2155, type: !73)
!15696 = distinct !DILexicalBlock(scope: !15691, file: !3, line: 2153, column: 23)
!15697 = !DILocation(line: 2155, column: 9, scope: !15696)
!15698 = !DILocation(line: 2157, column: 9, scope: !15699)
!15699 = distinct !DILexicalBlock(scope: !15696, file: !3, line: 2157, column: 9)
!15700 = !DILocation(line: 2157, column: 12, scope: !15699)
!15701 = !DILocation(line: 2157, column: 15, scope: !15699)
!15702 = !DILocation(line: 2157, column: 19, scope: !15699)
!15703 = !DILocation(line: 2157, column: 24, scope: !15699)
!15704 = !DILocation(line: 2157, column: 9, scope: !15696)
!15705 = !DILocation(line: 2158, column: 10, scope: !15706)
!15706 = distinct !DILexicalBlock(scope: !15707, file: !3, line: 2158, column: 10)
!15707 = distinct !DILexicalBlock(scope: !15699, file: !3, line: 2157, column: 46)
!15708 = !DILocation(line: 2158, column: 14, scope: !15706)
!15709 = !DILocation(line: 2158, column: 18, scope: !15706)
!15710 = !DILocation(line: 2158, column: 35, scope: !15706)
!15711 = !DILocation(line: 2158, column: 10, scope: !15707)
!15712 = !DILocation(line: 2160, column: 7, scope: !15713)
!15713 = distinct !DILexicalBlock(scope: !15706, file: !3, line: 2158, column: 46)
!15714 = !DILocation(line: 2161, column: 11, scope: !15715)
!15715 = distinct !DILexicalBlock(scope: !15713, file: !3, line: 2161, column: 11)
!15716 = !DILocation(line: 2161, column: 15, scope: !15715)
!15717 = !DILocation(line: 2161, column: 19, scope: !15715)
!15718 = !DILocation(line: 2161, column: 36, scope: !15715)
!15719 = !DILocation(line: 2161, column: 11, scope: !15713)
!15720 = !DILocation(line: 2162, column: 34, scope: !15721)
!15721 = distinct !DILexicalBlock(scope: !15715, file: !3, line: 2161, column: 47)
!15722 = !DILocation(line: 2162, column: 38, scope: !15721)
!15723 = !DILocation(line: 2162, column: 8, scope: !15721)
!15724 = !DILocation(line: 2163, column: 7, scope: !15721)
!15725 = !DILocation(line: 2164, column: 7, scope: !15713)
!15726 = !DILocation(line: 2169, column: 6, scope: !15713)
!15727 = !DILocation(line: 2170, column: 5, scope: !15707)
!15728 = !DILocation(line: 2173, column: 31, scope: !15729)
!15729 = distinct !DILexicalBlock(scope: !15696, file: !3, line: 2173, column: 9)
!15730 = !DILocation(line: 2173, column: 35, scope: !15729)
!15731 = !DILocation(line: 2173, column: 9, scope: !15729)
!15732 = !DILocation(line: 2173, column: 9, scope: !15696)
!15733 = !DILocation(line: 2174, column: 13, scope: !15734)
!15734 = distinct !DILexicalBlock(scope: !15735, file: !3, line: 2174, column: 6)
!15735 = distinct !DILexicalBlock(scope: !15729, file: !3, line: 2173, column: 60)
!15736 = !DILocation(line: 2174, column: 11, scope: !15734)
!15737 = !DILocation(line: 2174, column: 18, scope: !15738)
!15738 = distinct !DILexicalBlock(scope: !15734, file: !3, line: 2174, column: 6)
!15739 = !DILocation(line: 2174, column: 22, scope: !15738)
!15740 = !DILocation(line: 2174, column: 20, scope: !15738)
!15741 = !DILocation(line: 2174, column: 6, scope: !15734)
!15742 = !DILocalVariable(name: "index", scope: !15743, file: !3, line: 2175, type: !15116)
!15743 = distinct !DILexicalBlock(scope: !15738, file: !3, line: 2174, column: 37)
!15744 = !DILocation(line: 2175, column: 18, scope: !15743)
!15745 = !DILocation(line: 2175, column: 26, scope: !15743)
!15746 = !DILocation(line: 2175, column: 30, scope: !15743)
!15747 = !DILocation(line: 2175, column: 42, scope: !15743)
!15748 = !DILocation(line: 2175, column: 46, scope: !15743)
!15749 = !DILocation(line: 2176, column: 12, scope: !15750)
!15750 = distinct !DILexicalBlock(scope: !15743, file: !3, line: 2176, column: 11)
!15751 = !DILocation(line: 2176, column: 11, scope: !15750)
!15752 = !DILocation(line: 2176, column: 21, scope: !15750)
!15753 = !DILocation(line: 2176, column: 18, scope: !15750)
!15754 = !DILocation(line: 2176, column: 11, scope: !15743)
!15755 = !DILocalVariable(name: "co", scope: !15756, file: !3, line: 2177, type: !835)
!15756 = distinct !DILexicalBlock(scope: !15750, file: !3, line: 2176, column: 25)
!15757 = !DILocation(line: 2177, column: 14, scope: !15756)
!15758 = !DILocation(line: 2178, column: 8, scope: !15756)
!15759 = !DILocation(line: 2178, column: 12, scope: !15756)
!15760 = !DILocation(line: 2178, column: 22, scope: !15756)
!15761 = !DILocation(line: 2178, column: 26, scope: !15756)
!15762 = !DILocation(line: 2178, column: 29, scope: !15756)
!15763 = !DILocation(line: 2179, column: 18, scope: !15756)
!15764 = !DILocation(line: 2179, column: 23, scope: !15756)
!15765 = !DILocation(line: 2179, column: 8, scope: !15756)
!15766 = !DILocation(line: 2180, column: 13, scope: !15756)
!15767 = !DILocation(line: 2181, column: 7, scope: !15756)
!15768 = !DILocation(line: 2182, column: 6, scope: !15743)
!15769 = !DILocation(line: 2174, column: 33, scope: !15738)
!15770 = !DILocation(line: 2174, column: 6, scope: !15738)
!15771 = distinct !{!15771, !15741, !15772}
!15772 = !DILocation(line: 2182, column: 6, scope: !15734)
!15773 = !DILocation(line: 2183, column: 5, scope: !15735)
!15774 = !DILocation(line: 2185, column: 10, scope: !15775)
!15775 = distinct !DILexicalBlock(scope: !15776, file: !3, line: 2185, column: 10)
!15776 = distinct !DILexicalBlock(scope: !15729, file: !3, line: 2184, column: 10)
!15777 = !DILocation(line: 2185, column: 15, scope: !15775)
!15778 = !DILocation(line: 2185, column: 13, scope: !15775)
!15779 = !DILocation(line: 2185, column: 10, scope: !15776)
!15780 = !DILocalVariable(name: "co", scope: !15781, file: !3, line: 2186, type: !835)
!15781 = distinct !DILexicalBlock(scope: !15775, file: !3, line: 2185, column: 25)
!15782 = !DILocation(line: 2186, column: 13, scope: !15781)
!15783 = !DILocation(line: 2187, column: 7, scope: !15781)
!15784 = !DILocation(line: 2187, column: 11, scope: !15781)
!15785 = !DILocation(line: 2187, column: 21, scope: !15781)
!15786 = !DILocation(line: 2187, column: 25, scope: !15781)
!15787 = !DILocation(line: 2187, column: 29, scope: !15781)
!15788 = !DILocation(line: 2188, column: 17, scope: !15781)
!15789 = !DILocation(line: 2188, column: 22, scope: !15781)
!15790 = !DILocation(line: 2188, column: 7, scope: !15781)
!15791 = !DILocation(line: 2189, column: 12, scope: !15781)
!15792 = !DILocation(line: 2190, column: 6, scope: !15781)
!15793 = !DILocation(line: 2192, column: 4, scope: !15696)
!15794 = !DILocation(line: 2194, column: 8, scope: !15795)
!15795 = distinct !DILexicalBlock(scope: !15683, file: !3, line: 2194, column: 8)
!15796 = !DILocation(line: 2194, column: 14, scope: !15795)
!15797 = !DILocation(line: 2194, column: 8, scope: !15683)
!15798 = !DILocation(line: 2196, column: 4, scope: !15799)
!15799 = distinct !DILexicalBlock(scope: !15795, file: !3, line: 2194, column: 20)
!15800 = !DILocation(line: 2197, column: 13, scope: !15801)
!15801 = distinct !DILexicalBlock(scope: !15795, file: !3, line: 2197, column: 13)
!15802 = !DILocation(line: 2197, column: 19, scope: !15801)
!15803 = !DILocation(line: 2197, column: 13, scope: !15795)
!15804 = !DILocation(line: 2198, column: 15, scope: !15805)
!15805 = distinct !DILexicalBlock(scope: !15801, file: !3, line: 2197, column: 24)
!15806 = !DILocation(line: 2198, column: 27, scope: !15805)
!15807 = !DILocation(line: 2198, column: 25, scope: !15805)
!15808 = !DILocation(line: 2198, column: 5, scope: !15805)
!15809 = !DILocation(line: 2199, column: 4, scope: !15805)
!15810 = !DILocation(line: 2202, column: 5, scope: !15811)
!15811 = distinct !DILexicalBlock(scope: !15801, file: !3, line: 2200, column: 9)
!15812 = !DILocation(line: 2202, column: 9, scope: !15811)
!15813 = !DILocation(line: 2202, column: 19, scope: !15811)
!15814 = !DILocation(line: 2202, column: 26, scope: !15811)
!15815 = !DILocation(line: 2204, column: 3, scope: !15683)
!15816 = !DILocation(line: 2206, column: 12, scope: !15817)
!15817 = distinct !DILexicalBlock(scope: !15680, file: !3, line: 2205, column: 8)
!15818 = !DILocation(line: 2206, column: 4, scope: !15817)
!15819 = !DILocation(line: 2210, column: 2, scope: !15662)
!15820 = !DILocation(line: 2211, column: 11, scope: !15821)
!15821 = distinct !DILexicalBlock(scope: !15657, file: !3, line: 2211, column: 11)
!15822 = !DILocation(line: 2211, column: 11, scope: !15657)
!15823 = !DILocalVariable(name: "nurb", scope: !15824, file: !3, line: 2212, type: !1209)
!15824 = distinct !DILexicalBlock(scope: !15821, file: !3, line: 2211, column: 47)
!15825 = !DILocation(line: 2212, column: 13, scope: !15824)
!15826 = !DILocation(line: 2217, column: 7, scope: !15827)
!15827 = distinct !DILexicalBlock(scope: !15824, file: !3, line: 2217, column: 7)
!15828 = !DILocation(line: 2217, column: 12, scope: !15827)
!15829 = !DILocation(line: 2217, column: 25, scope: !15827)
!15830 = !DILocation(line: 2217, column: 40, scope: !15827)
!15831 = !DILocation(line: 2217, column: 46, scope: !15827)
!15832 = !DILocation(line: 2217, column: 7, scope: !15824)
!15833 = !DILocation(line: 2218, column: 12, scope: !15834)
!15834 = distinct !DILexicalBlock(scope: !15827, file: !3, line: 2217, column: 55)
!15835 = !DILocation(line: 2218, column: 17, scope: !15834)
!15836 = !DILocation(line: 2218, column: 30, scope: !15834)
!15837 = !DILocation(line: 2218, column: 9, scope: !15834)
!15838 = !DILocation(line: 2219, column: 3, scope: !15834)
!15839 = !DILocalVariable(name: "cu", scope: !15840, file: !3, line: 2221, type: !4467)
!15840 = distinct !DILexicalBlock(scope: !15827, file: !3, line: 2220, column: 8)
!15841 = !DILocation(line: 2221, column: 11, scope: !15840)
!15842 = !DILocation(line: 2221, column: 16, scope: !15840)
!15843 = !DILocation(line: 2221, column: 21, scope: !15840)
!15844 = !DILocation(line: 2222, column: 31, scope: !15840)
!15845 = !DILocation(line: 2222, column: 11, scope: !15840)
!15846 = !DILocation(line: 2222, column: 9, scope: !15840)
!15847 = !DILocation(line: 2225, column: 29, scope: !15824)
!15848 = !DILocation(line: 2225, column: 35, scope: !15824)
!15849 = !DILocation(line: 2225, column: 39, scope: !15824)
!15850 = !DILocation(line: 2225, column: 3, scope: !15824)
!15851 = !DILocation(line: 2226, column: 2, scope: !15824)
!15852 = !DILocation(line: 2227, column: 11, scope: !15853)
!15853 = distinct !DILexicalBlock(scope: !15821, file: !3, line: 2227, column: 11)
!15854 = !DILocation(line: 2227, column: 16, scope: !15853)
!15855 = !DILocation(line: 2227, column: 21, scope: !15853)
!15856 = !DILocation(line: 2227, column: 11, scope: !15821)
!15857 = !DILocalVariable(name: "latt", scope: !15858, file: !3, line: 2228, type: !8112)
!15858 = distinct !DILexicalBlock(scope: !15853, file: !3, line: 2227, column: 36)
!15859 = !DILocation(line: 2228, column: 12, scope: !15858)
!15860 = !DILocation(line: 2228, column: 20, scope: !15858)
!15861 = !DILocation(line: 2228, column: 25, scope: !15858)
!15862 = !DILocalVariable(name: "dl", scope: !15858, file: !3, line: 2229, type: !12611)
!15863 = !DILocation(line: 2229, column: 13, scope: !15858)
!15864 = !DILocation(line: 2229, column: 20, scope: !15858)
!15865 = !DILocation(line: 2229, column: 25, scope: !15858)
!15866 = !DILocation(line: 2229, column: 58, scope: !15858)
!15867 = !DILocation(line: 2229, column: 63, scope: !15858)
!15868 = !DILocation(line: 2229, column: 76, scope: !15858)
!15869 = !DILocation(line: 2229, column: 39, scope: !15858)
!15870 = !DILocalVariable(name: "co", scope: !15858, file: !3, line: 2230, type: !3431)
!15871 = !DILocation(line: 2230, column: 11, scope: !15858)
!15872 = !DILocation(line: 2230, column: 20, scope: !15858)
!15873 = !DILocation(line: 2230, column: 39, scope: !15858)
!15874 = !DILocation(line: 2230, column: 43, scope: !15858)
!15875 = !DILocation(line: 2230, column: 25, scope: !15858)
!15876 = !DILocalVariable(name: "tot", scope: !15858, file: !3, line: 2231, type: !73)
!15877 = !DILocation(line: 2231, column: 7, scope: !15858)
!15878 = !DILocation(line: 2233, column: 7, scope: !15879)
!15879 = distinct !DILexicalBlock(scope: !15858, file: !3, line: 2233, column: 7)
!15880 = !DILocation(line: 2233, column: 13, scope: !15879)
!15881 = !DILocation(line: 2233, column: 7, scope: !15858)
!15882 = !DILocation(line: 2233, column: 30, scope: !15879)
!15883 = !DILocation(line: 2233, column: 36, scope: !15879)
!15884 = !DILocation(line: 2233, column: 46, scope: !15879)
!15885 = !DILocation(line: 2233, column: 28, scope: !15879)
!15886 = !DILocation(line: 2233, column: 23, scope: !15879)
!15887 = !DILocation(line: 2235, column: 9, scope: !15858)
!15888 = !DILocation(line: 2235, column: 15, scope: !15858)
!15889 = !DILocation(line: 2235, column: 23, scope: !15858)
!15890 = !DILocation(line: 2235, column: 29, scope: !15858)
!15891 = !DILocation(line: 2235, column: 21, scope: !15858)
!15892 = !DILocation(line: 2235, column: 37, scope: !15858)
!15893 = !DILocation(line: 2235, column: 43, scope: !15858)
!15894 = !DILocation(line: 2235, column: 35, scope: !15858)
!15895 = !DILocation(line: 2235, column: 7, scope: !15858)
!15896 = !DILocation(line: 2240, column: 7, scope: !15897)
!15897 = distinct !DILexicalBlock(scope: !15858, file: !3, line: 2240, column: 7)
!15898 = !DILocation(line: 2240, column: 12, scope: !15897)
!15899 = !DILocation(line: 2240, column: 10, scope: !15897)
!15900 = !DILocation(line: 2240, column: 7, scope: !15858)
!15901 = !DILocation(line: 2241, column: 8, scope: !15902)
!15902 = distinct !DILexicalBlock(scope: !15903, file: !3, line: 2241, column: 8)
!15903 = distinct !DILexicalBlock(scope: !15897, file: !3, line: 2240, column: 17)
!15904 = !DILocation(line: 2241, column: 8, scope: !15903)
!15905 = !DILocation(line: 2242, column: 16, scope: !15906)
!15906 = distinct !DILexicalBlock(scope: !15902, file: !3, line: 2241, column: 12)
!15907 = !DILocation(line: 2242, column: 21, scope: !15906)
!15908 = !DILocation(line: 2242, column: 24, scope: !15906)
!15909 = !DILocation(line: 2242, column: 5, scope: !15906)
!15910 = !DILocation(line: 2243, column: 4, scope: !15906)
!15911 = !DILocation(line: 2245, column: 16, scope: !15912)
!15912 = distinct !DILexicalBlock(scope: !15902, file: !3, line: 2244, column: 9)
!15913 = !DILocation(line: 2245, column: 21, scope: !15912)
!15914 = !DILocation(line: 2245, column: 27, scope: !15912)
!15915 = !DILocation(line: 2245, column: 31, scope: !15912)
!15916 = !DILocation(line: 2245, column: 35, scope: !15912)
!15917 = !DILocation(line: 2245, column: 5, scope: !15912)
!15918 = !DILocation(line: 2247, column: 3, scope: !15903)
!15919 = !DILocation(line: 2248, column: 2, scope: !15858)
!15920 = !DILocation(line: 2249, column: 1, scope: !15645)
!15921 = distinct !DISubprogram(name: "ob_parvert3", scope: !3, file: !3, line: 2251, type: !15572, scopeLine: 2252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !5286)
!15922 = !DILocalVariable(name: "ob", arg: 1, scope: !15921, file: !3, line: 2251, type: !5166)
!15923 = !DILocation(line: 2251, column: 33, scope: !15921)
!15924 = !DILocalVariable(name: "par", arg: 2, scope: !15921, file: !3, line: 2251, type: !5166)
!15925 = !DILocation(line: 2251, column: 45, scope: !15921)
!15926 = !DILocalVariable(name: "mat", arg: 3, scope: !15921, file: !3, line: 2251, type: !3458)
!15927 = !DILocation(line: 2251, column: 56, scope: !15921)
!15928 = !DILocation(line: 2255, column: 6, scope: !15929)
!15929 = distinct !DILexicalBlock(scope: !15921, file: !3, line: 2255, column: 6)
!15930 = !DILocation(line: 2255, column: 6, scope: !15921)
!15931 = !DILocalVariable(name: "cmat", scope: !15932, file: !3, line: 2256, type: !1708)
!15932 = distinct !DILexicalBlock(scope: !15929, file: !3, line: 2255, column: 42)
!15933 = !DILocation(line: 2256, column: 9, scope: !15932)
!15934 = !DILocalVariable(name: "v1", scope: !15932, file: !3, line: 2256, type: !835)
!15935 = !DILocation(line: 2256, column: 21, scope: !15932)
!15936 = !DILocalVariable(name: "v2", scope: !15932, file: !3, line: 2256, type: !835)
!15937 = !DILocation(line: 2256, column: 28, scope: !15932)
!15938 = !DILocalVariable(name: "v3", scope: !15932, file: !3, line: 2256, type: !835)
!15939 = !DILocation(line: 2256, column: 35, scope: !15932)
!15940 = !DILocalVariable(name: "q", scope: !15932, file: !3, line: 2256, type: !916)
!15941 = !DILocation(line: 2256, column: 42, scope: !15932)
!15942 = !DILocation(line: 2258, column: 16, scope: !15932)
!15943 = !DILocation(line: 2258, column: 21, scope: !15932)
!15944 = !DILocation(line: 2258, column: 25, scope: !15932)
!15945 = !DILocation(line: 2258, column: 31, scope: !15932)
!15946 = !DILocation(line: 2258, column: 3, scope: !15932)
!15947 = !DILocation(line: 2259, column: 16, scope: !15932)
!15948 = !DILocation(line: 2259, column: 21, scope: !15932)
!15949 = !DILocation(line: 2259, column: 25, scope: !15932)
!15950 = !DILocation(line: 2259, column: 31, scope: !15932)
!15951 = !DILocation(line: 2259, column: 3, scope: !15932)
!15952 = !DILocation(line: 2260, column: 16, scope: !15932)
!15953 = !DILocation(line: 2260, column: 21, scope: !15932)
!15954 = !DILocation(line: 2260, column: 25, scope: !15932)
!15955 = !DILocation(line: 2260, column: 31, scope: !15932)
!15956 = !DILocation(line: 2260, column: 3, scope: !15932)
!15957 = !DILocation(line: 2262, column: 15, scope: !15932)
!15958 = !DILocation(line: 2262, column: 18, scope: !15932)
!15959 = !DILocation(line: 2262, column: 22, scope: !15932)
!15960 = !DILocation(line: 2262, column: 26, scope: !15932)
!15961 = !DILocation(line: 2262, column: 3, scope: !15932)
!15962 = !DILocation(line: 2263, column: 16, scope: !15932)
!15963 = !DILocation(line: 2263, column: 22, scope: !15932)
!15964 = !DILocation(line: 2263, column: 3, scope: !15932)
!15965 = !DILocation(line: 2264, column: 14, scope: !15932)
!15966 = !DILocation(line: 2264, column: 19, scope: !15932)
!15967 = !DILocation(line: 2264, column: 3, scope: !15932)
!15968 = !DILocation(line: 2266, column: 17, scope: !15932)
!15969 = !DILocation(line: 2266, column: 25, scope: !15932)
!15970 = !DILocation(line: 2266, column: 29, scope: !15932)
!15971 = !DILocation(line: 2266, column: 33, scope: !15932)
!15972 = !DILocation(line: 2266, column: 3, scope: !15932)
!15973 = !DILocation(line: 2267, column: 2, scope: !15932)
!15974 = !DILocation(line: 2269, column: 11, scope: !15975)
!15975 = distinct !DILexicalBlock(scope: !15929, file: !3, line: 2268, column: 7)
!15976 = !DILocation(line: 2269, column: 3, scope: !15975)
!15977 = !DILocation(line: 2271, column: 1, scope: !15921)
