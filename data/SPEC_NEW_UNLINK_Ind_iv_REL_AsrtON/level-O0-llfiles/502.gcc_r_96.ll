; ModuleID = 'cse.c'
source_filename = "cse.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type opaque
%struct.gimple_df = type opaque
%struct.loops = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.rtl_hooks = type { %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i64, i64*)*, %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (i32, %struct.rtx_def*)* }
%struct.reg_eqv_elem = type { i32, i32 }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%struct.rtl_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.cse_reg_info = type { i32, i32, i32, i32, i32 }
%struct.qty_table_elem = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i32, i24 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.table_elt = type { %struct.rtx_def*, %struct.rtx_def*, %struct.table_elt*, %struct.table_elt*, %struct.table_elt*, %struct.table_elt*, %struct.table_elt*, %struct.table_elt*, i32, i32, i8, i8, i8, i8 }
%struct.df = type { [8 x %struct.dataflow*], [8 x %struct.dataflow*], %struct.bitmap_head_def*, %struct.df_ref_info, %struct.df_ref_info, %struct.df_reg_info**, %struct.df_reg_info**, %struct.df_reg_info**, i32, i32, %struct.df_insn_info**, i32, i32, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32*, i32*, i32, i32, i32*, i32, i8, i8, i8 }
%struct.dataflow = type { %struct.df_problem*, i8**, i32, %struct.alloc_pool_def*, %struct.bitmap_head_def*, i8*, i32, i8, i8, i8 }
%struct.df_problem = type { i32, i32, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.basic_block_def*, i8*)*, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)*, void (%struct.basic_block_def*)*, void (%struct.edge_def*)*, i8 (i32)*, void (%struct.bitmap_head_def*)*, void ()*, void ()*, void (%struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void ()*, void ()*, %struct.df_problem*, i32, i8 }
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.df_ref_info = type { %union.df_ref_d**, i32*, i32*, i32, i32, i32, i32 }
%union.df_ref_d = type { %struct.df_extract_ref }
%struct.df_extract_ref = type { %struct.df_regular_ref, i32, i32, i32 }
%struct.df_regular_ref = type { %struct.df_base_ref, %struct.rtx_def** }
%struct.df_base_ref = type { i32, %struct.rtx_def*, %struct.df_link*, %struct.df_insn_info*, %union.df_ref_d*, %union.df_ref_d*, i32, i32, i32 }
%struct.df_link = type { %union.df_ref_d*, %struct.df_link* }
%struct.df_insn_info = type { %struct.rtx_def*, %union.df_ref_d**, %union.df_ref_d**, %union.df_ref_d**, %struct.df_mw_hardreg**, i32 }
%struct.df_mw_hardreg = type { %struct.rtx_def*, i32, i32, i32, i32 }
%struct.df_reg_info = type { %union.df_ref_d*, i32 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%union.gimple_statement_d = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.real_value = type { i32, [3 x i64] }
%struct.fixed_value = type { %struct.double_int, i32 }
%struct.double_int = type { i64, i64 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.mem_attrs = type { %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i8 }
%struct.cse_basic_block_data = type { i32, i32, %struct.branch_path* }
%struct.branch_path = type { %struct.basic_block_def* }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.df_scan_bb_info = type { %union.df_ref_d**, %union.df_ref_d** }
%struct.check_dependence_data = type { i32, %struct.rtx_def*, %struct.rtx_def* }
%struct.set = type { %struct.rtx_def*, %struct.rtx_def*, %struct.table_elt*, i32, i32, %struct.rtx_def*, i8, i8, i8, %struct.rtx_def*, i32, %struct.table_elt*, %struct.table_elt* }
%struct.change_cc_mode_args = type { %struct.rtx_def*, %struct.rtx_def* }

@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [23 x i8] c"Equivalence chain for \00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c": \0A\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@reload_completed = external dso_local global i32, align 4
@global_rtl = external dso_local global [11 x %struct.rtx_def*], align 16
@pic_offset_table_rtx = external dso_local global %struct.rtx_def*, align 8
@global_regs = external dso_local global [53 x i8], align 16
@fixed_regs = external dso_local global [53 x i8], align 16
@mode_class = external dso_local constant [87 x i8], align 16
@rtx_length = external dso_local constant [139 x i8], align 16
@rtx_format = external dso_local constant [139 x i8*], align 16
@.str.3 = private unnamed_addr constant [6 x i8] c"cse.c\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@cfun = external dso_local global %struct.function*, align 8
@compiler_params = external dso_local global %struct.param_info*, align 8
@cse_cfg_altered = internal global i8 0, align 1, !dbg !0
@cse_jumps_altered = internal global i8 0, align 1, !dbg !2377
@recorded_label_ref = internal global i8 0, align 1, !dbg !2379
@constant_pool_entries_cost = internal global i32 0, align 4, !dbg !2381
@constant_pool_entries_regcost = internal global i32 0, align 4, !dbg !2383
@rtl_hooks = external dso_local global %struct.rtl_hooks, align 8
@cse_rtl_hooks = internal constant %struct.rtl_hooks { %struct.rtx_def* (i32, %struct.rtx_def*)* @gen_lowpart_if_possible, %struct.rtx_def* (i32, %struct.rtx_def*)* @gen_lowpart_no_emit_general, %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i64, i64*)* @reg_nonzero_bits_general, %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, i32*)* @reg_num_sign_bit_copies_general, i8 (i32, %struct.rtx_def*)* @reg_truncated_to_mode_general }, align 8, !dbg !2406
@reg_eqv_table = internal global %struct.reg_eqv_elem* null, align 8, !dbg !2375
@cse_visited_basic_blocks = internal global %struct.simple_bitmap_def* null, align 8, !dbg !2385
@flag_cse_follow_jumps = external dso_local global i32, align 4
@max_qty = internal global i32 0, align 4, !dbg !2373
@dump_file = external dso_local global %struct._IO_FILE*, align 8
@general_rtl_hooks = external dso_local constant %struct.rtl_hooks, align 8
@timevar_enable = external dso_local global i8, align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"Deleted %i trivially dead insns\0A\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"cse1\00", align 1
@pass_cse = dso_local global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i8 ()* @gate_handle_cse, i32 ()* @rest_of_handle_cse, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 121, i32 0, i32 0, i32 0, i32 0, i32 132107 } }, align 8, !dbg !2341
@.str.7 = private unnamed_addr constant [5 x i8] c"cse2\00", align 1
@pass_cse2 = dso_local global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i8 ()* @gate_handle_cse2, i32 ()* @rest_of_handle_cse2, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 137, i32 0, i32 0, i32 0, i32 0, i32 132107 } }, align 8, !dbg !2369
@.str.8 = private unnamed_addr constant [10 x i8] c"cse_local\00", align 1
@pass_cse_after_global_opts = dso_local global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i32 0, i32 0), i8 ()* @gate_handle_cse_after_global_opts, i32 ()* @rest_of_handle_cse_after_global_opts, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 121, i32 0, i32 0, i32 0, i32 0, i32 132107 } }, align 8, !dbg !2371
@cse_reg_info_table = internal global %struct.cse_reg_info* null, align 8, !dbg !2398
@cse_reg_info_timestamp = internal global i32 0, align 4, !dbg !2400
@hard_regno_nregs = external dso_local global [53 x [87 x i8]], align 16
@cse_reg_info_table_size = internal global i32 0, align 4, !dbg !2402
@cse_reg_info_table_first_uninitialized = internal global i32 0, align 4, !dbg !2404
@.str.9 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@.str.10 = private unnamed_addr constant [33 x i8] c";; Following path with %d sets: \00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@qty_table = internal global %struct.qty_table_elem* null, align 8, !dbg !2433
@cse_ebb_live_in = internal global %struct.bitmap_head_def* null, align 8, !dbg !2444
@cse_ebb_live_out = internal global %struct.bitmap_head_def* null, align 8, !dbg !2447
@optimize_this_for_speed_p = internal global i8 0, align 1, !dbg !2453
@flag_non_call_exceptions = external dso_local global i32, align 4
@next_qty = internal global i32 0, align 4, !dbg !2457
@hard_regs_in_table = internal global i64 0, align 8, !dbg !2435
@table = internal global [32 x %struct.table_elt*] zeroinitializer, align 16, !dbg !2437
@free_element_chain = internal global %struct.table_elt* null, align 8, !dbg !2442
@df = external dso_local global %struct.df*, align 8
@do_not_record = internal global i32 0, align 4, !dbg !2449
@hash_arg_in_memory = internal global i32 0, align 4, !dbg !2451
@rtx_class = external dso_local constant [139 x i32], align 16
@regno_reg_rtx = external dso_local global %struct.rtx_def**, align 8
@regclass_map = external dso_local constant [53 x i32], align 16
@this_insn = internal global %struct.rtx_def* null, align 8, !dbg !2455
@mode_size = external dso_local global [87 x i8], align 16
@mode_wider = external dso_local constant [87 x i8], align 16
@flag_expensive_optimizations = external dso_local global i32, align 4
@targetm = external dso_local global %struct.gcc_target, align 8
@flag_float_store = external dso_local global i32, align 4
@const_tiny_rtx = external dso_local global [3 x [87 x %struct.rtx_def*]], align 16
@const_true_rtx = external dso_local global %struct.rtx_def*, align 8
@const_int_rtx = external dso_local global [129 x %struct.rtx_def*], align 16
@word_mode = external dso_local global i32, align 4
@regs_invalidated_by_call = external dso_local global i64, align 8
@optimize = external dso_local global i32, align 4
@dump_flags = external dso_local global i32, align 4
@flag_rerun_cse_after_loop = external dso_local global i32, align 4
@flag_gcse = external dso_local global i32, align 4
@cse_not_expected = external dso_local global i32, align 4
@flag_rerun_cse_after_global_opts = external dso_local global i32, align 4

; Function Attrs: noinline nounwind uwtable
define dso_local void @dump_class(%struct.table_elt* %classp) #0 !dbg !2463 {
entry:
  %classp.addr = alloca %struct.table_elt*, align 8
  %elt = alloca %struct.table_elt*, align 8
  store %struct.table_elt* %classp, %struct.table_elt** %classp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.table_elt** %classp.addr, metadata !2467, metadata !DIExpression()), !dbg !2468
  call void @llvm.dbg.declare(metadata %struct.table_elt** %elt, metadata !2469, metadata !DIExpression()), !dbg !2470
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2471
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0)), !dbg !2472
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2473
  %2 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8, !dbg !2474
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %2, i32 0, i32 0, !dbg !2475
  %3 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !2475
  call void @print_rtl(%struct._IO_FILE* %1, %struct.rtx_def* %3), !dbg !2476
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2477
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0)), !dbg !2478
  %5 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8, !dbg !2479
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %5, i32 0, i32 6, !dbg !2481
  %6 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8, !dbg !2481
  store %struct.table_elt* %6, %struct.table_elt** %elt, align 8, !dbg !2482
  br label %for.cond, !dbg !2483

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !2484
  %tobool = icmp ne %struct.table_elt* %7, null, !dbg !2486
  br i1 %tobool, label %for.body, label %for.end, !dbg !2486

for.body:                                         ; preds = %for.cond
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2487
  %9 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !2489
  %exp2 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %9, i32 0, i32 0, !dbg !2490
  %10 = load %struct.rtx_def*, %struct.rtx_def** %exp2, align 8, !dbg !2490
  call void @print_rtl(%struct._IO_FILE* %8, %struct.rtx_def* %10), !dbg !2491
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2492
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !2493
  br label %for.inc, !dbg !2494

for.inc:                                          ; preds = %for.body
  %12 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !2495
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %12, i32 0, i32 4, !dbg !2496
  %13 = load %struct.table_elt*, %struct.table_elt** %next_same_value, align 8, !dbg !2496
  store %struct.table_elt* %13, %struct.table_elt** %elt, align 8, !dbg !2497
  br label %for.cond, !dbg !2498, !llvm.loop !2499

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2501
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

declare dso_local void @print_rtl(%struct._IO_FILE*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @hash_rtx_cb(%struct.rtx_def* %x, i32 %mode, i32* %do_not_record_p, i32* %hash_arg_in_memory_p, i8 zeroext %have_reg_qty, i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)* %cb) #0 !dbg !2502 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %do_not_record_p.addr = alloca i32*, align 8
  %hash_arg_in_memory_p.addr = alloca i32*, align 8
  %have_reg_qty.addr = alloca i8, align 1
  %cb.addr = alloca i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %hash = alloca i32, align 4
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %newmode = alloca i32, align 4
  %newx = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  %record = alloca i8, align 1
  %units = alloca i32, align 4
  %elt = alloca %struct.rtx_def*, align 8
  %h = alloca i32, align 4
  %p = alloca i8*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !2510, metadata !DIExpression()), !dbg !2511
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !2512, metadata !DIExpression()), !dbg !2513
  store i32* %do_not_record_p, i32** %do_not_record_p.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %do_not_record_p.addr, metadata !2514, metadata !DIExpression()), !dbg !2515
  store i32* %hash_arg_in_memory_p, i32** %hash_arg_in_memory_p.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %hash_arg_in_memory_p.addr, metadata !2516, metadata !DIExpression()), !dbg !2517
  store i8 %have_reg_qty, i8* %have_reg_qty.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %have_reg_qty.addr, metadata !2518, metadata !DIExpression()), !dbg !2519
  store i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)* %cb, i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)** %cb.addr, metadata !2520, metadata !DIExpression()), !dbg !2521
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2522, metadata !DIExpression()), !dbg !2523
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2524, metadata !DIExpression()), !dbg !2525
  call void @llvm.dbg.declare(metadata i32* %hash, metadata !2526, metadata !DIExpression()), !dbg !2527
  store i32 0, i32* %hash, align 4, !dbg !2527
  call void @llvm.dbg.declare(metadata i32* %code, metadata !2528, metadata !DIExpression()), !dbg !2529
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !2530, metadata !DIExpression()), !dbg !2531
  call void @llvm.dbg.declare(metadata i32* %newmode, metadata !2532, metadata !DIExpression()), !dbg !2533
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %newx, metadata !2534, metadata !DIExpression()), !dbg !2535
  br label %repeat, !dbg !2536

repeat:                                           ; preds = %if.then345, %for.end302, %if.end210, %if.end173, %entry
  call void @llvm.dbg.label(metadata !2537), !dbg !2538
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2539
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !2541
  br i1 %cmp, label %if.then, label %if.end, !dbg !2542

if.then:                                          ; preds = %repeat
  %1 = load i32, i32* %hash, align 4, !dbg !2543
  store i32 %1, i32* %retval, align 4, !dbg !2544
  br label %return, !dbg !2544

if.end:                                           ; preds = %repeat
  %2 = load i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)** %cb.addr, align 8, !dbg !2545
  %cmp1 = icmp ne i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)* %2, null, !dbg !2547
  br i1 %cmp1, label %land.lhs.true, label %if.end4, !dbg !2548

land.lhs.true:                                    ; preds = %if.end
  %3 = load i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)** %cb.addr, align 8, !dbg !2549
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2550
  %5 = load i32, i32* %mode.addr, align 4, !dbg !2551
  %call = call i32 %3(%struct.rtx_def* %4, i32 %5, %struct.rtx_def** %newx, i32* %newmode), !dbg !2552
  %tobool = icmp ne i32 %call, 0, !dbg !2552
  br i1 %tobool, label %if.then2, label %if.end4, !dbg !2553

if.then2:                                         ; preds = %land.lhs.true
  %6 = load %struct.rtx_def*, %struct.rtx_def** %newx, align 8, !dbg !2554
  %7 = load i32, i32* %newmode, align 4, !dbg !2556
  %8 = load i32*, i32** %do_not_record_p.addr, align 8, !dbg !2557
  %9 = load i32*, i32** %hash_arg_in_memory_p.addr, align 8, !dbg !2558
  %10 = load i8, i8* %have_reg_qty.addr, align 1, !dbg !2559
  %11 = load i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)** %cb.addr, align 8, !dbg !2560
  %call3 = call i32 @hash_rtx_cb(%struct.rtx_def* %6, i32 %7, i32* %8, i32* %9, i8 zeroext %10, i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)* %11), !dbg !2561
  %12 = load i32, i32* %hash, align 4, !dbg !2562
  %add = add i32 %12, %call3, !dbg !2562
  store i32 %add, i32* %hash, align 4, !dbg !2562
  %13 = load i32, i32* %hash, align 4, !dbg !2563
  store i32 %13, i32* %retval, align 4, !dbg !2564
  br label %return, !dbg !2564

if.end4:                                          ; preds = %land.lhs.true, %if.end
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2565
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !2565
  %bf.load = load i32, i32* %15, align 8, !dbg !2565
  %bf.clear = and i32 %bf.load, 65535, !dbg !2565
  store i32 %bf.clear, i32* %code, align 4, !dbg !2566
  %16 = load i32, i32* %code, align 4, !dbg !2567
  switch i32 %16, label %sw.default [
    i32 37, label %sw.bb
    i32 39, label %sw.bb52
    i32 30, label %sw.bb71
    i32 32, label %sw.bb78
    i32 31, label %sw.bb105
    i32 33, label %sw.bb114
    i32 44, label %sw.bb131
    i32 45, label %sw.bb141
    i32 43, label %sw.bb151
    i32 24, label %sw.bb179
    i32 74, label %sw.bb217
    i32 75, label %sw.bb217
    i32 76, label %sw.bb217
    i32 77, label %sw.bb217
    i32 78, label %sw.bb217
    i32 79, label %sw.bb217
    i32 36, label %sw.bb217
    i32 46, label %sw.bb217
    i32 26, label %sw.bb217
    i32 19, label %sw.bb217
    i32 17, label %sw.bb221
  ], !dbg !2568

sw.bb:                                            ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !2569, metadata !DIExpression()), !dbg !2572
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2573
  %call5 = call i32 @rhs_regno(%struct.rtx_def* %17), !dbg !2573
  store i32 %call5, i32* %regno, align 4, !dbg !2572
  %18 = load i32*, i32** %do_not_record_p.addr, align 8, !dbg !2574
  %tobool6 = icmp ne i32* %18, null, !dbg !2574
  br i1 %tobool6, label %land.lhs.true7, label %if.end46, !dbg !2576

land.lhs.true7:                                   ; preds = %sw.bb
  %19 = load i32, i32* @reload_completed, align 4, !dbg !2577
  %tobool8 = icmp ne i32 %19, 0, !dbg !2577
  br i1 %tobool8, label %if.end46, label %if.then9, !dbg !2578

if.then9:                                         ; preds = %land.lhs.true7
  call void @llvm.dbg.declare(metadata i8* %record, metadata !2579, metadata !DIExpression()), !dbg !2581
  %20 = load i32, i32* %regno, align 4, !dbg !2582
  %cmp10 = icmp uge i32 %20, 53, !dbg !2584
  br i1 %cmp10, label %if.then11, label %if.else, !dbg !2585

if.then11:                                        ; preds = %if.then9
  store i8 1, i8* %record, align 1, !dbg !2586
  br label %if.end42, !dbg !2587

if.else:                                          ; preds = %if.then9
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2588
  %22 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !dbg !2590
  %cmp12 = icmp eq %struct.rtx_def* %21, %22, !dbg !2591
  br i1 %cmp12, label %if.then20, label %lor.lhs.false, !dbg !2592

lor.lhs.false:                                    ; preds = %if.else
  %23 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2593
  %24 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !2594
  %cmp13 = icmp eq %struct.rtx_def* %23, %24, !dbg !2595
  br i1 %cmp13, label %if.then20, label %lor.lhs.false14, !dbg !2596

lor.lhs.false14:                                  ; preds = %lor.lhs.false
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2597
  %26 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !2598
  %cmp15 = icmp eq %struct.rtx_def* %25, %26, !dbg !2599
  br i1 %cmp15, label %if.then20, label %lor.lhs.false16, !dbg !2600

lor.lhs.false16:                                  ; preds = %lor.lhs.false14
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2601
  %28 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !2602
  %cmp17 = icmp eq %struct.rtx_def* %27, %28, !dbg !2603
  br i1 %cmp17, label %if.then20, label %lor.lhs.false18, !dbg !2604

lor.lhs.false18:                                  ; preds = %lor.lhs.false16
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2605
  %30 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !2606
  %cmp19 = icmp eq %struct.rtx_def* %29, %30, !dbg !2607
  br i1 %cmp19, label %if.then20, label %if.else21, !dbg !2608

if.then20:                                        ; preds = %lor.lhs.false18, %lor.lhs.false16, %lor.lhs.false14, %lor.lhs.false, %if.else
  store i8 1, i8* %record, align 1, !dbg !2609
  br label %if.end41, !dbg !2610

if.else21:                                        ; preds = %lor.lhs.false18
  %31 = load i32, i32* %regno, align 4, !dbg !2611
  %idxprom = zext i32 %31 to i64, !dbg !2613
  %arrayidx = getelementptr inbounds [53 x i8], [53 x i8]* @global_regs, i64 0, i64 %idxprom, !dbg !2613
  %32 = load i8, i8* %arrayidx, align 1, !dbg !2613
  %tobool22 = icmp ne i8 %32, 0, !dbg !2613
  br i1 %tobool22, label %if.then23, label %if.else24, !dbg !2614

if.then23:                                        ; preds = %if.else21
  store i8 0, i8* %record, align 1, !dbg !2615
  br label %if.end40, !dbg !2616

if.else24:                                        ; preds = %if.else21
  %33 = load i32, i32* %regno, align 4, !dbg !2617
  %idxprom25 = zext i32 %33 to i64, !dbg !2619
  %arrayidx26 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %idxprom25, !dbg !2619
  %34 = load i8, i8* %arrayidx26, align 1, !dbg !2619
  %tobool27 = icmp ne i8 %34, 0, !dbg !2619
  br i1 %tobool27, label %if.then28, label %if.else29, !dbg !2620

if.then28:                                        ; preds = %if.else24
  store i8 1, i8* %record, align 1, !dbg !2621
  br label %if.end39, !dbg !2622

if.else29:                                        ; preds = %if.else24
  %35 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2623
  %36 = bitcast %struct.rtx_def* %35 to i32*, !dbg !2623
  %bf.load30 = load i32, i32* %36, align 8, !dbg !2623
  %bf.lshr = lshr i32 %bf.load30, 16, !dbg !2623
  %bf.clear31 = and i32 %bf.lshr, 255, !dbg !2623
  %idxprom32 = zext i32 %bf.clear31 to i64, !dbg !2623
  %arrayidx33 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom32, !dbg !2623
  %37 = load i8, i8* %arrayidx33, align 1, !dbg !2623
  %conv = zext i8 %37 to i32, !dbg !2623
  %cmp34 = icmp eq i32 %conv, 1, !dbg !2625
  br i1 %cmp34, label %if.then36, label %if.else37, !dbg !2626

if.then36:                                        ; preds = %if.else29
  store i8 1, i8* %record, align 1, !dbg !2627
  br label %if.end38, !dbg !2628

if.else37:                                        ; preds = %if.else29
  store i8 0, i8* %record, align 1, !dbg !2629
  br label %if.end38

if.end38:                                         ; preds = %if.else37, %if.then36
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then28
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then23
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then20
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then11
  %38 = load i8, i8* %record, align 1, !dbg !2631
  %tobool43 = icmp ne i8 %38, 0, !dbg !2631
  br i1 %tobool43, label %if.end45, label %if.then44, !dbg !2633

if.then44:                                        ; preds = %if.end42
  %39 = load i32*, i32** %do_not_record_p.addr, align 8, !dbg !2634
  store i32 1, i32* %39, align 4, !dbg !2636
  store i32 0, i32* %retval, align 4, !dbg !2637
  br label %return, !dbg !2637

if.end45:                                         ; preds = %if.end42
  br label %if.end46, !dbg !2638

if.end46:                                         ; preds = %if.end45, %land.lhs.true7, %sw.bb
  %40 = load i32, i32* %hash, align 4, !dbg !2639
  %add47 = add i32 %40, 4736, !dbg !2639
  store i32 %add47, i32* %hash, align 4, !dbg !2639
  %41 = load i8, i8* %have_reg_qty.addr, align 1, !dbg !2640
  %conv48 = zext i8 %41 to i32, !dbg !2640
  %tobool49 = icmp ne i32 %conv48, 0, !dbg !2640
  br i1 %tobool49, label %cond.true, label %cond.false, !dbg !2640

cond.true:                                        ; preds = %if.end46
  %42 = load i32, i32* %regno, align 4, !dbg !2641
  %call50 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %42), !dbg !2641
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call50, i32 0, i32 1, !dbg !2641
  %43 = load i32, i32* %reg_qty, align 4, !dbg !2641
  br label %cond.end, !dbg !2640

cond.false:                                       ; preds = %if.end46
  %44 = load i32, i32* %regno, align 4, !dbg !2642
  br label %cond.end, !dbg !2640

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %43, %cond.true ], [ %44, %cond.false ], !dbg !2640
  %45 = load i32, i32* %hash, align 4, !dbg !2643
  %add51 = add i32 %45, %cond, !dbg !2643
  store i32 %add51, i32* %hash, align 4, !dbg !2643
  %46 = load i32, i32* %hash, align 4, !dbg !2644
  store i32 %46, i32* %retval, align 4, !dbg !2645
  br label %return, !dbg !2645

sw.bb52:                                          ; preds = %if.end4
  %47 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2646
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1, !dbg !2646
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2646
  %arrayidx53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !2646
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtx_def**, !dbg !2646
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2646
  %49 = bitcast %struct.rtx_def* %48 to i32*, !dbg !2646
  %bf.load54 = load i32, i32* %49, align 8, !dbg !2646
  %bf.clear55 = and i32 %bf.load54, 65535, !dbg !2646
  %cmp56 = icmp eq i32 %bf.clear55, 37, !dbg !2646
  br i1 %cmp56, label %if.then58, label %if.end70, !dbg !2649

if.then58:                                        ; preds = %sw.bb52
  %50 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2650
  %u59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1, !dbg !2650
  %fld60 = bitcast %union.u* %u59 to [1 x %union.rtunion_def]*, !dbg !2650
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i64 0, i64 0, !dbg !2650
  %rt_rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**, !dbg !2650
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx62, align 8, !dbg !2650
  %call63 = call i32 @rhs_regno(%struct.rtx_def* %51), !dbg !2650
  %add64 = add i32 4992, %call63, !dbg !2652
  %52 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2653
  %u65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1, !dbg !2653
  %fld66 = bitcast %union.u* %u65 to [1 x %union.rtunion_def]*, !dbg !2653
  %arrayidx67 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld66, i64 0, i64 1, !dbg !2653
  %rt_uint = bitcast %union.rtunion_def* %arrayidx67 to i32*, !dbg !2653
  %53 = load i32, i32* %rt_uint, align 8, !dbg !2653
  %div = udiv i32 %53, 4, !dbg !2654
  %add68 = add i32 %add64, %div, !dbg !2655
  %54 = load i32, i32* %hash, align 4, !dbg !2656
  %add69 = add i32 %54, %add68, !dbg !2656
  store i32 %add69, i32* %hash, align 4, !dbg !2656
  %55 = load i32, i32* %hash, align 4, !dbg !2657
  store i32 %55, i32* %retval, align 4, !dbg !2658
  br label %return, !dbg !2658

if.end70:                                         ; preds = %sw.bb52
  br label %sw.epilog, !dbg !2659

sw.bb71:                                          ; preds = %if.end4
  %56 = load i32, i32* %mode.addr, align 4, !dbg !2660
  %add72 = add i32 3840, %56, !dbg !2661
  %57 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2662
  %u73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1, !dbg !2662
  %hwint = bitcast %union.u* %u73 to [1 x i64]*, !dbg !2662
  %arrayidx74 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !2662
  %58 = load i64, i64* %arrayidx74, align 8, !dbg !2662
  %conv75 = trunc i64 %58 to i32, !dbg !2663
  %add76 = add i32 %add72, %conv75, !dbg !2664
  %59 = load i32, i32* %hash, align 4, !dbg !2665
  %add77 = add i32 %59, %add76, !dbg !2665
  store i32 %add77, i32* %hash, align 4, !dbg !2665
  %60 = load i32, i32* %hash, align 4, !dbg !2666
  store i32 %60, i32* %retval, align 4, !dbg !2667
  br label %return, !dbg !2667

sw.bb78:                                          ; preds = %if.end4
  %61 = load i32, i32* %code, align 4, !dbg !2668
  %62 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2669
  %63 = bitcast %struct.rtx_def* %62 to i32*, !dbg !2669
  %bf.load79 = load i32, i32* %63, align 8, !dbg !2669
  %bf.lshr80 = lshr i32 %bf.load79, 16, !dbg !2669
  %bf.clear81 = and i32 %bf.lshr80, 255, !dbg !2669
  %add82 = add i32 %61, %bf.clear81, !dbg !2670
  %64 = load i32, i32* %hash, align 4, !dbg !2671
  %add83 = add i32 %64, %add82, !dbg !2671
  store i32 %add83, i32* %hash, align 4, !dbg !2671
  %65 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2672
  %66 = bitcast %struct.rtx_def* %65 to i32*, !dbg !2672
  %bf.load84 = load i32, i32* %66, align 8, !dbg !2672
  %bf.lshr85 = lshr i32 %bf.load84, 16, !dbg !2672
  %bf.clear86 = and i32 %bf.lshr85, 255, !dbg !2672
  %cmp87 = icmp ne i32 %bf.clear86, 0, !dbg !2674
  br i1 %cmp87, label %if.then89, label %if.else93, !dbg !2675

if.then89:                                        ; preds = %sw.bb78
  %67 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2676
  %u90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1, !dbg !2676
  %rv = bitcast %union.u* %u90 to %struct.real_value*, !dbg !2676
  %call91 = call i32 @real_hash(%struct.real_value* %rv), !dbg !2677
  %68 = load i32, i32* %hash, align 4, !dbg !2678
  %add92 = add i32 %68, %call91, !dbg !2678
  store i32 %add92, i32* %hash, align 4, !dbg !2678
  br label %if.end104, !dbg !2679

if.else93:                                        ; preds = %sw.bb78
  %69 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2680
  %u94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1, !dbg !2680
  %hwint95 = bitcast %union.u* %u94 to [1 x i64]*, !dbg !2680
  %arrayidx96 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint95, i64 0, i64 0, !dbg !2680
  %70 = load i64, i64* %arrayidx96, align 8, !dbg !2680
  %conv97 = trunc i64 %70 to i32, !dbg !2681
  %71 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2682
  %u98 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1, !dbg !2682
  %hwint99 = bitcast %union.u* %u98 to [1 x i64]*, !dbg !2682
  %arrayidx100 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint99, i64 0, i64 1, !dbg !2682
  %72 = load i64, i64* %arrayidx100, align 8, !dbg !2682
  %conv101 = trunc i64 %72 to i32, !dbg !2683
  %add102 = add i32 %conv97, %conv101, !dbg !2684
  %73 = load i32, i32* %hash, align 4, !dbg !2685
  %add103 = add i32 %73, %add102, !dbg !2685
  store i32 %add103, i32* %hash, align 4, !dbg !2685
  br label %if.end104

if.end104:                                        ; preds = %if.else93, %if.then89
  %74 = load i32, i32* %hash, align 4, !dbg !2686
  store i32 %74, i32* %retval, align 4, !dbg !2687
  br label %return, !dbg !2687

sw.bb105:                                         ; preds = %if.end4
  %75 = load i32, i32* %code, align 4, !dbg !2688
  %76 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2689
  %77 = bitcast %struct.rtx_def* %76 to i32*, !dbg !2689
  %bf.load106 = load i32, i32* %77, align 8, !dbg !2689
  %bf.lshr107 = lshr i32 %bf.load106, 16, !dbg !2689
  %bf.clear108 = and i32 %bf.lshr107, 255, !dbg !2689
  %add109 = add i32 %75, %bf.clear108, !dbg !2690
  %78 = load i32, i32* %hash, align 4, !dbg !2691
  %add110 = add i32 %78, %add109, !dbg !2691
  store i32 %add110, i32* %hash, align 4, !dbg !2691
  %79 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2692
  %u111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1, !dbg !2692
  %fv = bitcast %union.u* %u111 to %struct.fixed_value*, !dbg !2692
  %call112 = call i32 @fixed_hash(%struct.fixed_value* %fv), !dbg !2693
  %80 = load i32, i32* %hash, align 4, !dbg !2694
  %add113 = add i32 %80, %call112, !dbg !2694
  store i32 %add113, i32* %hash, align 4, !dbg !2694
  %81 = load i32, i32* %hash, align 4, !dbg !2695
  store i32 %81, i32* %retval, align 4, !dbg !2696
  br label %return, !dbg !2696

sw.bb114:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i32* %units, metadata !2697, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %elt, metadata !2700, metadata !DIExpression()), !dbg !2701
  %82 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2702
  %u115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1, !dbg !2702
  %fld116 = bitcast %union.u* %u115 to [1 x %union.rtunion_def]*, !dbg !2702
  %arrayidx117 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld116, i64 0, i64 0, !dbg !2702
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx117 to %struct.rtvec_def**, !dbg !2702
  %83 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !2702
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %83, i32 0, i32 0, !dbg !2702
  %84 = load i32, i32* %num_elem, align 8, !dbg !2702
  store i32 %84, i32* %units, align 4, !dbg !2703
  store i32 0, i32* %i, align 4, !dbg !2704
  br label %for.cond, !dbg !2706

for.cond:                                         ; preds = %for.inc, %sw.bb114
  %85 = load i32, i32* %i, align 4, !dbg !2707
  %86 = load i32, i32* %units, align 4, !dbg !2709
  %cmp118 = icmp slt i32 %85, %86, !dbg !2710
  br i1 %cmp118, label %for.body, label %for.end, !dbg !2711

for.body:                                         ; preds = %for.cond
  %87 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2712
  %u120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1, !dbg !2712
  %fld121 = bitcast %union.u* %u120 to [1 x %union.rtunion_def]*, !dbg !2712
  %arrayidx122 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld121, i64 0, i64 0, !dbg !2712
  %rt_rtvec123 = bitcast %union.rtunion_def* %arrayidx122 to %struct.rtvec_def**, !dbg !2712
  %88 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec123, align 8, !dbg !2712
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %88, i32 0, i32 1, !dbg !2712
  %89 = load i32, i32* %i, align 4, !dbg !2712
  %idxprom124 = sext i32 %89 to i64, !dbg !2712
  %arrayidx125 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom124, !dbg !2712
  %90 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx125, align 8, !dbg !2712
  store %struct.rtx_def* %90, %struct.rtx_def** %elt, align 8, !dbg !2714
  %91 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8, !dbg !2715
  %92 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8, !dbg !2716
  %93 = bitcast %struct.rtx_def* %92 to i32*, !dbg !2716
  %bf.load126 = load i32, i32* %93, align 8, !dbg !2716
  %bf.lshr127 = lshr i32 %bf.load126, 16, !dbg !2716
  %bf.clear128 = and i32 %bf.lshr127, 255, !dbg !2716
  %94 = load i32*, i32** %do_not_record_p.addr, align 8, !dbg !2717
  %95 = load i32*, i32** %hash_arg_in_memory_p.addr, align 8, !dbg !2718
  %96 = load i8, i8* %have_reg_qty.addr, align 1, !dbg !2719
  %97 = load i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)** %cb.addr, align 8, !dbg !2720
  %call129 = call i32 @hash_rtx_cb(%struct.rtx_def* %91, i32 %bf.clear128, i32* %94, i32* %95, i8 zeroext %96, i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)* %97), !dbg !2721
  %98 = load i32, i32* %hash, align 4, !dbg !2722
  %add130 = add i32 %98, %call129, !dbg !2722
  store i32 %add130, i32* %hash, align 4, !dbg !2722
  br label %for.inc, !dbg !2723

for.inc:                                          ; preds = %for.body
  %99 = load i32, i32* %i, align 4, !dbg !2724
  %inc = add nsw i32 %99, 1, !dbg !2724
  store i32 %inc, i32* %i, align 4, !dbg !2724
  br label %for.cond, !dbg !2725, !llvm.loop !2726

for.end:                                          ; preds = %for.cond
  %100 = load i32, i32* %hash, align 4, !dbg !2728
  store i32 %100, i32* %retval, align 4, !dbg !2729
  br label %return, !dbg !2729

sw.bb131:                                         ; preds = %if.end4
  %101 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2730
  %u132 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %101, i32 0, i32 1, !dbg !2730
  %fld133 = bitcast %union.u* %u132 to [1 x %union.rtunion_def]*, !dbg !2730
  %arrayidx134 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld133, i64 0, i64 0, !dbg !2730
  %rt_rtx135 = bitcast %union.rtunion_def* %arrayidx134 to %struct.rtx_def**, !dbg !2730
  %102 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx135, align 8, !dbg !2730
  %u136 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1, !dbg !2730
  %fld137 = bitcast %union.u* %u136 to [1 x %union.rtunion_def]*, !dbg !2730
  %arrayidx138 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld137, i64 0, i64 6, !dbg !2730
  %rt_int = bitcast %union.rtunion_def* %arrayidx138 to i32*, !dbg !2730
  %103 = load i32, i32* %rt_int, align 8, !dbg !2730
  %add139 = add i32 5632, %103, !dbg !2731
  %104 = load i32, i32* %hash, align 4, !dbg !2732
  %add140 = add i32 %104, %add139, !dbg !2732
  store i32 %add140, i32* %hash, align 4, !dbg !2732
  %105 = load i32, i32* %hash, align 4, !dbg !2733
  store i32 %105, i32* %retval, align 4, !dbg !2734
  br label %return, !dbg !2734

sw.bb141:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i32* %h, metadata !2735, metadata !DIExpression()), !dbg !2737
  store i32 0, i32* %h, align 4, !dbg !2737
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2738, metadata !DIExpression()), !dbg !2739
  %106 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2740
  %u142 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %106, i32 0, i32 1, !dbg !2740
  %fld143 = bitcast %union.u* %u142 to [1 x %union.rtunion_def]*, !dbg !2740
  %arrayidx144 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld143, i64 0, i64 0, !dbg !2740
  %rt_str = bitcast %union.rtunion_def* %arrayidx144 to i8**, !dbg !2740
  %107 = load i8*, i8** %rt_str, align 8, !dbg !2740
  store i8* %107, i8** %p, align 8, !dbg !2739
  br label %while.cond, !dbg !2741

while.cond:                                       ; preds = %while.body, %sw.bb141
  %108 = load i8*, i8** %p, align 8, !dbg !2742
  %109 = load i8, i8* %108, align 1, !dbg !2743
  %tobool145 = icmp ne i8 %109, 0, !dbg !2741
  br i1 %tobool145, label %while.body, label %while.end, !dbg !2741

while.body:                                       ; preds = %while.cond
  %110 = load i32, i32* %h, align 4, !dbg !2744
  %shl = shl i32 %110, 7, !dbg !2745
  %111 = load i8*, i8** %p, align 8, !dbg !2746
  %incdec.ptr = getelementptr inbounds i8, i8* %111, i32 1, !dbg !2746
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !2746
  %112 = load i8, i8* %111, align 1, !dbg !2747
  %conv146 = zext i8 %112 to i32, !dbg !2747
  %add147 = add i32 %shl, %conv146, !dbg !2748
  %113 = load i32, i32* %h, align 4, !dbg !2749
  %add148 = add i32 %113, %add147, !dbg !2749
  store i32 %add148, i32* %h, align 4, !dbg !2749
  br label %while.cond, !dbg !2741, !llvm.loop !2750

while.end:                                        ; preds = %while.cond
  %114 = load i32, i32* %h, align 4, !dbg !2751
  %add149 = add i32 5760, %114, !dbg !2752
  %115 = load i32, i32* %hash, align 4, !dbg !2753
  %add150 = add i32 %115, %add149, !dbg !2753
  store i32 %add150, i32* %hash, align 4, !dbg !2753
  %116 = load i32, i32* %hash, align 4, !dbg !2754
  store i32 %116, i32* %retval, align 4, !dbg !2755
  br label %return, !dbg !2755

sw.bb151:                                         ; preds = %if.end4
  %117 = load i32*, i32** %do_not_record_p.addr, align 8, !dbg !2756
  %tobool152 = icmp ne i32* %117, null, !dbg !2756
  br i1 %tobool152, label %land.lhs.true153, label %if.end165, !dbg !2758

land.lhs.true153:                                 ; preds = %sw.bb151
  %118 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2759
  %119 = bitcast %struct.rtx_def* %118 to i32*, !dbg !2759
  %bf.load154 = load i32, i32* %119, align 8, !dbg !2759
  %bf.lshr155 = lshr i32 %bf.load154, 27, !dbg !2759
  %bf.clear156 = and i32 %bf.lshr155, 1, !dbg !2759
  %tobool157 = icmp ne i32 %bf.clear156, 0, !dbg !2759
  br i1 %tobool157, label %if.then164, label %lor.lhs.false158, !dbg !2760

lor.lhs.false158:                                 ; preds = %land.lhs.true153
  %120 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2761
  %121 = bitcast %struct.rtx_def* %120 to i32*, !dbg !2761
  %bf.load159 = load i32, i32* %121, align 8, !dbg !2761
  %bf.lshr160 = lshr i32 %bf.load159, 16, !dbg !2761
  %bf.clear161 = and i32 %bf.lshr160, 255, !dbg !2761
  %cmp162 = icmp eq i32 %bf.clear161, 1, !dbg !2762
  br i1 %cmp162, label %if.then164, label %if.end165, !dbg !2763

if.then164:                                       ; preds = %lor.lhs.false158, %land.lhs.true153
  %122 = load i32*, i32** %do_not_record_p.addr, align 8, !dbg !2764
  store i32 1, i32* %122, align 4, !dbg !2766
  store i32 0, i32* %retval, align 4, !dbg !2767
  br label %return, !dbg !2767

if.end165:                                        ; preds = %lor.lhs.false158, %sw.bb151
  %123 = load i32*, i32** %hash_arg_in_memory_p.addr, align 8, !dbg !2768
  %tobool166 = icmp ne i32* %123, null, !dbg !2768
  br i1 %tobool166, label %land.lhs.true167, label %if.end173, !dbg !2770

land.lhs.true167:                                 ; preds = %if.end165
  %124 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2771
  %125 = bitcast %struct.rtx_def* %124 to i32*, !dbg !2771
  %bf.load168 = load i32, i32* %125, align 8, !dbg !2771
  %bf.lshr169 = lshr i32 %bf.load168, 26, !dbg !2771
  %bf.clear170 = and i32 %bf.lshr169, 1, !dbg !2771
  %tobool171 = icmp ne i32 %bf.clear170, 0, !dbg !2771
  br i1 %tobool171, label %if.end173, label %if.then172, !dbg !2772

if.then172:                                       ; preds = %land.lhs.true167
  %126 = load i32*, i32** %hash_arg_in_memory_p.addr, align 8, !dbg !2773
  store i32 1, i32* %126, align 4, !dbg !2774
  br label %if.end173, !dbg !2775

if.end173:                                        ; preds = %if.then172, %land.lhs.true167, %if.end165
  %127 = load i32, i32* %hash, align 4, !dbg !2776
  %add174 = add i32 %127, 43, !dbg !2776
  store i32 %add174, i32* %hash, align 4, !dbg !2776
  %128 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2777
  %u175 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i32 0, i32 1, !dbg !2777
  %fld176 = bitcast %union.u* %u175 to [1 x %union.rtunion_def]*, !dbg !2777
  %arrayidx177 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld176, i64 0, i64 0, !dbg !2777
  %rt_rtx178 = bitcast %union.rtunion_def* %arrayidx177 to %struct.rtx_def**, !dbg !2777
  %129 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx178, align 8, !dbg !2777
  store %struct.rtx_def* %129, %struct.rtx_def** %x.addr, align 8, !dbg !2778
  br label %repeat, !dbg !2779

sw.bb179:                                         ; preds = %if.end4
  %130 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2780
  %u180 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1, !dbg !2780
  %fld181 = bitcast %union.u* %u180 to [1 x %union.rtunion_def]*, !dbg !2780
  %arrayidx182 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld181, i64 0, i64 0, !dbg !2780
  %rt_rtx183 = bitcast %union.rtunion_def* %arrayidx182 to %struct.rtx_def**, !dbg !2780
  %131 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx183, align 8, !dbg !2780
  %132 = bitcast %struct.rtx_def* %131 to i32*, !dbg !2780
  %bf.load184 = load i32, i32* %132, align 8, !dbg !2780
  %bf.clear185 = and i32 %bf.load184, 65535, !dbg !2780
  %cmp186 = icmp eq i32 %bf.clear185, 43, !dbg !2780
  br i1 %cmp186, label %land.lhs.true188, label %if.end216, !dbg !2782

land.lhs.true188:                                 ; preds = %sw.bb179
  %133 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2783
  %u189 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %133, i32 0, i32 1, !dbg !2783
  %fld190 = bitcast %union.u* %u189 to [1 x %union.rtunion_def]*, !dbg !2783
  %arrayidx191 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld190, i64 0, i64 0, !dbg !2783
  %rt_rtx192 = bitcast %union.rtunion_def* %arrayidx191 to %struct.rtx_def**, !dbg !2783
  %134 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx192, align 8, !dbg !2783
  %135 = bitcast %struct.rtx_def* %134 to i32*, !dbg !2783
  %bf.load193 = load i32, i32* %135, align 8, !dbg !2783
  %bf.lshr194 = lshr i32 %bf.load193, 27, !dbg !2783
  %bf.clear195 = and i32 %bf.lshr194, 1, !dbg !2783
  %tobool196 = icmp ne i32 %bf.clear195, 0, !dbg !2783
  br i1 %tobool196, label %if.end216, label %if.then197, !dbg !2784

if.then197:                                       ; preds = %land.lhs.true188
  %136 = load i32, i32* %hash, align 4, !dbg !2785
  %add198 = add i32 %136, 24, !dbg !2785
  store i32 %add198, i32* %hash, align 4, !dbg !2785
  %137 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2787
  %u199 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %137, i32 0, i32 1, !dbg !2787
  %fld200 = bitcast %union.u* %u199 to [1 x %union.rtunion_def]*, !dbg !2787
  %arrayidx201 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld200, i64 0, i64 0, !dbg !2787
  %rt_rtx202 = bitcast %union.rtunion_def* %arrayidx201 to %struct.rtx_def**, !dbg !2787
  %138 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx202, align 8, !dbg !2787
  store %struct.rtx_def* %138, %struct.rtx_def** %x.addr, align 8, !dbg !2788
  %139 = load i32*, i32** %hash_arg_in_memory_p.addr, align 8, !dbg !2789
  %tobool203 = icmp ne i32* %139, null, !dbg !2789
  br i1 %tobool203, label %land.lhs.true204, label %if.end210, !dbg !2791

land.lhs.true204:                                 ; preds = %if.then197
  %140 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2792
  %141 = bitcast %struct.rtx_def* %140 to i32*, !dbg !2792
  %bf.load205 = load i32, i32* %141, align 8, !dbg !2792
  %bf.lshr206 = lshr i32 %bf.load205, 26, !dbg !2792
  %bf.clear207 = and i32 %bf.lshr206, 1, !dbg !2792
  %tobool208 = icmp ne i32 %bf.clear207, 0, !dbg !2792
  br i1 %tobool208, label %if.end210, label %if.then209, !dbg !2793

if.then209:                                       ; preds = %land.lhs.true204
  %142 = load i32*, i32** %hash_arg_in_memory_p.addr, align 8, !dbg !2794
  store i32 1, i32* %142, align 4, !dbg !2795
  br label %if.end210, !dbg !2796

if.end210:                                        ; preds = %if.then209, %land.lhs.true204, %if.then197
  %143 = load i32, i32* %hash, align 4, !dbg !2797
  %add211 = add i32 %143, 43, !dbg !2797
  store i32 %add211, i32* %hash, align 4, !dbg !2797
  %144 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2798
  %u212 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %144, i32 0, i32 1, !dbg !2798
  %fld213 = bitcast %union.u* %u212 to [1 x %union.rtunion_def]*, !dbg !2798
  %arrayidx214 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld213, i64 0, i64 0, !dbg !2798
  %rt_rtx215 = bitcast %union.rtunion_def* %arrayidx214 to %struct.rtx_def**, !dbg !2798
  %145 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx215, align 8, !dbg !2798
  store %struct.rtx_def* %145, %struct.rtx_def** %x.addr, align 8, !dbg !2799
  br label %repeat, !dbg !2800

if.end216:                                        ; preds = %land.lhs.true188, %sw.bb179
  br label %sw.epilog, !dbg !2801

sw.bb217:                                         ; preds = %if.end4, %if.end4, %if.end4, %if.end4, %if.end4, %if.end4, %if.end4, %if.end4, %if.end4, %if.end4
  %146 = load i32*, i32** %do_not_record_p.addr, align 8, !dbg !2802
  %tobool218 = icmp ne i32* %146, null, !dbg !2802
  br i1 %tobool218, label %if.then219, label %if.else220, !dbg !2804

if.then219:                                       ; preds = %sw.bb217
  %147 = load i32*, i32** %do_not_record_p.addr, align 8, !dbg !2805
  store i32 1, i32* %147, align 4, !dbg !2807
  store i32 0, i32* %retval, align 4, !dbg !2808
  br label %return, !dbg !2808

if.else220:                                       ; preds = %sw.bb217
  %148 = load i32, i32* %hash, align 4, !dbg !2809
  store i32 %148, i32* %retval, align 4, !dbg !2810
  br label %return, !dbg !2810

sw.bb221:                                         ; preds = %if.end4
  %149 = load i32*, i32** %do_not_record_p.addr, align 8, !dbg !2811
  %tobool222 = icmp ne i32* %149, null, !dbg !2811
  br i1 %tobool222, label %land.lhs.true223, label %if.else229, !dbg !2813

land.lhs.true223:                                 ; preds = %sw.bb221
  %150 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2814
  %151 = bitcast %struct.rtx_def* %150 to i32*, !dbg !2814
  %bf.load224 = load i32, i32* %151, align 8, !dbg !2814
  %bf.lshr225 = lshr i32 %bf.load224, 27, !dbg !2814
  %bf.clear226 = and i32 %bf.lshr225, 1, !dbg !2814
  %tobool227 = icmp ne i32 %bf.clear226, 0, !dbg !2814
  br i1 %tobool227, label %if.then228, label %if.else229, !dbg !2815

if.then228:                                       ; preds = %land.lhs.true223
  %152 = load i32*, i32** %do_not_record_p.addr, align 8, !dbg !2816
  store i32 1, i32* %152, align 4, !dbg !2818
  store i32 0, i32* %retval, align 4, !dbg !2819
  br label %return, !dbg !2819

if.else229:                                       ; preds = %land.lhs.true223, %sw.bb221
  %153 = load i32, i32* %code, align 4, !dbg !2820
  %154 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2822
  %155 = bitcast %struct.rtx_def* %154 to i32*, !dbg !2822
  %bf.load230 = load i32, i32* %155, align 8, !dbg !2822
  %bf.lshr231 = lshr i32 %bf.load230, 16, !dbg !2822
  %bf.clear232 = and i32 %bf.lshr231, 255, !dbg !2822
  %add233 = add i32 %153, %bf.clear232, !dbg !2823
  %156 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2824
  %u234 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %156, i32 0, i32 1, !dbg !2824
  %fld235 = bitcast %union.u* %u234 to [1 x %union.rtunion_def]*, !dbg !2824
  %arrayidx236 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld235, i64 0, i64 0, !dbg !2824
  %rt_str237 = bitcast %union.rtunion_def* %arrayidx236 to i8**, !dbg !2824
  %157 = load i8*, i8** %rt_str237, align 8, !dbg !2824
  %call238 = call i32 @hash_rtx_string(i8* %157), !dbg !2825
  %add239 = add i32 %add233, %call238, !dbg !2826
  %158 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2827
  %u240 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %158, i32 0, i32 1, !dbg !2827
  %fld241 = bitcast %union.u* %u240 to [1 x %union.rtunion_def]*, !dbg !2827
  %arrayidx242 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld241, i64 0, i64 1, !dbg !2827
  %rt_str243 = bitcast %union.rtunion_def* %arrayidx242 to i8**, !dbg !2827
  %159 = load i8*, i8** %rt_str243, align 8, !dbg !2827
  %call244 = call i32 @hash_rtx_string(i8* %159), !dbg !2828
  %add245 = add i32 %add239, %call244, !dbg !2829
  %160 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2830
  %u246 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %160, i32 0, i32 1, !dbg !2830
  %fld247 = bitcast %union.u* %u246 to [1 x %union.rtunion_def]*, !dbg !2830
  %arrayidx248 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld247, i64 0, i64 2, !dbg !2830
  %rt_int249 = bitcast %union.rtunion_def* %arrayidx248 to i32*, !dbg !2830
  %161 = load i32, i32* %rt_int249, align 8, !dbg !2830
  %add250 = add i32 %add245, %161, !dbg !2831
  %162 = load i32, i32* %hash, align 4, !dbg !2832
  %add251 = add i32 %162, %add250, !dbg !2832
  store i32 %add251, i32* %hash, align 4, !dbg !2832
  %163 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2833
  %u252 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %163, i32 0, i32 1, !dbg !2833
  %fld253 = bitcast %union.u* %u252 to [1 x %union.rtunion_def]*, !dbg !2833
  %arrayidx254 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld253, i64 0, i64 3, !dbg !2833
  %rt_rtvec255 = bitcast %union.rtunion_def* %arrayidx254 to %struct.rtvec_def**, !dbg !2833
  %164 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec255, align 8, !dbg !2833
  %num_elem256 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %164, i32 0, i32 0, !dbg !2833
  %165 = load i32, i32* %num_elem256, align 8, !dbg !2833
  %tobool257 = icmp ne i32 %165, 0, !dbg !2833
  br i1 %tobool257, label %if.then258, label %if.end324, !dbg !2835

if.then258:                                       ; preds = %if.else229
  store i32 1, i32* %i, align 4, !dbg !2836
  br label %for.cond259, !dbg !2839

for.cond259:                                      ; preds = %for.inc300, %if.then258
  %166 = load i32, i32* %i, align 4, !dbg !2840
  %167 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2842
  %u260 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %167, i32 0, i32 1, !dbg !2842
  %fld261 = bitcast %union.u* %u260 to [1 x %union.rtunion_def]*, !dbg !2842
  %arrayidx262 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld261, i64 0, i64 3, !dbg !2842
  %rt_rtvec263 = bitcast %union.rtunion_def* %arrayidx262 to %struct.rtvec_def**, !dbg !2842
  %168 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec263, align 8, !dbg !2842
  %num_elem264 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %168, i32 0, i32 0, !dbg !2842
  %169 = load i32, i32* %num_elem264, align 8, !dbg !2842
  %cmp265 = icmp slt i32 %166, %169, !dbg !2843
  br i1 %cmp265, label %for.body267, label %for.end302, !dbg !2844

for.body267:                                      ; preds = %for.cond259
  %170 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2845
  %u268 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %170, i32 0, i32 1, !dbg !2845
  %fld269 = bitcast %union.u* %u268 to [1 x %union.rtunion_def]*, !dbg !2845
  %arrayidx270 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld269, i64 0, i64 3, !dbg !2845
  %rt_rtvec271 = bitcast %union.rtunion_def* %arrayidx270 to %struct.rtvec_def**, !dbg !2845
  %171 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec271, align 8, !dbg !2845
  %elem272 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %171, i32 0, i32 1, !dbg !2845
  %172 = load i32, i32* %i, align 4, !dbg !2845
  %idxprom273 = sext i32 %172 to i64, !dbg !2845
  %arrayidx274 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem272, i64 0, i64 %idxprom273, !dbg !2845
  %173 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx274, align 8, !dbg !2845
  %174 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2847
  %u275 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %174, i32 0, i32 1, !dbg !2847
  %fld276 = bitcast %union.u* %u275 to [1 x %union.rtunion_def]*, !dbg !2847
  %arrayidx277 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld276, i64 0, i64 3, !dbg !2847
  %rt_rtvec278 = bitcast %union.rtunion_def* %arrayidx277 to %struct.rtvec_def**, !dbg !2847
  %175 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec278, align 8, !dbg !2847
  %elem279 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %175, i32 0, i32 1, !dbg !2847
  %176 = load i32, i32* %i, align 4, !dbg !2847
  %idxprom280 = sext i32 %176 to i64, !dbg !2847
  %arrayidx281 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem279, i64 0, i64 %idxprom280, !dbg !2847
  %177 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx281, align 8, !dbg !2847
  %178 = bitcast %struct.rtx_def* %177 to i32*, !dbg !2847
  %bf.load282 = load i32, i32* %178, align 8, !dbg !2847
  %bf.lshr283 = lshr i32 %bf.load282, 16, !dbg !2847
  %bf.clear284 = and i32 %bf.lshr283, 255, !dbg !2847
  %179 = load i32*, i32** %do_not_record_p.addr, align 8, !dbg !2848
  %180 = load i32*, i32** %hash_arg_in_memory_p.addr, align 8, !dbg !2849
  %181 = load i8, i8* %have_reg_qty.addr, align 1, !dbg !2850
  %182 = load i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)** %cb.addr, align 8, !dbg !2851
  %call285 = call i32 @hash_rtx_cb(%struct.rtx_def* %173, i32 %bf.clear284, i32* %179, i32* %180, i8 zeroext %181, i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)* %182), !dbg !2852
  %183 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2853
  %u286 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %183, i32 0, i32 1, !dbg !2853
  %fld287 = bitcast %union.u* %u286 to [1 x %union.rtunion_def]*, !dbg !2853
  %arrayidx288 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld287, i64 0, i64 4, !dbg !2853
  %rt_rtvec289 = bitcast %union.rtunion_def* %arrayidx288 to %struct.rtvec_def**, !dbg !2853
  %184 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec289, align 8, !dbg !2853
  %elem290 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %184, i32 0, i32 1, !dbg !2853
  %185 = load i32, i32* %i, align 4, !dbg !2853
  %idxprom291 = sext i32 %185 to i64, !dbg !2853
  %arrayidx292 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem290, i64 0, i64 %idxprom291, !dbg !2853
  %186 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx292, align 8, !dbg !2853
  %u293 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %186, i32 0, i32 1, !dbg !2853
  %fld294 = bitcast %union.u* %u293 to [1 x %union.rtunion_def]*, !dbg !2853
  %arrayidx295 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld294, i64 0, i64 0, !dbg !2853
  %rt_str296 = bitcast %union.rtunion_def* %arrayidx295 to i8**, !dbg !2853
  %187 = load i8*, i8** %rt_str296, align 8, !dbg !2853
  %call297 = call i32 @hash_rtx_string(i8* %187), !dbg !2854
  %add298 = add i32 %call285, %call297, !dbg !2855
  %188 = load i32, i32* %hash, align 4, !dbg !2856
  %add299 = add i32 %188, %add298, !dbg !2856
  store i32 %add299, i32* %hash, align 4, !dbg !2856
  br label %for.inc300, !dbg !2857

for.inc300:                                       ; preds = %for.body267
  %189 = load i32, i32* %i, align 4, !dbg !2858
  %inc301 = add nsw i32 %189, 1, !dbg !2858
  store i32 %inc301, i32* %i, align 4, !dbg !2858
  br label %for.cond259, !dbg !2859, !llvm.loop !2860

for.end302:                                       ; preds = %for.cond259
  %190 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2862
  %u303 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %190, i32 0, i32 1, !dbg !2862
  %fld304 = bitcast %union.u* %u303 to [1 x %union.rtunion_def]*, !dbg !2862
  %arrayidx305 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld304, i64 0, i64 4, !dbg !2862
  %rt_rtvec306 = bitcast %union.rtunion_def* %arrayidx305 to %struct.rtvec_def**, !dbg !2862
  %191 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec306, align 8, !dbg !2862
  %elem307 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %191, i32 0, i32 1, !dbg !2862
  %arrayidx308 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem307, i64 0, i64 0, !dbg !2862
  %192 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx308, align 8, !dbg !2862
  %u309 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %192, i32 0, i32 1, !dbg !2862
  %fld310 = bitcast %union.u* %u309 to [1 x %union.rtunion_def]*, !dbg !2862
  %arrayidx311 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld310, i64 0, i64 0, !dbg !2862
  %rt_str312 = bitcast %union.rtunion_def* %arrayidx311 to i8**, !dbg !2862
  %193 = load i8*, i8** %rt_str312, align 8, !dbg !2862
  %call313 = call i32 @hash_rtx_string(i8* %193), !dbg !2863
  %194 = load i32, i32* %hash, align 4, !dbg !2864
  %add314 = add i32 %194, %call313, !dbg !2864
  store i32 %add314, i32* %hash, align 4, !dbg !2864
  %195 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2865
  %u315 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %195, i32 0, i32 1, !dbg !2865
  %fld316 = bitcast %union.u* %u315 to [1 x %union.rtunion_def]*, !dbg !2865
  %arrayidx317 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld316, i64 0, i64 3, !dbg !2865
  %rt_rtvec318 = bitcast %union.rtunion_def* %arrayidx317 to %struct.rtvec_def**, !dbg !2865
  %196 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec318, align 8, !dbg !2865
  %elem319 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %196, i32 0, i32 1, !dbg !2865
  %arrayidx320 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem319, i64 0, i64 0, !dbg !2865
  %197 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx320, align 8, !dbg !2865
  store %struct.rtx_def* %197, %struct.rtx_def** %x.addr, align 8, !dbg !2866
  %198 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2867
  %199 = bitcast %struct.rtx_def* %198 to i32*, !dbg !2867
  %bf.load321 = load i32, i32* %199, align 8, !dbg !2867
  %bf.lshr322 = lshr i32 %bf.load321, 16, !dbg !2867
  %bf.clear323 = and i32 %bf.lshr322, 255, !dbg !2867
  store i32 %bf.clear323, i32* %mode.addr, align 4, !dbg !2868
  br label %repeat, !dbg !2869

if.end324:                                        ; preds = %if.else229
  %200 = load i32, i32* %hash, align 4, !dbg !2870
  store i32 %200, i32* %retval, align 4, !dbg !2871
  br label %return, !dbg !2871

sw.default:                                       ; preds = %if.end4
  br label %sw.epilog, !dbg !2872

sw.epilog:                                        ; preds = %sw.default, %if.end216, %if.end70
  %201 = load i32, i32* %code, align 4, !dbg !2873
  %idxprom325 = sext i32 %201 to i64, !dbg !2873
  %arrayidx326 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom325, !dbg !2873
  %202 = load i8, i8* %arrayidx326, align 1, !dbg !2873
  %conv327 = zext i8 %202 to i32, !dbg !2873
  %sub = sub nsw i32 %conv327, 1, !dbg !2874
  store i32 %sub, i32* %i, align 4, !dbg !2875
  %203 = load i32, i32* %code, align 4, !dbg !2876
  %204 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2877
  %205 = bitcast %struct.rtx_def* %204 to i32*, !dbg !2877
  %bf.load328 = load i32, i32* %205, align 8, !dbg !2877
  %bf.lshr329 = lshr i32 %bf.load328, 16, !dbg !2877
  %bf.clear330 = and i32 %bf.lshr329, 255, !dbg !2877
  %add331 = add i32 %203, %bf.clear330, !dbg !2878
  %206 = load i32, i32* %hash, align 4, !dbg !2879
  %add332 = add i32 %206, %add331, !dbg !2879
  store i32 %add332, i32* %hash, align 4, !dbg !2879
  %207 = load i32, i32* %code, align 4, !dbg !2880
  %idxprom333 = sext i32 %207 to i64, !dbg !2880
  %arrayidx334 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom333, !dbg !2880
  %208 = load i8*, i8** %arrayidx334, align 8, !dbg !2880
  store i8* %208, i8** %fmt, align 8, !dbg !2881
  br label %for.cond335, !dbg !2882

for.cond335:                                      ; preds = %for.inc401, %sw.epilog
  %209 = load i32, i32* %i, align 4, !dbg !2883
  %cmp336 = icmp sge i32 %209, 0, !dbg !2886
  br i1 %cmp336, label %for.body338, label %for.end402, !dbg !2887

for.body338:                                      ; preds = %for.cond335
  %210 = load i8*, i8** %fmt, align 8, !dbg !2888
  %211 = load i32, i32* %i, align 4, !dbg !2890
  %idxprom339 = sext i32 %211 to i64, !dbg !2888
  %arrayidx340 = getelementptr inbounds i8, i8* %210, i64 %idxprom339, !dbg !2888
  %212 = load i8, i8* %arrayidx340, align 1, !dbg !2888
  %conv341 = sext i8 %212 to i32, !dbg !2888
  switch i32 %conv341, label %sw.default399 [
    i32 101, label %sw.bb342
    i32 69, label %sw.bb359
    i32 115, label %sw.bb383
    i32 105, label %sw.bb391
    i32 48, label %sw.bb398
    i32 116, label %sw.bb398
  ], !dbg !2891

sw.bb342:                                         ; preds = %for.body338
  %213 = load i32, i32* %i, align 4, !dbg !2892
  %cmp343 = icmp eq i32 %213, 0, !dbg !2895
  br i1 %cmp343, label %if.then345, label %if.end351, !dbg !2896

if.then345:                                       ; preds = %sw.bb342
  %214 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2897
  %u346 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %214, i32 0, i32 1, !dbg !2897
  %fld347 = bitcast %union.u* %u346 to [1 x %union.rtunion_def]*, !dbg !2897
  %215 = load i32, i32* %i, align 4, !dbg !2897
  %idxprom348 = sext i32 %215 to i64, !dbg !2897
  %arrayidx349 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld347, i64 0, i64 %idxprom348, !dbg !2897
  %rt_rtx350 = bitcast %union.rtunion_def* %arrayidx349 to %struct.rtx_def**, !dbg !2897
  %216 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx350, align 8, !dbg !2897
  store %struct.rtx_def* %216, %struct.rtx_def** %x.addr, align 8, !dbg !2899
  br label %repeat, !dbg !2900

if.end351:                                        ; preds = %sw.bb342
  %217 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2901
  %u352 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %217, i32 0, i32 1, !dbg !2901
  %fld353 = bitcast %union.u* %u352 to [1 x %union.rtunion_def]*, !dbg !2901
  %218 = load i32, i32* %i, align 4, !dbg !2901
  %idxprom354 = sext i32 %218 to i64, !dbg !2901
  %arrayidx355 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld353, i64 0, i64 %idxprom354, !dbg !2901
  %rt_rtx356 = bitcast %union.rtunion_def* %arrayidx355 to %struct.rtx_def**, !dbg !2901
  %219 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx356, align 8, !dbg !2901
  %220 = load i32*, i32** %do_not_record_p.addr, align 8, !dbg !2902
  %221 = load i32*, i32** %hash_arg_in_memory_p.addr, align 8, !dbg !2903
  %222 = load i8, i8* %have_reg_qty.addr, align 1, !dbg !2904
  %223 = load i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)** %cb.addr, align 8, !dbg !2905
  %call357 = call i32 @hash_rtx_cb(%struct.rtx_def* %219, i32 0, i32* %220, i32* %221, i8 zeroext %222, i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)* %223), !dbg !2906
  %224 = load i32, i32* %hash, align 4, !dbg !2907
  %add358 = add i32 %224, %call357, !dbg !2907
  store i32 %add358, i32* %hash, align 4, !dbg !2907
  br label %sw.epilog400, !dbg !2908

sw.bb359:                                         ; preds = %for.body338
  store i32 0, i32* %j, align 4, !dbg !2909
  br label %for.cond360, !dbg !2911

for.cond360:                                      ; preds = %for.inc380, %sw.bb359
  %225 = load i32, i32* %j, align 4, !dbg !2912
  %226 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2914
  %u361 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %226, i32 0, i32 1, !dbg !2914
  %fld362 = bitcast %union.u* %u361 to [1 x %union.rtunion_def]*, !dbg !2914
  %227 = load i32, i32* %i, align 4, !dbg !2914
  %idxprom363 = sext i32 %227 to i64, !dbg !2914
  %arrayidx364 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld362, i64 0, i64 %idxprom363, !dbg !2914
  %rt_rtvec365 = bitcast %union.rtunion_def* %arrayidx364 to %struct.rtvec_def**, !dbg !2914
  %228 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec365, align 8, !dbg !2914
  %num_elem366 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %228, i32 0, i32 0, !dbg !2914
  %229 = load i32, i32* %num_elem366, align 8, !dbg !2914
  %cmp367 = icmp slt i32 %225, %229, !dbg !2915
  br i1 %cmp367, label %for.body369, label %for.end382, !dbg !2916

for.body369:                                      ; preds = %for.cond360
  %230 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2917
  %u370 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %230, i32 0, i32 1, !dbg !2917
  %fld371 = bitcast %union.u* %u370 to [1 x %union.rtunion_def]*, !dbg !2917
  %231 = load i32, i32* %i, align 4, !dbg !2917
  %idxprom372 = sext i32 %231 to i64, !dbg !2917
  %arrayidx373 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld371, i64 0, i64 %idxprom372, !dbg !2917
  %rt_rtvec374 = bitcast %union.rtunion_def* %arrayidx373 to %struct.rtvec_def**, !dbg !2917
  %232 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec374, align 8, !dbg !2917
  %elem375 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %232, i32 0, i32 1, !dbg !2917
  %233 = load i32, i32* %j, align 4, !dbg !2917
  %idxprom376 = sext i32 %233 to i64, !dbg !2917
  %arrayidx377 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem375, i64 0, i64 %idxprom376, !dbg !2917
  %234 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx377, align 8, !dbg !2917
  %235 = load i32*, i32** %do_not_record_p.addr, align 8, !dbg !2918
  %236 = load i32*, i32** %hash_arg_in_memory_p.addr, align 8, !dbg !2919
  %237 = load i8, i8* %have_reg_qty.addr, align 1, !dbg !2920
  %238 = load i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)** %cb.addr, align 8, !dbg !2921
  %call378 = call i32 @hash_rtx_cb(%struct.rtx_def* %234, i32 0, i32* %235, i32* %236, i8 zeroext %237, i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)* %238), !dbg !2922
  %239 = load i32, i32* %hash, align 4, !dbg !2923
  %add379 = add i32 %239, %call378, !dbg !2923
  store i32 %add379, i32* %hash, align 4, !dbg !2923
  br label %for.inc380, !dbg !2924

for.inc380:                                       ; preds = %for.body369
  %240 = load i32, i32* %j, align 4, !dbg !2925
  %inc381 = add nsw i32 %240, 1, !dbg !2925
  store i32 %inc381, i32* %j, align 4, !dbg !2925
  br label %for.cond360, !dbg !2926, !llvm.loop !2927

for.end382:                                       ; preds = %for.cond360
  br label %sw.epilog400, !dbg !2929

sw.bb383:                                         ; preds = %for.body338
  %241 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2930
  %u384 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %241, i32 0, i32 1, !dbg !2930
  %fld385 = bitcast %union.u* %u384 to [1 x %union.rtunion_def]*, !dbg !2930
  %242 = load i32, i32* %i, align 4, !dbg !2930
  %idxprom386 = sext i32 %242 to i64, !dbg !2930
  %arrayidx387 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld385, i64 0, i64 %idxprom386, !dbg !2930
  %rt_str388 = bitcast %union.rtunion_def* %arrayidx387 to i8**, !dbg !2930
  %243 = load i8*, i8** %rt_str388, align 8, !dbg !2930
  %call389 = call i32 @hash_rtx_string(i8* %243), !dbg !2931
  %244 = load i32, i32* %hash, align 4, !dbg !2932
  %add390 = add i32 %244, %call389, !dbg !2932
  store i32 %add390, i32* %hash, align 4, !dbg !2932
  br label %sw.epilog400, !dbg !2933

sw.bb391:                                         ; preds = %for.body338
  %245 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2934
  %u392 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %245, i32 0, i32 1, !dbg !2934
  %fld393 = bitcast %union.u* %u392 to [1 x %union.rtunion_def]*, !dbg !2934
  %246 = load i32, i32* %i, align 4, !dbg !2934
  %idxprom394 = sext i32 %246 to i64, !dbg !2934
  %arrayidx395 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld393, i64 0, i64 %idxprom394, !dbg !2934
  %rt_int396 = bitcast %union.rtunion_def* %arrayidx395 to i32*, !dbg !2934
  %247 = load i32, i32* %rt_int396, align 8, !dbg !2934
  %248 = load i32, i32* %hash, align 4, !dbg !2935
  %add397 = add i32 %248, %247, !dbg !2935
  store i32 %add397, i32* %hash, align 4, !dbg !2935
  br label %sw.epilog400, !dbg !2936

sw.bb398:                                         ; preds = %for.body338, %for.body338
  br label %sw.epilog400, !dbg !2937

sw.default399:                                    ; preds = %for.body338
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32 2545, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)), !dbg !2938
  br label %sw.epilog400, !dbg !2939

sw.epilog400:                                     ; preds = %sw.default399, %sw.bb398, %sw.bb391, %sw.bb383, %for.end382, %if.end351
  br label %for.inc401, !dbg !2940

for.inc401:                                       ; preds = %sw.epilog400
  %249 = load i32, i32* %i, align 4, !dbg !2941
  %dec = add nsw i32 %249, -1, !dbg !2941
  store i32 %dec, i32* %i, align 4, !dbg !2941
  br label %for.cond335, !dbg !2942, !llvm.loop !2943

for.end402:                                       ; preds = %for.cond335
  %250 = load i32, i32* %hash, align 4, !dbg !2945
  store i32 %250, i32* %retval, align 4, !dbg !2946
  br label %return, !dbg !2946

return:                                           ; preds = %for.end402, %if.end324, %if.then228, %if.else220, %if.then219, %if.then164, %while.end, %sw.bb131, %for.end, %sw.bb105, %if.end104, %sw.bb71, %if.then58, %cond.end, %if.then44, %if.then2, %if.then
  %251 = load i32, i32* %retval, align 4, !dbg !2947
  ret i32 %251, !dbg !2947
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @rhs_regno(%struct.rtx_def* %x) #0 !dbg !2948 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !2951, metadata !DIExpression()), !dbg !2952
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2953
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !2953
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2953
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !2953
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !2953
  %1 = load i32, i32* %rt_uint, align 8, !dbg !2953
  ret i32 %1, !dbg !2954
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.cse_reg_info* @get_cse_reg_info(i32 %regno) #0 !dbg !2955 {
entry:
  %regno.addr = alloca i32, align 4
  %p = alloca %struct.cse_reg_info*, align 8
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !2958, metadata !DIExpression()), !dbg !2959
  call void @llvm.dbg.declare(metadata %struct.cse_reg_info** %p, metadata !2960, metadata !DIExpression()), !dbg !2961
  %0 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cse_reg_info_table, align 8, !dbg !2962
  %1 = load i32, i32* %regno.addr, align 4, !dbg !2963
  %idxprom = zext i32 %1 to i64, !dbg !2962
  %arrayidx = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %0, i64 %idxprom, !dbg !2962
  store %struct.cse_reg_info* %arrayidx, %struct.cse_reg_info** %p, align 8, !dbg !2961
  %2 = load %struct.cse_reg_info*, %struct.cse_reg_info** %p, align 8, !dbg !2964
  %timestamp = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %2, i32 0, i32 0, !dbg !2966
  %3 = load i32, i32* %timestamp, align 4, !dbg !2966
  %4 = load i32, i32* @cse_reg_info_timestamp, align 4, !dbg !2967
  %cmp = icmp ne i32 %3, %4, !dbg !2968
  br i1 %cmp, label %if.then, label %if.end, !dbg !2969

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %regno.addr, align 4, !dbg !2970
  call void @get_cse_reg_info_1(i32 %5), !dbg !2971
  br label %if.end, !dbg !2971

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.cse_reg_info*, %struct.cse_reg_info** %p, align 8, !dbg !2972
  ret %struct.cse_reg_info* %6, !dbg !2973
}

declare dso_local i32 @real_hash(%struct.real_value*) #2

declare dso_local i32 @fixed_hash(%struct.fixed_value*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @hash_rtx_string(i8* %ps) #0 !dbg !2974 {
entry:
  %ps.addr = alloca i8*, align 8
  %hash = alloca i32, align 4
  %p = alloca i8*, align 8
  store i8* %ps, i8** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ps.addr, metadata !2977, metadata !DIExpression()), !dbg !2978
  call void @llvm.dbg.declare(metadata i32* %hash, metadata !2979, metadata !DIExpression()), !dbg !2980
  store i32 0, i32* %hash, align 4, !dbg !2980
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2981, metadata !DIExpression()), !dbg !2982
  %0 = load i8*, i8** %ps.addr, align 8, !dbg !2983
  store i8* %0, i8** %p, align 8, !dbg !2982
  %1 = load i8*, i8** %p, align 8, !dbg !2984
  %tobool = icmp ne i8* %1, null, !dbg !2984
  br i1 %tobool, label %if.then, label %if.end, !dbg !2986

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !2987

while.cond:                                       ; preds = %while.body, %if.then
  %2 = load i8*, i8** %p, align 8, !dbg !2988
  %3 = load i8, i8* %2, align 1, !dbg !2989
  %tobool1 = icmp ne i8 %3, 0, !dbg !2987
  br i1 %tobool1, label %while.body, label %while.end, !dbg !2987

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %p, align 8, !dbg !2990
  %incdec.ptr = getelementptr inbounds i8, i8* %4, i32 1, !dbg !2990
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !2990
  %5 = load i8, i8* %4, align 1, !dbg !2991
  %conv = zext i8 %5 to i32, !dbg !2991
  %6 = load i32, i32* %hash, align 4, !dbg !2992
  %add = add i32 %6, %conv, !dbg !2992
  store i32 %add, i32* %hash, align 4, !dbg !2992
  br label %while.cond, !dbg !2987, !llvm.loop !2993

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !2987

if.end:                                           ; preds = %while.end, %entry
  %7 = load i32, i32* %hash, align 4, !dbg !2994
  ret i32 %7, !dbg !2995
}

declare dso_local void @fancy_abort(i8*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @hash_rtx(%struct.rtx_def* %x, i32 %mode, i32* %do_not_record_p, i32* %hash_arg_in_memory_p, i8 zeroext %have_reg_qty) #0 !dbg !2996 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %do_not_record_p.addr = alloca i32*, align 8
  %hash_arg_in_memory_p.addr = alloca i32*, align 8
  %have_reg_qty.addr = alloca i8, align 1
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !2999, metadata !DIExpression()), !dbg !3000
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3001, metadata !DIExpression()), !dbg !3002
  store i32* %do_not_record_p, i32** %do_not_record_p.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %do_not_record_p.addr, metadata !3003, metadata !DIExpression()), !dbg !3004
  store i32* %hash_arg_in_memory_p, i32** %hash_arg_in_memory_p.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %hash_arg_in_memory_p.addr, metadata !3005, metadata !DIExpression()), !dbg !3006
  store i8 %have_reg_qty, i8* %have_reg_qty.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %have_reg_qty.addr, metadata !3007, metadata !DIExpression()), !dbg !3008
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3009
  %1 = load i32, i32* %mode.addr, align 4, !dbg !3010
  %2 = load i32*, i32** %do_not_record_p.addr, align 8, !dbg !3011
  %3 = load i32*, i32** %hash_arg_in_memory_p.addr, align 8, !dbg !3012
  %4 = load i8, i8* %have_reg_qty.addr, align 1, !dbg !3013
  %call = call i32 @hash_rtx_cb(%struct.rtx_def* %0, i32 %1, i32* %2, i32* %3, i8 zeroext %4, i32 (%struct.rtx_def*, i32, %struct.rtx_def**, i32*)* null), !dbg !3014
  ret i32 %call, !dbg !3015
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @exp_equiv_p(%struct.rtx_def* %x, %struct.rtx_def* %y, i32 %validate, i8 zeroext %for_gcse) #0 !dbg !3016 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %y.addr = alloca %struct.rtx_def*, align 8
  %validate.addr = alloca i32, align 4
  %for_gcse.addr = alloca i8, align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %regno = alloca i32, align 4
  %i80 = alloca i32, align 4
  %endregno = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !3019, metadata !DIExpression()), !dbg !3020
  store %struct.rtx_def* %y, %struct.rtx_def** %y.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %y.addr, metadata !3021, metadata !DIExpression()), !dbg !3022
  store i32 %validate, i32* %validate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %validate.addr, metadata !3023, metadata !DIExpression()), !dbg !3024
  store i8 %for_gcse, i8* %for_gcse.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %for_gcse.addr, metadata !3025, metadata !DIExpression()), !dbg !3026
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3027, metadata !DIExpression()), !dbg !3028
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3029, metadata !DIExpression()), !dbg !3030
  call void @llvm.dbg.declare(metadata i32* %code, metadata !3031, metadata !DIExpression()), !dbg !3032
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !3033, metadata !DIExpression()), !dbg !3034
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3035
  %1 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3037
  %cmp = icmp eq %struct.rtx_def* %0, %1, !dbg !3038
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3039

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %validate.addr, align 4, !dbg !3040
  %tobool = icmp ne i32 %2, 0, !dbg !3040
  br i1 %tobool, label %if.end, label %if.then, !dbg !3041

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !3042
  br label %return, !dbg !3042

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3043
  %cmp1 = icmp eq %struct.rtx_def* %3, null, !dbg !3045
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !3046

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3047
  %cmp2 = icmp eq %struct.rtx_def* %4, null, !dbg !3048
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !3049

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3050
  %6 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3051
  %cmp4 = icmp eq %struct.rtx_def* %5, %6, !dbg !3052
  %conv = zext i1 %cmp4 to i32, !dbg !3052
  store i32 %conv, i32* %retval, align 4, !dbg !3053
  br label %return, !dbg !3053

if.end5:                                          ; preds = %lor.lhs.false
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3054
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !3054
  %bf.load = load i32, i32* %8, align 8, !dbg !3054
  %bf.clear = and i32 %bf.load, 65535, !dbg !3054
  store i32 %bf.clear, i32* %code, align 4, !dbg !3055
  %9 = load i32, i32* %code, align 4, !dbg !3056
  %10 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3058
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !3058
  %bf.load6 = load i32, i32* %11, align 8, !dbg !3058
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !3058
  %cmp8 = icmp ne i32 %9, %bf.clear7, !dbg !3059
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !3060

if.then10:                                        ; preds = %if.end5
  store i32 0, i32* %retval, align 4, !dbg !3061
  br label %return, !dbg !3061

if.end11:                                         ; preds = %if.end5
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3062
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !3062
  %bf.load12 = load i32, i32* %13, align 8, !dbg !3062
  %bf.lshr = lshr i32 %bf.load12, 16, !dbg !3062
  %bf.clear13 = and i32 %bf.lshr, 255, !dbg !3062
  %14 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3064
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !3064
  %bf.load14 = load i32, i32* %15, align 8, !dbg !3064
  %bf.lshr15 = lshr i32 %bf.load14, 16, !dbg !3064
  %bf.clear16 = and i32 %bf.lshr15, 255, !dbg !3064
  %cmp17 = icmp ne i32 %bf.clear13, %bf.clear16, !dbg !3065
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !3066

if.then19:                                        ; preds = %if.end11
  store i32 0, i32* %retval, align 4, !dbg !3067
  br label %return, !dbg !3067

if.end20:                                         ; preds = %if.end11
  %16 = load i32, i32* %code, align 4, !dbg !3068
  %cmp21 = icmp eq i32 %16, 43, !dbg !3070
  br i1 %cmp21, label %land.lhs.true23, label %if.end50, !dbg !3071

land.lhs.true23:                                  ; preds = %if.end20
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3072
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !3072
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3072
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !3072
  %rt_mem = bitcast %union.rtunion_def* %arrayidx to %struct.mem_attrs**, !dbg !3072
  %18 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !3072
  %cmp24 = icmp eq %struct.mem_attrs* %18, null, !dbg !3072
  br i1 %cmp24, label %cond.true, label %cond.false, !dbg !3072

cond.true:                                        ; preds = %land.lhs.true23
  br label %cond.end, !dbg !3072

cond.false:                                       ; preds = %land.lhs.true23
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3072
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !3072
  %fld27 = bitcast %union.u* %u26 to [1 x %union.rtunion_def]*, !dbg !3072
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i64 0, i64 1, !dbg !3072
  %rt_mem29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.mem_attrs**, !dbg !3072
  %20 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem29, align 8, !dbg !3072
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %20, i32 0, i32 5, !dbg !3072
  %21 = load i8, i8* %addrspace, align 8, !dbg !3072
  %conv30 = zext i8 %21 to i32, !dbg !3072
  br label %cond.end, !dbg !3072

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv30, %cond.false ], !dbg !3072
  %22 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3073
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !3073
  %fld32 = bitcast %union.u* %u31 to [1 x %union.rtunion_def]*, !dbg !3073
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i64 0, i64 1, !dbg !3073
  %rt_mem34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.mem_attrs**, !dbg !3073
  %23 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem34, align 8, !dbg !3073
  %cmp35 = icmp eq %struct.mem_attrs* %23, null, !dbg !3073
  br i1 %cmp35, label %cond.true37, label %cond.false38, !dbg !3073

cond.true37:                                      ; preds = %cond.end
  br label %cond.end45, !dbg !3073

cond.false38:                                     ; preds = %cond.end
  %24 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3073
  %u39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !3073
  %fld40 = bitcast %union.u* %u39 to [1 x %union.rtunion_def]*, !dbg !3073
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld40, i64 0, i64 1, !dbg !3073
  %rt_mem42 = bitcast %union.rtunion_def* %arrayidx41 to %struct.mem_attrs**, !dbg !3073
  %25 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem42, align 8, !dbg !3073
  %addrspace43 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %25, i32 0, i32 5, !dbg !3073
  %26 = load i8, i8* %addrspace43, align 8, !dbg !3073
  %conv44 = zext i8 %26 to i32, !dbg !3073
  br label %cond.end45, !dbg !3073

cond.end45:                                       ; preds = %cond.false38, %cond.true37
  %cond46 = phi i32 [ 0, %cond.true37 ], [ %conv44, %cond.false38 ], !dbg !3073
  %cmp47 = icmp ne i32 %cond, %cond46, !dbg !3074
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !3075

if.then49:                                        ; preds = %cond.end45
  store i32 0, i32* %retval, align 4, !dbg !3076
  br label %return, !dbg !3076

if.end50:                                         ; preds = %cond.end45, %if.end20
  %27 = load i32, i32* %code, align 4, !dbg !3077
  switch i32 %27, label %sw.default [
    i32 36, label %sw.bb
    i32 46, label %sw.bb
    i32 30, label %sw.bb
    i32 32, label %sw.bb
    i32 31, label %sw.bb
    i32 44, label %sw.bb53
    i32 45, label %sw.bb63
    i32 37, label %sw.bb73
    i32 43, label %sw.bb113
    i32 49, label %sw.bb140
    i32 52, label %sw.bb140
    i32 61, label %sw.bb140
    i32 62, label %sw.bb140
    i32 63, label %sw.bb140
    i32 80, label %sw.bb140
    i32 81, label %sw.bb140
    i32 17, label %sw.bb182
  ], !dbg !3078

sw.bb:                                            ; preds = %if.end50, %if.end50, %if.end50, %if.end50, %if.end50
  %28 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3079
  %29 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3081
  %cmp51 = icmp eq %struct.rtx_def* %28, %29, !dbg !3082
  %conv52 = zext i1 %cmp51 to i32, !dbg !3082
  store i32 %conv52, i32* %retval, align 4, !dbg !3083
  br label %return, !dbg !3083

sw.bb53:                                          ; preds = %if.end50
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3084
  %u54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !3084
  %fld55 = bitcast %union.u* %u54 to [1 x %union.rtunion_def]*, !dbg !3084
  %arrayidx56 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld55, i64 0, i64 0, !dbg !3084
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**, !dbg !3084
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3084
  %32 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3085
  %u57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !3085
  %fld58 = bitcast %union.u* %u57 to [1 x %union.rtunion_def]*, !dbg !3085
  %arrayidx59 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld58, i64 0, i64 0, !dbg !3085
  %rt_rtx60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**, !dbg !3085
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx60, align 8, !dbg !3085
  %cmp61 = icmp eq %struct.rtx_def* %31, %33, !dbg !3086
  %conv62 = zext i1 %cmp61 to i32, !dbg !3086
  store i32 %conv62, i32* %retval, align 4, !dbg !3087
  br label %return, !dbg !3087

sw.bb63:                                          ; preds = %if.end50
  %34 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3088
  %u64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !3088
  %fld65 = bitcast %union.u* %u64 to [1 x %union.rtunion_def]*, !dbg !3088
  %arrayidx66 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld65, i64 0, i64 0, !dbg !3088
  %rt_str = bitcast %union.rtunion_def* %arrayidx66 to i8**, !dbg !3088
  %35 = load i8*, i8** %rt_str, align 8, !dbg !3088
  %36 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3089
  %u67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1, !dbg !3089
  %fld68 = bitcast %union.u* %u67 to [1 x %union.rtunion_def]*, !dbg !3089
  %arrayidx69 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld68, i64 0, i64 0, !dbg !3089
  %rt_str70 = bitcast %union.rtunion_def* %arrayidx69 to i8**, !dbg !3089
  %37 = load i8*, i8** %rt_str70, align 8, !dbg !3089
  %cmp71 = icmp eq i8* %35, %37, !dbg !3090
  %conv72 = zext i1 %cmp71 to i32, !dbg !3090
  store i32 %conv72, i32* %retval, align 4, !dbg !3091
  br label %return, !dbg !3091

sw.bb73:                                          ; preds = %if.end50
  %38 = load i8, i8* %for_gcse.addr, align 1, !dbg !3092
  %tobool74 = icmp ne i8 %38, 0, !dbg !3092
  br i1 %tobool74, label %if.then75, label %if.else, !dbg !3094

if.then75:                                        ; preds = %sw.bb73
  %39 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3095
  %call = call i32 @rhs_regno(%struct.rtx_def* %39), !dbg !3095
  %40 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3096
  %call76 = call i32 @rhs_regno(%struct.rtx_def* %40), !dbg !3096
  %cmp77 = icmp eq i32 %call, %call76, !dbg !3097
  %conv78 = zext i1 %cmp77 to i32, !dbg !3097
  store i32 %conv78, i32* %retval, align 4, !dbg !3098
  br label %return, !dbg !3098

if.else:                                          ; preds = %sw.bb73
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !3099, metadata !DIExpression()), !dbg !3101
  %41 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3102
  %call79 = call i32 @rhs_regno(%struct.rtx_def* %41), !dbg !3102
  store i32 %call79, i32* %regno, align 4, !dbg !3101
  call void @llvm.dbg.declare(metadata i32* %i80, metadata !3103, metadata !DIExpression()), !dbg !3104
  call void @llvm.dbg.declare(metadata i32* %endregno, metadata !3105, metadata !DIExpression()), !dbg !3106
  %42 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3107
  %call81 = call i32 @rhs_regno(%struct.rtx_def* %42), !dbg !3107
  %cmp82 = icmp ult i32 %call81, 53, !dbg !3107
  br i1 %cmp82, label %cond.true84, label %cond.false90, !dbg !3107

cond.true84:                                      ; preds = %if.else
  %43 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3107
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !3107
  %bf.load85 = load i32, i32* %44, align 8, !dbg !3107
  %bf.lshr86 = lshr i32 %bf.load85, 16, !dbg !3107
  %bf.clear87 = and i32 %bf.lshr86, 255, !dbg !3107
  %45 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3107
  %call88 = call i32 @rhs_regno(%struct.rtx_def* %45), !dbg !3107
  %call89 = call i32 @end_hard_regno(i32 %bf.clear87, i32 %call88), !dbg !3107
  br label %cond.end92, !dbg !3107

cond.false90:                                     ; preds = %if.else
  %46 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3107
  %call91 = call i32 @rhs_regno(%struct.rtx_def* %46), !dbg !3107
  %add = add i32 %call91, 1, !dbg !3107
  br label %cond.end92, !dbg !3107

cond.end92:                                       ; preds = %cond.false90, %cond.true84
  %cond93 = phi i32 [ %call89, %cond.true84 ], [ %add, %cond.false90 ], !dbg !3107
  store i32 %cond93, i32* %endregno, align 4, !dbg !3106
  %47 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3108
  %call94 = call i32 @rhs_regno(%struct.rtx_def* %47), !dbg !3108
  %call95 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call94), !dbg !3108
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call95, i32 0, i32 1, !dbg !3108
  %48 = load i32, i32* %reg_qty, align 4, !dbg !3108
  %49 = load i32, i32* %regno, align 4, !dbg !3110
  %call96 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %49), !dbg !3110
  %reg_qty97 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call96, i32 0, i32 1, !dbg !3110
  %50 = load i32, i32* %reg_qty97, align 4, !dbg !3110
  %cmp98 = icmp ne i32 %48, %50, !dbg !3111
  br i1 %cmp98, label %if.then100, label %if.end101, !dbg !3112

if.then100:                                       ; preds = %cond.end92
  store i32 0, i32* %retval, align 4, !dbg !3113
  br label %return, !dbg !3113

if.end101:                                        ; preds = %cond.end92
  %51 = load i32, i32* %validate.addr, align 4, !dbg !3114
  %tobool102 = icmp ne i32 %51, 0, !dbg !3114
  br i1 %tobool102, label %if.end104, label %if.then103, !dbg !3116

if.then103:                                       ; preds = %if.end101
  store i32 1, i32* %retval, align 4, !dbg !3117
  br label %return, !dbg !3117

if.end104:                                        ; preds = %if.end101
  %52 = load i32, i32* %regno, align 4, !dbg !3118
  store i32 %52, i32* %i80, align 4, !dbg !3120
  br label %for.cond, !dbg !3121

for.cond:                                         ; preds = %for.inc, %if.end104
  %53 = load i32, i32* %i80, align 4, !dbg !3122
  %54 = load i32, i32* %endregno, align 4, !dbg !3124
  %cmp105 = icmp ult i32 %53, %54, !dbg !3125
  br i1 %cmp105, label %for.body, label %for.end, !dbg !3126

for.body:                                         ; preds = %for.cond
  %55 = load i32, i32* %i80, align 4, !dbg !3127
  %call107 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %55), !dbg !3127
  %reg_in_table = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call107, i32 0, i32 3, !dbg !3127
  %56 = load i32, i32* %reg_in_table, align 4, !dbg !3127
  %57 = load i32, i32* %i80, align 4, !dbg !3129
  %call108 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %57), !dbg !3129
  %reg_tick = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call108, i32 0, i32 2, !dbg !3129
  %58 = load i32, i32* %reg_tick, align 4, !dbg !3129
  %cmp109 = icmp ne i32 %56, %58, !dbg !3130
  br i1 %cmp109, label %if.then111, label %if.end112, !dbg !3131

if.then111:                                       ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !3132
  br label %return, !dbg !3132

if.end112:                                        ; preds = %for.body
  br label %for.inc, !dbg !3129

for.inc:                                          ; preds = %if.end112
  %59 = load i32, i32* %i80, align 4, !dbg !3133
  %inc = add i32 %59, 1, !dbg !3133
  store i32 %inc, i32* %i80, align 4, !dbg !3133
  br label %for.cond, !dbg !3134, !llvm.loop !3135

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !3137
  br label %return, !dbg !3137

sw.bb113:                                         ; preds = %if.end50
  %60 = load i8, i8* %for_gcse.addr, align 1, !dbg !3138
  %tobool114 = icmp ne i8 %60, 0, !dbg !3138
  br i1 %tobool114, label %if.then115, label %if.end139, !dbg !3140

if.then115:                                       ; preds = %sw.bb113
  %61 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3141
  %62 = bitcast %struct.rtx_def* %61 to i32*, !dbg !3141
  %bf.load116 = load i32, i32* %62, align 8, !dbg !3141
  %bf.lshr117 = lshr i32 %bf.load116, 27, !dbg !3141
  %bf.clear118 = and i32 %bf.lshr117, 1, !dbg !3141
  %tobool119 = icmp ne i32 %bf.clear118, 0, !dbg !3141
  br i1 %tobool119, label %if.then125, label %lor.lhs.false120, !dbg !3144

lor.lhs.false120:                                 ; preds = %if.then115
  %63 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3145
  %64 = bitcast %struct.rtx_def* %63 to i32*, !dbg !3145
  %bf.load121 = load i32, i32* %64, align 8, !dbg !3145
  %bf.lshr122 = lshr i32 %bf.load121, 27, !dbg !3145
  %bf.clear123 = and i32 %bf.lshr122, 1, !dbg !3145
  %tobool124 = icmp ne i32 %bf.clear123, 0, !dbg !3145
  br i1 %tobool124, label %if.then125, label %if.end126, !dbg !3146

if.then125:                                       ; preds = %lor.lhs.false120, %if.then115
  store i32 0, i32* %retval, align 4, !dbg !3147
  br label %return, !dbg !3147

if.end126:                                        ; preds = %lor.lhs.false120
  %65 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3148
  %u127 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1, !dbg !3148
  %fld128 = bitcast %union.u* %u127 to [1 x %union.rtunion_def]*, !dbg !3148
  %arrayidx129 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld128, i64 0, i64 1, !dbg !3148
  %rt_mem130 = bitcast %union.rtunion_def* %arrayidx129 to %struct.mem_attrs**, !dbg !3148
  %66 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem130, align 8, !dbg !3148
  %67 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3150
  %u131 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1, !dbg !3150
  %fld132 = bitcast %union.u* %u131 to [1 x %union.rtunion_def]*, !dbg !3150
  %arrayidx133 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld132, i64 0, i64 1, !dbg !3150
  %rt_mem134 = bitcast %union.rtunion_def* %arrayidx133 to %struct.mem_attrs**, !dbg !3150
  %68 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem134, align 8, !dbg !3150
  %cmp135 = icmp ne %struct.mem_attrs* %66, %68, !dbg !3151
  br i1 %cmp135, label %if.then137, label %if.end138, !dbg !3152

if.then137:                                       ; preds = %if.end126
  store i32 0, i32* %retval, align 4, !dbg !3153
  br label %return, !dbg !3153

if.end138:                                        ; preds = %if.end126
  br label %if.end139, !dbg !3154

if.end139:                                        ; preds = %if.end138, %sw.bb113
  br label %sw.epilog, !dbg !3155

sw.bb140:                                         ; preds = %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50, %if.end50
  %69 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3156
  %u141 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1, !dbg !3156
  %fld142 = bitcast %union.u* %u141 to [1 x %union.rtunion_def]*, !dbg !3156
  %arrayidx143 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld142, i64 0, i64 0, !dbg !3156
  %rt_rtx144 = bitcast %union.rtunion_def* %arrayidx143 to %struct.rtx_def**, !dbg !3156
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx144, align 8, !dbg !3156
  %71 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3157
  %u145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1, !dbg !3157
  %fld146 = bitcast %union.u* %u145 to [1 x %union.rtunion_def]*, !dbg !3157
  %arrayidx147 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld146, i64 0, i64 0, !dbg !3157
  %rt_rtx148 = bitcast %union.rtunion_def* %arrayidx147 to %struct.rtx_def**, !dbg !3157
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx148, align 8, !dbg !3157
  %73 = load i32, i32* %validate.addr, align 4, !dbg !3158
  %74 = load i8, i8* %for_gcse.addr, align 1, !dbg !3159
  %call149 = call i32 @exp_equiv_p(%struct.rtx_def* %70, %struct.rtx_def* %72, i32 %73, i8 zeroext %74), !dbg !3160
  %tobool150 = icmp ne i32 %call149, 0, !dbg !3160
  br i1 %tobool150, label %land.lhs.true151, label %lor.rhs, !dbg !3161

land.lhs.true151:                                 ; preds = %sw.bb140
  %75 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3162
  %u152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1, !dbg !3162
  %fld153 = bitcast %union.u* %u152 to [1 x %union.rtunion_def]*, !dbg !3162
  %arrayidx154 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld153, i64 0, i64 1, !dbg !3162
  %rt_rtx155 = bitcast %union.rtunion_def* %arrayidx154 to %struct.rtx_def**, !dbg !3162
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx155, align 8, !dbg !3162
  %77 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3163
  %u156 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1, !dbg !3163
  %fld157 = bitcast %union.u* %u156 to [1 x %union.rtunion_def]*, !dbg !3163
  %arrayidx158 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld157, i64 0, i64 1, !dbg !3163
  %rt_rtx159 = bitcast %union.rtunion_def* %arrayidx158 to %struct.rtx_def**, !dbg !3163
  %78 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx159, align 8, !dbg !3163
  %79 = load i32, i32* %validate.addr, align 4, !dbg !3164
  %80 = load i8, i8* %for_gcse.addr, align 1, !dbg !3165
  %call160 = call i32 @exp_equiv_p(%struct.rtx_def* %76, %struct.rtx_def* %78, i32 %79, i8 zeroext %80), !dbg !3166
  %tobool161 = icmp ne i32 %call160, 0, !dbg !3166
  br i1 %tobool161, label %lor.end, label %lor.rhs, !dbg !3167

lor.rhs:                                          ; preds = %land.lhs.true151, %sw.bb140
  %81 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3168
  %u162 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i32 0, i32 1, !dbg !3168
  %fld163 = bitcast %union.u* %u162 to [1 x %union.rtunion_def]*, !dbg !3168
  %arrayidx164 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld163, i64 0, i64 0, !dbg !3168
  %rt_rtx165 = bitcast %union.rtunion_def* %arrayidx164 to %struct.rtx_def**, !dbg !3168
  %82 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx165, align 8, !dbg !3168
  %83 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3169
  %u166 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1, !dbg !3169
  %fld167 = bitcast %union.u* %u166 to [1 x %union.rtunion_def]*, !dbg !3169
  %arrayidx168 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld167, i64 0, i64 1, !dbg !3169
  %rt_rtx169 = bitcast %union.rtunion_def* %arrayidx168 to %struct.rtx_def**, !dbg !3169
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx169, align 8, !dbg !3169
  %85 = load i32, i32* %validate.addr, align 4, !dbg !3170
  %86 = load i8, i8* %for_gcse.addr, align 1, !dbg !3171
  %call170 = call i32 @exp_equiv_p(%struct.rtx_def* %82, %struct.rtx_def* %84, i32 %85, i8 zeroext %86), !dbg !3172
  %tobool171 = icmp ne i32 %call170, 0, !dbg !3172
  br i1 %tobool171, label %land.rhs, label %land.end, !dbg !3173

land.rhs:                                         ; preds = %lor.rhs
  %87 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3174
  %u172 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1, !dbg !3174
  %fld173 = bitcast %union.u* %u172 to [1 x %union.rtunion_def]*, !dbg !3174
  %arrayidx174 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld173, i64 0, i64 1, !dbg !3174
  %rt_rtx175 = bitcast %union.rtunion_def* %arrayidx174 to %struct.rtx_def**, !dbg !3174
  %88 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx175, align 8, !dbg !3174
  %89 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3175
  %u176 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i32 0, i32 1, !dbg !3175
  %fld177 = bitcast %union.u* %u176 to [1 x %union.rtunion_def]*, !dbg !3175
  %arrayidx178 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld177, i64 0, i64 0, !dbg !3175
  %rt_rtx179 = bitcast %union.rtunion_def* %arrayidx178 to %struct.rtx_def**, !dbg !3175
  %90 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx179, align 8, !dbg !3175
  %91 = load i32, i32* %validate.addr, align 4, !dbg !3176
  %92 = load i8, i8* %for_gcse.addr, align 1, !dbg !3177
  %call180 = call i32 @exp_equiv_p(%struct.rtx_def* %88, %struct.rtx_def* %90, i32 %91, i8 zeroext %92), !dbg !3178
  %tobool181 = icmp ne i32 %call180, 0, !dbg !3173
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %93 = phi i1 [ false, %lor.rhs ], [ %tobool181, %land.rhs ], !dbg !3179
  br label %lor.end, !dbg !3167

lor.end:                                          ; preds = %land.end, %land.lhs.true151
  %94 = phi i1 [ true, %land.lhs.true151 ], [ %93, %land.end ]
  %lor.ext = zext i1 %94 to i32, !dbg !3167
  store i32 %lor.ext, i32* %retval, align 4, !dbg !3180
  br label %return, !dbg !3180

sw.bb182:                                         ; preds = %if.end50
  %95 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3181
  %96 = bitcast %struct.rtx_def* %95 to i32*, !dbg !3181
  %bf.load183 = load i32, i32* %96, align 8, !dbg !3181
  %bf.lshr184 = lshr i32 %bf.load183, 27, !dbg !3181
  %bf.clear185 = and i32 %bf.lshr184, 1, !dbg !3181
  %tobool186 = icmp ne i32 %bf.clear185, 0, !dbg !3181
  br i1 %tobool186, label %if.then192, label %lor.lhs.false187, !dbg !3183

lor.lhs.false187:                                 ; preds = %sw.bb182
  %97 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3184
  %98 = bitcast %struct.rtx_def* %97 to i32*, !dbg !3184
  %bf.load188 = load i32, i32* %98, align 8, !dbg !3184
  %bf.lshr189 = lshr i32 %bf.load188, 27, !dbg !3184
  %bf.clear190 = and i32 %bf.lshr189, 1, !dbg !3184
  %tobool191 = icmp ne i32 %bf.clear190, 0, !dbg !3184
  br i1 %tobool191, label %if.then192, label %if.end193, !dbg !3185

if.then192:                                       ; preds = %lor.lhs.false187, %sw.bb182
  store i32 0, i32* %retval, align 4, !dbg !3186
  br label %return, !dbg !3186

if.end193:                                        ; preds = %lor.lhs.false187
  %99 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3187
  %100 = bitcast %struct.rtx_def* %99 to i32*, !dbg !3187
  %bf.load194 = load i32, i32* %100, align 8, !dbg !3187
  %bf.lshr195 = lshr i32 %bf.load194, 16, !dbg !3187
  %bf.clear196 = and i32 %bf.lshr195, 255, !dbg !3187
  %101 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3189
  %102 = bitcast %struct.rtx_def* %101 to i32*, !dbg !3189
  %bf.load197 = load i32, i32* %102, align 8, !dbg !3189
  %bf.lshr198 = lshr i32 %bf.load197, 16, !dbg !3189
  %bf.clear199 = and i32 %bf.lshr198, 255, !dbg !3189
  %cmp200 = icmp ne i32 %bf.clear196, %bf.clear199, !dbg !3190
  br i1 %cmp200, label %if.then245, label %lor.lhs.false202, !dbg !3191

lor.lhs.false202:                                 ; preds = %if.end193
  %103 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3192
  %u203 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1, !dbg !3192
  %fld204 = bitcast %union.u* %u203 to [1 x %union.rtunion_def]*, !dbg !3192
  %arrayidx205 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld204, i64 0, i64 0, !dbg !3192
  %rt_str206 = bitcast %union.rtunion_def* %arrayidx205 to i8**, !dbg !3192
  %104 = load i8*, i8** %rt_str206, align 8, !dbg !3192
  %105 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3193
  %u207 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %105, i32 0, i32 1, !dbg !3193
  %fld208 = bitcast %union.u* %u207 to [1 x %union.rtunion_def]*, !dbg !3193
  %arrayidx209 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld208, i64 0, i64 0, !dbg !3193
  %rt_str210 = bitcast %union.rtunion_def* %arrayidx209 to i8**, !dbg !3193
  %106 = load i8*, i8** %rt_str210, align 8, !dbg !3193
  %call211 = call i32 @strcmp(i8* %104, i8* %106), !dbg !3194
  %tobool212 = icmp ne i32 %call211, 0, !dbg !3194
  br i1 %tobool212, label %if.then245, label %lor.lhs.false213, !dbg !3195

lor.lhs.false213:                                 ; preds = %lor.lhs.false202
  %107 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3196
  %u214 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i32 0, i32 1, !dbg !3196
  %fld215 = bitcast %union.u* %u214 to [1 x %union.rtunion_def]*, !dbg !3196
  %arrayidx216 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld215, i64 0, i64 1, !dbg !3196
  %rt_str217 = bitcast %union.rtunion_def* %arrayidx216 to i8**, !dbg !3196
  %108 = load i8*, i8** %rt_str217, align 8, !dbg !3196
  %109 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3197
  %u218 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i32 0, i32 1, !dbg !3197
  %fld219 = bitcast %union.u* %u218 to [1 x %union.rtunion_def]*, !dbg !3197
  %arrayidx220 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld219, i64 0, i64 1, !dbg !3197
  %rt_str221 = bitcast %union.rtunion_def* %arrayidx220 to i8**, !dbg !3197
  %110 = load i8*, i8** %rt_str221, align 8, !dbg !3197
  %call222 = call i32 @strcmp(i8* %108, i8* %110), !dbg !3198
  %tobool223 = icmp ne i32 %call222, 0, !dbg !3198
  br i1 %tobool223, label %if.then245, label %lor.lhs.false224, !dbg !3199

lor.lhs.false224:                                 ; preds = %lor.lhs.false213
  %111 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3200
  %u225 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %111, i32 0, i32 1, !dbg !3200
  %fld226 = bitcast %union.u* %u225 to [1 x %union.rtunion_def]*, !dbg !3200
  %arrayidx227 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld226, i64 0, i64 2, !dbg !3200
  %rt_int = bitcast %union.rtunion_def* %arrayidx227 to i32*, !dbg !3200
  %112 = load i32, i32* %rt_int, align 8, !dbg !3200
  %113 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3201
  %u228 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %113, i32 0, i32 1, !dbg !3201
  %fld229 = bitcast %union.u* %u228 to [1 x %union.rtunion_def]*, !dbg !3201
  %arrayidx230 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld229, i64 0, i64 2, !dbg !3201
  %rt_int231 = bitcast %union.rtunion_def* %arrayidx230 to i32*, !dbg !3201
  %114 = load i32, i32* %rt_int231, align 8, !dbg !3201
  %cmp232 = icmp ne i32 %112, %114, !dbg !3202
  br i1 %cmp232, label %if.then245, label %lor.lhs.false234, !dbg !3203

lor.lhs.false234:                                 ; preds = %lor.lhs.false224
  %115 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3204
  %u235 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1, !dbg !3204
  %fld236 = bitcast %union.u* %u235 to [1 x %union.rtunion_def]*, !dbg !3204
  %arrayidx237 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld236, i64 0, i64 3, !dbg !3204
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx237 to %struct.rtvec_def**, !dbg !3204
  %116 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3204
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %116, i32 0, i32 0, !dbg !3204
  %117 = load i32, i32* %num_elem, align 8, !dbg !3204
  %118 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3205
  %u238 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i32 0, i32 1, !dbg !3205
  %fld239 = bitcast %union.u* %u238 to [1 x %union.rtunion_def]*, !dbg !3205
  %arrayidx240 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld239, i64 0, i64 3, !dbg !3205
  %rt_rtvec241 = bitcast %union.rtunion_def* %arrayidx240 to %struct.rtvec_def**, !dbg !3205
  %119 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec241, align 8, !dbg !3205
  %num_elem242 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %119, i32 0, i32 0, !dbg !3205
  %120 = load i32, i32* %num_elem242, align 8, !dbg !3205
  %cmp243 = icmp ne i32 %117, %120, !dbg !3206
  br i1 %cmp243, label %if.then245, label %if.end246, !dbg !3207

if.then245:                                       ; preds = %lor.lhs.false234, %lor.lhs.false224, %lor.lhs.false213, %lor.lhs.false202, %if.end193
  store i32 0, i32* %retval, align 4, !dbg !3208
  br label %return, !dbg !3208

if.end246:                                        ; preds = %lor.lhs.false234
  %121 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3209
  %u247 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %121, i32 0, i32 1, !dbg !3209
  %fld248 = bitcast %union.u* %u247 to [1 x %union.rtunion_def]*, !dbg !3209
  %arrayidx249 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld248, i64 0, i64 3, !dbg !3209
  %rt_rtvec250 = bitcast %union.rtunion_def* %arrayidx249 to %struct.rtvec_def**, !dbg !3209
  %122 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec250, align 8, !dbg !3209
  %num_elem251 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %122, i32 0, i32 0, !dbg !3209
  %123 = load i32, i32* %num_elem251, align 8, !dbg !3209
  %tobool252 = icmp ne i32 %123, 0, !dbg !3209
  br i1 %tobool252, label %if.then253, label %if.end306, !dbg !3211

if.then253:                                       ; preds = %if.end246
  %124 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3212
  %u254 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1, !dbg !3212
  %fld255 = bitcast %union.u* %u254 to [1 x %union.rtunion_def]*, !dbg !3212
  %arrayidx256 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld255, i64 0, i64 3, !dbg !3212
  %rt_rtvec257 = bitcast %union.rtunion_def* %arrayidx256 to %struct.rtvec_def**, !dbg !3212
  %125 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec257, align 8, !dbg !3212
  %num_elem258 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %125, i32 0, i32 0, !dbg !3212
  %126 = load i32, i32* %num_elem258, align 8, !dbg !3212
  %sub = sub nsw i32 %126, 1, !dbg !3215
  store i32 %sub, i32* %i, align 4, !dbg !3216
  br label %for.cond259, !dbg !3217

for.cond259:                                      ; preds = %for.inc304, %if.then253
  %127 = load i32, i32* %i, align 4, !dbg !3218
  %cmp260 = icmp sge i32 %127, 0, !dbg !3220
  br i1 %cmp260, label %for.body262, label %for.end305, !dbg !3221

for.body262:                                      ; preds = %for.cond259
  %128 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3222
  %u263 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i32 0, i32 1, !dbg !3222
  %fld264 = bitcast %union.u* %u263 to [1 x %union.rtunion_def]*, !dbg !3222
  %arrayidx265 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld264, i64 0, i64 3, !dbg !3222
  %rt_rtvec266 = bitcast %union.rtunion_def* %arrayidx265 to %struct.rtvec_def**, !dbg !3222
  %129 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec266, align 8, !dbg !3222
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %129, i32 0, i32 1, !dbg !3222
  %130 = load i32, i32* %i, align 4, !dbg !3222
  %idxprom = sext i32 %130 to i64, !dbg !3222
  %arrayidx267 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !3222
  %131 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx267, align 8, !dbg !3222
  %132 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3224
  %u268 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %132, i32 0, i32 1, !dbg !3224
  %fld269 = bitcast %union.u* %u268 to [1 x %union.rtunion_def]*, !dbg !3224
  %arrayidx270 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld269, i64 0, i64 3, !dbg !3224
  %rt_rtvec271 = bitcast %union.rtunion_def* %arrayidx270 to %struct.rtvec_def**, !dbg !3224
  %133 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec271, align 8, !dbg !3224
  %elem272 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %133, i32 0, i32 1, !dbg !3224
  %134 = load i32, i32* %i, align 4, !dbg !3224
  %idxprom273 = sext i32 %134 to i64, !dbg !3224
  %arrayidx274 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem272, i64 0, i64 %idxprom273, !dbg !3224
  %135 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx274, align 8, !dbg !3224
  %136 = load i32, i32* %validate.addr, align 4, !dbg !3225
  %137 = load i8, i8* %for_gcse.addr, align 1, !dbg !3226
  %call275 = call i32 @exp_equiv_p(%struct.rtx_def* %131, %struct.rtx_def* %135, i32 %136, i8 zeroext %137), !dbg !3227
  %tobool276 = icmp ne i32 %call275, 0, !dbg !3227
  br i1 %tobool276, label %lor.lhs.false277, label %if.then302, !dbg !3228

lor.lhs.false277:                                 ; preds = %for.body262
  %138 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3229
  %u278 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %138, i32 0, i32 1, !dbg !3229
  %fld279 = bitcast %union.u* %u278 to [1 x %union.rtunion_def]*, !dbg !3229
  %arrayidx280 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld279, i64 0, i64 4, !dbg !3229
  %rt_rtvec281 = bitcast %union.rtunion_def* %arrayidx280 to %struct.rtvec_def**, !dbg !3229
  %139 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec281, align 8, !dbg !3229
  %elem282 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %139, i32 0, i32 1, !dbg !3229
  %140 = load i32, i32* %i, align 4, !dbg !3229
  %idxprom283 = sext i32 %140 to i64, !dbg !3229
  %arrayidx284 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem282, i64 0, i64 %idxprom283, !dbg !3229
  %141 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx284, align 8, !dbg !3229
  %u285 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %141, i32 0, i32 1, !dbg !3229
  %fld286 = bitcast %union.u* %u285 to [1 x %union.rtunion_def]*, !dbg !3229
  %arrayidx287 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld286, i64 0, i64 0, !dbg !3229
  %rt_str288 = bitcast %union.rtunion_def* %arrayidx287 to i8**, !dbg !3229
  %142 = load i8*, i8** %rt_str288, align 8, !dbg !3229
  %143 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3230
  %u289 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %143, i32 0, i32 1, !dbg !3230
  %fld290 = bitcast %union.u* %u289 to [1 x %union.rtunion_def]*, !dbg !3230
  %arrayidx291 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld290, i64 0, i64 4, !dbg !3230
  %rt_rtvec292 = bitcast %union.rtunion_def* %arrayidx291 to %struct.rtvec_def**, !dbg !3230
  %144 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec292, align 8, !dbg !3230
  %elem293 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %144, i32 0, i32 1, !dbg !3230
  %145 = load i32, i32* %i, align 4, !dbg !3230
  %idxprom294 = sext i32 %145 to i64, !dbg !3230
  %arrayidx295 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem293, i64 0, i64 %idxprom294, !dbg !3230
  %146 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx295, align 8, !dbg !3230
  %u296 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %146, i32 0, i32 1, !dbg !3230
  %fld297 = bitcast %union.u* %u296 to [1 x %union.rtunion_def]*, !dbg !3230
  %arrayidx298 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld297, i64 0, i64 0, !dbg !3230
  %rt_str299 = bitcast %union.rtunion_def* %arrayidx298 to i8**, !dbg !3230
  %147 = load i8*, i8** %rt_str299, align 8, !dbg !3230
  %call300 = call i32 @strcmp(i8* %142, i8* %147), !dbg !3231
  %tobool301 = icmp ne i32 %call300, 0, !dbg !3231
  br i1 %tobool301, label %if.then302, label %if.end303, !dbg !3232

if.then302:                                       ; preds = %lor.lhs.false277, %for.body262
  store i32 0, i32* %retval, align 4, !dbg !3233
  br label %return, !dbg !3233

if.end303:                                        ; preds = %lor.lhs.false277
  br label %for.inc304, !dbg !3234

for.inc304:                                       ; preds = %if.end303
  %148 = load i32, i32* %i, align 4, !dbg !3235
  %dec = add nsw i32 %148, -1, !dbg !3235
  store i32 %dec, i32* %i, align 4, !dbg !3235
  br label %for.cond259, !dbg !3236, !llvm.loop !3237

for.end305:                                       ; preds = %for.cond259
  br label %if.end306, !dbg !3239

if.end306:                                        ; preds = %for.end305, %if.end246
  store i32 1, i32* %retval, align 4, !dbg !3240
  br label %return, !dbg !3240

sw.default:                                       ; preds = %if.end50
  br label %sw.epilog, !dbg !3241

sw.epilog:                                        ; preds = %sw.default, %if.end139
  %149 = load i32, i32* %code, align 4, !dbg !3242
  %idxprom307 = sext i32 %149 to i64, !dbg !3242
  %arrayidx308 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom307, !dbg !3242
  %150 = load i8*, i8** %arrayidx308, align 8, !dbg !3242
  store i8* %150, i8** %fmt, align 8, !dbg !3243
  %151 = load i32, i32* %code, align 4, !dbg !3244
  %idxprom309 = sext i32 %151 to i64, !dbg !3244
  %arrayidx310 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom309, !dbg !3244
  %152 = load i8, i8* %arrayidx310, align 1, !dbg !3244
  %conv311 = zext i8 %152 to i32, !dbg !3244
  %sub312 = sub nsw i32 %conv311, 1, !dbg !3246
  store i32 %sub312, i32* %i, align 4, !dbg !3247
  br label %for.cond313, !dbg !3248

for.cond313:                                      ; preds = %for.inc430, %sw.epilog
  %153 = load i32, i32* %i, align 4, !dbg !3249
  %cmp314 = icmp sge i32 %153, 0, !dbg !3251
  br i1 %cmp314, label %for.body316, label %for.end432, !dbg !3252

for.body316:                                      ; preds = %for.cond313
  %154 = load i8*, i8** %fmt, align 8, !dbg !3253
  %155 = load i32, i32* %i, align 4, !dbg !3255
  %idxprom317 = sext i32 %155 to i64, !dbg !3253
  %arrayidx318 = getelementptr inbounds i8, i8* %154, i64 %idxprom317, !dbg !3253
  %156 = load i8, i8* %arrayidx318, align 1, !dbg !3253
  %conv319 = sext i8 %156 to i32, !dbg !3253
  switch i32 %conv319, label %sw.default428 [
    i32 101, label %sw.bb320
    i32 69, label %sw.bb335
    i32 115, label %sw.bb385
    i32 105, label %sw.bb400
    i32 119, label %sw.bb415
    i32 48, label %sw.bb427
    i32 116, label %sw.bb427
  ], !dbg !3256

sw.bb320:                                         ; preds = %for.body316
  %157 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3257
  %u321 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %157, i32 0, i32 1, !dbg !3257
  %fld322 = bitcast %union.u* %u321 to [1 x %union.rtunion_def]*, !dbg !3257
  %158 = load i32, i32* %i, align 4, !dbg !3257
  %idxprom323 = sext i32 %158 to i64, !dbg !3257
  %arrayidx324 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld322, i64 0, i64 %idxprom323, !dbg !3257
  %rt_rtx325 = bitcast %union.rtunion_def* %arrayidx324 to %struct.rtx_def**, !dbg !3257
  %159 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx325, align 8, !dbg !3257
  %160 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3260
  %u326 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %160, i32 0, i32 1, !dbg !3260
  %fld327 = bitcast %union.u* %u326 to [1 x %union.rtunion_def]*, !dbg !3260
  %161 = load i32, i32* %i, align 4, !dbg !3260
  %idxprom328 = sext i32 %161 to i64, !dbg !3260
  %arrayidx329 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld327, i64 0, i64 %idxprom328, !dbg !3260
  %rt_rtx330 = bitcast %union.rtunion_def* %arrayidx329 to %struct.rtx_def**, !dbg !3260
  %162 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx330, align 8, !dbg !3260
  %163 = load i32, i32* %validate.addr, align 4, !dbg !3261
  %164 = load i8, i8* %for_gcse.addr, align 1, !dbg !3262
  %call331 = call i32 @exp_equiv_p(%struct.rtx_def* %159, %struct.rtx_def* %162, i32 %163, i8 zeroext %164), !dbg !3263
  %tobool332 = icmp ne i32 %call331, 0, !dbg !3263
  br i1 %tobool332, label %if.end334, label %if.then333, !dbg !3264

if.then333:                                       ; preds = %sw.bb320
  store i32 0, i32* %retval, align 4, !dbg !3265
  br label %return, !dbg !3265

if.end334:                                        ; preds = %sw.bb320
  br label %sw.epilog429, !dbg !3266

sw.bb335:                                         ; preds = %for.body316
  %165 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3267
  %u336 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %165, i32 0, i32 1, !dbg !3267
  %fld337 = bitcast %union.u* %u336 to [1 x %union.rtunion_def]*, !dbg !3267
  %166 = load i32, i32* %i, align 4, !dbg !3267
  %idxprom338 = sext i32 %166 to i64, !dbg !3267
  %arrayidx339 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld337, i64 0, i64 %idxprom338, !dbg !3267
  %rt_rtvec340 = bitcast %union.rtunion_def* %arrayidx339 to %struct.rtvec_def**, !dbg !3267
  %167 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec340, align 8, !dbg !3267
  %num_elem341 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %167, i32 0, i32 0, !dbg !3267
  %168 = load i32, i32* %num_elem341, align 8, !dbg !3267
  %169 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3269
  %u342 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %169, i32 0, i32 1, !dbg !3269
  %fld343 = bitcast %union.u* %u342 to [1 x %union.rtunion_def]*, !dbg !3269
  %170 = load i32, i32* %i, align 4, !dbg !3269
  %idxprom344 = sext i32 %170 to i64, !dbg !3269
  %arrayidx345 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld343, i64 0, i64 %idxprom344, !dbg !3269
  %rt_rtvec346 = bitcast %union.rtunion_def* %arrayidx345 to %struct.rtvec_def**, !dbg !3269
  %171 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec346, align 8, !dbg !3269
  %num_elem347 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %171, i32 0, i32 0, !dbg !3269
  %172 = load i32, i32* %num_elem347, align 8, !dbg !3269
  %cmp348 = icmp ne i32 %168, %172, !dbg !3270
  br i1 %cmp348, label %if.then350, label %if.end351, !dbg !3271

if.then350:                                       ; preds = %sw.bb335
  store i32 0, i32* %retval, align 4, !dbg !3272
  br label %return, !dbg !3272

if.end351:                                        ; preds = %sw.bb335
  store i32 0, i32* %j, align 4, !dbg !3273
  br label %for.cond352, !dbg !3275

for.cond352:                                      ; preds = %for.inc382, %if.end351
  %173 = load i32, i32* %j, align 4, !dbg !3276
  %174 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3278
  %u353 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %174, i32 0, i32 1, !dbg !3278
  %fld354 = bitcast %union.u* %u353 to [1 x %union.rtunion_def]*, !dbg !3278
  %175 = load i32, i32* %i, align 4, !dbg !3278
  %idxprom355 = sext i32 %175 to i64, !dbg !3278
  %arrayidx356 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld354, i64 0, i64 %idxprom355, !dbg !3278
  %rt_rtvec357 = bitcast %union.rtunion_def* %arrayidx356 to %struct.rtvec_def**, !dbg !3278
  %176 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec357, align 8, !dbg !3278
  %num_elem358 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %176, i32 0, i32 0, !dbg !3278
  %177 = load i32, i32* %num_elem358, align 8, !dbg !3278
  %cmp359 = icmp slt i32 %173, %177, !dbg !3279
  br i1 %cmp359, label %for.body361, label %for.end384, !dbg !3280

for.body361:                                      ; preds = %for.cond352
  %178 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3281
  %u362 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %178, i32 0, i32 1, !dbg !3281
  %fld363 = bitcast %union.u* %u362 to [1 x %union.rtunion_def]*, !dbg !3281
  %179 = load i32, i32* %i, align 4, !dbg !3281
  %idxprom364 = sext i32 %179 to i64, !dbg !3281
  %arrayidx365 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld363, i64 0, i64 %idxprom364, !dbg !3281
  %rt_rtvec366 = bitcast %union.rtunion_def* %arrayidx365 to %struct.rtvec_def**, !dbg !3281
  %180 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec366, align 8, !dbg !3281
  %elem367 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %180, i32 0, i32 1, !dbg !3281
  %181 = load i32, i32* %j, align 4, !dbg !3281
  %idxprom368 = sext i32 %181 to i64, !dbg !3281
  %arrayidx369 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem367, i64 0, i64 %idxprom368, !dbg !3281
  %182 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx369, align 8, !dbg !3281
  %183 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3283
  %u370 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %183, i32 0, i32 1, !dbg !3283
  %fld371 = bitcast %union.u* %u370 to [1 x %union.rtunion_def]*, !dbg !3283
  %184 = load i32, i32* %i, align 4, !dbg !3283
  %idxprom372 = sext i32 %184 to i64, !dbg !3283
  %arrayidx373 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld371, i64 0, i64 %idxprom372, !dbg !3283
  %rt_rtvec374 = bitcast %union.rtunion_def* %arrayidx373 to %struct.rtvec_def**, !dbg !3283
  %185 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec374, align 8, !dbg !3283
  %elem375 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %185, i32 0, i32 1, !dbg !3283
  %186 = load i32, i32* %j, align 4, !dbg !3283
  %idxprom376 = sext i32 %186 to i64, !dbg !3283
  %arrayidx377 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem375, i64 0, i64 %idxprom376, !dbg !3283
  %187 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx377, align 8, !dbg !3283
  %188 = load i32, i32* %validate.addr, align 4, !dbg !3284
  %189 = load i8, i8* %for_gcse.addr, align 1, !dbg !3285
  %call378 = call i32 @exp_equiv_p(%struct.rtx_def* %182, %struct.rtx_def* %187, i32 %188, i8 zeroext %189), !dbg !3286
  %tobool379 = icmp ne i32 %call378, 0, !dbg !3286
  br i1 %tobool379, label %if.end381, label %if.then380, !dbg !3287

if.then380:                                       ; preds = %for.body361
  store i32 0, i32* %retval, align 4, !dbg !3288
  br label %return, !dbg !3288

if.end381:                                        ; preds = %for.body361
  br label %for.inc382, !dbg !3289

for.inc382:                                       ; preds = %if.end381
  %190 = load i32, i32* %j, align 4, !dbg !3290
  %inc383 = add nsw i32 %190, 1, !dbg !3290
  store i32 %inc383, i32* %j, align 4, !dbg !3290
  br label %for.cond352, !dbg !3291, !llvm.loop !3292

for.end384:                                       ; preds = %for.cond352
  br label %sw.epilog429, !dbg !3294

sw.bb385:                                         ; preds = %for.body316
  %191 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3295
  %u386 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %191, i32 0, i32 1, !dbg !3295
  %fld387 = bitcast %union.u* %u386 to [1 x %union.rtunion_def]*, !dbg !3295
  %192 = load i32, i32* %i, align 4, !dbg !3295
  %idxprom388 = sext i32 %192 to i64, !dbg !3295
  %arrayidx389 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld387, i64 0, i64 %idxprom388, !dbg !3295
  %rt_str390 = bitcast %union.rtunion_def* %arrayidx389 to i8**, !dbg !3295
  %193 = load i8*, i8** %rt_str390, align 8, !dbg !3295
  %194 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3297
  %u391 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %194, i32 0, i32 1, !dbg !3297
  %fld392 = bitcast %union.u* %u391 to [1 x %union.rtunion_def]*, !dbg !3297
  %195 = load i32, i32* %i, align 4, !dbg !3297
  %idxprom393 = sext i32 %195 to i64, !dbg !3297
  %arrayidx394 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld392, i64 0, i64 %idxprom393, !dbg !3297
  %rt_str395 = bitcast %union.rtunion_def* %arrayidx394 to i8**, !dbg !3297
  %196 = load i8*, i8** %rt_str395, align 8, !dbg !3297
  %call396 = call i32 @strcmp(i8* %193, i8* %196), !dbg !3298
  %tobool397 = icmp ne i32 %call396, 0, !dbg !3298
  br i1 %tobool397, label %if.then398, label %if.end399, !dbg !3299

if.then398:                                       ; preds = %sw.bb385
  store i32 0, i32* %retval, align 4, !dbg !3300
  br label %return, !dbg !3300

if.end399:                                        ; preds = %sw.bb385
  br label %sw.epilog429, !dbg !3301

sw.bb400:                                         ; preds = %for.body316
  %197 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3302
  %u401 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %197, i32 0, i32 1, !dbg !3302
  %fld402 = bitcast %union.u* %u401 to [1 x %union.rtunion_def]*, !dbg !3302
  %198 = load i32, i32* %i, align 4, !dbg !3302
  %idxprom403 = sext i32 %198 to i64, !dbg !3302
  %arrayidx404 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld402, i64 0, i64 %idxprom403, !dbg !3302
  %rt_int405 = bitcast %union.rtunion_def* %arrayidx404 to i32*, !dbg !3302
  %199 = load i32, i32* %rt_int405, align 8, !dbg !3302
  %200 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3304
  %u406 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %200, i32 0, i32 1, !dbg !3304
  %fld407 = bitcast %union.u* %u406 to [1 x %union.rtunion_def]*, !dbg !3304
  %201 = load i32, i32* %i, align 4, !dbg !3304
  %idxprom408 = sext i32 %201 to i64, !dbg !3304
  %arrayidx409 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld407, i64 0, i64 %idxprom408, !dbg !3304
  %rt_int410 = bitcast %union.rtunion_def* %arrayidx409 to i32*, !dbg !3304
  %202 = load i32, i32* %rt_int410, align 8, !dbg !3304
  %cmp411 = icmp ne i32 %199, %202, !dbg !3305
  br i1 %cmp411, label %if.then413, label %if.end414, !dbg !3306

if.then413:                                       ; preds = %sw.bb400
  store i32 0, i32* %retval, align 4, !dbg !3307
  br label %return, !dbg !3307

if.end414:                                        ; preds = %sw.bb400
  br label %sw.epilog429, !dbg !3308

sw.bb415:                                         ; preds = %for.body316
  %203 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3309
  %u416 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %203, i32 0, i32 1, !dbg !3309
  %hwint = bitcast %union.u* %u416 to [1 x i64]*, !dbg !3309
  %204 = load i32, i32* %i, align 4, !dbg !3309
  %idxprom417 = sext i32 %204 to i64, !dbg !3309
  %arrayidx418 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 %idxprom417, !dbg !3309
  %205 = load i64, i64* %arrayidx418, align 8, !dbg !3309
  %206 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !3311
  %u419 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %206, i32 0, i32 1, !dbg !3311
  %hwint420 = bitcast %union.u* %u419 to [1 x i64]*, !dbg !3311
  %207 = load i32, i32* %i, align 4, !dbg !3311
  %idxprom421 = sext i32 %207 to i64, !dbg !3311
  %arrayidx422 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint420, i64 0, i64 %idxprom421, !dbg !3311
  %208 = load i64, i64* %arrayidx422, align 8, !dbg !3311
  %cmp423 = icmp ne i64 %205, %208, !dbg !3312
  br i1 %cmp423, label %if.then425, label %if.end426, !dbg !3313

if.then425:                                       ; preds = %sw.bb415
  store i32 0, i32* %retval, align 4, !dbg !3314
  br label %return, !dbg !3314

if.end426:                                        ; preds = %sw.bb415
  br label %sw.epilog429, !dbg !3315

sw.bb427:                                         ; preds = %for.body316, %for.body316
  br label %sw.epilog429, !dbg !3316

sw.default428:                                    ; preds = %for.body316
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32 2790, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)), !dbg !3317
  br label %sw.epilog429, !dbg !3318

sw.epilog429:                                     ; preds = %sw.default428, %sw.bb427, %if.end426, %if.end414, %if.end399, %for.end384, %if.end334
  br label %for.inc430, !dbg !3319

for.inc430:                                       ; preds = %sw.epilog429
  %209 = load i32, i32* %i, align 4, !dbg !3320
  %dec431 = add nsw i32 %209, -1, !dbg !3320
  store i32 %dec431, i32* %i, align 4, !dbg !3320
  br label %for.cond313, !dbg !3321, !llvm.loop !3322

for.end432:                                       ; preds = %for.cond313
  store i32 1, i32* %retval, align 4, !dbg !3324
  br label %return, !dbg !3324

return:                                           ; preds = %for.end432, %if.then425, %if.then413, %if.then398, %if.then380, %if.then350, %if.then333, %if.end306, %if.then302, %if.then245, %if.then192, %lor.end, %if.then137, %if.then125, %for.end, %if.then111, %if.then103, %if.then100, %if.then75, %sw.bb63, %sw.bb53, %sw.bb, %if.then49, %if.then19, %if.then10, %if.then3, %if.then
  %210 = load i32, i32* %retval, align 4, !dbg !3325
  ret i32 %210, !dbg !3325
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @end_hard_regno(i32 %mode, i32 %regno) #0 !dbg !3326 {
entry:
  %mode.addr = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3330, metadata !DIExpression()), !dbg !3331
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !3332, metadata !DIExpression()), !dbg !3333
  %0 = load i32, i32* %regno.addr, align 4, !dbg !3334
  %1 = load i32, i32* %regno.addr, align 4, !dbg !3335
  %idxprom = zext i32 %1 to i64, !dbg !3336
  %arrayidx = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, !dbg !3336
  %2 = load i32, i32* %mode.addr, align 4, !dbg !3337
  %idxprom1 = sext i32 %2 to i64, !dbg !3336
  %arrayidx2 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx, i64 0, i64 %idxprom1, !dbg !3336
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !3336
  %conv = zext i8 %3 to i32, !dbg !3336
  %add = add i32 %0, %conv, !dbg !3338
  ret i32 %add, !dbg !3339
}

declare dso_local i32 @strcmp(i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @cse_main(%struct.rtx_def* %f, i32 %nregs) #0 !dbg !3340 {
entry:
  %retval = alloca i32, align 4
  %f.addr = alloca %struct.rtx_def*, align 8
  %nregs.addr = alloca i32, align 4
  %ebb_data = alloca %struct.cse_basic_block_data, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  %rc_order = alloca i32*, align 8
  %i = alloca i32, align 4
  %n_blocks = alloca i32, align 4
  store %struct.rtx_def* %f, %struct.rtx_def** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %f.addr, metadata !3343, metadata !DIExpression()), !dbg !3344
  store i32 %nregs, i32* %nregs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nregs.addr, metadata !3345, metadata !DIExpression()), !dbg !3346
  call void @llvm.dbg.declare(metadata %struct.cse_basic_block_data* %ebb_data, metadata !3347, metadata !DIExpression()), !dbg !3353
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !3354, metadata !DIExpression()), !dbg !3355
  call void @llvm.dbg.declare(metadata i32** %rc_order, metadata !3356, metadata !DIExpression()), !dbg !3357
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3358
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, !dbg !3358
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !3358
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3358
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i32 0, i32 5, !dbg !3358
  %2 = load i32, i32* %x_last_basic_block, align 8, !dbg !3358
  %conv = sext i32 %2 to i64, !dbg !3358
  %mul = mul i64 4, %conv, !dbg !3358
  %call = call i8* @xmalloc(i64 %mul), !dbg !3358
  %3 = bitcast i8* %call to i32*, !dbg !3358
  store i32* %3, i32** %rc_order, align 8, !dbg !3357
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3359, metadata !DIExpression()), !dbg !3360
  call void @llvm.dbg.declare(metadata i32* %n_blocks, metadata !3361, metadata !DIExpression()), !dbg !3362
  %call1 = call i32 @df_set_flags(i32 1), !dbg !3363
  call void @df_analyze(), !dbg !3364
  %call2 = call i32 @df_set_flags(i32 32), !dbg !3365
  %call3 = call %struct.rtx_def* @get_insns(), !dbg !3366
  %call4 = call i32 @max_reg_num(), !dbg !3367
  call void @reg_scan(%struct.rtx_def* %call3, i32 %call4), !dbg !3368
  %4 = load i32, i32* %nregs.addr, align 4, !dbg !3369
  call void @init_cse_reg_info(i32 %4), !dbg !3370
  %5 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !3371
  %arrayidx = getelementptr inbounds %struct.param_info, %struct.param_info* %5, i64 57, !dbg !3371
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %arrayidx, i32 0, i32 1, !dbg !3371
  %6 = load i32, i32* %value, align 8, !dbg !3371
  %conv5 = sext i32 %6 to i64, !dbg !3371
  %mul6 = mul i64 8, %conv5, !dbg !3371
  %call7 = call i8* @xmalloc(i64 %mul6), !dbg !3371
  %7 = bitcast i8* %call7 to %struct.branch_path*, !dbg !3371
  %path = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %ebb_data, i32 0, i32 2, !dbg !3372
  store %struct.branch_path* %7, %struct.branch_path** %path, align 8, !dbg !3373
  store i8 0, i8* @cse_cfg_altered, align 1, !dbg !3374
  store i8 0, i8* @cse_jumps_altered, align 1, !dbg !3375
  store i8 0, i8* @recorded_label_ref, align 1, !dbg !3376
  store i32 0, i32* @constant_pool_entries_cost, align 4, !dbg !3377
  store i32 0, i32* @constant_pool_entries_regcost, align 4, !dbg !3378
  %path_size = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %ebb_data, i32 0, i32 1, !dbg !3379
  store i32 0, i32* %path_size, align 4, !dbg !3380
  %nsets = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %ebb_data, i32 0, i32 0, !dbg !3381
  store i32 0, i32* %nsets, align 8, !dbg !3382
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.rtl_hooks* @rtl_hooks to i8*), i8* align 8 bitcast (%struct.rtl_hooks* @cse_rtl_hooks to i8*), i64 40, i1 false), !dbg !3383
  call void @init_recog(), !dbg !3384
  call void @init_alias_analysis(), !dbg !3385
  %8 = load i32, i32* %nregs.addr, align 4, !dbg !3386
  %conv8 = sext i32 %8 to i64, !dbg !3386
  %mul9 = mul i64 8, %conv8, !dbg !3386
  %call10 = call i8* @xmalloc(i64 %mul9), !dbg !3386
  %9 = bitcast i8* %call10 to %struct.reg_eqv_elem*, !dbg !3386
  store %struct.reg_eqv_elem* %9, %struct.reg_eqv_elem** @reg_eqv_table, align 8, !dbg !3387
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3388
  %add.ptr11 = getelementptr inbounds %struct.function, %struct.function* %10, i64 0, !dbg !3388
  %cfg12 = getelementptr inbounds %struct.function, %struct.function* %add.ptr11, i32 0, i32 1, !dbg !3388
  %11 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg12, align 8, !dbg !3388
  %x_last_basic_block13 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %11, i32 0, i32 5, !dbg !3388
  %12 = load i32, i32* %x_last_basic_block13, align 8, !dbg !3388
  %call14 = call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %12), !dbg !3389
  store %struct.simple_bitmap_def* %call14, %struct.simple_bitmap_def** @cse_visited_basic_blocks, align 8, !dbg !3390
  %13 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @cse_visited_basic_blocks, align 8, !dbg !3391
  call void @sbitmap_zero(%struct.simple_bitmap_def* %13), !dbg !3392
  %14 = load i32*, i32** %rc_order, align 8, !dbg !3393
  %call15 = call i32 @pre_and_rev_post_order_compute(i32* null, i32* %14, i8 zeroext 0), !dbg !3394
  store i32 %call15, i32* %n_blocks, align 4, !dbg !3395
  store i32 0, i32* %i, align 4, !dbg !3396
  br label %while.cond, !dbg !3397

while.cond:                                       ; preds = %while.end, %entry
  %15 = load i32, i32* %i, align 4, !dbg !3398
  %16 = load i32, i32* %n_blocks, align 4, !dbg !3399
  %cmp = icmp slt i32 %15, %16, !dbg !3400
  br i1 %cmp, label %while.body, label %while.end43, !dbg !3397

while.body:                                       ; preds = %while.cond
  br label %do.body, !dbg !3401

do.body:                                          ; preds = %land.end, %while.body
  %17 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3403
  %add.ptr17 = getelementptr inbounds %struct.function, %struct.function* %17, i64 0, !dbg !3403
  %cfg18 = getelementptr inbounds %struct.function, %struct.function* %add.ptr17, i32 0, i32 1, !dbg !3403
  %18 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg18, align 8, !dbg !3403
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %18, i32 0, i32 2, !dbg !3403
  %19 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !3403
  %tobool = icmp ne %struct.VEC_basic_block_gc* %19, null, !dbg !3403
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3403

cond.true:                                        ; preds = %do.body
  %20 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3403
  %add.ptr19 = getelementptr inbounds %struct.function, %struct.function* %20, i64 0, !dbg !3403
  %cfg20 = getelementptr inbounds %struct.function, %struct.function* %add.ptr19, i32 0, i32 1, !dbg !3403
  %21 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg20, align 8, !dbg !3403
  %x_basic_block_info21 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %21, i32 0, i32 2, !dbg !3403
  %22 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info21, align 8, !dbg !3403
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %22, i32 0, i32 0, !dbg !3403
  br label %cond.end, !dbg !3403

cond.false:                                       ; preds = %do.body
  br label %cond.end, !dbg !3403

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !3403
  %23 = load i32*, i32** %rc_order, align 8, !dbg !3403
  %24 = load i32, i32* %i, align 4, !dbg !3403
  %inc = add nsw i32 %24, 1, !dbg !3403
  store i32 %inc, i32* %i, align 4, !dbg !3403
  %idxprom = sext i32 %24 to i64, !dbg !3403
  %arrayidx22 = getelementptr inbounds i32, i32* %23, i64 %idxprom, !dbg !3403
  %25 = load i32, i32* %arrayidx22, align 4, !dbg !3403
  %call23 = call %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %25), !dbg !3403
  store %struct.basic_block_def* %call23, %struct.basic_block_def** %bb, align 8, !dbg !3405
  br label %do.cond, !dbg !3406

do.cond:                                          ; preds = %cond.end
  %26 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @cse_visited_basic_blocks, align 8, !dbg !3407
  %elms = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %26, i32 0, i32 3, !dbg !3407
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3407
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %27, i32 0, i32 9, !dbg !3407
  %28 = load i32, i32* %index, align 8, !dbg !3407
  %div = udiv i32 %28, 64, !dbg !3407
  %idxprom24 = zext i32 %div to i64, !dbg !3407
  %arrayidx25 = getelementptr inbounds [1 x i64], [1 x i64]* %elms, i64 0, i64 %idxprom24, !dbg !3407
  %29 = load i64, i64* %arrayidx25, align 8, !dbg !3407
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3407
  %index26 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %30, i32 0, i32 9, !dbg !3407
  %31 = load i32, i32* %index26, align 8, !dbg !3407
  %rem = urem i32 %31, 64, !dbg !3407
  %sh_prom = zext i32 %rem to i64, !dbg !3407
  %shr = lshr i64 %29, %sh_prom, !dbg !3407
  %and = and i64 %shr, 1, !dbg !3407
  %tobool27 = icmp ne i64 %and, 0, !dbg !3407
  br i1 %tobool27, label %land.rhs, label %land.end, !dbg !3408

land.rhs:                                         ; preds = %do.cond
  %32 = load i32, i32* %i, align 4, !dbg !3409
  %33 = load i32, i32* %n_blocks, align 4, !dbg !3410
  %cmp28 = icmp slt i32 %32, %33, !dbg !3411
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %34 = phi i1 [ false, %do.cond ], [ %cmp28, %land.rhs ], !dbg !3412
  br i1 %34, label %do.body, label %do.end, !dbg !3406, !llvm.loop !3413

do.end:                                           ; preds = %land.end
  br label %while.cond30, !dbg !3415

while.cond30:                                     ; preds = %if.end42, %if.then, %do.end
  %35 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3416
  %36 = load i32, i32* @flag_cse_follow_jumps, align 4, !dbg !3417
  %call31 = call zeroext i8 @cse_find_path(%struct.basic_block_def* %35, %struct.cse_basic_block_data* %ebb_data, i32 %36), !dbg !3418
  %tobool32 = icmp ne i8 %call31, 0, !dbg !3415
  br i1 %tobool32, label %while.body33, label %while.end, !dbg !3415

while.body33:                                     ; preds = %while.cond30
  call void @cse_prescan_path(%struct.cse_basic_block_data* %ebb_data), !dbg !3419
  %nsets34 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %ebb_data, i32 0, i32 0, !dbg !3421
  %37 = load i32, i32* %nsets34, align 8, !dbg !3421
  %cmp35 = icmp eq i32 %37, 0, !dbg !3423
  br i1 %cmp35, label %if.then, label %if.end, !dbg !3424

if.then:                                          ; preds = %while.body33
  br label %while.cond30, !dbg !3425, !llvm.loop !3426

if.end:                                           ; preds = %while.body33
  %nsets37 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %ebb_data, i32 0, i32 0, !dbg !3428
  %38 = load i32, i32* %nsets37, align 8, !dbg !3428
  %mul38 = mul nsw i32 %38, 30, !dbg !3429
  store i32 %mul38, i32* @max_qty, align 4, !dbg !3430
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3431
  %tobool39 = icmp ne %struct._IO_FILE* %39, null, !dbg !3431
  br i1 %tobool39, label %if.then40, label %if.end42, !dbg !3433

if.then40:                                        ; preds = %if.end
  %nsets41 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %ebb_data, i32 0, i32 0, !dbg !3434
  %40 = load i32, i32* %nsets41, align 8, !dbg !3434
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3435
  call void @cse_dump_path(%struct.cse_basic_block_data* %ebb_data, i32 %40, %struct._IO_FILE* %41), !dbg !3436
  br label %if.end42, !dbg !3436

if.end42:                                         ; preds = %if.then40, %if.end
  call void @cse_extended_basic_block(%struct.cse_basic_block_data* %ebb_data), !dbg !3437
  br label %while.cond30, !dbg !3415, !llvm.loop !3426

while.end:                                        ; preds = %while.cond30
  br label %while.cond, !dbg !3397, !llvm.loop !3438

while.end43:                                      ; preds = %while.cond
  call void @end_alias_analysis(), !dbg !3440
  %42 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8, !dbg !3441
  %43 = bitcast %struct.reg_eqv_elem* %42 to i8*, !dbg !3441
  call void @free(i8* %43), !dbg !3442
  %path44 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %ebb_data, i32 0, i32 2, !dbg !3443
  %44 = load %struct.branch_path*, %struct.branch_path** %path44, align 8, !dbg !3443
  %45 = bitcast %struct.branch_path* %44 to i8*, !dbg !3444
  call void @free(i8* %45), !dbg !3445
  %46 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @cse_visited_basic_blocks, align 8, !dbg !3446
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %46, i32 0, i32 0, !dbg !3446
  %47 = load i8*, i8** %popcount, align 8, !dbg !3446
  call void @free(i8* %47), !dbg !3446
  %48 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @cse_visited_basic_blocks, align 8, !dbg !3446
  %49 = bitcast %struct.simple_bitmap_def* %48 to i8*, !dbg !3446
  call void @free(i8* %49), !dbg !3446
  %50 = load i32*, i32** %rc_order, align 8, !dbg !3447
  %51 = bitcast i32* %50 to i8*, !dbg !3447
  call void @free(i8* %51), !dbg !3448
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.rtl_hooks* @rtl_hooks to i8*), i8* align 8 bitcast (%struct.rtl_hooks* @general_rtl_hooks to i8*), i64 40, i1 false), !dbg !3449
  %52 = load i8, i8* @cse_jumps_altered, align 1, !dbg !3450
  %conv45 = zext i8 %52 to i32, !dbg !3450
  %tobool46 = icmp ne i32 %conv45, 0, !dbg !3450
  br i1 %tobool46, label %if.then49, label %lor.lhs.false, !dbg !3452

lor.lhs.false:                                    ; preds = %while.end43
  %53 = load i8, i8* @recorded_label_ref, align 1, !dbg !3453
  %conv47 = zext i8 %53 to i32, !dbg !3453
  %tobool48 = icmp ne i32 %conv47, 0, !dbg !3453
  br i1 %tobool48, label %if.then49, label %if.else, !dbg !3454

if.then49:                                        ; preds = %lor.lhs.false, %while.end43
  store i32 2, i32* %retval, align 4, !dbg !3455
  br label %return, !dbg !3455

if.else:                                          ; preds = %lor.lhs.false
  %54 = load i8, i8* @cse_cfg_altered, align 1, !dbg !3456
  %tobool50 = icmp ne i8 %54, 0, !dbg !3456
  br i1 %tobool50, label %if.then51, label %if.else52, !dbg !3458

if.then51:                                        ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !3459
  br label %return, !dbg !3459

if.else52:                                        ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !3460
  br label %return, !dbg !3460

return:                                           ; preds = %if.else52, %if.then51, %if.then49
  %55 = load i32, i32* %retval, align 4, !dbg !3461
  ret i32 %55, !dbg !3461
}

declare dso_local i8* @xmalloc(i64) #2

declare dso_local i32 @df_set_flags(i32) #2

declare dso_local void @df_analyze() #2

declare dso_local void @reg_scan(%struct.rtx_def*, i32) #2

declare dso_local %struct.rtx_def* @get_insns() #2

declare dso_local i32 @max_reg_num() #2

; Function Attrs: noinline nounwind uwtable
define internal void @init_cse_reg_info(i32 %nregs) #0 !dbg !3462 {
entry:
  %nregs.addr = alloca i32, align 4
  %new_size = alloca i32, align 4
  %old_timestamp = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %nregs, i32* %nregs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nregs.addr, metadata !3465, metadata !DIExpression()), !dbg !3466
  %0 = load i32, i32* %nregs.addr, align 4, !dbg !3467
  %1 = load i32, i32* @cse_reg_info_table_size, align 4, !dbg !3469
  %cmp = icmp ugt i32 %0, %1, !dbg !3470
  br i1 %cmp, label %if.then, label %if.end8, !dbg !3471

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %new_size, metadata !3472, metadata !DIExpression()), !dbg !3474
  %2 = load i32, i32* @cse_reg_info_table_size, align 4, !dbg !3475
  %cmp1 = icmp ult i32 %2, 2048, !dbg !3477
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !3478

if.then2:                                         ; preds = %if.then
  %3 = load i32, i32* @cse_reg_info_table_size, align 4, !dbg !3479
  %tobool = icmp ne i32 %3, 0, !dbg !3479
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3479

cond.true:                                        ; preds = %if.then2
  %4 = load i32, i32* @cse_reg_info_table_size, align 4, !dbg !3481
  br label %cond.end, !dbg !3479

cond.false:                                       ; preds = %if.then2
  br label %cond.end, !dbg !3479

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ 64, %cond.false ], !dbg !3479
  store i32 %cond, i32* %new_size, align 4, !dbg !3482
  br label %while.cond, !dbg !3483

while.cond:                                       ; preds = %while.body, %cond.end
  %5 = load i32, i32* %new_size, align 4, !dbg !3484
  %6 = load i32, i32* %nregs.addr, align 4, !dbg !3485
  %cmp3 = icmp ult i32 %5, %6, !dbg !3486
  br i1 %cmp3, label %while.body, label %while.end, !dbg !3483

while.body:                                       ; preds = %while.cond
  %7 = load i32, i32* %new_size, align 4, !dbg !3487
  %mul = mul i32 %7, 2, !dbg !3487
  store i32 %mul, i32* %new_size, align 4, !dbg !3487
  br label %while.cond, !dbg !3483, !llvm.loop !3488

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !3490

if.else:                                          ; preds = %if.then
  %8 = load i32, i32* %nregs.addr, align 4, !dbg !3491
  store i32 %8, i32* %new_size, align 4, !dbg !3493
  br label %if.end

if.end:                                           ; preds = %if.else, %while.end
  %9 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cse_reg_info_table, align 8, !dbg !3494
  %tobool4 = icmp ne %struct.cse_reg_info* %9, null, !dbg !3494
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !3496

if.then5:                                         ; preds = %if.end
  %10 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cse_reg_info_table, align 8, !dbg !3497
  %11 = bitcast %struct.cse_reg_info* %10 to i8*, !dbg !3497
  call void @free(i8* %11), !dbg !3498
  br label %if.end6, !dbg !3498

if.end6:                                          ; preds = %if.then5, %if.end
  %12 = load i32, i32* %new_size, align 4, !dbg !3499
  %conv = zext i32 %12 to i64, !dbg !3499
  %mul7 = mul i64 20, %conv, !dbg !3499
  %call = call i8* @xmalloc(i64 %mul7), !dbg !3499
  %13 = bitcast i8* %call to %struct.cse_reg_info*, !dbg !3499
  store %struct.cse_reg_info* %13, %struct.cse_reg_info** @cse_reg_info_table, align 8, !dbg !3500
  %14 = load i32, i32* %new_size, align 4, !dbg !3501
  store i32 %14, i32* @cse_reg_info_table_size, align 4, !dbg !3502
  store i32 0, i32* @cse_reg_info_table_first_uninitialized, align 4, !dbg !3503
  br label %if.end8, !dbg !3504

if.end8:                                          ; preds = %if.end6, %entry
  %15 = load i32, i32* @cse_reg_info_table_first_uninitialized, align 4, !dbg !3505
  %16 = load i32, i32* %nregs.addr, align 4, !dbg !3507
  %cmp9 = icmp ult i32 %15, %16, !dbg !3508
  br i1 %cmp9, label %if.then11, label %if.end14, !dbg !3509

if.then11:                                        ; preds = %if.end8
  call void @llvm.dbg.declare(metadata i32* %old_timestamp, metadata !3510, metadata !DIExpression()), !dbg !3512
  %17 = load i32, i32* @cse_reg_info_timestamp, align 4, !dbg !3513
  %sub = sub i32 %17, 1, !dbg !3514
  store i32 %sub, i32* %old_timestamp, align 4, !dbg !3512
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3515, metadata !DIExpression()), !dbg !3516
  %18 = load i32, i32* @cse_reg_info_table_first_uninitialized, align 4, !dbg !3517
  store i32 %18, i32* %i, align 4, !dbg !3519
  br label %for.cond, !dbg !3520

for.cond:                                         ; preds = %for.inc, %if.then11
  %19 = load i32, i32* %i, align 4, !dbg !3521
  %20 = load i32, i32* %nregs.addr, align 4, !dbg !3523
  %cmp12 = icmp ult i32 %19, %20, !dbg !3524
  br i1 %cmp12, label %for.body, label %for.end, !dbg !3525

for.body:                                         ; preds = %for.cond
  %21 = load i32, i32* %old_timestamp, align 4, !dbg !3526
  %22 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cse_reg_info_table, align 8, !dbg !3527
  %23 = load i32, i32* %i, align 4, !dbg !3528
  %idxprom = zext i32 %23 to i64, !dbg !3527
  %arrayidx = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %22, i64 %idxprom, !dbg !3527
  %timestamp = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %arrayidx, i32 0, i32 0, !dbg !3529
  store i32 %21, i32* %timestamp, align 4, !dbg !3530
  br label %for.inc, !dbg !3527

for.inc:                                          ; preds = %for.body
  %24 = load i32, i32* %i, align 4, !dbg !3531
  %inc = add i32 %24, 1, !dbg !3531
  store i32 %inc, i32* %i, align 4, !dbg !3531
  br label %for.cond, !dbg !3532, !llvm.loop !3533

for.end:                                          ; preds = %for.cond
  %25 = load i32, i32* %nregs.addr, align 4, !dbg !3535
  store i32 %25, i32* @cse_reg_info_table_first_uninitialized, align 4, !dbg !3536
  br label %if.end14, !dbg !3537

if.end14:                                         ; preds = %for.end, %if.end8
  ret void, !dbg !3538
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local void @init_recog() #2

declare dso_local void @init_alias_analysis() #2

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) #2

declare dso_local void @sbitmap_zero(%struct.simple_bitmap_def*) #2

declare dso_local i32 @pre_and_rev_post_order_compute(i32*, i32*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %vec_, i32 %ix_) #0 !dbg !3539 {
entry:
  %vec_.addr = alloca %struct.VEC_basic_block_base*, align 8
  %ix_.addr = alloca i32, align 4
  store %struct.VEC_basic_block_base* %vec_, %struct.VEC_basic_block_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_basic_block_base** %vec_.addr, metadata !3544, metadata !DIExpression()), !dbg !3545
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !3546, metadata !DIExpression()), !dbg !3545
  %0 = load %struct.VEC_basic_block_base*, %struct.VEC_basic_block_base** %vec_.addr, align 8, !dbg !3545
  %tobool = icmp ne %struct.VEC_basic_block_base* %0, null, !dbg !3545
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3545

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !3545
  %2 = load %struct.VEC_basic_block_base*, %struct.VEC_basic_block_base** %vec_.addr, align 8, !dbg !3545
  %num = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %2, i32 0, i32 0, !dbg !3545
  %3 = load i32, i32* %num, align 8, !dbg !3545
  %cmp = icmp ult i32 %1, %3, !dbg !3545
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !3547
  %land.ext = zext i1 %4 to i32, !dbg !3545
  %5 = load %struct.VEC_basic_block_base*, %struct.VEC_basic_block_base** %vec_.addr, align 8, !dbg !3545
  %vec = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %5, i32 0, i32 2, !dbg !3545
  %6 = load i32, i32* %ix_.addr, align 4, !dbg !3545
  %idxprom = zext i32 %6 to i64, !dbg !3545
  %arrayidx = getelementptr inbounds [1 x %struct.basic_block_def*], [1 x %struct.basic_block_def*]* %vec, i64 0, i64 %idxprom, !dbg !3545
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !3545
  ret %struct.basic_block_def* %7, !dbg !3545
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @cse_find_path(%struct.basic_block_def* %first_bb, %struct.cse_basic_block_data* %data, i32 %follow_jumps) #0 !dbg !3548 {
entry:
  %first_bb.addr = alloca %struct.basic_block_def*, align 8
  %data.addr = alloca %struct.cse_basic_block_data*, align 8
  %follow_jumps.addr = alloca i32, align 4
  %bb = alloca %struct.basic_block_def*, align 8
  %e = alloca %struct.edge_def*, align 8
  %path_size = alloca i32, align 4
  %last_bb_in_path = alloca %struct.basic_block_def*, align 8
  %previous_bb_in_path = alloca %struct.basic_block_def*, align 8
  %e12 = alloca %struct.edge_def*, align 8
  %bb2271 = alloca %struct.basic_block_def*, align 8
  store %struct.basic_block_def* %first_bb, %struct.basic_block_def** %first_bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %first_bb.addr, metadata !3552, metadata !DIExpression()), !dbg !3553
  store %struct.cse_basic_block_data* %data, %struct.cse_basic_block_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cse_basic_block_data** %data.addr, metadata !3554, metadata !DIExpression()), !dbg !3555
  store i32 %follow_jumps, i32* %follow_jumps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %follow_jumps.addr, metadata !3556, metadata !DIExpression()), !dbg !3557
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !3558, metadata !DIExpression()), !dbg !3559
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e, metadata !3560, metadata !DIExpression()), !dbg !3561
  call void @llvm.dbg.declare(metadata i32* %path_size, metadata !3562, metadata !DIExpression()), !dbg !3563
  %0 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @cse_visited_basic_blocks, align 8, !dbg !3564
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %first_bb.addr, align 8, !dbg !3565
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i32 0, i32 9, !dbg !3566
  %2 = load i32, i32* %index, align 8, !dbg !3566
  call void @SET_BIT(%struct.simple_bitmap_def* %0, i32 %2), !dbg !3567
  %3 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8, !dbg !3568
  %path_size1 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %3, i32 0, i32 1, !dbg !3569
  %4 = load i32, i32* %path_size1, align 4, !dbg !3569
  store i32 %4, i32* %path_size, align 4, !dbg !3570
  %5 = load i32, i32* %path_size, align 4, !dbg !3571
  %tobool = icmp ne i32 %5, 0, !dbg !3571
  br i1 %tobool, label %if.then, label %if.end, !dbg !3573

if.then:                                          ; preds = %entry
  %6 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8, !dbg !3574
  %path = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %6, i32 0, i32 2, !dbg !3574
  %7 = load %struct.branch_path*, %struct.branch_path** %path, align 8, !dbg !3574
  %arrayidx = getelementptr inbounds %struct.branch_path, %struct.branch_path* %7, i64 0, !dbg !3574
  %bb2 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx, i32 0, i32 0, !dbg !3574
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %bb2, align 8, !dbg !3574
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %first_bb.addr, align 8, !dbg !3574
  %cmp = icmp eq %struct.basic_block_def* %8, %9, !dbg !3574
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !3574

cond.true:                                        ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32 6107, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)), !dbg !3574
  br label %cond.end, !dbg !3574

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !3574

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !3574
  br label %if.end, !dbg !3574

if.end:                                           ; preds = %cond.end, %entry
  %10 = load i32, i32* %path_size, align 4, !dbg !3575
  %cmp3 = icmp eq i32 %10, 1, !dbg !3577
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !3578

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %path_size, align 4, !dbg !3579
  br label %done, !dbg !3581

if.end5:                                          ; preds = %if.end
  %11 = load i32, i32* %path_size, align 4, !dbg !3582
  %cmp6 = icmp eq i32 %11, 0, !dbg !3584
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !3585

if.then7:                                         ; preds = %if.end5
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %first_bb.addr, align 8, !dbg !3586
  %13 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8, !dbg !3587
  %path8 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %13, i32 0, i32 2, !dbg !3588
  %14 = load %struct.branch_path*, %struct.branch_path** %path8, align 8, !dbg !3588
  %15 = load i32, i32* %path_size, align 4, !dbg !3589
  %inc = add nsw i32 %15, 1, !dbg !3589
  store i32 %inc, i32* %path_size, align 4, !dbg !3589
  %idxprom = sext i32 %15 to i64, !dbg !3587
  %arrayidx9 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %14, i64 %idxprom, !dbg !3587
  %bb10 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx9, i32 0, i32 0, !dbg !3590
  store %struct.basic_block_def* %12, %struct.basic_block_def** %bb10, align 8, !dbg !3591
  br label %if.end130, !dbg !3587

if.else:                                          ; preds = %if.end5
  br label %while.cond, !dbg !3592

while.cond:                                       ; preds = %if.end121, %if.else
  %16 = load i32, i32* %path_size, align 4, !dbg !3594
  %cmp11 = icmp sge i32 %16, 2, !dbg !3595
  br i1 %cmp11, label %while.body, label %while.end, !dbg !3592

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %last_bb_in_path, metadata !3596, metadata !DIExpression()), !dbg !3598
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %previous_bb_in_path, metadata !3599, metadata !DIExpression()), !dbg !3600
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e12, metadata !3601, metadata !DIExpression()), !dbg !3602
  %17 = load i32, i32* %path_size, align 4, !dbg !3603
  %dec = add nsw i32 %17, -1, !dbg !3603
  store i32 %dec, i32* %path_size, align 4, !dbg !3603
  %18 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8, !dbg !3604
  %path13 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %18, i32 0, i32 2, !dbg !3605
  %19 = load %struct.branch_path*, %struct.branch_path** %path13, align 8, !dbg !3605
  %20 = load i32, i32* %path_size, align 4, !dbg !3606
  %idxprom14 = sext i32 %20 to i64, !dbg !3604
  %arrayidx15 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %19, i64 %idxprom14, !dbg !3604
  %bb16 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx15, i32 0, i32 0, !dbg !3607
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %bb16, align 8, !dbg !3607
  store %struct.basic_block_def* %21, %struct.basic_block_def** %last_bb_in_path, align 8, !dbg !3608
  %22 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8, !dbg !3609
  %path17 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %22, i32 0, i32 2, !dbg !3610
  %23 = load %struct.branch_path*, %struct.branch_path** %path17, align 8, !dbg !3610
  %24 = load i32, i32* %path_size, align 4, !dbg !3611
  %sub = sub nsw i32 %24, 1, !dbg !3612
  %idxprom18 = sext i32 %sub to i64, !dbg !3609
  %arrayidx19 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %23, i64 %idxprom18, !dbg !3609
  %bb20 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx19, i32 0, i32 0, !dbg !3613
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %bb20, align 8, !dbg !3613
  store %struct.basic_block_def* %25, %struct.basic_block_def** %previous_bb_in_path, align 8, !dbg !3614
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %previous_bb_in_path, align 8, !dbg !3615
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %26, i32 0, i32 1, !dbg !3615
  %27 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !3615
  %tobool21 = icmp ne %struct.VEC_edge_gc* %27, null, !dbg !3615
  br i1 %tobool21, label %cond.true22, label %cond.false24, !dbg !3615

cond.true22:                                      ; preds = %while.body
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** %previous_bb_in_path, align 8, !dbg !3615
  %succs23 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %28, i32 0, i32 1, !dbg !3615
  %29 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs23, align 8, !dbg !3615
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %29, i32 0, i32 0, !dbg !3615
  br label %cond.end25, !dbg !3615

cond.false24:                                     ; preds = %while.body
  br label %cond.end25, !dbg !3615

cond.end25:                                       ; preds = %cond.false24, %cond.true22
  %cond26 = phi %struct.VEC_edge_base* [ %base, %cond.true22 ], [ null, %cond.false24 ], !dbg !3615
  %call = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond26), !dbg !3615
  %cmp27 = icmp eq i32 %call, 2, !dbg !3617
  br i1 %cmp27, label %land.lhs.true, label %if.end121, !dbg !3618

land.lhs.true:                                    ; preds = %cond.end25
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %previous_bb_in_path, align 8, !dbg !3619
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %30, i32 0, i32 7, !dbg !3619
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3619
  %31 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3619
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %31, i32 0, i32 1, !dbg !3619
  %32 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3619
  %call28 = call i32 @any_condjump_p(%struct.rtx_def* %32), !dbg !3620
  %tobool29 = icmp ne i32 %call28, 0, !dbg !3620
  br i1 %tobool29, label %land.lhs.true30, label %if.end121, !dbg !3621

land.lhs.true30:                                  ; preds = %land.lhs.true
  %33 = load %struct.basic_block_def*, %struct.basic_block_def** %previous_bb_in_path, align 8, !dbg !3622
  %34 = load %struct.basic_block_def*, %struct.basic_block_def** %last_bb_in_path, align 8, !dbg !3623
  %call31 = call %struct.edge_def* @find_edge(%struct.basic_block_def* %33, %struct.basic_block_def* %34), !dbg !3624
  store %struct.edge_def* %call31, %struct.edge_def** %e12, align 8, !dbg !3625
  %tobool32 = icmp ne %struct.edge_def* %call31, null, !dbg !3625
  br i1 %tobool32, label %land.lhs.true33, label %if.end121, !dbg !3626

land.lhs.true33:                                  ; preds = %land.lhs.true30
  %35 = load %struct.edge_def*, %struct.edge_def** %e12, align 8, !dbg !3627
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %previous_bb_in_path, align 8, !dbg !3628
  %succs34 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %36, i32 0, i32 1, !dbg !3628
  %37 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs34, align 8, !dbg !3628
  %tobool35 = icmp ne %struct.VEC_edge_gc* %37, null, !dbg !3628
  br i1 %tobool35, label %cond.true36, label %cond.false39, !dbg !3628

cond.true36:                                      ; preds = %land.lhs.true33
  %38 = load %struct.basic_block_def*, %struct.basic_block_def** %previous_bb_in_path, align 8, !dbg !3628
  %succs37 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %38, i32 0, i32 1, !dbg !3628
  %39 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs37, align 8, !dbg !3628
  %base38 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %39, i32 0, i32 0, !dbg !3628
  br label %cond.end40, !dbg !3628

cond.false39:                                     ; preds = %land.lhs.true33
  br label %cond.end40, !dbg !3628

cond.end40:                                       ; preds = %cond.false39, %cond.true36
  %cond41 = phi %struct.VEC_edge_base* [ %base38, %cond.true36 ], [ null, %cond.false39 ], !dbg !3628
  %call42 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond41, i32 0), !dbg !3628
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call42, i32 0, i32 7, !dbg !3628
  %40 = load i32, i32* %flags, align 8, !dbg !3628
  %and = and i32 %40, 1, !dbg !3628
  %tobool43 = icmp ne i32 %and, 0, !dbg !3628
  br i1 %tobool43, label %cond.true44, label %cond.false54, !dbg !3628

cond.true44:                                      ; preds = %cond.end40
  %41 = load %struct.basic_block_def*, %struct.basic_block_def** %previous_bb_in_path, align 8, !dbg !3628
  %succs45 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %41, i32 0, i32 1, !dbg !3628
  %42 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs45, align 8, !dbg !3628
  %tobool46 = icmp ne %struct.VEC_edge_gc* %42, null, !dbg !3628
  br i1 %tobool46, label %cond.true47, label %cond.false50, !dbg !3628

cond.true47:                                      ; preds = %cond.true44
  %43 = load %struct.basic_block_def*, %struct.basic_block_def** %previous_bb_in_path, align 8, !dbg !3628
  %succs48 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %43, i32 0, i32 1, !dbg !3628
  %44 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs48, align 8, !dbg !3628
  %base49 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %44, i32 0, i32 0, !dbg !3628
  br label %cond.end51, !dbg !3628

cond.false50:                                     ; preds = %cond.true44
  br label %cond.end51, !dbg !3628

cond.end51:                                       ; preds = %cond.false50, %cond.true47
  %cond52 = phi %struct.VEC_edge_base* [ %base49, %cond.true47 ], [ null, %cond.false50 ], !dbg !3628
  %call53 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond52, i32 1), !dbg !3628
  br label %cond.end64, !dbg !3628

cond.false54:                                     ; preds = %cond.end40
  %45 = load %struct.basic_block_def*, %struct.basic_block_def** %previous_bb_in_path, align 8, !dbg !3628
  %succs55 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %45, i32 0, i32 1, !dbg !3628
  %46 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs55, align 8, !dbg !3628
  %tobool56 = icmp ne %struct.VEC_edge_gc* %46, null, !dbg !3628
  br i1 %tobool56, label %cond.true57, label %cond.false60, !dbg !3628

cond.true57:                                      ; preds = %cond.false54
  %47 = load %struct.basic_block_def*, %struct.basic_block_def** %previous_bb_in_path, align 8, !dbg !3628
  %succs58 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %47, i32 0, i32 1, !dbg !3628
  %48 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs58, align 8, !dbg !3628
  %base59 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %48, i32 0, i32 0, !dbg !3628
  br label %cond.end61, !dbg !3628

cond.false60:                                     ; preds = %cond.false54
  br label %cond.end61, !dbg !3628

cond.end61:                                       ; preds = %cond.false60, %cond.true57
  %cond62 = phi %struct.VEC_edge_base* [ %base59, %cond.true57 ], [ null, %cond.false60 ], !dbg !3628
  %call63 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond62, i32 0), !dbg !3628
  br label %cond.end64, !dbg !3628

cond.end64:                                       ; preds = %cond.end61, %cond.end51
  %cond65 = phi %struct.edge_def* [ %call53, %cond.end51 ], [ %call63, %cond.end61 ], !dbg !3628
  %cmp66 = icmp eq %struct.edge_def* %35, %cond65, !dbg !3629
  br i1 %cmp66, label %if.then67, label %if.end121, !dbg !3630

if.then67:                                        ; preds = %cond.end64
  %49 = load %struct.basic_block_def*, %struct.basic_block_def** %previous_bb_in_path, align 8, !dbg !3631
  %succs68 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %49, i32 0, i32 1, !dbg !3631
  %50 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs68, align 8, !dbg !3631
  %tobool69 = icmp ne %struct.VEC_edge_gc* %50, null, !dbg !3631
  br i1 %tobool69, label %cond.true70, label %cond.false73, !dbg !3631

cond.true70:                                      ; preds = %if.then67
  %51 = load %struct.basic_block_def*, %struct.basic_block_def** %previous_bb_in_path, align 8, !dbg !3631
  %succs71 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %51, i32 0, i32 1, !dbg !3631
  %52 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs71, align 8, !dbg !3631
  %base72 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %52, i32 0, i32 0, !dbg !3631
  br label %cond.end74, !dbg !3631

cond.false73:                                     ; preds = %if.then67
  br label %cond.end74, !dbg !3631

cond.end74:                                       ; preds = %cond.false73, %cond.true70
  %cond75 = phi %struct.VEC_edge_base* [ %base72, %cond.true70 ], [ null, %cond.false73 ], !dbg !3631
  %call76 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond75, i32 0), !dbg !3631
  %flags77 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call76, i32 0, i32 7, !dbg !3631
  %53 = load i32, i32* %flags77, align 8, !dbg !3631
  %and78 = and i32 %53, 1, !dbg !3631
  %tobool79 = icmp ne i32 %and78, 0, !dbg !3631
  br i1 %tobool79, label %cond.true80, label %cond.false90, !dbg !3631

cond.true80:                                      ; preds = %cond.end74
  %54 = load %struct.basic_block_def*, %struct.basic_block_def** %previous_bb_in_path, align 8, !dbg !3631
  %succs81 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %54, i32 0, i32 1, !dbg !3631
  %55 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs81, align 8, !dbg !3631
  %tobool82 = icmp ne %struct.VEC_edge_gc* %55, null, !dbg !3631
  br i1 %tobool82, label %cond.true83, label %cond.false86, !dbg !3631

cond.true83:                                      ; preds = %cond.true80
  %56 = load %struct.basic_block_def*, %struct.basic_block_def** %previous_bb_in_path, align 8, !dbg !3631
  %succs84 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %56, i32 0, i32 1, !dbg !3631
  %57 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs84, align 8, !dbg !3631
  %base85 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %57, i32 0, i32 0, !dbg !3631
  br label %cond.end87, !dbg !3631

cond.false86:                                     ; preds = %cond.true80
  br label %cond.end87, !dbg !3631

cond.end87:                                       ; preds = %cond.false86, %cond.true83
  %cond88 = phi %struct.VEC_edge_base* [ %base85, %cond.true83 ], [ null, %cond.false86 ], !dbg !3631
  %call89 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond88, i32 0), !dbg !3631
  br label %cond.end100, !dbg !3631

cond.false90:                                     ; preds = %cond.end74
  %58 = load %struct.basic_block_def*, %struct.basic_block_def** %previous_bb_in_path, align 8, !dbg !3631
  %succs91 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %58, i32 0, i32 1, !dbg !3631
  %59 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs91, align 8, !dbg !3631
  %tobool92 = icmp ne %struct.VEC_edge_gc* %59, null, !dbg !3631
  br i1 %tobool92, label %cond.true93, label %cond.false96, !dbg !3631

cond.true93:                                      ; preds = %cond.false90
  %60 = load %struct.basic_block_def*, %struct.basic_block_def** %previous_bb_in_path, align 8, !dbg !3631
  %succs94 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %60, i32 0, i32 1, !dbg !3631
  %61 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs94, align 8, !dbg !3631
  %base95 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %61, i32 0, i32 0, !dbg !3631
  br label %cond.end97, !dbg !3631

cond.false96:                                     ; preds = %cond.false90
  br label %cond.end97, !dbg !3631

cond.end97:                                       ; preds = %cond.false96, %cond.true93
  %cond98 = phi %struct.VEC_edge_base* [ %base95, %cond.true93 ], [ null, %cond.false96 ], !dbg !3631
  %call99 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond98, i32 1), !dbg !3631
  br label %cond.end100, !dbg !3631

cond.end100:                                      ; preds = %cond.end97, %cond.end87
  %cond101 = phi %struct.edge_def* [ %call89, %cond.end87 ], [ %call99, %cond.end97 ], !dbg !3631
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond101, i32 0, i32 1, !dbg !3633
  %62 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3633
  store %struct.basic_block_def* %62, %struct.basic_block_def** %bb, align 8, !dbg !3634
  %63 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3635
  %64 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3637
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %64, i64 0, !dbg !3637
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !3637
  %65 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3637
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %65, i32 0, i32 1, !dbg !3637
  %66 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3637
  %cmp102 = icmp ne %struct.basic_block_def* %63, %66, !dbg !3638
  br i1 %cmp102, label %land.lhs.true103, label %if.end120, !dbg !3639

land.lhs.true103:                                 ; preds = %cond.end100
  %67 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3640
  %call104 = call zeroext i8 @single_pred_p(%struct.basic_block_def* %67), !dbg !3641
  %conv = zext i8 %call104 to i32, !dbg !3641
  %tobool105 = icmp ne i32 %conv, 0, !dbg !3641
  br i1 %tobool105, label %land.lhs.true106, label %if.end120, !dbg !3642

land.lhs.true106:                                 ; preds = %land.lhs.true103
  %68 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @cse_visited_basic_blocks, align 8, !dbg !3643
  %elms = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %68, i32 0, i32 3, !dbg !3643
  %69 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3643
  %index107 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %69, i32 0, i32 9, !dbg !3643
  %70 = load i32, i32* %index107, align 8, !dbg !3643
  %div = udiv i32 %70, 64, !dbg !3643
  %idxprom108 = zext i32 %div to i64, !dbg !3643
  %arrayidx109 = getelementptr inbounds [1 x i64], [1 x i64]* %elms, i64 0, i64 %idxprom108, !dbg !3643
  %71 = load i64, i64* %arrayidx109, align 8, !dbg !3643
  %72 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3643
  %index110 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %72, i32 0, i32 9, !dbg !3643
  %73 = load i32, i32* %index110, align 8, !dbg !3643
  %rem = urem i32 %73, 64, !dbg !3643
  %sh_prom = zext i32 %rem to i64, !dbg !3643
  %shr = lshr i64 %71, %sh_prom, !dbg !3643
  %and111 = and i64 %shr, 1, !dbg !3643
  %tobool112 = icmp ne i64 %and111, 0, !dbg !3643
  br i1 %tobool112, label %if.end120, label %if.then113, !dbg !3644

if.then113:                                       ; preds = %land.lhs.true106
  %74 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @cse_visited_basic_blocks, align 8, !dbg !3645
  %75 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3647
  %index114 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %75, i32 0, i32 9, !dbg !3648
  %76 = load i32, i32* %index114, align 8, !dbg !3648
  call void @SET_BIT(%struct.simple_bitmap_def* %74, i32 %76), !dbg !3649
  %77 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3650
  %78 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8, !dbg !3651
  %path115 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %78, i32 0, i32 2, !dbg !3652
  %79 = load %struct.branch_path*, %struct.branch_path** %path115, align 8, !dbg !3652
  %80 = load i32, i32* %path_size, align 4, !dbg !3653
  %inc116 = add nsw i32 %80, 1, !dbg !3653
  store i32 %inc116, i32* %path_size, align 4, !dbg !3653
  %idxprom117 = sext i32 %80 to i64, !dbg !3651
  %arrayidx118 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %79, i64 %idxprom117, !dbg !3651
  %bb119 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx118, i32 0, i32 0, !dbg !3654
  store %struct.basic_block_def* %77, %struct.basic_block_def** %bb119, align 8, !dbg !3655
  br label %while.end, !dbg !3656

if.end120:                                        ; preds = %land.lhs.true106, %land.lhs.true103, %cond.end100
  br label %if.end121, !dbg !3657

if.end121:                                        ; preds = %if.end120, %cond.end64, %land.lhs.true30, %land.lhs.true, %cond.end25
  %81 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8, !dbg !3658
  %path122 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %81, i32 0, i32 2, !dbg !3659
  %82 = load %struct.branch_path*, %struct.branch_path** %path122, align 8, !dbg !3659
  %83 = load i32, i32* %path_size, align 4, !dbg !3660
  %idxprom123 = sext i32 %83 to i64, !dbg !3658
  %arrayidx124 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %82, i64 %idxprom123, !dbg !3658
  %bb125 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx124, i32 0, i32 0, !dbg !3661
  store %struct.basic_block_def* null, %struct.basic_block_def** %bb125, align 8, !dbg !3662
  br label %while.cond, !dbg !3592, !llvm.loop !3663

while.end:                                        ; preds = %if.then113, %while.cond
  %84 = load i32, i32* %path_size, align 4, !dbg !3665
  %cmp126 = icmp eq i32 %84, 1, !dbg !3667
  br i1 %cmp126, label %if.then128, label %if.end129, !dbg !3668

if.then128:                                       ; preds = %while.end
  store i32 0, i32* %path_size, align 4, !dbg !3669
  br label %done, !dbg !3671

if.end129:                                        ; preds = %while.end
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %if.then7
  %85 = load i32, i32* %follow_jumps.addr, align 4, !dbg !3672
  %tobool131 = icmp ne i32 %85, 0, !dbg !3672
  br i1 %tobool131, label %if.then132, label %if.end282, !dbg !3674

if.then132:                                       ; preds = %if.end130
  %86 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8, !dbg !3675
  %path133 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %86, i32 0, i32 2, !dbg !3677
  %87 = load %struct.branch_path*, %struct.branch_path** %path133, align 8, !dbg !3677
  %88 = load i32, i32* %path_size, align 4, !dbg !3678
  %sub134 = sub nsw i32 %88, 1, !dbg !3679
  %idxprom135 = sext i32 %sub134 to i64, !dbg !3675
  %arrayidx136 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %87, i64 %idxprom135, !dbg !3675
  %bb137 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx136, i32 0, i32 0, !dbg !3680
  %89 = load %struct.basic_block_def*, %struct.basic_block_def** %bb137, align 8, !dbg !3680
  store %struct.basic_block_def* %89, %struct.basic_block_def** %bb, align 8, !dbg !3681
  br label %while.cond138, !dbg !3682

while.cond138:                                    ; preds = %if.end280, %if.then132
  %90 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3683
  %tobool139 = icmp ne %struct.basic_block_def* %90, null, !dbg !3683
  br i1 %tobool139, label %land.rhs, label %land.end, !dbg !3684

land.rhs:                                         ; preds = %while.cond138
  %91 = load i32, i32* %path_size, align 4, !dbg !3685
  %92 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !3686
  %arrayidx140 = getelementptr inbounds %struct.param_info, %struct.param_info* %92, i64 57, !dbg !3686
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %arrayidx140, i32 0, i32 1, !dbg !3686
  %93 = load i32, i32* %value, align 8, !dbg !3686
  %cmp141 = icmp slt i32 %91, %93, !dbg !3687
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond138
  %94 = phi i1 [ false, %while.cond138 ], [ %cmp141, %land.rhs ], !dbg !3688
  br i1 %94, label %while.body143, label %while.end281, !dbg !3682

while.body143:                                    ; preds = %land.end
  %95 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3689
  %call144 = call zeroext i8 @single_succ_p(%struct.basic_block_def* %95), !dbg !3692
  %tobool145 = icmp ne i8 %call144, 0, !dbg !3692
  br i1 %tobool145, label %if.then146, label %if.else148, !dbg !3693

if.then146:                                       ; preds = %while.body143
  %96 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3694
  %call147 = call %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %96), !dbg !3695
  store %struct.edge_def* %call147, %struct.edge_def** %e, align 8, !dbg !3696
  br label %if.end242, !dbg !3697

if.else148:                                       ; preds = %while.body143
  %97 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3698
  %succs149 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %97, i32 0, i32 1, !dbg !3698
  %98 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs149, align 8, !dbg !3698
  %tobool150 = icmp ne %struct.VEC_edge_gc* %98, null, !dbg !3698
  br i1 %tobool150, label %cond.true151, label %cond.false154, !dbg !3698

cond.true151:                                     ; preds = %if.else148
  %99 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3698
  %succs152 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %99, i32 0, i32 1, !dbg !3698
  %100 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs152, align 8, !dbg !3698
  %base153 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %100, i32 0, i32 0, !dbg !3698
  br label %cond.end155, !dbg !3698

cond.false154:                                    ; preds = %if.else148
  br label %cond.end155, !dbg !3698

cond.end155:                                      ; preds = %cond.false154, %cond.true151
  %cond156 = phi %struct.VEC_edge_base* [ %base153, %cond.true151 ], [ null, %cond.false154 ], !dbg !3698
  %call157 = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond156), !dbg !3698
  %cmp158 = icmp eq i32 %call157, 2, !dbg !3700
  br i1 %cmp158, label %land.lhs.true160, label %if.else240, !dbg !3701

land.lhs.true160:                                 ; preds = %cond.end155
  %101 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3702
  %il161 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %101, i32 0, i32 7, !dbg !3702
  %rtl162 = bitcast %union.basic_block_il_dependent* %il161 to %struct.rtl_bb_info**, !dbg !3702
  %102 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl162, align 8, !dbg !3702
  %end_163 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %102, i32 0, i32 1, !dbg !3702
  %103 = load %struct.rtx_def*, %struct.rtx_def** %end_163, align 8, !dbg !3702
  %call164 = call i32 @any_condjump_p(%struct.rtx_def* %103), !dbg !3703
  %tobool165 = icmp ne i32 %call164, 0, !dbg !3703
  br i1 %tobool165, label %if.then166, label %if.else240, !dbg !3704

if.then166:                                       ; preds = %land.lhs.true160
  %104 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3705
  %succs167 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %104, i32 0, i32 1, !dbg !3705
  %105 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs167, align 8, !dbg !3705
  %tobool168 = icmp ne %struct.VEC_edge_gc* %105, null, !dbg !3705
  br i1 %tobool168, label %cond.true169, label %cond.false172, !dbg !3705

cond.true169:                                     ; preds = %if.then166
  %106 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3705
  %succs170 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %106, i32 0, i32 1, !dbg !3705
  %107 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs170, align 8, !dbg !3705
  %base171 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %107, i32 0, i32 0, !dbg !3705
  br label %cond.end173, !dbg !3705

cond.false172:                                    ; preds = %if.then166
  br label %cond.end173, !dbg !3705

cond.end173:                                      ; preds = %cond.false172, %cond.true169
  %cond174 = phi %struct.VEC_edge_base* [ %base171, %cond.true169 ], [ null, %cond.false172 ], !dbg !3705
  %call175 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond174, i32 0), !dbg !3705
  %flags176 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call175, i32 0, i32 7, !dbg !3705
  %108 = load i32, i32* %flags176, align 8, !dbg !3705
  %and177 = and i32 %108, 1, !dbg !3705
  %tobool178 = icmp ne i32 %and177, 0, !dbg !3705
  br i1 %tobool178, label %cond.true179, label %cond.false189, !dbg !3705

cond.true179:                                     ; preds = %cond.end173
  %109 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3705
  %succs180 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %109, i32 0, i32 1, !dbg !3705
  %110 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs180, align 8, !dbg !3705
  %tobool181 = icmp ne %struct.VEC_edge_gc* %110, null, !dbg !3705
  br i1 %tobool181, label %cond.true182, label %cond.false185, !dbg !3705

cond.true182:                                     ; preds = %cond.true179
  %111 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3705
  %succs183 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %111, i32 0, i32 1, !dbg !3705
  %112 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs183, align 8, !dbg !3705
  %base184 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %112, i32 0, i32 0, !dbg !3705
  br label %cond.end186, !dbg !3705

cond.false185:                                    ; preds = %cond.true179
  br label %cond.end186, !dbg !3705

cond.end186:                                      ; preds = %cond.false185, %cond.true182
  %cond187 = phi %struct.VEC_edge_base* [ %base184, %cond.true182 ], [ null, %cond.false185 ], !dbg !3705
  %call188 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond187, i32 1), !dbg !3705
  br label %cond.end199, !dbg !3705

cond.false189:                                    ; preds = %cond.end173
  %113 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3705
  %succs190 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %113, i32 0, i32 1, !dbg !3705
  %114 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs190, align 8, !dbg !3705
  %tobool191 = icmp ne %struct.VEC_edge_gc* %114, null, !dbg !3705
  br i1 %tobool191, label %cond.true192, label %cond.false195, !dbg !3705

cond.true192:                                     ; preds = %cond.false189
  %115 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3705
  %succs193 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %115, i32 0, i32 1, !dbg !3705
  %116 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs193, align 8, !dbg !3705
  %base194 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %116, i32 0, i32 0, !dbg !3705
  br label %cond.end196, !dbg !3705

cond.false195:                                    ; preds = %cond.false189
  br label %cond.end196, !dbg !3705

cond.end196:                                      ; preds = %cond.false195, %cond.true192
  %cond197 = phi %struct.VEC_edge_base* [ %base194, %cond.true192 ], [ null, %cond.false195 ], !dbg !3705
  %call198 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond197, i32 0), !dbg !3705
  br label %cond.end199, !dbg !3705

cond.end199:                                      ; preds = %cond.end196, %cond.end186
  %cond200 = phi %struct.edge_def* [ %call188, %cond.end186 ], [ %call198, %cond.end196 ], !dbg !3705
  store %struct.edge_def* %cond200, %struct.edge_def** %e, align 8, !dbg !3707
  %117 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3708
  %dest201 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %117, i32 0, i32 1, !dbg !3710
  %118 = load %struct.basic_block_def*, %struct.basic_block_def** %dest201, align 8, !dbg !3710
  %call202 = call zeroext i8 @single_pred_p(%struct.basic_block_def* %118), !dbg !3711
  %tobool203 = icmp ne i8 %call202, 0, !dbg !3711
  br i1 %tobool203, label %if.end239, label %if.then204, !dbg !3712

if.then204:                                       ; preds = %cond.end199
  %119 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3713
  %succs205 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %119, i32 0, i32 1, !dbg !3713
  %120 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs205, align 8, !dbg !3713
  %tobool206 = icmp ne %struct.VEC_edge_gc* %120, null, !dbg !3713
  br i1 %tobool206, label %cond.true207, label %cond.false210, !dbg !3713

cond.true207:                                     ; preds = %if.then204
  %121 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3713
  %succs208 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %121, i32 0, i32 1, !dbg !3713
  %122 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs208, align 8, !dbg !3713
  %base209 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %122, i32 0, i32 0, !dbg !3713
  br label %cond.end211, !dbg !3713

cond.false210:                                    ; preds = %if.then204
  br label %cond.end211, !dbg !3713

cond.end211:                                      ; preds = %cond.false210, %cond.true207
  %cond212 = phi %struct.VEC_edge_base* [ %base209, %cond.true207 ], [ null, %cond.false210 ], !dbg !3713
  %call213 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond212, i32 0), !dbg !3713
  %flags214 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call213, i32 0, i32 7, !dbg !3713
  %123 = load i32, i32* %flags214, align 8, !dbg !3713
  %and215 = and i32 %123, 1, !dbg !3713
  %tobool216 = icmp ne i32 %and215, 0, !dbg !3713
  br i1 %tobool216, label %cond.true217, label %cond.false227, !dbg !3713

cond.true217:                                     ; preds = %cond.end211
  %124 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3713
  %succs218 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %124, i32 0, i32 1, !dbg !3713
  %125 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs218, align 8, !dbg !3713
  %tobool219 = icmp ne %struct.VEC_edge_gc* %125, null, !dbg !3713
  br i1 %tobool219, label %cond.true220, label %cond.false223, !dbg !3713

cond.true220:                                     ; preds = %cond.true217
  %126 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3713
  %succs221 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %126, i32 0, i32 1, !dbg !3713
  %127 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs221, align 8, !dbg !3713
  %base222 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %127, i32 0, i32 0, !dbg !3713
  br label %cond.end224, !dbg !3713

cond.false223:                                    ; preds = %cond.true217
  br label %cond.end224, !dbg !3713

cond.end224:                                      ; preds = %cond.false223, %cond.true220
  %cond225 = phi %struct.VEC_edge_base* [ %base222, %cond.true220 ], [ null, %cond.false223 ], !dbg !3713
  %call226 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond225, i32 0), !dbg !3713
  br label %cond.end237, !dbg !3713

cond.false227:                                    ; preds = %cond.end211
  %128 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3713
  %succs228 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %128, i32 0, i32 1, !dbg !3713
  %129 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs228, align 8, !dbg !3713
  %tobool229 = icmp ne %struct.VEC_edge_gc* %129, null, !dbg !3713
  br i1 %tobool229, label %cond.true230, label %cond.false233, !dbg !3713

cond.true230:                                     ; preds = %cond.false227
  %130 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3713
  %succs231 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %130, i32 0, i32 1, !dbg !3713
  %131 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs231, align 8, !dbg !3713
  %base232 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %131, i32 0, i32 0, !dbg !3713
  br label %cond.end234, !dbg !3713

cond.false233:                                    ; preds = %cond.false227
  br label %cond.end234, !dbg !3713

cond.end234:                                      ; preds = %cond.false233, %cond.true230
  %cond235 = phi %struct.VEC_edge_base* [ %base232, %cond.true230 ], [ null, %cond.false233 ], !dbg !3713
  %call236 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond235, i32 1), !dbg !3713
  br label %cond.end237, !dbg !3713

cond.end237:                                      ; preds = %cond.end234, %cond.end224
  %cond238 = phi %struct.edge_def* [ %call226, %cond.end224 ], [ %call236, %cond.end234 ], !dbg !3713
  store %struct.edge_def* %cond238, %struct.edge_def** %e, align 8, !dbg !3714
  br label %if.end239, !dbg !3715

if.end239:                                        ; preds = %cond.end237, %cond.end199
  br label %if.end241, !dbg !3716

if.else240:                                       ; preds = %land.lhs.true160, %cond.end155
  store %struct.edge_def* null, %struct.edge_def** %e, align 8, !dbg !3717
  br label %if.end241

if.end241:                                        ; preds = %if.else240, %if.end239
  br label %if.end242

if.end242:                                        ; preds = %if.end241, %if.then146
  %132 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3718
  %tobool243 = icmp ne %struct.edge_def* %132, null, !dbg !3718
  br i1 %tobool243, label %land.lhs.true244, label %if.else279, !dbg !3720

land.lhs.true244:                                 ; preds = %if.end242
  %133 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3721
  %dest245 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %133, i32 0, i32 1, !dbg !3722
  %134 = load %struct.basic_block_def*, %struct.basic_block_def** %dest245, align 8, !dbg !3722
  %135 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3723
  %add.ptr246 = getelementptr inbounds %struct.function, %struct.function* %135, i64 0, !dbg !3723
  %cfg247 = getelementptr inbounds %struct.function, %struct.function* %add.ptr246, i32 0, i32 1, !dbg !3723
  %136 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg247, align 8, !dbg !3723
  %x_exit_block_ptr248 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %136, i32 0, i32 1, !dbg !3723
  %137 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr248, align 8, !dbg !3723
  %cmp249 = icmp ne %struct.basic_block_def* %134, %137, !dbg !3724
  br i1 %cmp249, label %land.lhs.true251, label %if.else279, !dbg !3725

land.lhs.true251:                                 ; preds = %land.lhs.true244
  %138 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3726
  %dest252 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %138, i32 0, i32 1, !dbg !3727
  %139 = load %struct.basic_block_def*, %struct.basic_block_def** %dest252, align 8, !dbg !3727
  %call253 = call zeroext i8 @single_pred_p(%struct.basic_block_def* %139), !dbg !3728
  %conv254 = zext i8 %call253 to i32, !dbg !3728
  %tobool255 = icmp ne i32 %conv254, 0, !dbg !3728
  br i1 %tobool255, label %land.lhs.true256, label %if.else279, !dbg !3729

land.lhs.true256:                                 ; preds = %land.lhs.true251
  %140 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @cse_visited_basic_blocks, align 8, !dbg !3730
  %elms257 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %140, i32 0, i32 3, !dbg !3730
  %141 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3730
  %dest258 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %141, i32 0, i32 1, !dbg !3730
  %142 = load %struct.basic_block_def*, %struct.basic_block_def** %dest258, align 8, !dbg !3730
  %index259 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %142, i32 0, i32 9, !dbg !3730
  %143 = load i32, i32* %index259, align 8, !dbg !3730
  %div260 = udiv i32 %143, 64, !dbg !3730
  %idxprom261 = zext i32 %div260 to i64, !dbg !3730
  %arrayidx262 = getelementptr inbounds [1 x i64], [1 x i64]* %elms257, i64 0, i64 %idxprom261, !dbg !3730
  %144 = load i64, i64* %arrayidx262, align 8, !dbg !3730
  %145 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3730
  %dest263 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %145, i32 0, i32 1, !dbg !3730
  %146 = load %struct.basic_block_def*, %struct.basic_block_def** %dest263, align 8, !dbg !3730
  %index264 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %146, i32 0, i32 9, !dbg !3730
  %147 = load i32, i32* %index264, align 8, !dbg !3730
  %rem265 = urem i32 %147, 64, !dbg !3730
  %sh_prom266 = zext i32 %rem265 to i64, !dbg !3730
  %shr267 = lshr i64 %144, %sh_prom266, !dbg !3730
  %and268 = and i64 %shr267, 1, !dbg !3730
  %tobool269 = icmp ne i64 %and268, 0, !dbg !3730
  br i1 %tobool269, label %if.else279, label %if.then270, !dbg !3731

if.then270:                                       ; preds = %land.lhs.true256
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb2271, metadata !3732, metadata !DIExpression()), !dbg !3734
  %148 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3735
  %dest272 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %148, i32 0, i32 1, !dbg !3736
  %149 = load %struct.basic_block_def*, %struct.basic_block_def** %dest272, align 8, !dbg !3736
  store %struct.basic_block_def* %149, %struct.basic_block_def** %bb2271, align 8, !dbg !3734
  %150 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @cse_visited_basic_blocks, align 8, !dbg !3737
  %151 = load %struct.basic_block_def*, %struct.basic_block_def** %bb2271, align 8, !dbg !3738
  %index273 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %151, i32 0, i32 9, !dbg !3739
  %152 = load i32, i32* %index273, align 8, !dbg !3739
  call void @SET_BIT(%struct.simple_bitmap_def* %150, i32 %152), !dbg !3740
  %153 = load %struct.basic_block_def*, %struct.basic_block_def** %bb2271, align 8, !dbg !3741
  %154 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8, !dbg !3742
  %path274 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %154, i32 0, i32 2, !dbg !3743
  %155 = load %struct.branch_path*, %struct.branch_path** %path274, align 8, !dbg !3743
  %156 = load i32, i32* %path_size, align 4, !dbg !3744
  %inc275 = add nsw i32 %156, 1, !dbg !3744
  store i32 %inc275, i32* %path_size, align 4, !dbg !3744
  %idxprom276 = sext i32 %156 to i64, !dbg !3742
  %arrayidx277 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %155, i64 %idxprom276, !dbg !3742
  %bb278 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx277, i32 0, i32 0, !dbg !3745
  store %struct.basic_block_def* %153, %struct.basic_block_def** %bb278, align 8, !dbg !3746
  %157 = load %struct.basic_block_def*, %struct.basic_block_def** %bb2271, align 8, !dbg !3747
  store %struct.basic_block_def* %157, %struct.basic_block_def** %bb, align 8, !dbg !3748
  br label %if.end280, !dbg !3749

if.else279:                                       ; preds = %land.lhs.true256, %land.lhs.true251, %land.lhs.true244, %if.end242
  store %struct.basic_block_def* null, %struct.basic_block_def** %bb, align 8, !dbg !3750
  br label %if.end280

if.end280:                                        ; preds = %if.else279, %if.then270
  br label %while.cond138, !dbg !3682, !llvm.loop !3751

while.end281:                                     ; preds = %land.end
  br label %if.end282, !dbg !3753

if.end282:                                        ; preds = %while.end281, %if.end130
  br label %done, !dbg !3672

done:                                             ; preds = %if.end282, %if.then128, %if.then4
  call void @llvm.dbg.label(metadata !3754), !dbg !3755
  %158 = load i32, i32* %path_size, align 4, !dbg !3756
  %159 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8, !dbg !3757
  %path_size283 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %159, i32 0, i32 1, !dbg !3758
  store i32 %158, i32* %path_size283, align 4, !dbg !3759
  %160 = load i32, i32* %path_size, align 4, !dbg !3760
  %cmp284 = icmp ne i32 %160, 0, !dbg !3761
  %conv285 = zext i1 %cmp284 to i32, !dbg !3761
  %conv286 = trunc i32 %conv285 to i8, !dbg !3760
  ret i8 %conv286, !dbg !3762
}

; Function Attrs: noinline nounwind uwtable
define internal void @cse_prescan_path(%struct.cse_basic_block_data* %data) #0 !dbg !3763 {
entry:
  %data.addr = alloca %struct.cse_basic_block_data*, align 8
  %nsets = alloca i32, align 4
  %path_size = alloca i32, align 4
  %path_entry = alloca i32, align 4
  %bb = alloca %struct.basic_block_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  store %struct.cse_basic_block_data* %data, %struct.cse_basic_block_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cse_basic_block_data** %data.addr, metadata !3766, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.declare(metadata i32* %nsets, metadata !3768, metadata !DIExpression()), !dbg !3769
  store i32 0, i32* %nsets, align 4, !dbg !3769
  call void @llvm.dbg.declare(metadata i32* %path_size, metadata !3770, metadata !DIExpression()), !dbg !3771
  %0 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8, !dbg !3772
  %path_size1 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %0, i32 0, i32 1, !dbg !3773
  %1 = load i32, i32* %path_size1, align 4, !dbg !3773
  store i32 %1, i32* %path_size, align 4, !dbg !3771
  call void @llvm.dbg.declare(metadata i32* %path_entry, metadata !3774, metadata !DIExpression()), !dbg !3775
  store i32 0, i32* %path_entry, align 4, !dbg !3776
  br label %for.cond, !dbg !3778

for.cond:                                         ; preds = %for.inc42, %entry
  %2 = load i32, i32* %path_entry, align 4, !dbg !3779
  %3 = load i32, i32* %path_size, align 4, !dbg !3781
  %cmp = icmp slt i32 %2, %3, !dbg !3782
  br i1 %cmp, label %for.body, label %for.end43, !dbg !3783

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !3784, metadata !DIExpression()), !dbg !3786
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !3787, metadata !DIExpression()), !dbg !3788
  %4 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8, !dbg !3789
  %path = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %4, i32 0, i32 2, !dbg !3790
  %5 = load %struct.branch_path*, %struct.branch_path** %path, align 8, !dbg !3790
  %6 = load i32, i32* %path_entry, align 4, !dbg !3791
  %idxprom = sext i32 %6 to i64, !dbg !3789
  %arrayidx = getelementptr inbounds %struct.branch_path, %struct.branch_path* %5, i64 %idxprom, !dbg !3789
  %bb2 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx, i32 0, i32 0, !dbg !3792
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %bb2, align 8, !dbg !3792
  store %struct.basic_block_def* %7, %struct.basic_block_def** %bb, align 8, !dbg !3793
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3794
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %8, i32 0, i32 7, !dbg !3794
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3794
  %9 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3794
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %9, i32 0, i32 0, !dbg !3794
  %10 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !3794
  store %struct.rtx_def* %10, %struct.rtx_def** %insn, align 8, !dbg !3794
  br label %for.cond3, !dbg !3794

for.cond3:                                        ; preds = %for.inc, %for.body
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3796
  %tobool = icmp ne %struct.rtx_def* %11, null, !dbg !3796
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3796

land.rhs:                                         ; preds = %for.cond3
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3796
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3796
  %il4 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %13, i32 0, i32 7, !dbg !3796
  %rtl5 = bitcast %union.basic_block_il_dependent* %il4 to %struct.rtl_bb_info**, !dbg !3796
  %14 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl5, align 8, !dbg !3796
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %14, i32 0, i32 1, !dbg !3796
  %15 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3796
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !3796
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3796
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !3796
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**, !dbg !3796
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3796
  %cmp7 = icmp ne %struct.rtx_def* %12, %16, !dbg !3796
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond3
  %17 = phi i1 [ false, %for.cond3 ], [ %cmp7, %land.rhs ], !dbg !3798
  br i1 %17, label %for.body8, label %for.end, !dbg !3794

for.body8:                                        ; preds = %land.end
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3799
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !3799
  %bf.load = load i32, i32* %19, align 8, !dbg !3799
  %bf.clear = and i32 %bf.load, 65535, !dbg !3799
  %cmp9 = icmp eq i32 %bf.clear, 8, !dbg !3799
  br i1 %cmp9, label %if.end, label %lor.lhs.false, !dbg !3799

lor.lhs.false:                                    ; preds = %for.body8
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3799
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !3799
  %bf.load10 = load i32, i32* %21, align 8, !dbg !3799
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !3799
  %cmp12 = icmp eq i32 %bf.clear11, 7, !dbg !3799
  br i1 %cmp12, label %if.end, label %lor.lhs.false13, !dbg !3799

lor.lhs.false13:                                  ; preds = %lor.lhs.false
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3799
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !3799
  %bf.load14 = load i32, i32* %23, align 8, !dbg !3799
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !3799
  %cmp16 = icmp eq i32 %bf.clear15, 9, !dbg !3799
  br i1 %cmp16, label %if.end, label %lor.lhs.false17, !dbg !3799

lor.lhs.false17:                                  ; preds = %lor.lhs.false13
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3799
  %25 = bitcast %struct.rtx_def* %24 to i32*, !dbg !3799
  %bf.load18 = load i32, i32* %25, align 8, !dbg !3799
  %bf.clear19 = and i32 %bf.load18, 65535, !dbg !3799
  %cmp20 = icmp eq i32 %bf.clear19, 10, !dbg !3799
  br i1 %cmp20, label %if.end, label %if.then, !dbg !3802

if.then:                                          ; preds = %lor.lhs.false17
  br label %for.inc, !dbg !3803

if.end:                                           ; preds = %lor.lhs.false17, %lor.lhs.false13, %lor.lhs.false, %for.body8
  %26 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3804
  %u21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !3804
  %fld22 = bitcast %union.u* %u21 to [1 x %union.rtunion_def]*, !dbg !3804
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i64 0, i64 5, !dbg !3804
  %rt_rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**, !dbg !3804
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx24, align 8, !dbg !3804
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !3804
  %bf.load25 = load i32, i32* %28, align 8, !dbg !3804
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !3804
  %cmp27 = icmp eq i32 %bf.clear26, 15, !dbg !3806
  br i1 %cmp27, label %if.then28, label %if.else, !dbg !3807

if.then28:                                        ; preds = %if.end
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3808
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !3808
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !3808
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 5, !dbg !3808
  %rt_rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !3808
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !3808
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !3808
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !3808
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 0, !dbg !3808
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtvec_def**, !dbg !3808
  %31 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3808
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %31, i32 0, i32 0, !dbg !3808
  %32 = load i32, i32* %num_elem, align 8, !dbg !3808
  %33 = load i32, i32* %nsets, align 4, !dbg !3809
  %add = add nsw i32 %33, %32, !dbg !3809
  store i32 %add, i32* %nsets, align 4, !dbg !3809
  br label %if.end37, !dbg !3810

if.else:                                          ; preds = %if.end
  %34 = load i32, i32* %nsets, align 4, !dbg !3811
  %add36 = add nsw i32 %34, 1, !dbg !3811
  store i32 %add36, i32* %nsets, align 4, !dbg !3811
  br label %if.end37

if.end37:                                         ; preds = %if.else, %if.then28
  br label %for.inc, !dbg !3812

for.inc:                                          ; preds = %if.end37, %if.then
  %35 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3796
  %u38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !3796
  %fld39 = bitcast %union.u* %u38 to [1 x %union.rtunion_def]*, !dbg !3796
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i64 0, i64 2, !dbg !3796
  %rt_rtx41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**, !dbg !3796
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx41, align 8, !dbg !3796
  store %struct.rtx_def* %36, %struct.rtx_def** %insn, align 8, !dbg !3796
  br label %for.cond3, !dbg !3796, !llvm.loop !3813

for.end:                                          ; preds = %land.end
  br label %for.inc42, !dbg !3815

for.inc42:                                        ; preds = %for.end
  %37 = load i32, i32* %path_entry, align 4, !dbg !3816
  %inc = add nsw i32 %37, 1, !dbg !3816
  store i32 %inc, i32* %path_entry, align 4, !dbg !3816
  br label %for.cond, !dbg !3817, !llvm.loop !3818

for.end43:                                        ; preds = %for.cond
  %38 = load i32, i32* %nsets, align 4, !dbg !3820
  %39 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8, !dbg !3821
  %nsets44 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %39, i32 0, i32 0, !dbg !3822
  store i32 %38, i32* %nsets44, align 8, !dbg !3823
  ret void, !dbg !3824
}

; Function Attrs: noinline nounwind uwtable
define internal void @cse_dump_path(%struct.cse_basic_block_data* %data, i32 %nsets, %struct._IO_FILE* %f) #0 !dbg !3825 {
entry:
  %data.addr = alloca %struct.cse_basic_block_data*, align 8
  %nsets.addr = alloca i32, align 4
  %f.addr = alloca %struct._IO_FILE*, align 8
  %path_entry = alloca i32, align 4
  store %struct.cse_basic_block_data* %data, %struct.cse_basic_block_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cse_basic_block_data** %data.addr, metadata !3878, metadata !DIExpression()), !dbg !3879
  store i32 %nsets, i32* %nsets.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nsets.addr, metadata !3880, metadata !DIExpression()), !dbg !3881
  store %struct._IO_FILE* %f, %struct._IO_FILE** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %f.addr, metadata !3882, metadata !DIExpression()), !dbg !3883
  call void @llvm.dbg.declare(metadata i32* %path_entry, metadata !3884, metadata !DIExpression()), !dbg !3885
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8, !dbg !3886
  %1 = load i32, i32* %nsets.addr, align 4, !dbg !3887
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0), i32 %1), !dbg !3888
  store i32 0, i32* %path_entry, align 4, !dbg !3889
  br label %for.cond, !dbg !3891

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %path_entry, align 4, !dbg !3892
  %3 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8, !dbg !3894
  %path_size = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %3, i32 0, i32 1, !dbg !3895
  %4 = load i32, i32* %path_size, align 4, !dbg !3895
  %cmp = icmp slt i32 %2, %4, !dbg !3896
  br i1 %cmp, label %for.body, label %for.end, !dbg !3897

for.body:                                         ; preds = %for.cond
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8, !dbg !3898
  %6 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %data.addr, align 8, !dbg !3899
  %path = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %6, i32 0, i32 2, !dbg !3900
  %7 = load %struct.branch_path*, %struct.branch_path** %path, align 8, !dbg !3900
  %8 = load i32, i32* %path_entry, align 4, !dbg !3901
  %idxprom = sext i32 %8 to i64, !dbg !3899
  %arrayidx = getelementptr inbounds %struct.branch_path, %struct.branch_path* %7, i64 %idxprom, !dbg !3899
  %bb = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx, i32 0, i32 0, !dbg !3902
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3902
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i32 0, i32 9, !dbg !3903
  %10 = load i32, i32* %index, align 8, !dbg !3903
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i32 %10), !dbg !3904
  br label %for.inc, !dbg !3904

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %path_entry, align 4, !dbg !3905
  %inc = add nsw i32 %11, 1, !dbg !3905
  store i32 %inc, i32* %path_entry, align 4, !dbg !3905
  br label %for.cond, !dbg !3906, !llvm.loop !3907

for.end:                                          ; preds = %for.cond
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3909
  %call2 = call i32 @fputc(i32 10, %struct._IO_FILE* %12), !dbg !3910
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %f.addr, align 8, !dbg !3911
  %call3 = call i32 @fflush(%struct._IO_FILE* %13), !dbg !3912
  ret void, !dbg !3913
}

; Function Attrs: noinline nounwind uwtable
define internal void @cse_extended_basic_block(%struct.cse_basic_block_data* %ebb_data) #0 !dbg !3914 {
entry:
  %ebb_data.addr = alloca %struct.cse_basic_block_data*, align 8
  %path_size = alloca i32, align 4
  %path_entry = alloca i32, align 4
  %num_insns = alloca i32, align 4
  %bb8 = alloca %struct.basic_block_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %def_rec = alloca %union.df_ref_d**, align 8
  %def = alloca %union.df_ref_d*, align 8
  %changed = alloca i8, align 1
  %next_bb = alloca %struct.basic_block_def*, align 8
  %next_bb231 = alloca %struct.basic_block_def*, align 8
  %taken = alloca i8, align 1
  store %struct.cse_basic_block_data* %ebb_data, %struct.cse_basic_block_data** %ebb_data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cse_basic_block_data** %ebb_data.addr, metadata !3915, metadata !DIExpression()), !dbg !3916
  call void @llvm.dbg.declare(metadata i32* %path_size, metadata !3917, metadata !DIExpression()), !dbg !3918
  %0 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %ebb_data.addr, align 8, !dbg !3919
  %path_size1 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %0, i32 0, i32 1, !dbg !3920
  %1 = load i32, i32* %path_size1, align 4, !dbg !3920
  store i32 %1, i32* %path_size, align 4, !dbg !3918
  call void @llvm.dbg.declare(metadata i32* %path_entry, metadata !3921, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.declare(metadata i32* %num_insns, metadata !3923, metadata !DIExpression()), !dbg !3924
  store i32 0, i32* %num_insns, align 4, !dbg !3924
  %2 = load i32, i32* @max_qty, align 4, !dbg !3925
  %conv = sext i32 %2 to i64, !dbg !3925
  %mul = mul i64 40, %conv, !dbg !3925
  %call = call i8* @xmalloc(i64 %mul), !dbg !3925
  %3 = bitcast i8* %call to %struct.qty_table_elem*, !dbg !3925
  store %struct.qty_table_elem* %3, %struct.qty_table_elem** @qty_table, align 8, !dbg !3926
  call void @new_basic_block(), !dbg !3927
  %4 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %ebb_data.addr, align 8, !dbg !3928
  %path = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %4, i32 0, i32 2, !dbg !3929
  %5 = load %struct.branch_path*, %struct.branch_path** %path, align 8, !dbg !3929
  %arrayidx = getelementptr inbounds %struct.branch_path, %struct.branch_path* %5, i64 0, !dbg !3928
  %bb = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx, i32 0, i32 0, !dbg !3930
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3930
  %call2 = call %struct.bitmap_head_def* @df_get_live_in(%struct.basic_block_def* %6), !dbg !3931
  store %struct.bitmap_head_def* %call2, %struct.bitmap_head_def** @cse_ebb_live_in, align 8, !dbg !3932
  %7 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %ebb_data.addr, align 8, !dbg !3933
  %path3 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %7, i32 0, i32 2, !dbg !3934
  %8 = load %struct.branch_path*, %struct.branch_path** %path3, align 8, !dbg !3934
  %9 = load i32, i32* %path_size, align 4, !dbg !3935
  %sub = sub nsw i32 %9, 1, !dbg !3936
  %idxprom = sext i32 %sub to i64, !dbg !3933
  %arrayidx4 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %8, i64 %idxprom, !dbg !3933
  %bb5 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx4, i32 0, i32 0, !dbg !3937
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %bb5, align 8, !dbg !3937
  %call6 = call %struct.bitmap_head_def* @df_get_live_out(%struct.basic_block_def* %10), !dbg !3938
  store %struct.bitmap_head_def* %call6, %struct.bitmap_head_def** @cse_ebb_live_out, align 8, !dbg !3939
  store i32 0, i32* %path_entry, align 4, !dbg !3940
  br label %for.cond, !dbg !3942

for.cond:                                         ; preds = %for.inc271, %entry
  %11 = load i32, i32* %path_entry, align 4, !dbg !3943
  %12 = load i32, i32* %path_size, align 4, !dbg !3945
  %cmp = icmp slt i32 %11, %12, !dbg !3946
  br i1 %cmp, label %for.body, label %for.end273, !dbg !3947

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb8, metadata !3948, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !3951, metadata !DIExpression()), !dbg !3952
  %13 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %ebb_data.addr, align 8, !dbg !3953
  %path9 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %13, i32 0, i32 2, !dbg !3954
  %14 = load %struct.branch_path*, %struct.branch_path** %path9, align 8, !dbg !3954
  %15 = load i32, i32* %path_entry, align 4, !dbg !3955
  %idxprom10 = sext i32 %15 to i64, !dbg !3953
  %arrayidx11 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %14, i64 %idxprom10, !dbg !3953
  %bb12 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx11, i32 0, i32 0, !dbg !3956
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %bb12, align 8, !dbg !3956
  store %struct.basic_block_def* %16, %struct.basic_block_def** %bb8, align 8, !dbg !3957
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %bb8, align 8, !dbg !3958
  %call13 = call zeroext i8 @bb_has_eh_pred(%struct.basic_block_def* %17), !dbg !3960
  %tobool = icmp ne i8 %call13, 0, !dbg !3960
  br i1 %tobool, label %if.then, label %if.end24, !dbg !3961

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %union.df_ref_d*** %def_rec, metadata !3962, metadata !DIExpression()), !dbg !3964
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %bb8, align 8, !dbg !3965
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %18, i32 0, i32 9, !dbg !3967
  %19 = load i32, i32* %index, align 8, !dbg !3967
  %call14 = call %union.df_ref_d** @df_get_artificial_defs(i32 %19), !dbg !3968
  store %union.df_ref_d** %call14, %union.df_ref_d*** %def_rec, align 8, !dbg !3969
  br label %for.cond15, !dbg !3970

for.cond15:                                       ; preds = %for.inc, %if.then
  %20 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3971
  %21 = load %union.df_ref_d*, %union.df_ref_d** %20, align 8, !dbg !3973
  %tobool16 = icmp ne %union.df_ref_d* %21, null, !dbg !3974
  br i1 %tobool16, label %for.body17, label %for.end, !dbg !3974

for.body17:                                       ; preds = %for.cond15
  call void @llvm.dbg.declare(metadata %union.df_ref_d** %def, metadata !3975, metadata !DIExpression()), !dbg !3977
  %22 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3978
  %23 = load %union.df_ref_d*, %union.df_ref_d** %22, align 8, !dbg !3979
  store %union.df_ref_d* %23, %union.df_ref_d** %def, align 8, !dbg !3977
  %24 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !3980
  %base = bitcast %union.df_ref_d* %24 to %struct.df_base_ref*, !dbg !3980
  %25 = bitcast %struct.df_base_ref* %base to i32*, !dbg !3980
  %bf.load = load i32, i32* %25, align 8, !dbg !3980
  %bf.ashr = ashr i32 %bf.load, 16, !dbg !3980
  %and = and i32 %bf.ashr, 2, !dbg !3982
  %tobool18 = icmp ne i32 %and, 0, !dbg !3982
  br i1 %tobool18, label %if.then19, label %if.end, !dbg !3983

if.then19:                                        ; preds = %for.body17
  %26 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !3984
  %base20 = bitcast %union.df_ref_d* %26 to %struct.df_base_ref*, !dbg !3984
  %reg = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base20, i32 0, i32 1, !dbg !3984
  %27 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !3984
  %28 = load %union.df_ref_d*, %union.df_ref_d** %def, align 8, !dbg !3985
  %base21 = bitcast %union.df_ref_d* %28 to %struct.df_base_ref*, !dbg !3985
  %reg22 = getelementptr inbounds %struct.df_base_ref, %struct.df_base_ref* %base21, i32 0, i32 1, !dbg !3985
  %29 = load %struct.rtx_def*, %struct.rtx_def** %reg22, align 8, !dbg !3985
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !3985
  %bf.load23 = load i32, i32* %30, align 8, !dbg !3985
  %bf.lshr = lshr i32 %bf.load23, 16, !dbg !3985
  %bf.clear = and i32 %bf.lshr, 255, !dbg !3985
  call void @invalidate(%struct.rtx_def* %27, i32 %bf.clear), !dbg !3986
  br label %if.end, !dbg !3986

if.end:                                           ; preds = %if.then19, %for.body17
  br label %for.inc, !dbg !3987

for.inc:                                          ; preds = %if.end
  %31 = load %union.df_ref_d**, %union.df_ref_d*** %def_rec, align 8, !dbg !3988
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %31, i32 1, !dbg !3988
  store %union.df_ref_d** %incdec.ptr, %union.df_ref_d*** %def_rec, align 8, !dbg !3988
  br label %for.cond15, !dbg !3989, !llvm.loop !3990

for.end:                                          ; preds = %for.cond15
  br label %if.end24, !dbg !3992

if.end24:                                         ; preds = %for.end, %for.body
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %bb8, align 8, !dbg !3993
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %32, i32 0, i32 7, !dbg !3993
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3993
  %33 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3993
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %33, i32 0, i32 0, !dbg !3993
  %34 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !3993
  store %struct.rtx_def* %34, %struct.rtx_def** %insn, align 8, !dbg !3993
  br label %for.cond25, !dbg !3993

for.cond25:                                       ; preds = %for.inc132, %if.end24
  %35 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3995
  %tobool26 = icmp ne %struct.rtx_def* %35, null, !dbg !3995
  br i1 %tobool26, label %land.rhs, label %land.end, !dbg !3995

land.rhs:                                         ; preds = %for.cond25
  %36 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3995
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %bb8, align 8, !dbg !3995
  %il27 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %37, i32 0, i32 7, !dbg !3995
  %rtl28 = bitcast %union.basic_block_il_dependent* %il27 to %struct.rtl_bb_info**, !dbg !3995
  %38 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl28, align 8, !dbg !3995
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %38, i32 0, i32 1, !dbg !3995
  %39 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3995
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !3995
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3995
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !3995
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**, !dbg !3995
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3995
  %cmp30 = icmp ne %struct.rtx_def* %36, %40, !dbg !3995
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond25
  %41 = phi i1 [ false, %for.cond25 ], [ %cmp30, %land.rhs ], !dbg !3997
  br i1 %41, label %for.body32, label %for.end137, !dbg !3993

for.body32:                                       ; preds = %land.end
  %42 = load %struct.basic_block_def*, %struct.basic_block_def** %bb8, align 8, !dbg !3998
  %call33 = call zeroext i8 @optimize_bb_for_speed_p(%struct.basic_block_def* %42), !dbg !4000
  store i8 %call33, i8* @optimize_this_for_speed_p, align 1, !dbg !4001
  %43 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4002
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !4002
  %bf.load34 = load i32, i32* %44, align 8, !dbg !4002
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !4002
  %cmp36 = icmp eq i32 %bf.clear35, 8, !dbg !4002
  br i1 %cmp36, label %land.lhs.true, label %lor.lhs.false, !dbg !4002

lor.lhs.false:                                    ; preds = %for.body32
  %45 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4002
  %46 = bitcast %struct.rtx_def* %45 to i32*, !dbg !4002
  %bf.load38 = load i32, i32* %46, align 8, !dbg !4002
  %bf.clear39 = and i32 %bf.load38, 65535, !dbg !4002
  %cmp40 = icmp eq i32 %bf.clear39, 7, !dbg !4002
  br i1 %cmp40, label %land.lhs.true, label %lor.lhs.false42, !dbg !4002

lor.lhs.false42:                                  ; preds = %lor.lhs.false
  %47 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4002
  %48 = bitcast %struct.rtx_def* %47 to i32*, !dbg !4002
  %bf.load43 = load i32, i32* %48, align 8, !dbg !4002
  %bf.clear44 = and i32 %bf.load43, 65535, !dbg !4002
  %cmp45 = icmp eq i32 %bf.clear44, 9, !dbg !4002
  br i1 %cmp45, label %land.lhs.true, label %lor.lhs.false47, !dbg !4002

lor.lhs.false47:                                  ; preds = %lor.lhs.false42
  %49 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4002
  %50 = bitcast %struct.rtx_def* %49 to i32*, !dbg !4002
  %bf.load48 = load i32, i32* %50, align 8, !dbg !4002
  %bf.clear49 = and i32 %bf.load48, 65535, !dbg !4002
  %cmp50 = icmp eq i32 %bf.clear49, 10, !dbg !4002
  br i1 %cmp50, label %land.lhs.true, label %if.end61, !dbg !4002

land.lhs.true:                                    ; preds = %lor.lhs.false47, %lor.lhs.false42, %lor.lhs.false, %for.body32
  %51 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4002
  %52 = bitcast %struct.rtx_def* %51 to i32*, !dbg !4002
  %bf.load52 = load i32, i32* %52, align 8, !dbg !4002
  %bf.clear53 = and i32 %bf.load52, 65535, !dbg !4002
  %cmp54 = icmp eq i32 %bf.clear53, 7, !dbg !4002
  br i1 %cmp54, label %if.end61, label %land.lhs.true56, !dbg !4004

land.lhs.true56:                                  ; preds = %land.lhs.true
  %53 = load i32, i32* %num_insns, align 4, !dbg !4005
  %inc = add nsw i32 %53, 1, !dbg !4005
  store i32 %inc, i32* %num_insns, align 4, !dbg !4005
  %54 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !4006
  %arrayidx57 = getelementptr inbounds %struct.param_info, %struct.param_info* %54, i64 58, !dbg !4006
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %arrayidx57, i32 0, i32 1, !dbg !4006
  %55 = load i32, i32* %value, align 8, !dbg !4006
  %cmp58 = icmp sgt i32 %53, %55, !dbg !4007
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !4008

if.then60:                                        ; preds = %land.lhs.true56
  call void @flush_hash_table(), !dbg !4009
  store i32 0, i32* %num_insns, align 4, !dbg !4011
  br label %if.end61, !dbg !4012

if.end61:                                         ; preds = %if.then60, %land.lhs.true56, %land.lhs.true, %lor.lhs.false47
  %56 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4013
  %57 = bitcast %struct.rtx_def* %56 to i32*, !dbg !4013
  %bf.load62 = load i32, i32* %57, align 8, !dbg !4013
  %bf.clear63 = and i32 %bf.load62, 65535, !dbg !4013
  %cmp64 = icmp eq i32 %bf.clear63, 8, !dbg !4013
  br i1 %cmp64, label %if.then81, label %lor.lhs.false66, !dbg !4013

lor.lhs.false66:                                  ; preds = %if.end61
  %58 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4013
  %59 = bitcast %struct.rtx_def* %58 to i32*, !dbg !4013
  %bf.load67 = load i32, i32* %59, align 8, !dbg !4013
  %bf.clear68 = and i32 %bf.load67, 65535, !dbg !4013
  %cmp69 = icmp eq i32 %bf.clear68, 7, !dbg !4013
  br i1 %cmp69, label %if.then81, label %lor.lhs.false71, !dbg !4013

lor.lhs.false71:                                  ; preds = %lor.lhs.false66
  %60 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4013
  %61 = bitcast %struct.rtx_def* %60 to i32*, !dbg !4013
  %bf.load72 = load i32, i32* %61, align 8, !dbg !4013
  %bf.clear73 = and i32 %bf.load72, 65535, !dbg !4013
  %cmp74 = icmp eq i32 %bf.clear73, 9, !dbg !4013
  br i1 %cmp74, label %if.then81, label %lor.lhs.false76, !dbg !4013

lor.lhs.false76:                                  ; preds = %lor.lhs.false71
  %62 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4013
  %63 = bitcast %struct.rtx_def* %62 to i32*, !dbg !4013
  %bf.load77 = load i32, i32* %63, align 8, !dbg !4013
  %bf.clear78 = and i32 %bf.load77, 65535, !dbg !4013
  %cmp79 = icmp eq i32 %bf.clear78, 10, !dbg !4013
  br i1 %cmp79, label %if.then81, label %if.end131, !dbg !4015

if.then81:                                        ; preds = %lor.lhs.false76, %lor.lhs.false71, %lor.lhs.false66, %if.end61
  %64 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4016
  %u82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1, !dbg !4016
  %fld83 = bitcast %union.u* %u82 to [1 x %union.rtunion_def]*, !dbg !4016
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld83, i64 0, i64 7, !dbg !4016
  %rt_rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**, !dbg !4016
  %65 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx85, align 8, !dbg !4016
  %tobool86 = icmp ne %struct.rtx_def* %65, null, !dbg !4016
  br i1 %tobool86, label %if.then87, label %if.end100, !dbg !4019

if.then87:                                        ; preds = %if.then81
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !4020, metadata !DIExpression()), !dbg !4022
  store i8 0, i8* %changed, align 1, !dbg !4022
  %66 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4023
  %u88 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1, !dbg !4023
  %fld89 = bitcast %union.u* %u88 to [1 x %union.rtunion_def]*, !dbg !4023
  %arrayidx90 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld89, i64 0, i64 7, !dbg !4023
  %rt_rtx91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**, !dbg !4023
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx91, align 8, !dbg !4023
  %call92 = call %struct.rtx_def* @cse_process_notes(%struct.rtx_def* %67, %struct.rtx_def* null, i8* %changed), !dbg !4024
  %68 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4025
  %u93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1, !dbg !4025
  %fld94 = bitcast %union.u* %u93 to [1 x %union.rtunion_def]*, !dbg !4025
  %arrayidx95 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld94, i64 0, i64 7, !dbg !4025
  %rt_rtx96 = bitcast %union.rtunion_def* %arrayidx95 to %struct.rtx_def**, !dbg !4025
  store %struct.rtx_def* %call92, %struct.rtx_def** %rt_rtx96, align 8, !dbg !4026
  %69 = load i8, i8* %changed, align 1, !dbg !4027
  %tobool97 = icmp ne i8 %69, 0, !dbg !4027
  br i1 %tobool97, label %if.then98, label %if.end99, !dbg !4029

if.then98:                                        ; preds = %if.then87
  %70 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4030
  call void @df_notes_rescan(%struct.rtx_def* %70), !dbg !4031
  br label %if.end99, !dbg !4031

if.end99:                                         ; preds = %if.then98, %if.then87
  br label %if.end100, !dbg !4032

if.end100:                                        ; preds = %if.end99, %if.then81
  %71 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4033
  call void @cse_insn(%struct.rtx_def* %71), !dbg !4034
  %72 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4035
  %73 = bitcast %struct.rtx_def* %72 to i32*, !dbg !4035
  %bf.load101 = load i32, i32* %73, align 8, !dbg !4035
  %bf.clear102 = and i32 %bf.load101, 65535, !dbg !4035
  %cmp103 = icmp eq i32 %bf.clear102, 8, !dbg !4035
  br i1 %cmp103, label %land.lhs.true120, label %lor.lhs.false105, !dbg !4035

lor.lhs.false105:                                 ; preds = %if.end100
  %74 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4035
  %75 = bitcast %struct.rtx_def* %74 to i32*, !dbg !4035
  %bf.load106 = load i32, i32* %75, align 8, !dbg !4035
  %bf.clear107 = and i32 %bf.load106, 65535, !dbg !4035
  %cmp108 = icmp eq i32 %bf.clear107, 7, !dbg !4035
  br i1 %cmp108, label %land.lhs.true120, label %lor.lhs.false110, !dbg !4035

lor.lhs.false110:                                 ; preds = %lor.lhs.false105
  %76 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4035
  %77 = bitcast %struct.rtx_def* %76 to i32*, !dbg !4035
  %bf.load111 = load i32, i32* %77, align 8, !dbg !4035
  %bf.clear112 = and i32 %bf.load111, 65535, !dbg !4035
  %cmp113 = icmp eq i32 %bf.clear112, 9, !dbg !4035
  br i1 %cmp113, label %land.lhs.true120, label %lor.lhs.false115, !dbg !4035

lor.lhs.false115:                                 ; preds = %lor.lhs.false110
  %78 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4035
  %79 = bitcast %struct.rtx_def* %78 to i32*, !dbg !4035
  %bf.load116 = load i32, i32* %79, align 8, !dbg !4035
  %bf.clear117 = and i32 %bf.load116, 65535, !dbg !4035
  %cmp118 = icmp eq i32 %bf.clear117, 10, !dbg !4035
  br i1 %cmp118, label %land.lhs.true120, label %if.end130, !dbg !4037

land.lhs.true120:                                 ; preds = %lor.lhs.false115, %lor.lhs.false110, %lor.lhs.false105, %if.end100
  %80 = load i8, i8* @recorded_label_ref, align 1, !dbg !4038
  %tobool121 = icmp ne i8 %80, 0, !dbg !4038
  br i1 %tobool121, label %if.end130, label %land.lhs.true122, !dbg !4039

land.lhs.true122:                                 ; preds = %land.lhs.true120
  %81 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4040
  %u123 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i32 0, i32 1, !dbg !4040
  %fld124 = bitcast %union.u* %u123 to [1 x %union.rtunion_def]*, !dbg !4040
  %arrayidx125 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld124, i64 0, i64 5, !dbg !4040
  %rt_rtx126 = bitcast %union.rtunion_def* %arrayidx125 to %struct.rtx_def**, !dbg !4040
  %82 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4041
  %83 = bitcast %struct.rtx_def* %82 to i8*, !dbg !4042
  %call127 = call i32 @for_each_rtx(%struct.rtx_def** %rt_rtx126, i32 (%struct.rtx_def**, i8*)* @check_for_label_ref, i8* %83), !dbg !4043
  %tobool128 = icmp ne i32 %call127, 0, !dbg !4043
  br i1 %tobool128, label %if.then129, label %if.end130, !dbg !4044

if.then129:                                       ; preds = %land.lhs.true122
  store i8 1, i8* @recorded_label_ref, align 1, !dbg !4045
  br label %if.end130, !dbg !4046

if.end130:                                        ; preds = %if.then129, %land.lhs.true122, %land.lhs.true120, %lor.lhs.false115
  br label %if.end131, !dbg !4047

if.end131:                                        ; preds = %if.end130, %lor.lhs.false76
  br label %for.inc132, !dbg !4048

for.inc132:                                       ; preds = %if.end131
  %84 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3995
  %u133 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1, !dbg !3995
  %fld134 = bitcast %union.u* %u133 to [1 x %union.rtunion_def]*, !dbg !3995
  %arrayidx135 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld134, i64 0, i64 2, !dbg !3995
  %rt_rtx136 = bitcast %union.rtunion_def* %arrayidx135 to %struct.rtx_def**, !dbg !3995
  %85 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx136, align 8, !dbg !3995
  store %struct.rtx_def* %85, %struct.rtx_def** %insn, align 8, !dbg !3995
  br label %for.cond25, !dbg !3995, !llvm.loop !4049

for.end137:                                       ; preds = %land.end
  %86 = load i32, i32* @flag_non_call_exceptions, align 4, !dbg !4051
  %tobool138 = icmp ne i32 %86, 0, !dbg !4051
  br i1 %tobool138, label %land.lhs.true139, label %if.end148, !dbg !4053

land.lhs.true139:                                 ; preds = %for.end137
  %87 = load %struct.basic_block_def*, %struct.basic_block_def** %bb8, align 8, !dbg !4054
  %call140 = call zeroext i8 @have_eh_succ_edges(%struct.basic_block_def* %87), !dbg !4055
  %conv141 = zext i8 %call140 to i32, !dbg !4055
  %tobool142 = icmp ne i32 %conv141, 0, !dbg !4055
  br i1 %tobool142, label %if.then143, label %if.end148, !dbg !4056

if.then143:                                       ; preds = %land.lhs.true139
  %88 = load %struct.basic_block_def*, %struct.basic_block_def** %bb8, align 8, !dbg !4057
  %call144 = call zeroext i8 @purge_dead_edges(%struct.basic_block_def* %88), !dbg !4058
  %conv145 = zext i8 %call144 to i32, !dbg !4058
  %89 = load i8, i8* @cse_cfg_altered, align 1, !dbg !4059
  %conv146 = zext i8 %89 to i32, !dbg !4059
  %or = or i32 %conv146, %conv145, !dbg !4059
  %conv147 = trunc i32 %or to i8, !dbg !4059
  store i8 %conv147, i8* @cse_cfg_altered, align 1, !dbg !4059
  br label %if.end148, !dbg !4060

if.end148:                                        ; preds = %if.then143, %land.lhs.true139, %for.end137
  %90 = load i32, i32* %path_entry, align 4, !dbg !4061
  %91 = load i32, i32* %path_size, align 4, !dbg !4063
  %sub149 = sub nsw i32 %91, 1, !dbg !4064
  %cmp150 = icmp slt i32 %90, %sub149, !dbg !4065
  br i1 %cmp150, label %if.then152, label %if.end174, !dbg !4066

if.then152:                                       ; preds = %if.end148
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %next_bb, metadata !4067, metadata !DIExpression()), !dbg !4069
  %92 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %ebb_data.addr, align 8, !dbg !4070
  %path153 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %92, i32 0, i32 2, !dbg !4071
  %93 = load %struct.branch_path*, %struct.branch_path** %path153, align 8, !dbg !4071
  %94 = load i32, i32* %path_entry, align 4, !dbg !4072
  %add = add nsw i32 %94, 1, !dbg !4073
  %idxprom154 = sext i32 %add to i64, !dbg !4070
  %arrayidx155 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %93, i64 %idxprom154, !dbg !4070
  %bb156 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx155, i32 0, i32 0, !dbg !4074
  %95 = load %struct.basic_block_def*, %struct.basic_block_def** %bb156, align 8, !dbg !4074
  store %struct.basic_block_def* %95, %struct.basic_block_def** %next_bb, align 8, !dbg !4069
  %96 = load %struct.basic_block_def*, %struct.basic_block_def** %bb8, align 8, !dbg !4075
  %97 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !4077
  %call157 = call %struct.edge_def* @find_edge(%struct.basic_block_def* %96, %struct.basic_block_def* %97), !dbg !4078
  %tobool158 = icmp ne %struct.edge_def* %call157, null, !dbg !4078
  br i1 %tobool158, label %if.end173, label %if.then159, !dbg !4079

if.then159:                                       ; preds = %if.then152
  br label %do.body, !dbg !4080

do.body:                                          ; preds = %do.cond, %if.then159
  %98 = load i32, i32* %path_size, align 4, !dbg !4082
  %dec = add nsw i32 %98, -1, !dbg !4082
  store i32 %dec, i32* %path_size, align 4, !dbg !4082
  %99 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** @cse_visited_basic_blocks, align 8, !dbg !4084
  %100 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %ebb_data.addr, align 8, !dbg !4085
  %path160 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %100, i32 0, i32 2, !dbg !4086
  %101 = load %struct.branch_path*, %struct.branch_path** %path160, align 8, !dbg !4086
  %102 = load i32, i32* %path_size, align 4, !dbg !4087
  %idxprom161 = sext i32 %102 to i64, !dbg !4085
  %arrayidx162 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %101, i64 %idxprom161, !dbg !4085
  %bb163 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx162, i32 0, i32 0, !dbg !4088
  %103 = load %struct.basic_block_def*, %struct.basic_block_def** %bb163, align 8, !dbg !4088
  %index164 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %103, i32 0, i32 9, !dbg !4089
  %104 = load i32, i32* %index164, align 8, !dbg !4089
  call void @RESET_BIT(%struct.simple_bitmap_def* %99, i32 %104), !dbg !4090
  %105 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %ebb_data.addr, align 8, !dbg !4091
  %path165 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %105, i32 0, i32 2, !dbg !4092
  %106 = load %struct.branch_path*, %struct.branch_path** %path165, align 8, !dbg !4092
  %107 = load i32, i32* %path_size, align 4, !dbg !4093
  %idxprom166 = sext i32 %107 to i64, !dbg !4091
  %arrayidx167 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %106, i64 %idxprom166, !dbg !4091
  %bb168 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx167, i32 0, i32 0, !dbg !4094
  store %struct.basic_block_def* null, %struct.basic_block_def** %bb168, align 8, !dbg !4095
  br label %do.cond, !dbg !4096

do.cond:                                          ; preds = %do.body
  %108 = load i32, i32* %path_size, align 4, !dbg !4097
  %sub169 = sub nsw i32 %108, 1, !dbg !4098
  %109 = load i32, i32* %path_entry, align 4, !dbg !4099
  %cmp170 = icmp ne i32 %sub169, %109, !dbg !4100
  br i1 %cmp170, label %do.body, label %do.end, !dbg !4096, !llvm.loop !4101

do.end:                                           ; preds = %do.cond
  %110 = load i32, i32* %path_size, align 4, !dbg !4103
  %111 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %ebb_data.addr, align 8, !dbg !4104
  %path_size172 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %111, i32 0, i32 1, !dbg !4105
  store i32 %110, i32* %path_size172, align 4, !dbg !4106
  br label %if.end173, !dbg !4107

if.end173:                                        ; preds = %do.end, %if.then152
  br label %if.end174, !dbg !4108

if.end174:                                        ; preds = %if.end173, %if.end148
  %112 = load %struct.basic_block_def*, %struct.basic_block_def** %bb8, align 8, !dbg !4109
  %il175 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %112, i32 0, i32 7, !dbg !4109
  %rtl176 = bitcast %union.basic_block_il_dependent* %il175 to %struct.rtl_bb_info**, !dbg !4109
  %113 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl176, align 8, !dbg !4109
  %end_177 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %113, i32 0, i32 1, !dbg !4109
  %114 = load %struct.rtx_def*, %struct.rtx_def** %end_177, align 8, !dbg !4109
  store %struct.rtx_def* %114, %struct.rtx_def** %insn, align 8, !dbg !4110
  %115 = load i32, i32* %path_entry, align 4, !dbg !4111
  %116 = load i32, i32* %path_size, align 4, !dbg !4113
  %sub178 = sub nsw i32 %116, 1, !dbg !4114
  %cmp179 = icmp slt i32 %115, %sub178, !dbg !4115
  br i1 %cmp179, label %land.lhs.true181, label %if.end270, !dbg !4116

land.lhs.true181:                                 ; preds = %if.end174
  %117 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4117
  %118 = bitcast %struct.rtx_def* %117 to i32*, !dbg !4117
  %bf.load182 = load i32, i32* %118, align 8, !dbg !4117
  %bf.clear183 = and i32 %bf.load182, 65535, !dbg !4117
  %cmp184 = icmp eq i32 %bf.clear183, 9, !dbg !4117
  br i1 %cmp184, label %land.lhs.true186, label %if.end270, !dbg !4118

land.lhs.true186:                                 ; preds = %land.lhs.true181
  %119 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4119
  %120 = bitcast %struct.rtx_def* %119 to i32*, !dbg !4119
  %bf.load187 = load i32, i32* %120, align 8, !dbg !4119
  %bf.clear188 = and i32 %bf.load187, 65535, !dbg !4119
  %cmp189 = icmp eq i32 %bf.clear188, 8, !dbg !4119
  br i1 %cmp189, label %cond.true, label %lor.lhs.false191, !dbg !4119

lor.lhs.false191:                                 ; preds = %land.lhs.true186
  %121 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4119
  %122 = bitcast %struct.rtx_def* %121 to i32*, !dbg !4119
  %bf.load192 = load i32, i32* %122, align 8, !dbg !4119
  %bf.clear193 = and i32 %bf.load192, 65535, !dbg !4119
  %cmp194 = icmp eq i32 %bf.clear193, 7, !dbg !4119
  br i1 %cmp194, label %cond.true, label %lor.lhs.false196, !dbg !4119

lor.lhs.false196:                                 ; preds = %lor.lhs.false191
  %123 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4119
  %124 = bitcast %struct.rtx_def* %123 to i32*, !dbg !4119
  %bf.load197 = load i32, i32* %124, align 8, !dbg !4119
  %bf.clear198 = and i32 %bf.load197, 65535, !dbg !4119
  %cmp199 = icmp eq i32 %bf.clear198, 9, !dbg !4119
  br i1 %cmp199, label %cond.true, label %lor.lhs.false201, !dbg !4119

lor.lhs.false201:                                 ; preds = %lor.lhs.false196
  %125 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4119
  %126 = bitcast %struct.rtx_def* %125 to i32*, !dbg !4119
  %bf.load202 = load i32, i32* %126, align 8, !dbg !4119
  %bf.clear203 = and i32 %bf.load202, 65535, !dbg !4119
  %cmp204 = icmp eq i32 %bf.clear203, 10, !dbg !4119
  br i1 %cmp204, label %cond.true, label %cond.false226, !dbg !4120

cond.true:                                        ; preds = %lor.lhs.false201, %lor.lhs.false196, %lor.lhs.false191, %land.lhs.true186
  %127 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4119
  %u206 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %127, i32 0, i32 1, !dbg !4119
  %fld207 = bitcast %union.u* %u206 to [1 x %union.rtunion_def]*, !dbg !4119
  %arrayidx208 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld207, i64 0, i64 5, !dbg !4119
  %rt_rtx209 = bitcast %union.rtunion_def* %arrayidx208 to %struct.rtx_def**, !dbg !4119
  %128 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx209, align 8, !dbg !4119
  %129 = bitcast %struct.rtx_def* %128 to i32*, !dbg !4119
  %bf.load210 = load i32, i32* %129, align 8, !dbg !4119
  %bf.clear211 = and i32 %bf.load210, 65535, !dbg !4119
  %cmp212 = icmp eq i32 %bf.clear211, 23, !dbg !4119
  br i1 %cmp212, label %cond.true214, label %cond.false, !dbg !4119

cond.true214:                                     ; preds = %cond.true
  %130 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4119
  %u215 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1, !dbg !4119
  %fld216 = bitcast %union.u* %u215 to [1 x %union.rtunion_def]*, !dbg !4119
  %arrayidx217 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld216, i64 0, i64 5, !dbg !4119
  %rt_rtx218 = bitcast %union.rtunion_def* %arrayidx217 to %struct.rtx_def**, !dbg !4119
  %131 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx218, align 8, !dbg !4119
  %tobool219 = icmp ne %struct.rtx_def* %131, null, !dbg !4119
  br i1 %tobool219, label %land.lhs.true227, label %if.end270, !dbg !4119

cond.false:                                       ; preds = %cond.true
  %132 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4119
  %133 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4119
  %u220 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %133, i32 0, i32 1, !dbg !4119
  %fld221 = bitcast %union.u* %u220 to [1 x %union.rtunion_def]*, !dbg !4119
  %arrayidx222 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld221, i64 0, i64 5, !dbg !4119
  %rt_rtx223 = bitcast %union.rtunion_def* %arrayidx222 to %struct.rtx_def**, !dbg !4119
  %134 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx223, align 8, !dbg !4119
  %call224 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %132, %struct.rtx_def* %134), !dbg !4119
  %tobool225 = icmp ne %struct.rtx_def* %call224, null, !dbg !4119
  br i1 %tobool225, label %land.lhs.true227, label %if.end270, !dbg !4119

cond.false226:                                    ; preds = %lor.lhs.false201
  br i1 false, label %land.lhs.true227, label %if.end270, !dbg !4120

land.lhs.true227:                                 ; preds = %cond.false226, %cond.false, %cond.true214
  %135 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4121
  %call228 = call i32 @any_condjump_p(%struct.rtx_def* %135), !dbg !4122
  %tobool229 = icmp ne i32 %call228, 0, !dbg !4122
  br i1 %tobool229, label %if.then230, label %if.end270, !dbg !4123

if.then230:                                       ; preds = %land.lhs.true227
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %next_bb231, metadata !4124, metadata !DIExpression()), !dbg !4126
  %136 = load %struct.cse_basic_block_data*, %struct.cse_basic_block_data** %ebb_data.addr, align 8, !dbg !4127
  %path232 = getelementptr inbounds %struct.cse_basic_block_data, %struct.cse_basic_block_data* %136, i32 0, i32 2, !dbg !4128
  %137 = load %struct.branch_path*, %struct.branch_path** %path232, align 8, !dbg !4128
  %138 = load i32, i32* %path_entry, align 4, !dbg !4129
  %add233 = add nsw i32 %138, 1, !dbg !4130
  %idxprom234 = sext i32 %add233 to i64, !dbg !4127
  %arrayidx235 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %137, i64 %idxprom234, !dbg !4127
  %bb236 = getelementptr inbounds %struct.branch_path, %struct.branch_path* %arrayidx235, i32 0, i32 0, !dbg !4131
  %139 = load %struct.basic_block_def*, %struct.basic_block_def** %bb236, align 8, !dbg !4131
  store %struct.basic_block_def* %139, %struct.basic_block_def** %next_bb231, align 8, !dbg !4126
  call void @llvm.dbg.declare(metadata i8* %taken, metadata !4132, metadata !DIExpression()), !dbg !4133
  %140 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb231, align 8, !dbg !4134
  %141 = load %struct.basic_block_def*, %struct.basic_block_def** %bb8, align 8, !dbg !4135
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %141, i32 0, i32 1, !dbg !4135
  %142 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4135
  %tobool237 = icmp ne %struct.VEC_edge_gc* %142, null, !dbg !4135
  br i1 %tobool237, label %cond.true238, label %cond.false241, !dbg !4135

cond.true238:                                     ; preds = %if.then230
  %143 = load %struct.basic_block_def*, %struct.basic_block_def** %bb8, align 8, !dbg !4135
  %succs239 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %143, i32 0, i32 1, !dbg !4135
  %144 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs239, align 8, !dbg !4135
  %base240 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %144, i32 0, i32 0, !dbg !4135
  br label %cond.end, !dbg !4135

cond.false241:                                    ; preds = %if.then230
  br label %cond.end, !dbg !4135

cond.end:                                         ; preds = %cond.false241, %cond.true238
  %cond = phi %struct.VEC_edge_base* [ %base240, %cond.true238 ], [ null, %cond.false241 ], !dbg !4135
  %call242 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 0), !dbg !4135
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call242, i32 0, i32 7, !dbg !4135
  %145 = load i32, i32* %flags, align 8, !dbg !4135
  %and243 = and i32 %145, 1, !dbg !4135
  %tobool244 = icmp ne i32 %and243, 0, !dbg !4135
  br i1 %tobool244, label %cond.true245, label %cond.false255, !dbg !4135

cond.true245:                                     ; preds = %cond.end
  %146 = load %struct.basic_block_def*, %struct.basic_block_def** %bb8, align 8, !dbg !4135
  %succs246 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %146, i32 0, i32 1, !dbg !4135
  %147 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs246, align 8, !dbg !4135
  %tobool247 = icmp ne %struct.VEC_edge_gc* %147, null, !dbg !4135
  br i1 %tobool247, label %cond.true248, label %cond.false251, !dbg !4135

cond.true248:                                     ; preds = %cond.true245
  %148 = load %struct.basic_block_def*, %struct.basic_block_def** %bb8, align 8, !dbg !4135
  %succs249 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %148, i32 0, i32 1, !dbg !4135
  %149 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs249, align 8, !dbg !4135
  %base250 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %149, i32 0, i32 0, !dbg !4135
  br label %cond.end252, !dbg !4135

cond.false251:                                    ; preds = %cond.true245
  br label %cond.end252, !dbg !4135

cond.end252:                                      ; preds = %cond.false251, %cond.true248
  %cond253 = phi %struct.VEC_edge_base* [ %base250, %cond.true248 ], [ null, %cond.false251 ], !dbg !4135
  %call254 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond253, i32 1), !dbg !4135
  br label %cond.end265, !dbg !4135

cond.false255:                                    ; preds = %cond.end
  %150 = load %struct.basic_block_def*, %struct.basic_block_def** %bb8, align 8, !dbg !4135
  %succs256 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %150, i32 0, i32 1, !dbg !4135
  %151 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs256, align 8, !dbg !4135
  %tobool257 = icmp ne %struct.VEC_edge_gc* %151, null, !dbg !4135
  br i1 %tobool257, label %cond.true258, label %cond.false261, !dbg !4135

cond.true258:                                     ; preds = %cond.false255
  %152 = load %struct.basic_block_def*, %struct.basic_block_def** %bb8, align 8, !dbg !4135
  %succs259 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %152, i32 0, i32 1, !dbg !4135
  %153 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs259, align 8, !dbg !4135
  %base260 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %153, i32 0, i32 0, !dbg !4135
  br label %cond.end262, !dbg !4135

cond.false261:                                    ; preds = %cond.false255
  br label %cond.end262, !dbg !4135

cond.end262:                                      ; preds = %cond.false261, %cond.true258
  %cond263 = phi %struct.VEC_edge_base* [ %base260, %cond.true258 ], [ null, %cond.false261 ], !dbg !4135
  %call264 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond263, i32 0), !dbg !4135
  br label %cond.end265, !dbg !4135

cond.end265:                                      ; preds = %cond.end262, %cond.end252
  %cond266 = phi %struct.edge_def* [ %call254, %cond.end252 ], [ %call264, %cond.end262 ], !dbg !4135
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond266, i32 0, i32 1, !dbg !4136
  %154 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4136
  %cmp267 = icmp eq %struct.basic_block_def* %140, %154, !dbg !4137
  %conv268 = zext i1 %cmp267 to i32, !dbg !4137
  %conv269 = trunc i32 %conv268 to i8, !dbg !4138
  store i8 %conv269, i8* %taken, align 1, !dbg !4133
  %155 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4139
  %156 = load i8, i8* %taken, align 1, !dbg !4140
  call void @record_jump_equiv(%struct.rtx_def* %155, i8 zeroext %156), !dbg !4141
  br label %if.end270, !dbg !4142

if.end270:                                        ; preds = %cond.end265, %land.lhs.true227, %cond.false226, %cond.false, %cond.true214, %land.lhs.true181, %if.end174
  br label %for.inc271, !dbg !4143

for.inc271:                                       ; preds = %if.end270
  %157 = load i32, i32* %path_entry, align 4, !dbg !4144
  %inc272 = add nsw i32 %157, 1, !dbg !4144
  store i32 %inc272, i32* %path_entry, align 4, !dbg !4144
  br label %for.cond, !dbg !4145, !llvm.loop !4146

for.end273:                                       ; preds = %for.cond
  %158 = load i32, i32* @next_qty, align 4, !dbg !4148
  %159 = load i32, i32* @max_qty, align 4, !dbg !4148
  %cmp274 = icmp sle i32 %158, %159, !dbg !4148
  br i1 %cmp274, label %cond.false277, label %cond.true276, !dbg !4148

cond.true276:                                     ; preds = %for.end273
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32 6442, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)), !dbg !4148
  br label %cond.end278, !dbg !4148

cond.false277:                                    ; preds = %for.end273
  br label %cond.end278, !dbg !4148

cond.end278:                                      ; preds = %cond.false277, %cond.true276
  %cond279 = phi i32 [ 0, %cond.true276 ], [ 0, %cond.false277 ], !dbg !4148
  %160 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8, !dbg !4149
  %161 = bitcast %struct.qty_table_elem* %160 to i8*, !dbg !4149
  call void @free(i8* %161), !dbg !4150
  ret void, !dbg !4151
}

declare dso_local void @end_alias_analysis() #2

declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @delete_trivially_dead_insns(%struct.rtx_def* %insns, i32 %nreg) #0 !dbg !4152 {
entry:
  %insns.addr = alloca %struct.rtx_def*, align 8
  %nreg.addr = alloca i32, align 4
  %counts = alloca i32*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %prev = alloca %struct.rtx_def*, align 8
  %ndead = alloca i32, align 4
  %live_insn = alloca i32, align 4
  store %struct.rtx_def* %insns, %struct.rtx_def** %insns.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insns.addr, metadata !4153, metadata !DIExpression()), !dbg !4154
  store i32 %nreg, i32* %nreg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nreg.addr, metadata !4155, metadata !DIExpression()), !dbg !4156
  call void @llvm.dbg.declare(metadata i32** %counts, metadata !4157, metadata !DIExpression()), !dbg !4158
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !4159, metadata !DIExpression()), !dbg !4160
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %prev, metadata !4161, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.declare(metadata i32* %ndead, metadata !4163, metadata !DIExpression()), !dbg !4164
  store i32 0, i32* %ndead, align 4, !dbg !4164
  br label %do.body, !dbg !4165

do.body:                                          ; preds = %entry
  %0 = load i8, i8* @timevar_enable, align 1, !dbg !4166
  %tobool = icmp ne i8 %0, 0, !dbg !4166
  br i1 %tobool, label %if.then, label %if.end, !dbg !4169

if.then:                                          ; preds = %do.body
  call void @timevar_push_1(i32 25), !dbg !4166
  br label %if.end, !dbg !4166

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !4169

do.end:                                           ; preds = %if.end
  %1 = load i32, i32* %nreg.addr, align 4, !dbg !4170
  %conv = sext i32 %1 to i64, !dbg !4170
  %call = call i8* @xcalloc(i64 %conv, i64 4), !dbg !4170
  %2 = bitcast i8* %call to i32*, !dbg !4170
  store i32* %2, i32** %counts, align 8, !dbg !4171
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insns.addr, align 8, !dbg !4172
  store %struct.rtx_def* %3, %struct.rtx_def** %insn, align 8, !dbg !4174
  br label %for.cond, !dbg !4175

for.cond:                                         ; preds = %for.inc, %do.end
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4176
  %tobool1 = icmp ne %struct.rtx_def* %4, null, !dbg !4178
  br i1 %tobool1, label %for.body, label %for.end, !dbg !4178

for.body:                                         ; preds = %for.cond
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4179
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !4179
  %bf.load = load i32, i32* %6, align 8, !dbg !4179
  %bf.clear = and i32 %bf.load, 65535, !dbg !4179
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !4179
  br i1 %cmp, label %if.then17, label %lor.lhs.false, !dbg !4179

lor.lhs.false:                                    ; preds = %for.body
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4179
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !4179
  %bf.load3 = load i32, i32* %8, align 8, !dbg !4179
  %bf.clear4 = and i32 %bf.load3, 65535, !dbg !4179
  %cmp5 = icmp eq i32 %bf.clear4, 7, !dbg !4179
  br i1 %cmp5, label %if.then17, label %lor.lhs.false7, !dbg !4179

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4179
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !4179
  %bf.load8 = load i32, i32* %10, align 8, !dbg !4179
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !4179
  %cmp10 = icmp eq i32 %bf.clear9, 9, !dbg !4179
  br i1 %cmp10, label %if.then17, label %lor.lhs.false12, !dbg !4179

lor.lhs.false12:                                  ; preds = %lor.lhs.false7
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4179
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !4179
  %bf.load13 = load i32, i32* %12, align 8, !dbg !4179
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !4179
  %cmp15 = icmp eq i32 %bf.clear14, 10, !dbg !4179
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !4181

if.then17:                                        ; preds = %lor.lhs.false12, %lor.lhs.false7, %lor.lhs.false, %for.body
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4182
  %14 = load i32*, i32** %counts, align 8, !dbg !4183
  call void @count_reg_usage(%struct.rtx_def* %13, i32* %14, %struct.rtx_def* null, i32 1), !dbg !4184
  br label %if.end18, !dbg !4184

if.end18:                                         ; preds = %if.then17, %lor.lhs.false12
  br label %for.inc, !dbg !4179

for.inc:                                          ; preds = %if.end18
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4185
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !4185
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4185
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !4185
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4185
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4185
  store %struct.rtx_def* %16, %struct.rtx_def** %insn, align 8, !dbg !4186
  br label %for.cond, !dbg !4187, !llvm.loop !4188

for.end:                                          ; preds = %for.cond
  %call19 = call %struct.rtx_def* @get_last_insn(), !dbg !4190
  store %struct.rtx_def* %call19, %struct.rtx_def** %insn, align 8, !dbg !4192
  br label %for.cond20, !dbg !4193

for.cond20:                                       ; preds = %for.inc57, %for.end
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4194
  %tobool21 = icmp ne %struct.rtx_def* %17, null, !dbg !4196
  br i1 %tobool21, label %for.body22, label %for.end58, !dbg !4196

for.body22:                                       ; preds = %for.cond20
  call void @llvm.dbg.declare(metadata i32* %live_insn, metadata !4197, metadata !DIExpression()), !dbg !4199
  store i32 0, i32* %live_insn, align 4, !dbg !4199
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4200
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !4200
  %fld24 = bitcast %union.u* %u23 to [1 x %union.rtunion_def]*, !dbg !4200
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i64 0, i64 1, !dbg !4200
  %rt_rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**, !dbg !4200
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx26, align 8, !dbg !4200
  store %struct.rtx_def* %19, %struct.rtx_def** %prev, align 8, !dbg !4201
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4202
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !4202
  %bf.load27 = load i32, i32* %21, align 8, !dbg !4202
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !4202
  %cmp29 = icmp eq i32 %bf.clear28, 8, !dbg !4202
  br i1 %cmp29, label %if.end47, label %lor.lhs.false31, !dbg !4202

lor.lhs.false31:                                  ; preds = %for.body22
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4202
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !4202
  %bf.load32 = load i32, i32* %23, align 8, !dbg !4202
  %bf.clear33 = and i32 %bf.load32, 65535, !dbg !4202
  %cmp34 = icmp eq i32 %bf.clear33, 7, !dbg !4202
  br i1 %cmp34, label %if.end47, label %lor.lhs.false36, !dbg !4202

lor.lhs.false36:                                  ; preds = %lor.lhs.false31
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4202
  %25 = bitcast %struct.rtx_def* %24 to i32*, !dbg !4202
  %bf.load37 = load i32, i32* %25, align 8, !dbg !4202
  %bf.clear38 = and i32 %bf.load37, 65535, !dbg !4202
  %cmp39 = icmp eq i32 %bf.clear38, 9, !dbg !4202
  br i1 %cmp39, label %if.end47, label %lor.lhs.false41, !dbg !4202

lor.lhs.false41:                                  ; preds = %lor.lhs.false36
  %26 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4202
  %27 = bitcast %struct.rtx_def* %26 to i32*, !dbg !4202
  %bf.load42 = load i32, i32* %27, align 8, !dbg !4202
  %bf.clear43 = and i32 %bf.load42, 65535, !dbg !4202
  %cmp44 = icmp eq i32 %bf.clear43, 10, !dbg !4202
  br i1 %cmp44, label %if.end47, label %if.then46, !dbg !4204

if.then46:                                        ; preds = %lor.lhs.false41
  br label %for.inc57, !dbg !4205

if.end47:                                         ; preds = %lor.lhs.false41, %lor.lhs.false36, %lor.lhs.false31, %for.body22
  %28 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4206
  %29 = load i32*, i32** %counts, align 8, !dbg !4207
  %call48 = call zeroext i8 @insn_live_p(%struct.rtx_def* %28, i32* %29), !dbg !4208
  %conv49 = zext i8 %call48 to i32, !dbg !4208
  store i32 %conv49, i32* %live_insn, align 4, !dbg !4209
  %30 = load i32, i32* %live_insn, align 4, !dbg !4210
  %tobool50 = icmp ne i32 %30, 0, !dbg !4210
  br i1 %tobool50, label %if.end56, label %land.lhs.true, !dbg !4212

land.lhs.true:                                    ; preds = %if.end47
  %call51 = call zeroext i8 @dbg_cnt(i32 8), !dbg !4213
  %conv52 = zext i8 %call51 to i32, !dbg !4213
  %tobool53 = icmp ne i32 %conv52, 0, !dbg !4213
  br i1 %tobool53, label %if.then54, label %if.end56, !dbg !4214

if.then54:                                        ; preds = %land.lhs.true
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4215
  %32 = load i32*, i32** %counts, align 8, !dbg !4217
  call void @count_reg_usage(%struct.rtx_def* %31, i32* %32, %struct.rtx_def* null, i32 -1), !dbg !4218
  %33 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4219
  %call55 = call %struct.rtx_def* @delete_insn_and_edges(%struct.rtx_def* %33), !dbg !4220
  %34 = load i32, i32* %ndead, align 4, !dbg !4221
  %inc = add nsw i32 %34, 1, !dbg !4221
  store i32 %inc, i32* %ndead, align 4, !dbg !4221
  br label %if.end56, !dbg !4222

if.end56:                                         ; preds = %if.then54, %land.lhs.true, %if.end47
  br label %for.inc57, !dbg !4223

for.inc57:                                        ; preds = %if.end56, %if.then46
  %35 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !4224
  store %struct.rtx_def* %35, %struct.rtx_def** %insn, align 8, !dbg !4225
  br label %for.cond20, !dbg !4226, !llvm.loop !4227

for.end58:                                        ; preds = %for.cond20
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4229
  %tobool59 = icmp ne %struct._IO_FILE* %36, null, !dbg !4229
  br i1 %tobool59, label %land.lhs.true60, label %if.end64, !dbg !4231

land.lhs.true60:                                  ; preds = %for.end58
  %37 = load i32, i32* %ndead, align 4, !dbg !4232
  %tobool61 = icmp ne i32 %37, 0, !dbg !4232
  br i1 %tobool61, label %if.then62, label %if.end64, !dbg !4233

if.then62:                                        ; preds = %land.lhs.true60
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4234
  %39 = load i32, i32* %ndead, align 4, !dbg !4235
  %call63 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0), i32 %39), !dbg !4236
  br label %if.end64, !dbg !4236

if.end64:                                         ; preds = %if.then62, %land.lhs.true60, %for.end58
  %40 = load i32*, i32** %counts, align 8, !dbg !4237
  %41 = bitcast i32* %40 to i8*, !dbg !4237
  call void @free(i8* %41), !dbg !4238
  br label %do.body65, !dbg !4239

do.body65:                                        ; preds = %if.end64
  %42 = load i8, i8* @timevar_enable, align 1, !dbg !4240
  %tobool66 = icmp ne i8 %42, 0, !dbg !4240
  br i1 %tobool66, label %if.then67, label %if.end68, !dbg !4243

if.then67:                                        ; preds = %do.body65
  call void @timevar_pop_1(i32 25), !dbg !4240
  br label %if.end68, !dbg !4240

if.end68:                                         ; preds = %if.then67, %do.body65
  br label %do.end69, !dbg !4243

do.end69:                                         ; preds = %if.end68
  %43 = load i32, i32* %ndead, align 4, !dbg !4244
  ret i32 %43, !dbg !4245
}

declare dso_local void @timevar_push_1(i32) #2

declare dso_local i8* @xcalloc(i64, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal void @count_reg_usage(%struct.rtx_def* %x, i32* %counts, %struct.rtx_def* %dest, i32 %incr) #0 !dbg !4246 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %counts.addr = alloca i32*, align 8
  %dest.addr = alloca %struct.rtx_def*, align 8
  %incr.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %note = alloca %struct.rtx_def*, align 8
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %eqv = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !4249, metadata !DIExpression()), !dbg !4250
  store i32* %counts, i32** %counts.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %counts.addr, metadata !4251, metadata !DIExpression()), !dbg !4252
  store %struct.rtx_def* %dest, %struct.rtx_def** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dest.addr, metadata !4253, metadata !DIExpression()), !dbg !4254
  store i32 %incr, i32* %incr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %incr.addr, metadata !4255, metadata !DIExpression()), !dbg !4256
  call void @llvm.dbg.declare(metadata i32* %code, metadata !4257, metadata !DIExpression()), !dbg !4258
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %note, metadata !4259, metadata !DIExpression()), !dbg !4260
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !4261, metadata !DIExpression()), !dbg !4262
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4263, metadata !DIExpression()), !dbg !4264
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4265, metadata !DIExpression()), !dbg !4266
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4267
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !4269
  br i1 %cmp, label %if.then, label %if.end, !dbg !4270

if.then:                                          ; preds = %entry
  br label %for.end188, !dbg !4271

if.end:                                           ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4272
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !4272
  %bf.load = load i32, i32* %2, align 8, !dbg !4272
  %bf.clear = and i32 %bf.load, 65535, !dbg !4272
  store i32 %bf.clear, i32* %code, align 4, !dbg !4273
  switch i32 %bf.clear, label %sw.default [
    i32 37, label %sw.bb
    i32 36, label %sw.bb4
    i32 46, label %sw.bb4
    i32 35, label %sw.bb4
    i32 30, label %sw.bb4
    i32 32, label %sw.bb4
    i32 31, label %sw.bb4
    i32 33, label %sw.bb4
    i32 45, label %sw.bb4
    i32 44, label %sw.bb4
    i32 25, label %sw.bb5
    i32 23, label %sw.bb20
    i32 7, label %sw.bb42
    i32 10, label %sw.bb43
    i32 8, label %sw.bb43
    i32 9, label %sw.bb43
    i32 3, label %sw.bb84
    i32 17, label %sw.bb117
    i32 4, label %sw.bb134
  ], !dbg !4274

sw.bb:                                            ; preds = %if.end
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4275
  %4 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !4278
  %cmp1 = icmp ne %struct.rtx_def* %3, %4, !dbg !4279
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !4280

if.then2:                                         ; preds = %sw.bb
  %5 = load i32, i32* %incr.addr, align 4, !dbg !4281
  %6 = load i32*, i32** %counts.addr, align 8, !dbg !4282
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4283
  %call = call i32 @rhs_regno(%struct.rtx_def* %7), !dbg !4283
  %idxprom = zext i32 %call to i64, !dbg !4282
  %arrayidx = getelementptr inbounds i32, i32* %6, i64 %idxprom, !dbg !4282
  %8 = load i32, i32* %arrayidx, align 4, !dbg !4284
  %add = add nsw i32 %8, %5, !dbg !4284
  store i32 %add, i32* %arrayidx, align 4, !dbg !4284
  br label %if.end3, !dbg !4282

if.end3:                                          ; preds = %if.then2, %sw.bb
  br label %for.end188, !dbg !4285

sw.bb4:                                           ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  br label %for.end188, !dbg !4286

sw.bb5:                                           ; preds = %if.end
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4287
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !4287
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4287
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4287
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**, !dbg !4287
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4287
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !4287
  %bf.load7 = load i32, i32* %11, align 8, !dbg !4287
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !4287
  %cmp9 = icmp eq i32 %bf.clear8, 43, !dbg !4287
  br i1 %cmp9, label %if.then10, label %if.end19, !dbg !4289

if.then10:                                        ; preds = %sw.bb5
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4290
  %u11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !4290
  %fld12 = bitcast %union.u* %u11 to [1 x %union.rtunion_def]*, !dbg !4290
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i64 0, i64 0, !dbg !4290
  %rt_rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**, !dbg !4290
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx14, align 8, !dbg !4290
  %u15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !4290
  %fld16 = bitcast %union.u* %u15 to [1 x %union.rtunion_def]*, !dbg !4290
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i64 0, i64 0, !dbg !4290
  %rt_rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !4290
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx18, align 8, !dbg !4290
  %15 = load i32*, i32** %counts.addr, align 8, !dbg !4291
  %16 = load i32, i32* %incr.addr, align 4, !dbg !4292
  call void @count_reg_usage(%struct.rtx_def* %14, i32* %15, %struct.rtx_def* null, i32 %16), !dbg !4293
  br label %if.end19, !dbg !4293

if.end19:                                         ; preds = %if.then10, %sw.bb5
  br label %for.end188, !dbg !4294

sw.bb20:                                          ; preds = %if.end
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4295
  %u21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !4295
  %fld22 = bitcast %union.u* %u21 to [1 x %union.rtunion_def]*, !dbg !4295
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i64 0, i64 0, !dbg !4295
  %rt_rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**, !dbg !4295
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx24, align 8, !dbg !4295
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !4295
  %bf.load25 = load i32, i32* %19, align 8, !dbg !4295
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !4295
  %cmp27 = icmp eq i32 %bf.clear26, 37, !dbg !4295
  br i1 %cmp27, label %if.end33, label %if.then28, !dbg !4297

if.then28:                                        ; preds = %sw.bb20
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4298
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !4298
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !4298
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 0, !dbg !4298
  %rt_rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !4298
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !4298
  %22 = load i32*, i32** %counts.addr, align 8, !dbg !4299
  %23 = load i32, i32* %incr.addr, align 4, !dbg !4300
  call void @count_reg_usage(%struct.rtx_def* %21, i32* %22, %struct.rtx_def* null, i32 %23), !dbg !4301
  br label %if.end33, !dbg !4301

if.end33:                                         ; preds = %if.then28, %sw.bb20
  %24 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4302
  %u34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !4302
  %fld35 = bitcast %union.u* %u34 to [1 x %union.rtunion_def]*, !dbg !4302
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i64 0, i64 1, !dbg !4302
  %rt_rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**, !dbg !4302
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx37, align 8, !dbg !4302
  %26 = load i32*, i32** %counts.addr, align 8, !dbg !4303
  %27 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !4304
  %tobool = icmp ne %struct.rtx_def* %27, null, !dbg !4304
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4304

cond.true:                                        ; preds = %if.end33
  %28 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !4305
  br label %cond.end, !dbg !4304

cond.false:                                       ; preds = %if.end33
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4306
  %u38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !4306
  %fld39 = bitcast %union.u* %u38 to [1 x %union.rtunion_def]*, !dbg !4306
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i64 0, i64 0, !dbg !4306
  %rt_rtx41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**, !dbg !4306
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx41, align 8, !dbg !4306
  br label %cond.end, !dbg !4304

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %28, %cond.true ], [ %30, %cond.false ], !dbg !4304
  %31 = load i32, i32* %incr.addr, align 4, !dbg !4307
  call void @count_reg_usage(%struct.rtx_def* %25, i32* %26, %struct.rtx_def* %cond, i32 %31), !dbg !4308
  br label %for.end188, !dbg !4309

sw.bb42:                                          ; preds = %if.end
  br label %for.end188, !dbg !4310

sw.bb43:                                          ; preds = %if.end, %if.end, %if.end
  %32 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4311
  %call44 = call zeroext i8 @insn_could_throw_p(%struct.rtx_def* %32), !dbg !4313
  %tobool45 = icmp ne i8 %call44, 0, !dbg !4313
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !4314

if.then46:                                        ; preds = %sw.bb43
  %33 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !4315
  store %struct.rtx_def* %33, %struct.rtx_def** %dest.addr, align 8, !dbg !4316
  br label %if.end47, !dbg !4317

if.end47:                                         ; preds = %if.then46, %sw.bb43
  %34 = load i32, i32* %code, align 4, !dbg !4318
  %cmp48 = icmp eq i32 %34, 10, !dbg !4320
  br i1 %cmp48, label %if.then49, label %if.end54, !dbg !4321

if.then49:                                        ; preds = %if.end47
  %35 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4322
  %u50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !4322
  %fld51 = bitcast %union.u* %u50 to [1 x %union.rtunion_def]*, !dbg !4322
  %arrayidx52 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i64 0, i64 8, !dbg !4322
  %rt_rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**, !dbg !4322
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx53, align 8, !dbg !4322
  %37 = load i32*, i32** %counts.addr, align 8, !dbg !4323
  %38 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !4324
  %39 = load i32, i32* %incr.addr, align 4, !dbg !4325
  call void @count_reg_usage(%struct.rtx_def* %36, i32* %37, %struct.rtx_def* %38, i32 %39), !dbg !4326
  br label %if.end54, !dbg !4326

if.end54:                                         ; preds = %if.then49, %if.end47
  %40 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4327
  %u55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !4327
  %fld56 = bitcast %union.u* %u55 to [1 x %union.rtunion_def]*, !dbg !4327
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i64 0, i64 5, !dbg !4327
  %rt_rtx58 = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtx_def**, !dbg !4327
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx58, align 8, !dbg !4327
  %42 = load i32*, i32** %counts.addr, align 8, !dbg !4328
  %43 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !4329
  %44 = load i32, i32* %incr.addr, align 4, !dbg !4330
  call void @count_reg_usage(%struct.rtx_def* %41, i32* %42, %struct.rtx_def* %43, i32 %44), !dbg !4331
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4332
  %call59 = call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* %45), !dbg !4333
  store %struct.rtx_def* %call59, %struct.rtx_def** %note, align 8, !dbg !4334
  %46 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !4335
  %tobool60 = icmp ne %struct.rtx_def* %46, null, !dbg !4335
  br i1 %tobool60, label %if.then61, label %if.end83, !dbg !4337

if.then61:                                        ; preds = %if.end54
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %eqv, metadata !4338, metadata !DIExpression()), !dbg !4340
  %47 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !4341
  %u62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1, !dbg !4341
  %fld63 = bitcast %union.u* %u62 to [1 x %union.rtunion_def]*, !dbg !4341
  %arrayidx64 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld63, i64 0, i64 0, !dbg !4341
  %rt_rtx65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.rtx_def**, !dbg !4341
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx65, align 8, !dbg !4341
  store %struct.rtx_def* %48, %struct.rtx_def** %eqv, align 8, !dbg !4340
  %49 = load %struct.rtx_def*, %struct.rtx_def** %eqv, align 8, !dbg !4342
  %50 = bitcast %struct.rtx_def* %49 to i32*, !dbg !4342
  %bf.load66 = load i32, i32* %50, align 8, !dbg !4342
  %bf.clear67 = and i32 %bf.load66, 65535, !dbg !4342
  %cmp68 = icmp eq i32 %bf.clear67, 3, !dbg !4344
  br i1 %cmp68, label %if.then69, label %if.else, !dbg !4345

if.then69:                                        ; preds = %if.then61
  br label %do.body, !dbg !4346

do.body:                                          ; preds = %land.end, %if.then69
  %51 = load %struct.rtx_def*, %struct.rtx_def** %eqv, align 8, !dbg !4347
  %u70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1, !dbg !4347
  %fld71 = bitcast %union.u* %u70 to [1 x %union.rtunion_def]*, !dbg !4347
  %arrayidx72 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld71, i64 0, i64 0, !dbg !4347
  %rt_rtx73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**, !dbg !4347
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx73, align 8, !dbg !4347
  %53 = load i32*, i32** %counts.addr, align 8, !dbg !4349
  %54 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !4350
  %55 = load i32, i32* %incr.addr, align 4, !dbg !4351
  call void @count_reg_usage(%struct.rtx_def* %52, i32* %53, %struct.rtx_def* %54, i32 %55), !dbg !4352
  %56 = load %struct.rtx_def*, %struct.rtx_def** %eqv, align 8, !dbg !4353
  %u74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1, !dbg !4353
  %fld75 = bitcast %union.u* %u74 to [1 x %union.rtunion_def]*, !dbg !4353
  %arrayidx76 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld75, i64 0, i64 1, !dbg !4353
  %rt_rtx77 = bitcast %union.rtunion_def* %arrayidx76 to %struct.rtx_def**, !dbg !4353
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx77, align 8, !dbg !4353
  store %struct.rtx_def* %57, %struct.rtx_def** %eqv, align 8, !dbg !4354
  br label %do.cond, !dbg !4355

do.cond:                                          ; preds = %do.body
  %58 = load %struct.rtx_def*, %struct.rtx_def** %eqv, align 8, !dbg !4356
  %tobool78 = icmp ne %struct.rtx_def* %58, null, !dbg !4356
  br i1 %tobool78, label %land.rhs, label %land.end, !dbg !4357

land.rhs:                                         ; preds = %do.cond
  %59 = load %struct.rtx_def*, %struct.rtx_def** %eqv, align 8, !dbg !4358
  %60 = bitcast %struct.rtx_def* %59 to i32*, !dbg !4358
  %bf.load79 = load i32, i32* %60, align 8, !dbg !4358
  %bf.clear80 = and i32 %bf.load79, 65535, !dbg !4358
  %cmp81 = icmp eq i32 %bf.clear80, 3, !dbg !4359
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %61 = phi i1 [ false, %do.cond ], [ %cmp81, %land.rhs ], !dbg !4360
  br i1 %61, label %do.body, label %do.end, !dbg !4355, !llvm.loop !4361

do.end:                                           ; preds = %land.end
  br label %if.end82, !dbg !4355

if.else:                                          ; preds = %if.then61
  %62 = load %struct.rtx_def*, %struct.rtx_def** %eqv, align 8, !dbg !4363
  %63 = load i32*, i32** %counts.addr, align 8, !dbg !4364
  %64 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !4365
  %65 = load i32, i32* %incr.addr, align 4, !dbg !4366
  call void @count_reg_usage(%struct.rtx_def* %62, i32* %63, %struct.rtx_def* %64, i32 %65), !dbg !4367
  br label %if.end82

if.end82:                                         ; preds = %if.else, %do.end
  br label %if.end83, !dbg !4368

if.end83:                                         ; preds = %if.end82, %if.end54
  br label %for.end188, !dbg !4369

sw.bb84:                                          ; preds = %if.end
  %66 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4370
  %67 = bitcast %struct.rtx_def* %66 to i32*, !dbg !4370
  %bf.load85 = load i32, i32* %67, align 8, !dbg !4370
  %bf.lshr = lshr i32 %bf.load85, 16, !dbg !4370
  %bf.clear86 = and i32 %bf.lshr, 255, !dbg !4370
  %cmp87 = icmp eq i32 %bf.clear86, 4, !dbg !4372
  br i1 %cmp87, label %if.then107, label %lor.lhs.false, !dbg !4373

lor.lhs.false:                                    ; preds = %sw.bb84
  %68 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4374
  %69 = bitcast %struct.rtx_def* %68 to i32*, !dbg !4374
  %bf.load88 = load i32, i32* %69, align 8, !dbg !4374
  %bf.lshr89 = lshr i32 %bf.load88, 16, !dbg !4374
  %bf.clear90 = and i32 %bf.lshr89, 255, !dbg !4374
  %cmp91 = icmp ne i32 %bf.clear90, 5, !dbg !4375
  br i1 %cmp91, label %land.lhs.true, label %lor.lhs.false99, !dbg !4376

land.lhs.true:                                    ; preds = %lor.lhs.false
  %70 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4377
  %u92 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1, !dbg !4377
  %fld93 = bitcast %union.u* %u92 to [1 x %union.rtunion_def]*, !dbg !4377
  %arrayidx94 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld93, i64 0, i64 0, !dbg !4377
  %rt_rtx95 = bitcast %union.rtunion_def* %arrayidx94 to %struct.rtx_def**, !dbg !4377
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx95, align 8, !dbg !4377
  %72 = bitcast %struct.rtx_def* %71 to i32*, !dbg !4377
  %bf.load96 = load i32, i32* %72, align 8, !dbg !4377
  %bf.clear97 = and i32 %bf.load96, 65535, !dbg !4377
  %cmp98 = icmp eq i32 %bf.clear97, 24, !dbg !4378
  br i1 %cmp98, label %if.then107, label %lor.lhs.false99, !dbg !4379

lor.lhs.false99:                                  ; preds = %land.lhs.true, %lor.lhs.false
  %73 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4380
  %u100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1, !dbg !4380
  %fld101 = bitcast %union.u* %u100 to [1 x %union.rtunion_def]*, !dbg !4380
  %arrayidx102 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld101, i64 0, i64 0, !dbg !4380
  %rt_rtx103 = bitcast %union.rtunion_def* %arrayidx102 to %struct.rtx_def**, !dbg !4380
  %74 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx103, align 8, !dbg !4380
  %75 = bitcast %struct.rtx_def* %74 to i32*, !dbg !4380
  %bf.load104 = load i32, i32* %75, align 8, !dbg !4380
  %bf.clear105 = and i32 %bf.load104, 65535, !dbg !4380
  %cmp106 = icmp eq i32 %bf.clear105, 25, !dbg !4381
  br i1 %cmp106, label %if.then107, label %if.end112, !dbg !4382

if.then107:                                       ; preds = %lor.lhs.false99, %land.lhs.true, %sw.bb84
  %76 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4383
  %u108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1, !dbg !4383
  %fld109 = bitcast %union.u* %u108 to [1 x %union.rtunion_def]*, !dbg !4383
  %arrayidx110 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld109, i64 0, i64 0, !dbg !4383
  %rt_rtx111 = bitcast %union.rtunion_def* %arrayidx110 to %struct.rtx_def**, !dbg !4383
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx111, align 8, !dbg !4383
  %78 = load i32*, i32** %counts.addr, align 8, !dbg !4384
  %79 = load i32, i32* %incr.addr, align 4, !dbg !4385
  call void @count_reg_usage(%struct.rtx_def* %77, i32* %78, %struct.rtx_def* null, i32 %79), !dbg !4386
  br label %if.end112, !dbg !4386

if.end112:                                        ; preds = %if.then107, %lor.lhs.false99
  %80 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4387
  %u113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1, !dbg !4387
  %fld114 = bitcast %union.u* %u113 to [1 x %union.rtunion_def]*, !dbg !4387
  %arrayidx115 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld114, i64 0, i64 1, !dbg !4387
  %rt_rtx116 = bitcast %union.rtunion_def* %arrayidx115 to %struct.rtx_def**, !dbg !4387
  %81 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx116, align 8, !dbg !4387
  %82 = load i32*, i32** %counts.addr, align 8, !dbg !4388
  %83 = load i32, i32* %incr.addr, align 4, !dbg !4389
  call void @count_reg_usage(%struct.rtx_def* %81, i32* %82, %struct.rtx_def* null, i32 %83), !dbg !4390
  br label %for.end188, !dbg !4391

sw.bb117:                                         ; preds = %if.end
  %84 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4392
  %85 = bitcast %struct.rtx_def* %84 to i32*, !dbg !4392
  %bf.load118 = load i32, i32* %85, align 8, !dbg !4392
  %bf.lshr119 = lshr i32 %bf.load118, 27, !dbg !4392
  %bf.clear120 = and i32 %bf.lshr119, 1, !dbg !4392
  %tobool121 = icmp ne i32 %bf.clear120, 0, !dbg !4392
  br i1 %tobool121, label %if.then122, label %if.end123, !dbg !4394

if.then122:                                       ; preds = %sw.bb117
  store %struct.rtx_def* null, %struct.rtx_def** %dest.addr, align 8, !dbg !4395
  br label %if.end123, !dbg !4396

if.end123:                                        ; preds = %if.then122, %sw.bb117
  %86 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4397
  %u124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1, !dbg !4397
  %fld125 = bitcast %union.u* %u124 to [1 x %union.rtunion_def]*, !dbg !4397
  %arrayidx126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i64 0, i64 3, !dbg !4397
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtvec_def**, !dbg !4397
  %87 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4397
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %87, i32 0, i32 0, !dbg !4397
  %88 = load i32, i32* %num_elem, align 8, !dbg !4397
  %sub = sub nsw i32 %88, 1, !dbg !4399
  store i32 %sub, i32* %i, align 4, !dbg !4400
  br label %for.cond, !dbg !4401

for.cond:                                         ; preds = %for.inc, %if.end123
  %89 = load i32, i32* %i, align 4, !dbg !4402
  %cmp127 = icmp sge i32 %89, 0, !dbg !4404
  br i1 %cmp127, label %for.body, label %for.end, !dbg !4405

for.body:                                         ; preds = %for.cond
  %90 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4406
  %u128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %90, i32 0, i32 1, !dbg !4406
  %fld129 = bitcast %union.u* %u128 to [1 x %union.rtunion_def]*, !dbg !4406
  %arrayidx130 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld129, i64 0, i64 3, !dbg !4406
  %rt_rtvec131 = bitcast %union.rtunion_def* %arrayidx130 to %struct.rtvec_def**, !dbg !4406
  %91 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec131, align 8, !dbg !4406
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %91, i32 0, i32 1, !dbg !4406
  %92 = load i32, i32* %i, align 4, !dbg !4406
  %idxprom132 = sext i32 %92 to i64, !dbg !4406
  %arrayidx133 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom132, !dbg !4406
  %93 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx133, align 8, !dbg !4406
  %94 = load i32*, i32** %counts.addr, align 8, !dbg !4407
  %95 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !4408
  %96 = load i32, i32* %incr.addr, align 4, !dbg !4409
  call void @count_reg_usage(%struct.rtx_def* %93, i32* %94, %struct.rtx_def* %95, i32 %96), !dbg !4410
  br label %for.inc, !dbg !4410

for.inc:                                          ; preds = %for.body
  %97 = load i32, i32* %i, align 4, !dbg !4411
  %dec = add nsw i32 %97, -1, !dbg !4411
  store i32 %dec, i32* %i, align 4, !dbg !4411
  br label %for.cond, !dbg !4412, !llvm.loop !4413

for.end:                                          ; preds = %for.cond
  br label %for.end188, !dbg !4415

sw.bb134:                                         ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32 6682, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)), !dbg !4416
  br label %sw.default, !dbg !4416

sw.default:                                       ; preds = %if.end, %sw.bb134
  br label %sw.epilog, !dbg !4417

sw.epilog:                                        ; preds = %sw.default
  %98 = load i32, i32* %code, align 4, !dbg !4418
  %idxprom135 = sext i32 %98 to i64, !dbg !4418
  %arrayidx136 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom135, !dbg !4418
  %99 = load i8*, i8** %arrayidx136, align 8, !dbg !4418
  store i8* %99, i8** %fmt, align 8, !dbg !4419
  %100 = load i32, i32* %code, align 4, !dbg !4420
  %idxprom137 = sext i32 %100 to i64, !dbg !4420
  %arrayidx138 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom137, !dbg !4420
  %101 = load i8, i8* %arrayidx138, align 1, !dbg !4420
  %conv = zext i8 %101 to i32, !dbg !4420
  %sub139 = sub nsw i32 %conv, 1, !dbg !4422
  store i32 %sub139, i32* %i, align 4, !dbg !4423
  br label %for.cond140, !dbg !4424

for.cond140:                                      ; preds = %for.inc186, %sw.epilog
  %102 = load i32, i32* %i, align 4, !dbg !4425
  %cmp141 = icmp sge i32 %102, 0, !dbg !4427
  br i1 %cmp141, label %for.body143, label %for.end188, !dbg !4428

for.body143:                                      ; preds = %for.cond140
  %103 = load i8*, i8** %fmt, align 8, !dbg !4429
  %104 = load i32, i32* %i, align 4, !dbg !4432
  %idxprom144 = sext i32 %104 to i64, !dbg !4429
  %arrayidx145 = getelementptr inbounds i8, i8* %103, i64 %idxprom144, !dbg !4429
  %105 = load i8, i8* %arrayidx145, align 1, !dbg !4429
  %conv146 = sext i8 %105 to i32, !dbg !4429
  %cmp147 = icmp eq i32 %conv146, 101, !dbg !4433
  br i1 %cmp147, label %if.then149, label %if.else155, !dbg !4434

if.then149:                                       ; preds = %for.body143
  %106 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4435
  %u150 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %106, i32 0, i32 1, !dbg !4435
  %fld151 = bitcast %union.u* %u150 to [1 x %union.rtunion_def]*, !dbg !4435
  %107 = load i32, i32* %i, align 4, !dbg !4435
  %idxprom152 = sext i32 %107 to i64, !dbg !4435
  %arrayidx153 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld151, i64 0, i64 %idxprom152, !dbg !4435
  %rt_rtx154 = bitcast %union.rtunion_def* %arrayidx153 to %struct.rtx_def**, !dbg !4435
  %108 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx154, align 8, !dbg !4435
  %109 = load i32*, i32** %counts.addr, align 8, !dbg !4436
  %110 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !4437
  %111 = load i32, i32* %incr.addr, align 4, !dbg !4438
  call void @count_reg_usage(%struct.rtx_def* %108, i32* %109, %struct.rtx_def* %110, i32 %111), !dbg !4439
  br label %if.end185, !dbg !4439

if.else155:                                       ; preds = %for.body143
  %112 = load i8*, i8** %fmt, align 8, !dbg !4440
  %113 = load i32, i32* %i, align 4, !dbg !4442
  %idxprom156 = sext i32 %113 to i64, !dbg !4440
  %arrayidx157 = getelementptr inbounds i8, i8* %112, i64 %idxprom156, !dbg !4440
  %114 = load i8, i8* %arrayidx157, align 1, !dbg !4440
  %conv158 = sext i8 %114 to i32, !dbg !4440
  %cmp159 = icmp eq i32 %conv158, 69, !dbg !4443
  br i1 %cmp159, label %if.then161, label %if.end184, !dbg !4444

if.then161:                                       ; preds = %if.else155
  %115 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4445
  %u162 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1, !dbg !4445
  %fld163 = bitcast %union.u* %u162 to [1 x %union.rtunion_def]*, !dbg !4445
  %116 = load i32, i32* %i, align 4, !dbg !4445
  %idxprom164 = sext i32 %116 to i64, !dbg !4445
  %arrayidx165 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld163, i64 0, i64 %idxprom164, !dbg !4445
  %rt_rtvec166 = bitcast %union.rtunion_def* %arrayidx165 to %struct.rtvec_def**, !dbg !4445
  %117 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec166, align 8, !dbg !4445
  %num_elem167 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %117, i32 0, i32 0, !dbg !4445
  %118 = load i32, i32* %num_elem167, align 8, !dbg !4445
  %sub168 = sub nsw i32 %118, 1, !dbg !4447
  store i32 %sub168, i32* %j, align 4, !dbg !4448
  br label %for.cond169, !dbg !4449

for.cond169:                                      ; preds = %for.inc181, %if.then161
  %119 = load i32, i32* %j, align 4, !dbg !4450
  %cmp170 = icmp sge i32 %119, 0, !dbg !4452
  br i1 %cmp170, label %for.body172, label %for.end183, !dbg !4453

for.body172:                                      ; preds = %for.cond169
  %120 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4454
  %u173 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1, !dbg !4454
  %fld174 = bitcast %union.u* %u173 to [1 x %union.rtunion_def]*, !dbg !4454
  %121 = load i32, i32* %i, align 4, !dbg !4454
  %idxprom175 = sext i32 %121 to i64, !dbg !4454
  %arrayidx176 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld174, i64 0, i64 %idxprom175, !dbg !4454
  %rt_rtvec177 = bitcast %union.rtunion_def* %arrayidx176 to %struct.rtvec_def**, !dbg !4454
  %122 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec177, align 8, !dbg !4454
  %elem178 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %122, i32 0, i32 1, !dbg !4454
  %123 = load i32, i32* %j, align 4, !dbg !4454
  %idxprom179 = sext i32 %123 to i64, !dbg !4454
  %arrayidx180 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem178, i64 0, i64 %idxprom179, !dbg !4454
  %124 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx180, align 8, !dbg !4454
  %125 = load i32*, i32** %counts.addr, align 8, !dbg !4455
  %126 = load %struct.rtx_def*, %struct.rtx_def** %dest.addr, align 8, !dbg !4456
  %127 = load i32, i32* %incr.addr, align 4, !dbg !4457
  call void @count_reg_usage(%struct.rtx_def* %124, i32* %125, %struct.rtx_def* %126, i32 %127), !dbg !4458
  br label %for.inc181, !dbg !4458

for.inc181:                                       ; preds = %for.body172
  %128 = load i32, i32* %j, align 4, !dbg !4459
  %dec182 = add nsw i32 %128, -1, !dbg !4459
  store i32 %dec182, i32* %j, align 4, !dbg !4459
  br label %for.cond169, !dbg !4460, !llvm.loop !4461

for.end183:                                       ; preds = %for.cond169
  br label %if.end184, !dbg !4462

if.end184:                                        ; preds = %for.end183, %if.else155
  br label %if.end185

if.end185:                                        ; preds = %if.end184, %if.then149
  br label %for.inc186, !dbg !4463

for.inc186:                                       ; preds = %if.end185
  %129 = load i32, i32* %i, align 4, !dbg !4464
  %dec187 = add nsw i32 %129, -1, !dbg !4464
  store i32 %dec187, i32* %i, align 4, !dbg !4464
  br label %for.cond140, !dbg !4465, !llvm.loop !4466

for.end188:                                       ; preds = %if.then, %if.end3, %sw.bb4, %if.end19, %cond.end, %sw.bb42, %if.end83, %if.end112, %for.end, %for.cond140
  ret void, !dbg !4468
}

declare dso_local %struct.rtx_def* @get_last_insn() #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @insn_live_p(%struct.rtx_def* %insn, i32* %counts) #0 !dbg !4469 {
entry:
  %retval = alloca i8, align 1
  %insn.addr = alloca %struct.rtx_def*, align 8
  %counts.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %elt = alloca %struct.rtx_def*, align 8
  %next = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4472, metadata !DIExpression()), !dbg !4473
  store i32* %counts, i32** %counts.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %counts.addr, metadata !4474, metadata !DIExpression()), !dbg !4475
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4476, metadata !DIExpression()), !dbg !4477
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4478
  %call = call zeroext i8 @insn_could_throw_p(%struct.rtx_def* %0), !dbg !4480
  %tobool = icmp ne i8 %call, 0, !dbg !4480
  br i1 %tobool, label %if.then, label %if.else, !dbg !4481

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !4482
  br label %return, !dbg !4482

if.else:                                          ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4483
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i32 0, i32 1, !dbg !4483
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4483
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !4483
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4483
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4483
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !4483
  %bf.load = load i32, i32* %3, align 8, !dbg !4483
  %bf.clear = and i32 %bf.load, 65535, !dbg !4483
  %cmp = icmp eq i32 %bf.clear, 23, !dbg !4485
  br i1 %cmp, label %if.then1, label %if.else7, !dbg !4486

if.then1:                                         ; preds = %if.else
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4487
  %u2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !4487
  %fld3 = bitcast %union.u* %u2 to [1 x %union.rtunion_def]*, !dbg !4487
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i64 0, i64 5, !dbg !4487
  %rt_rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !4487
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !4487
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4488
  %7 = load i32*, i32** %counts.addr, align 8, !dbg !4489
  %call6 = call zeroext i8 @set_live_p(%struct.rtx_def* %5, %struct.rtx_def* %6, i32* %7), !dbg !4490
  store i8 %call6, i8* %retval, align 1, !dbg !4491
  br label %return, !dbg !4491

if.else7:                                         ; preds = %if.else
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4492
  %u8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !4492
  %fld9 = bitcast %union.u* %u8 to [1 x %union.rtunion_def]*, !dbg !4492
  %arrayidx10 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld9, i64 0, i64 5, !dbg !4492
  %rt_rtx11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**, !dbg !4492
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx11, align 8, !dbg !4492
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !4492
  %bf.load12 = load i32, i32* %10, align 8, !dbg !4492
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !4492
  %cmp14 = icmp eq i32 %bf.clear13, 15, !dbg !4494
  br i1 %cmp14, label %if.then15, label %if.else50, !dbg !4495

if.then15:                                        ; preds = %if.else7
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4496
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !4496
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !4496
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 5, !dbg !4496
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !4496
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !4496
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !4496
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !4496
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 0, !dbg !4496
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtvec_def**, !dbg !4496
  %13 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4496
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %13, i32 0, i32 0, !dbg !4496
  %14 = load i32, i32* %num_elem, align 8, !dbg !4496
  %sub = sub nsw i32 %14, 1, !dbg !4499
  store i32 %sub, i32* %i, align 4, !dbg !4500
  br label %for.cond, !dbg !4501

for.cond:                                         ; preds = %for.inc, %if.then15
  %15 = load i32, i32* %i, align 4, !dbg !4502
  %cmp23 = icmp sge i32 %15, 0, !dbg !4504
  br i1 %cmp23, label %for.body, label %for.end, !dbg !4505

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %elt, metadata !4506, metadata !DIExpression()), !dbg !4508
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4509
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !4509
  %fld25 = bitcast %union.u* %u24 to [1 x %union.rtunion_def]*, !dbg !4509
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i64 0, i64 5, !dbg !4509
  %rt_rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**, !dbg !4509
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx27, align 8, !dbg !4509
  %u28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !4509
  %fld29 = bitcast %union.u* %u28 to [1 x %union.rtunion_def]*, !dbg !4509
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i64 0, i64 0, !dbg !4509
  %rt_rtvec31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtvec_def**, !dbg !4509
  %18 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec31, align 8, !dbg !4509
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %18, i32 0, i32 1, !dbg !4509
  %19 = load i32, i32* %i, align 4, !dbg !4509
  %idxprom = sext i32 %19 to i64, !dbg !4509
  %arrayidx32 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !4509
  %20 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx32, align 8, !dbg !4509
  store %struct.rtx_def* %20, %struct.rtx_def** %elt, align 8, !dbg !4508
  %21 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8, !dbg !4510
  %22 = bitcast %struct.rtx_def* %21 to i32*, !dbg !4510
  %bf.load33 = load i32, i32* %22, align 8, !dbg !4510
  %bf.clear34 = and i32 %bf.load33, 65535, !dbg !4510
  %cmp35 = icmp eq i32 %bf.clear34, 23, !dbg !4512
  br i1 %cmp35, label %if.then36, label %if.else40, !dbg !4513

if.then36:                                        ; preds = %for.body
  %23 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8, !dbg !4514
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4517
  %25 = load i32*, i32** %counts.addr, align 8, !dbg !4518
  %call37 = call zeroext i8 @set_live_p(%struct.rtx_def* %23, %struct.rtx_def* %24, i32* %25), !dbg !4519
  %tobool38 = icmp ne i8 %call37, 0, !dbg !4519
  br i1 %tobool38, label %if.then39, label %if.end, !dbg !4520

if.then39:                                        ; preds = %if.then36
  store i8 1, i8* %retval, align 1, !dbg !4521
  br label %return, !dbg !4521

if.end:                                           ; preds = %if.then36
  br label %if.end49, !dbg !4522

if.else40:                                        ; preds = %for.body
  %26 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8, !dbg !4523
  %27 = bitcast %struct.rtx_def* %26 to i32*, !dbg !4523
  %bf.load41 = load i32, i32* %27, align 8, !dbg !4523
  %bf.clear42 = and i32 %bf.load41, 65535, !dbg !4523
  %cmp43 = icmp ne i32 %bf.clear42, 25, !dbg !4525
  br i1 %cmp43, label %land.lhs.true, label %if.end48, !dbg !4526

land.lhs.true:                                    ; preds = %if.else40
  %28 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8, !dbg !4527
  %29 = bitcast %struct.rtx_def* %28 to i32*, !dbg !4527
  %bf.load44 = load i32, i32* %29, align 8, !dbg !4527
  %bf.clear45 = and i32 %bf.load44, 65535, !dbg !4527
  %cmp46 = icmp ne i32 %bf.clear45, 24, !dbg !4528
  br i1 %cmp46, label %if.then47, label %if.end48, !dbg !4529

if.then47:                                        ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !4530
  br label %return, !dbg !4530

if.end48:                                         ; preds = %land.lhs.true, %if.else40
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.end
  br label %for.inc, !dbg !4531

for.inc:                                          ; preds = %if.end49
  %30 = load i32, i32* %i, align 4, !dbg !4532
  %dec = add nsw i32 %30, -1, !dbg !4532
  store i32 %dec, i32* %i, align 4, !dbg !4532
  br label %for.cond, !dbg !4533, !llvm.loop !4534

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !4536
  br label %return, !dbg !4536

if.else50:                                        ; preds = %if.else7
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4537
  %32 = bitcast %struct.rtx_def* %31 to i32*, !dbg !4537
  %bf.load51 = load i32, i32* %32, align 8, !dbg !4537
  %bf.clear52 = and i32 %bf.load51, 65535, !dbg !4537
  %cmp53 = icmp eq i32 %bf.clear52, 7, !dbg !4537
  br i1 %cmp53, label %if.then54, label %if.else120, !dbg !4539

if.then54:                                        ; preds = %if.else50
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %next, metadata !4540, metadata !DIExpression()), !dbg !4542
  %33 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4543
  %u55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !4543
  %fld56 = bitcast %union.u* %u55 to [1 x %union.rtunion_def]*, !dbg !4543
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i64 0, i64 2, !dbg !4543
  %rt_rtx58 = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtx_def**, !dbg !4543
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx58, align 8, !dbg !4543
  store %struct.rtx_def* %34, %struct.rtx_def** %next, align 8, !dbg !4545
  br label %for.cond59, !dbg !4546

for.cond59:                                       ; preds = %for.inc92, %if.then54
  %35 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !4547
  %tobool60 = icmp ne %struct.rtx_def* %35, null, !dbg !4549
  br i1 %tobool60, label %for.body61, label %for.end97, !dbg !4549

for.body61:                                       ; preds = %for.cond59
  %36 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !4550
  %37 = bitcast %struct.rtx_def* %36 to i32*, !dbg !4550
  %bf.load62 = load i32, i32* %37, align 8, !dbg !4550
  %bf.clear63 = and i32 %bf.load62, 65535, !dbg !4550
  %cmp64 = icmp eq i32 %bf.clear63, 13, !dbg !4550
  br i1 %cmp64, label %if.then65, label %if.else66, !dbg !4552

if.then65:                                        ; preds = %for.body61
  br label %for.inc92, !dbg !4553

if.else66:                                        ; preds = %for.body61
  %38 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !4554
  %39 = bitcast %struct.rtx_def* %38 to i32*, !dbg !4554
  %bf.load67 = load i32, i32* %39, align 8, !dbg !4554
  %bf.clear68 = and i32 %bf.load67, 65535, !dbg !4554
  %cmp69 = icmp eq i32 %bf.clear68, 7, !dbg !4554
  br i1 %cmp69, label %if.else71, label %if.then70, !dbg !4556

if.then70:                                        ; preds = %if.else66
  store i8 1, i8* %retval, align 1, !dbg !4557
  br label %return, !dbg !4557

if.else71:                                        ; preds = %if.else66
  %40 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4558
  %u72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !4558
  %fld73 = bitcast %union.u* %u72 to [1 x %union.rtunion_def]*, !dbg !4558
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i64 0, i64 5, !dbg !4558
  %rt_rtx75 = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtx_def**, !dbg !4558
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx75, align 8, !dbg !4558
  %u76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !4558
  %fld77 = bitcast %union.u* %u76 to [1 x %union.rtunion_def]*, !dbg !4558
  %arrayidx78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld77, i64 0, i64 0, !dbg !4558
  %rt_tree = bitcast %union.rtunion_def* %arrayidx78 to %union.tree_node**, !dbg !4558
  %42 = load %union.tree_node*, %union.tree_node** %rt_tree, align 8, !dbg !4558
  %43 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !4560
  %u79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1, !dbg !4560
  %fld80 = bitcast %union.u* %u79 to [1 x %union.rtunion_def]*, !dbg !4560
  %arrayidx81 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld80, i64 0, i64 5, !dbg !4560
  %rt_rtx82 = bitcast %union.rtunion_def* %arrayidx81 to %struct.rtx_def**, !dbg !4560
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx82, align 8, !dbg !4560
  %u83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1, !dbg !4560
  %fld84 = bitcast %union.u* %u83 to [1 x %union.rtunion_def]*, !dbg !4560
  %arrayidx85 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld84, i64 0, i64 0, !dbg !4560
  %rt_tree86 = bitcast %union.rtunion_def* %arrayidx85 to %union.tree_node**, !dbg !4560
  %45 = load %union.tree_node*, %union.tree_node** %rt_tree86, align 8, !dbg !4560
  %cmp87 = icmp eq %union.tree_node* %42, %45, !dbg !4561
  br i1 %cmp87, label %if.then88, label %if.end89, !dbg !4562

if.then88:                                        ; preds = %if.else71
  store i8 0, i8* %retval, align 1, !dbg !4563
  br label %return, !dbg !4563

if.end89:                                         ; preds = %if.else71
  br label %if.end90

if.end90:                                         ; preds = %if.end89
  br label %if.end91

if.end91:                                         ; preds = %if.end90
  br label %for.inc92, !dbg !4550

for.inc92:                                        ; preds = %if.end91, %if.then65
  %46 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !4564
  %u93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1, !dbg !4564
  %fld94 = bitcast %union.u* %u93 to [1 x %union.rtunion_def]*, !dbg !4564
  %arrayidx95 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld94, i64 0, i64 2, !dbg !4564
  %rt_rtx96 = bitcast %union.rtunion_def* %arrayidx95 to %struct.rtx_def**, !dbg !4564
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx96, align 8, !dbg !4564
  store %struct.rtx_def* %47, %struct.rtx_def** %next, align 8, !dbg !4565
  br label %for.cond59, !dbg !4566, !llvm.loop !4567

for.end97:                                        ; preds = %for.cond59
  %48 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4569
  %u98 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1, !dbg !4569
  %fld99 = bitcast %union.u* %u98 to [1 x %union.rtunion_def]*, !dbg !4569
  %arrayidx100 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld99, i64 0, i64 5, !dbg !4569
  %rt_rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**, !dbg !4569
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx101, align 8, !dbg !4569
  %u102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1, !dbg !4569
  %fld103 = bitcast %union.u* %u102 to [1 x %union.rtunion_def]*, !dbg !4569
  %arrayidx104 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld103, i64 0, i64 1, !dbg !4569
  %rt_rtx105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtx_def**, !dbg !4569
  %50 = load i32*, i32** %counts.addr, align 8, !dbg !4571
  %51 = bitcast i32* %50 to i8*, !dbg !4571
  %call106 = call i32 @for_each_rtx(%struct.rtx_def** %rt_rtx105, i32 (%struct.rtx_def**, i8*)* @is_dead_reg, i8* %51), !dbg !4572
  %tobool107 = icmp ne i32 %call106, 0, !dbg !4572
  br i1 %tobool107, label %if.then108, label %if.end119, !dbg !4573

if.then108:                                       ; preds = %for.end97
  %52 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4574
  %call109 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 25, i32 0, %struct.rtx_def* %52), !dbg !4574
  %53 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4576
  %u110 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1, !dbg !4576
  %fld111 = bitcast %union.u* %u110 to [1 x %union.rtunion_def]*, !dbg !4576
  %arrayidx112 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld111, i64 0, i64 5, !dbg !4576
  %rt_rtx113 = bitcast %union.rtunion_def* %arrayidx112 to %struct.rtx_def**, !dbg !4576
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx113, align 8, !dbg !4576
  %u114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1, !dbg !4576
  %fld115 = bitcast %union.u* %u114 to [1 x %union.rtunion_def]*, !dbg !4576
  %arrayidx116 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld115, i64 0, i64 1, !dbg !4576
  %rt_rtx117 = bitcast %union.rtunion_def* %arrayidx116 to %struct.rtx_def**, !dbg !4576
  store %struct.rtx_def* %call109, %struct.rtx_def** %rt_rtx117, align 8, !dbg !4577
  %55 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4578
  %call118 = call zeroext i8 @df_insn_rescan(%struct.rtx_def* %55), !dbg !4579
  br label %if.end119, !dbg !4580

if.end119:                                        ; preds = %if.then108, %for.end97
  store i8 1, i8* %retval, align 1, !dbg !4581
  br label %return, !dbg !4581

if.else120:                                       ; preds = %if.else50
  store i8 1, i8* %retval, align 1, !dbg !4582
  br label %return, !dbg !4582

return:                                           ; preds = %if.else120, %if.end119, %if.then88, %if.then70, %for.end, %if.then47, %if.then39, %if.then1, %if.then
  %56 = load i8, i8* %retval, align 1, !dbg !4583
  ret i8 %56, !dbg !4583
}

declare dso_local zeroext i8 @dbg_cnt(i32) #2

declare dso_local %struct.rtx_def* @delete_insn_and_edges(%struct.rtx_def*) #2

declare dso_local void @timevar_pop_1(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @gate_handle_cse() #0 !dbg !4584 {
entry:
  %0 = load i32, i32* @optimize, align 4, !dbg !4585
  %cmp = icmp sgt i32 %0, 0, !dbg !4586
  %conv = zext i1 %cmp to i32, !dbg !4586
  %conv1 = trunc i32 %conv to i8, !dbg !4585
  ret i8 %conv1, !dbg !4587
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rest_of_handle_cse() #0 !dbg !4588 {
entry:
  %tem = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tem, metadata !4589, metadata !DIExpression()), !dbg !4590
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4591
  %tobool = icmp ne %struct._IO_FILE* %0, null, !dbg !4591
  br i1 %tobool, label %if.then, label %if.end, !dbg !4593

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4594
  %2 = load i32, i32* @dump_flags, align 4, !dbg !4595
  call void @dump_flow_info(%struct._IO_FILE* %1, i32 %2), !dbg !4596
  br label %if.end, !dbg !4596

if.end:                                           ; preds = %if.then, %entry
  %call = call %struct.rtx_def* @get_insns(), !dbg !4597
  %call1 = call i32 @max_reg_num(), !dbg !4598
  %call2 = call i32 @cse_main(%struct.rtx_def* %call, i32 %call1), !dbg !4599
  store i32 %call2, i32* %tem, align 4, !dbg !4600
  %3 = load i32, i32* @flag_rerun_cse_after_loop, align 4, !dbg !4601
  %tobool3 = icmp ne i32 %3, 0, !dbg !4601
  br i1 %tobool3, label %land.end, label %land.rhs, !dbg !4602

land.rhs:                                         ; preds = %if.end
  %4 = load i32, i32* @flag_gcse, align 4, !dbg !4603
  %tobool4 = icmp ne i32 %4, 0, !dbg !4604
  %lnot = xor i1 %tobool4, true, !dbg !4604
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %5 = phi i1 [ false, %if.end ], [ %lnot, %land.rhs ], !dbg !4605
  %land.ext = zext i1 %5 to i32, !dbg !4602
  store i32 %land.ext, i32* @cse_not_expected, align 4, !dbg !4606
  %6 = load i32, i32* %tem, align 4, !dbg !4607
  %cmp = icmp eq i32 %6, 2, !dbg !4609
  br i1 %cmp, label %if.then5, label %if.else, !dbg !4610

if.then5:                                         ; preds = %land.end
  br label %do.body, !dbg !4611

do.body:                                          ; preds = %if.then5
  %7 = load i8, i8* @timevar_enable, align 1, !dbg !4613
  %tobool6 = icmp ne i8 %7, 0, !dbg !4613
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !4616

if.then7:                                         ; preds = %do.body
  call void @timevar_push_1(i32 119), !dbg !4613
  br label %if.end8, !dbg !4613

if.end8:                                          ; preds = %if.then7, %do.body
  br label %do.end, !dbg !4616

do.end:                                           ; preds = %if.end8
  %call9 = call %struct.rtx_def* @get_insns(), !dbg !4617
  call void @rebuild_jump_labels(%struct.rtx_def* %call9), !dbg !4618
  %call10 = call zeroext i8 @cleanup_cfg(i32 0), !dbg !4619
  br label %do.body11, !dbg !4620

do.body11:                                        ; preds = %do.end
  %8 = load i8, i8* @timevar_enable, align 1, !dbg !4621
  %tobool12 = icmp ne i8 %8, 0, !dbg !4621
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !4624

if.then13:                                        ; preds = %do.body11
  call void @timevar_pop_1(i32 119), !dbg !4621
  br label %if.end14, !dbg !4621

if.end14:                                         ; preds = %if.then13, %do.body11
  br label %do.end15, !dbg !4624

do.end15:                                         ; preds = %if.end14
  br label %if.end21, !dbg !4625

if.else:                                          ; preds = %land.end
  %9 = load i32, i32* %tem, align 4, !dbg !4626
  %cmp16 = icmp eq i32 %9, 1, !dbg !4628
  br i1 %cmp16, label %if.then18, label %lor.lhs.false, !dbg !4629

lor.lhs.false:                                    ; preds = %if.else
  %10 = load i32, i32* @optimize, align 4, !dbg !4630
  %cmp17 = icmp sgt i32 %10, 1, !dbg !4631
  br i1 %cmp17, label %if.then18, label %if.end20, !dbg !4632

if.then18:                                        ; preds = %lor.lhs.false, %if.else
  %call19 = call zeroext i8 @cleanup_cfg(i32 0), !dbg !4633
  br label %if.end20, !dbg !4633

if.end20:                                         ; preds = %if.then18, %lor.lhs.false
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %do.end15
  ret i32 0, !dbg !4634
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @gate_handle_cse2() #0 !dbg !4635 {
entry:
  %0 = load i32, i32* @optimize, align 4, !dbg !4636
  %cmp = icmp sgt i32 %0, 0, !dbg !4637
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4638

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* @flag_rerun_cse_after_loop, align 4, !dbg !4639
  %tobool = icmp ne i32 %1, 0, !dbg !4638
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %tobool, %land.rhs ], !dbg !4640
  %land.ext = zext i1 %2 to i32, !dbg !4638
  %conv = trunc i32 %land.ext to i8, !dbg !4636
  ret i8 %conv, !dbg !4641
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rest_of_handle_cse2() #0 !dbg !4642 {
entry:
  %tem = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %tem, metadata !4643, metadata !DIExpression()), !dbg !4644
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4645
  %tobool = icmp ne %struct._IO_FILE* %0, null, !dbg !4645
  br i1 %tobool, label %if.then, label %if.end, !dbg !4647

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4648
  %2 = load i32, i32* @dump_flags, align 4, !dbg !4649
  call void @dump_flow_info(%struct._IO_FILE* %1, i32 %2), !dbg !4650
  br label %if.end, !dbg !4650

if.end:                                           ; preds = %if.then, %entry
  %call = call %struct.rtx_def* @get_insns(), !dbg !4651
  %call1 = call i32 @max_reg_num(), !dbg !4652
  %call2 = call i32 @cse_main(%struct.rtx_def* %call, i32 %call1), !dbg !4653
  store i32 %call2, i32* %tem, align 4, !dbg !4654
  call void @cse_condition_code_reg(), !dbg !4655
  %call3 = call %struct.rtx_def* @get_insns(), !dbg !4656
  %call4 = call i32 @max_reg_num(), !dbg !4657
  %call5 = call i32 @delete_trivially_dead_insns(%struct.rtx_def* %call3, i32 %call4), !dbg !4658
  %3 = load i32, i32* %tem, align 4, !dbg !4659
  %cmp = icmp eq i32 %3, 2, !dbg !4661
  br i1 %cmp, label %if.then6, label %if.else, !dbg !4662

if.then6:                                         ; preds = %if.end
  br label %do.body, !dbg !4663

do.body:                                          ; preds = %if.then6
  %4 = load i8, i8* @timevar_enable, align 1, !dbg !4665
  %tobool7 = icmp ne i8 %4, 0, !dbg !4665
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !4668

if.then8:                                         ; preds = %do.body
  call void @timevar_push_1(i32 119), !dbg !4665
  br label %if.end9, !dbg !4665

if.end9:                                          ; preds = %if.then8, %do.body
  br label %do.end, !dbg !4668

do.end:                                           ; preds = %if.end9
  %call10 = call %struct.rtx_def* @get_insns(), !dbg !4669
  call void @rebuild_jump_labels(%struct.rtx_def* %call10), !dbg !4670
  %call11 = call zeroext i8 @cleanup_cfg(i32 0), !dbg !4671
  br label %do.body12, !dbg !4672

do.body12:                                        ; preds = %do.end
  %5 = load i8, i8* @timevar_enable, align 1, !dbg !4673
  %tobool13 = icmp ne i8 %5, 0, !dbg !4673
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !4676

if.then14:                                        ; preds = %do.body12
  call void @timevar_pop_1(i32 119), !dbg !4673
  br label %if.end15, !dbg !4673

if.end15:                                         ; preds = %if.then14, %do.body12
  br label %do.end16, !dbg !4676

do.end16:                                         ; preds = %if.end15
  br label %if.end21, !dbg !4677

if.else:                                          ; preds = %if.end
  %6 = load i32, i32* %tem, align 4, !dbg !4678
  %cmp17 = icmp eq i32 %6, 1, !dbg !4680
  br i1 %cmp17, label %if.then18, label %if.end20, !dbg !4681

if.then18:                                        ; preds = %if.else
  %call19 = call zeroext i8 @cleanup_cfg(i32 0), !dbg !4682
  br label %if.end20, !dbg !4682

if.end20:                                         ; preds = %if.then18, %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %do.end16
  store i32 1, i32* @cse_not_expected, align 4, !dbg !4683
  ret i32 0, !dbg !4684
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @gate_handle_cse_after_global_opts() #0 !dbg !4685 {
entry:
  %0 = load i32, i32* @optimize, align 4, !dbg !4686
  %cmp = icmp sgt i32 %0, 0, !dbg !4687
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4688

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* @flag_rerun_cse_after_global_opts, align 4, !dbg !4689
  %tobool = icmp ne i32 %1, 0, !dbg !4688
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %tobool, %land.rhs ], !dbg !4690
  %land.ext = zext i1 %2 to i32, !dbg !4688
  %conv = trunc i32 %land.ext to i8, !dbg !4686
  ret i8 %conv, !dbg !4691
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rest_of_handle_cse_after_global_opts() #0 !dbg !4692 {
entry:
  %save_cfj = alloca i32, align 4
  %tem = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %save_cfj, metadata !4693, metadata !DIExpression()), !dbg !4694
  call void @llvm.dbg.declare(metadata i32* %tem, metadata !4695, metadata !DIExpression()), !dbg !4696
  %0 = load i32, i32* @flag_cse_follow_jumps, align 4, !dbg !4697
  store i32 %0, i32* %save_cfj, align 4, !dbg !4698
  store i32 0, i32* @flag_cse_follow_jumps, align 4, !dbg !4699
  %call = call %struct.rtx_def* @get_insns(), !dbg !4700
  call void @rebuild_jump_labels(%struct.rtx_def* %call), !dbg !4701
  %call1 = call %struct.rtx_def* @get_insns(), !dbg !4702
  %call2 = call i32 @max_reg_num(), !dbg !4703
  %call3 = call i32 @cse_main(%struct.rtx_def* %call1, i32 %call2), !dbg !4704
  store i32 %call3, i32* %tem, align 4, !dbg !4705
  %call4 = call zeroext i8 @purge_all_dead_edges(), !dbg !4706
  %call5 = call %struct.rtx_def* @get_insns(), !dbg !4707
  %call6 = call i32 @max_reg_num(), !dbg !4708
  %call7 = call i32 @delete_trivially_dead_insns(%struct.rtx_def* %call5, i32 %call6), !dbg !4709
  %1 = load i32, i32* @flag_rerun_cse_after_loop, align 4, !dbg !4710
  %tobool = icmp ne i32 %1, 0, !dbg !4711
  %lnot = xor i1 %tobool, true, !dbg !4711
  %lnot.ext = zext i1 %lnot to i32, !dbg !4711
  store i32 %lnot.ext, i32* @cse_not_expected, align 4, !dbg !4712
  %2 = load i32, i32* %tem, align 4, !dbg !4713
  %cmp = icmp eq i32 %2, 2, !dbg !4715
  br i1 %cmp, label %if.then, label %if.else, !dbg !4716

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !4717

do.body:                                          ; preds = %if.then
  %3 = load i8, i8* @timevar_enable, align 1, !dbg !4719
  %tobool8 = icmp ne i8 %3, 0, !dbg !4719
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !4722

if.then9:                                         ; preds = %do.body
  call void @timevar_push_1(i32 119), !dbg !4719
  br label %if.end, !dbg !4719

if.end:                                           ; preds = %if.then9, %do.body
  br label %do.end, !dbg !4722

do.end:                                           ; preds = %if.end
  %call10 = call %struct.rtx_def* @get_insns(), !dbg !4723
  call void @rebuild_jump_labels(%struct.rtx_def* %call10), !dbg !4724
  %call11 = call zeroext i8 @cleanup_cfg(i32 0), !dbg !4725
  br label %do.body12, !dbg !4726

do.body12:                                        ; preds = %do.end
  %4 = load i8, i8* @timevar_enable, align 1, !dbg !4727
  %tobool13 = icmp ne i8 %4, 0, !dbg !4727
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !4730

if.then14:                                        ; preds = %do.body12
  call void @timevar_pop_1(i32 119), !dbg !4727
  br label %if.end15, !dbg !4727

if.end15:                                         ; preds = %if.then14, %do.body12
  br label %do.end16, !dbg !4730

do.end16:                                         ; preds = %if.end15
  br label %if.end21, !dbg !4731

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %tem, align 4, !dbg !4732
  %cmp17 = icmp eq i32 %5, 1, !dbg !4734
  br i1 %cmp17, label %if.then18, label %if.end20, !dbg !4735

if.then18:                                        ; preds = %if.else
  %call19 = call zeroext i8 @cleanup_cfg(i32 0), !dbg !4736
  br label %if.end20, !dbg !4736

if.end20:                                         ; preds = %if.then18, %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %do.end16
  %6 = load i32, i32* %save_cfj, align 4, !dbg !4737
  store i32 %6, i32* @flag_cse_follow_jumps, align 4, !dbg !4738
  ret i32 0, !dbg !4739
}

; Function Attrs: noinline nounwind uwtable
define internal void @get_cse_reg_info_1(i32 %regno) #0 !dbg !4740 {
entry:
  %regno.addr = alloca i32, align 4
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !4741, metadata !DIExpression()), !dbg !4742
  %0 = load i32, i32* @cse_reg_info_timestamp, align 4, !dbg !4743
  %1 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cse_reg_info_table, align 8, !dbg !4744
  %2 = load i32, i32* %regno.addr, align 4, !dbg !4745
  %idxprom = zext i32 %2 to i64, !dbg !4744
  %arrayidx = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %1, i64 %idxprom, !dbg !4744
  %timestamp = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %arrayidx, i32 0, i32 0, !dbg !4746
  store i32 %0, i32* %timestamp, align 4, !dbg !4747
  %3 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cse_reg_info_table, align 8, !dbg !4748
  %4 = load i32, i32* %regno.addr, align 4, !dbg !4749
  %idxprom1 = zext i32 %4 to i64, !dbg !4748
  %arrayidx2 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %3, i64 %idxprom1, !dbg !4748
  %reg_tick = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %arrayidx2, i32 0, i32 2, !dbg !4750
  store i32 1, i32* %reg_tick, align 4, !dbg !4751
  %5 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cse_reg_info_table, align 8, !dbg !4752
  %6 = load i32, i32* %regno.addr, align 4, !dbg !4753
  %idxprom3 = zext i32 %6 to i64, !dbg !4752
  %arrayidx4 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %5, i64 %idxprom3, !dbg !4752
  %reg_in_table = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %arrayidx4, i32 0, i32 3, !dbg !4754
  store i32 -1, i32* %reg_in_table, align 4, !dbg !4755
  %7 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cse_reg_info_table, align 8, !dbg !4756
  %8 = load i32, i32* %regno.addr, align 4, !dbg !4757
  %idxprom5 = zext i32 %8 to i64, !dbg !4756
  %arrayidx6 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %7, i64 %idxprom5, !dbg !4756
  %subreg_ticked = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %arrayidx6, i32 0, i32 4, !dbg !4758
  store i32 -1, i32* %subreg_ticked, align 4, !dbg !4759
  %9 = load i32, i32* %regno.addr, align 4, !dbg !4760
  %sub = sub i32 0, %9, !dbg !4761
  %sub7 = sub i32 %sub, 1, !dbg !4762
  %10 = load %struct.cse_reg_info*, %struct.cse_reg_info** @cse_reg_info_table, align 8, !dbg !4763
  %11 = load i32, i32* %regno.addr, align 4, !dbg !4764
  %idxprom8 = zext i32 %11 to i64, !dbg !4763
  %arrayidx9 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %10, i64 %idxprom8, !dbg !4763
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %arrayidx9, i32 0, i32 1, !dbg !4765
  store i32 %sub7, i32* %reg_qty, align 4, !dbg !4766
  ret void, !dbg !4767
}

declare dso_local %struct.rtx_def* @gen_lowpart_if_possible(i32, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @gen_lowpart_no_emit_general(i32, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @reg_nonzero_bits_general(%struct.rtx_def*, i32, %struct.rtx_def*, i32, i64, i64*) #2

declare dso_local %struct.rtx_def* @reg_num_sign_bit_copies_general(%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, i32*) #2

declare dso_local zeroext i8 @reg_truncated_to_mode_general(i32, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @SET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) #0 !dbg !4768 {
entry:
  %map.addr = alloca %struct.simple_bitmap_def*, align 8
  %bitno.addr = alloca i32, align 4
  %oldbit = alloca i8, align 1
  store %struct.simple_bitmap_def* %map, %struct.simple_bitmap_def** %map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.simple_bitmap_def** %map.addr, metadata !4771, metadata !DIExpression()), !dbg !4772
  store i32 %bitno, i32* %bitno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bitno.addr, metadata !4773, metadata !DIExpression()), !dbg !4774
  %0 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !4775
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %0, i32 0, i32 0, !dbg !4777
  %1 = load i8*, i8** %popcount, align 8, !dbg !4777
  %tobool = icmp ne i8* %1, null, !dbg !4775
  br i1 %tobool, label %if.then, label %if.end7, !dbg !4778

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %oldbit, metadata !4779, metadata !DIExpression()), !dbg !4781
  %2 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !4782
  %elms = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %2, i32 0, i32 3, !dbg !4782
  %3 = load i32, i32* %bitno.addr, align 4, !dbg !4782
  %div = udiv i32 %3, 64, !dbg !4782
  %idxprom = zext i32 %div to i64, !dbg !4782
  %arrayidx = getelementptr inbounds [1 x i64], [1 x i64]* %elms, i64 0, i64 %idxprom, !dbg !4782
  %4 = load i64, i64* %arrayidx, align 8, !dbg !4782
  %5 = load i32, i32* %bitno.addr, align 4, !dbg !4782
  %rem = urem i32 %5, 64, !dbg !4782
  %sh_prom = zext i32 %rem to i64, !dbg !4782
  %shr = lshr i64 %4, %sh_prom, !dbg !4782
  %and = and i64 %shr, 1, !dbg !4782
  %conv = trunc i64 %and to i8, !dbg !4782
  store i8 %conv, i8* %oldbit, align 1, !dbg !4783
  %6 = load i8, i8* %oldbit, align 1, !dbg !4784
  %tobool1 = icmp ne i8 %6, 0, !dbg !4784
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !4786

if.then2:                                         ; preds = %if.then
  %7 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !4787
  %popcount3 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %7, i32 0, i32 0, !dbg !4788
  %8 = load i8*, i8** %popcount3, align 8, !dbg !4788
  %9 = load i32, i32* %bitno.addr, align 4, !dbg !4789
  %div4 = udiv i32 %9, 64, !dbg !4790
  %idxprom5 = zext i32 %div4 to i64, !dbg !4787
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 %idxprom5, !dbg !4787
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !4791
  %inc = add i8 %10, 1, !dbg !4791
  store i8 %inc, i8* %arrayidx6, align 1, !dbg !4791
  br label %if.end, !dbg !4787

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end7, !dbg !4792

if.end7:                                          ; preds = %if.end, %entry
  %11 = load i32, i32* %bitno.addr, align 4, !dbg !4793
  %rem8 = urem i32 %11, 64, !dbg !4794
  %sh_prom9 = zext i32 %rem8 to i64, !dbg !4795
  %shl = shl i64 1, %sh_prom9, !dbg !4795
  %12 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !4796
  %elms10 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %12, i32 0, i32 3, !dbg !4797
  %13 = load i32, i32* %bitno.addr, align 4, !dbg !4798
  %div11 = udiv i32 %13, 64, !dbg !4799
  %idxprom12 = zext i32 %div11 to i64, !dbg !4796
  %arrayidx13 = getelementptr inbounds [1 x i64], [1 x i64]* %elms10, i64 0, i64 %idxprom12, !dbg !4796
  %14 = load i64, i64* %arrayidx13, align 8, !dbg !4800
  %or = or i64 %14, %shl, !dbg !4800
  store i64 %or, i64* %arrayidx13, align 8, !dbg !4800
  ret void, !dbg !4801
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) #0 !dbg !4802 {
entry:
  %vec_.addr = alloca %struct.VEC_edge_base*, align 8
  store %struct.VEC_edge_base* %vec_, %struct.VEC_edge_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_base** %vec_.addr, metadata !4807, metadata !DIExpression()), !dbg !4808
  %0 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !4808
  %tobool = icmp ne %struct.VEC_edge_base* %0, null, !dbg !4808
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4808

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !4808
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %1, i32 0, i32 0, !dbg !4808
  %2 = load i32, i32* %num, align 8, !dbg !4808
  br label %cond.end, !dbg !4808

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4808

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !4808
  ret i32 %cond, !dbg !4808
}

declare dso_local i32 @any_condjump_p(%struct.rtx_def*) #2

declare dso_local %struct.edge_def* @find_edge(%struct.basic_block_def*, %struct.basic_block_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) #0 !dbg !4809 {
entry:
  %vec_.addr = alloca %struct.VEC_edge_base*, align 8
  %ix_.addr = alloca i32, align 4
  store %struct.VEC_edge_base* %vec_, %struct.VEC_edge_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_base** %vec_.addr, metadata !4812, metadata !DIExpression()), !dbg !4813
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !4814, metadata !DIExpression()), !dbg !4813
  %0 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !4813
  %tobool = icmp ne %struct.VEC_edge_base* %0, null, !dbg !4813
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !4813

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !4813
  %2 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !4813
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %2, i32 0, i32 0, !dbg !4813
  %3 = load i32, i32* %num, align 8, !dbg !4813
  %cmp = icmp ult i32 %1, %3, !dbg !4813
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !4815
  %land.ext = zext i1 %4 to i32, !dbg !4813
  %5 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !4813
  %vec = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %5, i32 0, i32 2, !dbg !4813
  %6 = load i32, i32* %ix_.addr, align 4, !dbg !4813
  %idxprom = zext i32 %6 to i64, !dbg !4813
  %arrayidx = getelementptr inbounds [1 x %struct.edge_def*], [1 x %struct.edge_def*]* %vec, i64 0, i64 %idxprom, !dbg !4813
  %7 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !4813
  ret %struct.edge_def* %7, !dbg !4813
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) #0 !dbg !4816 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !4822, metadata !DIExpression()), !dbg !4823
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4824
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 0, !dbg !4824
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !4824
  %tobool = icmp ne %struct.VEC_edge_gc* %1, null, !dbg !4824
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4824

cond.true:                                        ; preds = %entry
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4824
  %preds1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i32 0, i32 0, !dbg !4824
  %3 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds1, align 8, !dbg !4824
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %3, i32 0, i32 0, !dbg !4824
  br label %cond.end, !dbg !4824

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4824

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !4824
  %call = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !4824
  %cmp = icmp eq i32 %call, 1, !dbg !4825
  %conv = zext i1 %cmp to i32, !dbg !4825
  %conv2 = trunc i32 %conv to i8, !dbg !4824
  ret i8 %conv2, !dbg !4826
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #0 !dbg !4827 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !4828, metadata !DIExpression()), !dbg !4829
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4830
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 1, !dbg !4830
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4830
  %tobool = icmp ne %struct.VEC_edge_gc* %1, null, !dbg !4830
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4830

cond.true:                                        ; preds = %entry
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4830
  %succs1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i32 0, i32 1, !dbg !4830
  %3 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs1, align 8, !dbg !4830
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %3, i32 0, i32 0, !dbg !4830
  br label %cond.end, !dbg !4830

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4830

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !4830
  %call = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !4830
  %cmp = icmp eq i32 %call, 1, !dbg !4831
  %conv = zext i1 %cmp to i32, !dbg !4831
  %conv2 = trunc i32 %conv to i8, !dbg !4830
  ret i8 %conv2, !dbg !4832
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #0 !dbg !4833 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !4836, metadata !DIExpression()), !dbg !4837
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4838
  %call = call zeroext i8 @single_succ_p(%struct.basic_block_def* %0), !dbg !4838
  %tobool = icmp ne i8 %call, 0, !dbg !4838
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4838

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)), !dbg !4838
  br label %cond.end, !dbg !4838

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4838

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !4838
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4839
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i32 0, i32 1, !dbg !4839
  %2 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4839
  %tobool1 = icmp ne %struct.VEC_edge_gc* %2, null, !dbg !4839
  br i1 %tobool1, label %cond.true2, label %cond.false4, !dbg !4839

cond.true2:                                       ; preds = %cond.end
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4839
  %succs3 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i32 0, i32 1, !dbg !4839
  %4 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs3, align 8, !dbg !4839
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %4, i32 0, i32 0, !dbg !4839
  br label %cond.end5, !dbg !4839

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !4839

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.false4 ], !dbg !4839
  %call7 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0), !dbg !4839
  ret %struct.edge_def* %call7, !dbg !4840
}

declare dso_local i32 @fputc(i32, %struct._IO_FILE*) #2

declare dso_local i32 @fflush(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @new_basic_block() #0 !dbg !4841 {
entry:
  %i = alloca i32, align 4
  %first = alloca %struct.table_elt*, align 8
  %last = alloca %struct.table_elt*, align 8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4844, metadata !DIExpression()), !dbg !4845
  store i32 0, i32* @next_qty, align 4, !dbg !4846
  %0 = load i32, i32* @cse_reg_info_timestamp, align 4, !dbg !4847
  %inc = add i32 %0, 1, !dbg !4847
  store i32 %inc, i32* @cse_reg_info_timestamp, align 4, !dbg !4847
  store i64 0, i64* @hard_regs_in_table, align 8, !dbg !4848
  store i32 0, i32* %i, align 4, !dbg !4849
  br label %for.cond, !dbg !4851

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !4852
  %cmp = icmp slt i32 %1, 32, !dbg !4854
  br i1 %cmp, label %for.body, label %for.end, !dbg !4855

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.table_elt** %first, metadata !4856, metadata !DIExpression()), !dbg !4858
  %2 = load i32, i32* %i, align 4, !dbg !4859
  %idxprom = sext i32 %2 to i64, !dbg !4860
  %arrayidx = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom, !dbg !4860
  %3 = load %struct.table_elt*, %struct.table_elt** %arrayidx, align 8, !dbg !4860
  store %struct.table_elt* %3, %struct.table_elt** %first, align 8, !dbg !4861
  %4 = load %struct.table_elt*, %struct.table_elt** %first, align 8, !dbg !4862
  %cmp1 = icmp ne %struct.table_elt* %4, null, !dbg !4864
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4865

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.table_elt** %last, metadata !4866, metadata !DIExpression()), !dbg !4868
  %5 = load %struct.table_elt*, %struct.table_elt** %first, align 8, !dbg !4869
  store %struct.table_elt* %5, %struct.table_elt** %last, align 8, !dbg !4868
  %6 = load i32, i32* %i, align 4, !dbg !4870
  %idxprom2 = sext i32 %6 to i64, !dbg !4871
  %arrayidx3 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom2, !dbg !4871
  store %struct.table_elt* null, %struct.table_elt** %arrayidx3, align 8, !dbg !4872
  br label %while.cond, !dbg !4873

while.cond:                                       ; preds = %while.body, %if.then
  %7 = load %struct.table_elt*, %struct.table_elt** %last, align 8, !dbg !4874
  %next_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %7, i32 0, i32 2, !dbg !4875
  %8 = load %struct.table_elt*, %struct.table_elt** %next_same_hash, align 8, !dbg !4875
  %cmp4 = icmp ne %struct.table_elt* %8, null, !dbg !4876
  br i1 %cmp4, label %while.body, label %while.end, !dbg !4873

while.body:                                       ; preds = %while.cond
  %9 = load %struct.table_elt*, %struct.table_elt** %last, align 8, !dbg !4877
  %next_same_hash5 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %9, i32 0, i32 2, !dbg !4878
  %10 = load %struct.table_elt*, %struct.table_elt** %next_same_hash5, align 8, !dbg !4878
  store %struct.table_elt* %10, %struct.table_elt** %last, align 8, !dbg !4879
  br label %while.cond, !dbg !4873, !llvm.loop !4880

while.end:                                        ; preds = %while.cond
  %11 = load %struct.table_elt*, %struct.table_elt** @free_element_chain, align 8, !dbg !4881
  %12 = load %struct.table_elt*, %struct.table_elt** %last, align 8, !dbg !4882
  %next_same_hash6 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %12, i32 0, i32 2, !dbg !4883
  store %struct.table_elt* %11, %struct.table_elt** %next_same_hash6, align 8, !dbg !4884
  %13 = load %struct.table_elt*, %struct.table_elt** %first, align 8, !dbg !4885
  store %struct.table_elt* %13, %struct.table_elt** @free_element_chain, align 8, !dbg !4886
  br label %if.end, !dbg !4887

if.end:                                           ; preds = %while.end, %for.body
  br label %for.inc, !dbg !4888

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %i, align 4, !dbg !4889
  %inc7 = add nsw i32 %14, 1, !dbg !4889
  store i32 %inc7, i32* %i, align 4, !dbg !4889
  br label %for.cond, !dbg !4890, !llvm.loop !4891

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4893
}

declare dso_local %struct.bitmap_head_def* @df_get_live_in(%struct.basic_block_def*) #2

declare dso_local %struct.bitmap_head_def* @df_get_live_out(%struct.basic_block_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @bb_has_eh_pred(%struct.basic_block_def* %bb) #0 !dbg !4894 {
entry:
  %retval = alloca i8, align 1
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !4897, metadata !DIExpression()), !dbg !4898
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e, metadata !4899, metadata !DIExpression()), !dbg !4900
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %ei, metadata !4901, metadata !DIExpression()), !dbg !4908
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4909
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 0, !dbg !4909
  %call = call { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds), !dbg !4909
  %1 = bitcast %struct.edge_iterator* %tmp to { i32, %struct.VEC_edge_gc** }*, !dbg !4909
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %1, i32 0, i32 0, !dbg !4909
  %3 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !4909
  store i32 %3, i32* %2, align 8, !dbg !4909
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %1, i32 0, i32 1, !dbg !4909
  %5 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !4909
  store %struct.VEC_edge_gc** %5, %struct.VEC_edge_gc*** %4, align 8, !dbg !4909
  %6 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4909
  %7 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4909
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 16, i1 false), !dbg !4909
  br label %for.cond, !dbg !4909

for.cond:                                         ; preds = %for.inc, %entry
  %8 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !4911
  %9 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 0, !dbg !4911
  %10 = load i32, i32* %9, align 8, !dbg !4911
  %11 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 1, !dbg !4911
  %12 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !4911
  %call1 = call zeroext i8 @ei_cond(i32 %10, %struct.VEC_edge_gc** %12, %struct.edge_def** %e), !dbg !4911
  %tobool = icmp ne i8 %call1, 0, !dbg !4909
  br i1 %tobool, label %for.body, label %for.end, !dbg !4909

for.body:                                         ; preds = %for.cond
  %13 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !4913
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %13, i32 0, i32 7, !dbg !4916
  %14 = load i32, i32* %flags, align 8, !dbg !4916
  %and = and i32 %14, 8, !dbg !4917
  %tobool2 = icmp ne i32 %and, 0, !dbg !4917
  br i1 %tobool2, label %if.then, label %if.end, !dbg !4918

if.then:                                          ; preds = %for.body
  store i8 1, i8* %retval, align 1, !dbg !4919
  br label %return, !dbg !4919

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4920

for.inc:                                          ; preds = %if.end
  call void @ei_next(%struct.edge_iterator* %ei), !dbg !4911
  br label %for.cond, !dbg !4911, !llvm.loop !4921

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !4923
  br label %return, !dbg !4923

return:                                           ; preds = %for.end, %if.then
  %15 = load i8, i8* %retval, align 1, !dbg !4924
  ret i8 %15, !dbg !4924
}

; Function Attrs: noinline nounwind uwtable
define internal %union.df_ref_d** @df_get_artificial_defs(i32 %bb_index) #0 !dbg !4925 {
entry:
  %bb_index.addr = alloca i32, align 4
  store i32 %bb_index, i32* %bb_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bb_index.addr, metadata !4928, metadata !DIExpression()), !dbg !4929
  %0 = load i32, i32* %bb_index.addr, align 4, !dbg !4930
  %call = call %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 %0), !dbg !4931
  %artificial_defs = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %call, i32 0, i32 0, !dbg !4932
  %1 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_defs, align 8, !dbg !4932
  ret %union.df_ref_d** %1, !dbg !4933
}

; Function Attrs: noinline nounwind uwtable
define internal void @invalidate(%struct.rtx_def* %x, i32 %full_mode) #0 !dbg !4934 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %full_mode.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %p = alloca %struct.table_elt*, align 8
  %addr = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  %hash = alloca i32, align 4
  %in_table = alloca i64, align 8
  %endregno = alloca i32, align 4
  %tregno = alloca i32, align 4
  %tendregno = alloca i32, align 4
  %rn = alloca i32, align 4
  %p20 = alloca %struct.table_elt*, align 8
  %next = alloca %struct.table_elt*, align 8
  %next129 = alloca %struct.table_elt*, align 8
  %d = alloca %struct.check_dependence_data, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !4937, metadata !DIExpression()), !dbg !4938
  store i32 %full_mode, i32* %full_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %full_mode.addr, metadata !4939, metadata !DIExpression()), !dbg !4940
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4941, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.declare(metadata %struct.table_elt** %p, metadata !4943, metadata !DIExpression()), !dbg !4944
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %addr, metadata !4945, metadata !DIExpression()), !dbg !4946
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4947
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !4947
  %bf.load = load i32, i32* %1, align 8, !dbg !4947
  %bf.clear = and i32 %bf.load, 65535, !dbg !4947
  switch i32 %bf.clear, label %sw.default [
    i32 37, label %sw.bb
    i32 39, label %sw.bb87
    i32 15, label %sw.bb89
    i32 3, label %sw.bb105
    i32 43, label %sw.bb110
  ], !dbg !4948

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !4949, metadata !DIExpression()), !dbg !4952
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4953
  %call = call i32 @rhs_regno(%struct.rtx_def* %2), !dbg !4953
  store i32 %call, i32* %regno, align 4, !dbg !4952
  call void @llvm.dbg.declare(metadata i32* %hash, metadata !4954, metadata !DIExpression()), !dbg !4955
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4956
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !4956
  %bf.load1 = load i32, i32* %4, align 8, !dbg !4956
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !4956
  %cmp = icmp eq i32 %bf.clear2, 37, !dbg !4956
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !4956

land.lhs.true:                                    ; preds = %sw.bb
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4956
  %call3 = call i32 @rhs_regno(%struct.rtx_def* %5), !dbg !4956
  %cmp4 = icmp uge i32 %call3, 53, !dbg !4956
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !4956

cond.true:                                        ; preds = %land.lhs.true
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4956
  %call5 = call i32 @rhs_regno(%struct.rtx_def* %6), !dbg !4956
  %call6 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call5), !dbg !4956
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call6, i32 0, i32 1, !dbg !4956
  %7 = load i32, i32* %reg_qty, align 4, !dbg !4956
  %add = add i32 4736, %7, !dbg !4956
  br label %cond.end, !dbg !4956

cond.false:                                       ; preds = %land.lhs.true, %sw.bb
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4956
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4956
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !4956
  %bf.load7 = load i32, i32* %10, align 8, !dbg !4956
  %bf.lshr = lshr i32 %bf.load7, 16, !dbg !4956
  %bf.clear8 = and i32 %bf.lshr, 255, !dbg !4956
  %call9 = call i32 @canon_hash(%struct.rtx_def* %8, i32 %bf.clear8), !dbg !4956
  br label %cond.end, !dbg !4956

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %call9, %cond.false ], !dbg !4956
  %and = and i32 %cond, 31, !dbg !4956
  store i32 %and, i32* %hash, align 4, !dbg !4955
  %11 = load i32, i32* %regno, align 4, !dbg !4957
  call void @delete_reg_equiv(i32 %11), !dbg !4958
  %12 = load i32, i32* %regno, align 4, !dbg !4959
  %call10 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %12), !dbg !4959
  %reg_tick = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call10, i32 0, i32 2, !dbg !4959
  %13 = load i32, i32* %reg_tick, align 4, !dbg !4960
  %inc = add nsw i32 %13, 1, !dbg !4960
  store i32 %inc, i32* %reg_tick, align 4, !dbg !4960
  %14 = load i32, i32* %regno, align 4, !dbg !4961
  %call11 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %14), !dbg !4961
  %subreg_ticked = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call11, i32 0, i32 4, !dbg !4961
  store i32 -1, i32* %subreg_ticked, align 4, !dbg !4962
  %15 = load i32, i32* %regno, align 4, !dbg !4963
  %cmp12 = icmp uge i32 %15, 53, !dbg !4965
  br i1 %cmp12, label %if.then, label %if.else, !dbg !4966

if.then:                                          ; preds = %cond.end
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4967
  %17 = load i32, i32* %hash, align 4, !dbg !4968
  call void @remove_pseudo_from_table(%struct.rtx_def* %16, i32 %17), !dbg !4969
  br label %if.end86, !dbg !4969

if.else:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %in_table, metadata !4970, metadata !DIExpression()), !dbg !4972
  %18 = load i64, i64* @hard_regs_in_table, align 8, !dbg !4973
  %19 = load i32, i32* %regno, align 4, !dbg !4973
  %sh_prom = zext i32 %19 to i64, !dbg !4973
  %shl = shl i64 1, %sh_prom, !dbg !4973
  %and13 = and i64 %18, %shl, !dbg !4973
  %tobool = icmp ne i64 %and13, 0, !dbg !4973
  %lnot = xor i1 %tobool, true, !dbg !4973
  %lnot14 = xor i1 %lnot, true, !dbg !4973
  %lnot.ext = zext i1 %lnot14 to i32, !dbg !4973
  %conv = sext i32 %lnot.ext to i64, !dbg !4973
  store i64 %conv, i64* %in_table, align 8, !dbg !4972
  call void @llvm.dbg.declare(metadata i32* %endregno, metadata !4974, metadata !DIExpression()), !dbg !4975
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4976
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !4976
  %bf.load15 = load i32, i32* %21, align 8, !dbg !4976
  %bf.lshr16 = lshr i32 %bf.load15, 16, !dbg !4976
  %bf.clear17 = and i32 %bf.lshr16, 255, !dbg !4976
  %22 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4976
  %call18 = call i32 @rhs_regno(%struct.rtx_def* %22), !dbg !4976
  %call19 = call i32 @end_hard_regno(i32 %bf.clear17, i32 %call18), !dbg !4976
  store i32 %call19, i32* %endregno, align 4, !dbg !4975
  call void @llvm.dbg.declare(metadata i32* %tregno, metadata !4977, metadata !DIExpression()), !dbg !4978
  call void @llvm.dbg.declare(metadata i32* %tendregno, metadata !4979, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.declare(metadata i32* %rn, metadata !4981, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.declare(metadata %struct.table_elt** %p20, metadata !4983, metadata !DIExpression()), !dbg !4984
  call void @llvm.dbg.declare(metadata %struct.table_elt** %next, metadata !4985, metadata !DIExpression()), !dbg !4986
  %23 = load i32, i32* %regno, align 4, !dbg !4987
  %sh_prom21 = zext i32 %23 to i64, !dbg !4987
  %shl22 = shl i64 1, %sh_prom21, !dbg !4987
  %neg = xor i64 %shl22, -1, !dbg !4987
  %24 = load i64, i64* @hard_regs_in_table, align 8, !dbg !4987
  %and23 = and i64 %24, %neg, !dbg !4987
  store i64 %and23, i64* @hard_regs_in_table, align 8, !dbg !4987
  %25 = load i32, i32* %regno, align 4, !dbg !4988
  %add24 = add i32 %25, 1, !dbg !4990
  store i32 %add24, i32* %rn, align 4, !dbg !4991
  br label %for.cond, !dbg !4992

for.cond:                                         ; preds = %for.inc, %if.else
  %26 = load i32, i32* %rn, align 4, !dbg !4993
  %27 = load i32, i32* %endregno, align 4, !dbg !4995
  %cmp25 = icmp ult i32 %26, %27, !dbg !4996
  br i1 %cmp25, label %for.body, label %for.end, !dbg !4997

for.body:                                         ; preds = %for.cond
  %28 = load i64, i64* @hard_regs_in_table, align 8, !dbg !4998
  %29 = load i32, i32* %rn, align 4, !dbg !4998
  %sh_prom27 = zext i32 %29 to i64, !dbg !4998
  %shl28 = shl i64 1, %sh_prom27, !dbg !4998
  %and29 = and i64 %28, %shl28, !dbg !4998
  %tobool30 = icmp ne i64 %and29, 0, !dbg !4998
  %lnot31 = xor i1 %tobool30, true, !dbg !4998
  %lnot33 = xor i1 %lnot31, true, !dbg !4998
  %lnot.ext34 = zext i1 %lnot33 to i32, !dbg !4998
  %conv35 = sext i32 %lnot.ext34 to i64, !dbg !4998
  %30 = load i64, i64* %in_table, align 8, !dbg !5000
  %or = or i64 %30, %conv35, !dbg !5000
  store i64 %or, i64* %in_table, align 8, !dbg !5000
  %31 = load i32, i32* %rn, align 4, !dbg !5001
  %sh_prom36 = zext i32 %31 to i64, !dbg !5001
  %shl37 = shl i64 1, %sh_prom36, !dbg !5001
  %neg38 = xor i64 %shl37, -1, !dbg !5001
  %32 = load i64, i64* @hard_regs_in_table, align 8, !dbg !5001
  %and39 = and i64 %32, %neg38, !dbg !5001
  store i64 %and39, i64* @hard_regs_in_table, align 8, !dbg !5001
  %33 = load i32, i32* %rn, align 4, !dbg !5002
  call void @delete_reg_equiv(i32 %33), !dbg !5003
  %34 = load i32, i32* %rn, align 4, !dbg !5004
  %call40 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %34), !dbg !5004
  %reg_tick41 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call40, i32 0, i32 2, !dbg !5004
  %35 = load i32, i32* %reg_tick41, align 4, !dbg !5005
  %inc42 = add nsw i32 %35, 1, !dbg !5005
  store i32 %inc42, i32* %reg_tick41, align 4, !dbg !5005
  %36 = load i32, i32* %rn, align 4, !dbg !5006
  %call43 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %36), !dbg !5006
  %subreg_ticked44 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call43, i32 0, i32 4, !dbg !5006
  store i32 -1, i32* %subreg_ticked44, align 4, !dbg !5007
  br label %for.inc, !dbg !5008

for.inc:                                          ; preds = %for.body
  %37 = load i32, i32* %rn, align 4, !dbg !5009
  %inc45 = add i32 %37, 1, !dbg !5009
  store i32 %inc45, i32* %rn, align 4, !dbg !5009
  br label %for.cond, !dbg !5010, !llvm.loop !5011

for.end:                                          ; preds = %for.cond
  %38 = load i64, i64* %in_table, align 8, !dbg !5013
  %tobool46 = icmp ne i64 %38, 0, !dbg !5013
  br i1 %tobool46, label %if.then47, label %if.end85, !dbg !5015

if.then47:                                        ; preds = %for.end
  store i32 0, i32* %hash, align 4, !dbg !5016
  br label %for.cond48, !dbg !5018

for.cond48:                                       ; preds = %for.inc82, %if.then47
  %39 = load i32, i32* %hash, align 4, !dbg !5019
  %cmp49 = icmp ult i32 %39, 32, !dbg !5021
  br i1 %cmp49, label %for.body51, label %for.end84, !dbg !5022

for.body51:                                       ; preds = %for.cond48
  %40 = load i32, i32* %hash, align 4, !dbg !5023
  %idxprom = zext i32 %40 to i64, !dbg !5025
  %arrayidx = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom, !dbg !5025
  %41 = load %struct.table_elt*, %struct.table_elt** %arrayidx, align 8, !dbg !5025
  store %struct.table_elt* %41, %struct.table_elt** %p20, align 8, !dbg !5026
  br label %for.cond52, !dbg !5027

for.cond52:                                       ; preds = %for.inc80, %for.body51
  %42 = load %struct.table_elt*, %struct.table_elt** %p20, align 8, !dbg !5028
  %tobool53 = icmp ne %struct.table_elt* %42, null, !dbg !5030
  br i1 %tobool53, label %for.body54, label %for.end81, !dbg !5030

for.body54:                                       ; preds = %for.cond52
  %43 = load %struct.table_elt*, %struct.table_elt** %p20, align 8, !dbg !5031
  %next_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %43, i32 0, i32 2, !dbg !5033
  %44 = load %struct.table_elt*, %struct.table_elt** %next_same_hash, align 8, !dbg !5033
  store %struct.table_elt* %44, %struct.table_elt** %next, align 8, !dbg !5034
  %45 = load %struct.table_elt*, %struct.table_elt** %p20, align 8, !dbg !5035
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %45, i32 0, i32 0, !dbg !5035
  %46 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !5035
  %47 = bitcast %struct.rtx_def* %46 to i32*, !dbg !5035
  %bf.load55 = load i32, i32* %47, align 8, !dbg !5035
  %bf.clear56 = and i32 %bf.load55, 65535, !dbg !5035
  %cmp57 = icmp eq i32 %bf.clear56, 37, !dbg !5035
  br i1 %cmp57, label %lor.lhs.false, label %if.then63, !dbg !5037

lor.lhs.false:                                    ; preds = %for.body54
  %48 = load %struct.table_elt*, %struct.table_elt** %p20, align 8, !dbg !5038
  %exp59 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %48, i32 0, i32 0, !dbg !5038
  %49 = load %struct.rtx_def*, %struct.rtx_def** %exp59, align 8, !dbg !5038
  %call60 = call i32 @rhs_regno(%struct.rtx_def* %49), !dbg !5038
  %cmp61 = icmp uge i32 %call60, 53, !dbg !5039
  br i1 %cmp61, label %if.then63, label %if.end, !dbg !5040

if.then63:                                        ; preds = %lor.lhs.false, %for.body54
  br label %for.inc80, !dbg !5041

if.end:                                           ; preds = %lor.lhs.false
  %50 = load %struct.table_elt*, %struct.table_elt** %p20, align 8, !dbg !5042
  %exp64 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %50, i32 0, i32 0, !dbg !5042
  %51 = load %struct.rtx_def*, %struct.rtx_def** %exp64, align 8, !dbg !5042
  %call65 = call i32 @rhs_regno(%struct.rtx_def* %51), !dbg !5042
  store i32 %call65, i32* %tregno, align 4, !dbg !5043
  %52 = load %struct.table_elt*, %struct.table_elt** %p20, align 8, !dbg !5044
  %exp66 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %52, i32 0, i32 0, !dbg !5044
  %53 = load %struct.rtx_def*, %struct.rtx_def** %exp66, align 8, !dbg !5044
  %54 = bitcast %struct.rtx_def* %53 to i32*, !dbg !5044
  %bf.load67 = load i32, i32* %54, align 8, !dbg !5044
  %bf.lshr68 = lshr i32 %bf.load67, 16, !dbg !5044
  %bf.clear69 = and i32 %bf.lshr68, 255, !dbg !5044
  %55 = load %struct.table_elt*, %struct.table_elt** %p20, align 8, !dbg !5044
  %exp70 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %55, i32 0, i32 0, !dbg !5044
  %56 = load %struct.rtx_def*, %struct.rtx_def** %exp70, align 8, !dbg !5044
  %call71 = call i32 @rhs_regno(%struct.rtx_def* %56), !dbg !5044
  %call72 = call i32 @end_hard_regno(i32 %bf.clear69, i32 %call71), !dbg !5044
  store i32 %call72, i32* %tendregno, align 4, !dbg !5045
  %57 = load i32, i32* %tendregno, align 4, !dbg !5046
  %58 = load i32, i32* %regno, align 4, !dbg !5048
  %cmp73 = icmp ugt i32 %57, %58, !dbg !5049
  br i1 %cmp73, label %land.lhs.true75, label %if.end79, !dbg !5050

land.lhs.true75:                                  ; preds = %if.end
  %59 = load i32, i32* %tregno, align 4, !dbg !5051
  %60 = load i32, i32* %endregno, align 4, !dbg !5052
  %cmp76 = icmp ult i32 %59, %60, !dbg !5053
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !5054

if.then78:                                        ; preds = %land.lhs.true75
  %61 = load %struct.table_elt*, %struct.table_elt** %p20, align 8, !dbg !5055
  %62 = load i32, i32* %hash, align 4, !dbg !5056
  call void @remove_from_table(%struct.table_elt* %61, i32 %62), !dbg !5057
  br label %if.end79, !dbg !5057

if.end79:                                         ; preds = %if.then78, %land.lhs.true75, %if.end
  br label %for.inc80, !dbg !5058

for.inc80:                                        ; preds = %if.end79, %if.then63
  %63 = load %struct.table_elt*, %struct.table_elt** %next, align 8, !dbg !5059
  store %struct.table_elt* %63, %struct.table_elt** %p20, align 8, !dbg !5060
  br label %for.cond52, !dbg !5061, !llvm.loop !5062

for.end81:                                        ; preds = %for.cond52
  br label %for.inc82, !dbg !5063

for.inc82:                                        ; preds = %for.end81
  %64 = load i32, i32* %hash, align 4, !dbg !5064
  %inc83 = add i32 %64, 1, !dbg !5064
  store i32 %inc83, i32* %hash, align 4, !dbg !5064
  br label %for.cond48, !dbg !5065, !llvm.loop !5066

for.end84:                                        ; preds = %for.cond48
  br label %if.end85, !dbg !5067

if.end85:                                         ; preds = %for.end84, %for.end
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.then
  br label %sw.epilog, !dbg !5068

sw.bb87:                                          ; preds = %entry
  %65 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5069
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1, !dbg !5069
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5069
  %arrayidx88 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5069
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx88 to %struct.rtx_def**, !dbg !5069
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5069
  call void @invalidate(%struct.rtx_def* %66, i32 0), !dbg !5070
  br label %sw.epilog, !dbg !5071

sw.bb89:                                          ; preds = %entry
  %67 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5072
  %u90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1, !dbg !5072
  %fld91 = bitcast %union.u* %u90 to [1 x %union.rtunion_def]*, !dbg !5072
  %arrayidx92 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld91, i64 0, i64 0, !dbg !5072
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx92 to %struct.rtvec_def**, !dbg !5072
  %68 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5072
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %68, i32 0, i32 0, !dbg !5072
  %69 = load i32, i32* %num_elem, align 8, !dbg !5072
  %sub = sub nsw i32 %69, 1, !dbg !5074
  store i32 %sub, i32* %i, align 4, !dbg !5075
  br label %for.cond93, !dbg !5076

for.cond93:                                       ; preds = %for.inc103, %sw.bb89
  %70 = load i32, i32* %i, align 4, !dbg !5077
  %cmp94 = icmp sge i32 %70, 0, !dbg !5079
  br i1 %cmp94, label %for.body96, label %for.end104, !dbg !5080

for.body96:                                       ; preds = %for.cond93
  %71 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5081
  %u97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1, !dbg !5081
  %fld98 = bitcast %union.u* %u97 to [1 x %union.rtunion_def]*, !dbg !5081
  %arrayidx99 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld98, i64 0, i64 0, !dbg !5081
  %rt_rtvec100 = bitcast %union.rtunion_def* %arrayidx99 to %struct.rtvec_def**, !dbg !5081
  %72 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec100, align 8, !dbg !5081
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %72, i32 0, i32 1, !dbg !5081
  %73 = load i32, i32* %i, align 4, !dbg !5081
  %idxprom101 = sext i32 %73 to i64, !dbg !5081
  %arrayidx102 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom101, !dbg !5081
  %74 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx102, align 8, !dbg !5081
  call void @invalidate(%struct.rtx_def* %74, i32 0), !dbg !5082
  br label %for.inc103, !dbg !5082

for.inc103:                                       ; preds = %for.body96
  %75 = load i32, i32* %i, align 4, !dbg !5083
  %dec = add nsw i32 %75, -1, !dbg !5083
  store i32 %dec, i32* %i, align 4, !dbg !5083
  br label %for.cond93, !dbg !5084, !llvm.loop !5085

for.end104:                                       ; preds = %for.cond93
  br label %sw.epilog, !dbg !5087

sw.bb105:                                         ; preds = %entry
  %76 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5088
  %u106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1, !dbg !5088
  %fld107 = bitcast %union.u* %u106 to [1 x %union.rtunion_def]*, !dbg !5088
  %arrayidx108 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld107, i64 0, i64 0, !dbg !5088
  %rt_rtx109 = bitcast %union.rtunion_def* %arrayidx108 to %struct.rtx_def**, !dbg !5088
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx109, align 8, !dbg !5088
  call void @invalidate(%struct.rtx_def* %77, i32 0), !dbg !5089
  br label %sw.epilog, !dbg !5090

sw.bb110:                                         ; preds = %entry
  %78 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5091
  %u111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1, !dbg !5091
  %fld112 = bitcast %union.u* %u111 to [1 x %union.rtunion_def]*, !dbg !5091
  %arrayidx113 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld112, i64 0, i64 0, !dbg !5091
  %rt_rtx114 = bitcast %union.rtunion_def* %arrayidx113 to %struct.rtx_def**, !dbg !5091
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx114, align 8, !dbg !5091
  %call115 = call %struct.rtx_def* @get_addr(%struct.rtx_def* %79), !dbg !5092
  %call116 = call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %call115), !dbg !5093
  store %struct.rtx_def* %call116, %struct.rtx_def** %addr, align 8, !dbg !5094
  %80 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5095
  %call117 = call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %80), !dbg !5096
  store %struct.rtx_def* %call117, %struct.rtx_def** %x.addr, align 8, !dbg !5097
  %81 = load i32, i32* %full_mode.addr, align 4, !dbg !5098
  %cmp118 = icmp eq i32 %81, 0, !dbg !5100
  br i1 %cmp118, label %if.then120, label %if.end124, !dbg !5101

if.then120:                                       ; preds = %sw.bb110
  %82 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5102
  %83 = bitcast %struct.rtx_def* %82 to i32*, !dbg !5102
  %bf.load121 = load i32, i32* %83, align 8, !dbg !5102
  %bf.lshr122 = lshr i32 %bf.load121, 16, !dbg !5102
  %bf.clear123 = and i32 %bf.lshr122, 255, !dbg !5102
  store i32 %bf.clear123, i32* %full_mode.addr, align 4, !dbg !5103
  br label %if.end124, !dbg !5104

if.end124:                                        ; preds = %if.then120, %sw.bb110
  store i32 0, i32* %i, align 4, !dbg !5105
  br label %for.cond125, !dbg !5107

for.cond125:                                      ; preds = %for.inc154, %if.end124
  %84 = load i32, i32* %i, align 4, !dbg !5108
  %cmp126 = icmp slt i32 %84, 32, !dbg !5110
  br i1 %cmp126, label %for.body128, label %for.end156, !dbg !5111

for.body128:                                      ; preds = %for.cond125
  call void @llvm.dbg.declare(metadata %struct.table_elt** %next129, metadata !5112, metadata !DIExpression()), !dbg !5114
  %85 = load i32, i32* %i, align 4, !dbg !5115
  %idxprom130 = sext i32 %85 to i64, !dbg !5117
  %arrayidx131 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom130, !dbg !5117
  %86 = load %struct.table_elt*, %struct.table_elt** %arrayidx131, align 8, !dbg !5117
  store %struct.table_elt* %86, %struct.table_elt** %p, align 8, !dbg !5118
  br label %for.cond132, !dbg !5119

for.cond132:                                      ; preds = %for.inc152, %for.body128
  %87 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !5120
  %tobool133 = icmp ne %struct.table_elt* %87, null, !dbg !5122
  br i1 %tobool133, label %for.body134, label %for.end153, !dbg !5122

for.body134:                                      ; preds = %for.cond132
  %88 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !5123
  %next_same_hash135 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %88, i32 0, i32 2, !dbg !5125
  %89 = load %struct.table_elt*, %struct.table_elt** %next_same_hash135, align 8, !dbg !5125
  store %struct.table_elt* %89, %struct.table_elt** %next129, align 8, !dbg !5126
  %90 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !5127
  %in_memory = getelementptr inbounds %struct.table_elt, %struct.table_elt* %90, i32 0, i32 11, !dbg !5129
  %91 = load i8, i8* %in_memory, align 1, !dbg !5129
  %tobool136 = icmp ne i8 %91, 0, !dbg !5127
  br i1 %tobool136, label %if.then137, label %if.end151, !dbg !5130

if.then137:                                       ; preds = %for.body134
  call void @llvm.dbg.declare(metadata %struct.check_dependence_data* %d, metadata !5131, metadata !DIExpression()), !dbg !5133
  %92 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !5134
  %canon_exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %92, i32 0, i32 1, !dbg !5136
  %93 = load %struct.rtx_def*, %struct.rtx_def** %canon_exp, align 8, !dbg !5136
  %tobool138 = icmp ne %struct.rtx_def* %93, null, !dbg !5134
  br i1 %tobool138, label %if.end143, label %if.then139, !dbg !5137

if.then139:                                       ; preds = %if.then137
  %94 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !5138
  %exp140 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %94, i32 0, i32 0, !dbg !5139
  %95 = load %struct.rtx_def*, %struct.rtx_def** %exp140, align 8, !dbg !5139
  %call141 = call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %95), !dbg !5140
  %96 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !5141
  %canon_exp142 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %96, i32 0, i32 1, !dbg !5142
  store %struct.rtx_def* %call141, %struct.rtx_def** %canon_exp142, align 8, !dbg !5143
  br label %if.end143, !dbg !5141

if.end143:                                        ; preds = %if.then139, %if.then137
  %97 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5144
  %exp144 = getelementptr inbounds %struct.check_dependence_data, %struct.check_dependence_data* %d, i32 0, i32 1, !dbg !5145
  store %struct.rtx_def* %97, %struct.rtx_def** %exp144, align 8, !dbg !5146
  %98 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !5147
  %addr145 = getelementptr inbounds %struct.check_dependence_data, %struct.check_dependence_data* %d, i32 0, i32 2, !dbg !5148
  store %struct.rtx_def* %98, %struct.rtx_def** %addr145, align 8, !dbg !5149
  %99 = load i32, i32* %full_mode.addr, align 4, !dbg !5150
  %mode = getelementptr inbounds %struct.check_dependence_data, %struct.check_dependence_data* %d, i32 0, i32 0, !dbg !5151
  store i32 %99, i32* %mode, align 8, !dbg !5152
  %100 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !5153
  %canon_exp146 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %100, i32 0, i32 1, !dbg !5155
  %101 = bitcast %struct.check_dependence_data* %d to i8*, !dbg !5156
  %call147 = call i32 @for_each_rtx(%struct.rtx_def** %canon_exp146, i32 (%struct.rtx_def**, i8*)* @check_dependence, i8* %101), !dbg !5157
  %tobool148 = icmp ne i32 %call147, 0, !dbg !5157
  br i1 %tobool148, label %if.then149, label %if.end150, !dbg !5158

if.then149:                                       ; preds = %if.end143
  %102 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !5159
  %103 = load i32, i32* %i, align 4, !dbg !5160
  call void @remove_from_table(%struct.table_elt* %102, i32 %103), !dbg !5161
  br label %if.end150, !dbg !5161

if.end150:                                        ; preds = %if.then149, %if.end143
  br label %if.end151, !dbg !5162

if.end151:                                        ; preds = %if.end150, %for.body134
  br label %for.inc152, !dbg !5163

for.inc152:                                       ; preds = %if.end151
  %104 = load %struct.table_elt*, %struct.table_elt** %next129, align 8, !dbg !5164
  store %struct.table_elt* %104, %struct.table_elt** %p, align 8, !dbg !5165
  br label %for.cond132, !dbg !5166, !llvm.loop !5167

for.end153:                                       ; preds = %for.cond132
  br label %for.inc154, !dbg !5169

for.inc154:                                       ; preds = %for.end153
  %105 = load i32, i32* %i, align 4, !dbg !5170
  %inc155 = add nsw i32 %105, 1, !dbg !5170
  store i32 %inc155, i32* %i, align 4, !dbg !5170
  br label %for.cond125, !dbg !5171, !llvm.loop !5172

for.end156:                                       ; preds = %for.cond125
  br label %sw.epilog, !dbg !5174

sw.default:                                       ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32 1992, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)), !dbg !5175
  br label %sw.epilog, !dbg !5176

sw.epilog:                                        ; preds = %if.end86, %sw.bb87, %for.end104, %sw.bb105, %for.end156, %sw.default
  ret void, !dbg !5177
}

declare dso_local zeroext i8 @optimize_bb_for_speed_p(%struct.basic_block_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @flush_hash_table() #0 !dbg !5178 {
entry:
  %i = alloca i32, align 4
  %p = alloca %struct.table_elt*, align 8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5179, metadata !DIExpression()), !dbg !5180
  call void @llvm.dbg.declare(metadata %struct.table_elt** %p, metadata !5181, metadata !DIExpression()), !dbg !5182
  store i32 0, i32* %i, align 4, !dbg !5183
  br label %for.cond, !dbg !5185

for.cond:                                         ; preds = %for.inc7, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5186
  %cmp = icmp slt i32 %0, 32, !dbg !5188
  br i1 %cmp, label %for.body, label %for.end8, !dbg !5189

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !5190
  %idxprom = sext i32 %1 to i64, !dbg !5192
  %arrayidx = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom, !dbg !5192
  %2 = load %struct.table_elt*, %struct.table_elt** %arrayidx, align 8, !dbg !5192
  store %struct.table_elt* %2, %struct.table_elt** %p, align 8, !dbg !5193
  br label %for.cond1, !dbg !5194

for.cond1:                                        ; preds = %for.inc, %for.body
  %3 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !5195
  %tobool = icmp ne %struct.table_elt* %3, null, !dbg !5197
  br i1 %tobool, label %for.body2, label %for.end, !dbg !5197

for.body2:                                        ; preds = %for.cond1
  %4 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !5198
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %4, i32 0, i32 0, !dbg !5198
  %5 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !5198
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !5198
  %bf.load = load i32, i32* %6, align 8, !dbg !5198
  %bf.clear = and i32 %bf.load, 65535, !dbg !5198
  %cmp3 = icmp eq i32 %bf.clear, 37, !dbg !5198
  br i1 %cmp3, label %if.then, label %if.else, !dbg !5201

if.then:                                          ; preds = %for.body2
  %7 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !5202
  %exp4 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %7, i32 0, i32 0, !dbg !5203
  %8 = load %struct.rtx_def*, %struct.rtx_def** %exp4, align 8, !dbg !5203
  call void @invalidate(%struct.rtx_def* %8, i32 0), !dbg !5204
  br label %if.end, !dbg !5204

if.else:                                          ; preds = %for.body2
  %9 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !5205
  %10 = load i32, i32* %i, align 4, !dbg !5206
  call void @remove_from_table(%struct.table_elt* %9, i32 %10), !dbg !5207
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !5208

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4, !dbg !5209
  %idxprom5 = sext i32 %11 to i64, !dbg !5210
  %arrayidx6 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom5, !dbg !5210
  %12 = load %struct.table_elt*, %struct.table_elt** %arrayidx6, align 8, !dbg !5210
  store %struct.table_elt* %12, %struct.table_elt** %p, align 8, !dbg !5211
  br label %for.cond1, !dbg !5212, !llvm.loop !5213

for.end:                                          ; preds = %for.cond1
  br label %for.inc7, !dbg !5214

for.inc7:                                         ; preds = %for.end
  %13 = load i32, i32* %i, align 4, !dbg !5215
  %inc = add nsw i32 %13, 1, !dbg !5215
  store i32 %inc, i32* %i, align 4, !dbg !5215
  br label %for.cond, !dbg !5216, !llvm.loop !5217

for.end8:                                         ; preds = %for.cond
  ret void, !dbg !5219
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @cse_process_notes(%struct.rtx_def* %x, %struct.rtx_def* %object, i8* %changed) #0 !dbg !5220 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %object.addr = alloca %struct.rtx_def*, align 8
  %changed.addr = alloca i8*, align 8
  %new_rtx = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !5223, metadata !DIExpression()), !dbg !5224
  store %struct.rtx_def* %object, %struct.rtx_def** %object.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %object.addr, metadata !5225, metadata !DIExpression()), !dbg !5226
  store i8* %changed, i8** %changed.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %changed.addr, metadata !5227, metadata !DIExpression()), !dbg !5228
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_rtx, metadata !5229, metadata !DIExpression()), !dbg !5230
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5231
  %1 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8, !dbg !5232
  %2 = load i8*, i8** %changed.addr, align 8, !dbg !5233
  %call = call %struct.rtx_def* @cse_process_notes_1(%struct.rtx_def* %0, %struct.rtx_def* %1, i8* %2), !dbg !5234
  store %struct.rtx_def* %call, %struct.rtx_def** %new_rtx, align 8, !dbg !5230
  %3 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !5235
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5237
  %cmp = icmp ne %struct.rtx_def* %3, %4, !dbg !5238
  br i1 %cmp, label %if.then, label %if.end, !dbg !5239

if.then:                                          ; preds = %entry
  %5 = load i8*, i8** %changed.addr, align 8, !dbg !5240
  store i8 1, i8* %5, align 1, !dbg !5241
  br label %if.end, !dbg !5242

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !5243
  ret %struct.rtx_def* %6, !dbg !5244
}

declare dso_local void @df_notes_rescan(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @cse_insn(%struct.rtx_def* %insn) #0 !dbg !5245 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %x = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  %n_sets = alloca i32, align 4
  %src_eqv = alloca %struct.rtx_def*, align 8
  %src_eqv_elt = alloca %struct.table_elt*, align 8
  %src_eqv_volatile = alloca i32, align 4
  %src_eqv_in_memory = alloca i32, align 4
  %src_eqv_hash = alloca i32, align 4
  %sets = alloca %struct.set*, align 8
  %lim = alloca i32, align 4
  %y = alloca %struct.rtx_def*, align 8
  %clobbered = alloca %struct.rtx_def*, align 8
  %y139 = alloca %struct.rtx_def*, align 8
  %dest = alloca %struct.rtx_def*, align 8
  %src = alloca %struct.rtx_def*, align 8
  %new_rtx = alloca %struct.rtx_def*, align 8
  %repeat = alloca i8, align 1
  %src476 = alloca %struct.rtx_def*, align 8
  %dest477 = alloca %struct.rtx_def*, align 8
  %src_folded = alloca %struct.rtx_def*, align 8
  %elt = alloca %struct.table_elt*, align 8
  %p = alloca %struct.table_elt*, align 8
  %mode = alloca i32, align 4
  %src_eqv_here = alloca %struct.rtx_def*, align 8
  %src_const = alloca %struct.rtx_def*, align 8
  %src_related = alloca %struct.rtx_def*, align 8
  %src_related_is_const_anchor = alloca i8, align 1
  %src_const_elt = alloca %struct.table_elt*, align 8
  %src_cost = alloca i32, align 4
  %src_eqv_cost = alloca i32, align 4
  %src_folded_cost = alloca i32, align 4
  %src_related_cost = alloca i32, align 4
  %src_elt_cost = alloca i32, align 4
  %src_regcost = alloca i32, align 4
  %src_eqv_regcost = alloca i32, align 4
  %src_folded_regcost = alloca i32, align 4
  %src_related_regcost = alloca i32, align 4
  %src_elt_regcost = alloca i32, align 4
  %src_folded_force_flag = alloca i32, align 4
  %eqvmode = alloca i32, align 4
  %src_related_elt = alloca %struct.table_elt*, align 8
  %wider_mode = alloca i32, align 4
  %const_elt = alloca %struct.table_elt*, align 8
  %tmode = alloca i32, align 4
  %new_and = alloca %struct.rtx_def*, align 8
  %inner = alloca %struct.rtx_def*, align 8
  %larger_elt = alloca %struct.table_elt*, align 8
  %code = alloca i32, align 4
  %trial = alloca %struct.rtx_def*, align 8
  %forced = alloca %struct.rtx_def*, align 8
  %src1464 = alloca %struct.rtx_def*, align 8
  %dest1465 = alloca %struct.rtx_def*, align 8
  %dest_reg = alloca %struct.rtx_def*, align 8
  %width = alloca %struct.rtx_def*, align 8
  %pos = alloca %struct.rtx_def*, align 8
  %dest_hash = alloca i32, align 4
  %dest_elt = alloca %struct.table_elt*, align 8
  %dest_cst = alloca %struct.rtx_def*, align 8
  %val = alloca i64, align 8
  %mask = alloca i64, align 8
  %shift = alloca i32, align 4
  %note = alloca %struct.rtx_def*, align 8
  %new_rtx1871 = alloca %struct.rtx_def*, align 8
  %dest_q = alloca i32, align 4
  %dest_ent = alloca %struct.qty_table_elem*, align 8
  %src_q = alloca i32, align 4
  %src_ent = alloca %struct.qty_table_elem*, align 8
  %first = alloca i32, align 4
  %new_src = alloca %struct.rtx_def*, align 8
  %addr = alloca %struct.rtx_def*, align 8
  %width2255 = alloca %struct.rtx_def*, align 8
  %new_rtx2335 = alloca %struct.rtx_def*, align 8
  %note2336 = alloca %struct.rtx_def*, align 8
  %elt2518 = alloca %struct.table_elt*, align 8
  %classp = alloca %struct.table_elt*, align 8
  %dest2521 = alloca %struct.rtx_def*, align 8
  %eqvmode2528 = alloca i32, align 4
  %classp2656 = alloca %struct.table_elt*, align 8
  %src2657 = alloca %struct.rtx_def*, align 8
  %dest2661 = alloca %struct.rtx_def*, align 8
  %mode2669 = alloca i32, align 4
  %elt2697 = alloca %struct.table_elt*, align 8
  %x2794 = alloca %struct.rtx_def*, align 8
  %elt2798 = alloca %struct.table_elt*, align 8
  %mode2799 = alloca i32, align 4
  %hash = alloca i32, align 4
  %dest2836 = alloca %struct.rtx_def*, align 8
  %dest2925 = alloca %struct.rtx_def*, align 8
  %x3016 = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  %endregno = alloca i32, align 4
  %i3046 = alloca i32, align 4
  %elt3103 = alloca %struct.table_elt*, align 8
  %dest3149 = alloca %struct.rtx_def*, align 8
  %elt3157 = alloca %struct.table_elt*, align 8
  %new_mode = alloca i32, align 4
  %elt3446 = alloca %struct.table_elt*, align 8
  %classp3447 = alloca %struct.table_elt*, align 8
  %new_src3455 = alloca %struct.rtx_def*, align 8
  %src_hash3456 = alloca i32, align 4
  %src_elt3457 = alloca %struct.table_elt*, align 8
  %byte = alloca i32, align 4
  %src_q3634 = alloca i32, align 4
  %src_ent3644 = alloca %struct.qty_table_elem*, align 8
  %prev = alloca %struct.rtx_def*, align 8
  %bb_head = alloca %struct.rtx_def*, align 8
  %dest3715 = alloca %struct.rtx_def*, align 8
  %src3722 = alloca %struct.rtx_def*, align 8
  %note3729 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !5248, metadata !DIExpression()), !dbg !5249
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !5250, metadata !DIExpression()), !dbg !5251
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5252
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !5252
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5252
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !5252
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5252
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5252
  store %struct.rtx_def* %1, %struct.rtx_def** %x, align 8, !dbg !5251
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5253, metadata !DIExpression()), !dbg !5254
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !5255, metadata !DIExpression()), !dbg !5256
  call void @llvm.dbg.declare(metadata i32* %n_sets, metadata !5257, metadata !DIExpression()), !dbg !5258
  store i32 0, i32* %n_sets, align 4, !dbg !5258
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %src_eqv, metadata !5259, metadata !DIExpression()), !dbg !5260
  store %struct.rtx_def* null, %struct.rtx_def** %src_eqv, align 8, !dbg !5260
  call void @llvm.dbg.declare(metadata %struct.table_elt** %src_eqv_elt, metadata !5261, metadata !DIExpression()), !dbg !5262
  store %struct.table_elt* null, %struct.table_elt** %src_eqv_elt, align 8, !dbg !5262
  call void @llvm.dbg.declare(metadata i32* %src_eqv_volatile, metadata !5263, metadata !DIExpression()), !dbg !5264
  store i32 0, i32* %src_eqv_volatile, align 4, !dbg !5264
  call void @llvm.dbg.declare(metadata i32* %src_eqv_in_memory, metadata !5265, metadata !DIExpression()), !dbg !5266
  store i32 0, i32* %src_eqv_in_memory, align 4, !dbg !5266
  call void @llvm.dbg.declare(metadata i32* %src_eqv_hash, metadata !5267, metadata !DIExpression()), !dbg !5268
  store i32 0, i32* %src_eqv_hash, align 4, !dbg !5268
  call void @llvm.dbg.declare(metadata %struct.set** %sets, metadata !5269, metadata !DIExpression()), !dbg !5270
  store %struct.set* null, %struct.set** %sets, align 8, !dbg !5270
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5271
  store %struct.rtx_def* %2, %struct.rtx_def** @this_insn, align 8, !dbg !5272
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5273
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !5273
  %bf.load = load i32, i32* %4, align 8, !dbg !5273
  %bf.clear = and i32 %bf.load, 65535, !dbg !5273
  %cmp = icmp eq i32 %bf.clear, 10, !dbg !5273
  br i1 %cmp, label %if.then, label %if.end33, !dbg !5275

if.then:                                          ; preds = %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5276
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !5276
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !5276
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 8, !dbg !5276
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !5276
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !5276
  store %struct.rtx_def* %6, %struct.rtx_def** %tem, align 8, !dbg !5279
  br label %for.cond, !dbg !5280

for.cond:                                         ; preds = %for.inc, %if.then
  %7 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !5281
  %tobool = icmp ne %struct.rtx_def* %7, null, !dbg !5283
  br i1 %tobool, label %for.body, label %for.end, !dbg !5283

for.body:                                         ; preds = %for.cond
  %8 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !5284
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !5284
  %fld6 = bitcast %union.u* %u5 to [1 x %union.rtunion_def]*, !dbg !5284
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i64 0, i64 0, !dbg !5284
  %rt_rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**, !dbg !5284
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !5284
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !5284
  %bf.load9 = load i32, i32* %10, align 8, !dbg !5284
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !5284
  %cmp11 = icmp eq i32 %bf.clear10, 25, !dbg !5287
  br i1 %cmp11, label %if.then12, label %if.end, !dbg !5288

if.then12:                                        ; preds = %for.body
  %11 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !5289
  %u13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !5289
  %fld14 = bitcast %union.u* %u13 to [1 x %union.rtunion_def]*, !dbg !5289
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i64 0, i64 0, !dbg !5289
  %rt_rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**, !dbg !5289
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx16, align 8, !dbg !5289
  %u17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !5289
  %fld18 = bitcast %union.u* %u17 to [1 x %union.rtunion_def]*, !dbg !5289
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i64 0, i64 0, !dbg !5289
  %rt_rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**, !dbg !5289
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx20, align 8, !dbg !5289
  call void @invalidate(%struct.rtx_def* %13, i32 0), !dbg !5290
  br label %if.end, !dbg !5290

if.end:                                           ; preds = %if.then12, %for.body
  %14 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !5291
  %u21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !5291
  %fld22 = bitcast %union.u* %u21 to [1 x %union.rtunion_def]*, !dbg !5291
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i64 0, i64 0, !dbg !5291
  %rt_rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**, !dbg !5291
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx24, align 8, !dbg !5291
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5292
  %call = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %15, %struct.rtx_def* %16), !dbg !5293
  %17 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !5294
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !5294
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !5294
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 0, !dbg !5294
  %rt_rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !5294
  store %struct.rtx_def* %call, %struct.rtx_def** %rt_rtx28, align 8, !dbg !5295
  br label %for.inc, !dbg !5296

for.inc:                                          ; preds = %if.end
  %18 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !5297
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !5297
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !5297
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 1, !dbg !5297
  %rt_rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !5297
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !5297
  store %struct.rtx_def* %19, %struct.rtx_def** %tem, align 8, !dbg !5298
  br label %for.cond, !dbg !5299, !llvm.loop !5300

for.end:                                          ; preds = %for.cond
  br label %if.end33, !dbg !5302

if.end33:                                         ; preds = %for.end, %entry
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5303
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !5303
  %bf.load34 = load i32, i32* %21, align 8, !dbg !5303
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !5303
  %cmp36 = icmp eq i32 %bf.clear35, 23, !dbg !5305
  br i1 %cmp36, label %if.then37, label %if.else78, !dbg !5306

if.then37:                                        ; preds = %if.end33
  %22 = alloca i8, i64 80, align 16, !dbg !5307
  %23 = bitcast i8* %22 to %struct.set*, !dbg !5307
  store %struct.set* %23, %struct.set** %sets, align 8, !dbg !5309
  %24 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5310
  %25 = load %struct.set*, %struct.set** %sets, align 8, !dbg !5311
  %arrayidx38 = getelementptr inbounds %struct.set, %struct.set* %25, i64 0, !dbg !5311
  %rtl = getelementptr inbounds %struct.set, %struct.set* %arrayidx38, i32 0, i32 0, !dbg !5312
  store %struct.rtx_def* %24, %struct.rtx_def** %rtl, align 8, !dbg !5313
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5314
  %u39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !5314
  %fld40 = bitcast %union.u* %u39 to [1 x %union.rtunion_def]*, !dbg !5314
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld40, i64 0, i64 0, !dbg !5314
  %rt_rtx42 = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtx_def**, !dbg !5314
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx42, align 8, !dbg !5314
  %28 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !5316
  %cmp43 = icmp eq %struct.rtx_def* %27, %28, !dbg !5317
  br i1 %cmp43, label %land.lhs.true, label %if.else, !dbg !5318

land.lhs.true:                                    ; preds = %if.then37
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5319
  %u44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !5319
  %fld45 = bitcast %union.u* %u44 to [1 x %union.rtunion_def]*, !dbg !5319
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i64 0, i64 1, !dbg !5319
  %rt_rtx47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**, !dbg !5319
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx47, align 8, !dbg !5319
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !5319
  %bf.load48 = load i32, i32* %31, align 8, !dbg !5319
  %bf.clear49 = and i32 %bf.load48, 65535, !dbg !5319
  %cmp50 = icmp eq i32 %bf.clear49, 44, !dbg !5320
  br i1 %cmp50, label %if.then51, label %if.else, !dbg !5321

if.then51:                                        ; preds = %land.lhs.true
  br label %if.end77, !dbg !5321

if.else:                                          ; preds = %land.lhs.true, %if.then37
  %32 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5322
  %u52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !5322
  %fld53 = bitcast %union.u* %u52 to [1 x %union.rtunion_def]*, !dbg !5322
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i64 0, i64 1, !dbg !5322
  %rt_rtx55 = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtx_def**, !dbg !5322
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx55, align 8, !dbg !5322
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !5322
  %bf.load56 = load i32, i32* %34, align 8, !dbg !5322
  %bf.clear57 = and i32 %bf.load56, 65535, !dbg !5322
  %cmp58 = icmp eq i32 %bf.clear57, 26, !dbg !5324
  br i1 %cmp58, label %if.then59, label %if.else75, !dbg !5325

if.then59:                                        ; preds = %if.else
  %35 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5326
  %u60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !5326
  %fld61 = bitcast %union.u* %u60 to [1 x %union.rtunion_def]*, !dbg !5326
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i64 0, i64 1, !dbg !5326
  %rt_rtx63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtx_def**, !dbg !5326
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx63, align 8, !dbg !5326
  %37 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5328
  %call64 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %36, %struct.rtx_def* %37), !dbg !5329
  %call65 = call i32 @apply_change_group(), !dbg !5330
  %38 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5331
  %u66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1, !dbg !5331
  %fld67 = bitcast %union.u* %u66 to [1 x %union.rtunion_def]*, !dbg !5331
  %arrayidx68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i64 0, i64 1, !dbg !5331
  %rt_rtx69 = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtx_def**, !dbg !5331
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx69, align 8, !dbg !5331
  %40 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5332
  %call70 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %39, %struct.rtx_def* %40), !dbg !5333
  %41 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5334
  %u71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !5334
  %fld72 = bitcast %union.u* %u71 to [1 x %union.rtunion_def]*, !dbg !5334
  %arrayidx73 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld72, i64 0, i64 0, !dbg !5334
  %rt_rtx74 = bitcast %union.rtunion_def* %arrayidx73 to %struct.rtx_def**, !dbg !5334
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx74, align 8, !dbg !5334
  call void @invalidate(%struct.rtx_def* %42, i32 0), !dbg !5335
  br label %if.end76, !dbg !5336

if.else75:                                        ; preds = %if.else
  store i32 1, i32* %n_sets, align 4, !dbg !5337
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then59
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then51
  br label %if.end335, !dbg !5338

if.else78:                                        ; preds = %if.end33
  %43 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5339
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !5339
  %bf.load79 = load i32, i32* %44, align 8, !dbg !5339
  %bf.clear80 = and i32 %bf.load79, 65535, !dbg !5339
  %cmp81 = icmp eq i32 %bf.clear80, 15, !dbg !5341
  br i1 %cmp81, label %if.then82, label %if.else261, !dbg !5342

if.then82:                                        ; preds = %if.else78
  call void @llvm.dbg.declare(metadata i32* %lim, metadata !5343, metadata !DIExpression()), !dbg !5345
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5346
  %u83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !5346
  %fld84 = bitcast %union.u* %u83 to [1 x %union.rtunion_def]*, !dbg !5346
  %arrayidx85 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld84, i64 0, i64 0, !dbg !5346
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx85 to %struct.rtvec_def**, !dbg !5346
  %46 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5346
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %46, i32 0, i32 0, !dbg !5346
  %47 = load i32, i32* %num_elem, align 8, !dbg !5346
  store i32 %47, i32* %lim, align 4, !dbg !5345
  %48 = load i32, i32* %lim, align 4, !dbg !5347
  %conv = sext i32 %48 to i64, !dbg !5347
  %mul = mul i64 80, %conv, !dbg !5347
  %49 = alloca i8, i64 %mul, align 16, !dbg !5347
  %50 = bitcast i8* %49 to %struct.set*, !dbg !5347
  store %struct.set* %50, %struct.set** %sets, align 8, !dbg !5348
  store i32 0, i32* %i, align 4, !dbg !5349
  br label %for.cond86, !dbg !5351

for.cond86:                                       ; preds = %for.inc133, %if.then82
  %51 = load i32, i32* %i, align 4, !dbg !5352
  %52 = load i32, i32* %lim, align 4, !dbg !5354
  %cmp87 = icmp slt i32 %51, %52, !dbg !5355
  br i1 %cmp87, label %for.body89, label %for.end134, !dbg !5356

for.body89:                                       ; preds = %for.cond86
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %y, metadata !5357, metadata !DIExpression()), !dbg !5359
  %53 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5360
  %u90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1, !dbg !5360
  %fld91 = bitcast %union.u* %u90 to [1 x %union.rtunion_def]*, !dbg !5360
  %arrayidx92 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld91, i64 0, i64 0, !dbg !5360
  %rt_rtvec93 = bitcast %union.rtunion_def* %arrayidx92 to %struct.rtvec_def**, !dbg !5360
  %54 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec93, align 8, !dbg !5360
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %54, i32 0, i32 1, !dbg !5360
  %55 = load i32, i32* %i, align 4, !dbg !5360
  %idxprom = sext i32 %55 to i64, !dbg !5360
  %arrayidx94 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !5360
  %56 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx94, align 8, !dbg !5360
  store %struct.rtx_def* %56, %struct.rtx_def** %y, align 8, !dbg !5359
  %57 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8, !dbg !5361
  %58 = bitcast %struct.rtx_def* %57 to i32*, !dbg !5361
  %bf.load95 = load i32, i32* %58, align 8, !dbg !5361
  %bf.clear96 = and i32 %bf.load95, 65535, !dbg !5361
  %cmp97 = icmp eq i32 %bf.clear96, 25, !dbg !5363
  br i1 %cmp97, label %if.then99, label %if.end132, !dbg !5364

if.then99:                                        ; preds = %for.body89
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %clobbered, metadata !5365, metadata !DIExpression()), !dbg !5367
  %59 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8, !dbg !5368
  %u100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1, !dbg !5368
  %fld101 = bitcast %union.u* %u100 to [1 x %union.rtunion_def]*, !dbg !5368
  %arrayidx102 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld101, i64 0, i64 0, !dbg !5368
  %rt_rtx103 = bitcast %union.rtunion_def* %arrayidx102 to %struct.rtx_def**, !dbg !5368
  %60 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx103, align 8, !dbg !5368
  store %struct.rtx_def* %60, %struct.rtx_def** %clobbered, align 8, !dbg !5367
  %61 = load %struct.rtx_def*, %struct.rtx_def** %clobbered, align 8, !dbg !5369
  %62 = bitcast %struct.rtx_def* %61 to i32*, !dbg !5369
  %bf.load104 = load i32, i32* %62, align 8, !dbg !5369
  %bf.clear105 = and i32 %bf.load104, 65535, !dbg !5369
  %cmp106 = icmp eq i32 %bf.clear105, 37, !dbg !5369
  br i1 %cmp106, label %if.then112, label %lor.lhs.false, !dbg !5371

lor.lhs.false:                                    ; preds = %if.then99
  %63 = load %struct.rtx_def*, %struct.rtx_def** %clobbered, align 8, !dbg !5372
  %64 = bitcast %struct.rtx_def* %63 to i32*, !dbg !5372
  %bf.load108 = load i32, i32* %64, align 8, !dbg !5372
  %bf.clear109 = and i32 %bf.load108, 65535, !dbg !5372
  %cmp110 = icmp eq i32 %bf.clear109, 39, !dbg !5373
  br i1 %cmp110, label %if.then112, label %if.else113, !dbg !5374

if.then112:                                       ; preds = %lor.lhs.false, %if.then99
  %65 = load %struct.rtx_def*, %struct.rtx_def** %clobbered, align 8, !dbg !5375
  call void @invalidate(%struct.rtx_def* %65, i32 0), !dbg !5376
  br label %if.end131, !dbg !5376

if.else113:                                       ; preds = %lor.lhs.false
  %66 = load %struct.rtx_def*, %struct.rtx_def** %clobbered, align 8, !dbg !5377
  %67 = bitcast %struct.rtx_def* %66 to i32*, !dbg !5377
  %bf.load114 = load i32, i32* %67, align 8, !dbg !5377
  %bf.clear115 = and i32 %bf.load114, 65535, !dbg !5377
  %cmp116 = icmp eq i32 %bf.clear115, 40, !dbg !5379
  br i1 %cmp116, label %if.then123, label %lor.lhs.false118, !dbg !5380

lor.lhs.false118:                                 ; preds = %if.else113
  %68 = load %struct.rtx_def*, %struct.rtx_def** %clobbered, align 8, !dbg !5381
  %69 = bitcast %struct.rtx_def* %68 to i32*, !dbg !5381
  %bf.load119 = load i32, i32* %69, align 8, !dbg !5381
  %bf.clear120 = and i32 %bf.load119, 65535, !dbg !5381
  %cmp121 = icmp eq i32 %bf.clear120, 120, !dbg !5382
  br i1 %cmp121, label %if.then123, label %if.end130, !dbg !5383

if.then123:                                       ; preds = %lor.lhs.false118, %if.else113
  %70 = load %struct.rtx_def*, %struct.rtx_def** %clobbered, align 8, !dbg !5384
  %u124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1, !dbg !5384
  %fld125 = bitcast %union.u* %u124 to [1 x %union.rtunion_def]*, !dbg !5384
  %arrayidx126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i64 0, i64 0, !dbg !5384
  %rt_rtx127 = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtx_def**, !dbg !5384
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx127, align 8, !dbg !5384
  %72 = load %struct.rtx_def*, %struct.rtx_def** %clobbered, align 8, !dbg !5385
  %73 = bitcast %struct.rtx_def* %72 to i32*, !dbg !5385
  %bf.load128 = load i32, i32* %73, align 8, !dbg !5385
  %bf.lshr = lshr i32 %bf.load128, 16, !dbg !5385
  %bf.clear129 = and i32 %bf.lshr, 255, !dbg !5385
  call void @invalidate(%struct.rtx_def* %71, i32 %bf.clear129), !dbg !5386
  br label %if.end130, !dbg !5386

if.end130:                                        ; preds = %if.then123, %lor.lhs.false118
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.then112
  br label %if.end132, !dbg !5387

if.end132:                                        ; preds = %if.end131, %for.body89
  br label %for.inc133, !dbg !5388

for.inc133:                                       ; preds = %if.end132
  %74 = load i32, i32* %i, align 4, !dbg !5389
  %inc = add nsw i32 %74, 1, !dbg !5389
  store i32 %inc, i32* %i, align 4, !dbg !5389
  br label %for.cond86, !dbg !5390, !llvm.loop !5391

for.end134:                                       ; preds = %for.cond86
  store i32 0, i32* %i, align 4, !dbg !5393
  br label %for.cond135, !dbg !5395

for.cond135:                                      ; preds = %for.inc258, %for.end134
  %75 = load i32, i32* %i, align 4, !dbg !5396
  %76 = load i32, i32* %lim, align 4, !dbg !5398
  %cmp136 = icmp slt i32 %75, %76, !dbg !5399
  br i1 %cmp136, label %for.body138, label %for.end260, !dbg !5400

for.body138:                                      ; preds = %for.cond135
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %y139, metadata !5401, metadata !DIExpression()), !dbg !5403
  %77 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5404
  %u140 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1, !dbg !5404
  %fld141 = bitcast %union.u* %u140 to [1 x %union.rtunion_def]*, !dbg !5404
  %arrayidx142 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld141, i64 0, i64 0, !dbg !5404
  %rt_rtvec143 = bitcast %union.rtunion_def* %arrayidx142 to %struct.rtvec_def**, !dbg !5404
  %78 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec143, align 8, !dbg !5404
  %elem144 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %78, i32 0, i32 1, !dbg !5404
  %79 = load i32, i32* %i, align 4, !dbg !5404
  %idxprom145 = sext i32 %79 to i64, !dbg !5404
  %arrayidx146 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem144, i64 0, i64 %idxprom145, !dbg !5404
  %80 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx146, align 8, !dbg !5404
  store %struct.rtx_def* %80, %struct.rtx_def** %y139, align 8, !dbg !5403
  %81 = load %struct.rtx_def*, %struct.rtx_def** %y139, align 8, !dbg !5405
  %82 = bitcast %struct.rtx_def* %81 to i32*, !dbg !5405
  %bf.load147 = load i32, i32* %82, align 8, !dbg !5405
  %bf.clear148 = and i32 %bf.load147, 65535, !dbg !5405
  %cmp149 = icmp eq i32 %bf.clear148, 23, !dbg !5407
  br i1 %cmp149, label %if.then151, label %if.else200, !dbg !5408

if.then151:                                       ; preds = %for.body138
  %83 = load %struct.rtx_def*, %struct.rtx_def** %y139, align 8, !dbg !5409
  %u152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1, !dbg !5409
  %fld153 = bitcast %union.u* %u152 to [1 x %union.rtunion_def]*, !dbg !5409
  %arrayidx154 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld153, i64 0, i64 1, !dbg !5409
  %rt_rtx155 = bitcast %union.rtunion_def* %arrayidx154 to %struct.rtx_def**, !dbg !5409
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx155, align 8, !dbg !5409
  %85 = bitcast %struct.rtx_def* %84 to i32*, !dbg !5409
  %bf.load156 = load i32, i32* %85, align 8, !dbg !5409
  %bf.clear157 = and i32 %bf.load156, 65535, !dbg !5409
  %cmp158 = icmp eq i32 %bf.clear157, 26, !dbg !5412
  br i1 %cmp158, label %if.then160, label %if.else176, !dbg !5413

if.then160:                                       ; preds = %if.then151
  %86 = load %struct.rtx_def*, %struct.rtx_def** %y139, align 8, !dbg !5414
  %u161 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1, !dbg !5414
  %fld162 = bitcast %union.u* %u161 to [1 x %union.rtunion_def]*, !dbg !5414
  %arrayidx163 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld162, i64 0, i64 1, !dbg !5414
  %rt_rtx164 = bitcast %union.rtunion_def* %arrayidx163 to %struct.rtx_def**, !dbg !5414
  %87 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx164, align 8, !dbg !5414
  %88 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5416
  %call165 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %87, %struct.rtx_def* %88), !dbg !5417
  %call166 = call i32 @apply_change_group(), !dbg !5418
  %89 = load %struct.rtx_def*, %struct.rtx_def** %y139, align 8, !dbg !5419
  %u167 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i32 0, i32 1, !dbg !5419
  %fld168 = bitcast %union.u* %u167 to [1 x %union.rtunion_def]*, !dbg !5419
  %arrayidx169 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld168, i64 0, i64 1, !dbg !5419
  %rt_rtx170 = bitcast %union.rtunion_def* %arrayidx169 to %struct.rtx_def**, !dbg !5419
  %90 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx170, align 8, !dbg !5419
  %91 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5420
  %call171 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %90, %struct.rtx_def* %91), !dbg !5421
  %92 = load %struct.rtx_def*, %struct.rtx_def** %y139, align 8, !dbg !5422
  %u172 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1, !dbg !5422
  %fld173 = bitcast %union.u* %u172 to [1 x %union.rtunion_def]*, !dbg !5422
  %arrayidx174 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld173, i64 0, i64 0, !dbg !5422
  %rt_rtx175 = bitcast %union.rtunion_def* %arrayidx174 to %struct.rtx_def**, !dbg !5422
  %93 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx175, align 8, !dbg !5422
  call void @invalidate(%struct.rtx_def* %93, i32 0), !dbg !5423
  br label %if.end199, !dbg !5424

if.else176:                                       ; preds = %if.then151
  %94 = load %struct.rtx_def*, %struct.rtx_def** %y139, align 8, !dbg !5425
  %u177 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1, !dbg !5425
  %fld178 = bitcast %union.u* %u177 to [1 x %union.rtunion_def]*, !dbg !5425
  %arrayidx179 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld178, i64 0, i64 0, !dbg !5425
  %rt_rtx180 = bitcast %union.rtunion_def* %arrayidx179 to %struct.rtx_def**, !dbg !5425
  %95 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx180, align 8, !dbg !5425
  %96 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !5427
  %cmp181 = icmp eq %struct.rtx_def* %95, %96, !dbg !5428
  br i1 %cmp181, label %land.lhs.true183, label %if.else193, !dbg !5429

land.lhs.true183:                                 ; preds = %if.else176
  %97 = load %struct.rtx_def*, %struct.rtx_def** %y139, align 8, !dbg !5430
  %u184 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %97, i32 0, i32 1, !dbg !5430
  %fld185 = bitcast %union.u* %u184 to [1 x %union.rtunion_def]*, !dbg !5430
  %arrayidx186 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld185, i64 0, i64 1, !dbg !5430
  %rt_rtx187 = bitcast %union.rtunion_def* %arrayidx186 to %struct.rtx_def**, !dbg !5430
  %98 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx187, align 8, !dbg !5430
  %99 = bitcast %struct.rtx_def* %98 to i32*, !dbg !5430
  %bf.load188 = load i32, i32* %99, align 8, !dbg !5430
  %bf.clear189 = and i32 %bf.load188, 65535, !dbg !5430
  %cmp190 = icmp eq i32 %bf.clear189, 44, !dbg !5431
  br i1 %cmp190, label %if.then192, label %if.else193, !dbg !5432

if.then192:                                       ; preds = %land.lhs.true183
  br label %if.end198, !dbg !5432

if.else193:                                       ; preds = %land.lhs.true183, %if.else176
  %100 = load %struct.rtx_def*, %struct.rtx_def** %y139, align 8, !dbg !5433
  %101 = load %struct.set*, %struct.set** %sets, align 8, !dbg !5434
  %102 = load i32, i32* %n_sets, align 4, !dbg !5435
  %inc194 = add nsw i32 %102, 1, !dbg !5435
  store i32 %inc194, i32* %n_sets, align 4, !dbg !5435
  %idxprom195 = sext i32 %102 to i64, !dbg !5434
  %arrayidx196 = getelementptr inbounds %struct.set, %struct.set* %101, i64 %idxprom195, !dbg !5434
  %rtl197 = getelementptr inbounds %struct.set, %struct.set* %arrayidx196, i32 0, i32 0, !dbg !5436
  store %struct.rtx_def* %100, %struct.rtx_def** %rtl197, align 8, !dbg !5437
  br label %if.end198

if.end198:                                        ; preds = %if.else193, %if.then192
  br label %if.end199

if.end199:                                        ; preds = %if.end198, %if.then160
  br label %if.end257, !dbg !5438

if.else200:                                       ; preds = %for.body138
  %103 = load %struct.rtx_def*, %struct.rtx_def** %y139, align 8, !dbg !5439
  %104 = bitcast %struct.rtx_def* %103 to i32*, !dbg !5439
  %bf.load201 = load i32, i32* %104, align 8, !dbg !5439
  %bf.clear202 = and i32 %bf.load201, 65535, !dbg !5439
  %cmp203 = icmp eq i32 %bf.clear202, 25, !dbg !5441
  br i1 %cmp203, label %if.then205, label %if.else221, !dbg !5442

if.then205:                                       ; preds = %if.else200
  %105 = load %struct.rtx_def*, %struct.rtx_def** %y139, align 8, !dbg !5443
  %u206 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %105, i32 0, i32 1, !dbg !5443
  %fld207 = bitcast %union.u* %u206 to [1 x %union.rtunion_def]*, !dbg !5443
  %arrayidx208 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld207, i64 0, i64 0, !dbg !5443
  %rt_rtx209 = bitcast %union.rtunion_def* %arrayidx208 to %struct.rtx_def**, !dbg !5443
  %106 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx209, align 8, !dbg !5443
  %107 = bitcast %struct.rtx_def* %106 to i32*, !dbg !5443
  %bf.load210 = load i32, i32* %107, align 8, !dbg !5443
  %bf.clear211 = and i32 %bf.load210, 65535, !dbg !5443
  %cmp212 = icmp eq i32 %bf.clear211, 43, !dbg !5443
  br i1 %cmp212, label %if.then214, label %if.end220, !dbg !5446

if.then214:                                       ; preds = %if.then205
  %108 = load %struct.rtx_def*, %struct.rtx_def** %y139, align 8, !dbg !5447
  %u215 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1, !dbg !5447
  %fld216 = bitcast %union.u* %u215 to [1 x %union.rtunion_def]*, !dbg !5447
  %arrayidx217 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld216, i64 0, i64 0, !dbg !5447
  %rt_rtx218 = bitcast %union.rtunion_def* %arrayidx217 to %struct.rtx_def**, !dbg !5447
  %109 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx218, align 8, !dbg !5447
  %110 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5448
  %call219 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %109, %struct.rtx_def* %110), !dbg !5449
  br label %if.end220, !dbg !5449

if.end220:                                        ; preds = %if.then214, %if.then205
  br label %if.end256, !dbg !5450

if.else221:                                       ; preds = %if.else200
  %111 = load %struct.rtx_def*, %struct.rtx_def** %y139, align 8, !dbg !5451
  %112 = bitcast %struct.rtx_def* %111 to i32*, !dbg !5451
  %bf.load222 = load i32, i32* %112, align 8, !dbg !5451
  %bf.clear223 = and i32 %bf.load222, 65535, !dbg !5451
  %cmp224 = icmp eq i32 %bf.clear223, 24, !dbg !5453
  br i1 %cmp224, label %land.lhs.true226, label %if.else245, !dbg !5454

land.lhs.true226:                                 ; preds = %if.else221
  %113 = load %struct.rtx_def*, %struct.rtx_def** %y139, align 8, !dbg !5455
  %u227 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %113, i32 0, i32 1, !dbg !5455
  %fld228 = bitcast %union.u* %u227 to [1 x %union.rtunion_def]*, !dbg !5455
  %arrayidx229 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld228, i64 0, i64 0, !dbg !5455
  %rt_rtx230 = bitcast %union.rtunion_def* %arrayidx229 to %struct.rtx_def**, !dbg !5455
  %114 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx230, align 8, !dbg !5455
  %115 = bitcast %struct.rtx_def* %114 to i32*, !dbg !5455
  %bf.load231 = load i32, i32* %115, align 8, !dbg !5455
  %bf.clear232 = and i32 %bf.load231, 65535, !dbg !5455
  %cmp233 = icmp eq i32 %bf.clear232, 37, !dbg !5455
  br i1 %cmp233, label %land.lhs.true235, label %if.then243, !dbg !5456

land.lhs.true235:                                 ; preds = %land.lhs.true226
  %116 = load %struct.rtx_def*, %struct.rtx_def** %y139, align 8, !dbg !5457
  %u236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %116, i32 0, i32 1, !dbg !5457
  %fld237 = bitcast %union.u* %u236 to [1 x %union.rtunion_def]*, !dbg !5457
  %arrayidx238 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld237, i64 0, i64 0, !dbg !5457
  %rt_rtx239 = bitcast %union.rtunion_def* %arrayidx238 to %struct.rtx_def**, !dbg !5457
  %117 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx239, align 8, !dbg !5457
  %call240 = call i32 @rhs_regno(%struct.rtx_def* %117), !dbg !5457
  %cmp241 = icmp ult i32 %call240, 53, !dbg !5458
  br i1 %cmp241, label %if.else245, label %if.then243, !dbg !5459

if.then243:                                       ; preds = %land.lhs.true235, %land.lhs.true226
  %118 = load %struct.rtx_def*, %struct.rtx_def** %y139, align 8, !dbg !5460
  %119 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5461
  %call244 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %118, %struct.rtx_def* %119), !dbg !5462
  br label %if.end255, !dbg !5462

if.else245:                                       ; preds = %land.lhs.true235, %if.else221
  %120 = load %struct.rtx_def*, %struct.rtx_def** %y139, align 8, !dbg !5463
  %121 = bitcast %struct.rtx_def* %120 to i32*, !dbg !5463
  %bf.load246 = load i32, i32* %121, align 8, !dbg !5463
  %bf.clear247 = and i32 %bf.load246, 65535, !dbg !5463
  %cmp248 = icmp eq i32 %bf.clear247, 26, !dbg !5465
  br i1 %cmp248, label %if.then250, label %if.end254, !dbg !5466

if.then250:                                       ; preds = %if.else245
  %122 = load %struct.rtx_def*, %struct.rtx_def** %y139, align 8, !dbg !5467
  %123 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5469
  %call251 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %122, %struct.rtx_def* %123), !dbg !5470
  %call252 = call i32 @apply_change_group(), !dbg !5471
  %124 = load %struct.rtx_def*, %struct.rtx_def** %y139, align 8, !dbg !5472
  %125 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5473
  %call253 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %124, %struct.rtx_def* %125), !dbg !5474
  br label %if.end254, !dbg !5475

if.end254:                                        ; preds = %if.then250, %if.else245
  br label %if.end255

if.end255:                                        ; preds = %if.end254, %if.then243
  br label %if.end256

if.end256:                                        ; preds = %if.end255, %if.end220
  br label %if.end257

if.end257:                                        ; preds = %if.end256, %if.end199
  br label %for.inc258, !dbg !5476

for.inc258:                                       ; preds = %if.end257
  %126 = load i32, i32* %i, align 4, !dbg !5477
  %inc259 = add nsw i32 %126, 1, !dbg !5477
  store i32 %inc259, i32* %i, align 4, !dbg !5477
  br label %for.cond135, !dbg !5478, !llvm.loop !5479

for.end260:                                       ; preds = %for.cond135
  br label %if.end334, !dbg !5481

if.else261:                                       ; preds = %if.else78
  %127 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5482
  %128 = bitcast %struct.rtx_def* %127 to i32*, !dbg !5482
  %bf.load262 = load i32, i32* %128, align 8, !dbg !5482
  %bf.clear263 = and i32 %bf.load262, 65535, !dbg !5482
  %cmp264 = icmp eq i32 %bf.clear263, 25, !dbg !5484
  br i1 %cmp264, label %if.then266, label %if.else282, !dbg !5485

if.then266:                                       ; preds = %if.else261
  %129 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5486
  %u267 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %129, i32 0, i32 1, !dbg !5486
  %fld268 = bitcast %union.u* %u267 to [1 x %union.rtunion_def]*, !dbg !5486
  %arrayidx269 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld268, i64 0, i64 0, !dbg !5486
  %rt_rtx270 = bitcast %union.rtunion_def* %arrayidx269 to %struct.rtx_def**, !dbg !5486
  %130 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx270, align 8, !dbg !5486
  %131 = bitcast %struct.rtx_def* %130 to i32*, !dbg !5486
  %bf.load271 = load i32, i32* %131, align 8, !dbg !5486
  %bf.clear272 = and i32 %bf.load271, 65535, !dbg !5486
  %cmp273 = icmp eq i32 %bf.clear272, 43, !dbg !5486
  br i1 %cmp273, label %if.then275, label %if.end281, !dbg !5489

if.then275:                                       ; preds = %if.then266
  %132 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5490
  %u276 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %132, i32 0, i32 1, !dbg !5490
  %fld277 = bitcast %union.u* %u276 to [1 x %union.rtunion_def]*, !dbg !5490
  %arrayidx278 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld277, i64 0, i64 0, !dbg !5490
  %rt_rtx279 = bitcast %union.rtunion_def* %arrayidx278 to %struct.rtx_def**, !dbg !5490
  %133 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx279, align 8, !dbg !5490
  %134 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5491
  %call280 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %133, %struct.rtx_def* %134), !dbg !5492
  br label %if.end281, !dbg !5492

if.end281:                                        ; preds = %if.then275, %if.then266
  br label %if.end333, !dbg !5493

if.else282:                                       ; preds = %if.else261
  %135 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5494
  %136 = bitcast %struct.rtx_def* %135 to i32*, !dbg !5494
  %bf.load283 = load i32, i32* %136, align 8, !dbg !5494
  %bf.clear284 = and i32 %bf.load283, 65535, !dbg !5494
  %cmp285 = icmp eq i32 %bf.clear284, 24, !dbg !5496
  br i1 %cmp285, label %land.lhs.true287, label %if.else310, !dbg !5497

land.lhs.true287:                                 ; preds = %if.else282
  %137 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5498
  %u288 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %137, i32 0, i32 1, !dbg !5498
  %fld289 = bitcast %union.u* %u288 to [1 x %union.rtunion_def]*, !dbg !5498
  %arrayidx290 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld289, i64 0, i64 0, !dbg !5498
  %rt_rtx291 = bitcast %union.rtunion_def* %arrayidx290 to %struct.rtx_def**, !dbg !5498
  %138 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx291, align 8, !dbg !5498
  %139 = bitcast %struct.rtx_def* %138 to i32*, !dbg !5498
  %bf.load292 = load i32, i32* %139, align 8, !dbg !5498
  %bf.clear293 = and i32 %bf.load292, 65535, !dbg !5498
  %cmp294 = icmp eq i32 %bf.clear293, 37, !dbg !5498
  br i1 %cmp294, label %land.lhs.true296, label %if.then304, !dbg !5499

land.lhs.true296:                                 ; preds = %land.lhs.true287
  %140 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5500
  %u297 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %140, i32 0, i32 1, !dbg !5500
  %fld298 = bitcast %union.u* %u297 to [1 x %union.rtunion_def]*, !dbg !5500
  %arrayidx299 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld298, i64 0, i64 0, !dbg !5500
  %rt_rtx300 = bitcast %union.rtunion_def* %arrayidx299 to %struct.rtx_def**, !dbg !5500
  %141 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx300, align 8, !dbg !5500
  %call301 = call i32 @rhs_regno(%struct.rtx_def* %141), !dbg !5500
  %cmp302 = icmp ult i32 %call301, 53, !dbg !5501
  br i1 %cmp302, label %if.else310, label %if.then304, !dbg !5502

if.then304:                                       ; preds = %land.lhs.true296, %land.lhs.true287
  %142 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5503
  %u305 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %142, i32 0, i32 1, !dbg !5503
  %fld306 = bitcast %union.u* %u305 to [1 x %union.rtunion_def]*, !dbg !5503
  %arrayidx307 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld306, i64 0, i64 0, !dbg !5503
  %rt_rtx308 = bitcast %union.rtunion_def* %arrayidx307 to %struct.rtx_def**, !dbg !5503
  %143 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx308, align 8, !dbg !5503
  %144 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5504
  %call309 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %143, %struct.rtx_def* %144), !dbg !5505
  br label %if.end332, !dbg !5505

if.else310:                                       ; preds = %land.lhs.true296, %if.else282
  %145 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5506
  %146 = bitcast %struct.rtx_def* %145 to i32*, !dbg !5506
  %bf.load311 = load i32, i32* %146, align 8, !dbg !5506
  %bf.clear312 = and i32 %bf.load311, 65535, !dbg !5506
  %cmp313 = icmp eq i32 %bf.clear312, 26, !dbg !5508
  br i1 %cmp313, label %if.then315, label %if.else319, !dbg !5509

if.then315:                                       ; preds = %if.else310
  %147 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5510
  %148 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5512
  %call316 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %147, %struct.rtx_def* %148), !dbg !5513
  %call317 = call i32 @apply_change_group(), !dbg !5514
  %149 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5515
  %150 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5516
  %call318 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %149, %struct.rtx_def* %150), !dbg !5517
  br label %if.end331, !dbg !5518

if.else319:                                       ; preds = %if.else310
  %151 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5519
  %152 = bitcast %struct.rtx_def* %151 to i32*, !dbg !5519
  %bf.load320 = load i32, i32* %152, align 8, !dbg !5519
  %bf.clear321 = and i32 %bf.load320, 65535, !dbg !5519
  %cmp322 = icmp eq i32 %bf.clear321, 7, !dbg !5519
  br i1 %cmp322, label %if.then324, label %if.end330, !dbg !5521

if.then324:                                       ; preds = %if.else319
  %153 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5522
  %u325 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %153, i32 0, i32 1, !dbg !5522
  %fld326 = bitcast %union.u* %u325 to [1 x %union.rtunion_def]*, !dbg !5522
  %arrayidx327 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld326, i64 0, i64 5, !dbg !5522
  %rt_rtx328 = bitcast %union.rtunion_def* %arrayidx327 to %struct.rtx_def**, !dbg !5522
  %154 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx328, align 8, !dbg !5522
  %155 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5523
  %call329 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %154, %struct.rtx_def* %155), !dbg !5524
  br label %if.end330, !dbg !5524

if.end330:                                        ; preds = %if.then324, %if.else319
  br label %if.end331

if.end331:                                        ; preds = %if.end330, %if.then315
  br label %if.end332

if.end332:                                        ; preds = %if.end331, %if.then304
  br label %if.end333

if.end333:                                        ; preds = %if.end332, %if.end281
  br label %if.end334

if.end334:                                        ; preds = %if.end333, %for.end260
  br label %if.end335

if.end335:                                        ; preds = %if.end334, %if.end77
  %156 = load i32, i32* %n_sets, align 4, !dbg !5525
  %cmp336 = icmp eq i32 %156, 1, !dbg !5527
  br i1 %cmp336, label %land.lhs.true338, label %if.end390, !dbg !5528

land.lhs.true338:                                 ; preds = %if.end335
  %157 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5529
  %u339 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %157, i32 0, i32 1, !dbg !5529
  %fld340 = bitcast %union.u* %u339 to [1 x %union.rtunion_def]*, !dbg !5529
  %arrayidx341 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld340, i64 0, i64 7, !dbg !5529
  %rt_rtx342 = bitcast %union.rtunion_def* %arrayidx341 to %struct.rtx_def**, !dbg !5529
  %158 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx342, align 8, !dbg !5529
  %cmp343 = icmp ne %struct.rtx_def* %158, null, !dbg !5530
  br i1 %cmp343, label %land.lhs.true345, label %if.end390, !dbg !5531

land.lhs.true345:                                 ; preds = %land.lhs.true338
  %159 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5532
  %call346 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %159, i32 4, %struct.rtx_def* null), !dbg !5533
  store %struct.rtx_def* %call346, %struct.rtx_def** %tem, align 8, !dbg !5534
  %cmp347 = icmp ne %struct.rtx_def* %call346, null, !dbg !5535
  br i1 %cmp347, label %land.lhs.true349, label %if.end390, !dbg !5536

land.lhs.true349:                                 ; preds = %land.lhs.true345
  %160 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !5537
  %u350 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %160, i32 0, i32 1, !dbg !5537
  %fld351 = bitcast %union.u* %u350 to [1 x %union.rtunion_def]*, !dbg !5537
  %arrayidx352 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld351, i64 0, i64 0, !dbg !5537
  %rt_rtx353 = bitcast %union.rtunion_def* %arrayidx352 to %struct.rtx_def**, !dbg !5537
  %161 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx353, align 8, !dbg !5537
  %162 = load %struct.set*, %struct.set** %sets, align 8, !dbg !5538
  %arrayidx354 = getelementptr inbounds %struct.set, %struct.set* %162, i64 0, !dbg !5538
  %rtl355 = getelementptr inbounds %struct.set, %struct.set* %arrayidx354, i32 0, i32 0, !dbg !5538
  %163 = load %struct.rtx_def*, %struct.rtx_def** %rtl355, align 8, !dbg !5538
  %u356 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %163, i32 0, i32 1, !dbg !5538
  %fld357 = bitcast %union.u* %u356 to [1 x %union.rtunion_def]*, !dbg !5538
  %arrayidx358 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld357, i64 0, i64 1, !dbg !5538
  %rt_rtx359 = bitcast %union.rtunion_def* %arrayidx358 to %struct.rtx_def**, !dbg !5538
  %164 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx359, align 8, !dbg !5538
  %call360 = call i32 @rtx_equal_p(%struct.rtx_def* %161, %struct.rtx_def* %164), !dbg !5539
  %tobool361 = icmp ne i32 %call360, 0, !dbg !5539
  br i1 %tobool361, label %lor.lhs.false362, label %if.then373, !dbg !5540

lor.lhs.false362:                                 ; preds = %land.lhs.true349
  %165 = load %struct.set*, %struct.set** %sets, align 8, !dbg !5541
  %arrayidx363 = getelementptr inbounds %struct.set, %struct.set* %165, i64 0, !dbg !5541
  %rtl364 = getelementptr inbounds %struct.set, %struct.set* %arrayidx363, i32 0, i32 0, !dbg !5541
  %166 = load %struct.rtx_def*, %struct.rtx_def** %rtl364, align 8, !dbg !5541
  %u365 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %166, i32 0, i32 1, !dbg !5541
  %fld366 = bitcast %union.u* %u365 to [1 x %union.rtunion_def]*, !dbg !5541
  %arrayidx367 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld366, i64 0, i64 0, !dbg !5541
  %rt_rtx368 = bitcast %union.rtunion_def* %arrayidx367 to %struct.rtx_def**, !dbg !5541
  %167 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx368, align 8, !dbg !5541
  %168 = bitcast %struct.rtx_def* %167 to i32*, !dbg !5541
  %bf.load369 = load i32, i32* %168, align 8, !dbg !5541
  %bf.clear370 = and i32 %bf.load369, 65535, !dbg !5541
  %cmp371 = icmp eq i32 %bf.clear370, 40, !dbg !5542
  br i1 %cmp371, label %if.then373, label %if.end390, !dbg !5543

if.then373:                                       ; preds = %lor.lhs.false362, %land.lhs.true349
  %169 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !5544
  %u374 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %169, i32 0, i32 1, !dbg !5544
  %fld375 = bitcast %union.u* %u374 to [1 x %union.rtunion_def]*, !dbg !5544
  %arrayidx376 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld375, i64 0, i64 0, !dbg !5544
  %rt_rtx377 = bitcast %union.rtunion_def* %arrayidx376 to %struct.rtx_def**, !dbg !5544
  %170 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx377, align 8, !dbg !5544
  %171 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5546
  %call378 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %170, %struct.rtx_def* %171), !dbg !5547
  %call379 = call i32 @apply_change_group(), !dbg !5548
  %172 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !5549
  %u380 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %172, i32 0, i32 1, !dbg !5549
  %fld381 = bitcast %union.u* %u380 to [1 x %union.rtunion_def]*, !dbg !5549
  %arrayidx382 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld381, i64 0, i64 0, !dbg !5549
  %rt_rtx383 = bitcast %union.rtunion_def* %arrayidx382 to %struct.rtx_def**, !dbg !5549
  %173 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx383, align 8, !dbg !5549
  %174 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5550
  %call384 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %173, %struct.rtx_def* %174), !dbg !5551
  store %struct.rtx_def* %call384, %struct.rtx_def** %src_eqv, align 8, !dbg !5552
  %175 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8, !dbg !5553
  %call385 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %175), !dbg !5554
  %176 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !5555
  %u386 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %176, i32 0, i32 1, !dbg !5555
  %fld387 = bitcast %union.u* %u386 to [1 x %union.rtunion_def]*, !dbg !5555
  %arrayidx388 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld387, i64 0, i64 0, !dbg !5555
  %rt_rtx389 = bitcast %union.rtunion_def* %arrayidx388 to %struct.rtx_def**, !dbg !5555
  store %struct.rtx_def* %call385, %struct.rtx_def** %rt_rtx389, align 8, !dbg !5556
  %177 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5557
  call void @df_notes_rescan(%struct.rtx_def* %177), !dbg !5558
  br label %if.end390, !dbg !5559

if.end390:                                        ; preds = %if.then373, %lor.lhs.false362, %land.lhs.true345, %land.lhs.true338, %if.end335
  store i32 0, i32* %i, align 4, !dbg !5560
  br label %for.cond391, !dbg !5562

for.cond391:                                      ; preds = %for.inc468, %if.end390
  %178 = load i32, i32* %i, align 4, !dbg !5563
  %179 = load i32, i32* %n_sets, align 4, !dbg !5565
  %cmp392 = icmp slt i32 %178, %179, !dbg !5566
  br i1 %cmp392, label %for.body394, label %for.end470, !dbg !5567

for.body394:                                      ; preds = %for.cond391
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dest, metadata !5568, metadata !DIExpression()), !dbg !5570
  %180 = load %struct.set*, %struct.set** %sets, align 8, !dbg !5571
  %181 = load i32, i32* %i, align 4, !dbg !5571
  %idxprom395 = sext i32 %181 to i64, !dbg !5571
  %arrayidx396 = getelementptr inbounds %struct.set, %struct.set* %180, i64 %idxprom395, !dbg !5571
  %rtl397 = getelementptr inbounds %struct.set, %struct.set* %arrayidx396, i32 0, i32 0, !dbg !5571
  %182 = load %struct.rtx_def*, %struct.rtx_def** %rtl397, align 8, !dbg !5571
  %u398 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %182, i32 0, i32 1, !dbg !5571
  %fld399 = bitcast %union.u* %u398 to [1 x %union.rtunion_def]*, !dbg !5571
  %arrayidx400 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld399, i64 0, i64 0, !dbg !5571
  %rt_rtx401 = bitcast %union.rtunion_def* %arrayidx400 to %struct.rtx_def**, !dbg !5571
  %183 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx401, align 8, !dbg !5571
  store %struct.rtx_def* %183, %struct.rtx_def** %dest, align 8, !dbg !5570
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %src, metadata !5572, metadata !DIExpression()), !dbg !5573
  %184 = load %struct.set*, %struct.set** %sets, align 8, !dbg !5574
  %185 = load i32, i32* %i, align 4, !dbg !5574
  %idxprom402 = sext i32 %185 to i64, !dbg !5574
  %arrayidx403 = getelementptr inbounds %struct.set, %struct.set* %184, i64 %idxprom402, !dbg !5574
  %rtl404 = getelementptr inbounds %struct.set, %struct.set* %arrayidx403, i32 0, i32 0, !dbg !5574
  %186 = load %struct.rtx_def*, %struct.rtx_def** %rtl404, align 8, !dbg !5574
  %u405 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %186, i32 0, i32 1, !dbg !5574
  %fld406 = bitcast %union.u* %u405 to [1 x %union.rtunion_def]*, !dbg !5574
  %arrayidx407 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld406, i64 0, i64 1, !dbg !5574
  %rt_rtx408 = bitcast %union.rtunion_def* %arrayidx407 to %struct.rtx_def**, !dbg !5574
  %187 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx408, align 8, !dbg !5574
  store %struct.rtx_def* %187, %struct.rtx_def** %src, align 8, !dbg !5573
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_rtx, metadata !5575, metadata !DIExpression()), !dbg !5576
  %188 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !5577
  %189 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5578
  %call409 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %188, %struct.rtx_def* %189), !dbg !5579
  store %struct.rtx_def* %call409, %struct.rtx_def** %new_rtx, align 8, !dbg !5576
  %190 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5580
  %191 = load %struct.set*, %struct.set** %sets, align 8, !dbg !5581
  %192 = load i32, i32* %i, align 4, !dbg !5581
  %idxprom410 = sext i32 %192 to i64, !dbg !5581
  %arrayidx411 = getelementptr inbounds %struct.set, %struct.set* %191, i64 %idxprom410, !dbg !5581
  %rtl412 = getelementptr inbounds %struct.set, %struct.set* %arrayidx411, i32 0, i32 0, !dbg !5581
  %193 = load %struct.rtx_def*, %struct.rtx_def** %rtl412, align 8, !dbg !5581
  %u413 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %193, i32 0, i32 1, !dbg !5581
  %fld414 = bitcast %union.u* %u413 to [1 x %union.rtunion_def]*, !dbg !5581
  %arrayidx415 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld414, i64 0, i64 1, !dbg !5581
  %rt_rtx416 = bitcast %union.rtunion_def* %arrayidx415 to %struct.rtx_def**, !dbg !5581
  %194 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !5582
  %call417 = call zeroext i8 @validate_change(%struct.rtx_def* %190, %struct.rtx_def** %rt_rtx416, %struct.rtx_def* %194, i8 zeroext 1), !dbg !5583
  %195 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !5584
  %196 = bitcast %struct.rtx_def* %195 to i32*, !dbg !5584
  %bf.load418 = load i32, i32* %196, align 8, !dbg !5584
  %bf.clear419 = and i32 %bf.load418, 65535, !dbg !5584
  %cmp420 = icmp eq i32 %bf.clear419, 120, !dbg !5586
  br i1 %cmp420, label %if.then422, label %if.end443, !dbg !5587

if.then422:                                       ; preds = %for.body394
  %197 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5588
  %198 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !5590
  %u423 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %198, i32 0, i32 1, !dbg !5590
  %fld424 = bitcast %union.u* %u423 to [1 x %union.rtunion_def]*, !dbg !5590
  %arrayidx425 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld424, i64 0, i64 1, !dbg !5590
  %rt_rtx426 = bitcast %union.rtunion_def* %arrayidx425 to %struct.rtx_def**, !dbg !5590
  %199 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !5591
  %u427 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %199, i32 0, i32 1, !dbg !5591
  %fld428 = bitcast %union.u* %u427 to [1 x %union.rtunion_def]*, !dbg !5591
  %arrayidx429 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld428, i64 0, i64 1, !dbg !5591
  %rt_rtx430 = bitcast %union.rtunion_def* %arrayidx429 to %struct.rtx_def**, !dbg !5591
  %200 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx430, align 8, !dbg !5591
  %201 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5592
  %call431 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %200, %struct.rtx_def* %201), !dbg !5593
  %call432 = call zeroext i8 @validate_change(%struct.rtx_def* %197, %struct.rtx_def** %rt_rtx426, %struct.rtx_def* %call431, i8 zeroext 1), !dbg !5594
  %202 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5595
  %203 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !5596
  %u433 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %203, i32 0, i32 1, !dbg !5596
  %fld434 = bitcast %union.u* %u433 to [1 x %union.rtunion_def]*, !dbg !5596
  %arrayidx435 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld434, i64 0, i64 2, !dbg !5596
  %rt_rtx436 = bitcast %union.rtunion_def* %arrayidx435 to %struct.rtx_def**, !dbg !5596
  %204 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !5597
  %u437 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %204, i32 0, i32 1, !dbg !5597
  %fld438 = bitcast %union.u* %u437 to [1 x %union.rtunion_def]*, !dbg !5597
  %arrayidx439 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld438, i64 0, i64 2, !dbg !5597
  %rt_rtx440 = bitcast %union.rtunion_def* %arrayidx439 to %struct.rtx_def**, !dbg !5597
  %205 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx440, align 8, !dbg !5597
  %206 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5598
  %call441 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %205, %struct.rtx_def* %206), !dbg !5599
  %call442 = call zeroext i8 @validate_change(%struct.rtx_def* %202, %struct.rtx_def** %rt_rtx436, %struct.rtx_def* %call441, i8 zeroext 1), !dbg !5600
  br label %if.end443, !dbg !5601

if.end443:                                        ; preds = %if.then422, %for.body394
  br label %while.cond, !dbg !5602

while.cond:                                       ; preds = %while.body, %if.end443
  %207 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !5603
  %208 = bitcast %struct.rtx_def* %207 to i32*, !dbg !5603
  %bf.load444 = load i32, i32* %208, align 8, !dbg !5603
  %bf.clear445 = and i32 %bf.load444, 65535, !dbg !5603
  %cmp446 = icmp eq i32 %bf.clear445, 39, !dbg !5604
  br i1 %cmp446, label %lor.end, label %lor.lhs.false448, !dbg !5605

lor.lhs.false448:                                 ; preds = %while.cond
  %209 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !5606
  %210 = bitcast %struct.rtx_def* %209 to i32*, !dbg !5606
  %bf.load449 = load i32, i32* %210, align 8, !dbg !5606
  %bf.clear450 = and i32 %bf.load449, 65535, !dbg !5606
  %cmp451 = icmp eq i32 %bf.clear450, 120, !dbg !5607
  br i1 %cmp451, label %lor.end, label %lor.rhs, !dbg !5608

lor.rhs:                                          ; preds = %lor.lhs.false448
  %211 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !5609
  %212 = bitcast %struct.rtx_def* %211 to i32*, !dbg !5609
  %bf.load453 = load i32, i32* %212, align 8, !dbg !5609
  %bf.clear454 = and i32 %bf.load453, 65535, !dbg !5609
  %cmp455 = icmp eq i32 %bf.clear454, 40, !dbg !5610
  br label %lor.end, !dbg !5608

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false448, %while.cond
  %213 = phi i1 [ true, %lor.lhs.false448 ], [ true, %while.cond ], [ %cmp455, %lor.rhs ]
  br i1 %213, label %while.body, label %while.end, !dbg !5602

while.body:                                       ; preds = %lor.end
  %214 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !5611
  %u457 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %214, i32 0, i32 1, !dbg !5611
  %fld458 = bitcast %union.u* %u457 to [1 x %union.rtunion_def]*, !dbg !5611
  %arrayidx459 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld458, i64 0, i64 0, !dbg !5611
  %rt_rtx460 = bitcast %union.rtunion_def* %arrayidx459 to %struct.rtx_def**, !dbg !5611
  %215 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx460, align 8, !dbg !5611
  store %struct.rtx_def* %215, %struct.rtx_def** %dest, align 8, !dbg !5612
  br label %while.cond, !dbg !5602, !llvm.loop !5613

while.end:                                        ; preds = %lor.end
  %216 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !5614
  %217 = bitcast %struct.rtx_def* %216 to i32*, !dbg !5614
  %bf.load461 = load i32, i32* %217, align 8, !dbg !5614
  %bf.clear462 = and i32 %bf.load461, 65535, !dbg !5614
  %cmp463 = icmp eq i32 %bf.clear462, 43, !dbg !5614
  br i1 %cmp463, label %if.then465, label %if.end467, !dbg !5616

if.then465:                                       ; preds = %while.end
  %218 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !5617
  %219 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5618
  %call466 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %218, %struct.rtx_def* %219), !dbg !5619
  br label %if.end467, !dbg !5619

if.end467:                                        ; preds = %if.then465, %while.end
  br label %for.inc468, !dbg !5620

for.inc468:                                       ; preds = %if.end467
  %220 = load i32, i32* %i, align 4, !dbg !5621
  %inc469 = add nsw i32 %220, 1, !dbg !5621
  store i32 %inc469, i32* %i, align 4, !dbg !5621
  br label %for.cond391, !dbg !5622, !llvm.loop !5623

for.end470:                                       ; preds = %for.cond391
  %call471 = call i32 @apply_change_group(), !dbg !5625
  store i32 0, i32* %i, align 4, !dbg !5626
  br label %for.cond472, !dbg !5628

for.cond472:                                      ; preds = %for.inc2494, %for.end470
  %221 = load i32, i32* %i, align 4, !dbg !5629
  %222 = load i32, i32* %n_sets, align 4, !dbg !5631
  %cmp473 = icmp slt i32 %221, %222, !dbg !5632
  br i1 %cmp473, label %for.body475, label %for.end2496, !dbg !5633

for.body475:                                      ; preds = %for.cond472
  call void @llvm.dbg.declare(metadata i8* %repeat, metadata !5634, metadata !DIExpression()), !dbg !5636
  store i8 0, i8* %repeat, align 1, !dbg !5636
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %src476, metadata !5637, metadata !DIExpression()), !dbg !5638
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dest477, metadata !5639, metadata !DIExpression()), !dbg !5640
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %src_folded, metadata !5641, metadata !DIExpression()), !dbg !5642
  call void @llvm.dbg.declare(metadata %struct.table_elt** %elt, metadata !5643, metadata !DIExpression()), !dbg !5644
  store %struct.table_elt* null, %struct.table_elt** %elt, align 8, !dbg !5644
  call void @llvm.dbg.declare(metadata %struct.table_elt** %p, metadata !5645, metadata !DIExpression()), !dbg !5646
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !5647, metadata !DIExpression()), !dbg !5648
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %src_eqv_here, metadata !5649, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %src_const, metadata !5651, metadata !DIExpression()), !dbg !5652
  store %struct.rtx_def* null, %struct.rtx_def** %src_const, align 8, !dbg !5652
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %src_related, metadata !5653, metadata !DIExpression()), !dbg !5654
  store %struct.rtx_def* null, %struct.rtx_def** %src_related, align 8, !dbg !5654
  call void @llvm.dbg.declare(metadata i8* %src_related_is_const_anchor, metadata !5655, metadata !DIExpression()), !dbg !5656
  store i8 0, i8* %src_related_is_const_anchor, align 1, !dbg !5656
  call void @llvm.dbg.declare(metadata %struct.table_elt** %src_const_elt, metadata !5657, metadata !DIExpression()), !dbg !5658
  store %struct.table_elt* null, %struct.table_elt** %src_const_elt, align 8, !dbg !5658
  call void @llvm.dbg.declare(metadata i32* %src_cost, metadata !5659, metadata !DIExpression()), !dbg !5660
  store i32 2147483647, i32* %src_cost, align 4, !dbg !5660
  call void @llvm.dbg.declare(metadata i32* %src_eqv_cost, metadata !5661, metadata !DIExpression()), !dbg !5662
  store i32 2147483647, i32* %src_eqv_cost, align 4, !dbg !5662
  call void @llvm.dbg.declare(metadata i32* %src_folded_cost, metadata !5663, metadata !DIExpression()), !dbg !5664
  store i32 2147483647, i32* %src_folded_cost, align 4, !dbg !5664
  call void @llvm.dbg.declare(metadata i32* %src_related_cost, metadata !5665, metadata !DIExpression()), !dbg !5666
  store i32 2147483647, i32* %src_related_cost, align 4, !dbg !5666
  call void @llvm.dbg.declare(metadata i32* %src_elt_cost, metadata !5667, metadata !DIExpression()), !dbg !5668
  store i32 2147483647, i32* %src_elt_cost, align 4, !dbg !5668
  call void @llvm.dbg.declare(metadata i32* %src_regcost, metadata !5669, metadata !DIExpression()), !dbg !5670
  store i32 2147483647, i32* %src_regcost, align 4, !dbg !5670
  call void @llvm.dbg.declare(metadata i32* %src_eqv_regcost, metadata !5671, metadata !DIExpression()), !dbg !5672
  store i32 2147483647, i32* %src_eqv_regcost, align 4, !dbg !5672
  call void @llvm.dbg.declare(metadata i32* %src_folded_regcost, metadata !5673, metadata !DIExpression()), !dbg !5674
  store i32 2147483647, i32* %src_folded_regcost, align 4, !dbg !5674
  call void @llvm.dbg.declare(metadata i32* %src_related_regcost, metadata !5675, metadata !DIExpression()), !dbg !5676
  store i32 2147483647, i32* %src_related_regcost, align 4, !dbg !5676
  call void @llvm.dbg.declare(metadata i32* %src_elt_regcost, metadata !5677, metadata !DIExpression()), !dbg !5678
  store i32 2147483647, i32* %src_elt_regcost, align 4, !dbg !5678
  call void @llvm.dbg.declare(metadata i32* %src_folded_force_flag, metadata !5679, metadata !DIExpression()), !dbg !5680
  store i32 0, i32* %src_folded_force_flag, align 4, !dbg !5680
  %223 = load %struct.set*, %struct.set** %sets, align 8, !dbg !5681
  %224 = load i32, i32* %i, align 4, !dbg !5681
  %idxprom478 = sext i32 %224 to i64, !dbg !5681
  %arrayidx479 = getelementptr inbounds %struct.set, %struct.set* %223, i64 %idxprom478, !dbg !5681
  %rtl480 = getelementptr inbounds %struct.set, %struct.set* %arrayidx479, i32 0, i32 0, !dbg !5681
  %225 = load %struct.rtx_def*, %struct.rtx_def** %rtl480, align 8, !dbg !5681
  %u481 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %225, i32 0, i32 1, !dbg !5681
  %fld482 = bitcast %union.u* %u481 to [1 x %union.rtunion_def]*, !dbg !5681
  %arrayidx483 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld482, i64 0, i64 0, !dbg !5681
  %rt_rtx484 = bitcast %union.rtunion_def* %arrayidx483 to %struct.rtx_def**, !dbg !5681
  %226 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx484, align 8, !dbg !5681
  store %struct.rtx_def* %226, %struct.rtx_def** %dest477, align 8, !dbg !5682
  %227 = load %struct.set*, %struct.set** %sets, align 8, !dbg !5683
  %228 = load i32, i32* %i, align 4, !dbg !5683
  %idxprom485 = sext i32 %228 to i64, !dbg !5683
  %arrayidx486 = getelementptr inbounds %struct.set, %struct.set* %227, i64 %idxprom485, !dbg !5683
  %rtl487 = getelementptr inbounds %struct.set, %struct.set* %arrayidx486, i32 0, i32 0, !dbg !5683
  %229 = load %struct.rtx_def*, %struct.rtx_def** %rtl487, align 8, !dbg !5683
  %u488 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %229, i32 0, i32 1, !dbg !5683
  %fld489 = bitcast %union.u* %u488 to [1 x %union.rtunion_def]*, !dbg !5683
  %arrayidx490 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld489, i64 0, i64 1, !dbg !5683
  %rt_rtx491 = bitcast %union.rtunion_def* %arrayidx490 to %struct.rtx_def**, !dbg !5683
  %230 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx491, align 8, !dbg !5683
  store %struct.rtx_def* %230, %struct.rtx_def** %src476, align 8, !dbg !5684
  %231 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !5685
  %232 = bitcast %struct.rtx_def* %231 to i32*, !dbg !5685
  %bf.load492 = load i32, i32* %232, align 8, !dbg !5685
  %bf.lshr493 = lshr i32 %bf.load492, 16, !dbg !5685
  %bf.clear494 = and i32 %bf.lshr493, 255, !dbg !5685
  %cmp495 = icmp eq i32 %bf.clear494, 0, !dbg !5686
  br i1 %cmp495, label %cond.true, label %cond.false, !dbg !5685

cond.true:                                        ; preds = %for.body475
  %233 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !5687
  %234 = bitcast %struct.rtx_def* %233 to i32*, !dbg !5687
  %bf.load497 = load i32, i32* %234, align 8, !dbg !5687
  %bf.lshr498 = lshr i32 %bf.load497, 16, !dbg !5687
  %bf.clear499 = and i32 %bf.lshr498, 255, !dbg !5687
  br label %cond.end, !dbg !5685

cond.false:                                       ; preds = %for.body475
  %235 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !5688
  %236 = bitcast %struct.rtx_def* %235 to i32*, !dbg !5688
  %bf.load500 = load i32, i32* %236, align 8, !dbg !5688
  %bf.lshr501 = lshr i32 %bf.load500, 16, !dbg !5688
  %bf.clear502 = and i32 %bf.lshr501, 255, !dbg !5688
  br label %cond.end, !dbg !5685

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %bf.clear499, %cond.true ], [ %bf.clear502, %cond.false ], !dbg !5685
  store i32 %cond, i32* %mode, align 4, !dbg !5689
  %237 = load i32, i32* %mode, align 4, !dbg !5690
  %238 = load %struct.set*, %struct.set** %sets, align 8, !dbg !5691
  %239 = load i32, i32* %i, align 4, !dbg !5692
  %idxprom503 = sext i32 %239 to i64, !dbg !5691
  %arrayidx504 = getelementptr inbounds %struct.set, %struct.set* %238, i64 %idxprom503, !dbg !5691
  %mode505 = getelementptr inbounds %struct.set, %struct.set* %arrayidx504, i32 0, i32 8, !dbg !5693
  %240 = trunc i32 %237 to i8, !dbg !5694
  store i8 %240, i8* %mode505, align 2, !dbg !5694
  %bf.result.cast = zext i8 %240 to i32, !dbg !5694
  %241 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8, !dbg !5695
  %tobool506 = icmp ne %struct.rtx_def* %241, null, !dbg !5695
  br i1 %tobool506, label %if.then507, label %if.end544, !dbg !5697

if.then507:                                       ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %eqvmode, metadata !5698, metadata !DIExpression()), !dbg !5700
  %242 = load i32, i32* %mode, align 4, !dbg !5701
  store i32 %242, i32* %eqvmode, align 4, !dbg !5700
  %243 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !5702
  %244 = bitcast %struct.rtx_def* %243 to i32*, !dbg !5702
  %bf.load508 = load i32, i32* %244, align 8, !dbg !5702
  %bf.clear509 = and i32 %bf.load508, 65535, !dbg !5702
  %cmp510 = icmp eq i32 %bf.clear509, 40, !dbg !5704
  br i1 %cmp510, label %if.then512, label %if.end524, !dbg !5705

if.then512:                                       ; preds = %if.then507
  %245 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !5706
  %u513 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %245, i32 0, i32 1, !dbg !5706
  %fld514 = bitcast %union.u* %u513 to [1 x %union.rtunion_def]*, !dbg !5706
  %arrayidx515 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld514, i64 0, i64 0, !dbg !5706
  %rt_rtx516 = bitcast %union.rtunion_def* %arrayidx515 to %struct.rtx_def**, !dbg !5706
  %246 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx516, align 8, !dbg !5706
  %u517 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %246, i32 0, i32 1, !dbg !5706
  %fld518 = bitcast %union.u* %u517 to [1 x %union.rtunion_def]*, !dbg !5706
  %arrayidx519 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld518, i64 0, i64 0, !dbg !5706
  %rt_rtx520 = bitcast %union.rtunion_def* %arrayidx519 to %struct.rtx_def**, !dbg !5706
  %247 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx520, align 8, !dbg !5706
  %248 = bitcast %struct.rtx_def* %247 to i32*, !dbg !5706
  %bf.load521 = load i32, i32* %248, align 8, !dbg !5706
  %bf.lshr522 = lshr i32 %bf.load521, 16, !dbg !5706
  %bf.clear523 = and i32 %bf.lshr522, 255, !dbg !5706
  store i32 %bf.clear523, i32* %eqvmode, align 4, !dbg !5707
  br label %if.end524, !dbg !5708

if.end524:                                        ; preds = %if.then512, %if.then507
  store i32 0, i32* @do_not_record, align 4, !dbg !5709
  store i32 0, i32* @hash_arg_in_memory, align 4, !dbg !5710
  %249 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8, !dbg !5711
  %250 = bitcast %struct.rtx_def* %249 to i32*, !dbg !5711
  %bf.load525 = load i32, i32* %250, align 8, !dbg !5711
  %bf.clear526 = and i32 %bf.load525, 65535, !dbg !5711
  %cmp527 = icmp eq i32 %bf.clear526, 37, !dbg !5711
  br i1 %cmp527, label %land.lhs.true529, label %cond.false536, !dbg !5711

land.lhs.true529:                                 ; preds = %if.end524
  %251 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8, !dbg !5711
  %call530 = call i32 @rhs_regno(%struct.rtx_def* %251), !dbg !5711
  %cmp531 = icmp uge i32 %call530, 53, !dbg !5711
  br i1 %cmp531, label %cond.true533, label %cond.false536, !dbg !5711

cond.true533:                                     ; preds = %land.lhs.true529
  %252 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8, !dbg !5711
  %call534 = call i32 @rhs_regno(%struct.rtx_def* %252), !dbg !5711
  %call535 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call534), !dbg !5711
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call535, i32 0, i32 1, !dbg !5711
  %253 = load i32, i32* %reg_qty, align 4, !dbg !5711
  %add = add i32 4736, %253, !dbg !5711
  br label %cond.end538, !dbg !5711

cond.false536:                                    ; preds = %land.lhs.true529, %if.end524
  %254 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8, !dbg !5711
  %255 = load i32, i32* %eqvmode, align 4, !dbg !5711
  %call537 = call i32 @canon_hash(%struct.rtx_def* %254, i32 %255), !dbg !5711
  br label %cond.end538, !dbg !5711

cond.end538:                                      ; preds = %cond.false536, %cond.true533
  %cond539 = phi i32 [ %add, %cond.true533 ], [ %call537, %cond.false536 ], !dbg !5711
  %and = and i32 %cond539, 31, !dbg !5711
  store i32 %and, i32* %src_eqv_hash, align 4, !dbg !5712
  %256 = load i32, i32* @do_not_record, align 4, !dbg !5713
  %tobool540 = icmp ne i32 %256, 0, !dbg !5713
  br i1 %tobool540, label %if.end543, label %if.then541, !dbg !5715

if.then541:                                       ; preds = %cond.end538
  %257 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8, !dbg !5716
  %258 = load i32, i32* %src_eqv_hash, align 4, !dbg !5717
  %259 = load i32, i32* %eqvmode, align 4, !dbg !5718
  %call542 = call %struct.table_elt* @lookup(%struct.rtx_def* %257, i32 %258, i32 %259), !dbg !5719
  store %struct.table_elt* %call542, %struct.table_elt** %src_eqv_elt, align 8, !dbg !5720
  br label %if.end543, !dbg !5721

if.end543:                                        ; preds = %if.then541, %cond.end538
  %260 = load i32, i32* @do_not_record, align 4, !dbg !5722
  store i32 %260, i32* %src_eqv_volatile, align 4, !dbg !5723
  %261 = load i32, i32* @hash_arg_in_memory, align 4, !dbg !5724
  store i32 %261, i32* %src_eqv_in_memory, align 4, !dbg !5725
  br label %if.end544, !dbg !5726

if.end544:                                        ; preds = %if.end543, %cond.end
  %262 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !5727
  %263 = bitcast %struct.rtx_def* %262 to i32*, !dbg !5727
  %bf.load545 = load i32, i32* %263, align 8, !dbg !5727
  %bf.clear546 = and i32 %bf.load545, 65535, !dbg !5727
  %cmp547 = icmp eq i32 %bf.clear546, 40, !dbg !5729
  br i1 %cmp547, label %if.then549, label %if.else550, !dbg !5730

if.then549:                                       ; preds = %if.end544
  store %struct.rtx_def* null, %struct.rtx_def** %src_eqv_here, align 8, !dbg !5731
  br label %if.end551, !dbg !5732

if.else550:                                       ; preds = %if.end544
  %264 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8, !dbg !5733
  store %struct.rtx_def* %264, %struct.rtx_def** %src_eqv_here, align 8, !dbg !5734
  br label %if.end551

if.end551:                                        ; preds = %if.else550, %if.then549
  %265 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !5735
  %266 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5736
  %call552 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %265, %struct.rtx_def* %266), !dbg !5737
  store %struct.rtx_def* %call552, %struct.rtx_def** %src_folded, align 8, !dbg !5738
  store i32 0, i32* @do_not_record, align 4, !dbg !5739
  store i32 0, i32* @hash_arg_in_memory, align 4, !dbg !5740
  %267 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !5741
  %268 = load %struct.set*, %struct.set** %sets, align 8, !dbg !5742
  %269 = load i32, i32* %i, align 4, !dbg !5743
  %idxprom553 = sext i32 %269 to i64, !dbg !5742
  %arrayidx554 = getelementptr inbounds %struct.set, %struct.set* %268, i64 %idxprom553, !dbg !5742
  %src555 = getelementptr inbounds %struct.set, %struct.set* %arrayidx554, i32 0, i32 1, !dbg !5744
  store %struct.rtx_def* %267, %struct.rtx_def** %src555, align 8, !dbg !5745
  %270 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !5746
  %271 = bitcast %struct.rtx_def* %270 to i32*, !dbg !5746
  %bf.load556 = load i32, i32* %271, align 8, !dbg !5746
  %bf.clear557 = and i32 %bf.load556, 65535, !dbg !5746
  %cmp558 = icmp eq i32 %bf.clear557, 37, !dbg !5746
  br i1 %cmp558, label %land.lhs.true560, label %cond.false569, !dbg !5746

land.lhs.true560:                                 ; preds = %if.end551
  %272 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !5746
  %call561 = call i32 @rhs_regno(%struct.rtx_def* %272), !dbg !5746
  %cmp562 = icmp uge i32 %call561, 53, !dbg !5746
  br i1 %cmp562, label %cond.true564, label %cond.false569, !dbg !5746

cond.true564:                                     ; preds = %land.lhs.true560
  %273 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !5746
  %call565 = call i32 @rhs_regno(%struct.rtx_def* %273), !dbg !5746
  %call566 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call565), !dbg !5746
  %reg_qty567 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call566, i32 0, i32 1, !dbg !5746
  %274 = load i32, i32* %reg_qty567, align 4, !dbg !5746
  %add568 = add i32 4736, %274, !dbg !5746
  br label %cond.end571, !dbg !5746

cond.false569:                                    ; preds = %land.lhs.true560, %if.end551
  %275 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !5746
  %276 = load i32, i32* %mode, align 4, !dbg !5746
  %call570 = call i32 @canon_hash(%struct.rtx_def* %275, i32 %276), !dbg !5746
  br label %cond.end571, !dbg !5746

cond.end571:                                      ; preds = %cond.false569, %cond.true564
  %cond572 = phi i32 [ %add568, %cond.true564 ], [ %call570, %cond.false569 ], !dbg !5746
  %and573 = and i32 %cond572, 31, !dbg !5746
  %277 = load %struct.set*, %struct.set** %sets, align 8, !dbg !5747
  %278 = load i32, i32* %i, align 4, !dbg !5748
  %idxprom574 = sext i32 %278 to i64, !dbg !5747
  %arrayidx575 = getelementptr inbounds %struct.set, %struct.set* %277, i64 %idxprom574, !dbg !5747
  %src_hash = getelementptr inbounds %struct.set, %struct.set* %arrayidx575, i32 0, i32 3, !dbg !5749
  store i32 %and573, i32* %src_hash, align 8, !dbg !5750
  %279 = load i32, i32* @do_not_record, align 4, !dbg !5751
  %conv576 = trunc i32 %279 to i8, !dbg !5751
  %280 = load %struct.set*, %struct.set** %sets, align 8, !dbg !5752
  %281 = load i32, i32* %i, align 4, !dbg !5753
  %idxprom577 = sext i32 %281 to i64, !dbg !5752
  %arrayidx578 = getelementptr inbounds %struct.set, %struct.set* %280, i64 %idxprom577, !dbg !5752
  %src_volatile = getelementptr inbounds %struct.set, %struct.set* %arrayidx578, i32 0, i32 7, !dbg !5754
  store i8 %conv576, i8* %src_volatile, align 1, !dbg !5755
  %282 = load i32, i32* @hash_arg_in_memory, align 4, !dbg !5756
  %conv579 = trunc i32 %282 to i8, !dbg !5756
  %283 = load %struct.set*, %struct.set** %sets, align 8, !dbg !5757
  %284 = load i32, i32* %i, align 4, !dbg !5758
  %idxprom580 = sext i32 %284 to i64, !dbg !5757
  %arrayidx581 = getelementptr inbounds %struct.set, %struct.set* %283, i64 %idxprom580, !dbg !5757
  %src_in_memory = getelementptr inbounds %struct.set, %struct.set* %arrayidx581, i32 0, i32 6, !dbg !5759
  store i8 %conv579, i8* %src_in_memory, align 8, !dbg !5760
  %285 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !5761
  %286 = bitcast %struct.rtx_def* %285 to i32*, !dbg !5761
  %bf.load582 = load i32, i32* %286, align 8, !dbg !5761
  %bf.clear583 = and i32 %bf.load582, 65535, !dbg !5761
  %cmp584 = icmp eq i32 %bf.clear583, 43, !dbg !5761
  br i1 %cmp584, label %land.lhs.true586, label %if.end603, !dbg !5763

land.lhs.true586:                                 ; preds = %cond.end571
  %287 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5764
  %call587 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %287, i32 3, %struct.rtx_def* null), !dbg !5765
  %cmp588 = icmp ne %struct.rtx_def* %call587, null, !dbg !5766
  br i1 %cmp588, label %land.lhs.true590, label %if.end603, !dbg !5767

land.lhs.true590:                                 ; preds = %land.lhs.true586
  %288 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !5768
  %289 = bitcast %struct.rtx_def* %288 to i32*, !dbg !5768
  %bf.load591 = load i32, i32* %289, align 8, !dbg !5768
  %bf.clear592 = and i32 %bf.load591, 65535, !dbg !5768
  %cmp593 = icmp eq i32 %bf.clear592, 37, !dbg !5768
  br i1 %cmp593, label %land.lhs.true595, label %if.end603, !dbg !5769

land.lhs.true595:                                 ; preds = %land.lhs.true590
  %290 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !5770
  %call596 = call i32 @rhs_regno(%struct.rtx_def* %290), !dbg !5770
  %cmp597 = icmp uge i32 %call596, 53, !dbg !5771
  br i1 %cmp597, label %if.then599, label %if.end603, !dbg !5772

if.then599:                                       ; preds = %land.lhs.true595
  %291 = load %struct.set*, %struct.set** %sets, align 8, !dbg !5773
  %292 = load i32, i32* %i, align 4, !dbg !5774
  %idxprom600 = sext i32 %292 to i64, !dbg !5773
  %arrayidx601 = getelementptr inbounds %struct.set, %struct.set* %291, i64 %idxprom600, !dbg !5773
  %src_volatile602 = getelementptr inbounds %struct.set, %struct.set* %arrayidx601, i32 0, i32 7, !dbg !5775
  store i8 1, i8* %src_volatile602, align 1, !dbg !5776
  br label %if.end603, !dbg !5773

if.end603:                                        ; preds = %if.then599, %land.lhs.true595, %land.lhs.true590, %land.lhs.true586, %cond.end571
  %293 = load %struct.set*, %struct.set** %sets, align 8, !dbg !5777
  %294 = load i32, i32* %i, align 4, !dbg !5779
  %idxprom604 = sext i32 %294 to i64, !dbg !5777
  %arrayidx605 = getelementptr inbounds %struct.set, %struct.set* %293, i64 %idxprom604, !dbg !5777
  %src_volatile606 = getelementptr inbounds %struct.set, %struct.set* %arrayidx605, i32 0, i32 7, !dbg !5780
  %295 = load i8, i8* %src_volatile606, align 1, !dbg !5780
  %tobool607 = icmp ne i8 %295, 0, !dbg !5777
  br i1 %tobool607, label %if.end613, label %if.then608, !dbg !5781

if.then608:                                       ; preds = %if.end603
  %296 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !5782
  %297 = load %struct.set*, %struct.set** %sets, align 8, !dbg !5783
  %298 = load i32, i32* %i, align 4, !dbg !5784
  %idxprom609 = sext i32 %298 to i64, !dbg !5783
  %arrayidx610 = getelementptr inbounds %struct.set, %struct.set* %297, i64 %idxprom609, !dbg !5783
  %src_hash611 = getelementptr inbounds %struct.set, %struct.set* %arrayidx610, i32 0, i32 3, !dbg !5785
  %299 = load i32, i32* %src_hash611, align 8, !dbg !5785
  %300 = load i32, i32* %mode, align 4, !dbg !5786
  %call612 = call %struct.table_elt* @lookup(%struct.rtx_def* %296, i32 %299, i32 %300), !dbg !5787
  store %struct.table_elt* %call612, %struct.table_elt** %elt, align 8, !dbg !5788
  br label %if.end613, !dbg !5789

if.end613:                                        ; preds = %if.then608, %if.end603
  %301 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !5790
  %302 = load %struct.set*, %struct.set** %sets, align 8, !dbg !5791
  %303 = load i32, i32* %i, align 4, !dbg !5792
  %idxprom614 = sext i32 %303 to i64, !dbg !5791
  %arrayidx615 = getelementptr inbounds %struct.set, %struct.set* %302, i64 %idxprom614, !dbg !5791
  %src_elt = getelementptr inbounds %struct.set, %struct.set* %arrayidx615, i32 0, i32 2, !dbg !5793
  store %struct.table_elt* %301, %struct.table_elt** %src_elt, align 8, !dbg !5794
  %304 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !5795
  %tobool616 = icmp ne %struct.table_elt* %304, null, !dbg !5795
  br i1 %tobool616, label %land.lhs.true617, label %if.else651, !dbg !5797

land.lhs.true617:                                 ; preds = %if.end613
  %305 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8, !dbg !5798
  %tobool618 = icmp ne %struct.rtx_def* %305, null, !dbg !5798
  br i1 %tobool618, label %land.lhs.true619, label %if.else651, !dbg !5799

land.lhs.true619:                                 ; preds = %land.lhs.true617
  %306 = load %struct.table_elt*, %struct.table_elt** %src_eqv_elt, align 8, !dbg !5800
  %tobool620 = icmp ne %struct.table_elt* %306, null, !dbg !5800
  br i1 %tobool620, label %if.then621, label %if.else651, !dbg !5801

if.then621:                                       ; preds = %land.lhs.true619
  %307 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !5802
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %307, i32 0, i32 6, !dbg !5805
  %308 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8, !dbg !5805
  %309 = load %struct.table_elt*, %struct.table_elt** %src_eqv_elt, align 8, !dbg !5806
  %first_same_value622 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %309, i32 0, i32 6, !dbg !5807
  %310 = load %struct.table_elt*, %struct.table_elt** %first_same_value622, align 8, !dbg !5807
  %cmp623 = icmp ne %struct.table_elt* %308, %310, !dbg !5808
  br i1 %cmp623, label %if.then625, label %if.end650, !dbg !5809

if.then625:                                       ; preds = %if.then621
  %311 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !5810
  %312 = load %struct.table_elt*, %struct.table_elt** %src_eqv_elt, align 8, !dbg !5812
  call void @merge_equiv_classes(%struct.table_elt* %311, %struct.table_elt* %312), !dbg !5813
  %313 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8, !dbg !5814
  %314 = bitcast %struct.rtx_def* %313 to i32*, !dbg !5814
  %bf.load626 = load i32, i32* %314, align 8, !dbg !5814
  %bf.clear627 = and i32 %bf.load626, 65535, !dbg !5814
  %cmp628 = icmp eq i32 %bf.clear627, 37, !dbg !5814
  br i1 %cmp628, label %land.lhs.true630, label %cond.false639, !dbg !5814

land.lhs.true630:                                 ; preds = %if.then625
  %315 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8, !dbg !5814
  %call631 = call i32 @rhs_regno(%struct.rtx_def* %315), !dbg !5814
  %cmp632 = icmp uge i32 %call631, 53, !dbg !5814
  br i1 %cmp632, label %cond.true634, label %cond.false639, !dbg !5814

cond.true634:                                     ; preds = %land.lhs.true630
  %316 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8, !dbg !5814
  %call635 = call i32 @rhs_regno(%struct.rtx_def* %316), !dbg !5814
  %call636 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call635), !dbg !5814
  %reg_qty637 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call636, i32 0, i32 1, !dbg !5814
  %317 = load i32, i32* %reg_qty637, align 4, !dbg !5814
  %add638 = add i32 4736, %317, !dbg !5814
  br label %cond.end643, !dbg !5814

cond.false639:                                    ; preds = %land.lhs.true630, %if.then625
  %318 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8, !dbg !5814
  %319 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !5814
  %mode640 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %319, i32 0, i32 10, !dbg !5814
  %bf.load641 = load i8, i8* %mode640, align 8, !dbg !5814
  %bf.cast = zext i8 %bf.load641 to i32, !dbg !5814
  %call642 = call i32 @canon_hash(%struct.rtx_def* %318, i32 %bf.cast), !dbg !5814
  br label %cond.end643, !dbg !5814

cond.end643:                                      ; preds = %cond.false639, %cond.true634
  %cond644 = phi i32 [ %add638, %cond.true634 ], [ %call642, %cond.false639 ], !dbg !5814
  %and645 = and i32 %cond644, 31, !dbg !5814
  store i32 %and645, i32* %src_eqv_hash, align 4, !dbg !5815
  %320 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8, !dbg !5816
  %321 = load i32, i32* %src_eqv_hash, align 4, !dbg !5817
  %322 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !5818
  %mode646 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %322, i32 0, i32 10, !dbg !5819
  %bf.load647 = load i8, i8* %mode646, align 8, !dbg !5819
  %bf.cast648 = zext i8 %bf.load647 to i32, !dbg !5819
  %call649 = call %struct.table_elt* @lookup(%struct.rtx_def* %320, i32 %321, i32 %bf.cast648), !dbg !5820
  store %struct.table_elt* %call649, %struct.table_elt** %src_eqv_elt, align 8, !dbg !5821
  br label %if.end650, !dbg !5822

if.end650:                                        ; preds = %cond.end643, %if.then621
  store %struct.rtx_def* null, %struct.rtx_def** %src_eqv_here, align 8, !dbg !5823
  br label %if.end655, !dbg !5824

if.else651:                                       ; preds = %land.lhs.true619, %land.lhs.true617, %if.end613
  %323 = load %struct.table_elt*, %struct.table_elt** %src_eqv_elt, align 8, !dbg !5825
  %tobool652 = icmp ne %struct.table_elt* %323, null, !dbg !5825
  br i1 %tobool652, label %if.then653, label %if.end654, !dbg !5827

if.then653:                                       ; preds = %if.else651
  %324 = load %struct.table_elt*, %struct.table_elt** %src_eqv_elt, align 8, !dbg !5828
  store %struct.table_elt* %324, %struct.table_elt** %elt, align 8, !dbg !5829
  br label %if.end654, !dbg !5830

if.end654:                                        ; preds = %if.then653, %if.else651
  br label %if.end655

if.end655:                                        ; preds = %if.end654, %if.end650
  %325 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !5831
  %tobool656 = icmp ne %struct.table_elt* %325, null, !dbg !5831
  br i1 %tobool656, label %if.then657, label %if.end667, !dbg !5833

if.then657:                                       ; preds = %if.end655
  %326 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !5834
  %first_same_value658 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %326, i32 0, i32 6, !dbg !5836
  %327 = load %struct.table_elt*, %struct.table_elt** %first_same_value658, align 8, !dbg !5836
  store %struct.table_elt* %327, %struct.table_elt** %p, align 8, !dbg !5837
  br label %for.cond659, !dbg !5838

for.cond659:                                      ; preds = %for.inc665, %if.then657
  %328 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !5839
  %tobool660 = icmp ne %struct.table_elt* %328, null, !dbg !5841
  br i1 %tobool660, label %for.body661, label %for.end666, !dbg !5841

for.body661:                                      ; preds = %for.cond659
  %329 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !5842
  %is_const = getelementptr inbounds %struct.table_elt, %struct.table_elt* %329, i32 0, i32 12, !dbg !5844
  %330 = load i8, i8* %is_const, align 2, !dbg !5844
  %tobool662 = icmp ne i8 %330, 0, !dbg !5842
  br i1 %tobool662, label %if.then663, label %if.end664, !dbg !5845

if.then663:                                       ; preds = %for.body661
  %331 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !5846
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %331, i32 0, i32 0, !dbg !5848
  %332 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !5848
  store %struct.rtx_def* %332, %struct.rtx_def** %src_const, align 8, !dbg !5849
  %333 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !5850
  store %struct.table_elt* %333, %struct.table_elt** %src_const_elt, align 8, !dbg !5851
  br label %for.end666, !dbg !5852

if.end664:                                        ; preds = %for.body661
  br label %for.inc665, !dbg !5844

for.inc665:                                       ; preds = %if.end664
  %334 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !5853
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %334, i32 0, i32 4, !dbg !5854
  %335 = load %struct.table_elt*, %struct.table_elt** %next_same_value, align 8, !dbg !5854
  store %struct.table_elt* %335, %struct.table_elt** %p, align 8, !dbg !5855
  br label %for.cond659, !dbg !5856, !llvm.loop !5857

for.end666:                                       ; preds = %if.then663, %for.cond659
  br label %if.end667, !dbg !5858

if.end667:                                        ; preds = %for.end666, %if.end655
  %336 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !5859
  %cmp668 = icmp eq %struct.rtx_def* %336, null, !dbg !5861
  br i1 %cmp668, label %land.lhs.true670, label %if.else701, !dbg !5862

land.lhs.true670:                                 ; preds = %if.end667
  %337 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8, !dbg !5863
  %338 = bitcast %struct.rtx_def* %337 to i32*, !dbg !5863
  %bf.load671 = load i32, i32* %338, align 8, !dbg !5863
  %bf.clear672 = and i32 %bf.load671, 65535, !dbg !5863
  %idxprom673 = sext i32 %bf.clear672 to i64, !dbg !5863
  %arrayidx674 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom673, !dbg !5863
  %339 = load i32, i32* %arrayidx674, align 4, !dbg !5863
  %cmp675 = icmp eq i32 %339, 9, !dbg !5863
  br i1 %cmp675, label %if.then700, label %lor.lhs.false677, !dbg !5864

lor.lhs.false677:                                 ; preds = %land.lhs.true670
  %340 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8, !dbg !5865
  %341 = bitcast %struct.rtx_def* %340 to i32*, !dbg !5865
  %bf.load678 = load i32, i32* %341, align 8, !dbg !5865
  %bf.clear679 = and i32 %bf.load678, 65535, !dbg !5865
  %cmp680 = icmp eq i32 %bf.clear679, 50, !dbg !5866
  br i1 %cmp680, label %land.lhs.true682, label %if.else701, !dbg !5867

land.lhs.true682:                                 ; preds = %lor.lhs.false677
  %342 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8, !dbg !5868
  %u683 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %342, i32 0, i32 1, !dbg !5868
  %fld684 = bitcast %union.u* %u683 to [1 x %union.rtunion_def]*, !dbg !5868
  %arrayidx685 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld684, i64 0, i64 0, !dbg !5868
  %rt_rtx686 = bitcast %union.rtunion_def* %arrayidx685 to %struct.rtx_def**, !dbg !5868
  %343 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx686, align 8, !dbg !5868
  %344 = bitcast %struct.rtx_def* %343 to i32*, !dbg !5868
  %bf.load687 = load i32, i32* %344, align 8, !dbg !5868
  %bf.clear688 = and i32 %bf.load687, 65535, !dbg !5868
  %cmp689 = icmp eq i32 %bf.clear688, 44, !dbg !5869
  br i1 %cmp689, label %land.lhs.true691, label %if.else701, !dbg !5870

land.lhs.true691:                                 ; preds = %land.lhs.true682
  %345 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8, !dbg !5871
  %u692 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %345, i32 0, i32 1, !dbg !5871
  %fld693 = bitcast %union.u* %u692 to [1 x %union.rtunion_def]*, !dbg !5871
  %arrayidx694 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld693, i64 0, i64 1, !dbg !5871
  %rt_rtx695 = bitcast %union.rtunion_def* %arrayidx694 to %struct.rtx_def**, !dbg !5871
  %346 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx695, align 8, !dbg !5871
  %347 = bitcast %struct.rtx_def* %346 to i32*, !dbg !5871
  %bf.load696 = load i32, i32* %347, align 8, !dbg !5871
  %bf.clear697 = and i32 %bf.load696, 65535, !dbg !5871
  %cmp698 = icmp eq i32 %bf.clear697, 44, !dbg !5872
  br i1 %cmp698, label %if.then700, label %if.else701, !dbg !5873

if.then700:                                       ; preds = %land.lhs.true691, %land.lhs.true670
  %348 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8, !dbg !5874
  store %struct.rtx_def* %348, %struct.rtx_def** %src_const, align 8, !dbg !5875
  %349 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !5876
  store %struct.table_elt* %349, %struct.table_elt** %src_const_elt, align 8, !dbg !5877
  br label %if.end715, !dbg !5878

if.else701:                                       ; preds = %land.lhs.true691, %land.lhs.true682, %lor.lhs.false677, %if.end667
  %350 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !5879
  %cmp702 = icmp eq %struct.rtx_def* %350, null, !dbg !5881
  br i1 %cmp702, label %land.lhs.true704, label %if.end714, !dbg !5882

land.lhs.true704:                                 ; preds = %if.else701
  %351 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8, !dbg !5883
  %tobool705 = icmp ne %struct.rtx_def* %351, null, !dbg !5883
  br i1 %tobool705, label %land.lhs.true706, label %if.end714, !dbg !5884

land.lhs.true706:                                 ; preds = %land.lhs.true704
  %352 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8, !dbg !5885
  %353 = bitcast %struct.rtx_def* %352 to i32*, !dbg !5885
  %bf.load707 = load i32, i32* %353, align 8, !dbg !5885
  %bf.clear708 = and i32 %bf.load707, 65535, !dbg !5885
  %idxprom709 = sext i32 %bf.clear708 to i64, !dbg !5885
  %arrayidx710 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom709, !dbg !5885
  %354 = load i32, i32* %arrayidx710, align 4, !dbg !5885
  %cmp711 = icmp eq i32 %354, 9, !dbg !5885
  br i1 %cmp711, label %if.then713, label %if.end714, !dbg !5886

if.then713:                                       ; preds = %land.lhs.true706
  %355 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8, !dbg !5887
  store %struct.rtx_def* %355, %struct.rtx_def** %src_const, align 8, !dbg !5888
  %356 = load %struct.table_elt*, %struct.table_elt** %src_eqv_elt, align 8, !dbg !5889
  store %struct.table_elt* %356, %struct.table_elt** %src_const_elt, align 8, !dbg !5890
  br label %if.end714, !dbg !5891

if.end714:                                        ; preds = %if.then713, %land.lhs.true706, %land.lhs.true704, %if.else701
  br label %if.end715

if.end715:                                        ; preds = %if.end714, %if.then700
  %357 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !5892
  %tobool716 = icmp ne %struct.rtx_def* %357, null, !dbg !5892
  br i1 %tobool716, label %land.lhs.true717, label %if.end745, !dbg !5894

land.lhs.true717:                                 ; preds = %if.end715
  %358 = load %struct.table_elt*, %struct.table_elt** %src_const_elt, align 8, !dbg !5895
  %cmp718 = icmp eq %struct.table_elt* %358, null, !dbg !5896
  br i1 %cmp718, label %if.then720, label %if.end745, !dbg !5897

if.then720:                                       ; preds = %land.lhs.true717
  %359 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !5898
  %360 = bitcast %struct.rtx_def* %359 to i32*, !dbg !5898
  %bf.load721 = load i32, i32* %360, align 8, !dbg !5898
  %bf.clear722 = and i32 %bf.load721, 65535, !dbg !5898
  %cmp723 = icmp eq i32 %bf.clear722, 37, !dbg !5898
  br i1 %cmp723, label %land.lhs.true725, label %cond.false734, !dbg !5898

land.lhs.true725:                                 ; preds = %if.then720
  %361 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !5898
  %call726 = call i32 @rhs_regno(%struct.rtx_def* %361), !dbg !5898
  %cmp727 = icmp uge i32 %call726, 53, !dbg !5898
  br i1 %cmp727, label %cond.true729, label %cond.false734, !dbg !5898

cond.true729:                                     ; preds = %land.lhs.true725
  %362 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !5898
  %call730 = call i32 @rhs_regno(%struct.rtx_def* %362), !dbg !5898
  %call731 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call730), !dbg !5898
  %reg_qty732 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call731, i32 0, i32 1, !dbg !5898
  %363 = load i32, i32* %reg_qty732, align 4, !dbg !5898
  %add733 = add i32 4736, %363, !dbg !5898
  br label %cond.end736, !dbg !5898

cond.false734:                                    ; preds = %land.lhs.true725, %if.then720
  %364 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !5898
  %365 = load i32, i32* %mode, align 4, !dbg !5898
  %call735 = call i32 @canon_hash(%struct.rtx_def* %364, i32 %365), !dbg !5898
  br label %cond.end736, !dbg !5898

cond.end736:                                      ; preds = %cond.false734, %cond.true729
  %cond737 = phi i32 [ %add733, %cond.true729 ], [ %call735, %cond.false734 ], !dbg !5898
  %and738 = and i32 %cond737, 31, !dbg !5898
  %366 = load %struct.set*, %struct.set** %sets, align 8, !dbg !5900
  %367 = load i32, i32* %i, align 4, !dbg !5901
  %idxprom739 = sext i32 %367 to i64, !dbg !5900
  %arrayidx740 = getelementptr inbounds %struct.set, %struct.set* %366, i64 %idxprom739, !dbg !5900
  %src_const_hash = getelementptr inbounds %struct.set, %struct.set* %arrayidx740, i32 0, i32 10, !dbg !5902
  store i32 %and738, i32* %src_const_hash, align 8, !dbg !5903
  %368 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !5904
  %369 = load %struct.set*, %struct.set** %sets, align 8, !dbg !5905
  %370 = load i32, i32* %i, align 4, !dbg !5906
  %idxprom741 = sext i32 %370 to i64, !dbg !5905
  %arrayidx742 = getelementptr inbounds %struct.set, %struct.set* %369, i64 %idxprom741, !dbg !5905
  %src_const_hash743 = getelementptr inbounds %struct.set, %struct.set* %arrayidx742, i32 0, i32 10, !dbg !5907
  %371 = load i32, i32* %src_const_hash743, align 8, !dbg !5907
  %372 = load i32, i32* %mode, align 4, !dbg !5908
  %call744 = call %struct.table_elt* @lookup(%struct.rtx_def* %368, i32 %371, i32 %372), !dbg !5909
  store %struct.table_elt* %call744, %struct.table_elt** %src_const_elt, align 8, !dbg !5910
  br label %if.end745, !dbg !5911

if.end745:                                        ; preds = %cond.end736, %land.lhs.true717, %if.end715
  %373 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !5912
  %374 = load %struct.set*, %struct.set** %sets, align 8, !dbg !5913
  %375 = load i32, i32* %i, align 4, !dbg !5914
  %idxprom746 = sext i32 %375 to i64, !dbg !5913
  %arrayidx747 = getelementptr inbounds %struct.set, %struct.set* %374, i64 %idxprom746, !dbg !5913
  %src_const748 = getelementptr inbounds %struct.set, %struct.set* %arrayidx747, i32 0, i32 9, !dbg !5915
  store %struct.rtx_def* %373, %struct.rtx_def** %src_const748, align 8, !dbg !5916
  %376 = load %struct.table_elt*, %struct.table_elt** %src_const_elt, align 8, !dbg !5917
  %377 = load %struct.set*, %struct.set** %sets, align 8, !dbg !5918
  %378 = load i32, i32* %i, align 4, !dbg !5919
  %idxprom749 = sext i32 %378 to i64, !dbg !5918
  %arrayidx750 = getelementptr inbounds %struct.set, %struct.set* %377, i64 %idxprom749, !dbg !5918
  %src_const_elt751 = getelementptr inbounds %struct.set, %struct.set* %arrayidx750, i32 0, i32 11, !dbg !5920
  store %struct.table_elt* %376, %struct.table_elt** %src_const_elt751, align 8, !dbg !5921
  %379 = load %struct.table_elt*, %struct.table_elt** %src_const_elt, align 8, !dbg !5922
  %tobool752 = icmp ne %struct.table_elt* %379, null, !dbg !5922
  br i1 %tobool752, label %land.lhs.true753, label %if.else761, !dbg !5924

land.lhs.true753:                                 ; preds = %if.end745
  %380 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !5925
  %tobool754 = icmp ne %struct.table_elt* %380, null, !dbg !5925
  br i1 %tobool754, label %land.lhs.true755, label %if.else761, !dbg !5926

land.lhs.true755:                                 ; preds = %land.lhs.true753
  %381 = load %struct.table_elt*, %struct.table_elt** %src_const_elt, align 8, !dbg !5927
  %first_same_value756 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %381, i32 0, i32 6, !dbg !5928
  %382 = load %struct.table_elt*, %struct.table_elt** %first_same_value756, align 8, !dbg !5928
  %383 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !5929
  %first_same_value757 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %383, i32 0, i32 6, !dbg !5930
  %384 = load %struct.table_elt*, %struct.table_elt** %first_same_value757, align 8, !dbg !5930
  %cmp758 = icmp ne %struct.table_elt* %382, %384, !dbg !5931
  br i1 %cmp758, label %if.then760, label %if.else761, !dbg !5932

if.then760:                                       ; preds = %land.lhs.true755
  %385 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !5933
  %386 = load %struct.table_elt*, %struct.table_elt** %src_const_elt, align 8, !dbg !5934
  call void @merge_equiv_classes(%struct.table_elt* %385, %struct.table_elt* %386), !dbg !5935
  br label %if.end768, !dbg !5935

if.else761:                                       ; preds = %land.lhs.true755, %land.lhs.true753, %if.end745
  %387 = load %struct.table_elt*, %struct.table_elt** %src_const_elt, align 8, !dbg !5936
  %tobool762 = icmp ne %struct.table_elt* %387, null, !dbg !5936
  br i1 %tobool762, label %land.lhs.true763, label %if.end767, !dbg !5938

land.lhs.true763:                                 ; preds = %if.else761
  %388 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !5939
  %cmp764 = icmp eq %struct.table_elt* %388, null, !dbg !5940
  br i1 %cmp764, label %if.then766, label %if.end767, !dbg !5941

if.then766:                                       ; preds = %land.lhs.true763
  %389 = load %struct.table_elt*, %struct.table_elt** %src_const_elt, align 8, !dbg !5942
  store %struct.table_elt* %389, %struct.table_elt** %elt, align 8, !dbg !5943
  br label %if.end767, !dbg !5944

if.end767:                                        ; preds = %if.then766, %land.lhs.true763, %if.else761
  br label %if.end768

if.end768:                                        ; preds = %if.end767, %if.then760
  %390 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !5945
  %tobool769 = icmp ne %struct.rtx_def* %390, null, !dbg !5945
  br i1 %tobool769, label %land.lhs.true770, label %if.end822, !dbg !5947

land.lhs.true770:                                 ; preds = %if.end768
  %391 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !5948
  %392 = bitcast %struct.rtx_def* %391 to i32*, !dbg !5948
  %bf.load771 = load i32, i32* %392, align 8, !dbg !5948
  %bf.clear772 = and i32 %bf.load771, 65535, !dbg !5948
  %cmp773 = icmp eq i32 %bf.clear772, 35, !dbg !5949
  br i1 %cmp773, label %if.then780, label %lor.lhs.false775, !dbg !5950

lor.lhs.false775:                                 ; preds = %land.lhs.true770
  %393 = load %struct.table_elt*, %struct.table_elt** %src_const_elt, align 8, !dbg !5951
  %tobool776 = icmp ne %struct.table_elt* %393, null, !dbg !5951
  br i1 %tobool776, label %land.lhs.true777, label %if.end822, !dbg !5952

land.lhs.true777:                                 ; preds = %lor.lhs.false775
  %394 = load %struct.table_elt*, %struct.table_elt** %src_const_elt, align 8, !dbg !5953
  %related_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %394, i32 0, i32 7, !dbg !5954
  %395 = load %struct.table_elt*, %struct.table_elt** %related_value, align 8, !dbg !5954
  %cmp778 = icmp ne %struct.table_elt* %395, null, !dbg !5955
  br i1 %cmp778, label %if.then780, label %if.end822, !dbg !5956

if.then780:                                       ; preds = %land.lhs.true777, %land.lhs.true770
  %396 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !5957
  %397 = load %struct.table_elt*, %struct.table_elt** %src_const_elt, align 8, !dbg !5959
  %call781 = call %struct.rtx_def* @use_related_value(%struct.rtx_def* %396, %struct.table_elt* %397), !dbg !5960
  store %struct.rtx_def* %call781, %struct.rtx_def** %src_related, align 8, !dbg !5961
  %398 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8, !dbg !5962
  %tobool782 = icmp ne %struct.rtx_def* %398, null, !dbg !5962
  br i1 %tobool782, label %if.then783, label %if.end821, !dbg !5964

if.then783:                                       ; preds = %if.then780
  call void @llvm.dbg.declare(metadata %struct.table_elt** %src_related_elt, metadata !5965, metadata !DIExpression()), !dbg !5967
  %399 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8, !dbg !5968
  %400 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8, !dbg !5969
  %401 = bitcast %struct.rtx_def* %400 to i32*, !dbg !5969
  %bf.load784 = load i32, i32* %401, align 8, !dbg !5969
  %bf.clear785 = and i32 %bf.load784, 65535, !dbg !5969
  %cmp786 = icmp eq i32 %bf.clear785, 37, !dbg !5969
  br i1 %cmp786, label %land.lhs.true788, label %cond.false797, !dbg !5969

land.lhs.true788:                                 ; preds = %if.then783
  %402 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8, !dbg !5969
  %call789 = call i32 @rhs_regno(%struct.rtx_def* %402), !dbg !5969
  %cmp790 = icmp uge i32 %call789, 53, !dbg !5969
  br i1 %cmp790, label %cond.true792, label %cond.false797, !dbg !5969

cond.true792:                                     ; preds = %land.lhs.true788
  %403 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8, !dbg !5969
  %call793 = call i32 @rhs_regno(%struct.rtx_def* %403), !dbg !5969
  %call794 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call793), !dbg !5969
  %reg_qty795 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call794, i32 0, i32 1, !dbg !5969
  %404 = load i32, i32* %reg_qty795, align 4, !dbg !5969
  %add796 = add i32 4736, %404, !dbg !5969
  br label %cond.end799, !dbg !5969

cond.false797:                                    ; preds = %land.lhs.true788, %if.then783
  %405 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8, !dbg !5969
  %406 = load i32, i32* %mode, align 4, !dbg !5969
  %call798 = call i32 @canon_hash(%struct.rtx_def* %405, i32 %406), !dbg !5969
  br label %cond.end799, !dbg !5969

cond.end799:                                      ; preds = %cond.false797, %cond.true792
  %cond800 = phi i32 [ %add796, %cond.true792 ], [ %call798, %cond.false797 ], !dbg !5969
  %and801 = and i32 %cond800, 31, !dbg !5969
  %407 = load i32, i32* %mode, align 4, !dbg !5970
  %call802 = call %struct.table_elt* @lookup(%struct.rtx_def* %399, i32 %and801, i32 %407), !dbg !5971
  store %struct.table_elt* %call802, %struct.table_elt** %src_related_elt, align 8, !dbg !5967
  %408 = load %struct.table_elt*, %struct.table_elt** %src_related_elt, align 8, !dbg !5972
  %tobool803 = icmp ne %struct.table_elt* %408, null, !dbg !5972
  br i1 %tobool803, label %land.lhs.true804, label %if.else813, !dbg !5974

land.lhs.true804:                                 ; preds = %cond.end799
  %409 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !5975
  %tobool805 = icmp ne %struct.table_elt* %409, null, !dbg !5975
  br i1 %tobool805, label %if.then806, label %if.else813, !dbg !5976

if.then806:                                       ; preds = %land.lhs.true804
  %410 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !5977
  %first_same_value807 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %410, i32 0, i32 6, !dbg !5980
  %411 = load %struct.table_elt*, %struct.table_elt** %first_same_value807, align 8, !dbg !5980
  %412 = load %struct.table_elt*, %struct.table_elt** %src_related_elt, align 8, !dbg !5981
  %first_same_value808 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %412, i32 0, i32 6, !dbg !5982
  %413 = load %struct.table_elt*, %struct.table_elt** %first_same_value808, align 8, !dbg !5982
  %cmp809 = icmp ne %struct.table_elt* %411, %413, !dbg !5983
  br i1 %cmp809, label %if.then811, label %if.end812, !dbg !5984

if.then811:                                       ; preds = %if.then806
  %414 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !5985
  %415 = load %struct.table_elt*, %struct.table_elt** %src_related_elt, align 8, !dbg !5986
  call void @merge_equiv_classes(%struct.table_elt* %414, %struct.table_elt* %415), !dbg !5987
  br label %if.end812, !dbg !5987

if.end812:                                        ; preds = %if.then811, %if.then806
  store %struct.rtx_def* null, %struct.rtx_def** %src_related, align 8, !dbg !5988
  store %struct.table_elt* null, %struct.table_elt** %src_related_elt, align 8, !dbg !5989
  br label %if.end820, !dbg !5990

if.else813:                                       ; preds = %land.lhs.true804, %cond.end799
  %416 = load %struct.table_elt*, %struct.table_elt** %src_related_elt, align 8, !dbg !5991
  %tobool814 = icmp ne %struct.table_elt* %416, null, !dbg !5991
  br i1 %tobool814, label %land.lhs.true815, label %if.end819, !dbg !5993

land.lhs.true815:                                 ; preds = %if.else813
  %417 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !5994
  %cmp816 = icmp eq %struct.table_elt* %417, null, !dbg !5995
  br i1 %cmp816, label %if.then818, label %if.end819, !dbg !5996

if.then818:                                       ; preds = %land.lhs.true815
  %418 = load %struct.table_elt*, %struct.table_elt** %src_related_elt, align 8, !dbg !5997
  store %struct.table_elt* %418, %struct.table_elt** %elt, align 8, !dbg !5998
  br label %if.end819, !dbg !5999

if.end819:                                        ; preds = %if.then818, %land.lhs.true815, %if.else813
  br label %if.end820

if.end820:                                        ; preds = %if.end819, %if.end812
  br label %if.end821, !dbg !6000

if.end821:                                        ; preds = %if.end820, %if.then780
  br label %if.end822, !dbg !6001

if.end822:                                        ; preds = %if.end821, %land.lhs.true777, %lor.lhs.false775, %if.end768
  %419 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !6002
  %tobool823 = icmp ne %struct.rtx_def* %419, null, !dbg !6002
  br i1 %tobool823, label %land.lhs.true824, label %if.end912, !dbg !6004

land.lhs.true824:                                 ; preds = %if.end822
  %420 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8, !dbg !6005
  %cmp825 = icmp eq %struct.rtx_def* %420, null, !dbg !6006
  br i1 %cmp825, label %land.lhs.true827, label %if.end912, !dbg !6007

land.lhs.true827:                                 ; preds = %land.lhs.true824
  %421 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !6008
  %422 = bitcast %struct.rtx_def* %421 to i32*, !dbg !6008
  %bf.load828 = load i32, i32* %422, align 8, !dbg !6008
  %bf.clear829 = and i32 %bf.load828, 65535, !dbg !6008
  %cmp830 = icmp eq i32 %bf.clear829, 30, !dbg !6008
  br i1 %cmp830, label %land.lhs.true832, label %if.end912, !dbg !6009

land.lhs.true832:                                 ; preds = %land.lhs.true827
  %423 = load i32, i32* %mode, align 4, !dbg !6010
  %idxprom833 = zext i32 %423 to i64, !dbg !6010
  %arrayidx834 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom833, !dbg !6010
  %424 = load i8, i8* %arrayidx834, align 1, !dbg !6010
  %conv835 = zext i8 %424 to i32, !dbg !6010
  %cmp836 = icmp eq i32 %conv835, 2, !dbg !6011
  br i1 %cmp836, label %land.lhs.true838, label %if.end912, !dbg !6012

land.lhs.true838:                                 ; preds = %land.lhs.true832
  %425 = load i32, i32* %mode, align 4, !dbg !6013
  %idxprom839 = zext i32 %425 to i64, !dbg !6013
  %arrayidx840 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom839, !dbg !6013
  %426 = load i8, i8* %arrayidx840, align 1, !dbg !6013
  %conv841 = zext i8 %426 to i16, !dbg !6013
  %conv842 = zext i16 %conv841 to i32, !dbg !6013
  %mul843 = mul nsw i32 %conv842, 8, !dbg !6013
  %conv844 = trunc i32 %mul843 to i16, !dbg !6013
  %conv845 = zext i16 %conv844 to i32, !dbg !6013
  %cmp846 = icmp slt i32 %conv845, 32, !dbg !6014
  br i1 %cmp846, label %if.then848, label %if.end912, !dbg !6015

if.then848:                                       ; preds = %land.lhs.true838
  call void @llvm.dbg.declare(metadata i32* %wider_mode, metadata !6016, metadata !DIExpression()), !dbg !6018
  %427 = load i32, i32* %mode, align 4, !dbg !6019
  %idxprom849 = zext i32 %427 to i64, !dbg !6019
  %arrayidx850 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom849, !dbg !6019
  %428 = load i8, i8* %arrayidx850, align 1, !dbg !6019
  %conv851 = zext i8 %428 to i32, !dbg !6019
  store i32 %conv851, i32* %wider_mode, align 4, !dbg !6021
  br label %for.cond852, !dbg !6022

for.cond852:                                      ; preds = %for.inc907, %if.then848
  %429 = load i32, i32* %wider_mode, align 4, !dbg !6023
  %cmp853 = icmp ne i32 %429, 0, !dbg !6025
  br i1 %cmp853, label %land.lhs.true855, label %land.end, !dbg !6026

land.lhs.true855:                                 ; preds = %for.cond852
  %430 = load i32, i32* %wider_mode, align 4, !dbg !6027
  %idxprom856 = zext i32 %430 to i64, !dbg !6027
  %arrayidx857 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom856, !dbg !6027
  %431 = load i8, i8* %arrayidx857, align 1, !dbg !6027
  %conv858 = zext i8 %431 to i16, !dbg !6027
  %conv859 = zext i16 %conv858 to i32, !dbg !6027
  %mul860 = mul nsw i32 %conv859, 8, !dbg !6027
  %conv861 = trunc i32 %mul860 to i16, !dbg !6027
  %conv862 = zext i16 %conv861 to i32, !dbg !6027
  %cmp863 = icmp sle i32 %conv862, 32, !dbg !6028
  br i1 %cmp863, label %land.rhs, label %land.end, !dbg !6029

land.rhs:                                         ; preds = %land.lhs.true855
  %432 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8, !dbg !6030
  %cmp865 = icmp eq %struct.rtx_def* %432, null, !dbg !6031
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true855, %for.cond852
  %433 = phi i1 [ false, %land.lhs.true855 ], [ false, %for.cond852 ], [ %cmp865, %land.rhs ], !dbg !6032
  br i1 %433, label %for.body867, label %for.end911, !dbg !6033

for.body867:                                      ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.table_elt** %const_elt, metadata !6034, metadata !DIExpression()), !dbg !6036
  %434 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !6037
  %435 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !6038
  %436 = bitcast %struct.rtx_def* %435 to i32*, !dbg !6038
  %bf.load868 = load i32, i32* %436, align 8, !dbg !6038
  %bf.clear869 = and i32 %bf.load868, 65535, !dbg !6038
  %cmp870 = icmp eq i32 %bf.clear869, 37, !dbg !6038
  br i1 %cmp870, label %land.lhs.true872, label %cond.false881, !dbg !6038

land.lhs.true872:                                 ; preds = %for.body867
  %437 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !6038
  %call873 = call i32 @rhs_regno(%struct.rtx_def* %437), !dbg !6038
  %cmp874 = icmp uge i32 %call873, 53, !dbg !6038
  br i1 %cmp874, label %cond.true876, label %cond.false881, !dbg !6038

cond.true876:                                     ; preds = %land.lhs.true872
  %438 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !6038
  %call877 = call i32 @rhs_regno(%struct.rtx_def* %438), !dbg !6038
  %call878 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call877), !dbg !6038
  %reg_qty879 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call878, i32 0, i32 1, !dbg !6038
  %439 = load i32, i32* %reg_qty879, align 4, !dbg !6038
  %add880 = add i32 4736, %439, !dbg !6038
  br label %cond.end883, !dbg !6038

cond.false881:                                    ; preds = %land.lhs.true872, %for.body867
  %440 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !6038
  %441 = load i32, i32* %wider_mode, align 4, !dbg !6038
  %call882 = call i32 @canon_hash(%struct.rtx_def* %440, i32 %441), !dbg !6038
  br label %cond.end883, !dbg !6038

cond.end883:                                      ; preds = %cond.false881, %cond.true876
  %cond884 = phi i32 [ %add880, %cond.true876 ], [ %call882, %cond.false881 ], !dbg !6038
  %and885 = and i32 %cond884, 31, !dbg !6038
  %442 = load i32, i32* %wider_mode, align 4, !dbg !6039
  %call886 = call %struct.table_elt* @lookup(%struct.rtx_def* %434, i32 %and885, i32 %442), !dbg !6040
  store %struct.table_elt* %call886, %struct.table_elt** %const_elt, align 8, !dbg !6036
  %443 = load %struct.table_elt*, %struct.table_elt** %const_elt, align 8, !dbg !6041
  %cmp887 = icmp eq %struct.table_elt* %443, null, !dbg !6043
  br i1 %cmp887, label %if.then889, label %if.end890, !dbg !6044

if.then889:                                       ; preds = %cond.end883
  br label %for.inc907, !dbg !6045

if.end890:                                        ; preds = %cond.end883
  %444 = load %struct.table_elt*, %struct.table_elt** %const_elt, align 8, !dbg !6046
  %first_same_value891 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %444, i32 0, i32 6, !dbg !6048
  %445 = load %struct.table_elt*, %struct.table_elt** %first_same_value891, align 8, !dbg !6048
  store %struct.table_elt* %445, %struct.table_elt** %const_elt, align 8, !dbg !6049
  br label %for.cond892, !dbg !6050

for.cond892:                                      ; preds = %for.inc904, %if.end890
  %446 = load %struct.table_elt*, %struct.table_elt** %const_elt, align 8, !dbg !6051
  %tobool893 = icmp ne %struct.table_elt* %446, null, !dbg !6053
  br i1 %tobool893, label %for.body894, label %for.end906, !dbg !6053

for.body894:                                      ; preds = %for.cond892
  %447 = load %struct.table_elt*, %struct.table_elt** %const_elt, align 8, !dbg !6054
  %exp895 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %447, i32 0, i32 0, !dbg !6054
  %448 = load %struct.rtx_def*, %struct.rtx_def** %exp895, align 8, !dbg !6054
  %449 = bitcast %struct.rtx_def* %448 to i32*, !dbg !6054
  %bf.load896 = load i32, i32* %449, align 8, !dbg !6054
  %bf.clear897 = and i32 %bf.load896, 65535, !dbg !6054
  %cmp898 = icmp eq i32 %bf.clear897, 37, !dbg !6054
  br i1 %cmp898, label %if.then900, label %if.end903, !dbg !6056

if.then900:                                       ; preds = %for.body894
  %450 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i32 0, i32 0), align 8, !dbg !6057
  %451 = load i32, i32* %mode, align 4, !dbg !6059
  %452 = load %struct.table_elt*, %struct.table_elt** %const_elt, align 8, !dbg !6060
  %exp901 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %452, i32 0, i32 0, !dbg !6061
  %453 = load %struct.rtx_def*, %struct.rtx_def** %exp901, align 8, !dbg !6061
  %call902 = call %struct.rtx_def* %450(i32 %451, %struct.rtx_def* %453), !dbg !6057
  store %struct.rtx_def* %call902, %struct.rtx_def** %src_related, align 8, !dbg !6062
  br label %for.end906, !dbg !6063

if.end903:                                        ; preds = %for.body894
  br label %for.inc904, !dbg !6054

for.inc904:                                       ; preds = %if.end903
  %454 = load %struct.table_elt*, %struct.table_elt** %const_elt, align 8, !dbg !6064
  %next_same_value905 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %454, i32 0, i32 4, !dbg !6065
  %455 = load %struct.table_elt*, %struct.table_elt** %next_same_value905, align 8, !dbg !6065
  store %struct.table_elt* %455, %struct.table_elt** %const_elt, align 8, !dbg !6066
  br label %for.cond892, !dbg !6067, !llvm.loop !6068

for.end906:                                       ; preds = %if.then900, %for.cond892
  br label %for.inc907, !dbg !6070

for.inc907:                                       ; preds = %for.end906, %if.then889
  %456 = load i32, i32* %wider_mode, align 4, !dbg !6071
  %idxprom908 = zext i32 %456 to i64, !dbg !6071
  %arrayidx909 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom908, !dbg !6071
  %457 = load i8, i8* %arrayidx909, align 1, !dbg !6071
  %conv910 = zext i8 %457 to i32, !dbg !6071
  store i32 %conv910, i32* %wider_mode, align 4, !dbg !6072
  br label %for.cond852, !dbg !6073, !llvm.loop !6074

for.end911:                                       ; preds = %land.end
  br label %if.end912, !dbg !6076

if.end912:                                        ; preds = %for.end911, %land.lhs.true838, %land.lhs.true832, %land.lhs.true827, %land.lhs.true824, %if.end822
  %458 = load i32, i32* @flag_expensive_optimizations, align 4, !dbg !6077
  %tobool913 = icmp ne i32 %458, 0, !dbg !6077
  br i1 %tobool913, label %land.lhs.true914, label %if.end1015, !dbg !6079

land.lhs.true914:                                 ; preds = %if.end912
  %459 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8, !dbg !6080
  %tobool915 = icmp ne %struct.rtx_def* %459, null, !dbg !6080
  br i1 %tobool915, label %if.end1015, label %land.lhs.true916, !dbg !6081

land.lhs.true916:                                 ; preds = %land.lhs.true914
  %460 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6082
  %461 = bitcast %struct.rtx_def* %460 to i32*, !dbg !6082
  %bf.load917 = load i32, i32* %461, align 8, !dbg !6082
  %bf.clear918 = and i32 %bf.load917, 65535, !dbg !6082
  %cmp919 = icmp eq i32 %bf.clear918, 61, !dbg !6083
  br i1 %cmp919, label %land.lhs.true921, label %if.end1015, !dbg !6084

land.lhs.true921:                                 ; preds = %land.lhs.true916
  %462 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6085
  %u922 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %462, i32 0, i32 1, !dbg !6085
  %fld923 = bitcast %union.u* %u922 to [1 x %union.rtunion_def]*, !dbg !6085
  %arrayidx924 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld923, i64 0, i64 1, !dbg !6085
  %rt_rtx925 = bitcast %union.rtunion_def* %arrayidx924 to %struct.rtx_def**, !dbg !6085
  %463 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx925, align 8, !dbg !6085
  %464 = bitcast %struct.rtx_def* %463 to i32*, !dbg !6085
  %bf.load926 = load i32, i32* %464, align 8, !dbg !6085
  %bf.clear927 = and i32 %bf.load926, 65535, !dbg !6085
  %cmp928 = icmp eq i32 %bf.clear927, 30, !dbg !6085
  br i1 %cmp928, label %land.lhs.true930, label %if.end1015, !dbg !6086

land.lhs.true930:                                 ; preds = %land.lhs.true921
  %465 = load i32, i32* %mode, align 4, !dbg !6087
  %idxprom931 = zext i32 %465 to i64, !dbg !6087
  %arrayidx932 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom931, !dbg !6087
  %466 = load i8, i8* %arrayidx932, align 1, !dbg !6087
  %conv933 = zext i8 %466 to i16, !dbg !6087
  %conv934 = zext i16 %conv933 to i32, !dbg !6087
  %cmp935 = icmp slt i32 %conv934, 4, !dbg !6088
  br i1 %cmp935, label %if.then937, label %if.end1015, !dbg !6089

if.then937:                                       ; preds = %land.lhs.true930
  call void @llvm.dbg.declare(metadata i32* %tmode, metadata !6090, metadata !DIExpression()), !dbg !6092
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_and, metadata !6093, metadata !DIExpression()), !dbg !6094
  %467 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6095
  %u938 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %467, i32 0, i32 1, !dbg !6095
  %fld939 = bitcast %union.u* %u938 to [1 x %union.rtunion_def]*, !dbg !6095
  %arrayidx940 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld939, i64 0, i64 1, !dbg !6095
  %rt_rtx941 = bitcast %union.rtunion_def* %arrayidx940 to %struct.rtx_def**, !dbg !6095
  %468 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx941, align 8, !dbg !6095
  %call942 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 61, i32 0, %struct.rtx_def* null, %struct.rtx_def* %468), !dbg !6095
  store %struct.rtx_def* %call942, %struct.rtx_def** %new_and, align 8, !dbg !6094
  %469 = load i32, i32* %mode, align 4, !dbg !6096
  %idxprom943 = zext i32 %469 to i64, !dbg !6096
  %arrayidx944 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom943, !dbg !6096
  %470 = load i8, i8* %arrayidx944, align 1, !dbg !6096
  %conv945 = zext i8 %470 to i32, !dbg !6096
  store i32 %conv945, i32* %tmode, align 4, !dbg !6098
  br label %for.cond946, !dbg !6099

for.cond946:                                      ; preds = %for.inc1010, %if.then937
  %471 = load i32, i32* %tmode, align 4, !dbg !6100
  %idxprom947 = zext i32 %471 to i64, !dbg !6100
  %arrayidx948 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom947, !dbg !6100
  %472 = load i8, i8* %arrayidx948, align 1, !dbg !6100
  %conv949 = zext i8 %472 to i16, !dbg !6100
  %conv950 = zext i16 %conv949 to i32, !dbg !6100
  %cmp951 = icmp sle i32 %conv950, 4, !dbg !6102
  br i1 %cmp951, label %for.body953, label %for.end1014, !dbg !6103

for.body953:                                      ; preds = %for.cond946
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %inner, metadata !6104, metadata !DIExpression()), !dbg !6106
  %473 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i32 0, i32 0), align 8, !dbg !6107
  %474 = load i32, i32* %tmode, align 4, !dbg !6108
  %475 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6109
  %u954 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %475, i32 0, i32 1, !dbg !6109
  %fld955 = bitcast %union.u* %u954 to [1 x %union.rtunion_def]*, !dbg !6109
  %arrayidx956 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld955, i64 0, i64 0, !dbg !6109
  %rt_rtx957 = bitcast %union.rtunion_def* %arrayidx956 to %struct.rtx_def**, !dbg !6109
  %476 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx957, align 8, !dbg !6109
  %call958 = call %struct.rtx_def* %473(i32 %474, %struct.rtx_def* %476), !dbg !6107
  store %struct.rtx_def* %call958, %struct.rtx_def** %inner, align 8, !dbg !6106
  call void @llvm.dbg.declare(metadata %struct.table_elt** %larger_elt, metadata !6110, metadata !DIExpression()), !dbg !6111
  %477 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8, !dbg !6112
  %tobool959 = icmp ne %struct.rtx_def* %477, null, !dbg !6112
  br i1 %tobool959, label %if.then960, label %if.end1009, !dbg !6114

if.then960:                                       ; preds = %for.body953
  %478 = load i32, i32* %tmode, align 4, !dbg !6115
  %479 = load %struct.rtx_def*, %struct.rtx_def** %new_and, align 8, !dbg !6115
  %480 = bitcast %struct.rtx_def* %479 to i32*, !dbg !6115
  %bf.load961 = load i32, i32* %480, align 8, !dbg !6115
  %bf.value = and i32 %478, 255, !dbg !6115
  %bf.shl = shl i32 %bf.value, 16, !dbg !6115
  %bf.clear962 = and i32 %bf.load961, -16711681, !dbg !6115
  %bf.set = or i32 %bf.clear962, %bf.shl, !dbg !6115
  store i32 %bf.set, i32* %480, align 8, !dbg !6115
  %481 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8, !dbg !6117
  %482 = load %struct.rtx_def*, %struct.rtx_def** %new_and, align 8, !dbg !6118
  %u963 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %482, i32 0, i32 1, !dbg !6118
  %fld964 = bitcast %union.u* %u963 to [1 x %union.rtunion_def]*, !dbg !6118
  %arrayidx965 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld964, i64 0, i64 0, !dbg !6118
  %rt_rtx966 = bitcast %union.rtunion_def* %arrayidx965 to %struct.rtx_def**, !dbg !6118
  store %struct.rtx_def* %481, %struct.rtx_def** %rt_rtx966, align 8, !dbg !6119
  %483 = load %struct.rtx_def*, %struct.rtx_def** %new_and, align 8, !dbg !6120
  %484 = load %struct.rtx_def*, %struct.rtx_def** %new_and, align 8, !dbg !6121
  %485 = bitcast %struct.rtx_def* %484 to i32*, !dbg !6121
  %bf.load967 = load i32, i32* %485, align 8, !dbg !6121
  %bf.clear968 = and i32 %bf.load967, 65535, !dbg !6121
  %cmp969 = icmp eq i32 %bf.clear968, 37, !dbg !6121
  br i1 %cmp969, label %land.lhs.true971, label %cond.false980, !dbg !6121

land.lhs.true971:                                 ; preds = %if.then960
  %486 = load %struct.rtx_def*, %struct.rtx_def** %new_and, align 8, !dbg !6121
  %call972 = call i32 @rhs_regno(%struct.rtx_def* %486), !dbg !6121
  %cmp973 = icmp uge i32 %call972, 53, !dbg !6121
  br i1 %cmp973, label %cond.true975, label %cond.false980, !dbg !6121

cond.true975:                                     ; preds = %land.lhs.true971
  %487 = load %struct.rtx_def*, %struct.rtx_def** %new_and, align 8, !dbg !6121
  %call976 = call i32 @rhs_regno(%struct.rtx_def* %487), !dbg !6121
  %call977 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call976), !dbg !6121
  %reg_qty978 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call977, i32 0, i32 1, !dbg !6121
  %488 = load i32, i32* %reg_qty978, align 4, !dbg !6121
  %add979 = add i32 4736, %488, !dbg !6121
  br label %cond.end982, !dbg !6121

cond.false980:                                    ; preds = %land.lhs.true971, %if.then960
  %489 = load %struct.rtx_def*, %struct.rtx_def** %new_and, align 8, !dbg !6121
  %490 = load i32, i32* %tmode, align 4, !dbg !6121
  %call981 = call i32 @canon_hash(%struct.rtx_def* %489, i32 %490), !dbg !6121
  br label %cond.end982, !dbg !6121

cond.end982:                                      ; preds = %cond.false980, %cond.true975
  %cond983 = phi i32 [ %add979, %cond.true975 ], [ %call981, %cond.false980 ], !dbg !6121
  %and984 = and i32 %cond983, 31, !dbg !6121
  %491 = load i32, i32* %tmode, align 4, !dbg !6122
  %call985 = call %struct.table_elt* @lookup(%struct.rtx_def* %483, i32 %and984, i32 %491), !dbg !6123
  store %struct.table_elt* %call985, %struct.table_elt** %larger_elt, align 8, !dbg !6124
  %492 = load %struct.table_elt*, %struct.table_elt** %larger_elt, align 8, !dbg !6125
  %cmp986 = icmp eq %struct.table_elt* %492, null, !dbg !6127
  br i1 %cmp986, label %if.then988, label %if.end989, !dbg !6128

if.then988:                                       ; preds = %cond.end982
  br label %for.inc1010, !dbg !6129

if.end989:                                        ; preds = %cond.end982
  %493 = load %struct.table_elt*, %struct.table_elt** %larger_elt, align 8, !dbg !6130
  %first_same_value990 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %493, i32 0, i32 6, !dbg !6132
  %494 = load %struct.table_elt*, %struct.table_elt** %first_same_value990, align 8, !dbg !6132
  store %struct.table_elt* %494, %struct.table_elt** %larger_elt, align 8, !dbg !6133
  br label %for.cond991, !dbg !6134

for.cond991:                                      ; preds = %for.inc1003, %if.end989
  %495 = load %struct.table_elt*, %struct.table_elt** %larger_elt, align 8, !dbg !6135
  %tobool992 = icmp ne %struct.table_elt* %495, null, !dbg !6137
  br i1 %tobool992, label %for.body993, label %for.end1005, !dbg !6137

for.body993:                                      ; preds = %for.cond991
  %496 = load %struct.table_elt*, %struct.table_elt** %larger_elt, align 8, !dbg !6138
  %exp994 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %496, i32 0, i32 0, !dbg !6138
  %497 = load %struct.rtx_def*, %struct.rtx_def** %exp994, align 8, !dbg !6138
  %498 = bitcast %struct.rtx_def* %497 to i32*, !dbg !6138
  %bf.load995 = load i32, i32* %498, align 8, !dbg !6138
  %bf.clear996 = and i32 %bf.load995, 65535, !dbg !6138
  %cmp997 = icmp eq i32 %bf.clear996, 37, !dbg !6138
  br i1 %cmp997, label %if.then999, label %if.end1002, !dbg !6140

if.then999:                                       ; preds = %for.body993
  %499 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i32 0, i32 0), align 8, !dbg !6141
  %500 = load i32, i32* %mode, align 4, !dbg !6143
  %501 = load %struct.table_elt*, %struct.table_elt** %larger_elt, align 8, !dbg !6144
  %exp1000 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %501, i32 0, i32 0, !dbg !6145
  %502 = load %struct.rtx_def*, %struct.rtx_def** %exp1000, align 8, !dbg !6145
  %call1001 = call %struct.rtx_def* %499(i32 %500, %struct.rtx_def* %502), !dbg !6141
  store %struct.rtx_def* %call1001, %struct.rtx_def** %src_related, align 8, !dbg !6146
  br label %for.end1005, !dbg !6147

if.end1002:                                       ; preds = %for.body993
  br label %for.inc1003, !dbg !6138

for.inc1003:                                      ; preds = %if.end1002
  %503 = load %struct.table_elt*, %struct.table_elt** %larger_elt, align 8, !dbg !6148
  %next_same_value1004 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %503, i32 0, i32 4, !dbg !6149
  %504 = load %struct.table_elt*, %struct.table_elt** %next_same_value1004, align 8, !dbg !6149
  store %struct.table_elt* %504, %struct.table_elt** %larger_elt, align 8, !dbg !6150
  br label %for.cond991, !dbg !6151, !llvm.loop !6152

for.end1005:                                      ; preds = %if.then999, %for.cond991
  %505 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8, !dbg !6154
  %tobool1006 = icmp ne %struct.rtx_def* %505, null, !dbg !6154
  br i1 %tobool1006, label %if.then1007, label %if.end1008, !dbg !6156

if.then1007:                                      ; preds = %for.end1005
  br label %for.end1014, !dbg !6157

if.end1008:                                       ; preds = %for.end1005
  br label %if.end1009, !dbg !6158

if.end1009:                                       ; preds = %if.end1008, %for.body953
  br label %for.inc1010, !dbg !6159

for.inc1010:                                      ; preds = %if.end1009, %if.then988
  %506 = load i32, i32* %tmode, align 4, !dbg !6160
  %idxprom1011 = zext i32 %506 to i64, !dbg !6160
  %arrayidx1012 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom1011, !dbg !6160
  %507 = load i8, i8* %arrayidx1012, align 1, !dbg !6160
  %conv1013 = zext i8 %507 to i32, !dbg !6160
  store i32 %conv1013, i32* %tmode, align 4, !dbg !6161
  br label %for.cond946, !dbg !6162, !llvm.loop !6163

for.end1014:                                      ; preds = %if.then1007, %for.cond946
  br label %if.end1015, !dbg !6165

if.end1015:                                       ; preds = %for.end1014, %land.lhs.true930, %land.lhs.true921, %land.lhs.true916, %land.lhs.true914, %if.end912
  %508 = load i64, i64* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 87), align 8, !dbg !6166
  %tobool1016 = icmp ne i64 %508, 0, !dbg !6168
  br i1 %tobool1016, label %land.lhs.true1017, label %if.end1031, !dbg !6169

land.lhs.true1017:                                ; preds = %if.end1015
  %509 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8, !dbg !6170
  %tobool1018 = icmp ne %struct.rtx_def* %509, null, !dbg !6170
  br i1 %tobool1018, label %if.end1031, label %land.lhs.true1019, !dbg !6171

land.lhs.true1019:                                ; preds = %land.lhs.true1017
  %510 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !6172
  %tobool1020 = icmp ne %struct.rtx_def* %510, null, !dbg !6172
  br i1 %tobool1020, label %land.lhs.true1021, label %if.end1031, !dbg !6173

land.lhs.true1021:                                ; preds = %land.lhs.true1019
  %511 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !6174
  %512 = bitcast %struct.rtx_def* %511 to i32*, !dbg !6174
  %bf.load1022 = load i32, i32* %512, align 8, !dbg !6174
  %bf.clear1023 = and i32 %bf.load1022, 65535, !dbg !6174
  %cmp1024 = icmp eq i32 %bf.clear1023, 30, !dbg !6175
  br i1 %cmp1024, label %if.then1026, label %if.end1031, !dbg !6176

if.then1026:                                      ; preds = %land.lhs.true1021
  %513 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !6177
  %514 = load i32, i32* %mode, align 4, !dbg !6179
  %call1027 = call %struct.rtx_def* @try_const_anchors(%struct.rtx_def* %513, i32 %514), !dbg !6180
  store %struct.rtx_def* %call1027, %struct.rtx_def** %src_related, align 8, !dbg !6181
  %515 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8, !dbg !6182
  %cmp1028 = icmp ne %struct.rtx_def* %515, null, !dbg !6183
  %conv1029 = zext i1 %cmp1028 to i32, !dbg !6183
  %conv1030 = trunc i32 %conv1029 to i8, !dbg !6182
  store i8 %conv1030, i8* %src_related_is_const_anchor, align 1, !dbg !6184
  br label %if.end1031, !dbg !6185

if.end1031:                                       ; preds = %if.then1026, %land.lhs.true1021, %land.lhs.true1019, %land.lhs.true1017, %if.end1015
  %516 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6186
  %517 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8, !dbg !6188
  %cmp1032 = icmp eq %struct.rtx_def* %516, %517, !dbg !6189
  br i1 %cmp1032, label %if.then1034, label %if.end1035, !dbg !6190

if.then1034:                                      ; preds = %if.end1031
  store %struct.rtx_def* null, %struct.rtx_def** %src_folded, align 8, !dbg !6191
  br label %if.end1035, !dbg !6192

if.end1035:                                       ; preds = %if.then1034, %if.end1031
  %518 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !6193
  %tobool1036 = icmp ne %struct.table_elt* %518, null, !dbg !6193
  br i1 %tobool1036, label %if.then1037, label %if.end1039, !dbg !6195

if.then1037:                                      ; preds = %if.end1035
  %519 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !6196
  %first_same_value1038 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %519, i32 0, i32 6, !dbg !6197
  %520 = load %struct.table_elt*, %struct.table_elt** %first_same_value1038, align 8, !dbg !6197
  store %struct.table_elt* %520, %struct.table_elt** %elt, align 8, !dbg !6198
  br label %if.end1039, !dbg !6199

if.end1039:                                       ; preds = %if.then1037, %if.end1035
  %521 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !6200
  store %struct.table_elt* %521, %struct.table_elt** %p, align 8, !dbg !6202
  br label %for.cond1040, !dbg !6203

for.cond1040:                                     ; preds = %for.inc1187, %if.end1039
  %522 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !6204
  %tobool1041 = icmp ne %struct.table_elt* %522, null, !dbg !6206
  br i1 %tobool1041, label %for.body1042, label %for.end1189, !dbg !6206

for.body1042:                                     ; preds = %for.cond1040
  call void @llvm.dbg.declare(metadata i32* %code, metadata !6207, metadata !DIExpression()), !dbg !6209
  %523 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !6210
  %exp1043 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %523, i32 0, i32 0, !dbg !6210
  %524 = load %struct.rtx_def*, %struct.rtx_def** %exp1043, align 8, !dbg !6210
  %525 = bitcast %struct.rtx_def* %524 to i32*, !dbg !6210
  %bf.load1044 = load i32, i32* %525, align 8, !dbg !6210
  %bf.clear1045 = and i32 %bf.load1044, 65535, !dbg !6210
  store i32 %bf.clear1045, i32* %code, align 4, !dbg !6209
  %526 = load i32, i32* %code, align 4, !dbg !6211
  %cmp1046 = icmp ne i32 %526, 37, !dbg !6213
  br i1 %cmp1046, label %land.lhs.true1048, label %if.end1054, !dbg !6214

land.lhs.true1048:                                ; preds = %for.body1042
  %527 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !6215
  %exp1049 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %527, i32 0, i32 0, !dbg !6216
  %528 = load %struct.rtx_def*, %struct.rtx_def** %exp1049, align 8, !dbg !6216
  %529 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !6217
  %exp1050 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %529, i32 0, i32 0, !dbg !6218
  %530 = load %struct.rtx_def*, %struct.rtx_def** %exp1050, align 8, !dbg !6218
  %call1051 = call i32 @exp_equiv_p(%struct.rtx_def* %528, %struct.rtx_def* %530, i32 1, i8 zeroext 0), !dbg !6219
  %tobool1052 = icmp ne i32 %call1051, 0, !dbg !6219
  br i1 %tobool1052, label %if.end1054, label %if.then1053, !dbg !6220

if.then1053:                                      ; preds = %land.lhs.true1048
  br label %for.inc1187, !dbg !6221

if.end1054:                                       ; preds = %land.lhs.true1048, %for.body1042
  %531 = load i32, i32* %code, align 4, !dbg !6222
  %cmp1055 = icmp eq i32 %531, 39, !dbg !6224
  br i1 %cmp1055, label %land.lhs.true1057, label %if.end1125, !dbg !6225

land.lhs.true1057:                                ; preds = %if.end1054
  %532 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !6226
  %exp1058 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %532, i32 0, i32 0, !dbg !6226
  %533 = load %struct.rtx_def*, %struct.rtx_def** %exp1058, align 8, !dbg !6226
  %534 = bitcast %struct.rtx_def* %533 to i32*, !dbg !6226
  %bf.load1059 = load i32, i32* %534, align 8, !dbg !6226
  %bf.lshr1060 = lshr i32 %bf.load1059, 16, !dbg !6226
  %bf.clear1061 = and i32 %bf.lshr1060, 255, !dbg !6226
  %idxprom1062 = zext i32 %bf.clear1061 to i64, !dbg !6226
  %arrayidx1063 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1062, !dbg !6226
  %535 = load i8, i8* %arrayidx1063, align 1, !dbg !6226
  %conv1064 = zext i8 %535 to i16, !dbg !6226
  %conv1065 = zext i16 %conv1064 to i32, !dbg !6226
  %536 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !6227
  %exp1066 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %536, i32 0, i32 0, !dbg !6227
  %537 = load %struct.rtx_def*, %struct.rtx_def** %exp1066, align 8, !dbg !6227
  %u1067 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %537, i32 0, i32 1, !dbg !6227
  %fld1068 = bitcast %union.u* %u1067 to [1 x %union.rtunion_def]*, !dbg !6227
  %arrayidx1069 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1068, i64 0, i64 0, !dbg !6227
  %rt_rtx1070 = bitcast %union.rtunion_def* %arrayidx1069 to %struct.rtx_def**, !dbg !6227
  %538 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1070, align 8, !dbg !6227
  %539 = bitcast %struct.rtx_def* %538 to i32*, !dbg !6227
  %bf.load1071 = load i32, i32* %539, align 8, !dbg !6227
  %bf.lshr1072 = lshr i32 %bf.load1071, 16, !dbg !6227
  %bf.clear1073 = and i32 %bf.lshr1072, 255, !dbg !6227
  %idxprom1074 = zext i32 %bf.clear1073 to i64, !dbg !6227
  %arrayidx1075 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1074, !dbg !6227
  %540 = load i8, i8* %arrayidx1075, align 1, !dbg !6227
  %conv1076 = zext i8 %540 to i16, !dbg !6227
  %conv1077 = zext i16 %conv1076 to i32, !dbg !6227
  %cmp1078 = icmp sgt i32 %conv1065, %conv1077, !dbg !6228
  br i1 %cmp1078, label %land.lhs.true1080, label %if.end1125, !dbg !6229

land.lhs.true1080:                                ; preds = %land.lhs.true1057
  %541 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6230
  %cmp1081 = icmp ne %struct.rtx_def* %541, null, !dbg !6231
  br i1 %cmp1081, label %land.lhs.true1083, label %if.then1124, !dbg !6232

land.lhs.true1083:                                ; preds = %land.lhs.true1080
  %542 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6233
  %543 = bitcast %struct.rtx_def* %542 to i32*, !dbg !6233
  %bf.load1084 = load i32, i32* %543, align 8, !dbg !6233
  %bf.clear1085 = and i32 %bf.load1084, 65535, !dbg !6233
  %cmp1086 = icmp eq i32 %bf.clear1085, 39, !dbg !6234
  br i1 %cmp1086, label %land.lhs.true1088, label %if.then1124, !dbg !6235

land.lhs.true1088:                                ; preds = %land.lhs.true1083
  %544 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6236
  %545 = bitcast %struct.rtx_def* %544 to i32*, !dbg !6236
  %bf.load1089 = load i32, i32* %545, align 8, !dbg !6236
  %bf.lshr1090 = lshr i32 %bf.load1089, 16, !dbg !6236
  %bf.clear1091 = and i32 %bf.lshr1090, 255, !dbg !6236
  %546 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !6237
  %exp1092 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %546, i32 0, i32 0, !dbg !6237
  %547 = load %struct.rtx_def*, %struct.rtx_def** %exp1092, align 8, !dbg !6237
  %548 = bitcast %struct.rtx_def* %547 to i32*, !dbg !6237
  %bf.load1093 = load i32, i32* %548, align 8, !dbg !6237
  %bf.lshr1094 = lshr i32 %bf.load1093, 16, !dbg !6237
  %bf.clear1095 = and i32 %bf.lshr1094, 255, !dbg !6237
  %cmp1096 = icmp eq i32 %bf.clear1091, %bf.clear1095, !dbg !6238
  br i1 %cmp1096, label %land.lhs.true1098, label %if.then1124, !dbg !6239

land.lhs.true1098:                                ; preds = %land.lhs.true1088
  %549 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6240
  %u1099 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %549, i32 0, i32 1, !dbg !6240
  %fld1100 = bitcast %union.u* %u1099 to [1 x %union.rtunion_def]*, !dbg !6240
  %arrayidx1101 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1100, i64 0, i64 0, !dbg !6240
  %rt_rtx1102 = bitcast %union.rtunion_def* %arrayidx1101 to %struct.rtx_def**, !dbg !6240
  %550 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1102, align 8, !dbg !6240
  %551 = bitcast %struct.rtx_def* %550 to i32*, !dbg !6240
  %bf.load1103 = load i32, i32* %551, align 8, !dbg !6240
  %bf.lshr1104 = lshr i32 %bf.load1103, 16, !dbg !6240
  %bf.clear1105 = and i32 %bf.lshr1104, 255, !dbg !6240
  %idxprom1106 = zext i32 %bf.clear1105 to i64, !dbg !6240
  %arrayidx1107 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1106, !dbg !6240
  %552 = load i8, i8* %arrayidx1107, align 1, !dbg !6240
  %conv1108 = zext i8 %552 to i16, !dbg !6240
  %conv1109 = zext i16 %conv1108 to i32, !dbg !6240
  %553 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !6241
  %exp1110 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %553, i32 0, i32 0, !dbg !6241
  %554 = load %struct.rtx_def*, %struct.rtx_def** %exp1110, align 8, !dbg !6241
  %u1111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %554, i32 0, i32 1, !dbg !6241
  %fld1112 = bitcast %union.u* %u1111 to [1 x %union.rtunion_def]*, !dbg !6241
  %arrayidx1113 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1112, i64 0, i64 0, !dbg !6241
  %rt_rtx1114 = bitcast %union.rtunion_def* %arrayidx1113 to %struct.rtx_def**, !dbg !6241
  %555 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1114, align 8, !dbg !6241
  %556 = bitcast %struct.rtx_def* %555 to i32*, !dbg !6241
  %bf.load1115 = load i32, i32* %556, align 8, !dbg !6241
  %bf.lshr1116 = lshr i32 %bf.load1115, 16, !dbg !6241
  %bf.clear1117 = and i32 %bf.lshr1116, 255, !dbg !6241
  %idxprom1118 = zext i32 %bf.clear1117 to i64, !dbg !6241
  %arrayidx1119 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1118, !dbg !6241
  %557 = load i8, i8* %arrayidx1119, align 1, !dbg !6241
  %conv1120 = zext i8 %557 to i16, !dbg !6241
  %conv1121 = zext i16 %conv1120 to i32, !dbg !6241
  %cmp1122 = icmp slt i32 %conv1109, %conv1121, !dbg !6242
  br i1 %cmp1122, label %if.end1125, label %if.then1124, !dbg !6243

if.then1124:                                      ; preds = %land.lhs.true1098, %land.lhs.true1088, %land.lhs.true1083, %land.lhs.true1080
  br label %for.inc1187, !dbg !6244

if.end1125:                                       ; preds = %land.lhs.true1098, %land.lhs.true1057, %if.end1054
  %558 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6245
  %tobool1126 = icmp ne %struct.rtx_def* %558, null, !dbg !6245
  br i1 %tobool1126, label %land.lhs.true1127, label %if.else1137, !dbg !6247

land.lhs.true1127:                                ; preds = %if.end1125
  %559 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6248
  %560 = bitcast %struct.rtx_def* %559 to i32*, !dbg !6248
  %bf.load1128 = load i32, i32* %560, align 8, !dbg !6248
  %bf.clear1129 = and i32 %bf.load1128, 65535, !dbg !6248
  %561 = load i32, i32* %code, align 4, !dbg !6249
  %cmp1130 = icmp eq i32 %bf.clear1129, %561, !dbg !6250
  br i1 %cmp1130, label %land.lhs.true1132, label %if.else1137, !dbg !6251

land.lhs.true1132:                                ; preds = %land.lhs.true1127
  %562 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6252
  %563 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !6253
  %exp1133 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %563, i32 0, i32 0, !dbg !6254
  %564 = load %struct.rtx_def*, %struct.rtx_def** %exp1133, align 8, !dbg !6254
  %call1134 = call i32 @rtx_equal_p(%struct.rtx_def* %562, %struct.rtx_def* %564), !dbg !6255
  %tobool1135 = icmp ne i32 %call1134, 0, !dbg !6255
  br i1 %tobool1135, label %if.then1136, label %if.else1137, !dbg !6256

if.then1136:                                      ; preds = %land.lhs.true1132
  store %struct.rtx_def* null, %struct.rtx_def** %src476, align 8, !dbg !6257
  br label %if.end1176, !dbg !6258

if.else1137:                                      ; preds = %land.lhs.true1132, %land.lhs.true1127, %if.end1125
  %565 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8, !dbg !6259
  %tobool1138 = icmp ne %struct.rtx_def* %565, null, !dbg !6259
  br i1 %tobool1138, label %land.lhs.true1139, label %if.else1149, !dbg !6261

land.lhs.true1139:                                ; preds = %if.else1137
  %566 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8, !dbg !6262
  %567 = bitcast %struct.rtx_def* %566 to i32*, !dbg !6262
  %bf.load1140 = load i32, i32* %567, align 8, !dbg !6262
  %bf.clear1141 = and i32 %bf.load1140, 65535, !dbg !6262
  %568 = load i32, i32* %code, align 4, !dbg !6263
  %cmp1142 = icmp eq i32 %bf.clear1141, %568, !dbg !6264
  br i1 %cmp1142, label %land.lhs.true1144, label %if.else1149, !dbg !6265

land.lhs.true1144:                                ; preds = %land.lhs.true1139
  %569 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8, !dbg !6266
  %570 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !6267
  %exp1145 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %570, i32 0, i32 0, !dbg !6268
  %571 = load %struct.rtx_def*, %struct.rtx_def** %exp1145, align 8, !dbg !6268
  %call1146 = call i32 @rtx_equal_p(%struct.rtx_def* %569, %struct.rtx_def* %571), !dbg !6269
  %tobool1147 = icmp ne i32 %call1146, 0, !dbg !6269
  br i1 %tobool1147, label %if.then1148, label %if.else1149, !dbg !6270

if.then1148:                                      ; preds = %land.lhs.true1144
  store %struct.rtx_def* null, %struct.rtx_def** %src_folded, align 8, !dbg !6271
  br label %if.end1175, !dbg !6272

if.else1149:                                      ; preds = %land.lhs.true1144, %land.lhs.true1139, %if.else1137
  %572 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8, !dbg !6273
  %tobool1150 = icmp ne %struct.rtx_def* %572, null, !dbg !6273
  br i1 %tobool1150, label %land.lhs.true1151, label %if.else1161, !dbg !6275

land.lhs.true1151:                                ; preds = %if.else1149
  %573 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8, !dbg !6276
  %574 = bitcast %struct.rtx_def* %573 to i32*, !dbg !6276
  %bf.load1152 = load i32, i32* %574, align 8, !dbg !6276
  %bf.clear1153 = and i32 %bf.load1152, 65535, !dbg !6276
  %575 = load i32, i32* %code, align 4, !dbg !6277
  %cmp1154 = icmp eq i32 %bf.clear1153, %575, !dbg !6278
  br i1 %cmp1154, label %land.lhs.true1156, label %if.else1161, !dbg !6279

land.lhs.true1156:                                ; preds = %land.lhs.true1151
  %576 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8, !dbg !6280
  %577 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !6281
  %exp1157 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %577, i32 0, i32 0, !dbg !6282
  %578 = load %struct.rtx_def*, %struct.rtx_def** %exp1157, align 8, !dbg !6282
  %call1158 = call i32 @rtx_equal_p(%struct.rtx_def* %576, %struct.rtx_def* %578), !dbg !6283
  %tobool1159 = icmp ne i32 %call1158, 0, !dbg !6283
  br i1 %tobool1159, label %if.then1160, label %if.else1161, !dbg !6284

if.then1160:                                      ; preds = %land.lhs.true1156
  store %struct.rtx_def* null, %struct.rtx_def** %src_eqv_here, align 8, !dbg !6285
  br label %if.end1174, !dbg !6286

if.else1161:                                      ; preds = %land.lhs.true1156, %land.lhs.true1151, %if.else1149
  %579 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8, !dbg !6287
  %tobool1162 = icmp ne %struct.rtx_def* %579, null, !dbg !6287
  br i1 %tobool1162, label %land.lhs.true1163, label %if.end1173, !dbg !6289

land.lhs.true1163:                                ; preds = %if.else1161
  %580 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8, !dbg !6290
  %581 = bitcast %struct.rtx_def* %580 to i32*, !dbg !6290
  %bf.load1164 = load i32, i32* %581, align 8, !dbg !6290
  %bf.clear1165 = and i32 %bf.load1164, 65535, !dbg !6290
  %582 = load i32, i32* %code, align 4, !dbg !6291
  %cmp1166 = icmp eq i32 %bf.clear1165, %582, !dbg !6292
  br i1 %cmp1166, label %land.lhs.true1168, label %if.end1173, !dbg !6293

land.lhs.true1168:                                ; preds = %land.lhs.true1163
  %583 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8, !dbg !6294
  %584 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !6295
  %exp1169 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %584, i32 0, i32 0, !dbg !6296
  %585 = load %struct.rtx_def*, %struct.rtx_def** %exp1169, align 8, !dbg !6296
  %call1170 = call i32 @rtx_equal_p(%struct.rtx_def* %583, %struct.rtx_def* %585), !dbg !6297
  %tobool1171 = icmp ne i32 %call1170, 0, !dbg !6297
  br i1 %tobool1171, label %if.then1172, label %if.end1173, !dbg !6298

if.then1172:                                      ; preds = %land.lhs.true1168
  store %struct.rtx_def* null, %struct.rtx_def** %src_related, align 8, !dbg !6299
  br label %if.end1173, !dbg !6300

if.end1173:                                       ; preds = %if.then1172, %land.lhs.true1168, %land.lhs.true1163, %if.else1161
  br label %if.end1174

if.end1174:                                       ; preds = %if.end1173, %if.then1160
  br label %if.end1175

if.end1175:                                       ; preds = %if.end1174, %if.then1148
  br label %if.end1176

if.end1176:                                       ; preds = %if.end1175, %if.then1136
  %586 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !6301
  %587 = bitcast %struct.rtx_def* %586 to i32*, !dbg !6301
  %bf.load1177 = load i32, i32* %587, align 8, !dbg !6301
  %bf.clear1178 = and i32 %bf.load1177, 65535, !dbg !6301
  %588 = load i32, i32* %code, align 4, !dbg !6303
  %cmp1179 = icmp eq i32 %bf.clear1178, %588, !dbg !6304
  br i1 %cmp1179, label %land.lhs.true1181, label %if.end1186, !dbg !6305

land.lhs.true1181:                                ; preds = %if.end1176
  %589 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !6306
  %exp1182 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %589, i32 0, i32 0, !dbg !6307
  %590 = load %struct.rtx_def*, %struct.rtx_def** %exp1182, align 8, !dbg !6307
  %591 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !6308
  %call1183 = call i32 @rtx_equal_p(%struct.rtx_def* %590, %struct.rtx_def* %591), !dbg !6309
  %tobool1184 = icmp ne i32 %call1183, 0, !dbg !6309
  br i1 %tobool1184, label %if.then1185, label %if.end1186, !dbg !6310

if.then1185:                                      ; preds = %land.lhs.true1181
  %592 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !6311
  store %struct.rtx_def* %592, %struct.rtx_def** %src_related, align 8, !dbg !6312
  br label %if.end1186, !dbg !6313

if.end1186:                                       ; preds = %if.then1185, %land.lhs.true1181, %if.end1176
  br label %for.inc1187, !dbg !6314

for.inc1187:                                      ; preds = %if.end1186, %if.then1124, %if.then1053
  %593 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !6315
  %next_same_value1188 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %593, i32 0, i32 4, !dbg !6316
  %594 = load %struct.table_elt*, %struct.table_elt** %next_same_value1188, align 8, !dbg !6316
  store %struct.table_elt* %594, %struct.table_elt** %p, align 8, !dbg !6317
  br label %for.cond1040, !dbg !6318, !llvm.loop !6319

for.end1189:                                      ; preds = %for.cond1040
  %595 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6321
  %tobool1190 = icmp ne %struct.rtx_def* %595, null, !dbg !6321
  br i1 %tobool1190, label %if.then1191, label %if.end1207, !dbg !6323

if.then1191:                                      ; preds = %for.end1189
  %596 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6324
  %597 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !6327
  %call1192 = call i32 @rtx_equal_p(%struct.rtx_def* %596, %struct.rtx_def* %597), !dbg !6328
  %tobool1193 = icmp ne i32 %call1192, 0, !dbg !6328
  br i1 %tobool1193, label %if.then1194, label %if.else1195, !dbg !6329

if.then1194:                                      ; preds = %if.then1191
  store i32 -1, i32* %src_regcost, align 4, !dbg !6330
  store i32 -1, i32* %src_cost, align 4, !dbg !6331
  br label %if.end1206, !dbg !6332

if.else1195:                                      ; preds = %if.then1191
  %598 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6333
  %599 = bitcast %struct.rtx_def* %598 to i32*, !dbg !6333
  %bf.load1196 = load i32, i32* %599, align 8, !dbg !6333
  %bf.clear1197 = and i32 %bf.load1196, 65535, !dbg !6333
  %cmp1198 = icmp eq i32 %bf.clear1197, 37, !dbg !6333
  br i1 %cmp1198, label %cond.true1200, label %cond.false1201, !dbg !6333

cond.true1200:                                    ; preds = %if.else1195
  br label %cond.end1203, !dbg !6333

cond.false1201:                                   ; preds = %if.else1195
  %600 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6333
  %call1202 = call i32 @notreg_cost(%struct.rtx_def* %600, i32 23), !dbg !6333
  br label %cond.end1203, !dbg !6333

cond.end1203:                                     ; preds = %cond.false1201, %cond.true1200
  %cond1204 = phi i32 [ 0, %cond.true1200 ], [ %call1202, %cond.false1201 ], !dbg !6333
  store i32 %cond1204, i32* %src_cost, align 4, !dbg !6335
  %601 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6336
  %call1205 = call i32 @approx_reg_cost(%struct.rtx_def* %601), !dbg !6337
  store i32 %call1205, i32* %src_regcost, align 4, !dbg !6338
  br label %if.end1206

if.end1206:                                       ; preds = %cond.end1203, %if.then1194
  br label %if.end1207, !dbg !6339

if.end1207:                                       ; preds = %if.end1206, %for.end1189
  %602 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8, !dbg !6340
  %tobool1208 = icmp ne %struct.rtx_def* %602, null, !dbg !6340
  br i1 %tobool1208, label %if.then1209, label %if.end1225, !dbg !6342

if.then1209:                                      ; preds = %if.end1207
  %603 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8, !dbg !6343
  %604 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !6346
  %call1210 = call i32 @rtx_equal_p(%struct.rtx_def* %603, %struct.rtx_def* %604), !dbg !6347
  %tobool1211 = icmp ne i32 %call1210, 0, !dbg !6347
  br i1 %tobool1211, label %if.then1212, label %if.else1213, !dbg !6348

if.then1212:                                      ; preds = %if.then1209
  store i32 -1, i32* %src_eqv_regcost, align 4, !dbg !6349
  store i32 -1, i32* %src_eqv_cost, align 4, !dbg !6350
  br label %if.end1224, !dbg !6351

if.else1213:                                      ; preds = %if.then1209
  %605 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8, !dbg !6352
  %606 = bitcast %struct.rtx_def* %605 to i32*, !dbg !6352
  %bf.load1214 = load i32, i32* %606, align 8, !dbg !6352
  %bf.clear1215 = and i32 %bf.load1214, 65535, !dbg !6352
  %cmp1216 = icmp eq i32 %bf.clear1215, 37, !dbg !6352
  br i1 %cmp1216, label %cond.true1218, label %cond.false1219, !dbg !6352

cond.true1218:                                    ; preds = %if.else1213
  br label %cond.end1221, !dbg !6352

cond.false1219:                                   ; preds = %if.else1213
  %607 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8, !dbg !6352
  %call1220 = call i32 @notreg_cost(%struct.rtx_def* %607, i32 23), !dbg !6352
  br label %cond.end1221, !dbg !6352

cond.end1221:                                     ; preds = %cond.false1219, %cond.true1218
  %cond1222 = phi i32 [ 0, %cond.true1218 ], [ %call1220, %cond.false1219 ], !dbg !6352
  store i32 %cond1222, i32* %src_eqv_cost, align 4, !dbg !6354
  %608 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8, !dbg !6355
  %call1223 = call i32 @approx_reg_cost(%struct.rtx_def* %608), !dbg !6356
  store i32 %call1223, i32* %src_eqv_regcost, align 4, !dbg !6357
  br label %if.end1224

if.end1224:                                       ; preds = %cond.end1221, %if.then1212
  br label %if.end1225, !dbg !6358

if.end1225:                                       ; preds = %if.end1224, %if.end1207
  %609 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8, !dbg !6359
  %tobool1226 = icmp ne %struct.rtx_def* %609, null, !dbg !6359
  br i1 %tobool1226, label %if.then1227, label %if.end1243, !dbg !6361

if.then1227:                                      ; preds = %if.end1225
  %610 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8, !dbg !6362
  %611 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !6365
  %call1228 = call i32 @rtx_equal_p(%struct.rtx_def* %610, %struct.rtx_def* %611), !dbg !6366
  %tobool1229 = icmp ne i32 %call1228, 0, !dbg !6366
  br i1 %tobool1229, label %if.then1230, label %if.else1231, !dbg !6367

if.then1230:                                      ; preds = %if.then1227
  store i32 -1, i32* %src_folded_regcost, align 4, !dbg !6368
  store i32 -1, i32* %src_folded_cost, align 4, !dbg !6369
  br label %if.end1242, !dbg !6370

if.else1231:                                      ; preds = %if.then1227
  %612 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8, !dbg !6371
  %613 = bitcast %struct.rtx_def* %612 to i32*, !dbg !6371
  %bf.load1232 = load i32, i32* %613, align 8, !dbg !6371
  %bf.clear1233 = and i32 %bf.load1232, 65535, !dbg !6371
  %cmp1234 = icmp eq i32 %bf.clear1233, 37, !dbg !6371
  br i1 %cmp1234, label %cond.true1236, label %cond.false1237, !dbg !6371

cond.true1236:                                    ; preds = %if.else1231
  br label %cond.end1239, !dbg !6371

cond.false1237:                                   ; preds = %if.else1231
  %614 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8, !dbg !6371
  %call1238 = call i32 @notreg_cost(%struct.rtx_def* %614, i32 23), !dbg !6371
  br label %cond.end1239, !dbg !6371

cond.end1239:                                     ; preds = %cond.false1237, %cond.true1236
  %cond1240 = phi i32 [ 0, %cond.true1236 ], [ %call1238, %cond.false1237 ], !dbg !6371
  store i32 %cond1240, i32* %src_folded_cost, align 4, !dbg !6373
  %615 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8, !dbg !6374
  %call1241 = call i32 @approx_reg_cost(%struct.rtx_def* %615), !dbg !6375
  store i32 %call1241, i32* %src_folded_regcost, align 4, !dbg !6376
  br label %if.end1242

if.end1242:                                       ; preds = %cond.end1239, %if.then1230
  br label %if.end1243, !dbg !6377

if.end1243:                                       ; preds = %if.end1242, %if.end1225
  %616 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8, !dbg !6378
  %tobool1244 = icmp ne %struct.rtx_def* %616, null, !dbg !6378
  br i1 %tobool1244, label %if.then1245, label %if.end1270, !dbg !6380

if.then1245:                                      ; preds = %if.end1243
  %617 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8, !dbg !6381
  %618 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !6384
  %call1246 = call i32 @rtx_equal_p(%struct.rtx_def* %617, %struct.rtx_def* %618), !dbg !6385
  %tobool1247 = icmp ne i32 %call1246, 0, !dbg !6385
  br i1 %tobool1247, label %if.then1248, label %if.else1249, !dbg !6386

if.then1248:                                      ; preds = %if.then1245
  store i32 -1, i32* %src_related_regcost, align 4, !dbg !6387
  store i32 -1, i32* %src_related_cost, align 4, !dbg !6388
  br label %if.end1269, !dbg !6389

if.else1249:                                      ; preds = %if.then1245
  %619 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8, !dbg !6390
  %620 = bitcast %struct.rtx_def* %619 to i32*, !dbg !6390
  %bf.load1250 = load i32, i32* %620, align 8, !dbg !6390
  %bf.clear1251 = and i32 %bf.load1250, 65535, !dbg !6390
  %cmp1252 = icmp eq i32 %bf.clear1251, 37, !dbg !6390
  br i1 %cmp1252, label %cond.true1254, label %cond.false1255, !dbg !6390

cond.true1254:                                    ; preds = %if.else1249
  br label %cond.end1257, !dbg !6390

cond.false1255:                                   ; preds = %if.else1249
  %621 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8, !dbg !6390
  %call1256 = call i32 @notreg_cost(%struct.rtx_def* %621, i32 23), !dbg !6390
  br label %cond.end1257, !dbg !6390

cond.end1257:                                     ; preds = %cond.false1255, %cond.true1254
  %cond1258 = phi i32 [ 0, %cond.true1254 ], [ %call1256, %cond.false1255 ], !dbg !6390
  store i32 %cond1258, i32* %src_related_cost, align 4, !dbg !6392
  %622 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8, !dbg !6393
  %call1259 = call i32 @approx_reg_cost(%struct.rtx_def* %622), !dbg !6394
  store i32 %call1259, i32* %src_related_regcost, align 4, !dbg !6395
  %623 = load i8, i8* %src_related_is_const_anchor, align 1, !dbg !6396
  %conv1260 = zext i8 %623 to i32, !dbg !6396
  %tobool1261 = icmp ne i32 %conv1260, 0, !dbg !6396
  br i1 %tobool1261, label %land.lhs.true1262, label %if.end1268, !dbg !6398

land.lhs.true1262:                                ; preds = %cond.end1257
  %624 = load i32, i32* %src_related_cost, align 4, !dbg !6399
  %625 = load i32, i32* %src_cost, align 4, !dbg !6400
  %cmp1263 = icmp eq i32 %624, %625, !dbg !6401
  br i1 %cmp1263, label %land.lhs.true1265, label %if.end1268, !dbg !6402

land.lhs.true1265:                                ; preds = %land.lhs.true1262
  %626 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8, !dbg !6403
  %tobool1266 = icmp ne %struct.rtx_def* %626, null, !dbg !6403
  br i1 %tobool1266, label %if.then1267, label %if.end1268, !dbg !6404

if.then1267:                                      ; preds = %land.lhs.true1265
  %627 = load i32, i32* %src_related_cost, align 4, !dbg !6405
  %dec = add nsw i32 %627, -1, !dbg !6405
  store i32 %dec, i32* %src_related_cost, align 4, !dbg !6405
  br label %if.end1268, !dbg !6406

if.end1268:                                       ; preds = %if.then1267, %land.lhs.true1265, %land.lhs.true1262, %cond.end1257
  br label %if.end1269

if.end1269:                                       ; preds = %if.end1268, %if.then1248
  br label %if.end1270, !dbg !6407

if.end1270:                                       ; preds = %if.end1269, %if.end1243
  %628 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !6408
  %629 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !6410
  %cmp1271 = icmp eq %struct.rtx_def* %628, %629, !dbg !6411
  br i1 %cmp1271, label %land.lhs.true1273, label %if.end1281, !dbg !6412

land.lhs.true1273:                                ; preds = %if.end1270
  %630 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !6413
  %tobool1274 = icmp ne %struct.rtx_def* %630, null, !dbg !6413
  br i1 %tobool1274, label %land.lhs.true1275, label %if.end1281, !dbg !6414

land.lhs.true1275:                                ; preds = %land.lhs.true1273
  %631 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !6415
  %632 = bitcast %struct.rtx_def* %631 to i32*, !dbg !6415
  %bf.load1276 = load i32, i32* %632, align 8, !dbg !6415
  %bf.clear1277 = and i32 %bf.load1276, 65535, !dbg !6415
  %cmp1278 = icmp eq i32 %bf.clear1277, 44, !dbg !6416
  br i1 %cmp1278, label %if.then1280, label %if.end1281, !dbg !6417

if.then1280:                                      ; preds = %land.lhs.true1275
  %633 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !6418
  store %struct.rtx_def* %633, %struct.rtx_def** %src_folded, align 8, !dbg !6419
  store i32 -1, i32* %src_folded_regcost, align 4, !dbg !6420
  store i32 -1, i32* %src_folded_cost, align 4, !dbg !6421
  br label %if.end1281, !dbg !6422

if.end1281:                                       ; preds = %if.then1280, %land.lhs.true1275, %land.lhs.true1273, %if.end1270
  br label %while.body1283, !dbg !6423

while.body1283:                                   ; preds = %if.end1281, %if.then1376, %if.then1794, %if.end1921
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %trial, metadata !6424, metadata !DIExpression()), !dbg !6426
  br label %while.cond1284, !dbg !6427

while.cond1284:                                   ; preds = %while.body1298, %while.body1283
  %634 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !6428
  %tobool1285 = icmp ne %struct.table_elt* %634, null, !dbg !6428
  br i1 %tobool1285, label %land.lhs.true1286, label %land.end1297, !dbg !6429

land.lhs.true1286:                                ; preds = %while.cond1284
  %635 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !6430
  %exp1287 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %635, i32 0, i32 0, !dbg !6430
  %636 = load %struct.rtx_def*, %struct.rtx_def** %exp1287, align 8, !dbg !6430
  %637 = bitcast %struct.rtx_def* %636 to i32*, !dbg !6430
  %bf.load1288 = load i32, i32* %637, align 8, !dbg !6430
  %bf.clear1289 = and i32 %bf.load1288, 65535, !dbg !6430
  %cmp1290 = icmp eq i32 %bf.clear1289, 37, !dbg !6430
  br i1 %cmp1290, label %land.end1297, label %land.rhs1292, !dbg !6431

land.rhs1292:                                     ; preds = %land.lhs.true1286
  %638 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !6432
  %exp1293 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %638, i32 0, i32 0, !dbg !6433
  %639 = load %struct.rtx_def*, %struct.rtx_def** %exp1293, align 8, !dbg !6433
  %640 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !6434
  %exp1294 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %640, i32 0, i32 0, !dbg !6435
  %641 = load %struct.rtx_def*, %struct.rtx_def** %exp1294, align 8, !dbg !6435
  %call1295 = call i32 @exp_equiv_p(%struct.rtx_def* %639, %struct.rtx_def* %641, i32 1, i8 zeroext 0), !dbg !6436
  %tobool1296 = icmp ne i32 %call1295, 0, !dbg !6437
  %lnot = xor i1 %tobool1296, true, !dbg !6437
  br label %land.end1297

land.end1297:                                     ; preds = %land.rhs1292, %land.lhs.true1286, %while.cond1284
  %642 = phi i1 [ false, %land.lhs.true1286 ], [ false, %while.cond1284 ], [ %lnot, %land.rhs1292 ], !dbg !6438
  br i1 %642, label %while.body1298, label %while.end1300, !dbg !6427

while.body1298:                                   ; preds = %land.end1297
  %643 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !6439
  %next_same_value1299 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %643, i32 0, i32 4, !dbg !6440
  %644 = load %struct.table_elt*, %struct.table_elt** %next_same_value1299, align 8, !dbg !6440
  store %struct.table_elt* %644, %struct.table_elt** %elt, align 8, !dbg !6441
  br label %while.cond1284, !dbg !6427, !llvm.loop !6442

while.end1300:                                    ; preds = %land.end1297
  %645 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !6443
  %cmp1301 = icmp ne %struct.table_elt* %645, null, !dbg !6445
  br i1 %cmp1301, label %land.lhs.true1303, label %if.end1378, !dbg !6446

land.lhs.true1303:                                ; preds = %while.end1300
  %646 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !6447
  %exp1304 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %646, i32 0, i32 0, !dbg !6447
  %647 = load %struct.rtx_def*, %struct.rtx_def** %exp1304, align 8, !dbg !6447
  %648 = bitcast %struct.rtx_def* %647 to i32*, !dbg !6447
  %bf.load1305 = load i32, i32* %648, align 8, !dbg !6447
  %bf.clear1306 = and i32 %bf.load1305, 65535, !dbg !6447
  %cmp1307 = icmp eq i32 %bf.clear1306, 39, !dbg !6448
  br i1 %cmp1307, label %land.lhs.true1309, label %if.end1378, !dbg !6449

land.lhs.true1309:                                ; preds = %land.lhs.true1303
  %649 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !6450
  %exp1310 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %649, i32 0, i32 0, !dbg !6450
  %650 = load %struct.rtx_def*, %struct.rtx_def** %exp1310, align 8, !dbg !6450
  %651 = bitcast %struct.rtx_def* %650 to i32*, !dbg !6450
  %bf.load1311 = load i32, i32* %651, align 8, !dbg !6450
  %bf.lshr1312 = lshr i32 %bf.load1311, 16, !dbg !6450
  %bf.clear1313 = and i32 %bf.lshr1312, 255, !dbg !6450
  %idxprom1314 = zext i32 %bf.clear1313 to i64, !dbg !6450
  %arrayidx1315 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1314, !dbg !6450
  %652 = load i8, i8* %arrayidx1315, align 1, !dbg !6450
  %conv1316 = zext i8 %652 to i16, !dbg !6450
  %conv1317 = zext i16 %conv1316 to i32, !dbg !6450
  %653 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !6451
  %exp1318 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %653, i32 0, i32 0, !dbg !6451
  %654 = load %struct.rtx_def*, %struct.rtx_def** %exp1318, align 8, !dbg !6451
  %u1319 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %654, i32 0, i32 1, !dbg !6451
  %fld1320 = bitcast %union.u* %u1319 to [1 x %union.rtunion_def]*, !dbg !6451
  %arrayidx1321 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1320, i64 0, i64 0, !dbg !6451
  %rt_rtx1322 = bitcast %union.rtunion_def* %arrayidx1321 to %struct.rtx_def**, !dbg !6451
  %655 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1322, align 8, !dbg !6451
  %656 = bitcast %struct.rtx_def* %655 to i32*, !dbg !6451
  %bf.load1323 = load i32, i32* %656, align 8, !dbg !6451
  %bf.lshr1324 = lshr i32 %bf.load1323, 16, !dbg !6451
  %bf.clear1325 = and i32 %bf.lshr1324, 255, !dbg !6451
  %idxprom1326 = zext i32 %bf.clear1325 to i64, !dbg !6451
  %arrayidx1327 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1326, !dbg !6451
  %657 = load i8, i8* %arrayidx1327, align 1, !dbg !6451
  %conv1328 = zext i8 %657 to i16, !dbg !6451
  %conv1329 = zext i16 %conv1328 to i32, !dbg !6451
  %cmp1330 = icmp sgt i32 %conv1317, %conv1329, !dbg !6452
  br i1 %cmp1330, label %land.lhs.true1332, label %if.end1378, !dbg !6453

land.lhs.true1332:                                ; preds = %land.lhs.true1309
  %658 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6454
  %cmp1333 = icmp ne %struct.rtx_def* %658, null, !dbg !6455
  br i1 %cmp1333, label %land.lhs.true1335, label %if.then1376, !dbg !6456

land.lhs.true1335:                                ; preds = %land.lhs.true1332
  %659 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6457
  %660 = bitcast %struct.rtx_def* %659 to i32*, !dbg !6457
  %bf.load1336 = load i32, i32* %660, align 8, !dbg !6457
  %bf.clear1337 = and i32 %bf.load1336, 65535, !dbg !6457
  %cmp1338 = icmp eq i32 %bf.clear1337, 39, !dbg !6458
  br i1 %cmp1338, label %land.lhs.true1340, label %if.then1376, !dbg !6459

land.lhs.true1340:                                ; preds = %land.lhs.true1335
  %661 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6460
  %662 = bitcast %struct.rtx_def* %661 to i32*, !dbg !6460
  %bf.load1341 = load i32, i32* %662, align 8, !dbg !6460
  %bf.lshr1342 = lshr i32 %bf.load1341, 16, !dbg !6460
  %bf.clear1343 = and i32 %bf.lshr1342, 255, !dbg !6460
  %663 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !6461
  %exp1344 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %663, i32 0, i32 0, !dbg !6461
  %664 = load %struct.rtx_def*, %struct.rtx_def** %exp1344, align 8, !dbg !6461
  %665 = bitcast %struct.rtx_def* %664 to i32*, !dbg !6461
  %bf.load1345 = load i32, i32* %665, align 8, !dbg !6461
  %bf.lshr1346 = lshr i32 %bf.load1345, 16, !dbg !6461
  %bf.clear1347 = and i32 %bf.lshr1346, 255, !dbg !6461
  %cmp1348 = icmp eq i32 %bf.clear1343, %bf.clear1347, !dbg !6462
  br i1 %cmp1348, label %land.lhs.true1350, label %if.then1376, !dbg !6463

land.lhs.true1350:                                ; preds = %land.lhs.true1340
  %666 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6464
  %u1351 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %666, i32 0, i32 1, !dbg !6464
  %fld1352 = bitcast %union.u* %u1351 to [1 x %union.rtunion_def]*, !dbg !6464
  %arrayidx1353 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1352, i64 0, i64 0, !dbg !6464
  %rt_rtx1354 = bitcast %union.rtunion_def* %arrayidx1353 to %struct.rtx_def**, !dbg !6464
  %667 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1354, align 8, !dbg !6464
  %668 = bitcast %struct.rtx_def* %667 to i32*, !dbg !6464
  %bf.load1355 = load i32, i32* %668, align 8, !dbg !6464
  %bf.lshr1356 = lshr i32 %bf.load1355, 16, !dbg !6464
  %bf.clear1357 = and i32 %bf.lshr1356, 255, !dbg !6464
  %idxprom1358 = zext i32 %bf.clear1357 to i64, !dbg !6464
  %arrayidx1359 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1358, !dbg !6464
  %669 = load i8, i8* %arrayidx1359, align 1, !dbg !6464
  %conv1360 = zext i8 %669 to i16, !dbg !6464
  %conv1361 = zext i16 %conv1360 to i32, !dbg !6464
  %670 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !6465
  %exp1362 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %670, i32 0, i32 0, !dbg !6465
  %671 = load %struct.rtx_def*, %struct.rtx_def** %exp1362, align 8, !dbg !6465
  %u1363 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %671, i32 0, i32 1, !dbg !6465
  %fld1364 = bitcast %union.u* %u1363 to [1 x %union.rtunion_def]*, !dbg !6465
  %arrayidx1365 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1364, i64 0, i64 0, !dbg !6465
  %rt_rtx1366 = bitcast %union.rtunion_def* %arrayidx1365 to %struct.rtx_def**, !dbg !6465
  %672 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1366, align 8, !dbg !6465
  %673 = bitcast %struct.rtx_def* %672 to i32*, !dbg !6465
  %bf.load1367 = load i32, i32* %673, align 8, !dbg !6465
  %bf.lshr1368 = lshr i32 %bf.load1367, 16, !dbg !6465
  %bf.clear1369 = and i32 %bf.lshr1368, 255, !dbg !6465
  %idxprom1370 = zext i32 %bf.clear1369 to i64, !dbg !6465
  %arrayidx1371 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1370, !dbg !6465
  %674 = load i8, i8* %arrayidx1371, align 1, !dbg !6465
  %conv1372 = zext i8 %674 to i16, !dbg !6465
  %conv1373 = zext i16 %conv1372 to i32, !dbg !6465
  %cmp1374 = icmp slt i32 %conv1361, %conv1373, !dbg !6466
  br i1 %cmp1374, label %if.end1378, label %if.then1376, !dbg !6467

if.then1376:                                      ; preds = %land.lhs.true1350, %land.lhs.true1340, %land.lhs.true1335, %land.lhs.true1332
  %675 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !6468
  %next_same_value1377 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %675, i32 0, i32 4, !dbg !6470
  %676 = load %struct.table_elt*, %struct.table_elt** %next_same_value1377, align 8, !dbg !6470
  store %struct.table_elt* %676, %struct.table_elt** %elt, align 8, !dbg !6471
  br label %while.body1283, !dbg !6472, !llvm.loop !6473

if.end1378:                                       ; preds = %land.lhs.true1350, %land.lhs.true1309, %land.lhs.true1303, %while.end1300
  %677 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !6475
  %tobool1379 = icmp ne %struct.table_elt* %677, null, !dbg !6475
  br i1 %tobool1379, label %if.then1380, label %if.end1381, !dbg !6477

if.then1380:                                      ; preds = %if.end1378
  %678 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !6478
  %cost = getelementptr inbounds %struct.table_elt, %struct.table_elt* %678, i32 0, i32 8, !dbg !6480
  %679 = load i32, i32* %cost, align 8, !dbg !6480
  store i32 %679, i32* %src_elt_cost, align 4, !dbg !6481
  %680 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !6482
  %regcost = getelementptr inbounds %struct.table_elt, %struct.table_elt* %680, i32 0, i32 9, !dbg !6483
  %681 = load i32, i32* %regcost, align 4, !dbg !6483
  store i32 %681, i32* %src_elt_regcost, align 4, !dbg !6484
  br label %if.end1381, !dbg !6485

if.end1381:                                       ; preds = %if.then1380, %if.end1378
  %682 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8, !dbg !6486
  %tobool1382 = icmp ne %struct.rtx_def* %682, null, !dbg !6486
  br i1 %tobool1382, label %land.lhs.true1383, label %if.else1407, !dbg !6488

land.lhs.true1383:                                ; preds = %if.end1381
  %683 = load i32, i32* %src_folded_cost, align 4, !dbg !6489
  %684 = load i32, i32* %src_folded_regcost, align 4, !dbg !6490
  %685 = load i32, i32* %src_cost, align 4, !dbg !6491
  %686 = load i32, i32* %src_regcost, align 4, !dbg !6492
  %call1384 = call i32 @preferable(i32 %683, i32 %684, i32 %685, i32 %686), !dbg !6493
  %cmp1385 = icmp sle i32 %call1384, 0, !dbg !6494
  br i1 %cmp1385, label %land.lhs.true1387, label %if.else1407, !dbg !6495

land.lhs.true1387:                                ; preds = %land.lhs.true1383
  %687 = load i32, i32* %src_folded_cost, align 4, !dbg !6496
  %688 = load i32, i32* %src_folded_regcost, align 4, !dbg !6497
  %689 = load i32, i32* %src_eqv_cost, align 4, !dbg !6498
  %690 = load i32, i32* %src_eqv_regcost, align 4, !dbg !6499
  %call1388 = call i32 @preferable(i32 %687, i32 %688, i32 %689, i32 %690), !dbg !6500
  %cmp1389 = icmp sle i32 %call1388, 0, !dbg !6501
  br i1 %cmp1389, label %land.lhs.true1391, label %if.else1407, !dbg !6502

land.lhs.true1391:                                ; preds = %land.lhs.true1387
  %691 = load i32, i32* %src_folded_cost, align 4, !dbg !6503
  %692 = load i32, i32* %src_folded_regcost, align 4, !dbg !6504
  %693 = load i32, i32* %src_related_cost, align 4, !dbg !6505
  %694 = load i32, i32* %src_related_regcost, align 4, !dbg !6506
  %call1392 = call i32 @preferable(i32 %691, i32 %692, i32 %693, i32 %694), !dbg !6507
  %cmp1393 = icmp sle i32 %call1392, 0, !dbg !6508
  br i1 %cmp1393, label %land.lhs.true1395, label %if.else1407, !dbg !6509

land.lhs.true1395:                                ; preds = %land.lhs.true1391
  %695 = load i32, i32* %src_folded_cost, align 4, !dbg !6510
  %696 = load i32, i32* %src_folded_regcost, align 4, !dbg !6511
  %697 = load i32, i32* %src_elt_cost, align 4, !dbg !6512
  %698 = load i32, i32* %src_elt_regcost, align 4, !dbg !6513
  %call1396 = call i32 @preferable(i32 %695, i32 %696, i32 %697, i32 %698), !dbg !6514
  %cmp1397 = icmp sle i32 %call1396, 0, !dbg !6515
  br i1 %cmp1397, label %if.then1399, label %if.else1407, !dbg !6516

if.then1399:                                      ; preds = %land.lhs.true1395
  %699 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8, !dbg !6517
  store %struct.rtx_def* %699, %struct.rtx_def** %trial, align 8, !dbg !6519
  store i32 2147483647, i32* %src_folded_cost, align 4, !dbg !6520
  %700 = load i32, i32* %src_folded_force_flag, align 4, !dbg !6521
  %tobool1400 = icmp ne i32 %700, 0, !dbg !6521
  br i1 %tobool1400, label %if.then1401, label %if.end1406, !dbg !6523

if.then1401:                                      ; preds = %if.then1399
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %forced, metadata !6524, metadata !DIExpression()), !dbg !6526
  %701 = load i32, i32* %mode, align 4, !dbg !6527
  %702 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8, !dbg !6528
  %call1402 = call %struct.rtx_def* @force_const_mem(i32 %701, %struct.rtx_def* %702), !dbg !6529
  store %struct.rtx_def* %call1402, %struct.rtx_def** %forced, align 8, !dbg !6526
  %703 = load %struct.rtx_def*, %struct.rtx_def** %forced, align 8, !dbg !6530
  %tobool1403 = icmp ne %struct.rtx_def* %703, null, !dbg !6530
  br i1 %tobool1403, label %if.then1404, label %if.end1405, !dbg !6532

if.then1404:                                      ; preds = %if.then1401
  %704 = load %struct.rtx_def*, %struct.rtx_def** %forced, align 8, !dbg !6533
  store %struct.rtx_def* %704, %struct.rtx_def** %trial, align 8, !dbg !6534
  br label %if.end1405, !dbg !6535

if.end1405:                                       ; preds = %if.then1404, %if.then1401
  br label %if.end1406, !dbg !6536

if.end1406:                                       ; preds = %if.end1405, %if.then1399
  br label %if.end1446, !dbg !6537

if.else1407:                                      ; preds = %land.lhs.true1395, %land.lhs.true1391, %land.lhs.true1387, %land.lhs.true1383, %if.end1381
  %705 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6538
  %tobool1408 = icmp ne %struct.rtx_def* %705, null, !dbg !6538
  br i1 %tobool1408, label %land.lhs.true1409, label %if.else1422, !dbg !6540

land.lhs.true1409:                                ; preds = %if.else1407
  %706 = load i32, i32* %src_cost, align 4, !dbg !6541
  %707 = load i32, i32* %src_regcost, align 4, !dbg !6542
  %708 = load i32, i32* %src_eqv_cost, align 4, !dbg !6543
  %709 = load i32, i32* %src_eqv_regcost, align 4, !dbg !6544
  %call1410 = call i32 @preferable(i32 %706, i32 %707, i32 %708, i32 %709), !dbg !6545
  %cmp1411 = icmp sle i32 %call1410, 0, !dbg !6546
  br i1 %cmp1411, label %land.lhs.true1413, label %if.else1422, !dbg !6547

land.lhs.true1413:                                ; preds = %land.lhs.true1409
  %710 = load i32, i32* %src_cost, align 4, !dbg !6548
  %711 = load i32, i32* %src_regcost, align 4, !dbg !6549
  %712 = load i32, i32* %src_related_cost, align 4, !dbg !6550
  %713 = load i32, i32* %src_related_regcost, align 4, !dbg !6551
  %call1414 = call i32 @preferable(i32 %710, i32 %711, i32 %712, i32 %713), !dbg !6552
  %cmp1415 = icmp sle i32 %call1414, 0, !dbg !6553
  br i1 %cmp1415, label %land.lhs.true1417, label %if.else1422, !dbg !6554

land.lhs.true1417:                                ; preds = %land.lhs.true1413
  %714 = load i32, i32* %src_cost, align 4, !dbg !6555
  %715 = load i32, i32* %src_regcost, align 4, !dbg !6556
  %716 = load i32, i32* %src_elt_cost, align 4, !dbg !6557
  %717 = load i32, i32* %src_elt_regcost, align 4, !dbg !6558
  %call1418 = call i32 @preferable(i32 %714, i32 %715, i32 %716, i32 %717), !dbg !6559
  %cmp1419 = icmp sle i32 %call1418, 0, !dbg !6560
  br i1 %cmp1419, label %if.then1421, label %if.else1422, !dbg !6561

if.then1421:                                      ; preds = %land.lhs.true1417
  %718 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6562
  store %struct.rtx_def* %718, %struct.rtx_def** %trial, align 8, !dbg !6563
  store i32 2147483647, i32* %src_cost, align 4, !dbg !6564
  br label %if.end1445, !dbg !6565

if.else1422:                                      ; preds = %land.lhs.true1417, %land.lhs.true1413, %land.lhs.true1409, %if.else1407
  %719 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8, !dbg !6566
  %tobool1423 = icmp ne %struct.rtx_def* %719, null, !dbg !6566
  br i1 %tobool1423, label %land.lhs.true1424, label %if.else1433, !dbg !6568

land.lhs.true1424:                                ; preds = %if.else1422
  %720 = load i32, i32* %src_eqv_cost, align 4, !dbg !6569
  %721 = load i32, i32* %src_eqv_regcost, align 4, !dbg !6570
  %722 = load i32, i32* %src_related_cost, align 4, !dbg !6571
  %723 = load i32, i32* %src_related_regcost, align 4, !dbg !6572
  %call1425 = call i32 @preferable(i32 %720, i32 %721, i32 %722, i32 %723), !dbg !6573
  %cmp1426 = icmp sle i32 %call1425, 0, !dbg !6574
  br i1 %cmp1426, label %land.lhs.true1428, label %if.else1433, !dbg !6575

land.lhs.true1428:                                ; preds = %land.lhs.true1424
  %724 = load i32, i32* %src_eqv_cost, align 4, !dbg !6576
  %725 = load i32, i32* %src_eqv_regcost, align 4, !dbg !6577
  %726 = load i32, i32* %src_elt_cost, align 4, !dbg !6578
  %727 = load i32, i32* %src_elt_regcost, align 4, !dbg !6579
  %call1429 = call i32 @preferable(i32 %724, i32 %725, i32 %726, i32 %727), !dbg !6580
  %cmp1430 = icmp sle i32 %call1429, 0, !dbg !6581
  br i1 %cmp1430, label %if.then1432, label %if.else1433, !dbg !6582

if.then1432:                                      ; preds = %land.lhs.true1428
  %728 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv_here, align 8, !dbg !6583
  store %struct.rtx_def* %728, %struct.rtx_def** %trial, align 8, !dbg !6584
  store i32 2147483647, i32* %src_eqv_cost, align 4, !dbg !6585
  br label %if.end1444, !dbg !6586

if.else1433:                                      ; preds = %land.lhs.true1428, %land.lhs.true1424, %if.else1422
  %729 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8, !dbg !6587
  %tobool1434 = icmp ne %struct.rtx_def* %729, null, !dbg !6587
  br i1 %tobool1434, label %land.lhs.true1435, label %if.else1440, !dbg !6589

land.lhs.true1435:                                ; preds = %if.else1433
  %730 = load i32, i32* %src_related_cost, align 4, !dbg !6590
  %731 = load i32, i32* %src_related_regcost, align 4, !dbg !6591
  %732 = load i32, i32* %src_elt_cost, align 4, !dbg !6592
  %733 = load i32, i32* %src_elt_regcost, align 4, !dbg !6593
  %call1436 = call i32 @preferable(i32 %730, i32 %731, i32 %732, i32 %733), !dbg !6594
  %cmp1437 = icmp sle i32 %call1436, 0, !dbg !6595
  br i1 %cmp1437, label %if.then1439, label %if.else1440, !dbg !6596

if.then1439:                                      ; preds = %land.lhs.true1435
  %734 = load %struct.rtx_def*, %struct.rtx_def** %src_related, align 8, !dbg !6597
  store %struct.rtx_def* %734, %struct.rtx_def** %trial, align 8, !dbg !6598
  store i32 2147483647, i32* %src_related_cost, align 4, !dbg !6599
  br label %if.end1443, !dbg !6600

if.else1440:                                      ; preds = %land.lhs.true1435, %if.else1433
  %735 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !6601
  %exp1441 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %735, i32 0, i32 0, !dbg !6603
  %736 = load %struct.rtx_def*, %struct.rtx_def** %exp1441, align 8, !dbg !6603
  store %struct.rtx_def* %736, %struct.rtx_def** %trial, align 8, !dbg !6604
  %737 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !6605
  %next_same_value1442 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %737, i32 0, i32 4, !dbg !6606
  %738 = load %struct.table_elt*, %struct.table_elt** %next_same_value1442, align 8, !dbg !6606
  store %struct.table_elt* %738, %struct.table_elt** %elt, align 8, !dbg !6607
  store i32 2147483647, i32* %src_elt_cost, align 4, !dbg !6608
  br label %if.end1443

if.end1443:                                       ; preds = %if.else1440, %if.then1439
  br label %if.end1444

if.end1444:                                       ; preds = %if.end1443, %if.then1432
  br label %if.end1445

if.end1445:                                       ; preds = %if.end1444, %if.then1421
  br label %if.end1446

if.end1446:                                       ; preds = %if.end1445, %if.end1406
  %739 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8, !dbg !6609
  %740 = bitcast %struct.rtx_def* %739 to i32*, !dbg !6609
  %bf.load1447 = load i32, i32* %740, align 8, !dbg !6609
  %bf.clear1448 = and i32 %bf.load1447, 65535, !dbg !6609
  %cmp1449 = icmp eq i32 %bf.clear1448, 43, !dbg !6609
  br i1 %cmp1449, label %land.lhs.true1451, label %if.end1496, !dbg !6611

land.lhs.true1451:                                ; preds = %if.end1446
  %741 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6612
  %742 = load i32, i32* %i, align 4, !dbg !6612
  %idxprom1452 = sext i32 %742 to i64, !dbg !6612
  %arrayidx1453 = getelementptr inbounds %struct.set, %struct.set* %741, i64 %idxprom1452, !dbg !6612
  %rtl1454 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1453, i32 0, i32 0, !dbg !6612
  %743 = load %struct.rtx_def*, %struct.rtx_def** %rtl1454, align 8, !dbg !6612
  %u1455 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %743, i32 0, i32 1, !dbg !6612
  %fld1456 = bitcast %union.u* %u1455 to [1 x %union.rtunion_def]*, !dbg !6612
  %arrayidx1457 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1456, i64 0, i64 0, !dbg !6612
  %rt_rtx1458 = bitcast %union.rtunion_def* %arrayidx1457 to %struct.rtx_def**, !dbg !6612
  %744 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1458, align 8, !dbg !6612
  %745 = bitcast %struct.rtx_def* %744 to i32*, !dbg !6612
  %bf.load1459 = load i32, i32* %745, align 8, !dbg !6612
  %bf.clear1460 = and i32 %bf.load1459, 65535, !dbg !6612
  %cmp1461 = icmp eq i32 %bf.clear1460, 43, !dbg !6612
  br i1 %cmp1461, label %if.then1463, label %if.end1496, !dbg !6613

if.then1463:                                      ; preds = %land.lhs.true1451
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %src1464, metadata !6614, metadata !DIExpression()), !dbg !6616
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dest1465, metadata !6617, metadata !DIExpression()), !dbg !6618
  %746 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8, !dbg !6619
  %747 = bitcast %struct.rtx_def* %746 to i32*, !dbg !6619
  %bf.load1466 = load i32, i32* %747, align 8, !dbg !6619
  %bf.lshr1467 = lshr i32 %bf.load1466, 16, !dbg !6619
  %bf.clear1468 = and i32 %bf.lshr1467, 255, !dbg !6619
  %cmp1469 = icmp eq i32 %bf.clear1468, 1, !dbg !6621
  br i1 %cmp1469, label %if.then1471, label %if.end1472, !dbg !6622

if.then1471:                                      ; preds = %if.then1463
  br label %while.end1922, !dbg !6623

if.end1472:                                       ; preds = %if.then1463
  %748 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8, !dbg !6624
  %call1473 = call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %748), !dbg !6625
  store %struct.rtx_def* %call1473, %struct.rtx_def** %src1464, align 8, !dbg !6626
  %749 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6627
  %750 = load i32, i32* %i, align 4, !dbg !6627
  %idxprom1474 = sext i32 %750 to i64, !dbg !6627
  %arrayidx1475 = getelementptr inbounds %struct.set, %struct.set* %749, i64 %idxprom1474, !dbg !6627
  %rtl1476 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1475, i32 0, i32 0, !dbg !6627
  %751 = load %struct.rtx_def*, %struct.rtx_def** %rtl1476, align 8, !dbg !6627
  %u1477 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %751, i32 0, i32 1, !dbg !6627
  %fld1478 = bitcast %union.u* %u1477 to [1 x %union.rtunion_def]*, !dbg !6627
  %arrayidx1479 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1478, i64 0, i64 0, !dbg !6627
  %rt_rtx1480 = bitcast %union.rtunion_def* %arrayidx1479 to %struct.rtx_def**, !dbg !6627
  %752 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1480, align 8, !dbg !6627
  %call1481 = call %struct.rtx_def* @canon_rtx(%struct.rtx_def* %752), !dbg !6628
  store %struct.rtx_def* %call1481, %struct.rtx_def** %dest1465, align 8, !dbg !6629
  %753 = load %struct.rtx_def*, %struct.rtx_def** %src1464, align 8, !dbg !6630
  %754 = bitcast %struct.rtx_def* %753 to i32*, !dbg !6630
  %bf.load1482 = load i32, i32* %754, align 8, !dbg !6630
  %bf.clear1483 = and i32 %bf.load1482, 65535, !dbg !6630
  %cmp1484 = icmp eq i32 %bf.clear1483, 43, !dbg !6630
  br i1 %cmp1484, label %lor.lhs.false1486, label %if.then1494, !dbg !6632

lor.lhs.false1486:                                ; preds = %if.end1472
  %755 = load %struct.rtx_def*, %struct.rtx_def** %dest1465, align 8, !dbg !6633
  %756 = bitcast %struct.rtx_def* %755 to i32*, !dbg !6633
  %bf.load1487 = load i32, i32* %756, align 8, !dbg !6633
  %bf.clear1488 = and i32 %bf.load1487, 65535, !dbg !6633
  %cmp1489 = icmp eq i32 %bf.clear1488, 43, !dbg !6633
  br i1 %cmp1489, label %lor.lhs.false1491, label %if.then1494, !dbg !6634

lor.lhs.false1491:                                ; preds = %lor.lhs.false1486
  %757 = load %struct.rtx_def*, %struct.rtx_def** %src1464, align 8, !dbg !6635
  %758 = load %struct.rtx_def*, %struct.rtx_def** %dest1465, align 8, !dbg !6636
  %call1492 = call i32 @nonoverlapping_memrefs_p(%struct.rtx_def* %757, %struct.rtx_def* %758), !dbg !6637
  %tobool1493 = icmp ne i32 %call1492, 0, !dbg !6637
  br i1 %tobool1493, label %if.end1495, label %if.then1494, !dbg !6638

if.then1494:                                      ; preds = %lor.lhs.false1491, %lor.lhs.false1486, %if.end1472
  br label %while.end1922, !dbg !6639

if.end1495:                                       ; preds = %lor.lhs.false1491
  br label %if.end1496, !dbg !6640

if.end1496:                                       ; preds = %if.end1495, %land.lhs.true1451, %if.end1446
  %759 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6641
  %760 = load i32, i32* %i, align 4, !dbg !6641
  %idxprom1497 = sext i32 %760 to i64, !dbg !6641
  %arrayidx1498 = getelementptr inbounds %struct.set, %struct.set* %759, i64 %idxprom1497, !dbg !6641
  %rtl1499 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1498, i32 0, i32 0, !dbg !6641
  %761 = load %struct.rtx_def*, %struct.rtx_def** %rtl1499, align 8, !dbg !6641
  %u1500 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %761, i32 0, i32 1, !dbg !6641
  %fld1501 = bitcast %union.u* %u1500 to [1 x %union.rtunion_def]*, !dbg !6641
  %arrayidx1502 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1501, i64 0, i64 0, !dbg !6641
  %rt_rtx1503 = bitcast %union.rtunion_def* %arrayidx1502 to %struct.rtx_def**, !dbg !6641
  %762 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1503, align 8, !dbg !6641
  %763 = bitcast %struct.rtx_def* %762 to i32*, !dbg !6641
  %bf.load1504 = load i32, i32* %763, align 8, !dbg !6641
  %bf.clear1505 = and i32 %bf.load1504, 65535, !dbg !6641
  %cmp1506 = icmp eq i32 %bf.clear1505, 120, !dbg !6643
  br i1 %cmp1506, label %land.lhs.true1508, label %if.end1767, !dbg !6644

land.lhs.true1508:                                ; preds = %if.end1496
  %764 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8, !dbg !6645
  %765 = bitcast %struct.rtx_def* %764 to i32*, !dbg !6645
  %bf.load1509 = load i32, i32* %765, align 8, !dbg !6645
  %bf.clear1510 = and i32 %bf.load1509, 65535, !dbg !6645
  %cmp1511 = icmp eq i32 %bf.clear1510, 30, !dbg !6645
  br i1 %cmp1511, label %land.lhs.true1513, label %if.end1767, !dbg !6646

land.lhs.true1513:                                ; preds = %land.lhs.true1508
  %766 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6647
  %767 = load i32, i32* %i, align 4, !dbg !6647
  %idxprom1514 = sext i32 %767 to i64, !dbg !6647
  %arrayidx1515 = getelementptr inbounds %struct.set, %struct.set* %766, i64 %idxprom1514, !dbg !6647
  %rtl1516 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1515, i32 0, i32 0, !dbg !6647
  %768 = load %struct.rtx_def*, %struct.rtx_def** %rtl1516, align 8, !dbg !6647
  %u1517 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %768, i32 0, i32 1, !dbg !6647
  %fld1518 = bitcast %union.u* %u1517 to [1 x %union.rtunion_def]*, !dbg !6647
  %arrayidx1519 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1518, i64 0, i64 0, !dbg !6647
  %rt_rtx1520 = bitcast %union.rtunion_def* %arrayidx1519 to %struct.rtx_def**, !dbg !6647
  %769 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1520, align 8, !dbg !6647
  %u1521 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %769, i32 0, i32 1, !dbg !6647
  %fld1522 = bitcast %union.u* %u1521 to [1 x %union.rtunion_def]*, !dbg !6647
  %arrayidx1523 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1522, i64 0, i64 1, !dbg !6647
  %rt_rtx1524 = bitcast %union.rtunion_def* %arrayidx1523 to %struct.rtx_def**, !dbg !6647
  %770 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1524, align 8, !dbg !6647
  %771 = bitcast %struct.rtx_def* %770 to i32*, !dbg !6647
  %bf.load1525 = load i32, i32* %771, align 8, !dbg !6647
  %bf.clear1526 = and i32 %bf.load1525, 65535, !dbg !6647
  %cmp1527 = icmp eq i32 %bf.clear1526, 30, !dbg !6647
  br i1 %cmp1527, label %land.lhs.true1529, label %if.end1767, !dbg !6648

land.lhs.true1529:                                ; preds = %land.lhs.true1513
  %772 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6649
  %773 = load i32, i32* %i, align 4, !dbg !6649
  %idxprom1530 = sext i32 %773 to i64, !dbg !6649
  %arrayidx1531 = getelementptr inbounds %struct.set, %struct.set* %772, i64 %idxprom1530, !dbg !6649
  %rtl1532 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1531, i32 0, i32 0, !dbg !6649
  %774 = load %struct.rtx_def*, %struct.rtx_def** %rtl1532, align 8, !dbg !6649
  %u1533 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %774, i32 0, i32 1, !dbg !6649
  %fld1534 = bitcast %union.u* %u1533 to [1 x %union.rtunion_def]*, !dbg !6649
  %arrayidx1535 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1534, i64 0, i64 0, !dbg !6649
  %rt_rtx1536 = bitcast %union.rtunion_def* %arrayidx1535 to %struct.rtx_def**, !dbg !6649
  %775 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1536, align 8, !dbg !6649
  %u1537 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %775, i32 0, i32 1, !dbg !6649
  %fld1538 = bitcast %union.u* %u1537 to [1 x %union.rtunion_def]*, !dbg !6649
  %arrayidx1539 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1538, i64 0, i64 2, !dbg !6649
  %rt_rtx1540 = bitcast %union.rtunion_def* %arrayidx1539 to %struct.rtx_def**, !dbg !6649
  %776 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1540, align 8, !dbg !6649
  %777 = bitcast %struct.rtx_def* %776 to i32*, !dbg !6649
  %bf.load1541 = load i32, i32* %777, align 8, !dbg !6649
  %bf.clear1542 = and i32 %bf.load1541, 65535, !dbg !6649
  %cmp1543 = icmp eq i32 %bf.clear1542, 30, !dbg !6649
  br i1 %cmp1543, label %land.lhs.true1545, label %if.end1767, !dbg !6650

land.lhs.true1545:                                ; preds = %land.lhs.true1529
  %778 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6651
  %779 = load i32, i32* %i, align 4, !dbg !6651
  %idxprom1546 = sext i32 %779 to i64, !dbg !6651
  %arrayidx1547 = getelementptr inbounds %struct.set, %struct.set* %778, i64 %idxprom1546, !dbg !6651
  %rtl1548 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1547, i32 0, i32 0, !dbg !6651
  %780 = load %struct.rtx_def*, %struct.rtx_def** %rtl1548, align 8, !dbg !6651
  %u1549 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %780, i32 0, i32 1, !dbg !6651
  %fld1550 = bitcast %union.u* %u1549 to [1 x %union.rtunion_def]*, !dbg !6651
  %arrayidx1551 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1550, i64 0, i64 0, !dbg !6651
  %rt_rtx1552 = bitcast %union.rtunion_def* %arrayidx1551 to %struct.rtx_def**, !dbg !6651
  %781 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1552, align 8, !dbg !6651
  %u1553 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %781, i32 0, i32 1, !dbg !6651
  %fld1554 = bitcast %union.u* %u1553 to [1 x %union.rtunion_def]*, !dbg !6651
  %arrayidx1555 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1554, i64 0, i64 0, !dbg !6651
  %rt_rtx1556 = bitcast %union.rtunion_def* %arrayidx1555 to %struct.rtx_def**, !dbg !6651
  %782 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1556, align 8, !dbg !6651
  %783 = bitcast %struct.rtx_def* %782 to i32*, !dbg !6651
  %bf.load1557 = load i32, i32* %783, align 8, !dbg !6651
  %bf.clear1558 = and i32 %bf.load1557, 65535, !dbg !6651
  %cmp1559 = icmp eq i32 %bf.clear1558, 37, !dbg !6651
  br i1 %cmp1559, label %land.lhs.true1561, label %if.end1767, !dbg !6652

land.lhs.true1561:                                ; preds = %land.lhs.true1545
  %784 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6653
  %785 = load i32, i32* %i, align 4, !dbg !6653
  %idxprom1562 = sext i32 %785 to i64, !dbg !6653
  %arrayidx1563 = getelementptr inbounds %struct.set, %struct.set* %784, i64 %idxprom1562, !dbg !6653
  %rtl1564 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1563, i32 0, i32 0, !dbg !6653
  %786 = load %struct.rtx_def*, %struct.rtx_def** %rtl1564, align 8, !dbg !6653
  %u1565 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %786, i32 0, i32 1, !dbg !6653
  %fld1566 = bitcast %union.u* %u1565 to [1 x %union.rtunion_def]*, !dbg !6653
  %arrayidx1567 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1566, i64 0, i64 0, !dbg !6653
  %rt_rtx1568 = bitcast %union.rtunion_def* %arrayidx1567 to %struct.rtx_def**, !dbg !6653
  %787 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1568, align 8, !dbg !6653
  %788 = bitcast %struct.rtx_def* %787 to i32*, !dbg !6653
  %bf.load1569 = load i32, i32* %788, align 8, !dbg !6653
  %bf.lshr1570 = lshr i32 %bf.load1569, 16, !dbg !6653
  %bf.clear1571 = and i32 %bf.lshr1570, 255, !dbg !6653
  %idxprom1572 = zext i32 %bf.clear1571 to i64, !dbg !6653
  %arrayidx1573 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1572, !dbg !6653
  %789 = load i8, i8* %arrayidx1573, align 1, !dbg !6653
  %conv1574 = zext i8 %789 to i16, !dbg !6653
  %conv1575 = zext i16 %conv1574 to i32, !dbg !6653
  %mul1576 = mul nsw i32 %conv1575, 8, !dbg !6653
  %conv1577 = trunc i32 %mul1576 to i16, !dbg !6653
  %conv1578 = zext i16 %conv1577 to i64, !dbg !6653
  %790 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6654
  %791 = load i32, i32* %i, align 4, !dbg !6654
  %idxprom1579 = sext i32 %791 to i64, !dbg !6654
  %arrayidx1580 = getelementptr inbounds %struct.set, %struct.set* %790, i64 %idxprom1579, !dbg !6654
  %rtl1581 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1580, i32 0, i32 0, !dbg !6654
  %792 = load %struct.rtx_def*, %struct.rtx_def** %rtl1581, align 8, !dbg !6654
  %u1582 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %792, i32 0, i32 1, !dbg !6654
  %fld1583 = bitcast %union.u* %u1582 to [1 x %union.rtunion_def]*, !dbg !6654
  %arrayidx1584 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1583, i64 0, i64 0, !dbg !6654
  %rt_rtx1585 = bitcast %union.rtunion_def* %arrayidx1584 to %struct.rtx_def**, !dbg !6654
  %793 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1585, align 8, !dbg !6654
  %u1586 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %793, i32 0, i32 1, !dbg !6654
  %fld1587 = bitcast %union.u* %u1586 to [1 x %union.rtunion_def]*, !dbg !6654
  %arrayidx1588 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1587, i64 0, i64 1, !dbg !6654
  %rt_rtx1589 = bitcast %union.rtunion_def* %arrayidx1588 to %struct.rtx_def**, !dbg !6654
  %794 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1589, align 8, !dbg !6654
  %u1590 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %794, i32 0, i32 1, !dbg !6654
  %hwint = bitcast %union.u* %u1590 to [1 x i64]*, !dbg !6654
  %arrayidx1591 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !6654
  %795 = load i64, i64* %arrayidx1591, align 8, !dbg !6654
  %cmp1592 = icmp sge i64 %conv1578, %795, !dbg !6655
  br i1 %cmp1592, label %land.lhs.true1594, label %if.end1767, !dbg !6656

land.lhs.true1594:                                ; preds = %land.lhs.true1561
  %796 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6657
  %797 = load i32, i32* %i, align 4, !dbg !6657
  %idxprom1595 = sext i32 %797 to i64, !dbg !6657
  %arrayidx1596 = getelementptr inbounds %struct.set, %struct.set* %796, i64 %idxprom1595, !dbg !6657
  %rtl1597 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1596, i32 0, i32 0, !dbg !6657
  %798 = load %struct.rtx_def*, %struct.rtx_def** %rtl1597, align 8, !dbg !6657
  %u1598 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %798, i32 0, i32 1, !dbg !6657
  %fld1599 = bitcast %union.u* %u1598 to [1 x %union.rtunion_def]*, !dbg !6657
  %arrayidx1600 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1599, i64 0, i64 0, !dbg !6657
  %rt_rtx1601 = bitcast %union.rtunion_def* %arrayidx1600 to %struct.rtx_def**, !dbg !6657
  %799 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1601, align 8, !dbg !6657
  %u1602 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %799, i32 0, i32 1, !dbg !6657
  %fld1603 = bitcast %union.u* %u1602 to [1 x %union.rtunion_def]*, !dbg !6657
  %arrayidx1604 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1603, i64 0, i64 1, !dbg !6657
  %rt_rtx1605 = bitcast %union.rtunion_def* %arrayidx1604 to %struct.rtx_def**, !dbg !6657
  %800 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1605, align 8, !dbg !6657
  %u1606 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %800, i32 0, i32 1, !dbg !6657
  %hwint1607 = bitcast %union.u* %u1606 to [1 x i64]*, !dbg !6657
  %arrayidx1608 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1607, i64 0, i64 0, !dbg !6657
  %801 = load i64, i64* %arrayidx1608, align 8, !dbg !6657
  %conv1609 = trunc i64 %801 to i32, !dbg !6658
  %802 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6659
  %803 = load i32, i32* %i, align 4, !dbg !6659
  %idxprom1610 = sext i32 %803 to i64, !dbg !6659
  %arrayidx1611 = getelementptr inbounds %struct.set, %struct.set* %802, i64 %idxprom1610, !dbg !6659
  %rtl1612 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1611, i32 0, i32 0, !dbg !6659
  %804 = load %struct.rtx_def*, %struct.rtx_def** %rtl1612, align 8, !dbg !6659
  %u1613 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %804, i32 0, i32 1, !dbg !6659
  %fld1614 = bitcast %union.u* %u1613 to [1 x %union.rtunion_def]*, !dbg !6659
  %arrayidx1615 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1614, i64 0, i64 0, !dbg !6659
  %rt_rtx1616 = bitcast %union.rtunion_def* %arrayidx1615 to %struct.rtx_def**, !dbg !6659
  %805 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1616, align 8, !dbg !6659
  %u1617 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %805, i32 0, i32 1, !dbg !6659
  %fld1618 = bitcast %union.u* %u1617 to [1 x %union.rtunion_def]*, !dbg !6659
  %arrayidx1619 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1618, i64 0, i64 2, !dbg !6659
  %rt_rtx1620 = bitcast %union.rtunion_def* %arrayidx1619 to %struct.rtx_def**, !dbg !6659
  %806 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1620, align 8, !dbg !6659
  %u1621 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %806, i32 0, i32 1, !dbg !6659
  %hwint1622 = bitcast %union.u* %u1621 to [1 x i64]*, !dbg !6659
  %arrayidx1623 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1622, i64 0, i64 0, !dbg !6659
  %807 = load i64, i64* %arrayidx1623, align 8, !dbg !6659
  %conv1624 = trunc i64 %807 to i32, !dbg !6660
  %add1625 = add i32 %conv1609, %conv1624, !dbg !6661
  %cmp1626 = icmp ule i32 %add1625, 64, !dbg !6662
  br i1 %cmp1626, label %if.then1628, label %if.end1767, !dbg !6663

if.then1628:                                      ; preds = %land.lhs.true1594
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dest_reg, metadata !6664, metadata !DIExpression()), !dbg !6666
  %808 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6667
  %809 = load i32, i32* %i, align 4, !dbg !6667
  %idxprom1629 = sext i32 %809 to i64, !dbg !6667
  %arrayidx1630 = getelementptr inbounds %struct.set, %struct.set* %808, i64 %idxprom1629, !dbg !6667
  %rtl1631 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1630, i32 0, i32 0, !dbg !6667
  %810 = load %struct.rtx_def*, %struct.rtx_def** %rtl1631, align 8, !dbg !6667
  %u1632 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %810, i32 0, i32 1, !dbg !6667
  %fld1633 = bitcast %union.u* %u1632 to [1 x %union.rtunion_def]*, !dbg !6667
  %arrayidx1634 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1633, i64 0, i64 0, !dbg !6667
  %rt_rtx1635 = bitcast %union.rtunion_def* %arrayidx1634 to %struct.rtx_def**, !dbg !6667
  %811 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1635, align 8, !dbg !6667
  %u1636 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %811, i32 0, i32 1, !dbg !6667
  %fld1637 = bitcast %union.u* %u1636 to [1 x %union.rtunion_def]*, !dbg !6667
  %arrayidx1638 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1637, i64 0, i64 0, !dbg !6667
  %rt_rtx1639 = bitcast %union.rtunion_def* %arrayidx1638 to %struct.rtx_def**, !dbg !6667
  %812 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1639, align 8, !dbg !6667
  store %struct.rtx_def* %812, %struct.rtx_def** %dest_reg, align 8, !dbg !6666
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %width, metadata !6668, metadata !DIExpression()), !dbg !6669
  %813 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6670
  %814 = load i32, i32* %i, align 4, !dbg !6670
  %idxprom1640 = sext i32 %814 to i64, !dbg !6670
  %arrayidx1641 = getelementptr inbounds %struct.set, %struct.set* %813, i64 %idxprom1640, !dbg !6670
  %rtl1642 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1641, i32 0, i32 0, !dbg !6670
  %815 = load %struct.rtx_def*, %struct.rtx_def** %rtl1642, align 8, !dbg !6670
  %u1643 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %815, i32 0, i32 1, !dbg !6670
  %fld1644 = bitcast %union.u* %u1643 to [1 x %union.rtunion_def]*, !dbg !6670
  %arrayidx1645 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1644, i64 0, i64 0, !dbg !6670
  %rt_rtx1646 = bitcast %union.rtunion_def* %arrayidx1645 to %struct.rtx_def**, !dbg !6670
  %816 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1646, align 8, !dbg !6670
  %u1647 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %816, i32 0, i32 1, !dbg !6670
  %fld1648 = bitcast %union.u* %u1647 to [1 x %union.rtunion_def]*, !dbg !6670
  %arrayidx1649 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1648, i64 0, i64 1, !dbg !6670
  %rt_rtx1650 = bitcast %union.rtunion_def* %arrayidx1649 to %struct.rtx_def**, !dbg !6670
  %817 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1650, align 8, !dbg !6670
  store %struct.rtx_def* %817, %struct.rtx_def** %width, align 8, !dbg !6669
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pos, metadata !6671, metadata !DIExpression()), !dbg !6672
  %818 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6673
  %819 = load i32, i32* %i, align 4, !dbg !6673
  %idxprom1651 = sext i32 %819 to i64, !dbg !6673
  %arrayidx1652 = getelementptr inbounds %struct.set, %struct.set* %818, i64 %idxprom1651, !dbg !6673
  %rtl1653 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1652, i32 0, i32 0, !dbg !6673
  %820 = load %struct.rtx_def*, %struct.rtx_def** %rtl1653, align 8, !dbg !6673
  %u1654 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %820, i32 0, i32 1, !dbg !6673
  %fld1655 = bitcast %union.u* %u1654 to [1 x %union.rtunion_def]*, !dbg !6673
  %arrayidx1656 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1655, i64 0, i64 0, !dbg !6673
  %rt_rtx1657 = bitcast %union.rtunion_def* %arrayidx1656 to %struct.rtx_def**, !dbg !6673
  %821 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1657, align 8, !dbg !6673
  %u1658 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %821, i32 0, i32 1, !dbg !6673
  %fld1659 = bitcast %union.u* %u1658 to [1 x %union.rtunion_def]*, !dbg !6673
  %arrayidx1660 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1659, i64 0, i64 2, !dbg !6673
  %rt_rtx1661 = bitcast %union.rtunion_def* %arrayidx1660 to %struct.rtx_def**, !dbg !6673
  %822 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1661, align 8, !dbg !6673
  store %struct.rtx_def* %822, %struct.rtx_def** %pos, align 8, !dbg !6672
  call void @llvm.dbg.declare(metadata i32* %dest_hash, metadata !6674, metadata !DIExpression()), !dbg !6675
  %823 = load %struct.rtx_def*, %struct.rtx_def** %dest_reg, align 8, !dbg !6676
  %824 = bitcast %struct.rtx_def* %823 to i32*, !dbg !6676
  %bf.load1662 = load i32, i32* %824, align 8, !dbg !6676
  %bf.clear1663 = and i32 %bf.load1662, 65535, !dbg !6676
  %cmp1664 = icmp eq i32 %bf.clear1663, 37, !dbg !6676
  br i1 %cmp1664, label %land.lhs.true1666, label %cond.false1675, !dbg !6676

land.lhs.true1666:                                ; preds = %if.then1628
  %825 = load %struct.rtx_def*, %struct.rtx_def** %dest_reg, align 8, !dbg !6676
  %call1667 = call i32 @rhs_regno(%struct.rtx_def* %825), !dbg !6676
  %cmp1668 = icmp uge i32 %call1667, 53, !dbg !6676
  br i1 %cmp1668, label %cond.true1670, label %cond.false1675, !dbg !6676

cond.true1670:                                    ; preds = %land.lhs.true1666
  %826 = load %struct.rtx_def*, %struct.rtx_def** %dest_reg, align 8, !dbg !6676
  %call1671 = call i32 @rhs_regno(%struct.rtx_def* %826), !dbg !6676
  %call1672 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call1671), !dbg !6676
  %reg_qty1673 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call1672, i32 0, i32 1, !dbg !6676
  %827 = load i32, i32* %reg_qty1673, align 4, !dbg !6676
  %add1674 = add i32 4736, %827, !dbg !6676
  br label %cond.end1680, !dbg !6676

cond.false1675:                                   ; preds = %land.lhs.true1666, %if.then1628
  %828 = load %struct.rtx_def*, %struct.rtx_def** %dest_reg, align 8, !dbg !6676
  %829 = load %struct.rtx_def*, %struct.rtx_def** %dest_reg, align 8, !dbg !6676
  %830 = bitcast %struct.rtx_def* %829 to i32*, !dbg !6676
  %bf.load1676 = load i32, i32* %830, align 8, !dbg !6676
  %bf.lshr1677 = lshr i32 %bf.load1676, 16, !dbg !6676
  %bf.clear1678 = and i32 %bf.lshr1677, 255, !dbg !6676
  %call1679 = call i32 @canon_hash(%struct.rtx_def* %828, i32 %bf.clear1678), !dbg !6676
  br label %cond.end1680, !dbg !6676

cond.end1680:                                     ; preds = %cond.false1675, %cond.true1670
  %cond1681 = phi i32 [ %add1674, %cond.true1670 ], [ %call1679, %cond.false1675 ], !dbg !6676
  %and1682 = and i32 %cond1681, 31, !dbg !6676
  store i32 %and1682, i32* %dest_hash, align 4, !dbg !6675
  call void @llvm.dbg.declare(metadata %struct.table_elt** %dest_elt, metadata !6677, metadata !DIExpression()), !dbg !6678
  %831 = load %struct.rtx_def*, %struct.rtx_def** %dest_reg, align 8, !dbg !6679
  %832 = load i32, i32* %dest_hash, align 4, !dbg !6680
  %833 = load %struct.rtx_def*, %struct.rtx_def** %dest_reg, align 8, !dbg !6681
  %834 = bitcast %struct.rtx_def* %833 to i32*, !dbg !6681
  %bf.load1683 = load i32, i32* %834, align 8, !dbg !6681
  %bf.lshr1684 = lshr i32 %bf.load1683, 16, !dbg !6681
  %bf.clear1685 = and i32 %bf.lshr1684, 255, !dbg !6681
  %call1686 = call %struct.table_elt* @lookup(%struct.rtx_def* %831, i32 %832, i32 %bf.clear1685), !dbg !6682
  store %struct.table_elt* %call1686, %struct.table_elt** %dest_elt, align 8, !dbg !6678
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dest_cst, metadata !6683, metadata !DIExpression()), !dbg !6684
  store %struct.rtx_def* null, %struct.rtx_def** %dest_cst, align 8, !dbg !6684
  %835 = load %struct.table_elt*, %struct.table_elt** %dest_elt, align 8, !dbg !6685
  %tobool1687 = icmp ne %struct.table_elt* %835, null, !dbg !6685
  br i1 %tobool1687, label %if.then1688, label %if.end1708, !dbg !6687

if.then1688:                                      ; preds = %cond.end1680
  %836 = load %struct.table_elt*, %struct.table_elt** %dest_elt, align 8, !dbg !6688
  %first_same_value1689 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %836, i32 0, i32 6, !dbg !6690
  %837 = load %struct.table_elt*, %struct.table_elt** %first_same_value1689, align 8, !dbg !6690
  store %struct.table_elt* %837, %struct.table_elt** %p, align 8, !dbg !6691
  br label %for.cond1690, !dbg !6692

for.cond1690:                                     ; preds = %for.inc1705, %if.then1688
  %838 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !6693
  %tobool1691 = icmp ne %struct.table_elt* %838, null, !dbg !6695
  br i1 %tobool1691, label %for.body1692, label %for.end1707, !dbg !6695

for.body1692:                                     ; preds = %for.cond1690
  %839 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !6696
  %is_const1693 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %839, i32 0, i32 12, !dbg !6698
  %840 = load i8, i8* %is_const1693, align 2, !dbg !6698
  %conv1694 = sext i8 %840 to i32, !dbg !6696
  %tobool1695 = icmp ne i32 %conv1694, 0, !dbg !6696
  br i1 %tobool1695, label %land.lhs.true1696, label %if.end1704, !dbg !6699

land.lhs.true1696:                                ; preds = %for.body1692
  %841 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !6700
  %exp1697 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %841, i32 0, i32 0, !dbg !6700
  %842 = load %struct.rtx_def*, %struct.rtx_def** %exp1697, align 8, !dbg !6700
  %843 = bitcast %struct.rtx_def* %842 to i32*, !dbg !6700
  %bf.load1698 = load i32, i32* %843, align 8, !dbg !6700
  %bf.clear1699 = and i32 %bf.load1698, 65535, !dbg !6700
  %cmp1700 = icmp eq i32 %bf.clear1699, 30, !dbg !6700
  br i1 %cmp1700, label %if.then1702, label %if.end1704, !dbg !6701

if.then1702:                                      ; preds = %land.lhs.true1696
  %844 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !6702
  %exp1703 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %844, i32 0, i32 0, !dbg !6704
  %845 = load %struct.rtx_def*, %struct.rtx_def** %exp1703, align 8, !dbg !6704
  store %struct.rtx_def* %845, %struct.rtx_def** %dest_cst, align 8, !dbg !6705
  br label %for.end1707, !dbg !6706

if.end1704:                                       ; preds = %land.lhs.true1696, %for.body1692
  br label %for.inc1705, !dbg !6700

for.inc1705:                                      ; preds = %if.end1704
  %846 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !6707
  %next_same_value1706 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %846, i32 0, i32 4, !dbg !6708
  %847 = load %struct.table_elt*, %struct.table_elt** %next_same_value1706, align 8, !dbg !6708
  store %struct.table_elt* %847, %struct.table_elt** %p, align 8, !dbg !6709
  br label %for.cond1690, !dbg !6710, !llvm.loop !6711

for.end1707:                                      ; preds = %if.then1702, %for.cond1690
  br label %if.end1708, !dbg !6712

if.end1708:                                       ; preds = %for.end1707, %cond.end1680
  %848 = load %struct.rtx_def*, %struct.rtx_def** %dest_cst, align 8, !dbg !6713
  %tobool1709 = icmp ne %struct.rtx_def* %848, null, !dbg !6713
  br i1 %tobool1709, label %if.then1710, label %if.end1766, !dbg !6715

if.then1710:                                      ; preds = %if.end1708
  call void @llvm.dbg.declare(metadata i64* %val, metadata !6716, metadata !DIExpression()), !dbg !6718
  %849 = load %struct.rtx_def*, %struct.rtx_def** %dest_cst, align 8, !dbg !6719
  %u1711 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %849, i32 0, i32 1, !dbg !6719
  %hwint1712 = bitcast %union.u* %u1711 to [1 x i64]*, !dbg !6719
  %arrayidx1713 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1712, i64 0, i64 0, !dbg !6719
  %850 = load i64, i64* %arrayidx1713, align 8, !dbg !6719
  store i64 %850, i64* %val, align 8, !dbg !6718
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !6720, metadata !DIExpression()), !dbg !6721
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !6722, metadata !DIExpression()), !dbg !6723
  %851 = load %struct.rtx_def*, %struct.rtx_def** %pos, align 8, !dbg !6724
  %u1714 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %851, i32 0, i32 1, !dbg !6724
  %hwint1715 = bitcast %union.u* %u1714 to [1 x i64]*, !dbg !6724
  %arrayidx1716 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1715, i64 0, i64 0, !dbg !6724
  %852 = load i64, i64* %arrayidx1716, align 8, !dbg !6724
  %conv1717 = trunc i64 %852 to i32, !dbg !6724
  store i32 %conv1717, i32* %shift, align 4, !dbg !6726
  %853 = load %struct.rtx_def*, %struct.rtx_def** %width, align 8, !dbg !6727
  %u1718 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %853, i32 0, i32 1, !dbg !6727
  %hwint1719 = bitcast %union.u* %u1718 to [1 x i64]*, !dbg !6727
  %arrayidx1720 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1719, i64 0, i64 0, !dbg !6727
  %854 = load i64, i64* %arrayidx1720, align 8, !dbg !6727
  %cmp1721 = icmp eq i64 %854, 64, !dbg !6729
  br i1 %cmp1721, label %if.then1723, label %if.else1724, !dbg !6730

if.then1723:                                      ; preds = %if.then1710
  store i64 -1, i64* %mask, align 8, !dbg !6731
  br label %if.end1728, !dbg !6732

if.else1724:                                      ; preds = %if.then1710
  %855 = load %struct.rtx_def*, %struct.rtx_def** %width, align 8, !dbg !6733
  %u1725 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %855, i32 0, i32 1, !dbg !6733
  %hwint1726 = bitcast %union.u* %u1725 to [1 x i64]*, !dbg !6733
  %arrayidx1727 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1726, i64 0, i64 0, !dbg !6733
  %856 = load i64, i64* %arrayidx1727, align 8, !dbg !6733
  %shl = shl i64 1, %856, !dbg !6734
  %sub = sub nsw i64 %shl, 1, !dbg !6735
  store i64 %sub, i64* %mask, align 8, !dbg !6736
  br label %if.end1728

if.end1728:                                       ; preds = %if.else1724, %if.then1723
  %857 = load i64, i64* %mask, align 8, !dbg !6737
  %858 = load i32, i32* %shift, align 4, !dbg !6738
  %sh_prom = zext i32 %858 to i64, !dbg !6739
  %shl1729 = shl i64 %857, %sh_prom, !dbg !6739
  %neg = xor i64 %shl1729, -1, !dbg !6740
  %859 = load i64, i64* %val, align 8, !dbg !6741
  %and1730 = and i64 %859, %neg, !dbg !6741
  store i64 %and1730, i64* %val, align 8, !dbg !6741
  %860 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8, !dbg !6742
  %u1731 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %860, i32 0, i32 1, !dbg !6742
  %hwint1732 = bitcast %union.u* %u1731 to [1 x i64]*, !dbg !6742
  %arrayidx1733 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1732, i64 0, i64 0, !dbg !6742
  %861 = load i64, i64* %arrayidx1733, align 8, !dbg !6742
  %862 = load i64, i64* %mask, align 8, !dbg !6743
  %and1734 = and i64 %861, %862, !dbg !6744
  %863 = load i32, i32* %shift, align 4, !dbg !6745
  %sh_prom1735 = zext i32 %863 to i64, !dbg !6746
  %shl1736 = shl i64 %and1734, %sh_prom1735, !dbg !6746
  %864 = load i64, i64* %val, align 8, !dbg !6747
  %or = or i64 %864, %shl1736, !dbg !6747
  store i64 %or, i64* %val, align 8, !dbg !6747
  %865 = load i64, i64* %val, align 8, !dbg !6748
  %866 = load %struct.rtx_def*, %struct.rtx_def** %dest_reg, align 8, !dbg !6749
  %867 = bitcast %struct.rtx_def* %866 to i32*, !dbg !6749
  %bf.load1737 = load i32, i32* %867, align 8, !dbg !6749
  %bf.lshr1738 = lshr i32 %bf.load1737, 16, !dbg !6749
  %bf.clear1739 = and i32 %bf.lshr1738, 255, !dbg !6749
  %call1740 = call i64 @trunc_int_for_mode(i64 %865, i32 %bf.clear1739), !dbg !6750
  store i64 %call1740, i64* %val, align 8, !dbg !6751
  %868 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6752
  %869 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6753
  %870 = load i32, i32* %i, align 4, !dbg !6753
  %idxprom1741 = sext i32 %870 to i64, !dbg !6753
  %arrayidx1742 = getelementptr inbounds %struct.set, %struct.set* %869, i64 %idxprom1741, !dbg !6753
  %rtl1743 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1742, i32 0, i32 0, !dbg !6753
  %871 = load %struct.rtx_def*, %struct.rtx_def** %rtl1743, align 8, !dbg !6753
  %u1744 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %871, i32 0, i32 1, !dbg !6753
  %fld1745 = bitcast %union.u* %u1744 to [1 x %union.rtunion_def]*, !dbg !6753
  %arrayidx1746 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1745, i64 0, i64 0, !dbg !6753
  %rt_rtx1747 = bitcast %union.rtunion_def* %arrayidx1746 to %struct.rtx_def**, !dbg !6753
  %872 = load %struct.rtx_def*, %struct.rtx_def** %dest_reg, align 8, !dbg !6754
  %call1748 = call zeroext i8 @validate_unshare_change(%struct.rtx_def* %868, %struct.rtx_def** %rt_rtx1747, %struct.rtx_def* %872, i8 zeroext 1), !dbg !6755
  %873 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6756
  %874 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6757
  %875 = load i32, i32* %i, align 4, !dbg !6757
  %idxprom1749 = sext i32 %875 to i64, !dbg !6757
  %arrayidx1750 = getelementptr inbounds %struct.set, %struct.set* %874, i64 %idxprom1749, !dbg !6757
  %rtl1751 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1750, i32 0, i32 0, !dbg !6757
  %876 = load %struct.rtx_def*, %struct.rtx_def** %rtl1751, align 8, !dbg !6757
  %u1752 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %876, i32 0, i32 1, !dbg !6757
  %fld1753 = bitcast %union.u* %u1752 to [1 x %union.rtunion_def]*, !dbg !6757
  %arrayidx1754 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1753, i64 0, i64 1, !dbg !6757
  %rt_rtx1755 = bitcast %union.rtunion_def* %arrayidx1754 to %struct.rtx_def**, !dbg !6757
  %877 = load i64, i64* %val, align 8, !dbg !6758
  %call1756 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %877), !dbg !6758
  %call1757 = call zeroext i8 @validate_unshare_change(%struct.rtx_def* %873, %struct.rtx_def** %rt_rtx1755, %struct.rtx_def* %call1756, i8 zeroext 1), !dbg !6759
  %call1758 = call i32 @apply_change_group(), !dbg !6760
  %tobool1759 = icmp ne i32 %call1758, 0, !dbg !6760
  br i1 %tobool1759, label %if.then1760, label %if.end1765, !dbg !6762

if.then1760:                                      ; preds = %if.end1728
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %note, metadata !6763, metadata !DIExpression()), !dbg !6765
  %878 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6766
  %call1761 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %878, i32 4, %struct.rtx_def* null), !dbg !6767
  store %struct.rtx_def* %call1761, %struct.rtx_def** %note, align 8, !dbg !6765
  %879 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !6768
  %tobool1762 = icmp ne %struct.rtx_def* %879, null, !dbg !6768
  br i1 %tobool1762, label %if.then1763, label %if.end1764, !dbg !6770

if.then1763:                                      ; preds = %if.then1760
  %880 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6771
  %881 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !6773
  call void @remove_note(%struct.rtx_def* %880, %struct.rtx_def* %881), !dbg !6774
  %882 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6775
  call void @df_notes_rescan(%struct.rtx_def* %882), !dbg !6776
  br label %if.end1764, !dbg !6777

if.end1764:                                       ; preds = %if.then1763, %if.then1760
  store %struct.rtx_def* null, %struct.rtx_def** %src_eqv, align 8, !dbg !6778
  store %struct.table_elt* null, %struct.table_elt** %src_eqv_elt, align 8, !dbg !6779
  store i32 0, i32* %src_eqv_volatile, align 4, !dbg !6780
  store i32 0, i32* %src_eqv_in_memory, align 4, !dbg !6781
  store i32 0, i32* %src_eqv_hash, align 4, !dbg !6782
  store i8 1, i8* %repeat, align 1, !dbg !6783
  br label %while.end1922, !dbg !6784

if.end1765:                                       ; preds = %if.end1728
  br label %if.end1766, !dbg !6785

if.end1766:                                       ; preds = %if.end1765, %if.end1708
  br label %if.end1767, !dbg !6786

if.end1767:                                       ; preds = %if.end1766, %land.lhs.true1594, %land.lhs.true1561, %land.lhs.true1545, %land.lhs.true1529, %land.lhs.true1513, %land.lhs.true1508, %if.end1496
  %883 = load i32, i32* %n_sets, align 4, !dbg !6787
  %cmp1768 = icmp eq i32 %883, 1, !dbg !6789
  br i1 %cmp1768, label %land.lhs.true1770, label %if.else1803, !dbg !6790

land.lhs.true1770:                                ; preds = %if.end1767
  %884 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !6791
  %885 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !6792
  %cmp1771 = icmp eq %struct.rtx_def* %884, %885, !dbg !6793
  br i1 %cmp1771, label %land.lhs.true1773, label %if.else1803, !dbg !6794

land.lhs.true1773:                                ; preds = %land.lhs.true1770
  %886 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8, !dbg !6795
  %887 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !6796
  %cmp1774 = icmp eq %struct.rtx_def* %886, %887, !dbg !6797
  br i1 %cmp1774, label %if.then1784, label %lor.lhs.false1776, !dbg !6798

lor.lhs.false1776:                                ; preds = %land.lhs.true1773
  %888 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8, !dbg !6799
  %889 = bitcast %struct.rtx_def* %888 to i32*, !dbg !6799
  %bf.load1777 = load i32, i32* %889, align 8, !dbg !6799
  %bf.clear1778 = and i32 %bf.load1777, 65535, !dbg !6799
  %cmp1779 = icmp eq i32 %bf.clear1778, 44, !dbg !6800
  br i1 %cmp1779, label %land.lhs.true1781, label %if.else1803, !dbg !6801

land.lhs.true1781:                                ; preds = %lor.lhs.false1776
  %890 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6802
  %call1782 = call i32 @condjump_p(%struct.rtx_def* %890), !dbg !6803
  %tobool1783 = icmp ne i32 %call1782, 0, !dbg !6803
  br i1 %tobool1783, label %if.else1803, label %if.then1784, !dbg !6804

if.then1784:                                      ; preds = %land.lhs.true1781, %land.lhs.true1773
  %891 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8, !dbg !6805
  %892 = bitcast %struct.rtx_def* %891 to i32*, !dbg !6805
  %bf.load1785 = load i32, i32* %892, align 8, !dbg !6805
  %bf.clear1786 = and i32 %bf.load1785, 65535, !dbg !6805
  %cmp1787 = icmp eq i32 %bf.clear1786, 44, !dbg !6808
  br i1 %cmp1787, label %land.lhs.true1789, label %if.end1795, !dbg !6809

land.lhs.true1789:                                ; preds = %if.then1784
  %893 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8, !dbg !6810
  %894 = bitcast %struct.rtx_def* %893 to i32*, !dbg !6810
  %bf.load1790 = load i32, i32* %894, align 8, !dbg !6810
  %bf.lshr1791 = lshr i32 %bf.load1790, 27, !dbg !6810
  %bf.clear1792 = and i32 %bf.lshr1791, 1, !dbg !6810
  %tobool1793 = icmp ne i32 %bf.clear1792, 0, !dbg !6810
  br i1 %tobool1793, label %if.then1794, label %if.end1795, !dbg !6811

if.then1794:                                      ; preds = %land.lhs.true1789
  br label %while.body1283, !dbg !6812, !llvm.loop !6473

if.end1795:                                       ; preds = %land.lhs.true1789, %if.then1784
  %895 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8, !dbg !6813
  %896 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6814
  %897 = load i32, i32* %i, align 4, !dbg !6814
  %idxprom1796 = sext i32 %897 to i64, !dbg !6814
  %arrayidx1797 = getelementptr inbounds %struct.set, %struct.set* %896, i64 %idxprom1796, !dbg !6814
  %rtl1798 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1797, i32 0, i32 0, !dbg !6814
  %898 = load %struct.rtx_def*, %struct.rtx_def** %rtl1798, align 8, !dbg !6814
  %u1799 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %898, i32 0, i32 1, !dbg !6814
  %fld1800 = bitcast %union.u* %u1799 to [1 x %union.rtunion_def]*, !dbg !6814
  %arrayidx1801 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1800, i64 0, i64 1, !dbg !6814
  %rt_rtx1802 = bitcast %union.rtunion_def* %arrayidx1801 to %struct.rtx_def**, !dbg !6814
  store %struct.rtx_def* %895, %struct.rtx_def** %rt_rtx1802, align 8, !dbg !6815
  store i8 1, i8* @cse_jumps_altered, align 1, !dbg !6816
  br label %while.end1922, !dbg !6817

if.else1803:                                      ; preds = %land.lhs.true1781, %lor.lhs.false1776, %land.lhs.true1770, %if.end1767
  %899 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8, !dbg !6818
  %900 = bitcast %struct.rtx_def* %899 to i32*, !dbg !6818
  %bf.load1804 = load i32, i32* %900, align 8, !dbg !6818
  %bf.clear1805 = and i32 %bf.load1804, 65535, !dbg !6818
  %idxprom1806 = sext i32 %bf.clear1805 to i64, !dbg !6818
  %arrayidx1807 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom1806, !dbg !6818
  %901 = load i32, i32* %arrayidx1807, align 4, !dbg !6818
  %cmp1808 = icmp eq i32 %901, 9, !dbg !6818
  br i1 %cmp1808, label %land.lhs.true1810, label %if.else1860, !dbg !6820

land.lhs.true1810:                                ; preds = %if.else1803
  %902 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8, !dbg !6821
  %903 = bitcast %struct.rtx_def* %902 to i32*, !dbg !6821
  %bf.load1811 = load i32, i32* %903, align 8, !dbg !6821
  %bf.clear1812 = and i32 %bf.load1811, 65535, !dbg !6821
  %cmp1813 = icmp eq i32 %bf.clear1812, 35, !dbg !6822
  br i1 %cmp1813, label %land.lhs.true1815, label %if.else1860, !dbg !6823

land.lhs.true1815:                                ; preds = %land.lhs.true1810
  %904 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8, !dbg !6824
  %u1816 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %904, i32 0, i32 1, !dbg !6824
  %fld1817 = bitcast %union.u* %u1816 to [1 x %union.rtunion_def]*, !dbg !6824
  %arrayidx1818 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1817, i64 0, i64 0, !dbg !6824
  %rt_rtx1819 = bitcast %union.rtunion_def* %arrayidx1818 to %struct.rtx_def**, !dbg !6824
  %905 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1819, align 8, !dbg !6824
  %906 = bitcast %struct.rtx_def* %905 to i32*, !dbg !6824
  %bf.load1820 = load i32, i32* %906, align 8, !dbg !6824
  %bf.clear1821 = and i32 %bf.load1820, 65535, !dbg !6824
  %cmp1822 = icmp eq i32 %bf.clear1821, 100, !dbg !6825
  br i1 %cmp1822, label %if.then1859, label %lor.lhs.false1824, !dbg !6826

lor.lhs.false1824:                                ; preds = %land.lhs.true1815
  %907 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8, !dbg !6827
  %u1825 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %907, i32 0, i32 1, !dbg !6827
  %fld1826 = bitcast %union.u* %u1825 to [1 x %union.rtunion_def]*, !dbg !6827
  %arrayidx1827 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1826, i64 0, i64 0, !dbg !6827
  %rt_rtx1828 = bitcast %union.rtunion_def* %arrayidx1827 to %struct.rtx_def**, !dbg !6827
  %908 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1828, align 8, !dbg !6827
  %909 = bitcast %struct.rtx_def* %908 to i32*, !dbg !6827
  %bf.load1829 = load i32, i32* %909, align 8, !dbg !6827
  %bf.clear1830 = and i32 %bf.load1829, 65535, !dbg !6827
  %cmp1831 = icmp eq i32 %bf.clear1830, 50, !dbg !6828
  br i1 %cmp1831, label %land.lhs.true1833, label %if.else1860, !dbg !6829

land.lhs.true1833:                                ; preds = %lor.lhs.false1824
  %910 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8, !dbg !6830
  %u1834 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %910, i32 0, i32 1, !dbg !6830
  %fld1835 = bitcast %union.u* %u1834 to [1 x %union.rtunion_def]*, !dbg !6830
  %arrayidx1836 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1835, i64 0, i64 0, !dbg !6830
  %rt_rtx1837 = bitcast %union.rtunion_def* %arrayidx1836 to %struct.rtx_def**, !dbg !6830
  %911 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1837, align 8, !dbg !6830
  %u1838 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %911, i32 0, i32 1, !dbg !6830
  %fld1839 = bitcast %union.u* %u1838 to [1 x %union.rtunion_def]*, !dbg !6830
  %arrayidx1840 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1839, i64 0, i64 0, !dbg !6830
  %rt_rtx1841 = bitcast %union.rtunion_def* %arrayidx1840 to %struct.rtx_def**, !dbg !6830
  %912 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1841, align 8, !dbg !6830
  %913 = bitcast %struct.rtx_def* %912 to i32*, !dbg !6830
  %bf.load1842 = load i32, i32* %913, align 8, !dbg !6830
  %bf.clear1843 = and i32 %bf.load1842, 65535, !dbg !6830
  %cmp1844 = icmp eq i32 %bf.clear1843, 44, !dbg !6831
  br i1 %cmp1844, label %land.lhs.true1846, label %if.else1860, !dbg !6832

land.lhs.true1846:                                ; preds = %land.lhs.true1833
  %914 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8, !dbg !6833
  %u1847 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %914, i32 0, i32 1, !dbg !6833
  %fld1848 = bitcast %union.u* %u1847 to [1 x %union.rtunion_def]*, !dbg !6833
  %arrayidx1849 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1848, i64 0, i64 0, !dbg !6833
  %rt_rtx1850 = bitcast %union.rtunion_def* %arrayidx1849 to %struct.rtx_def**, !dbg !6833
  %915 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1850, align 8, !dbg !6833
  %u1851 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %915, i32 0, i32 1, !dbg !6833
  %fld1852 = bitcast %union.u* %u1851 to [1 x %union.rtunion_def]*, !dbg !6833
  %arrayidx1853 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1852, i64 0, i64 1, !dbg !6833
  %rt_rtx1854 = bitcast %union.rtunion_def* %arrayidx1853 to %struct.rtx_def**, !dbg !6833
  %916 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1854, align 8, !dbg !6833
  %917 = bitcast %struct.rtx_def* %916 to i32*, !dbg !6833
  %bf.load1855 = load i32, i32* %917, align 8, !dbg !6833
  %bf.clear1856 = and i32 %bf.load1855, 65535, !dbg !6833
  %cmp1857 = icmp eq i32 %bf.clear1856, 44, !dbg !6834
  br i1 %cmp1857, label %if.then1859, label %if.else1860, !dbg !6835

if.then1859:                                      ; preds = %land.lhs.true1846, %land.lhs.true1815
  br label %if.end1920, !dbg !6835

if.else1860:                                      ; preds = %land.lhs.true1846, %land.lhs.true1833, %lor.lhs.false1824, %land.lhs.true1810, %if.else1803
  %918 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6836
  %919 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6838
  %920 = load i32, i32* %i, align 4, !dbg !6838
  %idxprom1861 = sext i32 %920 to i64, !dbg !6838
  %arrayidx1862 = getelementptr inbounds %struct.set, %struct.set* %919, i64 %idxprom1861, !dbg !6838
  %rtl1863 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1862, i32 0, i32 0, !dbg !6838
  %921 = load %struct.rtx_def*, %struct.rtx_def** %rtl1863, align 8, !dbg !6838
  %u1864 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %921, i32 0, i32 1, !dbg !6838
  %fld1865 = bitcast %union.u* %u1864 to [1 x %union.rtunion_def]*, !dbg !6838
  %arrayidx1866 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1865, i64 0, i64 1, !dbg !6838
  %rt_rtx1867 = bitcast %union.rtunion_def* %arrayidx1866 to %struct.rtx_def**, !dbg !6838
  %922 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8, !dbg !6839
  %call1868 = call zeroext i8 @validate_unshare_change(%struct.rtx_def* %918, %struct.rtx_def** %rt_rtx1867, %struct.rtx_def* %922, i8 zeroext 0), !dbg !6840
  %tobool1869 = icmp ne i8 %call1868, 0, !dbg !6840
  br i1 %tobool1869, label %if.then1870, label %if.else1889, !dbg !6841

if.then1870:                                      ; preds = %if.else1860
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_rtx1871, metadata !6842, metadata !DIExpression()), !dbg !6844
  %923 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6845
  %924 = load i32, i32* %i, align 4, !dbg !6845
  %idxprom1872 = sext i32 %924 to i64, !dbg !6845
  %arrayidx1873 = getelementptr inbounds %struct.set, %struct.set* %923, i64 %idxprom1872, !dbg !6845
  %rtl1874 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1873, i32 0, i32 0, !dbg !6845
  %925 = load %struct.rtx_def*, %struct.rtx_def** %rtl1874, align 8, !dbg !6845
  %u1875 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %925, i32 0, i32 1, !dbg !6845
  %fld1876 = bitcast %union.u* %u1875 to [1 x %union.rtunion_def]*, !dbg !6845
  %arrayidx1877 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1876, i64 0, i64 1, !dbg !6845
  %rt_rtx1878 = bitcast %union.rtunion_def* %arrayidx1877 to %struct.rtx_def**, !dbg !6845
  %926 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1878, align 8, !dbg !6845
  %927 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6846
  %call1879 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %926, %struct.rtx_def* %927), !dbg !6847
  store %struct.rtx_def* %call1879, %struct.rtx_def** %new_rtx1871, align 8, !dbg !6844
  %928 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6848
  %929 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6849
  %930 = load i32, i32* %i, align 4, !dbg !6849
  %idxprom1880 = sext i32 %930 to i64, !dbg !6849
  %arrayidx1881 = getelementptr inbounds %struct.set, %struct.set* %929, i64 %idxprom1880, !dbg !6849
  %rtl1882 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1881, i32 0, i32 0, !dbg !6849
  %931 = load %struct.rtx_def*, %struct.rtx_def** %rtl1882, align 8, !dbg !6849
  %u1883 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %931, i32 0, i32 1, !dbg !6849
  %fld1884 = bitcast %union.u* %u1883 to [1 x %union.rtunion_def]*, !dbg !6849
  %arrayidx1885 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1884, i64 0, i64 1, !dbg !6849
  %rt_rtx1886 = bitcast %union.rtunion_def* %arrayidx1885 to %struct.rtx_def**, !dbg !6849
  %932 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx1871, align 8, !dbg !6850
  %call1887 = call zeroext i8 @validate_change(%struct.rtx_def* %928, %struct.rtx_def** %rt_rtx1886, %struct.rtx_def* %932, i8 zeroext 1), !dbg !6851
  %call1888 = call i32 @apply_change_group(), !dbg !6852
  br label %while.end1922, !dbg !6853

if.else1889:                                      ; preds = %if.else1860
  %933 = load i32, i32* @constant_pool_entries_cost, align 4, !dbg !6854
  %tobool1890 = icmp ne i32 %933, 0, !dbg !6854
  br i1 %tobool1890, label %land.lhs.true1891, label %if.end1918, !dbg !6856

land.lhs.true1891:                                ; preds = %if.else1889
  %934 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8, !dbg !6857
  %935 = bitcast %struct.rtx_def* %934 to i32*, !dbg !6857
  %bf.load1892 = load i32, i32* %935, align 8, !dbg !6857
  %bf.clear1893 = and i32 %bf.load1892, 65535, !dbg !6857
  %idxprom1894 = sext i32 %bf.clear1893 to i64, !dbg !6857
  %arrayidx1895 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom1894, !dbg !6857
  %936 = load i32, i32* %arrayidx1895, align 4, !dbg !6857
  %cmp1896 = icmp eq i32 %936, 9, !dbg !6857
  br i1 %cmp1896, label %land.lhs.true1898, label %if.end1918, !dbg !6858

land.lhs.true1898:                                ; preds = %land.lhs.true1891
  %937 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8, !dbg !6859
  %cmp1899 = icmp eq %struct.rtx_def* %937, null, !dbg !6860
  br i1 %cmp1899, label %land.lhs.true1908, label %lor.lhs.false1901, !dbg !6861

lor.lhs.false1901:                                ; preds = %land.lhs.true1898
  %938 = load %struct.rtx_def*, %struct.rtx_def** %src_folded, align 8, !dbg !6862
  %939 = bitcast %struct.rtx_def* %938 to i32*, !dbg !6862
  %bf.load1902 = load i32, i32* %939, align 8, !dbg !6862
  %bf.clear1903 = and i32 %bf.load1902, 65535, !dbg !6862
  %cmp1904 = icmp eq i32 %bf.clear1903, 43, !dbg !6862
  br i1 %cmp1904, label %if.end1918, label %land.lhs.true1906, !dbg !6863

land.lhs.true1906:                                ; preds = %lor.lhs.false1901
  %940 = load i32, i32* %src_folded_force_flag, align 4, !dbg !6864
  %tobool1907 = icmp ne i32 %940, 0, !dbg !6864
  br i1 %tobool1907, label %if.end1918, label %land.lhs.true1908, !dbg !6865

land.lhs.true1908:                                ; preds = %land.lhs.true1906, %land.lhs.true1898
  %941 = load i32, i32* %mode, align 4, !dbg !6866
  %idxprom1909 = zext i32 %941 to i64, !dbg !6866
  %arrayidx1910 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1909, !dbg !6866
  %942 = load i8, i8* %arrayidx1910, align 1, !dbg !6866
  %conv1911 = zext i8 %942 to i32, !dbg !6866
  %cmp1912 = icmp ne i32 %conv1911, 1, !dbg !6867
  br i1 %cmp1912, label %land.lhs.true1914, label %if.end1918, !dbg !6868

land.lhs.true1914:                                ; preds = %land.lhs.true1908
  %943 = load i32, i32* %mode, align 4, !dbg !6869
  %cmp1915 = icmp ne i32 %943, 0, !dbg !6870
  br i1 %cmp1915, label %if.then1917, label %if.end1918, !dbg !6871

if.then1917:                                      ; preds = %land.lhs.true1914
  store i32 1, i32* %src_folded_force_flag, align 4, !dbg !6872
  %944 = load %struct.rtx_def*, %struct.rtx_def** %trial, align 8, !dbg !6874
  store %struct.rtx_def* %944, %struct.rtx_def** %src_folded, align 8, !dbg !6875
  %945 = load i32, i32* @constant_pool_entries_cost, align 4, !dbg !6876
  store i32 %945, i32* %src_folded_cost, align 4, !dbg !6877
  %946 = load i32, i32* @constant_pool_entries_regcost, align 4, !dbg !6878
  store i32 %946, i32* %src_folded_regcost, align 4, !dbg !6879
  br label %if.end1918, !dbg !6880

if.end1918:                                       ; preds = %if.then1917, %land.lhs.true1914, %land.lhs.true1908, %land.lhs.true1906, %lor.lhs.false1901, %land.lhs.true1891, %if.else1889
  br label %if.end1919

if.end1919:                                       ; preds = %if.end1918
  br label %if.end1920

if.end1920:                                       ; preds = %if.end1919, %if.then1859
  br label %if.end1921

if.end1921:                                       ; preds = %if.end1920
  br label %while.body1283, !dbg !6423, !llvm.loop !6473

while.end1922:                                    ; preds = %if.then1870, %if.end1795, %if.end1764, %if.then1494, %if.then1471
  %947 = load i8, i8* %repeat, align 1, !dbg !6881
  %tobool1923 = icmp ne i8 %947, 0, !dbg !6881
  br i1 %tobool1923, label %if.then1924, label %if.end1926, !dbg !6883

if.then1924:                                      ; preds = %while.end1922
  %948 = load i32, i32* %i, align 4, !dbg !6884
  %dec1925 = add nsw i32 %948, -1, !dbg !6884
  store i32 %dec1925, i32* %i, align 4, !dbg !6884
  br label %for.inc2494, !dbg !6886

if.end1926:                                       ; preds = %while.end1922
  %949 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6887
  %950 = load i32, i32* %i, align 4, !dbg !6887
  %idxprom1927 = sext i32 %950 to i64, !dbg !6887
  %arrayidx1928 = getelementptr inbounds %struct.set, %struct.set* %949, i64 %idxprom1927, !dbg !6887
  %rtl1929 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1928, i32 0, i32 0, !dbg !6887
  %951 = load %struct.rtx_def*, %struct.rtx_def** %rtl1929, align 8, !dbg !6887
  %u1930 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %951, i32 0, i32 1, !dbg !6887
  %fld1931 = bitcast %union.u* %u1930 to [1 x %union.rtunion_def]*, !dbg !6887
  %arrayidx1932 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1931, i64 0, i64 1, !dbg !6887
  %rt_rtx1933 = bitcast %union.rtunion_def* %arrayidx1932 to %struct.rtx_def**, !dbg !6887
  %952 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1933, align 8, !dbg !6887
  store %struct.rtx_def* %952, %struct.rtx_def** %src476, align 8, !dbg !6888
  %953 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !6889
  %954 = bitcast %struct.rtx_def* %953 to i32*, !dbg !6889
  %bf.load1934 = load i32, i32* %954, align 8, !dbg !6889
  %bf.clear1935 = and i32 %bf.load1934, 65535, !dbg !6889
  %cmp1936 = icmp eq i32 %bf.clear1935, 37, !dbg !6889
  br i1 %cmp1936, label %land.lhs.true1938, label %if.end2063, !dbg !6891

land.lhs.true1938:                                ; preds = %if.end1926
  %955 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !6892
  %call1939 = call i32 @rhs_regno(%struct.rtx_def* %955), !dbg !6892
  %call1940 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call1939), !dbg !6892
  %reg_qty1941 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call1940, i32 0, i32 1, !dbg !6892
  %956 = load i32, i32* %reg_qty1941, align 4, !dbg !6892
  %cmp1942 = icmp sge i32 %956, 0, !dbg !6892
  br i1 %cmp1942, label %if.then1944, label %if.end2063, !dbg !6893

if.then1944:                                      ; preds = %land.lhs.true1938
  call void @llvm.dbg.declare(metadata i32* %dest_q, metadata !6894, metadata !DIExpression()), !dbg !6896
  %957 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !6897
  %call1945 = call i32 @rhs_regno(%struct.rtx_def* %957), !dbg !6897
  %call1946 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call1945), !dbg !6897
  %reg_qty1947 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call1946, i32 0, i32 1, !dbg !6897
  %958 = load i32, i32* %reg_qty1947, align 4, !dbg !6897
  store i32 %958, i32* %dest_q, align 4, !dbg !6896
  call void @llvm.dbg.declare(metadata %struct.qty_table_elem** %dest_ent, metadata !6898, metadata !DIExpression()), !dbg !6899
  %959 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8, !dbg !6900
  %960 = load i32, i32* %dest_q, align 4, !dbg !6901
  %idxprom1948 = sext i32 %960 to i64, !dbg !6900
  %arrayidx1949 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %959, i64 %idxprom1948, !dbg !6900
  store %struct.qty_table_elem* %arrayidx1949, %struct.qty_table_elem** %dest_ent, align 8, !dbg !6899
  %961 = load %struct.qty_table_elem*, %struct.qty_table_elem** %dest_ent, align 8, !dbg !6902
  %mode1950 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %961, i32 0, i32 6, !dbg !6904
  %962 = bitcast i24* %mode1950 to i32*, !dbg !6904
  %bf.load1951 = load i32, i32* %962, align 4, !dbg !6904
  %bf.lshr1952 = lshr i32 %bf.load1951, 16, !dbg !6904
  %bf.clear1953 = and i32 %bf.lshr1952, 255, !dbg !6904
  %963 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !6905
  %964 = bitcast %struct.rtx_def* %963 to i32*, !dbg !6905
  %bf.load1954 = load i32, i32* %964, align 8, !dbg !6905
  %bf.lshr1955 = lshr i32 %bf.load1954, 16, !dbg !6905
  %bf.clear1956 = and i32 %bf.lshr1955, 255, !dbg !6905
  %cmp1957 = icmp eq i32 %bf.clear1953, %bf.clear1956, !dbg !6906
  br i1 %cmp1957, label %land.lhs.true1959, label %if.end2062, !dbg !6907

land.lhs.true1959:                                ; preds = %if.then1944
  %965 = load %struct.qty_table_elem*, %struct.qty_table_elem** %dest_ent, align 8, !dbg !6908
  %first_reg = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %965, i32 0, i32 4, !dbg !6909
  %966 = load i32, i32* %first_reg, align 4, !dbg !6909
  %967 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !6910
  %call1960 = call i32 @rhs_regno(%struct.rtx_def* %967), !dbg !6910
  %cmp1961 = icmp ne i32 %966, %call1960, !dbg !6911
  br i1 %cmp1961, label %land.lhs.true1963, label %if.end2062, !dbg !6912

land.lhs.true1963:                                ; preds = %land.lhs.true1959
  %968 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6913
  %969 = bitcast %struct.rtx_def* %968 to i32*, !dbg !6913
  %bf.load1964 = load i32, i32* %969, align 8, !dbg !6913
  %bf.clear1965 = and i32 %bf.load1964, 65535, !dbg !6913
  %cmp1966 = icmp eq i32 %bf.clear1965, 37, !dbg !6913
  br i1 %cmp1966, label %land.lhs.true1968, label %if.end2062, !dbg !6914

land.lhs.true1968:                                ; preds = %land.lhs.true1963
  %970 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6915
  %call1969 = call i32 @rhs_regno(%struct.rtx_def* %970), !dbg !6915
  %971 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !6916
  %call1970 = call i32 @rhs_regno(%struct.rtx_def* %971), !dbg !6916
  %cmp1971 = icmp eq i32 %call1969, %call1970, !dbg !6917
  br i1 %cmp1971, label %land.lhs.true1973, label %if.end2062, !dbg !6918

land.lhs.true1973:                                ; preds = %land.lhs.true1968
  %972 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6919
  %973 = load i32, i32* %i, align 4, !dbg !6919
  %idxprom1974 = sext i32 %973 to i64, !dbg !6919
  %arrayidx1975 = getelementptr inbounds %struct.set, %struct.set* %972, i64 %idxprom1974, !dbg !6919
  %src1976 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1975, i32 0, i32 1, !dbg !6919
  %974 = load %struct.rtx_def*, %struct.rtx_def** %src1976, align 8, !dbg !6919
  %975 = bitcast %struct.rtx_def* %974 to i32*, !dbg !6919
  %bf.load1977 = load i32, i32* %975, align 8, !dbg !6919
  %bf.clear1978 = and i32 %bf.load1977, 65535, !dbg !6919
  %cmp1979 = icmp eq i32 %bf.clear1978, 37, !dbg !6919
  br i1 %cmp1979, label %lor.lhs.false1981, label %land.lhs.true1988, !dbg !6920

lor.lhs.false1981:                                ; preds = %land.lhs.true1973
  %976 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6921
  %977 = load i32, i32* %i, align 4, !dbg !6921
  %idxprom1982 = sext i32 %977 to i64, !dbg !6921
  %arrayidx1983 = getelementptr inbounds %struct.set, %struct.set* %976, i64 %idxprom1982, !dbg !6921
  %src1984 = getelementptr inbounds %struct.set, %struct.set* %arrayidx1983, i32 0, i32 1, !dbg !6921
  %978 = load %struct.rtx_def*, %struct.rtx_def** %src1984, align 8, !dbg !6921
  %call1985 = call i32 @rhs_regno(%struct.rtx_def* %978), !dbg !6921
  %cmp1986 = icmp uge i32 %call1985, 53, !dbg !6922
  br i1 %cmp1986, label %land.lhs.true1988, label %if.end2062, !dbg !6923

land.lhs.true1988:                                ; preds = %lor.lhs.false1981, %land.lhs.true1973
  %979 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !6924
  %980 = bitcast %struct.rtx_def* %979 to i32*, !dbg !6924
  %bf.load1989 = load i32, i32* %980, align 8, !dbg !6924
  %bf.clear1990 = and i32 %bf.load1989, 65535, !dbg !6924
  %cmp1991 = icmp eq i32 %bf.clear1990, 37, !dbg !6924
  br i1 %cmp1991, label %lor.lhs.false1993, label %if.then1997, !dbg !6925

lor.lhs.false1993:                                ; preds = %land.lhs.true1988
  %981 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !6926
  %call1994 = call i32 @rhs_regno(%struct.rtx_def* %981), !dbg !6926
  %cmp1995 = icmp uge i32 %call1994, 53, !dbg !6927
  br i1 %cmp1995, label %if.then1997, label %if.end2062, !dbg !6928

if.then1997:                                      ; preds = %lor.lhs.false1993, %land.lhs.true1988
  call void @llvm.dbg.declare(metadata i32* %src_q, metadata !6929, metadata !DIExpression()), !dbg !6931
  %982 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6932
  %call1998 = call i32 @rhs_regno(%struct.rtx_def* %982), !dbg !6932
  %call1999 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call1998), !dbg !6932
  %reg_qty2000 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call1999, i32 0, i32 1, !dbg !6932
  %983 = load i32, i32* %reg_qty2000, align 4, !dbg !6932
  store i32 %983, i32* %src_q, align 4, !dbg !6931
  call void @llvm.dbg.declare(metadata %struct.qty_table_elem** %src_ent, metadata !6933, metadata !DIExpression()), !dbg !6934
  %984 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8, !dbg !6935
  %985 = load i32, i32* %src_q, align 4, !dbg !6936
  %idxprom2001 = sext i32 %985 to i64, !dbg !6935
  %arrayidx2002 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %984, i64 %idxprom2001, !dbg !6935
  store %struct.qty_table_elem* %arrayidx2002, %struct.qty_table_elem** %src_ent, align 8, !dbg !6934
  call void @llvm.dbg.declare(metadata i32* %first, metadata !6937, metadata !DIExpression()), !dbg !6938
  %986 = load %struct.qty_table_elem*, %struct.qty_table_elem** %src_ent, align 8, !dbg !6939
  %first_reg2003 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %986, i32 0, i32 4, !dbg !6940
  %987 = load i32, i32* %first_reg2003, align 4, !dbg !6940
  store i32 %987, i32* %first, align 4, !dbg !6938
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_src, metadata !6941, metadata !DIExpression()), !dbg !6942
  %988 = load i32, i32* %first, align 4, !dbg !6943
  %cmp2004 = icmp sge i32 %988, 53, !dbg !6944
  br i1 %cmp2004, label %cond.true2006, label %cond.false2009, !dbg !6943

cond.true2006:                                    ; preds = %if.then1997
  %989 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !6945
  %990 = load i32, i32* %first, align 4, !dbg !6946
  %idxprom2007 = sext i32 %990 to i64, !dbg !6945
  %arrayidx2008 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %989, i64 %idxprom2007, !dbg !6945
  %991 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2008, align 8, !dbg !6945
  br label %cond.end2014, !dbg !6943

cond.false2009:                                   ; preds = %if.then1997
  %992 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6947
  %993 = bitcast %struct.rtx_def* %992 to i32*, !dbg !6947
  %bf.load2010 = load i32, i32* %993, align 8, !dbg !6947
  %bf.lshr2011 = lshr i32 %bf.load2010, 16, !dbg !6947
  %bf.clear2012 = and i32 %bf.lshr2011, 255, !dbg !6947
  %994 = load i32, i32* %first, align 4, !dbg !6948
  %call2013 = call %struct.rtx_def* @gen_rtx_REG(i32 %bf.clear2012, i32 %994), !dbg !6949
  br label %cond.end2014, !dbg !6943

cond.end2014:                                     ; preds = %cond.false2009, %cond.true2006
  %cond2015 = phi %struct.rtx_def* [ %991, %cond.true2006 ], [ %call2013, %cond.false2009 ], !dbg !6943
  store %struct.rtx_def* %cond2015, %struct.rtx_def** %new_src, align 8, !dbg !6942
  %995 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6950
  %996 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6952
  %997 = load i32, i32* %i, align 4, !dbg !6952
  %idxprom2016 = sext i32 %997 to i64, !dbg !6952
  %arrayidx2017 = getelementptr inbounds %struct.set, %struct.set* %996, i64 %idxprom2016, !dbg !6952
  %rtl2018 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2017, i32 0, i32 0, !dbg !6952
  %998 = load %struct.rtx_def*, %struct.rtx_def** %rtl2018, align 8, !dbg !6952
  %u2019 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %998, i32 0, i32 1, !dbg !6952
  %fld2020 = bitcast %union.u* %u2019 to [1 x %union.rtunion_def]*, !dbg !6952
  %arrayidx2021 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2020, i64 0, i64 1, !dbg !6952
  %rt_rtx2022 = bitcast %union.rtunion_def* %arrayidx2021 to %struct.rtx_def**, !dbg !6952
  %999 = load %struct.rtx_def*, %struct.rtx_def** %new_src, align 8, !dbg !6953
  %call2023 = call zeroext i8 @validate_change(%struct.rtx_def* %995, %struct.rtx_def** %rt_rtx2022, %struct.rtx_def* %999, i8 zeroext 0), !dbg !6954
  %tobool2024 = icmp ne i8 %call2023, 0, !dbg !6954
  br i1 %tobool2024, label %if.then2025, label %if.end2061, !dbg !6955

if.then2025:                                      ; preds = %cond.end2014
  %1000 = load %struct.rtx_def*, %struct.rtx_def** %new_src, align 8, !dbg !6956
  store %struct.rtx_def* %1000, %struct.rtx_def** %src476, align 8, !dbg !6958
  %1001 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !6959
  %tobool2026 = icmp ne %struct.rtx_def* %1001, null, !dbg !6959
  br i1 %tobool2026, label %land.lhs.true2027, label %if.end2060, !dbg !6961

land.lhs.true2027:                                ; preds = %if.then2025
  %1002 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !6962
  %1003 = bitcast %struct.rtx_def* %1002 to i32*, !dbg !6962
  %bf.load2028 = load i32, i32* %1003, align 8, !dbg !6962
  %bf.clear2029 = and i32 %bf.load2028, 65535, !dbg !6962
  %cmp2030 = icmp eq i32 %bf.clear2029, 37, !dbg !6962
  br i1 %cmp2030, label %cond.true2032, label %cond.false2033, !dbg !6962

cond.true2032:                                    ; preds = %land.lhs.true2027
  br label %cond.end2035, !dbg !6962

cond.false2033:                                   ; preds = %land.lhs.true2027
  %1004 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !6962
  %call2034 = call i32 @notreg_cost(%struct.rtx_def* %1004, i32 23), !dbg !6962
  br label %cond.end2035, !dbg !6962

cond.end2035:                                     ; preds = %cond.false2033, %cond.true2032
  %cond2036 = phi i32 [ 0, %cond.true2032 ], [ %call2034, %cond.false2033 ], !dbg !6962
  %1005 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6963
  %1006 = bitcast %struct.rtx_def* %1005 to i32*, !dbg !6963
  %bf.load2037 = load i32, i32* %1006, align 8, !dbg !6963
  %bf.clear2038 = and i32 %bf.load2037, 65535, !dbg !6963
  %cmp2039 = icmp eq i32 %bf.clear2038, 37, !dbg !6963
  br i1 %cmp2039, label %cond.true2041, label %cond.false2042, !dbg !6963

cond.true2041:                                    ; preds = %cond.end2035
  br label %cond.end2044, !dbg !6963

cond.false2042:                                   ; preds = %cond.end2035
  %1007 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6963
  %call2043 = call i32 @notreg_cost(%struct.rtx_def* %1007, i32 23), !dbg !6963
  br label %cond.end2044, !dbg !6963

cond.end2044:                                     ; preds = %cond.false2042, %cond.true2041
  %cond2045 = phi i32 [ 0, %cond.true2041 ], [ %call2043, %cond.false2042 ], !dbg !6963
  %cmp2046 = icmp slt i32 %cond2036, %cond2045, !dbg !6964
  br i1 %cmp2046, label %land.lhs.true2048, label %if.end2060, !dbg !6965

land.lhs.true2048:                                ; preds = %cond.end2044
  %1008 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6966
  %1009 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6967
  %1010 = load i32, i32* %i, align 4, !dbg !6967
  %idxprom2049 = sext i32 %1010 to i64, !dbg !6967
  %arrayidx2050 = getelementptr inbounds %struct.set, %struct.set* %1009, i64 %idxprom2049, !dbg !6967
  %rtl2051 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2050, i32 0, i32 0, !dbg !6967
  %1011 = load %struct.rtx_def*, %struct.rtx_def** %rtl2051, align 8, !dbg !6967
  %u2052 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1011, i32 0, i32 1, !dbg !6967
  %fld2053 = bitcast %union.u* %u2052 to [1 x %union.rtunion_def]*, !dbg !6967
  %arrayidx2054 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2053, i64 0, i64 1, !dbg !6967
  %rt_rtx2055 = bitcast %union.rtunion_def* %arrayidx2054 to %struct.rtx_def**, !dbg !6967
  %1012 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !6968
  %call2056 = call zeroext i8 @validate_change(%struct.rtx_def* %1008, %struct.rtx_def** %rt_rtx2055, %struct.rtx_def* %1012, i8 zeroext 0), !dbg !6969
  %conv2057 = zext i8 %call2056 to i32, !dbg !6969
  %tobool2058 = icmp ne i32 %conv2057, 0, !dbg !6969
  br i1 %tobool2058, label %if.then2059, label %if.end2060, !dbg !6970

if.then2059:                                      ; preds = %land.lhs.true2048
  %1013 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !6971
  store %struct.rtx_def* %1013, %struct.rtx_def** %src476, align 8, !dbg !6972
  br label %if.end2060, !dbg !6973

if.end2060:                                       ; preds = %if.then2059, %land.lhs.true2048, %cond.end2044, %if.then2025
  br label %if.end2061, !dbg !6974

if.end2061:                                       ; preds = %if.end2060, %cond.end2014
  br label %if.end2062, !dbg !6975

if.end2062:                                       ; preds = %if.end2061, %lor.lhs.false1993, %lor.lhs.false1981, %land.lhs.true1968, %land.lhs.true1963, %land.lhs.true1959, %if.then1944
  br label %if.end2063, !dbg !6976

if.end2063:                                       ; preds = %if.end2062, %land.lhs.true1938, %if.end1926
  %1014 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6977
  %1015 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6979
  %1016 = load i32, i32* %i, align 4, !dbg !6980
  %idxprom2064 = sext i32 %1016 to i64, !dbg !6979
  %arrayidx2065 = getelementptr inbounds %struct.set, %struct.set* %1015, i64 %idxprom2064, !dbg !6979
  %src2066 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2065, i32 0, i32 1, !dbg !6981
  %1017 = load %struct.rtx_def*, %struct.rtx_def** %src2066, align 8, !dbg !6981
  %cmp2067 = icmp ne %struct.rtx_def* %1014, %1017, !dbg !6982
  br i1 %cmp2067, label %if.then2069, label %if.end2109, !dbg !6983

if.then2069:                                      ; preds = %if.end2063
  store i32 0, i32* @do_not_record, align 4, !dbg !6984
  store i32 0, i32* @hash_arg_in_memory, align 4, !dbg !6986
  %1018 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6987
  %1019 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6988
  %1020 = load i32, i32* %i, align 4, !dbg !6989
  %idxprom2070 = sext i32 %1020 to i64, !dbg !6988
  %arrayidx2071 = getelementptr inbounds %struct.set, %struct.set* %1019, i64 %idxprom2070, !dbg !6988
  %src2072 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2071, i32 0, i32 1, !dbg !6990
  store %struct.rtx_def* %1018, %struct.rtx_def** %src2072, align 8, !dbg !6991
  %1021 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6992
  %1022 = bitcast %struct.rtx_def* %1021 to i32*, !dbg !6992
  %bf.load2073 = load i32, i32* %1022, align 8, !dbg !6992
  %bf.clear2074 = and i32 %bf.load2073, 65535, !dbg !6992
  %cmp2075 = icmp eq i32 %bf.clear2074, 37, !dbg !6992
  br i1 %cmp2075, label %land.lhs.true2077, label %cond.false2086, !dbg !6992

land.lhs.true2077:                                ; preds = %if.then2069
  %1023 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6992
  %call2078 = call i32 @rhs_regno(%struct.rtx_def* %1023), !dbg !6992
  %cmp2079 = icmp uge i32 %call2078, 53, !dbg !6992
  br i1 %cmp2079, label %cond.true2081, label %cond.false2086, !dbg !6992

cond.true2081:                                    ; preds = %land.lhs.true2077
  %1024 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6992
  %call2082 = call i32 @rhs_regno(%struct.rtx_def* %1024), !dbg !6992
  %call2083 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call2082), !dbg !6992
  %reg_qty2084 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call2083, i32 0, i32 1, !dbg !6992
  %1025 = load i32, i32* %reg_qty2084, align 4, !dbg !6992
  %add2085 = add i32 4736, %1025, !dbg !6992
  br label %cond.end2088, !dbg !6992

cond.false2086:                                   ; preds = %land.lhs.true2077, %if.then2069
  %1026 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !6992
  %1027 = load i32, i32* %mode, align 4, !dbg !6992
  %call2087 = call i32 @canon_hash(%struct.rtx_def* %1026, i32 %1027), !dbg !6992
  br label %cond.end2088, !dbg !6992

cond.end2088:                                     ; preds = %cond.false2086, %cond.true2081
  %cond2089 = phi i32 [ %add2085, %cond.true2081 ], [ %call2087, %cond.false2086 ], !dbg !6992
  %and2090 = and i32 %cond2089, 31, !dbg !6992
  %1028 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6993
  %1029 = load i32, i32* %i, align 4, !dbg !6994
  %idxprom2091 = sext i32 %1029 to i64, !dbg !6993
  %arrayidx2092 = getelementptr inbounds %struct.set, %struct.set* %1028, i64 %idxprom2091, !dbg !6993
  %src_hash2093 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2092, i32 0, i32 3, !dbg !6995
  store i32 %and2090, i32* %src_hash2093, align 8, !dbg !6996
  %1030 = load i32, i32* @do_not_record, align 4, !dbg !6997
  %conv2094 = trunc i32 %1030 to i8, !dbg !6997
  %1031 = load %struct.set*, %struct.set** %sets, align 8, !dbg !6998
  %1032 = load i32, i32* %i, align 4, !dbg !6999
  %idxprom2095 = sext i32 %1032 to i64, !dbg !6998
  %arrayidx2096 = getelementptr inbounds %struct.set, %struct.set* %1031, i64 %idxprom2095, !dbg !6998
  %src_volatile2097 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2096, i32 0, i32 7, !dbg !7000
  store i8 %conv2094, i8* %src_volatile2097, align 1, !dbg !7001
  %1033 = load i32, i32* @hash_arg_in_memory, align 4, !dbg !7002
  %conv2098 = trunc i32 %1033 to i8, !dbg !7002
  %1034 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7003
  %1035 = load i32, i32* %i, align 4, !dbg !7004
  %idxprom2099 = sext i32 %1035 to i64, !dbg !7003
  %arrayidx2100 = getelementptr inbounds %struct.set, %struct.set* %1034, i64 %idxprom2099, !dbg !7003
  %src_in_memory2101 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2100, i32 0, i32 6, !dbg !7005
  store i8 %conv2098, i8* %src_in_memory2101, align 8, !dbg !7006
  %1036 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !7007
  %1037 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7008
  %1038 = load i32, i32* %i, align 4, !dbg !7009
  %idxprom2102 = sext i32 %1038 to i64, !dbg !7008
  %arrayidx2103 = getelementptr inbounds %struct.set, %struct.set* %1037, i64 %idxprom2102, !dbg !7008
  %src_hash2104 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2103, i32 0, i32 3, !dbg !7010
  %1039 = load i32, i32* %src_hash2104, align 8, !dbg !7010
  %1040 = load i32, i32* %mode, align 4, !dbg !7011
  %call2105 = call %struct.table_elt* @lookup(%struct.rtx_def* %1036, i32 %1039, i32 %1040), !dbg !7012
  %1041 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7013
  %1042 = load i32, i32* %i, align 4, !dbg !7014
  %idxprom2106 = sext i32 %1042 to i64, !dbg !7013
  %arrayidx2107 = getelementptr inbounds %struct.set, %struct.set* %1041, i64 %idxprom2106, !dbg !7013
  %src_elt2108 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2107, i32 0, i32 2, !dbg !7015
  store %struct.table_elt* %call2105, %struct.table_elt** %src_elt2108, align 8, !dbg !7016
  br label %if.end2109, !dbg !7017

if.end2109:                                       ; preds = %cond.end2088, %if.end2063
  %1043 = load i32, i32* %n_sets, align 4, !dbg !7018
  %cmp2110 = icmp eq i32 %1043, 1, !dbg !7020
  br i1 %cmp2110, label %land.lhs.true2112, label %if.end2171, !dbg !7021

land.lhs.true2112:                                ; preds = %if.end2109
  %1044 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !7022
  %tobool2113 = icmp ne %struct.rtx_def* %1044, null, !dbg !7022
  br i1 %tobool2113, label %land.lhs.true2114, label %if.end2171, !dbg !7023

land.lhs.true2114:                                ; preds = %land.lhs.true2112
  %1045 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !7024
  %1046 = bitcast %struct.rtx_def* %1045 to i32*, !dbg !7024
  %bf.load2115 = load i32, i32* %1046, align 8, !dbg !7024
  %bf.clear2116 = and i32 %bf.load2115, 65535, !dbg !7024
  %cmp2117 = icmp eq i32 %bf.clear2116, 37, !dbg !7024
  br i1 %cmp2117, label %land.lhs.true2119, label %if.end2171, !dbg !7025

land.lhs.true2119:                                ; preds = %land.lhs.true2114
  %1047 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !7026
  %1048 = bitcast %struct.rtx_def* %1047 to i32*, !dbg !7026
  %bf.load2120 = load i32, i32* %1048, align 8, !dbg !7026
  %bf.clear2121 = and i32 %bf.load2120, 65535, !dbg !7026
  %cmp2122 = icmp eq i32 %bf.clear2121, 37, !dbg !7026
  br i1 %cmp2122, label %if.end2171, label %land.lhs.true2124, !dbg !7027

land.lhs.true2124:                                ; preds = %land.lhs.true2119
  %1049 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !7028
  %1050 = bitcast %struct.rtx_def* %1049 to i32*, !dbg !7028
  %bf.load2125 = load i32, i32* %1050, align 8, !dbg !7028
  %bf.clear2126 = and i32 %bf.load2125, 65535, !dbg !7028
  %cmp2127 = icmp eq i32 %bf.clear2126, 35, !dbg !7029
  br i1 %cmp2127, label %land.lhs.true2129, label %if.then2164, !dbg !7030

land.lhs.true2129:                                ; preds = %land.lhs.true2124
  %1051 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !7031
  %u2130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1051, i32 0, i32 1, !dbg !7031
  %fld2131 = bitcast %union.u* %u2130 to [1 x %union.rtunion_def]*, !dbg !7031
  %arrayidx2132 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2131, i64 0, i64 0, !dbg !7031
  %rt_rtx2133 = bitcast %union.rtunion_def* %arrayidx2132 to %struct.rtx_def**, !dbg !7031
  %1052 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2133, align 8, !dbg !7031
  %1053 = bitcast %struct.rtx_def* %1052 to i32*, !dbg !7031
  %bf.load2134 = load i32, i32* %1053, align 8, !dbg !7031
  %bf.clear2135 = and i32 %bf.load2134, 65535, !dbg !7031
  %cmp2136 = icmp eq i32 %bf.clear2135, 50, !dbg !7032
  br i1 %cmp2136, label %land.lhs.true2138, label %if.then2164, !dbg !7033

land.lhs.true2138:                                ; preds = %land.lhs.true2129
  %1054 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !7034
  %u2139 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1054, i32 0, i32 1, !dbg !7034
  %fld2140 = bitcast %union.u* %u2139 to [1 x %union.rtunion_def]*, !dbg !7034
  %arrayidx2141 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2140, i64 0, i64 0, !dbg !7034
  %rt_rtx2142 = bitcast %union.rtunion_def* %arrayidx2141 to %struct.rtx_def**, !dbg !7034
  %1055 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2142, align 8, !dbg !7034
  %u2143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1055, i32 0, i32 1, !dbg !7034
  %fld2144 = bitcast %union.u* %u2143 to [1 x %union.rtunion_def]*, !dbg !7034
  %arrayidx2145 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2144, i64 0, i64 0, !dbg !7034
  %rt_rtx2146 = bitcast %union.rtunion_def* %arrayidx2145 to %struct.rtx_def**, !dbg !7034
  %1056 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2146, align 8, !dbg !7034
  %1057 = bitcast %struct.rtx_def* %1056 to i32*, !dbg !7034
  %bf.load2147 = load i32, i32* %1057, align 8, !dbg !7034
  %bf.clear2148 = and i32 %bf.load2147, 65535, !dbg !7034
  %cmp2149 = icmp eq i32 %bf.clear2148, 44, !dbg !7035
  br i1 %cmp2149, label %land.lhs.true2151, label %if.then2164, !dbg !7036

land.lhs.true2151:                                ; preds = %land.lhs.true2138
  %1058 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !7037
  %u2152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1058, i32 0, i32 1, !dbg !7037
  %fld2153 = bitcast %union.u* %u2152 to [1 x %union.rtunion_def]*, !dbg !7037
  %arrayidx2154 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2153, i64 0, i64 0, !dbg !7037
  %rt_rtx2155 = bitcast %union.rtunion_def* %arrayidx2154 to %struct.rtx_def**, !dbg !7037
  %1059 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2155, align 8, !dbg !7037
  %u2156 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1059, i32 0, i32 1, !dbg !7037
  %fld2157 = bitcast %union.u* %u2156 to [1 x %union.rtunion_def]*, !dbg !7037
  %arrayidx2158 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2157, i64 0, i64 1, !dbg !7037
  %rt_rtx2159 = bitcast %union.rtunion_def* %arrayidx2158 to %struct.rtx_def**, !dbg !7037
  %1060 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2159, align 8, !dbg !7037
  %1061 = bitcast %struct.rtx_def* %1060 to i32*, !dbg !7037
  %bf.load2160 = load i32, i32* %1061, align 8, !dbg !7037
  %bf.clear2161 = and i32 %bf.load2160, 65535, !dbg !7037
  %cmp2162 = icmp eq i32 %bf.clear2161, 44, !dbg !7038
  br i1 %cmp2162, label %if.end2171, label %if.then2164, !dbg !7039

if.then2164:                                      ; preds = %land.lhs.true2151, %land.lhs.true2138, %land.lhs.true2129, %land.lhs.true2124
  %1062 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !7040
  %1063 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !7043
  %call2165 = call i32 @rtx_equal_p(%struct.rtx_def* %1062, %struct.rtx_def* %1063), !dbg !7044
  %tobool2166 = icmp ne i32 %call2165, 0, !dbg !7044
  br i1 %tobool2166, label %if.end2170, label %if.then2167, !dbg !7045

if.then2167:                                      ; preds = %if.then2164
  %1064 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !7046
  %call2168 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %1064), !dbg !7048
  store %struct.rtx_def* %call2168, %struct.rtx_def** %src_const, align 8, !dbg !7049
  %1065 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7050
  %1066 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !7051
  %call2169 = call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %1065, i32 4, %struct.rtx_def* %1066), !dbg !7052
  %1067 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7053
  call void @df_notes_rescan(%struct.rtx_def* %1067), !dbg !7054
  br label %if.end2170, !dbg !7055

if.end2170:                                       ; preds = %if.then2167, %if.then2164
  br label %if.end2171, !dbg !7056

if.end2171:                                       ; preds = %if.end2170, %land.lhs.true2151, %land.lhs.true2119, %land.lhs.true2114, %land.lhs.true2112, %if.end2109
  store i32 0, i32* @do_not_record, align 4, !dbg !7057
  br label %while.cond2172, !dbg !7058

while.cond2172:                                   ; preds = %while.body2188, %if.end2171
  %1068 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !7059
  %1069 = bitcast %struct.rtx_def* %1068 to i32*, !dbg !7059
  %bf.load2173 = load i32, i32* %1069, align 8, !dbg !7059
  %bf.clear2174 = and i32 %bf.load2173, 65535, !dbg !7059
  %cmp2175 = icmp eq i32 %bf.clear2174, 39, !dbg !7060
  br i1 %cmp2175, label %lor.end2187, label %lor.lhs.false2177, !dbg !7061

lor.lhs.false2177:                                ; preds = %while.cond2172
  %1070 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !7062
  %1071 = bitcast %struct.rtx_def* %1070 to i32*, !dbg !7062
  %bf.load2178 = load i32, i32* %1071, align 8, !dbg !7062
  %bf.clear2179 = and i32 %bf.load2178, 65535, !dbg !7062
  %cmp2180 = icmp eq i32 %bf.clear2179, 120, !dbg !7063
  br i1 %cmp2180, label %lor.end2187, label %lor.rhs2182, !dbg !7064

lor.rhs2182:                                      ; preds = %lor.lhs.false2177
  %1072 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !7065
  %1073 = bitcast %struct.rtx_def* %1072 to i32*, !dbg !7065
  %bf.load2183 = load i32, i32* %1073, align 8, !dbg !7065
  %bf.clear2184 = and i32 %bf.load2183, 65535, !dbg !7065
  %cmp2185 = icmp eq i32 %bf.clear2184, 40, !dbg !7066
  br label %lor.end2187, !dbg !7064

lor.end2187:                                      ; preds = %lor.rhs2182, %lor.lhs.false2177, %while.cond2172
  %1074 = phi i1 [ true, %lor.lhs.false2177 ], [ true, %while.cond2172 ], [ %cmp2185, %lor.rhs2182 ]
  br i1 %1074, label %while.body2188, label %while.end2193, !dbg !7058

while.body2188:                                   ; preds = %lor.end2187
  %1075 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !7067
  %u2189 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1075, i32 0, i32 1, !dbg !7067
  %fld2190 = bitcast %union.u* %u2189 to [1 x %union.rtunion_def]*, !dbg !7067
  %arrayidx2191 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2190, i64 0, i64 0, !dbg !7067
  %rt_rtx2192 = bitcast %union.rtunion_def* %arrayidx2191 to %struct.rtx_def**, !dbg !7067
  %1076 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2192, align 8, !dbg !7067
  store %struct.rtx_def* %1076, %struct.rtx_def** %dest477, align 8, !dbg !7068
  br label %while.cond2172, !dbg !7058, !llvm.loop !7069

while.end2193:                                    ; preds = %lor.end2187
  %1077 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !7070
  %1078 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7071
  %1079 = load i32, i32* %i, align 4, !dbg !7072
  %idxprom2194 = sext i32 %1079 to i64, !dbg !7071
  %arrayidx2195 = getelementptr inbounds %struct.set, %struct.set* %1078, i64 %idxprom2194, !dbg !7071
  %inner_dest = getelementptr inbounds %struct.set, %struct.set* %arrayidx2195, i32 0, i32 5, !dbg !7073
  store %struct.rtx_def* %1077, %struct.rtx_def** %inner_dest, align 8, !dbg !7074
  %1080 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !7075
  %1081 = bitcast %struct.rtx_def* %1080 to i32*, !dbg !7075
  %bf.load2196 = load i32, i32* %1081, align 8, !dbg !7075
  %bf.clear2197 = and i32 %bf.load2196, 65535, !dbg !7075
  %cmp2198 = icmp eq i32 %bf.clear2197, 43, !dbg !7075
  br i1 %cmp2198, label %if.then2200, label %if.end2221, !dbg !7077

if.then2200:                                      ; preds = %while.end2193
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %addr, metadata !7078, metadata !DIExpression()), !dbg !7080
  %1082 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !7081
  %u2201 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1082, i32 0, i32 1, !dbg !7081
  %fld2202 = bitcast %union.u* %u2201 to [1 x %union.rtunion_def]*, !dbg !7081
  %arrayidx2203 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2202, i64 0, i64 0, !dbg !7081
  %rt_rtx2204 = bitcast %union.rtunion_def* %arrayidx2203 to %struct.rtx_def**, !dbg !7081
  %1083 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2204, align 8, !dbg !7081
  store %struct.rtx_def* %1083, %struct.rtx_def** %addr, align 8, !dbg !7080
  %1084 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !7082
  %1085 = bitcast %struct.rtx_def* %1084 to i32*, !dbg !7082
  %bf.load2205 = load i32, i32* %1085, align 8, !dbg !7082
  %bf.clear2206 = and i32 %bf.load2205, 65535, !dbg !7082
  %idxprom2207 = sext i32 %bf.clear2206 to i64, !dbg !7082
  %arrayidx2208 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom2207, !dbg !7082
  %1086 = load i32, i32* %arrayidx2208, align 4, !dbg !7082
  %cmp2209 = icmp eq i32 %1086, 12, !dbg !7084
  br i1 %cmp2209, label %land.lhs.true2211, label %if.end2219, !dbg !7085

land.lhs.true2211:                                ; preds = %if.then2200
  %1087 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !7086
  %u2212 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1087, i32 0, i32 1, !dbg !7086
  %fld2213 = bitcast %union.u* %u2212 to [1 x %union.rtunion_def]*, !dbg !7086
  %arrayidx2214 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2213, i64 0, i64 0, !dbg !7086
  %rt_rtx2215 = bitcast %union.rtunion_def* %arrayidx2214 to %struct.rtx_def**, !dbg !7086
  %1088 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2215, align 8, !dbg !7086
  %1089 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !7087
  %cmp2216 = icmp eq %struct.rtx_def* %1088, %1089, !dbg !7088
  br i1 %cmp2216, label %if.then2218, label %if.end2219, !dbg !7089

if.then2218:                                      ; preds = %land.lhs.true2211
  %1090 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !7090
  call void @invalidate(%struct.rtx_def* %1090, i32 0), !dbg !7091
  br label %if.end2219, !dbg !7091

if.end2219:                                       ; preds = %if.then2218, %land.lhs.true2211, %if.then2200
  %1091 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !7092
  %1092 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7093
  %call2220 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %1091, %struct.rtx_def* %1092), !dbg !7094
  store %struct.rtx_def* %call2220, %struct.rtx_def** %dest477, align 8, !dbg !7095
  br label %if.end2221, !dbg !7096

if.end2221:                                       ; preds = %if.end2219, %while.end2193
  %1093 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !7097
  %1094 = bitcast %struct.rtx_def* %1093 to i32*, !dbg !7097
  %bf.load2222 = load i32, i32* %1094, align 8, !dbg !7097
  %bf.clear2223 = and i32 %bf.load2222, 65535, !dbg !7097
  %cmp2224 = icmp eq i32 %bf.clear2223, 37, !dbg !7097
  br i1 %cmp2224, label %land.lhs.true2226, label %cond.false2235, !dbg !7097

land.lhs.true2226:                                ; preds = %if.end2221
  %1095 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !7097
  %call2227 = call i32 @rhs_regno(%struct.rtx_def* %1095), !dbg !7097
  %cmp2228 = icmp uge i32 %call2227, 53, !dbg !7097
  br i1 %cmp2228, label %cond.true2230, label %cond.false2235, !dbg !7097

cond.true2230:                                    ; preds = %land.lhs.true2226
  %1096 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !7097
  %call2231 = call i32 @rhs_regno(%struct.rtx_def* %1096), !dbg !7097
  %call2232 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call2231), !dbg !7097
  %reg_qty2233 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call2232, i32 0, i32 1, !dbg !7097
  %1097 = load i32, i32* %reg_qty2233, align 4, !dbg !7097
  %add2234 = add i32 4736, %1097, !dbg !7097
  br label %cond.end2237, !dbg !7097

cond.false2235:                                   ; preds = %land.lhs.true2226, %if.end2221
  %1098 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !7097
  %1099 = load i32, i32* %mode, align 4, !dbg !7097
  %call2236 = call i32 @canon_hash(%struct.rtx_def* %1098, i32 %1099), !dbg !7097
  br label %cond.end2237, !dbg !7097

cond.end2237:                                     ; preds = %cond.false2235, %cond.true2230
  %cond2238 = phi i32 [ %add2234, %cond.true2230 ], [ %call2236, %cond.false2235 ], !dbg !7097
  %and2239 = and i32 %cond2238, 31, !dbg !7097
  %1100 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7098
  %1101 = load i32, i32* %i, align 4, !dbg !7099
  %idxprom2240 = sext i32 %1101 to i64, !dbg !7098
  %arrayidx2241 = getelementptr inbounds %struct.set, %struct.set* %1100, i64 %idxprom2240, !dbg !7098
  %dest_hash2242 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2241, i32 0, i32 4, !dbg !7100
  store i32 %and2239, i32* %dest_hash2242, align 4, !dbg !7101
  %1102 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7102
  %1103 = load i32, i32* %i, align 4, !dbg !7102
  %idxprom2243 = sext i32 %1103 to i64, !dbg !7102
  %arrayidx2244 = getelementptr inbounds %struct.set, %struct.set* %1102, i64 %idxprom2243, !dbg !7102
  %rtl2245 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2244, i32 0, i32 0, !dbg !7102
  %1104 = load %struct.rtx_def*, %struct.rtx_def** %rtl2245, align 8, !dbg !7102
  %u2246 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1104, i32 0, i32 1, !dbg !7102
  %fld2247 = bitcast %union.u* %u2246 to [1 x %union.rtunion_def]*, !dbg !7102
  %arrayidx2248 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2247, i64 0, i64 0, !dbg !7102
  %rt_rtx2249 = bitcast %union.rtunion_def* %arrayidx2248 to %struct.rtx_def**, !dbg !7102
  %1105 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2249, align 8, !dbg !7102
  %1106 = bitcast %struct.rtx_def* %1105 to i32*, !dbg !7102
  %bf.load2250 = load i32, i32* %1106, align 8, !dbg !7102
  %bf.clear2251 = and i32 %bf.load2250, 65535, !dbg !7102
  %cmp2252 = icmp eq i32 %bf.clear2251, 120, !dbg !7104
  br i1 %cmp2252, label %if.then2254, label %if.else2304, !dbg !7105

if.then2254:                                      ; preds = %cond.end2237
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %width2255, metadata !7106, metadata !DIExpression()), !dbg !7108
  %1107 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7109
  %1108 = load i32, i32* %i, align 4, !dbg !7109
  %idxprom2256 = sext i32 %1108 to i64, !dbg !7109
  %arrayidx2257 = getelementptr inbounds %struct.set, %struct.set* %1107, i64 %idxprom2256, !dbg !7109
  %rtl2258 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2257, i32 0, i32 0, !dbg !7109
  %1109 = load %struct.rtx_def*, %struct.rtx_def** %rtl2258, align 8, !dbg !7109
  %u2259 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1109, i32 0, i32 1, !dbg !7109
  %fld2260 = bitcast %union.u* %u2259 to [1 x %union.rtunion_def]*, !dbg !7109
  %arrayidx2261 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2260, i64 0, i64 0, !dbg !7109
  %rt_rtx2262 = bitcast %union.rtunion_def* %arrayidx2261 to %struct.rtx_def**, !dbg !7109
  %1110 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2262, align 8, !dbg !7109
  %u2263 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1110, i32 0, i32 1, !dbg !7109
  %fld2264 = bitcast %union.u* %u2263 to [1 x %union.rtunion_def]*, !dbg !7109
  %arrayidx2265 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2264, i64 0, i64 1, !dbg !7109
  %rt_rtx2266 = bitcast %union.rtunion_def* %arrayidx2265 to %struct.rtx_def**, !dbg !7109
  %1111 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2266, align 8, !dbg !7109
  store %struct.rtx_def* %1111, %struct.rtx_def** %width2255, align 8, !dbg !7108
  %1112 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !7110
  %cmp2267 = icmp ne %struct.rtx_def* %1112, null, !dbg !7112
  br i1 %cmp2267, label %land.lhs.true2269, label %if.else2296, !dbg !7113

land.lhs.true2269:                                ; preds = %if.then2254
  %1113 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !7114
  %1114 = bitcast %struct.rtx_def* %1113 to i32*, !dbg !7114
  %bf.load2270 = load i32, i32* %1114, align 8, !dbg !7114
  %bf.clear2271 = and i32 %bf.load2270, 65535, !dbg !7114
  %cmp2272 = icmp eq i32 %bf.clear2271, 30, !dbg !7114
  br i1 %cmp2272, label %land.lhs.true2274, label %if.else2296, !dbg !7115

land.lhs.true2274:                                ; preds = %land.lhs.true2269
  %1115 = load %struct.rtx_def*, %struct.rtx_def** %width2255, align 8, !dbg !7116
  %1116 = bitcast %struct.rtx_def* %1115 to i32*, !dbg !7116
  %bf.load2275 = load i32, i32* %1116, align 8, !dbg !7116
  %bf.clear2276 = and i32 %bf.load2275, 65535, !dbg !7116
  %cmp2277 = icmp eq i32 %bf.clear2276, 30, !dbg !7116
  br i1 %cmp2277, label %land.lhs.true2279, label %if.else2296, !dbg !7117

land.lhs.true2279:                                ; preds = %land.lhs.true2274
  %1117 = load %struct.rtx_def*, %struct.rtx_def** %width2255, align 8, !dbg !7118
  %u2280 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1117, i32 0, i32 1, !dbg !7118
  %hwint2281 = bitcast %union.u* %u2280 to [1 x i64]*, !dbg !7118
  %arrayidx2282 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint2281, i64 0, i64 0, !dbg !7118
  %1118 = load i64, i64* %arrayidx2282, align 8, !dbg !7118
  %cmp2283 = icmp slt i64 %1118, 64, !dbg !7119
  br i1 %cmp2283, label %land.lhs.true2285, label %if.else2296, !dbg !7120

land.lhs.true2285:                                ; preds = %land.lhs.true2279
  %1119 = load %struct.rtx_def*, %struct.rtx_def** %src_const, align 8, !dbg !7121
  %u2286 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1119, i32 0, i32 1, !dbg !7121
  %hwint2287 = bitcast %union.u* %u2286 to [1 x i64]*, !dbg !7121
  %arrayidx2288 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint2287, i64 0, i64 0, !dbg !7121
  %1120 = load i64, i64* %arrayidx2288, align 8, !dbg !7121
  %1121 = load %struct.rtx_def*, %struct.rtx_def** %width2255, align 8, !dbg !7122
  %u2289 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1121, i32 0, i32 1, !dbg !7122
  %hwint2290 = bitcast %union.u* %u2289 to [1 x i64]*, !dbg !7122
  %arrayidx2291 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint2290, i64 0, i64 0, !dbg !7122
  %1122 = load i64, i64* %arrayidx2291, align 8, !dbg !7122
  %shl2292 = shl i64 -1, %1122, !dbg !7123
  %and2293 = and i64 %1120, %shl2292, !dbg !7124
  %tobool2294 = icmp ne i64 %and2293, 0, !dbg !7124
  br i1 %tobool2294, label %if.else2296, label %if.then2295, !dbg !7125

if.then2295:                                      ; preds = %land.lhs.true2285
  br label %if.end2303, !dbg !7125

if.else2296:                                      ; preds = %land.lhs.true2285, %land.lhs.true2279, %land.lhs.true2274, %land.lhs.true2269, %if.then2254
  %1123 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7126
  %1124 = load i32, i32* %i, align 4, !dbg !7128
  %idxprom2297 = sext i32 %1124 to i64, !dbg !7126
  %arrayidx2298 = getelementptr inbounds %struct.set, %struct.set* %1123, i64 %idxprom2297, !dbg !7126
  %src_elt2299 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2298, i32 0, i32 2, !dbg !7129
  store %struct.table_elt* null, %struct.table_elt** %src_elt2299, align 8, !dbg !7130
  %1125 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7131
  %1126 = load i32, i32* %i, align 4, !dbg !7132
  %idxprom2300 = sext i32 %1126 to i64, !dbg !7131
  %arrayidx2301 = getelementptr inbounds %struct.set, %struct.set* %1125, i64 %idxprom2300, !dbg !7131
  %src_volatile2302 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2301, i32 0, i32 7, !dbg !7133
  store i8 1, i8* %src_volatile2302, align 1, !dbg !7134
  store %struct.rtx_def* null, %struct.rtx_def** %src_eqv, align 8, !dbg !7135
  store %struct.table_elt* null, %struct.table_elt** %src_eqv_elt, align 8, !dbg !7136
  br label %if.end2303

if.end2303:                                       ; preds = %if.else2296, %if.then2295
  br label %if.end2427, !dbg !7137

if.else2304:                                      ; preds = %cond.end2237
  %1127 = load i32, i32* %n_sets, align 4, !dbg !7138
  %cmp2305 = icmp eq i32 %1127, 1, !dbg !7140
  br i1 %cmp2305, label %land.lhs.true2307, label %if.else2318, !dbg !7141

land.lhs.true2307:                                ; preds = %if.else2304
  %1128 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !7142
  %1129 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !7143
  %cmp2308 = icmp eq %struct.rtx_def* %1128, %1129, !dbg !7144
  br i1 %cmp2308, label %land.lhs.true2310, label %if.else2318, !dbg !7145

land.lhs.true2310:                                ; preds = %land.lhs.true2307
  %1130 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !7146
  %1131 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !7147
  %cmp2311 = icmp eq %struct.rtx_def* %1130, %1131, !dbg !7148
  br i1 %cmp2311, label %if.then2313, label %if.else2318, !dbg !7149

if.then2313:                                      ; preds = %land.lhs.true2310
  %1132 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7150
  %call2314 = call %struct.rtx_def* @delete_insn_and_edges(%struct.rtx_def* %1132), !dbg !7152
  store i8 1, i8* @cse_jumps_altered, align 1, !dbg !7153
  %1133 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7154
  %1134 = load i32, i32* %i, align 4, !dbg !7155
  %idxprom2315 = sext i32 %1134 to i64, !dbg !7154
  %arrayidx2316 = getelementptr inbounds %struct.set, %struct.set* %1133, i64 %idxprom2315, !dbg !7154
  %rtl2317 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2316, i32 0, i32 0, !dbg !7156
  store %struct.rtx_def* null, %struct.rtx_def** %rtl2317, align 8, !dbg !7157
  br label %if.end2426, !dbg !7158

if.else2318:                                      ; preds = %land.lhs.true2310, %land.lhs.true2307, %if.else2304
  %1135 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !7159
  %1136 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !7161
  %cmp2319 = icmp eq %struct.rtx_def* %1135, %1136, !dbg !7162
  br i1 %cmp2319, label %land.lhs.true2321, label %if.else2381, !dbg !7163

land.lhs.true2321:                                ; preds = %if.else2318
  %1137 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !7164
  %1138 = bitcast %struct.rtx_def* %1137 to i32*, !dbg !7164
  %bf.load2322 = load i32, i32* %1138, align 8, !dbg !7164
  %bf.clear2323 = and i32 %bf.load2322, 65535, !dbg !7164
  %cmp2324 = icmp eq i32 %bf.clear2323, 44, !dbg !7165
  br i1 %cmp2324, label %land.lhs.true2326, label %if.else2381, !dbg !7166

land.lhs.true2326:                                ; preds = %land.lhs.true2321
  %1139 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !7167
  %1140 = bitcast %struct.rtx_def* %1139 to i32*, !dbg !7167
  %bf.load2327 = load i32, i32* %1140, align 8, !dbg !7167
  %bf.lshr2328 = lshr i32 %bf.load2327, 27, !dbg !7167
  %bf.clear2329 = and i32 %bf.lshr2328, 1, !dbg !7167
  %tobool2330 = icmp ne i32 %bf.clear2329, 0, !dbg !7167
  br i1 %tobool2330, label %if.else2381, label %if.then2331, !dbg !7168

if.then2331:                                      ; preds = %land.lhs.true2326
  %1141 = load i32, i32* %n_sets, align 4, !dbg !7169
  %cmp2332 = icmp eq i32 %1141, 1, !dbg !7172
  br i1 %cmp2332, label %if.then2334, label %if.else2372, !dbg !7173

if.then2334:                                      ; preds = %if.then2331
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_rtx2335, metadata !7174, metadata !DIExpression()), !dbg !7176
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %note2336, metadata !7177, metadata !DIExpression()), !dbg !7178
  %1142 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !7179
  %u2337 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1142, i32 0, i32 1, !dbg !7179
  %fld2338 = bitcast %union.u* %u2337 to [1 x %union.rtunion_def]*, !dbg !7179
  %arrayidx2339 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2338, i64 0, i64 0, !dbg !7179
  %rt_rtx2340 = bitcast %union.rtunion_def* %arrayidx2339 to %struct.rtx_def**, !dbg !7179
  %1143 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2340, align 8, !dbg !7179
  %call2341 = call %struct.rtx_def* @gen_jump(%struct.rtx_def* %1143), !dbg !7180
  %1144 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7181
  %call2342 = call %struct.rtx_def* @emit_jump_insn_before(%struct.rtx_def* %call2341, %struct.rtx_def* %1144), !dbg !7182
  store %struct.rtx_def* %call2342, %struct.rtx_def** %new_rtx2335, align 8, !dbg !7183
  %1145 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !7184
  %u2343 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1145, i32 0, i32 1, !dbg !7184
  %fld2344 = bitcast %union.u* %u2343 to [1 x %union.rtunion_def]*, !dbg !7184
  %arrayidx2345 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2344, i64 0, i64 0, !dbg !7184
  %rt_rtx2346 = bitcast %union.rtunion_def* %arrayidx2345 to %struct.rtx_def**, !dbg !7184
  %1146 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2346, align 8, !dbg !7184
  %1147 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx2335, align 8, !dbg !7185
  %u2347 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1147, i32 0, i32 1, !dbg !7185
  %fld2348 = bitcast %union.u* %u2347 to [1 x %union.rtunion_def]*, !dbg !7185
  %arrayidx2349 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2348, i64 0, i64 8, !dbg !7185
  %rt_rtx2350 = bitcast %union.rtunion_def* %arrayidx2349 to %struct.rtx_def**, !dbg !7185
  store %struct.rtx_def* %1146, %struct.rtx_def** %rt_rtx2350, align 8, !dbg !7186
  %1148 = load %struct.rtx_def*, %struct.rtx_def** %src476, align 8, !dbg !7187
  %u2351 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1148, i32 0, i32 1, !dbg !7187
  %fld2352 = bitcast %union.u* %u2351 to [1 x %union.rtunion_def]*, !dbg !7187
  %arrayidx2353 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2352, i64 0, i64 0, !dbg !7187
  %rt_rtx2354 = bitcast %union.rtunion_def* %arrayidx2353 to %struct.rtx_def**, !dbg !7187
  %1149 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2354, align 8, !dbg !7187
  %u2355 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1149, i32 0, i32 1, !dbg !7187
  %fld2356 = bitcast %union.u* %u2355 to [1 x %union.rtunion_def]*, !dbg !7187
  %arrayidx2357 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2356, i64 0, i64 4, !dbg !7187
  %rt_int = bitcast %union.rtunion_def* %arrayidx2357 to i32*, !dbg !7187
  %1150 = load i32, i32* %rt_int, align 8, !dbg !7188
  %inc2358 = add nsw i32 %1150, 1, !dbg !7188
  store i32 %inc2358, i32* %rt_int, align 8, !dbg !7188
  %1151 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7189
  %call2359 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %1151, i32 28, %struct.rtx_def* null), !dbg !7190
  store %struct.rtx_def* %call2359, %struct.rtx_def** %note2336, align 8, !dbg !7191
  %1152 = load %struct.rtx_def*, %struct.rtx_def** %note2336, align 8, !dbg !7192
  %tobool2360 = icmp ne %struct.rtx_def* %1152, null, !dbg !7192
  br i1 %tobool2360, label %if.then2361, label %if.end2370, !dbg !7194

if.then2361:                                      ; preds = %if.then2334
  %1153 = load %struct.rtx_def*, %struct.rtx_def** %note2336, align 8, !dbg !7195
  %u2362 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1153, i32 0, i32 1, !dbg !7195
  %fld2363 = bitcast %union.u* %u2362 to [1 x %union.rtunion_def]*, !dbg !7195
  %arrayidx2364 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2363, i64 0, i64 1, !dbg !7195
  %rt_rtx2365 = bitcast %union.rtunion_def* %arrayidx2364 to %struct.rtx_def**, !dbg !7195
  store %struct.rtx_def* null, %struct.rtx_def** %rt_rtx2365, align 8, !dbg !7197
  %1154 = load %struct.rtx_def*, %struct.rtx_def** %note2336, align 8, !dbg !7198
  %1155 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx2335, align 8, !dbg !7199
  %u2366 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1155, i32 0, i32 1, !dbg !7199
  %fld2367 = bitcast %union.u* %u2366 to [1 x %union.rtunion_def]*, !dbg !7199
  %arrayidx2368 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2367, i64 0, i64 7, !dbg !7199
  %rt_rtx2369 = bitcast %union.rtunion_def* %arrayidx2368 to %struct.rtx_def**, !dbg !7199
  store %struct.rtx_def* %1154, %struct.rtx_def** %rt_rtx2369, align 8, !dbg !7200
  br label %if.end2370, !dbg !7201

if.end2370:                                       ; preds = %if.then2361, %if.then2334
  %1156 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7202
  %call2371 = call %struct.rtx_def* @delete_insn_and_edges(%struct.rtx_def* %1156), !dbg !7203
  %1157 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx2335, align 8, !dbg !7204
  store %struct.rtx_def* %1157, %struct.rtx_def** %insn.addr, align 8, !dbg !7205
  br label %if.end2377, !dbg !7206

if.else2372:                                      ; preds = %if.then2331
  %1158 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7207
  %u2373 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1158, i32 0, i32 1, !dbg !7207
  %fld2374 = bitcast %union.u* %u2373 to [1 x %union.rtunion_def]*, !dbg !7207
  %arrayidx2375 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2374, i64 0, i64 6, !dbg !7207
  %rt_int2376 = bitcast %union.rtunion_def* %arrayidx2375 to i32*, !dbg !7207
  store i32 -1, i32* %rt_int2376, align 8, !dbg !7208
  br label %if.end2377

if.end2377:                                       ; preds = %if.else2372, %if.end2370
  store i8 1, i8* @cse_jumps_altered, align 1, !dbg !7209
  %1159 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7210
  %1160 = load i32, i32* %i, align 4, !dbg !7211
  %idxprom2378 = sext i32 %1160 to i64, !dbg !7210
  %arrayidx2379 = getelementptr inbounds %struct.set, %struct.set* %1159, i64 %idxprom2378, !dbg !7210
  %rtl2380 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2379, i32 0, i32 0, !dbg !7212
  store %struct.rtx_def* null, %struct.rtx_def** %rtl2380, align 8, !dbg !7213
  br label %if.end2425, !dbg !7214

if.else2381:                                      ; preds = %land.lhs.true2326, %land.lhs.true2321, %if.else2318
  %1161 = load i32, i32* @do_not_record, align 4, !dbg !7215
  %tobool2382 = icmp ne i32 %1161, 0, !dbg !7215
  br i1 %tobool2382, label %if.then2383, label %if.end2424, !dbg !7217

if.then2383:                                      ; preds = %if.else2381
  %1162 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !7218
  %1163 = bitcast %struct.rtx_def* %1162 to i32*, !dbg !7218
  %bf.load2384 = load i32, i32* %1163, align 8, !dbg !7218
  %bf.clear2385 = and i32 %bf.load2384, 65535, !dbg !7218
  %cmp2386 = icmp eq i32 %bf.clear2385, 37, !dbg !7218
  br i1 %cmp2386, label %if.then2393, label %lor.lhs.false2388, !dbg !7221

lor.lhs.false2388:                                ; preds = %if.then2383
  %1164 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !7222
  %1165 = bitcast %struct.rtx_def* %1164 to i32*, !dbg !7222
  %bf.load2389 = load i32, i32* %1165, align 8, !dbg !7222
  %bf.clear2390 = and i32 %bf.load2389, 65535, !dbg !7222
  %cmp2391 = icmp eq i32 %bf.clear2390, 39, !dbg !7223
  br i1 %cmp2391, label %if.then2393, label %if.else2394, !dbg !7224

if.then2393:                                      ; preds = %lor.lhs.false2388, %if.then2383
  %1166 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !7225
  call void @invalidate(%struct.rtx_def* %1166, i32 0), !dbg !7226
  br label %if.end2420, !dbg !7226

if.else2394:                                      ; preds = %lor.lhs.false2388
  %1167 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !7227
  %1168 = bitcast %struct.rtx_def* %1167 to i32*, !dbg !7227
  %bf.load2395 = load i32, i32* %1168, align 8, !dbg !7227
  %bf.clear2396 = and i32 %bf.load2395, 65535, !dbg !7227
  %cmp2397 = icmp eq i32 %bf.clear2396, 43, !dbg !7227
  br i1 %cmp2397, label %if.then2399, label %if.else2400, !dbg !7229

if.then2399:                                      ; preds = %if.else2394
  %1169 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !7230
  call void @invalidate(%struct.rtx_def* %1169, i32 0), !dbg !7231
  br label %if.end2419, !dbg !7231

if.else2400:                                      ; preds = %if.else2394
  %1170 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !7232
  %1171 = bitcast %struct.rtx_def* %1170 to i32*, !dbg !7232
  %bf.load2401 = load i32, i32* %1171, align 8, !dbg !7232
  %bf.clear2402 = and i32 %bf.load2401, 65535, !dbg !7232
  %cmp2403 = icmp eq i32 %bf.clear2402, 40, !dbg !7234
  br i1 %cmp2403, label %if.then2410, label %lor.lhs.false2405, !dbg !7235

lor.lhs.false2405:                                ; preds = %if.else2400
  %1172 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !7236
  %1173 = bitcast %struct.rtx_def* %1172 to i32*, !dbg !7236
  %bf.load2406 = load i32, i32* %1173, align 8, !dbg !7236
  %bf.clear2407 = and i32 %bf.load2406, 65535, !dbg !7236
  %cmp2408 = icmp eq i32 %bf.clear2407, 120, !dbg !7237
  br i1 %cmp2408, label %if.then2410, label %if.end2418, !dbg !7238

if.then2410:                                      ; preds = %lor.lhs.false2405, %if.else2400
  %1174 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !7239
  %u2411 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1174, i32 0, i32 1, !dbg !7239
  %fld2412 = bitcast %union.u* %u2411 to [1 x %union.rtunion_def]*, !dbg !7239
  %arrayidx2413 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2412, i64 0, i64 0, !dbg !7239
  %rt_rtx2414 = bitcast %union.rtunion_def* %arrayidx2413 to %struct.rtx_def**, !dbg !7239
  %1175 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2414, align 8, !dbg !7239
  %1176 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !7240
  %1177 = bitcast %struct.rtx_def* %1176 to i32*, !dbg !7240
  %bf.load2415 = load i32, i32* %1177, align 8, !dbg !7240
  %bf.lshr2416 = lshr i32 %bf.load2415, 16, !dbg !7240
  %bf.clear2417 = and i32 %bf.lshr2416, 255, !dbg !7240
  call void @invalidate(%struct.rtx_def* %1175, i32 %bf.clear2417), !dbg !7241
  br label %if.end2418, !dbg !7241

if.end2418:                                       ; preds = %if.then2410, %lor.lhs.false2405
  br label %if.end2419

if.end2419:                                       ; preds = %if.end2418, %if.then2399
  br label %if.end2420

if.end2420:                                       ; preds = %if.end2419, %if.then2393
  %1178 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7242
  %1179 = load i32, i32* %i, align 4, !dbg !7243
  %idxprom2421 = sext i32 %1179 to i64, !dbg !7242
  %arrayidx2422 = getelementptr inbounds %struct.set, %struct.set* %1178, i64 %idxprom2421, !dbg !7242
  %rtl2423 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2422, i32 0, i32 0, !dbg !7244
  store %struct.rtx_def* null, %struct.rtx_def** %rtl2423, align 8, !dbg !7245
  br label %if.end2424, !dbg !7246

if.end2424:                                       ; preds = %if.end2420, %if.else2381
  br label %if.end2425

if.end2425:                                       ; preds = %if.end2424, %if.end2377
  br label %if.end2426

if.end2426:                                       ; preds = %if.end2425, %if.then2313
  br label %if.end2427

if.end2427:                                       ; preds = %if.end2426, %if.end2303
  %1180 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7247
  %1181 = load i32, i32* %i, align 4, !dbg !7249
  %idxprom2428 = sext i32 %1181 to i64, !dbg !7247
  %arrayidx2429 = getelementptr inbounds %struct.set, %struct.set* %1180, i64 %idxprom2428, !dbg !7247
  %rtl2430 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2429, i32 0, i32 0, !dbg !7250
  %1182 = load %struct.rtx_def*, %struct.rtx_def** %rtl2430, align 8, !dbg !7250
  %cmp2431 = icmp ne %struct.rtx_def* %1182, null, !dbg !7251
  br i1 %cmp2431, label %land.lhs.true2433, label %if.end2493, !dbg !7252

land.lhs.true2433:                                ; preds = %if.end2427
  %1183 = load %struct.rtx_def*, %struct.rtx_def** %dest477, align 8, !dbg !7253
  %1184 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7254
  %1185 = load i32, i32* %i, align 4, !dbg !7254
  %idxprom2434 = sext i32 %1185 to i64, !dbg !7254
  %arrayidx2435 = getelementptr inbounds %struct.set, %struct.set* %1184, i64 %idxprom2434, !dbg !7254
  %rtl2436 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2435, i32 0, i32 0, !dbg !7254
  %1186 = load %struct.rtx_def*, %struct.rtx_def** %rtl2436, align 8, !dbg !7254
  %u2437 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1186, i32 0, i32 1, !dbg !7254
  %fld2438 = bitcast %union.u* %u2437 to [1 x %union.rtunion_def]*, !dbg !7254
  %arrayidx2439 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2438, i64 0, i64 0, !dbg !7254
  %rt_rtx2440 = bitcast %union.rtunion_def* %arrayidx2439 to %struct.rtx_def**, !dbg !7254
  %1187 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2440, align 8, !dbg !7254
  %cmp2441 = icmp ne %struct.rtx_def* %1183, %1187, !dbg !7255
  br i1 %cmp2441, label %if.then2443, label %if.end2493, !dbg !7256

if.then2443:                                      ; preds = %land.lhs.true2433
  %1188 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7257
  %1189 = load i32, i32* %i, align 4, !dbg !7257
  %idxprom2444 = sext i32 %1189 to i64, !dbg !7257
  %arrayidx2445 = getelementptr inbounds %struct.set, %struct.set* %1188, i64 %idxprom2444, !dbg !7257
  %rtl2446 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2445, i32 0, i32 0, !dbg !7257
  %1190 = load %struct.rtx_def*, %struct.rtx_def** %rtl2446, align 8, !dbg !7257
  %u2447 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1190, i32 0, i32 1, !dbg !7257
  %fld2448 = bitcast %union.u* %u2447 to [1 x %union.rtunion_def]*, !dbg !7257
  %arrayidx2449 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2448, i64 0, i64 0, !dbg !7257
  %rt_rtx2450 = bitcast %union.rtunion_def* %arrayidx2449 to %struct.rtx_def**, !dbg !7257
  %1191 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2450, align 8, !dbg !7257
  %1192 = bitcast %struct.rtx_def* %1191 to i32*, !dbg !7257
  %bf.load2451 = load i32, i32* %1192, align 8, !dbg !7257
  %bf.clear2452 = and i32 %bf.load2451, 65535, !dbg !7257
  %cmp2453 = icmp eq i32 %bf.clear2452, 37, !dbg !7257
  br i1 %cmp2453, label %land.lhs.true2455, label %cond.false2478, !dbg !7257

land.lhs.true2455:                                ; preds = %if.then2443
  %1193 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7257
  %1194 = load i32, i32* %i, align 4, !dbg !7257
  %idxprom2456 = sext i32 %1194 to i64, !dbg !7257
  %arrayidx2457 = getelementptr inbounds %struct.set, %struct.set* %1193, i64 %idxprom2456, !dbg !7257
  %rtl2458 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2457, i32 0, i32 0, !dbg !7257
  %1195 = load %struct.rtx_def*, %struct.rtx_def** %rtl2458, align 8, !dbg !7257
  %u2459 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1195, i32 0, i32 1, !dbg !7257
  %fld2460 = bitcast %union.u* %u2459 to [1 x %union.rtunion_def]*, !dbg !7257
  %arrayidx2461 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2460, i64 0, i64 0, !dbg !7257
  %rt_rtx2462 = bitcast %union.rtunion_def* %arrayidx2461 to %struct.rtx_def**, !dbg !7257
  %1196 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2462, align 8, !dbg !7257
  %call2463 = call i32 @rhs_regno(%struct.rtx_def* %1196), !dbg !7257
  %cmp2464 = icmp uge i32 %call2463, 53, !dbg !7257
  br i1 %cmp2464, label %cond.true2466, label %cond.false2478, !dbg !7257

cond.true2466:                                    ; preds = %land.lhs.true2455
  %1197 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7257
  %1198 = load i32, i32* %i, align 4, !dbg !7257
  %idxprom2467 = sext i32 %1198 to i64, !dbg !7257
  %arrayidx2468 = getelementptr inbounds %struct.set, %struct.set* %1197, i64 %idxprom2467, !dbg !7257
  %rtl2469 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2468, i32 0, i32 0, !dbg !7257
  %1199 = load %struct.rtx_def*, %struct.rtx_def** %rtl2469, align 8, !dbg !7257
  %u2470 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1199, i32 0, i32 1, !dbg !7257
  %fld2471 = bitcast %union.u* %u2470 to [1 x %union.rtunion_def]*, !dbg !7257
  %arrayidx2472 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2471, i64 0, i64 0, !dbg !7257
  %rt_rtx2473 = bitcast %union.rtunion_def* %arrayidx2472 to %struct.rtx_def**, !dbg !7257
  %1200 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2473, align 8, !dbg !7257
  %call2474 = call i32 @rhs_regno(%struct.rtx_def* %1200), !dbg !7257
  %call2475 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call2474), !dbg !7257
  %reg_qty2476 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call2475, i32 0, i32 1, !dbg !7257
  %1201 = load i32, i32* %reg_qty2476, align 4, !dbg !7257
  %add2477 = add i32 4736, %1201, !dbg !7257
  br label %cond.end2487, !dbg !7257

cond.false2478:                                   ; preds = %land.lhs.true2455, %if.then2443
  %1202 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7257
  %1203 = load i32, i32* %i, align 4, !dbg !7257
  %idxprom2479 = sext i32 %1203 to i64, !dbg !7257
  %arrayidx2480 = getelementptr inbounds %struct.set, %struct.set* %1202, i64 %idxprom2479, !dbg !7257
  %rtl2481 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2480, i32 0, i32 0, !dbg !7257
  %1204 = load %struct.rtx_def*, %struct.rtx_def** %rtl2481, align 8, !dbg !7257
  %u2482 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1204, i32 0, i32 1, !dbg !7257
  %fld2483 = bitcast %union.u* %u2482 to [1 x %union.rtunion_def]*, !dbg !7257
  %arrayidx2484 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2483, i64 0, i64 0, !dbg !7257
  %rt_rtx2485 = bitcast %union.rtunion_def* %arrayidx2484 to %struct.rtx_def**, !dbg !7257
  %1205 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2485, align 8, !dbg !7257
  %1206 = load i32, i32* %mode, align 4, !dbg !7257
  %call2486 = call i32 @canon_hash(%struct.rtx_def* %1205, i32 %1206), !dbg !7257
  br label %cond.end2487, !dbg !7257

cond.end2487:                                     ; preds = %cond.false2478, %cond.true2466
  %cond2488 = phi i32 [ %add2477, %cond.true2466 ], [ %call2486, %cond.false2478 ], !dbg !7257
  %and2489 = and i32 %cond2488, 31, !dbg !7257
  %1207 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7258
  %1208 = load i32, i32* %i, align 4, !dbg !7259
  %idxprom2490 = sext i32 %1208 to i64, !dbg !7258
  %arrayidx2491 = getelementptr inbounds %struct.set, %struct.set* %1207, i64 %idxprom2490, !dbg !7258
  %dest_hash2492 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2491, i32 0, i32 4, !dbg !7260
  store i32 %and2489, i32* %dest_hash2492, align 4, !dbg !7261
  br label %if.end2493, !dbg !7258

if.end2493:                                       ; preds = %cond.end2487, %land.lhs.true2433, %if.end2427
  br label %for.inc2494, !dbg !7262

for.inc2494:                                      ; preds = %if.end2493, %if.then1924
  %1209 = load i32, i32* %i, align 4, !dbg !7263
  %inc2495 = add nsw i32 %1209, 1, !dbg !7263
  store i32 %inc2495, i32* %i, align 4, !dbg !7263
  br label %for.cond472, !dbg !7264, !llvm.loop !7265

for.end2496:                                      ; preds = %for.cond472
  %1210 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8, !dbg !7267
  %tobool2497 = icmp ne %struct.rtx_def* %1210, null, !dbg !7267
  br i1 %tobool2497, label %land.lhs.true2498, label %if.end2605, !dbg !7269

land.lhs.true2498:                                ; preds = %for.end2496
  %1211 = load %struct.table_elt*, %struct.table_elt** %src_eqv_elt, align 8, !dbg !7270
  %cmp2499 = icmp eq %struct.table_elt* %1211, null, !dbg !7271
  br i1 %cmp2499, label %land.lhs.true2501, label %if.end2605, !dbg !7272

land.lhs.true2501:                                ; preds = %land.lhs.true2498
  %1212 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7273
  %arrayidx2502 = getelementptr inbounds %struct.set, %struct.set* %1212, i64 0, !dbg !7273
  %rtl2503 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2502, i32 0, i32 0, !dbg !7274
  %1213 = load %struct.rtx_def*, %struct.rtx_def** %rtl2503, align 8, !dbg !7274
  %cmp2504 = icmp ne %struct.rtx_def* %1213, null, !dbg !7275
  br i1 %cmp2504, label %land.lhs.true2506, label %if.end2605, !dbg !7276

land.lhs.true2506:                                ; preds = %land.lhs.true2501
  %1214 = load i32, i32* %src_eqv_volatile, align 4, !dbg !7277
  %tobool2507 = icmp ne i32 %1214, 0, !dbg !7277
  br i1 %tobool2507, label %if.end2605, label %land.lhs.true2508, !dbg !7278

land.lhs.true2508:                                ; preds = %land.lhs.true2506
  %1215 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8, !dbg !7279
  %1216 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7280
  %arrayidx2509 = getelementptr inbounds %struct.set, %struct.set* %1216, i64 0, !dbg !7280
  %rtl2510 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2509, i32 0, i32 0, !dbg !7280
  %1217 = load %struct.rtx_def*, %struct.rtx_def** %rtl2510, align 8, !dbg !7280
  %u2511 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1217, i32 0, i32 1, !dbg !7280
  %fld2512 = bitcast %union.u* %u2511 to [1 x %union.rtunion_def]*, !dbg !7280
  %arrayidx2513 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2512, i64 0, i64 0, !dbg !7280
  %rt_rtx2514 = bitcast %union.rtunion_def* %arrayidx2513 to %struct.rtx_def**, !dbg !7280
  %1218 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2514, align 8, !dbg !7280
  %call2515 = call i32 @rtx_equal_p(%struct.rtx_def* %1215, %struct.rtx_def* %1218), !dbg !7281
  %tobool2516 = icmp ne i32 %call2515, 0, !dbg !7281
  br i1 %tobool2516, label %if.end2605, label %if.then2517, !dbg !7282

if.then2517:                                      ; preds = %land.lhs.true2508
  call void @llvm.dbg.declare(metadata %struct.table_elt** %elt2518, metadata !7283, metadata !DIExpression()), !dbg !7285
  call void @llvm.dbg.declare(metadata %struct.table_elt** %classp, metadata !7286, metadata !DIExpression()), !dbg !7287
  %1219 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7288
  %arrayidx2519 = getelementptr inbounds %struct.set, %struct.set* %1219, i64 0, !dbg !7288
  %src_elt2520 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2519, i32 0, i32 2, !dbg !7289
  %1220 = load %struct.table_elt*, %struct.table_elt** %src_elt2520, align 8, !dbg !7289
  store %struct.table_elt* %1220, %struct.table_elt** %classp, align 8, !dbg !7287
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dest2521, metadata !7290, metadata !DIExpression()), !dbg !7291
  %1221 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7292
  %arrayidx2522 = getelementptr inbounds %struct.set, %struct.set* %1221, i64 0, !dbg !7292
  %rtl2523 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2522, i32 0, i32 0, !dbg !7292
  %1222 = load %struct.rtx_def*, %struct.rtx_def** %rtl2523, align 8, !dbg !7292
  %u2524 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1222, i32 0, i32 1, !dbg !7292
  %fld2525 = bitcast %union.u* %u2524 to [1 x %union.rtunion_def]*, !dbg !7292
  %arrayidx2526 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2525, i64 0, i64 0, !dbg !7292
  %rt_rtx2527 = bitcast %union.rtunion_def* %arrayidx2526 to %struct.rtx_def**, !dbg !7292
  %1223 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2527, align 8, !dbg !7292
  store %struct.rtx_def* %1223, %struct.rtx_def** %dest2521, align 8, !dbg !7291
  call void @llvm.dbg.declare(metadata i32* %eqvmode2528, metadata !7293, metadata !DIExpression()), !dbg !7294
  %1224 = load %struct.rtx_def*, %struct.rtx_def** %dest2521, align 8, !dbg !7295
  %1225 = bitcast %struct.rtx_def* %1224 to i32*, !dbg !7295
  %bf.load2529 = load i32, i32* %1225, align 8, !dbg !7295
  %bf.lshr2530 = lshr i32 %bf.load2529, 16, !dbg !7295
  %bf.clear2531 = and i32 %bf.lshr2530, 255, !dbg !7295
  store i32 %bf.clear2531, i32* %eqvmode2528, align 4, !dbg !7294
  %1226 = load %struct.rtx_def*, %struct.rtx_def** %dest2521, align 8, !dbg !7296
  %1227 = bitcast %struct.rtx_def* %1226 to i32*, !dbg !7296
  %bf.load2532 = load i32, i32* %1227, align 8, !dbg !7296
  %bf.clear2533 = and i32 %bf.load2532, 65535, !dbg !7296
  %cmp2534 = icmp eq i32 %bf.clear2533, 40, !dbg !7298
  br i1 %cmp2534, label %if.then2536, label %if.end2548, !dbg !7299

if.then2536:                                      ; preds = %if.then2517
  %1228 = load %struct.rtx_def*, %struct.rtx_def** %dest2521, align 8, !dbg !7300
  %u2537 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1228, i32 0, i32 1, !dbg !7300
  %fld2538 = bitcast %union.u* %u2537 to [1 x %union.rtunion_def]*, !dbg !7300
  %arrayidx2539 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2538, i64 0, i64 0, !dbg !7300
  %rt_rtx2540 = bitcast %union.rtunion_def* %arrayidx2539 to %struct.rtx_def**, !dbg !7300
  %1229 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2540, align 8, !dbg !7300
  %u2541 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1229, i32 0, i32 1, !dbg !7300
  %fld2542 = bitcast %union.u* %u2541 to [1 x %union.rtunion_def]*, !dbg !7300
  %arrayidx2543 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2542, i64 0, i64 0, !dbg !7300
  %rt_rtx2544 = bitcast %union.rtunion_def* %arrayidx2543 to %struct.rtx_def**, !dbg !7300
  %1230 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2544, align 8, !dbg !7300
  %1231 = bitcast %struct.rtx_def* %1230 to i32*, !dbg !7300
  %bf.load2545 = load i32, i32* %1231, align 8, !dbg !7300
  %bf.lshr2546 = lshr i32 %bf.load2545, 16, !dbg !7300
  %bf.clear2547 = and i32 %bf.lshr2546, 255, !dbg !7300
  store i32 %bf.clear2547, i32* %eqvmode2528, align 4, !dbg !7302
  store %struct.table_elt* null, %struct.table_elt** %classp, align 8, !dbg !7303
  br label %if.end2548, !dbg !7304

if.end2548:                                       ; preds = %if.then2536, %if.then2517
  %1232 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8, !dbg !7305
  %1233 = load %struct.table_elt*, %struct.table_elt** %classp, align 8, !dbg !7307
  %call2549 = call i32 @insert_regs(%struct.rtx_def* %1232, %struct.table_elt* %1233, i32 0), !dbg !7308
  %tobool2550 = icmp ne i32 %call2549, 0, !dbg !7308
  br i1 %tobool2550, label %if.then2551, label %if.end2570, !dbg !7309

if.then2551:                                      ; preds = %if.end2548
  %1234 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8, !dbg !7310
  call void @rehash_using_reg(%struct.rtx_def* %1234), !dbg !7312
  %1235 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8, !dbg !7313
  %1236 = bitcast %struct.rtx_def* %1235 to i32*, !dbg !7313
  %bf.load2552 = load i32, i32* %1236, align 8, !dbg !7313
  %bf.clear2553 = and i32 %bf.load2552, 65535, !dbg !7313
  %cmp2554 = icmp eq i32 %bf.clear2553, 37, !dbg !7313
  br i1 %cmp2554, label %land.lhs.true2556, label %cond.false2565, !dbg !7313

land.lhs.true2556:                                ; preds = %if.then2551
  %1237 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8, !dbg !7313
  %call2557 = call i32 @rhs_regno(%struct.rtx_def* %1237), !dbg !7313
  %cmp2558 = icmp uge i32 %call2557, 53, !dbg !7313
  br i1 %cmp2558, label %cond.true2560, label %cond.false2565, !dbg !7313

cond.true2560:                                    ; preds = %land.lhs.true2556
  %1238 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8, !dbg !7313
  %call2561 = call i32 @rhs_regno(%struct.rtx_def* %1238), !dbg !7313
  %call2562 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call2561), !dbg !7313
  %reg_qty2563 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call2562, i32 0, i32 1, !dbg !7313
  %1239 = load i32, i32* %reg_qty2563, align 4, !dbg !7313
  %add2564 = add i32 4736, %1239, !dbg !7313
  br label %cond.end2567, !dbg !7313

cond.false2565:                                   ; preds = %land.lhs.true2556, %if.then2551
  %1240 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8, !dbg !7313
  %1241 = load i32, i32* %eqvmode2528, align 4, !dbg !7313
  %call2566 = call i32 @canon_hash(%struct.rtx_def* %1240, i32 %1241), !dbg !7313
  br label %cond.end2567, !dbg !7313

cond.end2567:                                     ; preds = %cond.false2565, %cond.true2560
  %cond2568 = phi i32 [ %add2564, %cond.true2560 ], [ %call2566, %cond.false2565 ], !dbg !7313
  %and2569 = and i32 %cond2568, 31, !dbg !7313
  store i32 %and2569, i32* %src_eqv_hash, align 4, !dbg !7314
  br label %if.end2570, !dbg !7315

if.end2570:                                       ; preds = %cond.end2567, %if.end2548
  %1242 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8, !dbg !7316
  %1243 = load %struct.table_elt*, %struct.table_elt** %classp, align 8, !dbg !7317
  %1244 = load i32, i32* %src_eqv_hash, align 4, !dbg !7318
  %1245 = load i32, i32* %eqvmode2528, align 4, !dbg !7319
  %call2571 = call %struct.table_elt* @insert(%struct.rtx_def* %1242, %struct.table_elt* %1243, i32 %1244, i32 %1245), !dbg !7320
  store %struct.table_elt* %call2571, %struct.table_elt** %elt2518, align 8, !dbg !7321
  %1246 = load i32, i32* %src_eqv_in_memory, align 4, !dbg !7322
  %conv2572 = trunc i32 %1246 to i8, !dbg !7322
  %1247 = load %struct.table_elt*, %struct.table_elt** %elt2518, align 8, !dbg !7323
  %in_memory = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1247, i32 0, i32 11, !dbg !7324
  store i8 %conv2572, i8* %in_memory, align 1, !dbg !7325
  %1248 = load %struct.table_elt*, %struct.table_elt** %elt2518, align 8, !dbg !7326
  store %struct.table_elt* %1248, %struct.table_elt** %src_eqv_elt, align 8, !dbg !7327
  store i32 0, i32* %i, align 4, !dbg !7328
  br label %for.cond2573, !dbg !7330

for.cond2573:                                     ; preds = %for.inc2602, %if.end2570
  %1249 = load i32, i32* %i, align 4, !dbg !7331
  %1250 = load i32, i32* %n_sets, align 4, !dbg !7333
  %cmp2574 = icmp slt i32 %1249, %1250, !dbg !7334
  br i1 %cmp2574, label %for.body2576, label %for.end2604, !dbg !7335

for.body2576:                                     ; preds = %for.cond2573
  %1251 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7336
  %1252 = load i32, i32* %i, align 4, !dbg !7338
  %idxprom2577 = sext i32 %1252 to i64, !dbg !7336
  %arrayidx2578 = getelementptr inbounds %struct.set, %struct.set* %1251, i64 %idxprom2577, !dbg !7336
  %rtl2579 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2578, i32 0, i32 0, !dbg !7339
  %1253 = load %struct.rtx_def*, %struct.rtx_def** %rtl2579, align 8, !dbg !7339
  %tobool2580 = icmp ne %struct.rtx_def* %1253, null, !dbg !7336
  br i1 %tobool2580, label %land.lhs.true2581, label %if.end2601, !dbg !7340

land.lhs.true2581:                                ; preds = %for.body2576
  %1254 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7341
  %1255 = load i32, i32* %i, align 4, !dbg !7342
  %idxprom2582 = sext i32 %1255 to i64, !dbg !7341
  %arrayidx2583 = getelementptr inbounds %struct.set, %struct.set* %1254, i64 %idxprom2582, !dbg !7341
  %src_elt2584 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2583, i32 0, i32 2, !dbg !7343
  %1256 = load %struct.table_elt*, %struct.table_elt** %src_elt2584, align 8, !dbg !7343
  %cmp2585 = icmp eq %struct.table_elt* %1256, null, !dbg !7344
  br i1 %cmp2585, label %land.lhs.true2587, label %if.end2601, !dbg !7345

land.lhs.true2587:                                ; preds = %land.lhs.true2581
  %1257 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7346
  %1258 = load i32, i32* %i, align 4, !dbg !7346
  %idxprom2588 = sext i32 %1258 to i64, !dbg !7346
  %arrayidx2589 = getelementptr inbounds %struct.set, %struct.set* %1257, i64 %idxprom2588, !dbg !7346
  %rtl2590 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2589, i32 0, i32 0, !dbg !7346
  %1259 = load %struct.rtx_def*, %struct.rtx_def** %rtl2590, align 8, !dbg !7346
  %u2591 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1259, i32 0, i32 1, !dbg !7346
  %fld2592 = bitcast %union.u* %u2591 to [1 x %union.rtunion_def]*, !dbg !7346
  %arrayidx2593 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2592, i64 0, i64 1, !dbg !7346
  %rt_rtx2594 = bitcast %union.rtunion_def* %arrayidx2593 to %struct.rtx_def**, !dbg !7346
  %1260 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2594, align 8, !dbg !7346
  %1261 = load %struct.rtx_def*, %struct.rtx_def** %src_eqv, align 8, !dbg !7347
  %call2595 = call i32 @rtx_equal_p(%struct.rtx_def* %1260, %struct.rtx_def* %1261), !dbg !7348
  %tobool2596 = icmp ne i32 %call2595, 0, !dbg !7348
  br i1 %tobool2596, label %if.then2597, label %if.end2601, !dbg !7349

if.then2597:                                      ; preds = %land.lhs.true2587
  %1262 = load %struct.table_elt*, %struct.table_elt** %src_eqv_elt, align 8, !dbg !7350
  %1263 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7351
  %1264 = load i32, i32* %i, align 4, !dbg !7352
  %idxprom2598 = sext i32 %1264 to i64, !dbg !7351
  %arrayidx2599 = getelementptr inbounds %struct.set, %struct.set* %1263, i64 %idxprom2598, !dbg !7351
  %src_elt2600 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2599, i32 0, i32 2, !dbg !7353
  store %struct.table_elt* %1262, %struct.table_elt** %src_elt2600, align 8, !dbg !7354
  br label %if.end2601, !dbg !7351

if.end2601:                                       ; preds = %if.then2597, %land.lhs.true2587, %land.lhs.true2581, %for.body2576
  br label %for.inc2602, !dbg !7355

for.inc2602:                                      ; preds = %if.end2601
  %1265 = load i32, i32* %i, align 4, !dbg !7356
  %inc2603 = add nsw i32 %1265, 1, !dbg !7356
  store i32 %inc2603, i32* %i, align 4, !dbg !7356
  br label %for.cond2573, !dbg !7357, !llvm.loop !7358

for.end2604:                                      ; preds = %for.cond2573
  br label %if.end2605, !dbg !7360

if.end2605:                                       ; preds = %for.end2604, %land.lhs.true2508, %land.lhs.true2506, %land.lhs.true2501, %land.lhs.true2498, %for.end2496
  store i32 0, i32* %i, align 4, !dbg !7361
  br label %for.cond2606, !dbg !7363

for.cond2606:                                     ; preds = %for.inc2782, %if.end2605
  %1266 = load i32, i32* %i, align 4, !dbg !7364
  %1267 = load i32, i32* %n_sets, align 4, !dbg !7366
  %cmp2607 = icmp slt i32 %1266, %1267, !dbg !7367
  br i1 %cmp2607, label %for.body2609, label %for.end2784, !dbg !7368

for.body2609:                                     ; preds = %for.cond2606
  %1268 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7369
  %1269 = load i32, i32* %i, align 4, !dbg !7371
  %idxprom2610 = sext i32 %1269 to i64, !dbg !7369
  %arrayidx2611 = getelementptr inbounds %struct.set, %struct.set* %1268, i64 %idxprom2610, !dbg !7369
  %rtl2612 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2611, i32 0, i32 0, !dbg !7372
  %1270 = load %struct.rtx_def*, %struct.rtx_def** %rtl2612, align 8, !dbg !7372
  %tobool2613 = icmp ne %struct.rtx_def* %1270, null, !dbg !7369
  br i1 %tobool2613, label %land.lhs.true2614, label %if.else2770, !dbg !7373

land.lhs.true2614:                                ; preds = %for.body2609
  %1271 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7374
  %1272 = load i32, i32* %i, align 4, !dbg !7375
  %idxprom2615 = sext i32 %1272 to i64, !dbg !7374
  %arrayidx2616 = getelementptr inbounds %struct.set, %struct.set* %1271, i64 %idxprom2615, !dbg !7374
  %src_volatile2617 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2616, i32 0, i32 7, !dbg !7376
  %1273 = load i8, i8* %src_volatile2617, align 1, !dbg !7376
  %tobool2618 = icmp ne i8 %1273, 0, !dbg !7374
  br i1 %tobool2618, label %if.else2770, label %land.lhs.true2619, !dbg !7377

land.lhs.true2619:                                ; preds = %land.lhs.true2614
  %1274 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7378
  %1275 = load i32, i32* %i, align 4, !dbg !7378
  %idxprom2620 = sext i32 %1275 to i64, !dbg !7378
  %arrayidx2621 = getelementptr inbounds %struct.set, %struct.set* %1274, i64 %idxprom2620, !dbg !7378
  %rtl2622 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2621, i32 0, i32 0, !dbg !7378
  %1276 = load %struct.rtx_def*, %struct.rtx_def** %rtl2622, align 8, !dbg !7378
  %u2623 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1276, i32 0, i32 1, !dbg !7378
  %fld2624 = bitcast %union.u* %u2623 to [1 x %union.rtunion_def]*, !dbg !7378
  %arrayidx2625 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2624, i64 0, i64 1, !dbg !7378
  %rt_rtx2626 = bitcast %union.rtunion_def* %arrayidx2625 to %struct.rtx_def**, !dbg !7378
  %1277 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2626, align 8, !dbg !7378
  %1278 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7379
  %1279 = load i32, i32* %i, align 4, !dbg !7379
  %idxprom2627 = sext i32 %1279 to i64, !dbg !7379
  %arrayidx2628 = getelementptr inbounds %struct.set, %struct.set* %1278, i64 %idxprom2627, !dbg !7379
  %rtl2629 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2628, i32 0, i32 0, !dbg !7379
  %1280 = load %struct.rtx_def*, %struct.rtx_def** %rtl2629, align 8, !dbg !7379
  %u2630 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1280, i32 0, i32 1, !dbg !7379
  %fld2631 = bitcast %union.u* %u2630 to [1 x %union.rtunion_def]*, !dbg !7379
  %arrayidx2632 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2631, i64 0, i64 0, !dbg !7379
  %rt_rtx2633 = bitcast %union.rtunion_def* %arrayidx2632 to %struct.rtx_def**, !dbg !7379
  %1281 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2633, align 8, !dbg !7379
  %call2634 = call i32 @rtx_equal_p(%struct.rtx_def* %1277, %struct.rtx_def* %1281), !dbg !7380
  %tobool2635 = icmp ne i32 %call2634, 0, !dbg !7380
  br i1 %tobool2635, label %if.else2770, label %if.then2636, !dbg !7381

if.then2636:                                      ; preds = %land.lhs.true2619
  %1282 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7382
  %1283 = load i32, i32* %i, align 4, !dbg !7382
  %idxprom2637 = sext i32 %1283 to i64, !dbg !7382
  %arrayidx2638 = getelementptr inbounds %struct.set, %struct.set* %1282, i64 %idxprom2637, !dbg !7382
  %rtl2639 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2638, i32 0, i32 0, !dbg !7382
  %1284 = load %struct.rtx_def*, %struct.rtx_def** %rtl2639, align 8, !dbg !7382
  %u2640 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1284, i32 0, i32 1, !dbg !7382
  %fld2641 = bitcast %union.u* %u2640 to [1 x %union.rtunion_def]*, !dbg !7382
  %arrayidx2642 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2641, i64 0, i64 0, !dbg !7382
  %rt_rtx2643 = bitcast %union.rtunion_def* %arrayidx2642 to %struct.rtx_def**, !dbg !7382
  %1285 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2643, align 8, !dbg !7382
  %1286 = bitcast %struct.rtx_def* %1285 to i32*, !dbg !7382
  %bf.load2644 = load i32, i32* %1286, align 8, !dbg !7382
  %bf.clear2645 = and i32 %bf.load2644, 65535, !dbg !7382
  %cmp2646 = icmp eq i32 %bf.clear2645, 40, !dbg !7385
  br i1 %cmp2646, label %if.then2648, label %if.else2655, !dbg !7386

if.then2648:                                      ; preds = %if.then2636
  %1287 = load %struct.table_elt*, %struct.table_elt** %src_eqv_elt, align 8, !dbg !7387
  %1288 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7389
  %1289 = load i32, i32* %i, align 4, !dbg !7390
  %idxprom2649 = sext i32 %1289 to i64, !dbg !7389
  %arrayidx2650 = getelementptr inbounds %struct.set, %struct.set* %1288, i64 %idxprom2649, !dbg !7389
  %src_elt2651 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2650, i32 0, i32 2, !dbg !7391
  store %struct.table_elt* %1287, %struct.table_elt** %src_elt2651, align 8, !dbg !7392
  %1290 = load i32, i32* %src_eqv_hash, align 4, !dbg !7393
  %1291 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7394
  %1292 = load i32, i32* %i, align 4, !dbg !7395
  %idxprom2652 = sext i32 %1292 to i64, !dbg !7394
  %arrayidx2653 = getelementptr inbounds %struct.set, %struct.set* %1291, i64 %idxprom2652, !dbg !7394
  %src_hash2654 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2653, i32 0, i32 3, !dbg !7396
  store i32 %1290, i32* %src_hash2654, align 8, !dbg !7397
  br label %if.end2769, !dbg !7398

if.else2655:                                      ; preds = %if.then2636
  call void @llvm.dbg.declare(metadata %struct.table_elt** %classp2656, metadata !7399, metadata !DIExpression()), !dbg !7401
  %1293 = load %struct.table_elt*, %struct.table_elt** %src_eqv_elt, align 8, !dbg !7402
  store %struct.table_elt* %1293, %struct.table_elt** %classp2656, align 8, !dbg !7401
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %src2657, metadata !7403, metadata !DIExpression()), !dbg !7404
  %1294 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7405
  %1295 = load i32, i32* %i, align 4, !dbg !7406
  %idxprom2658 = sext i32 %1295 to i64, !dbg !7405
  %arrayidx2659 = getelementptr inbounds %struct.set, %struct.set* %1294, i64 %idxprom2658, !dbg !7405
  %src2660 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2659, i32 0, i32 1, !dbg !7407
  %1296 = load %struct.rtx_def*, %struct.rtx_def** %src2660, align 8, !dbg !7407
  store %struct.rtx_def* %1296, %struct.rtx_def** %src2657, align 8, !dbg !7404
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dest2661, metadata !7408, metadata !DIExpression()), !dbg !7409
  %1297 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7410
  %1298 = load i32, i32* %i, align 4, !dbg !7410
  %idxprom2662 = sext i32 %1298 to i64, !dbg !7410
  %arrayidx2663 = getelementptr inbounds %struct.set, %struct.set* %1297, i64 %idxprom2662, !dbg !7410
  %rtl2664 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2663, i32 0, i32 0, !dbg !7410
  %1299 = load %struct.rtx_def*, %struct.rtx_def** %rtl2664, align 8, !dbg !7410
  %u2665 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1299, i32 0, i32 1, !dbg !7410
  %fld2666 = bitcast %union.u* %u2665 to [1 x %union.rtunion_def]*, !dbg !7410
  %arrayidx2667 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2666, i64 0, i64 0, !dbg !7410
  %rt_rtx2668 = bitcast %union.rtunion_def* %arrayidx2667 to %struct.rtx_def**, !dbg !7410
  %1300 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2668, align 8, !dbg !7410
  store %struct.rtx_def* %1300, %struct.rtx_def** %dest2661, align 8, !dbg !7409
  call void @llvm.dbg.declare(metadata i32* %mode2669, metadata !7411, metadata !DIExpression()), !dbg !7412
  %1301 = load %struct.rtx_def*, %struct.rtx_def** %src2657, align 8, !dbg !7413
  %1302 = bitcast %struct.rtx_def* %1301 to i32*, !dbg !7413
  %bf.load2670 = load i32, i32* %1302, align 8, !dbg !7413
  %bf.lshr2671 = lshr i32 %bf.load2670, 16, !dbg !7413
  %bf.clear2672 = and i32 %bf.lshr2671, 255, !dbg !7413
  %cmp2673 = icmp eq i32 %bf.clear2672, 0, !dbg !7414
  br i1 %cmp2673, label %cond.true2675, label %cond.false2679, !dbg !7413

cond.true2675:                                    ; preds = %if.else2655
  %1303 = load %struct.rtx_def*, %struct.rtx_def** %dest2661, align 8, !dbg !7415
  %1304 = bitcast %struct.rtx_def* %1303 to i32*, !dbg !7415
  %bf.load2676 = load i32, i32* %1304, align 8, !dbg !7415
  %bf.lshr2677 = lshr i32 %bf.load2676, 16, !dbg !7415
  %bf.clear2678 = and i32 %bf.lshr2677, 255, !dbg !7415
  br label %cond.end2683, !dbg !7413

cond.false2679:                                   ; preds = %if.else2655
  %1305 = load %struct.rtx_def*, %struct.rtx_def** %src2657, align 8, !dbg !7416
  %1306 = bitcast %struct.rtx_def* %1305 to i32*, !dbg !7416
  %bf.load2680 = load i32, i32* %1306, align 8, !dbg !7416
  %bf.lshr2681 = lshr i32 %bf.load2680, 16, !dbg !7416
  %bf.clear2682 = and i32 %bf.lshr2681, 255, !dbg !7416
  br label %cond.end2683, !dbg !7413

cond.end2683:                                     ; preds = %cond.false2679, %cond.true2675
  %cond2684 = phi i32 [ %bf.clear2678, %cond.true2675 ], [ %bf.clear2682, %cond.false2679 ], !dbg !7413
  store i32 %cond2684, i32* %mode2669, align 4, !dbg !7412
  %1307 = load %struct.table_elt*, %struct.table_elt** %classp2656, align 8, !dbg !7417
  %tobool2685 = icmp ne %struct.table_elt* %1307, null, !dbg !7417
  br i1 %tobool2685, label %if.end2690, label %if.then2686, !dbg !7419

if.then2686:                                      ; preds = %cond.end2683
  %1308 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7420
  %1309 = load i32, i32* %i, align 4, !dbg !7421
  %idxprom2687 = sext i32 %1309 to i64, !dbg !7420
  %arrayidx2688 = getelementptr inbounds %struct.set, %struct.set* %1308, i64 %idxprom2687, !dbg !7420
  %src_const_elt2689 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2688, i32 0, i32 11, !dbg !7422
  %1310 = load %struct.table_elt*, %struct.table_elt** %src_const_elt2689, align 8, !dbg !7422
  store %struct.table_elt* %1310, %struct.table_elt** %classp2656, align 8, !dbg !7423
  br label %if.end2690, !dbg !7424

if.end2690:                                       ; preds = %if.then2686, %cond.end2683
  %1311 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7425
  %1312 = load i32, i32* %i, align 4, !dbg !7427
  %idxprom2691 = sext i32 %1312 to i64, !dbg !7425
  %arrayidx2692 = getelementptr inbounds %struct.set, %struct.set* %1311, i64 %idxprom2691, !dbg !7425
  %src_elt2693 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2692, i32 0, i32 2, !dbg !7428
  %1313 = load %struct.table_elt*, %struct.table_elt** %src_elt2693, align 8, !dbg !7428
  %cmp2694 = icmp eq %struct.table_elt* %1313, null, !dbg !7429
  br i1 %cmp2694, label %if.then2696, label %if.end2734, !dbg !7430

if.then2696:                                      ; preds = %if.end2690
  call void @llvm.dbg.declare(metadata %struct.table_elt** %elt2697, metadata !7431, metadata !DIExpression()), !dbg !7433
  %1314 = load %struct.rtx_def*, %struct.rtx_def** %src2657, align 8, !dbg !7434
  %1315 = load %struct.table_elt*, %struct.table_elt** %classp2656, align 8, !dbg !7436
  %call2698 = call i32 @insert_regs(%struct.rtx_def* %1314, %struct.table_elt* %1315, i32 0), !dbg !7437
  %tobool2699 = icmp ne i32 %call2698, 0, !dbg !7437
  br i1 %tobool2699, label %if.then2700, label %if.end2722, !dbg !7438

if.then2700:                                      ; preds = %if.then2696
  %1316 = load %struct.rtx_def*, %struct.rtx_def** %src2657, align 8, !dbg !7439
  call void @rehash_using_reg(%struct.rtx_def* %1316), !dbg !7441
  %1317 = load %struct.rtx_def*, %struct.rtx_def** %src2657, align 8, !dbg !7442
  %1318 = bitcast %struct.rtx_def* %1317 to i32*, !dbg !7442
  %bf.load2701 = load i32, i32* %1318, align 8, !dbg !7442
  %bf.clear2702 = and i32 %bf.load2701, 65535, !dbg !7442
  %cmp2703 = icmp eq i32 %bf.clear2702, 37, !dbg !7442
  br i1 %cmp2703, label %land.lhs.true2705, label %cond.false2714, !dbg !7442

land.lhs.true2705:                                ; preds = %if.then2700
  %1319 = load %struct.rtx_def*, %struct.rtx_def** %src2657, align 8, !dbg !7442
  %call2706 = call i32 @rhs_regno(%struct.rtx_def* %1319), !dbg !7442
  %cmp2707 = icmp uge i32 %call2706, 53, !dbg !7442
  br i1 %cmp2707, label %cond.true2709, label %cond.false2714, !dbg !7442

cond.true2709:                                    ; preds = %land.lhs.true2705
  %1320 = load %struct.rtx_def*, %struct.rtx_def** %src2657, align 8, !dbg !7442
  %call2710 = call i32 @rhs_regno(%struct.rtx_def* %1320), !dbg !7442
  %call2711 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call2710), !dbg !7442
  %reg_qty2712 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call2711, i32 0, i32 1, !dbg !7442
  %1321 = load i32, i32* %reg_qty2712, align 4, !dbg !7442
  %add2713 = add i32 4736, %1321, !dbg !7442
  br label %cond.end2716, !dbg !7442

cond.false2714:                                   ; preds = %land.lhs.true2705, %if.then2700
  %1322 = load %struct.rtx_def*, %struct.rtx_def** %src2657, align 8, !dbg !7442
  %1323 = load i32, i32* %mode2669, align 4, !dbg !7442
  %call2715 = call i32 @canon_hash(%struct.rtx_def* %1322, i32 %1323), !dbg !7442
  br label %cond.end2716, !dbg !7442

cond.end2716:                                     ; preds = %cond.false2714, %cond.true2709
  %cond2717 = phi i32 [ %add2713, %cond.true2709 ], [ %call2715, %cond.false2714 ], !dbg !7442
  %and2718 = and i32 %cond2717, 31, !dbg !7442
  %1324 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7443
  %1325 = load i32, i32* %i, align 4, !dbg !7444
  %idxprom2719 = sext i32 %1325 to i64, !dbg !7443
  %arrayidx2720 = getelementptr inbounds %struct.set, %struct.set* %1324, i64 %idxprom2719, !dbg !7443
  %src_hash2721 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2720, i32 0, i32 3, !dbg !7445
  store i32 %and2718, i32* %src_hash2721, align 8, !dbg !7446
  br label %if.end2722, !dbg !7447

if.end2722:                                       ; preds = %cond.end2716, %if.then2696
  %1326 = load %struct.rtx_def*, %struct.rtx_def** %src2657, align 8, !dbg !7448
  %1327 = load %struct.table_elt*, %struct.table_elt** %classp2656, align 8, !dbg !7449
  %1328 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7450
  %1329 = load i32, i32* %i, align 4, !dbg !7451
  %idxprom2723 = sext i32 %1329 to i64, !dbg !7450
  %arrayidx2724 = getelementptr inbounds %struct.set, %struct.set* %1328, i64 %idxprom2723, !dbg !7450
  %src_hash2725 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2724, i32 0, i32 3, !dbg !7452
  %1330 = load i32, i32* %src_hash2725, align 8, !dbg !7452
  %1331 = load i32, i32* %mode2669, align 4, !dbg !7453
  %call2726 = call %struct.table_elt* @insert(%struct.rtx_def* %1326, %struct.table_elt* %1327, i32 %1330, i32 %1331), !dbg !7454
  store %struct.table_elt* %call2726, %struct.table_elt** %elt2697, align 8, !dbg !7455
  %1332 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7456
  %1333 = load i32, i32* %i, align 4, !dbg !7457
  %idxprom2727 = sext i32 %1333 to i64, !dbg !7456
  %arrayidx2728 = getelementptr inbounds %struct.set, %struct.set* %1332, i64 %idxprom2727, !dbg !7456
  %src_in_memory2729 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2728, i32 0, i32 6, !dbg !7458
  %1334 = load i8, i8* %src_in_memory2729, align 8, !dbg !7458
  %1335 = load %struct.table_elt*, %struct.table_elt** %elt2697, align 8, !dbg !7459
  %in_memory2730 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1335, i32 0, i32 11, !dbg !7460
  store i8 %1334, i8* %in_memory2730, align 1, !dbg !7461
  %1336 = load %struct.table_elt*, %struct.table_elt** %elt2697, align 8, !dbg !7462
  store %struct.table_elt* %1336, %struct.table_elt** %classp2656, align 8, !dbg !7463
  %1337 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7464
  %1338 = load i32, i32* %i, align 4, !dbg !7465
  %idxprom2731 = sext i32 %1338 to i64, !dbg !7464
  %arrayidx2732 = getelementptr inbounds %struct.set, %struct.set* %1337, i64 %idxprom2731, !dbg !7464
  %src_elt2733 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2732, i32 0, i32 2, !dbg !7466
  store %struct.table_elt* %1336, %struct.table_elt** %src_elt2733, align 8, !dbg !7467
  br label %if.end2734, !dbg !7468

if.end2734:                                       ; preds = %if.end2722, %if.end2690
  %1339 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7469
  %1340 = load i32, i32* %i, align 4, !dbg !7471
  %idxprom2735 = sext i32 %1340 to i64, !dbg !7469
  %arrayidx2736 = getelementptr inbounds %struct.set, %struct.set* %1339, i64 %idxprom2735, !dbg !7469
  %src_const2737 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2736, i32 0, i32 9, !dbg !7472
  %1341 = load %struct.rtx_def*, %struct.rtx_def** %src_const2737, align 8, !dbg !7472
  %tobool2738 = icmp ne %struct.rtx_def* %1341, null, !dbg !7469
  br i1 %tobool2738, label %land.lhs.true2739, label %if.end2768, !dbg !7473

land.lhs.true2739:                                ; preds = %if.end2734
  %1342 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7474
  %1343 = load i32, i32* %i, align 4, !dbg !7475
  %idxprom2740 = sext i32 %1343 to i64, !dbg !7474
  %arrayidx2741 = getelementptr inbounds %struct.set, %struct.set* %1342, i64 %idxprom2740, !dbg !7474
  %src_const_elt2742 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2741, i32 0, i32 11, !dbg !7476
  %1344 = load %struct.table_elt*, %struct.table_elt** %src_const_elt2742, align 8, !dbg !7476
  %cmp2743 = icmp eq %struct.table_elt* %1344, null, !dbg !7477
  br i1 %cmp2743, label %land.lhs.true2745, label %if.end2768, !dbg !7478

land.lhs.true2745:                                ; preds = %land.lhs.true2739
  %1345 = load %struct.rtx_def*, %struct.rtx_def** %src2657, align 8, !dbg !7479
  %1346 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7480
  %1347 = load i32, i32* %i, align 4, !dbg !7481
  %idxprom2746 = sext i32 %1347 to i64, !dbg !7480
  %arrayidx2747 = getelementptr inbounds %struct.set, %struct.set* %1346, i64 %idxprom2746, !dbg !7480
  %src_const2748 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2747, i32 0, i32 9, !dbg !7482
  %1348 = load %struct.rtx_def*, %struct.rtx_def** %src_const2748, align 8, !dbg !7482
  %cmp2749 = icmp ne %struct.rtx_def* %1345, %1348, !dbg !7483
  br i1 %cmp2749, label %land.lhs.true2751, label %if.end2768, !dbg !7484

land.lhs.true2751:                                ; preds = %land.lhs.true2745
  %1349 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7485
  %1350 = load i32, i32* %i, align 4, !dbg !7486
  %idxprom2752 = sext i32 %1350 to i64, !dbg !7485
  %arrayidx2753 = getelementptr inbounds %struct.set, %struct.set* %1349, i64 %idxprom2752, !dbg !7485
  %src_const2754 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2753, i32 0, i32 9, !dbg !7487
  %1351 = load %struct.rtx_def*, %struct.rtx_def** %src_const2754, align 8, !dbg !7487
  %1352 = load %struct.rtx_def*, %struct.rtx_def** %src2657, align 8, !dbg !7488
  %call2755 = call i32 @rtx_equal_p(%struct.rtx_def* %1351, %struct.rtx_def* %1352), !dbg !7489
  %tobool2756 = icmp ne i32 %call2755, 0, !dbg !7489
  br i1 %tobool2756, label %if.end2768, label %if.then2757, !dbg !7490

if.then2757:                                      ; preds = %land.lhs.true2751
  %1353 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7491
  %1354 = load i32, i32* %i, align 4, !dbg !7492
  %idxprom2758 = sext i32 %1354 to i64, !dbg !7491
  %arrayidx2759 = getelementptr inbounds %struct.set, %struct.set* %1353, i64 %idxprom2758, !dbg !7491
  %src_const2760 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2759, i32 0, i32 9, !dbg !7493
  %1355 = load %struct.rtx_def*, %struct.rtx_def** %src_const2760, align 8, !dbg !7493
  %1356 = load %struct.table_elt*, %struct.table_elt** %classp2656, align 8, !dbg !7494
  %1357 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7495
  %1358 = load i32, i32* %i, align 4, !dbg !7496
  %idxprom2761 = sext i32 %1358 to i64, !dbg !7495
  %arrayidx2762 = getelementptr inbounds %struct.set, %struct.set* %1357, i64 %idxprom2761, !dbg !7495
  %src_const_hash2763 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2762, i32 0, i32 10, !dbg !7497
  %1359 = load i32, i32* %src_const_hash2763, align 8, !dbg !7497
  %1360 = load i32, i32* %mode2669, align 4, !dbg !7498
  %call2764 = call %struct.table_elt* @insert(%struct.rtx_def* %1355, %struct.table_elt* %1356, i32 %1359, i32 %1360), !dbg !7499
  %1361 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7500
  %1362 = load i32, i32* %i, align 4, !dbg !7501
  %idxprom2765 = sext i32 %1362 to i64, !dbg !7500
  %arrayidx2766 = getelementptr inbounds %struct.set, %struct.set* %1361, i64 %idxprom2765, !dbg !7500
  %src_elt2767 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2766, i32 0, i32 2, !dbg !7502
  store %struct.table_elt* %call2764, %struct.table_elt** %src_elt2767, align 8, !dbg !7503
  br label %if.end2768, !dbg !7500

if.end2768:                                       ; preds = %if.then2757, %land.lhs.true2751, %land.lhs.true2745, %land.lhs.true2739, %if.end2734
  br label %if.end2769

if.end2769:                                       ; preds = %if.end2768, %if.then2648
  br label %if.end2781, !dbg !7504

if.else2770:                                      ; preds = %land.lhs.true2619, %land.lhs.true2614, %for.body2609
  %1363 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7505
  %1364 = load i32, i32* %i, align 4, !dbg !7507
  %idxprom2771 = sext i32 %1364 to i64, !dbg !7505
  %arrayidx2772 = getelementptr inbounds %struct.set, %struct.set* %1363, i64 %idxprom2771, !dbg !7505
  %src_elt2773 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2772, i32 0, i32 2, !dbg !7508
  %1365 = load %struct.table_elt*, %struct.table_elt** %src_elt2773, align 8, !dbg !7508
  %cmp2774 = icmp eq %struct.table_elt* %1365, null, !dbg !7509
  br i1 %cmp2774, label %if.then2776, label %if.end2780, !dbg !7510

if.then2776:                                      ; preds = %if.else2770
  %1366 = load %struct.table_elt*, %struct.table_elt** %src_eqv_elt, align 8, !dbg !7511
  %1367 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7512
  %1368 = load i32, i32* %i, align 4, !dbg !7513
  %idxprom2777 = sext i32 %1368 to i64, !dbg !7512
  %arrayidx2778 = getelementptr inbounds %struct.set, %struct.set* %1367, i64 %idxprom2777, !dbg !7512
  %src_elt2779 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2778, i32 0, i32 2, !dbg !7514
  store %struct.table_elt* %1366, %struct.table_elt** %src_elt2779, align 8, !dbg !7515
  br label %if.end2780, !dbg !7512

if.end2780:                                       ; preds = %if.then2776, %if.else2770
  br label %if.end2781

if.end2781:                                       ; preds = %if.end2780, %if.end2769
  br label %for.inc2782, !dbg !7516

for.inc2782:                                      ; preds = %if.end2781
  %1369 = load i32, i32* %i, align 4, !dbg !7517
  %inc2783 = add nsw i32 %1369, 1, !dbg !7517
  store i32 %inc2783, i32* %i, align 4, !dbg !7517
  br label %for.cond2606, !dbg !7518, !llvm.loop !7519

for.end2784:                                      ; preds = %for.cond2606
  store i32 0, i32* %i, align 4, !dbg !7521
  br label %for.cond2785, !dbg !7523

for.cond2785:                                     ; preds = %for.inc2897, %for.end2784
  %1370 = load i32, i32* %i, align 4, !dbg !7524
  %1371 = load i32, i32* %n_sets, align 4, !dbg !7526
  %cmp2786 = icmp slt i32 %1370, %1371, !dbg !7527
  br i1 %cmp2786, label %for.body2788, label %for.end2899, !dbg !7528

for.body2788:                                     ; preds = %for.cond2785
  %1372 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7529
  %1373 = load i32, i32* %i, align 4, !dbg !7532
  %idxprom2789 = sext i32 %1373 to i64, !dbg !7529
  %arrayidx2790 = getelementptr inbounds %struct.set, %struct.set* %1372, i64 %idxprom2789, !dbg !7529
  %rtl2791 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2790, i32 0, i32 0, !dbg !7533
  %1374 = load %struct.rtx_def*, %struct.rtx_def** %rtl2791, align 8, !dbg !7533
  %tobool2792 = icmp ne %struct.rtx_def* %1374, null, !dbg !7529
  br i1 %tobool2792, label %if.then2793, label %if.end2896, !dbg !7534

if.then2793:                                      ; preds = %for.body2788
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x2794, metadata !7535, metadata !DIExpression()), !dbg !7537
  %1375 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7538
  %1376 = load i32, i32* %i, align 4, !dbg !7539
  %idxprom2795 = sext i32 %1376 to i64, !dbg !7538
  %arrayidx2796 = getelementptr inbounds %struct.set, %struct.set* %1375, i64 %idxprom2795, !dbg !7538
  %inner_dest2797 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2796, i32 0, i32 5, !dbg !7540
  %1377 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest2797, align 8, !dbg !7540
  store %struct.rtx_def* %1377, %struct.rtx_def** %x2794, align 8, !dbg !7537
  call void @llvm.dbg.declare(metadata %struct.table_elt** %elt2798, metadata !7541, metadata !DIExpression()), !dbg !7542
  call void @llvm.dbg.declare(metadata i32* %mode2799, metadata !7543, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.declare(metadata i32* %hash, metadata !7545, metadata !DIExpression()), !dbg !7546
  %1378 = load %struct.rtx_def*, %struct.rtx_def** %x2794, align 8, !dbg !7547
  %1379 = bitcast %struct.rtx_def* %1378 to i32*, !dbg !7547
  %bf.load2800 = load i32, i32* %1379, align 8, !dbg !7547
  %bf.clear2801 = and i32 %bf.load2800, 65535, !dbg !7547
  %cmp2802 = icmp eq i32 %bf.clear2801, 43, !dbg !7547
  br i1 %cmp2802, label %if.then2804, label %if.else2891, !dbg !7549

if.then2804:                                      ; preds = %if.then2793
  %1380 = load %struct.rtx_def*, %struct.rtx_def** %x2794, align 8, !dbg !7550
  %u2805 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1380, i32 0, i32 1, !dbg !7550
  %fld2806 = bitcast %union.u* %u2805 to [1 x %union.rtunion_def]*, !dbg !7550
  %arrayidx2807 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2806, i64 0, i64 0, !dbg !7550
  %rt_rtx2808 = bitcast %union.rtunion_def* %arrayidx2807 to %struct.rtx_def**, !dbg !7550
  %1381 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2808, align 8, !dbg !7550
  store %struct.rtx_def* %1381, %struct.rtx_def** %x2794, align 8, !dbg !7552
  %1382 = load %struct.rtx_def*, %struct.rtx_def** %x2794, align 8, !dbg !7553
  %1383 = bitcast %struct.rtx_def* %1382 to i32*, !dbg !7553
  %bf.load2809 = load i32, i32* %1383, align 8, !dbg !7553
  %bf.lshr2810 = lshr i32 %bf.load2809, 16, !dbg !7553
  %bf.clear2811 = and i32 %bf.lshr2810, 255, !dbg !7553
  store i32 %bf.clear2811, i32* %mode2799, align 4, !dbg !7554
  %1384 = load %struct.rtx_def*, %struct.rtx_def** %x2794, align 8, !dbg !7555
  %1385 = bitcast %struct.rtx_def* %1384 to i32*, !dbg !7555
  %bf.load2812 = load i32, i32* %1385, align 8, !dbg !7555
  %bf.clear2813 = and i32 %bf.load2812, 65535, !dbg !7555
  %cmp2814 = icmp eq i32 %bf.clear2813, 37, !dbg !7555
  br i1 %cmp2814, label %land.lhs.true2816, label %cond.false2825, !dbg !7555

land.lhs.true2816:                                ; preds = %if.then2804
  %1386 = load %struct.rtx_def*, %struct.rtx_def** %x2794, align 8, !dbg !7555
  %call2817 = call i32 @rhs_regno(%struct.rtx_def* %1386), !dbg !7555
  %cmp2818 = icmp uge i32 %call2817, 53, !dbg !7555
  br i1 %cmp2818, label %cond.true2820, label %cond.false2825, !dbg !7555

cond.true2820:                                    ; preds = %land.lhs.true2816
  %1387 = load %struct.rtx_def*, %struct.rtx_def** %x2794, align 8, !dbg !7555
  %call2821 = call i32 @rhs_regno(%struct.rtx_def* %1387), !dbg !7555
  %call2822 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call2821), !dbg !7555
  %reg_qty2823 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call2822, i32 0, i32 1, !dbg !7555
  %1388 = load i32, i32* %reg_qty2823, align 4, !dbg !7555
  %add2824 = add i32 4736, %1388, !dbg !7555
  br label %cond.end2827, !dbg !7555

cond.false2825:                                   ; preds = %land.lhs.true2816, %if.then2804
  %1389 = load %struct.rtx_def*, %struct.rtx_def** %x2794, align 8, !dbg !7555
  %1390 = load i32, i32* %mode2799, align 4, !dbg !7555
  %call2826 = call i32 @canon_hash(%struct.rtx_def* %1389, i32 %1390), !dbg !7555
  br label %cond.end2827, !dbg !7555

cond.end2827:                                     ; preds = %cond.false2825, %cond.true2820
  %cond2828 = phi i32 [ %add2824, %cond.true2820 ], [ %call2826, %cond.false2825 ], !dbg !7555
  %and2829 = and i32 %cond2828, 31, !dbg !7555
  store i32 %and2829, i32* %hash, align 4, !dbg !7556
  %1391 = load %struct.rtx_def*, %struct.rtx_def** %x2794, align 8, !dbg !7557
  %1392 = load i32, i32* %hash, align 4, !dbg !7558
  %1393 = load i32, i32* %mode2799, align 4, !dbg !7559
  %call2830 = call %struct.table_elt* @lookup(%struct.rtx_def* %1391, i32 %1392, i32 %1393), !dbg !7560
  store %struct.table_elt* %call2830, %struct.table_elt** %elt2798, align 8, !dbg !7561
  %1394 = load %struct.table_elt*, %struct.table_elt** %elt2798, align 8, !dbg !7562
  %tobool2831 = icmp ne %struct.table_elt* %1394, null, !dbg !7562
  br i1 %tobool2831, label %if.end2888, label %if.then2832, !dbg !7564

if.then2832:                                      ; preds = %cond.end2827
  %1395 = load %struct.rtx_def*, %struct.rtx_def** %x2794, align 8, !dbg !7565
  %call2833 = call i32 @insert_regs(%struct.rtx_def* %1395, %struct.table_elt* null, i32 0), !dbg !7568
  %tobool2834 = icmp ne i32 %call2833, 0, !dbg !7568
  br i1 %tobool2834, label %if.then2835, label %if.end2886, !dbg !7569

if.then2835:                                      ; preds = %if.then2832
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dest2836, metadata !7570, metadata !DIExpression()), !dbg !7572
  %1396 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7573
  %1397 = load i32, i32* %i, align 4, !dbg !7573
  %idxprom2837 = sext i32 %1397 to i64, !dbg !7573
  %arrayidx2838 = getelementptr inbounds %struct.set, %struct.set* %1396, i64 %idxprom2837, !dbg !7573
  %rtl2839 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2838, i32 0, i32 0, !dbg !7573
  %1398 = load %struct.rtx_def*, %struct.rtx_def** %rtl2839, align 8, !dbg !7573
  %u2840 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1398, i32 0, i32 1, !dbg !7573
  %fld2841 = bitcast %union.u* %u2840 to [1 x %union.rtunion_def]*, !dbg !7573
  %arrayidx2842 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2841, i64 0, i64 0, !dbg !7573
  %rt_rtx2843 = bitcast %union.rtunion_def* %arrayidx2842 to %struct.rtx_def**, !dbg !7573
  %1399 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2843, align 8, !dbg !7573
  store %struct.rtx_def* %1399, %struct.rtx_def** %dest2836, align 8, !dbg !7572
  %1400 = load %struct.rtx_def*, %struct.rtx_def** %x2794, align 8, !dbg !7574
  call void @rehash_using_reg(%struct.rtx_def* %1400), !dbg !7575
  %1401 = load %struct.rtx_def*, %struct.rtx_def** %x2794, align 8, !dbg !7576
  %1402 = bitcast %struct.rtx_def* %1401 to i32*, !dbg !7576
  %bf.load2844 = load i32, i32* %1402, align 8, !dbg !7576
  %bf.clear2845 = and i32 %bf.load2844, 65535, !dbg !7576
  %cmp2846 = icmp eq i32 %bf.clear2845, 37, !dbg !7576
  br i1 %cmp2846, label %land.lhs.true2848, label %cond.false2857, !dbg !7576

land.lhs.true2848:                                ; preds = %if.then2835
  %1403 = load %struct.rtx_def*, %struct.rtx_def** %x2794, align 8, !dbg !7576
  %call2849 = call i32 @rhs_regno(%struct.rtx_def* %1403), !dbg !7576
  %cmp2850 = icmp uge i32 %call2849, 53, !dbg !7576
  br i1 %cmp2850, label %cond.true2852, label %cond.false2857, !dbg !7576

cond.true2852:                                    ; preds = %land.lhs.true2848
  %1404 = load %struct.rtx_def*, %struct.rtx_def** %x2794, align 8, !dbg !7576
  %call2853 = call i32 @rhs_regno(%struct.rtx_def* %1404), !dbg !7576
  %call2854 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call2853), !dbg !7576
  %reg_qty2855 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call2854, i32 0, i32 1, !dbg !7576
  %1405 = load i32, i32* %reg_qty2855, align 4, !dbg !7576
  %add2856 = add i32 4736, %1405, !dbg !7576
  br label %cond.end2859, !dbg !7576

cond.false2857:                                   ; preds = %land.lhs.true2848, %if.then2835
  %1406 = load %struct.rtx_def*, %struct.rtx_def** %x2794, align 8, !dbg !7576
  %1407 = load i32, i32* %mode2799, align 4, !dbg !7576
  %call2858 = call i32 @canon_hash(%struct.rtx_def* %1406, i32 %1407), !dbg !7576
  br label %cond.end2859, !dbg !7576

cond.end2859:                                     ; preds = %cond.false2857, %cond.true2852
  %cond2860 = phi i32 [ %add2856, %cond.true2852 ], [ %call2858, %cond.false2857 ], !dbg !7576
  %and2861 = and i32 %cond2860, 31, !dbg !7576
  store i32 %and2861, i32* %hash, align 4, !dbg !7577
  %1408 = load %struct.rtx_def*, %struct.rtx_def** %dest2836, align 8, !dbg !7578
  %1409 = bitcast %struct.rtx_def* %1408 to i32*, !dbg !7578
  %bf.load2862 = load i32, i32* %1409, align 8, !dbg !7578
  %bf.clear2863 = and i32 %bf.load2862, 65535, !dbg !7578
  %cmp2864 = icmp eq i32 %bf.clear2863, 37, !dbg !7578
  br i1 %cmp2864, label %land.lhs.true2866, label %cond.false2875, !dbg !7578

land.lhs.true2866:                                ; preds = %cond.end2859
  %1410 = load %struct.rtx_def*, %struct.rtx_def** %dest2836, align 8, !dbg !7578
  %call2867 = call i32 @rhs_regno(%struct.rtx_def* %1410), !dbg !7578
  %cmp2868 = icmp uge i32 %call2867, 53, !dbg !7578
  br i1 %cmp2868, label %cond.true2870, label %cond.false2875, !dbg !7578

cond.true2870:                                    ; preds = %land.lhs.true2866
  %1411 = load %struct.rtx_def*, %struct.rtx_def** %dest2836, align 8, !dbg !7578
  %call2871 = call i32 @rhs_regno(%struct.rtx_def* %1411), !dbg !7578
  %call2872 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call2871), !dbg !7578
  %reg_qty2873 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call2872, i32 0, i32 1, !dbg !7578
  %1412 = load i32, i32* %reg_qty2873, align 4, !dbg !7578
  %add2874 = add i32 4736, %1412, !dbg !7578
  br label %cond.end2880, !dbg !7578

cond.false2875:                                   ; preds = %land.lhs.true2866, %cond.end2859
  %1413 = load %struct.rtx_def*, %struct.rtx_def** %dest2836, align 8, !dbg !7578
  %1414 = load %struct.rtx_def*, %struct.rtx_def** %dest2836, align 8, !dbg !7578
  %1415 = bitcast %struct.rtx_def* %1414 to i32*, !dbg !7578
  %bf.load2876 = load i32, i32* %1415, align 8, !dbg !7578
  %bf.lshr2877 = lshr i32 %bf.load2876, 16, !dbg !7578
  %bf.clear2878 = and i32 %bf.lshr2877, 255, !dbg !7578
  %call2879 = call i32 @canon_hash(%struct.rtx_def* %1413, i32 %bf.clear2878), !dbg !7578
  br label %cond.end2880, !dbg !7578

cond.end2880:                                     ; preds = %cond.false2875, %cond.true2870
  %cond2881 = phi i32 [ %add2874, %cond.true2870 ], [ %call2879, %cond.false2875 ], !dbg !7578
  %and2882 = and i32 %cond2881, 31, !dbg !7578
  %1416 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7579
  %1417 = load i32, i32* %i, align 4, !dbg !7580
  %idxprom2883 = sext i32 %1417 to i64, !dbg !7579
  %arrayidx2884 = getelementptr inbounds %struct.set, %struct.set* %1416, i64 %idxprom2883, !dbg !7579
  %dest_hash2885 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2884, i32 0, i32 4, !dbg !7581
  store i32 %and2882, i32* %dest_hash2885, align 4, !dbg !7582
  br label %if.end2886, !dbg !7583

if.end2886:                                       ; preds = %cond.end2880, %if.then2832
  %1418 = load %struct.rtx_def*, %struct.rtx_def** %x2794, align 8, !dbg !7584
  %1419 = load i32, i32* %hash, align 4, !dbg !7585
  %1420 = load i32, i32* %mode2799, align 4, !dbg !7586
  %call2887 = call %struct.table_elt* @insert(%struct.rtx_def* %1418, %struct.table_elt* null, i32 %1419, i32 %1420), !dbg !7587
  store %struct.table_elt* %call2887, %struct.table_elt** %elt2798, align 8, !dbg !7588
  br label %if.end2888, !dbg !7589

if.end2888:                                       ; preds = %if.end2886, %cond.end2827
  %1421 = load %struct.table_elt*, %struct.table_elt** %elt2798, align 8, !dbg !7590
  %1422 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7591
  %1423 = load i32, i32* %i, align 4, !dbg !7592
  %idxprom2889 = sext i32 %1423 to i64, !dbg !7591
  %arrayidx2890 = getelementptr inbounds %struct.set, %struct.set* %1422, i64 %idxprom2889, !dbg !7591
  %dest_addr_elt = getelementptr inbounds %struct.set, %struct.set* %arrayidx2890, i32 0, i32 12, !dbg !7593
  store %struct.table_elt* %1421, %struct.table_elt** %dest_addr_elt, align 8, !dbg !7594
  br label %if.end2895, !dbg !7595

if.else2891:                                      ; preds = %if.then2793
  %1424 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7596
  %1425 = load i32, i32* %i, align 4, !dbg !7597
  %idxprom2892 = sext i32 %1425 to i64, !dbg !7596
  %arrayidx2893 = getelementptr inbounds %struct.set, %struct.set* %1424, i64 %idxprom2892, !dbg !7596
  %dest_addr_elt2894 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2893, i32 0, i32 12, !dbg !7598
  store %struct.table_elt* null, %struct.table_elt** %dest_addr_elt2894, align 8, !dbg !7599
  br label %if.end2895

if.end2895:                                       ; preds = %if.else2891, %if.end2888
  br label %if.end2896, !dbg !7600

if.end2896:                                       ; preds = %if.end2895, %for.body2788
  br label %for.inc2897, !dbg !7601

for.inc2897:                                      ; preds = %if.end2896
  %1426 = load i32, i32* %i, align 4, !dbg !7602
  %inc2898 = add nsw i32 %1426, 1, !dbg !7602
  store i32 %inc2898, i32* %i, align 4, !dbg !7602
  br label %for.cond2785, !dbg !7603, !llvm.loop !7604

for.end2899:                                      ; preds = %for.cond2785
  %1427 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7606
  call void @invalidate_from_clobbers(%struct.rtx_def* %1427), !dbg !7607
  %1428 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7608
  %1429 = bitcast %struct.rtx_def* %1428 to i32*, !dbg !7608
  %bf.load2900 = load i32, i32* %1429, align 8, !dbg !7608
  %bf.clear2901 = and i32 %bf.load2900, 65535, !dbg !7608
  %cmp2902 = icmp eq i32 %bf.clear2901, 10, !dbg !7608
  br i1 %cmp2902, label %if.then2904, label %if.end2915, !dbg !7610

if.then2904:                                      ; preds = %for.end2899
  %1430 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7611
  %1431 = bitcast %struct.rtx_def* %1430 to i32*, !dbg !7611
  %bf.load2905 = load i32, i32* %1431, align 8, !dbg !7611
  %bf.lshr2906 = lshr i32 %bf.load2905, 26, !dbg !7611
  %bf.clear2907 = and i32 %bf.lshr2906, 1, !dbg !7611
  %tobool2908 = icmp ne i32 %bf.clear2907, 0, !dbg !7611
  br i1 %tobool2908, label %if.end2914, label %lor.lhs.false2909, !dbg !7611

lor.lhs.false2909:                                ; preds = %if.then2904
  %1432 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7611
  %1433 = bitcast %struct.rtx_def* %1432 to i32*, !dbg !7611
  %bf.load2910 = load i32, i32* %1433, align 8, !dbg !7611
  %bf.lshr2911 = lshr i32 %bf.load2910, 31, !dbg !7611
  %tobool2912 = icmp ne i32 %bf.lshr2911, 0, !dbg !7611
  br i1 %tobool2912, label %if.end2914, label %if.then2913, !dbg !7614

if.then2913:                                      ; preds = %lor.lhs.false2909
  call void @invalidate_memory(), !dbg !7615
  br label %if.end2914, !dbg !7615

if.end2914:                                       ; preds = %if.then2913, %lor.lhs.false2909, %if.then2904
  call void @invalidate_for_call(), !dbg !7616
  br label %if.end2915, !dbg !7617

if.end2915:                                       ; preds = %if.end2914, %for.end2899
  store i32 0, i32* %i, align 4, !dbg !7618
  br label %for.cond2916, !dbg !7620

for.cond2916:                                     ; preds = %for.inc2971, %if.end2915
  %1434 = load i32, i32* %i, align 4, !dbg !7621
  %1435 = load i32, i32* %n_sets, align 4, !dbg !7623
  %cmp2917 = icmp slt i32 %1434, %1435, !dbg !7624
  br i1 %cmp2917, label %for.body2919, label %for.end2973, !dbg !7625

for.body2919:                                     ; preds = %for.cond2916
  %1436 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7626
  %1437 = load i32, i32* %i, align 4, !dbg !7628
  %idxprom2920 = sext i32 %1437 to i64, !dbg !7626
  %arrayidx2921 = getelementptr inbounds %struct.set, %struct.set* %1436, i64 %idxprom2920, !dbg !7626
  %rtl2922 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2921, i32 0, i32 0, !dbg !7629
  %1438 = load %struct.rtx_def*, %struct.rtx_def** %rtl2922, align 8, !dbg !7629
  %tobool2923 = icmp ne %struct.rtx_def* %1438, null, !dbg !7626
  br i1 %tobool2923, label %if.then2924, label %if.end2970, !dbg !7630

if.then2924:                                      ; preds = %for.body2919
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dest2925, metadata !7631, metadata !DIExpression()), !dbg !7633
  %1439 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7634
  %1440 = load i32, i32* %i, align 4, !dbg !7634
  %idxprom2926 = sext i32 %1440 to i64, !dbg !7634
  %arrayidx2927 = getelementptr inbounds %struct.set, %struct.set* %1439, i64 %idxprom2926, !dbg !7634
  %rtl2928 = getelementptr inbounds %struct.set, %struct.set* %arrayidx2927, i32 0, i32 0, !dbg !7634
  %1441 = load %struct.rtx_def*, %struct.rtx_def** %rtl2928, align 8, !dbg !7634
  %u2929 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1441, i32 0, i32 1, !dbg !7634
  %fld2930 = bitcast %union.u* %u2929 to [1 x %union.rtunion_def]*, !dbg !7634
  %arrayidx2931 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2930, i64 0, i64 0, !dbg !7634
  %rt_rtx2932 = bitcast %union.rtunion_def* %arrayidx2931 to %struct.rtx_def**, !dbg !7634
  %1442 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2932, align 8, !dbg !7634
  store %struct.rtx_def* %1442, %struct.rtx_def** %dest2925, align 8, !dbg !7633
  %1443 = load %struct.rtx_def*, %struct.rtx_def** %dest2925, align 8, !dbg !7635
  %1444 = bitcast %struct.rtx_def* %1443 to i32*, !dbg !7635
  %bf.load2933 = load i32, i32* %1444, align 8, !dbg !7635
  %bf.clear2934 = and i32 %bf.load2933, 65535, !dbg !7635
  %cmp2935 = icmp eq i32 %bf.clear2934, 37, !dbg !7635
  br i1 %cmp2935, label %if.then2942, label %lor.lhs.false2937, !dbg !7637

lor.lhs.false2937:                                ; preds = %if.then2924
  %1445 = load %struct.rtx_def*, %struct.rtx_def** %dest2925, align 8, !dbg !7638
  %1446 = bitcast %struct.rtx_def* %1445 to i32*, !dbg !7638
  %bf.load2938 = load i32, i32* %1446, align 8, !dbg !7638
  %bf.clear2939 = and i32 %bf.load2938, 65535, !dbg !7638
  %cmp2940 = icmp eq i32 %bf.clear2939, 39, !dbg !7639
  br i1 %cmp2940, label %if.then2942, label %if.else2943, !dbg !7640

if.then2942:                                      ; preds = %lor.lhs.false2937, %if.then2924
  %1447 = load %struct.rtx_def*, %struct.rtx_def** %dest2925, align 8, !dbg !7641
  call void @invalidate(%struct.rtx_def* %1447, i32 0), !dbg !7642
  br label %if.end2969, !dbg !7642

if.else2943:                                      ; preds = %lor.lhs.false2937
  %1448 = load %struct.rtx_def*, %struct.rtx_def** %dest2925, align 8, !dbg !7643
  %1449 = bitcast %struct.rtx_def* %1448 to i32*, !dbg !7643
  %bf.load2944 = load i32, i32* %1449, align 8, !dbg !7643
  %bf.clear2945 = and i32 %bf.load2944, 65535, !dbg !7643
  %cmp2946 = icmp eq i32 %bf.clear2945, 43, !dbg !7643
  br i1 %cmp2946, label %if.then2948, label %if.else2949, !dbg !7645

if.then2948:                                      ; preds = %if.else2943
  %1450 = load %struct.rtx_def*, %struct.rtx_def** %dest2925, align 8, !dbg !7646
  call void @invalidate(%struct.rtx_def* %1450, i32 0), !dbg !7647
  br label %if.end2968, !dbg !7647

if.else2949:                                      ; preds = %if.else2943
  %1451 = load %struct.rtx_def*, %struct.rtx_def** %dest2925, align 8, !dbg !7648
  %1452 = bitcast %struct.rtx_def* %1451 to i32*, !dbg !7648
  %bf.load2950 = load i32, i32* %1452, align 8, !dbg !7648
  %bf.clear2951 = and i32 %bf.load2950, 65535, !dbg !7648
  %cmp2952 = icmp eq i32 %bf.clear2951, 40, !dbg !7650
  br i1 %cmp2952, label %if.then2959, label %lor.lhs.false2954, !dbg !7651

lor.lhs.false2954:                                ; preds = %if.else2949
  %1453 = load %struct.rtx_def*, %struct.rtx_def** %dest2925, align 8, !dbg !7652
  %1454 = bitcast %struct.rtx_def* %1453 to i32*, !dbg !7652
  %bf.load2955 = load i32, i32* %1454, align 8, !dbg !7652
  %bf.clear2956 = and i32 %bf.load2955, 65535, !dbg !7652
  %cmp2957 = icmp eq i32 %bf.clear2956, 120, !dbg !7653
  br i1 %cmp2957, label %if.then2959, label %if.end2967, !dbg !7654

if.then2959:                                      ; preds = %lor.lhs.false2954, %if.else2949
  %1455 = load %struct.rtx_def*, %struct.rtx_def** %dest2925, align 8, !dbg !7655
  %u2960 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1455, i32 0, i32 1, !dbg !7655
  %fld2961 = bitcast %union.u* %u2960 to [1 x %union.rtunion_def]*, !dbg !7655
  %arrayidx2962 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2961, i64 0, i64 0, !dbg !7655
  %rt_rtx2963 = bitcast %union.rtunion_def* %arrayidx2962 to %struct.rtx_def**, !dbg !7655
  %1456 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2963, align 8, !dbg !7655
  %1457 = load %struct.rtx_def*, %struct.rtx_def** %dest2925, align 8, !dbg !7656
  %1458 = bitcast %struct.rtx_def* %1457 to i32*, !dbg !7656
  %bf.load2964 = load i32, i32* %1458, align 8, !dbg !7656
  %bf.lshr2965 = lshr i32 %bf.load2964, 16, !dbg !7656
  %bf.clear2966 = and i32 %bf.lshr2965, 255, !dbg !7656
  call void @invalidate(%struct.rtx_def* %1456, i32 %bf.clear2966), !dbg !7657
  br label %if.end2967, !dbg !7657

if.end2967:                                       ; preds = %if.then2959, %lor.lhs.false2954
  br label %if.end2968

if.end2968:                                       ; preds = %if.end2967, %if.then2948
  br label %if.end2969

if.end2969:                                       ; preds = %if.end2968, %if.then2942
  br label %if.end2970, !dbg !7658

if.end2970:                                       ; preds = %if.end2969, %for.body2919
  br label %for.inc2971, !dbg !7629

for.inc2971:                                      ; preds = %if.end2970
  %1459 = load i32, i32* %i, align 4, !dbg !7659
  %inc2972 = add nsw i32 %1459, 1, !dbg !7659
  store i32 %inc2972, i32* %i, align 4, !dbg !7659
  br label %for.cond2916, !dbg !7660, !llvm.loop !7661

for.end2973:                                      ; preds = %for.cond2916
  %1460 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7663
  %1461 = bitcast %struct.rtx_def* %1460 to i32*, !dbg !7663
  %bf.load2974 = load i32, i32* %1461, align 8, !dbg !7663
  %bf.clear2975 = and i32 %bf.load2974, 65535, !dbg !7663
  %cmp2976 = icmp eq i32 %bf.clear2975, 8, !dbg !7663
  br i1 %cmp2976, label %land.lhs.true2978, label %if.end2997, !dbg !7665

land.lhs.true2978:                                ; preds = %for.end2973
  %1462 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7666
  %u2979 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1462, i32 0, i32 1, !dbg !7666
  %fld2980 = bitcast %union.u* %u2979 to [1 x %union.rtunion_def]*, !dbg !7666
  %arrayidx2981 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2980, i64 0, i64 5, !dbg !7666
  %rt_rtx2982 = bitcast %union.rtunion_def* %arrayidx2981 to %struct.rtx_def**, !dbg !7666
  %1463 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2982, align 8, !dbg !7666
  %1464 = bitcast %struct.rtx_def* %1463 to i32*, !dbg !7666
  %bf.load2983 = load i32, i32* %1464, align 8, !dbg !7666
  %bf.clear2984 = and i32 %bf.load2983, 65535, !dbg !7666
  %cmp2985 = icmp eq i32 %bf.clear2984, 17, !dbg !7667
  br i1 %cmp2985, label %land.lhs.true2987, label %if.end2997, !dbg !7668

land.lhs.true2987:                                ; preds = %land.lhs.true2978
  %1465 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7669
  %u2988 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1465, i32 0, i32 1, !dbg !7669
  %fld2989 = bitcast %union.u* %u2988 to [1 x %union.rtunion_def]*, !dbg !7669
  %arrayidx2990 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2989, i64 0, i64 5, !dbg !7669
  %rt_rtx2991 = bitcast %union.rtunion_def* %arrayidx2990 to %struct.rtx_def**, !dbg !7669
  %1466 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2991, align 8, !dbg !7669
  %1467 = bitcast %struct.rtx_def* %1466 to i32*, !dbg !7669
  %bf.load2992 = load i32, i32* %1467, align 8, !dbg !7669
  %bf.lshr2993 = lshr i32 %bf.load2992, 27, !dbg !7669
  %bf.clear2994 = and i32 %bf.lshr2993, 1, !dbg !7669
  %tobool2995 = icmp ne i32 %bf.clear2994, 0, !dbg !7669
  br i1 %tobool2995, label %if.then2996, label %if.end2997, !dbg !7670

if.then2996:                                      ; preds = %land.lhs.true2987
  call void @flush_hash_table(), !dbg !7671
  br label %if.end2997, !dbg !7671

if.end2997:                                       ; preds = %if.then2996, %land.lhs.true2987, %land.lhs.true2978, %for.end2973
  %1468 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7672
  %1469 = bitcast %struct.rtx_def* %1468 to i32*, !dbg !7672
  %bf.load2998 = load i32, i32* %1469, align 8, !dbg !7672
  %bf.clear2999 = and i32 %bf.load2998, 65535, !dbg !7672
  %cmp3000 = icmp eq i32 %bf.clear2999, 10, !dbg !7672
  br i1 %cmp3000, label %land.lhs.true3002, label %if.end3006, !dbg !7674

land.lhs.true3002:                                ; preds = %if.end2997
  %1470 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !7675
  %call3003 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %1470, i32 30, %struct.rtx_def* null), !dbg !7676
  %tobool3004 = icmp ne %struct.rtx_def* %call3003, null, !dbg !7676
  br i1 %tobool3004, label %if.then3005, label %if.end3006, !dbg !7677

if.then3005:                                      ; preds = %land.lhs.true3002
  call void @flush_hash_table(), !dbg !7678
  br label %done, !dbg !7680

if.end3006:                                       ; preds = %land.lhs.true3002, %if.end2997
  store i32 0, i32* %i, align 4, !dbg !7681
  br label %for.cond3007, !dbg !7683

for.cond3007:                                     ; preds = %for.inc3063, %if.end3006
  %1471 = load i32, i32* %i, align 4, !dbg !7684
  %1472 = load i32, i32* %n_sets, align 4, !dbg !7686
  %cmp3008 = icmp slt i32 %1471, %1472, !dbg !7687
  br i1 %cmp3008, label %for.body3010, label %for.end3065, !dbg !7688

for.body3010:                                     ; preds = %for.cond3007
  %1473 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7689
  %1474 = load i32, i32* %i, align 4, !dbg !7692
  %idxprom3011 = sext i32 %1474 to i64, !dbg !7689
  %arrayidx3012 = getelementptr inbounds %struct.set, %struct.set* %1473, i64 %idxprom3011, !dbg !7689
  %rtl3013 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3012, i32 0, i32 0, !dbg !7693
  %1475 = load %struct.rtx_def*, %struct.rtx_def** %rtl3013, align 8, !dbg !7693
  %tobool3014 = icmp ne %struct.rtx_def* %1475, null, !dbg !7689
  br i1 %tobool3014, label %if.then3015, label %if.end3062, !dbg !7694

if.then3015:                                      ; preds = %for.body3010
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x3016, metadata !7695, metadata !DIExpression()), !dbg !7697
  %1476 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7698
  %1477 = load i32, i32* %i, align 4, !dbg !7698
  %idxprom3017 = sext i32 %1477 to i64, !dbg !7698
  %arrayidx3018 = getelementptr inbounds %struct.set, %struct.set* %1476, i64 %idxprom3017, !dbg !7698
  %rtl3019 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3018, i32 0, i32 0, !dbg !7698
  %1478 = load %struct.rtx_def*, %struct.rtx_def** %rtl3019, align 8, !dbg !7698
  %u3020 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1478, i32 0, i32 1, !dbg !7698
  %fld3021 = bitcast %union.u* %u3020 to [1 x %union.rtunion_def]*, !dbg !7698
  %arrayidx3022 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3021, i64 0, i64 0, !dbg !7698
  %rt_rtx3023 = bitcast %union.rtunion_def* %arrayidx3022 to %struct.rtx_def**, !dbg !7698
  %1479 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3023, align 8, !dbg !7698
  store %struct.rtx_def* %1479, %struct.rtx_def** %x3016, align 8, !dbg !7697
  %1480 = load %struct.rtx_def*, %struct.rtx_def** %x3016, align 8, !dbg !7699
  %1481 = bitcast %struct.rtx_def* %1480 to i32*, !dbg !7699
  %bf.load3024 = load i32, i32* %1481, align 8, !dbg !7699
  %bf.clear3025 = and i32 %bf.load3024, 65535, !dbg !7699
  %cmp3026 = icmp eq i32 %bf.clear3025, 37, !dbg !7699
  br i1 %cmp3026, label %if.else3030, label %if.then3028, !dbg !7701

if.then3028:                                      ; preds = %if.then3015
  %1482 = load %struct.rtx_def*, %struct.rtx_def** %x3016, align 8, !dbg !7702
  %call3029 = call i32 @mention_regs(%struct.rtx_def* %1482), !dbg !7703
  br label %if.end3061, !dbg !7703

if.else3030:                                      ; preds = %if.then3015
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !7704, metadata !DIExpression()), !dbg !7706
  %1483 = load %struct.rtx_def*, %struct.rtx_def** %x3016, align 8, !dbg !7707
  %call3031 = call i32 @rhs_regno(%struct.rtx_def* %1483), !dbg !7707
  store i32 %call3031, i32* %regno, align 4, !dbg !7706
  call void @llvm.dbg.declare(metadata i32* %endregno, metadata !7708, metadata !DIExpression()), !dbg !7709
  %1484 = load %struct.rtx_def*, %struct.rtx_def** %x3016, align 8, !dbg !7710
  %call3032 = call i32 @rhs_regno(%struct.rtx_def* %1484), !dbg !7710
  %cmp3033 = icmp ult i32 %call3032, 53, !dbg !7710
  br i1 %cmp3033, label %cond.true3035, label %cond.false3041, !dbg !7710

cond.true3035:                                    ; preds = %if.else3030
  %1485 = load %struct.rtx_def*, %struct.rtx_def** %x3016, align 8, !dbg !7710
  %1486 = bitcast %struct.rtx_def* %1485 to i32*, !dbg !7710
  %bf.load3036 = load i32, i32* %1486, align 8, !dbg !7710
  %bf.lshr3037 = lshr i32 %bf.load3036, 16, !dbg !7710
  %bf.clear3038 = and i32 %bf.lshr3037, 255, !dbg !7710
  %1487 = load %struct.rtx_def*, %struct.rtx_def** %x3016, align 8, !dbg !7710
  %call3039 = call i32 @rhs_regno(%struct.rtx_def* %1487), !dbg !7710
  %call3040 = call i32 @end_hard_regno(i32 %bf.clear3038, i32 %call3039), !dbg !7710
  br label %cond.end3044, !dbg !7710

cond.false3041:                                   ; preds = %if.else3030
  %1488 = load %struct.rtx_def*, %struct.rtx_def** %x3016, align 8, !dbg !7710
  %call3042 = call i32 @rhs_regno(%struct.rtx_def* %1488), !dbg !7710
  %add3043 = add i32 %call3042, 1, !dbg !7710
  br label %cond.end3044, !dbg !7710

cond.end3044:                                     ; preds = %cond.false3041, %cond.true3035
  %cond3045 = phi i32 [ %call3040, %cond.true3035 ], [ %add3043, %cond.false3041 ], !dbg !7710
  store i32 %cond3045, i32* %endregno, align 4, !dbg !7709
  call void @llvm.dbg.declare(metadata i32* %i3046, metadata !7711, metadata !DIExpression()), !dbg !7712
  %1489 = load i32, i32* %regno, align 4, !dbg !7713
  store i32 %1489, i32* %i3046, align 4, !dbg !7715
  br label %for.cond3047, !dbg !7716

for.cond3047:                                     ; preds = %for.inc3058, %cond.end3044
  %1490 = load i32, i32* %i3046, align 4, !dbg !7717
  %1491 = load i32, i32* %endregno, align 4, !dbg !7719
  %cmp3048 = icmp ult i32 %1490, %1491, !dbg !7720
  br i1 %cmp3048, label %for.body3050, label %for.end3060, !dbg !7721

for.body3050:                                     ; preds = %for.cond3047
  %1492 = load i32, i32* %i3046, align 4, !dbg !7722
  %call3051 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %1492), !dbg !7722
  %reg_in_table = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call3051, i32 0, i32 3, !dbg !7722
  %1493 = load i32, i32* %reg_in_table, align 4, !dbg !7722
  %cmp3052 = icmp sge i32 %1493, 0, !dbg !7725
  br i1 %cmp3052, label %if.then3054, label %if.end3057, !dbg !7726

if.then3054:                                      ; preds = %for.body3050
  %1494 = load i32, i32* %i3046, align 4, !dbg !7727
  call void @remove_invalid_refs(i32 %1494), !dbg !7729
  %1495 = load i32, i32* %i3046, align 4, !dbg !7730
  %call3055 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %1495), !dbg !7730
  %reg_in_table3056 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call3055, i32 0, i32 3, !dbg !7730
  store i32 -1, i32* %reg_in_table3056, align 4, !dbg !7731
  br label %if.end3057, !dbg !7732

if.end3057:                                       ; preds = %if.then3054, %for.body3050
  br label %for.inc3058, !dbg !7733

for.inc3058:                                      ; preds = %if.end3057
  %1496 = load i32, i32* %i3046, align 4, !dbg !7734
  %inc3059 = add i32 %1496, 1, !dbg !7734
  store i32 %inc3059, i32* %i3046, align 4, !dbg !7734
  br label %for.cond3047, !dbg !7735, !llvm.loop !7736

for.end3060:                                      ; preds = %for.cond3047
  br label %if.end3061

if.end3061:                                       ; preds = %for.end3060, %if.then3028
  br label %if.end3062, !dbg !7738

if.end3062:                                       ; preds = %if.end3061, %for.body3010
  br label %for.inc3063, !dbg !7739

for.inc3063:                                      ; preds = %if.end3062
  %1497 = load i32, i32* %i, align 4, !dbg !7740
  %inc3064 = add nsw i32 %1497, 1, !dbg !7740
  store i32 %inc3064, i32* %i, align 4, !dbg !7740
  br label %for.cond3007, !dbg !7741, !llvm.loop !7742

for.end3065:                                      ; preds = %for.cond3007
  store i32 0, i32* %i, align 4, !dbg !7744
  br label %for.cond3066, !dbg !7746

for.cond3066:                                     ; preds = %for.inc3137, %for.end3065
  %1498 = load i32, i32* %i, align 4, !dbg !7747
  %1499 = load i32, i32* %n_sets, align 4, !dbg !7749
  %cmp3067 = icmp slt i32 %1498, %1499, !dbg !7750
  br i1 %cmp3067, label %for.body3069, label %for.end3139, !dbg !7751

for.body3069:                                     ; preds = %for.cond3066
  %1500 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7752
  %1501 = load i32, i32* %i, align 4, !dbg !7754
  %idxprom3070 = sext i32 %1501 to i64, !dbg !7752
  %arrayidx3071 = getelementptr inbounds %struct.set, %struct.set* %1500, i64 %idxprom3070, !dbg !7752
  %rtl3072 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3071, i32 0, i32 0, !dbg !7755
  %1502 = load %struct.rtx_def*, %struct.rtx_def** %rtl3072, align 8, !dbg !7755
  %tobool3073 = icmp ne %struct.rtx_def* %1502, null, !dbg !7752
  br i1 %tobool3073, label %if.then3074, label %if.end3136, !dbg !7756

if.then3074:                                      ; preds = %for.body3069
  %1503 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7757
  %1504 = load i32, i32* %i, align 4, !dbg !7760
  %idxprom3075 = sext i32 %1504 to i64, !dbg !7757
  %arrayidx3076 = getelementptr inbounds %struct.set, %struct.set* %1503, i64 %idxprom3075, !dbg !7757
  %dest_addr_elt3077 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3076, i32 0, i32 12, !dbg !7761
  %1505 = load %struct.table_elt*, %struct.table_elt** %dest_addr_elt3077, align 8, !dbg !7761
  %tobool3078 = icmp ne %struct.table_elt* %1505, null, !dbg !7757
  br i1 %tobool3078, label %land.lhs.true3079, label %if.else3090, !dbg !7762

land.lhs.true3079:                                ; preds = %if.then3074
  %1506 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7763
  %1507 = load i32, i32* %i, align 4, !dbg !7764
  %idxprom3080 = sext i32 %1507 to i64, !dbg !7763
  %arrayidx3081 = getelementptr inbounds %struct.set, %struct.set* %1506, i64 %idxprom3080, !dbg !7763
  %dest_addr_elt3082 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3081, i32 0, i32 12, !dbg !7765
  %1508 = load %struct.table_elt*, %struct.table_elt** %dest_addr_elt3082, align 8, !dbg !7765
  %first_same_value3083 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1508, i32 0, i32 6, !dbg !7766
  %1509 = load %struct.table_elt*, %struct.table_elt** %first_same_value3083, align 8, !dbg !7766
  %cmp3084 = icmp eq %struct.table_elt* %1509, null, !dbg !7767
  br i1 %cmp3084, label %if.then3086, label %if.else3090, !dbg !7768

if.then3086:                                      ; preds = %land.lhs.true3079
  %1510 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7769
  %1511 = load i32, i32* %i, align 4, !dbg !7771
  %idxprom3087 = sext i32 %1511 to i64, !dbg !7769
  %arrayidx3088 = getelementptr inbounds %struct.set, %struct.set* %1510, i64 %idxprom3087, !dbg !7769
  %rtl3089 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3088, i32 0, i32 0, !dbg !7772
  store %struct.rtx_def* null, %struct.rtx_def** %rtl3089, align 8, !dbg !7773
  br label %if.end3135, !dbg !7774

if.else3090:                                      ; preds = %land.lhs.true3079, %if.then3074
  %1512 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7775
  %1513 = load i32, i32* %i, align 4, !dbg !7777
  %idxprom3091 = sext i32 %1513 to i64, !dbg !7775
  %arrayidx3092 = getelementptr inbounds %struct.set, %struct.set* %1512, i64 %idxprom3091, !dbg !7775
  %src_elt3093 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3092, i32 0, i32 2, !dbg !7778
  %1514 = load %struct.table_elt*, %struct.table_elt** %src_elt3093, align 8, !dbg !7778
  %tobool3094 = icmp ne %struct.table_elt* %1514, null, !dbg !7775
  br i1 %tobool3094, label %land.lhs.true3095, label %if.end3134, !dbg !7779

land.lhs.true3095:                                ; preds = %if.else3090
  %1515 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7780
  %1516 = load i32, i32* %i, align 4, !dbg !7781
  %idxprom3096 = sext i32 %1516 to i64, !dbg !7780
  %arrayidx3097 = getelementptr inbounds %struct.set, %struct.set* %1515, i64 %idxprom3096, !dbg !7780
  %src_elt3098 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3097, i32 0, i32 2, !dbg !7782
  %1517 = load %struct.table_elt*, %struct.table_elt** %src_elt3098, align 8, !dbg !7782
  %first_same_value3099 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1517, i32 0, i32 6, !dbg !7783
  %1518 = load %struct.table_elt*, %struct.table_elt** %first_same_value3099, align 8, !dbg !7783
  %cmp3100 = icmp eq %struct.table_elt* %1518, null, !dbg !7784
  br i1 %cmp3100, label %if.then3102, label %if.end3134, !dbg !7785

if.then3102:                                      ; preds = %land.lhs.true3095
  call void @llvm.dbg.declare(metadata %struct.table_elt** %elt3103, metadata !7786, metadata !DIExpression()), !dbg !7788
  %1519 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7789
  %1520 = load i32, i32* %i, align 4, !dbg !7790
  %idxprom3104 = sext i32 %1520 to i64, !dbg !7789
  %arrayidx3105 = getelementptr inbounds %struct.set, %struct.set* %1519, i64 %idxprom3104, !dbg !7789
  %src_elt3106 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3105, i32 0, i32 2, !dbg !7791
  %1521 = load %struct.table_elt*, %struct.table_elt** %src_elt3106, align 8, !dbg !7791
  store %struct.table_elt* %1521, %struct.table_elt** %elt3103, align 8, !dbg !7788
  br label %while.cond3107, !dbg !7792

while.cond3107:                                   ; preds = %while.body3112, %if.then3102
  %1522 = load %struct.table_elt*, %struct.table_elt** %elt3103, align 8, !dbg !7793
  %tobool3108 = icmp ne %struct.table_elt* %1522, null, !dbg !7793
  br i1 %tobool3108, label %land.rhs3109, label %land.end3111, !dbg !7794

land.rhs3109:                                     ; preds = %while.cond3107
  %1523 = load %struct.table_elt*, %struct.table_elt** %elt3103, align 8, !dbg !7795
  %prev_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1523, i32 0, i32 5, !dbg !7796
  %1524 = load %struct.table_elt*, %struct.table_elt** %prev_same_value, align 8, !dbg !7796
  %tobool3110 = icmp ne %struct.table_elt* %1524, null, !dbg !7794
  br label %land.end3111

land.end3111:                                     ; preds = %land.rhs3109, %while.cond3107
  %1525 = phi i1 [ false, %while.cond3107 ], [ %tobool3110, %land.rhs3109 ], !dbg !7797
  br i1 %1525, label %while.body3112, label %while.end3114, !dbg !7792

while.body3112:                                   ; preds = %land.end3111
  %1526 = load %struct.table_elt*, %struct.table_elt** %elt3103, align 8, !dbg !7798
  %prev_same_value3113 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1526, i32 0, i32 5, !dbg !7799
  %1527 = load %struct.table_elt*, %struct.table_elt** %prev_same_value3113, align 8, !dbg !7799
  store %struct.table_elt* %1527, %struct.table_elt** %elt3103, align 8, !dbg !7800
  br label %while.cond3107, !dbg !7792, !llvm.loop !7801

while.end3114:                                    ; preds = %land.end3111
  br label %while.cond3115, !dbg !7802

while.cond3115:                                   ; preds = %while.body3122, %while.end3114
  %1528 = load %struct.table_elt*, %struct.table_elt** %elt3103, align 8, !dbg !7803
  %tobool3116 = icmp ne %struct.table_elt* %1528, null, !dbg !7803
  br i1 %tobool3116, label %land.rhs3117, label %land.end3121, !dbg !7804

land.rhs3117:                                     ; preds = %while.cond3115
  %1529 = load %struct.table_elt*, %struct.table_elt** %elt3103, align 8, !dbg !7805
  %first_same_value3118 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1529, i32 0, i32 6, !dbg !7806
  %1530 = load %struct.table_elt*, %struct.table_elt** %first_same_value3118, align 8, !dbg !7806
  %cmp3119 = icmp eq %struct.table_elt* %1530, null, !dbg !7807
  br label %land.end3121

land.end3121:                                     ; preds = %land.rhs3117, %while.cond3115
  %1531 = phi i1 [ false, %while.cond3115 ], [ %cmp3119, %land.rhs3117 ], !dbg !7797
  br i1 %1531, label %while.body3122, label %while.end3124, !dbg !7802

while.body3122:                                   ; preds = %land.end3121
  %1532 = load %struct.table_elt*, %struct.table_elt** %elt3103, align 8, !dbg !7808
  %next_same_value3123 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1532, i32 0, i32 4, !dbg !7809
  %1533 = load %struct.table_elt*, %struct.table_elt** %next_same_value3123, align 8, !dbg !7809
  store %struct.table_elt* %1533, %struct.table_elt** %elt3103, align 8, !dbg !7810
  br label %while.cond3115, !dbg !7802, !llvm.loop !7811

while.end3124:                                    ; preds = %land.end3121
  %1534 = load %struct.table_elt*, %struct.table_elt** %elt3103, align 8, !dbg !7812
  %tobool3125 = icmp ne %struct.table_elt* %1534, null, !dbg !7812
  br i1 %tobool3125, label %cond.true3126, label %cond.false3128, !dbg !7812

cond.true3126:                                    ; preds = %while.end3124
  %1535 = load %struct.table_elt*, %struct.table_elt** %elt3103, align 8, !dbg !7813
  %first_same_value3127 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1535, i32 0, i32 6, !dbg !7814
  %1536 = load %struct.table_elt*, %struct.table_elt** %first_same_value3127, align 8, !dbg !7814
  br label %cond.end3129, !dbg !7812

cond.false3128:                                   ; preds = %while.end3124
  br label %cond.end3129, !dbg !7812

cond.end3129:                                     ; preds = %cond.false3128, %cond.true3126
  %cond3130 = phi %struct.table_elt* [ %1536, %cond.true3126 ], [ null, %cond.false3128 ], !dbg !7812
  %1537 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7815
  %1538 = load i32, i32* %i, align 4, !dbg !7816
  %idxprom3131 = sext i32 %1538 to i64, !dbg !7815
  %arrayidx3132 = getelementptr inbounds %struct.set, %struct.set* %1537, i64 %idxprom3131, !dbg !7815
  %src_elt3133 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3132, i32 0, i32 2, !dbg !7817
  store %struct.table_elt* %cond3130, %struct.table_elt** %src_elt3133, align 8, !dbg !7818
  br label %if.end3134, !dbg !7819

if.end3134:                                       ; preds = %cond.end3129, %land.lhs.true3095, %if.else3090
  br label %if.end3135

if.end3135:                                       ; preds = %if.end3134, %if.then3086
  br label %if.end3136, !dbg !7820

if.end3136:                                       ; preds = %if.end3135, %for.body3069
  br label %for.inc3137, !dbg !7755

for.inc3137:                                      ; preds = %if.end3136
  %1539 = load i32, i32* %i, align 4, !dbg !7821
  %inc3138 = add nsw i32 %1539, 1, !dbg !7821
  store i32 %inc3138, i32* %i, align 4, !dbg !7821
  br label %for.cond3066, !dbg !7822, !llvm.loop !7823

for.end3139:                                      ; preds = %for.cond3066
  store i32 0, i32* %i, align 4, !dbg !7825
  br label %for.cond3140, !dbg !7827

for.cond3140:                                     ; preds = %for.inc3569, %for.end3139
  %1540 = load i32, i32* %i, align 4, !dbg !7828
  %1541 = load i32, i32* %n_sets, align 4, !dbg !7830
  %cmp3141 = icmp slt i32 %1540, %1541, !dbg !7831
  br i1 %cmp3141, label %for.body3143, label %for.end3571, !dbg !7832

for.body3143:                                     ; preds = %for.cond3140
  %1542 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7833
  %1543 = load i32, i32* %i, align 4, !dbg !7835
  %idxprom3144 = sext i32 %1543 to i64, !dbg !7833
  %arrayidx3145 = getelementptr inbounds %struct.set, %struct.set* %1542, i64 %idxprom3144, !dbg !7833
  %rtl3146 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3145, i32 0, i32 0, !dbg !7836
  %1544 = load %struct.rtx_def*, %struct.rtx_def** %rtl3146, align 8, !dbg !7836
  %tobool3147 = icmp ne %struct.rtx_def* %1544, null, !dbg !7833
  br i1 %tobool3147, label %if.then3148, label %if.end3568, !dbg !7837

if.then3148:                                      ; preds = %for.body3143
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dest3149, metadata !7838, metadata !DIExpression()), !dbg !7840
  %1545 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7841
  %1546 = load i32, i32* %i, align 4, !dbg !7841
  %idxprom3150 = sext i32 %1546 to i64, !dbg !7841
  %arrayidx3151 = getelementptr inbounds %struct.set, %struct.set* %1545, i64 %idxprom3150, !dbg !7841
  %rtl3152 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3151, i32 0, i32 0, !dbg !7841
  %1547 = load %struct.rtx_def*, %struct.rtx_def** %rtl3152, align 8, !dbg !7841
  %u3153 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1547, i32 0, i32 1, !dbg !7841
  %fld3154 = bitcast %union.u* %u3153 to [1 x %union.rtunion_def]*, !dbg !7841
  %arrayidx3155 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3154, i64 0, i64 0, !dbg !7841
  %rt_rtx3156 = bitcast %union.rtunion_def* %arrayidx3155 to %struct.rtx_def**, !dbg !7841
  %1548 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3156, align 8, !dbg !7841
  store %struct.rtx_def* %1548, %struct.rtx_def** %dest3149, align 8, !dbg !7840
  call void @llvm.dbg.declare(metadata %struct.table_elt** %elt3157, metadata !7842, metadata !DIExpression()), !dbg !7843
  %1549 = load i32, i32* @flag_float_store, align 4, !dbg !7844
  %tobool3158 = icmp ne i32 %1549, 0, !dbg !7844
  br i1 %tobool3158, label %land.lhs.true3159, label %lor.lhs.false3200, !dbg !7846

land.lhs.true3159:                                ; preds = %if.then3148
  %1550 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7847
  %1551 = bitcast %struct.rtx_def* %1550 to i32*, !dbg !7847
  %bf.load3160 = load i32, i32* %1551, align 8, !dbg !7847
  %bf.clear3161 = and i32 %bf.load3160, 65535, !dbg !7847
  %cmp3162 = icmp eq i32 %bf.clear3161, 43, !dbg !7847
  br i1 %cmp3162, label %land.lhs.true3164, label %lor.lhs.false3200, !dbg !7848

land.lhs.true3164:                                ; preds = %land.lhs.true3159
  %1552 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7849
  %1553 = bitcast %struct.rtx_def* %1552 to i32*, !dbg !7849
  %bf.load3165 = load i32, i32* %1553, align 8, !dbg !7849
  %bf.lshr3166 = lshr i32 %bf.load3165, 16, !dbg !7849
  %bf.clear3167 = and i32 %bf.lshr3166, 255, !dbg !7849
  %idxprom3168 = zext i32 %bf.clear3167 to i64, !dbg !7849
  %arrayidx3169 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom3168, !dbg !7849
  %1554 = load i8, i8* %arrayidx3169, align 1, !dbg !7849
  %conv3170 = zext i8 %1554 to i32, !dbg !7849
  %cmp3171 = icmp eq i32 %conv3170, 8, !dbg !7849
  br i1 %cmp3171, label %if.then3254, label %lor.lhs.false3173, !dbg !7849

lor.lhs.false3173:                                ; preds = %land.lhs.true3164
  %1555 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7849
  %1556 = bitcast %struct.rtx_def* %1555 to i32*, !dbg !7849
  %bf.load3174 = load i32, i32* %1556, align 8, !dbg !7849
  %bf.lshr3175 = lshr i32 %bf.load3174, 16, !dbg !7849
  %bf.clear3176 = and i32 %bf.lshr3175, 255, !dbg !7849
  %idxprom3177 = zext i32 %bf.clear3176 to i64, !dbg !7849
  %arrayidx3178 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom3177, !dbg !7849
  %1557 = load i8, i8* %arrayidx3178, align 1, !dbg !7849
  %conv3179 = zext i8 %1557 to i32, !dbg !7849
  %cmp3180 = icmp eq i32 %conv3179, 9, !dbg !7849
  br i1 %cmp3180, label %if.then3254, label %lor.lhs.false3182, !dbg !7849

lor.lhs.false3182:                                ; preds = %lor.lhs.false3173
  %1558 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7849
  %1559 = bitcast %struct.rtx_def* %1558 to i32*, !dbg !7849
  %bf.load3183 = load i32, i32* %1559, align 8, !dbg !7849
  %bf.lshr3184 = lshr i32 %bf.load3183, 16, !dbg !7849
  %bf.clear3185 = and i32 %bf.lshr3184, 255, !dbg !7849
  %idxprom3186 = zext i32 %bf.clear3185 to i64, !dbg !7849
  %arrayidx3187 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom3186, !dbg !7849
  %1560 = load i8, i8* %arrayidx3187, align 1, !dbg !7849
  %conv3188 = zext i8 %1560 to i32, !dbg !7849
  %cmp3189 = icmp eq i32 %conv3188, 11, !dbg !7849
  br i1 %cmp3189, label %if.then3254, label %lor.lhs.false3191, !dbg !7849

lor.lhs.false3191:                                ; preds = %lor.lhs.false3182
  %1561 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7849
  %1562 = bitcast %struct.rtx_def* %1561 to i32*, !dbg !7849
  %bf.load3192 = load i32, i32* %1562, align 8, !dbg !7849
  %bf.lshr3193 = lshr i32 %bf.load3192, 16, !dbg !7849
  %bf.clear3194 = and i32 %bf.lshr3193, 255, !dbg !7849
  %idxprom3195 = zext i32 %bf.clear3194 to i64, !dbg !7849
  %arrayidx3196 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom3195, !dbg !7849
  %1563 = load i8, i8* %arrayidx3196, align 1, !dbg !7849
  %conv3197 = zext i8 %1563 to i32, !dbg !7849
  %cmp3198 = icmp eq i32 %conv3197, 17, !dbg !7849
  br i1 %cmp3198, label %if.then3254, label %lor.lhs.false3200, !dbg !7850

lor.lhs.false3200:                                ; preds = %lor.lhs.false3191, %land.lhs.true3159, %if.then3148
  %1564 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7851
  %1565 = bitcast %struct.rtx_def* %1564 to i32*, !dbg !7851
  %bf.load3201 = load i32, i32* %1565, align 8, !dbg !7851
  %bf.lshr3202 = lshr i32 %bf.load3201, 16, !dbg !7851
  %bf.clear3203 = and i32 %bf.lshr3202, 255, !dbg !7851
  %cmp3204 = icmp eq i32 %bf.clear3203, 1, !dbg !7852
  br i1 %cmp3204, label %if.then3254, label %lor.lhs.false3206, !dbg !7853

lor.lhs.false3206:                                ; preds = %lor.lhs.false3200
  %1566 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7854
  %1567 = load i32, i32* %i, align 4, !dbg !7855
  %idxprom3207 = sext i32 %1567 to i64, !dbg !7854
  %arrayidx3208 = getelementptr inbounds %struct.set, %struct.set* %1566, i64 %idxprom3207, !dbg !7854
  %src_elt3209 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3208, i32 0, i32 2, !dbg !7856
  %1568 = load %struct.table_elt*, %struct.table_elt** %src_elt3209, align 8, !dbg !7856
  %cmp3210 = icmp eq %struct.table_elt* %1568, null, !dbg !7857
  br i1 %cmp3210, label %if.then3254, label %lor.lhs.false3212, !dbg !7858

lor.lhs.false3212:                                ; preds = %lor.lhs.false3206
  %1569 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7859
  %1570 = bitcast %struct.rtx_def* %1569 to i32*, !dbg !7859
  %bf.load3213 = load i32, i32* %1570, align 8, !dbg !7859
  %bf.clear3214 = and i32 %bf.load3213, 65535, !dbg !7859
  %cmp3215 = icmp eq i32 %bf.clear3214, 39, !dbg !7860
  br i1 %cmp3215, label %land.lhs.true3217, label %if.end3255, !dbg !7861

land.lhs.true3217:                                ; preds = %lor.lhs.false3212
  %1571 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7862
  %1572 = bitcast %struct.rtx_def* %1571 to i32*, !dbg !7862
  %bf.load3218 = load i32, i32* %1572, align 8, !dbg !7862
  %bf.lshr3219 = lshr i32 %bf.load3218, 16, !dbg !7862
  %bf.clear3220 = and i32 %bf.lshr3219, 255, !dbg !7862
  %idxprom3221 = zext i32 %bf.clear3220 to i64, !dbg !7862
  %arrayidx3222 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom3221, !dbg !7862
  %1573 = load i8, i8* %arrayidx3222, align 1, !dbg !7862
  %conv3223 = zext i8 %1573 to i16, !dbg !7862
  %conv3224 = zext i16 %conv3223 to i32, !dbg !7862
  %1574 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7863
  %u3225 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1574, i32 0, i32 1, !dbg !7863
  %fld3226 = bitcast %union.u* %u3225 to [1 x %union.rtunion_def]*, !dbg !7863
  %arrayidx3227 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3226, i64 0, i64 0, !dbg !7863
  %rt_rtx3228 = bitcast %union.rtunion_def* %arrayidx3227 to %struct.rtx_def**, !dbg !7863
  %1575 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3228, align 8, !dbg !7863
  %1576 = bitcast %struct.rtx_def* %1575 to i32*, !dbg !7863
  %bf.load3229 = load i32, i32* %1576, align 8, !dbg !7863
  %bf.lshr3230 = lshr i32 %bf.load3229, 16, !dbg !7863
  %bf.clear3231 = and i32 %bf.lshr3230, 255, !dbg !7863
  %idxprom3232 = zext i32 %bf.clear3231 to i64, !dbg !7863
  %arrayidx3233 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom3232, !dbg !7863
  %1577 = load i8, i8* %arrayidx3233, align 1, !dbg !7863
  %conv3234 = zext i8 %1577 to i16, !dbg !7863
  %conv3235 = zext i16 %conv3234 to i32, !dbg !7863
  %cmp3236 = icmp sgt i32 %conv3224, %conv3235, !dbg !7864
  br i1 %cmp3236, label %land.lhs.true3238, label %if.end3255, !dbg !7865

land.lhs.true3238:                                ; preds = %land.lhs.true3217
  %1578 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7866
  %1579 = load i32, i32* %i, align 4, !dbg !7866
  %idxprom3239 = sext i32 %1579 to i64, !dbg !7866
  %arrayidx3240 = getelementptr inbounds %struct.set, %struct.set* %1578, i64 %idxprom3239, !dbg !7866
  %src3241 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3240, i32 0, i32 1, !dbg !7866
  %1580 = load %struct.rtx_def*, %struct.rtx_def** %src3241, align 8, !dbg !7866
  %1581 = bitcast %struct.rtx_def* %1580 to i32*, !dbg !7866
  %bf.load3242 = load i32, i32* %1581, align 8, !dbg !7866
  %bf.clear3243 = and i32 %bf.load3242, 65535, !dbg !7866
  %cmp3244 = icmp eq i32 %bf.clear3243, 98, !dbg !7867
  br i1 %cmp3244, label %if.then3254, label %lor.lhs.false3246, !dbg !7868

lor.lhs.false3246:                                ; preds = %land.lhs.true3238
  %1582 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7869
  %1583 = load i32, i32* %i, align 4, !dbg !7869
  %idxprom3247 = sext i32 %1583 to i64, !dbg !7869
  %arrayidx3248 = getelementptr inbounds %struct.set, %struct.set* %1582, i64 %idxprom3247, !dbg !7869
  %src3249 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3248, i32 0, i32 1, !dbg !7869
  %1584 = load %struct.rtx_def*, %struct.rtx_def** %src3249, align 8, !dbg !7869
  %1585 = bitcast %struct.rtx_def* %1584 to i32*, !dbg !7869
  %bf.load3250 = load i32, i32* %1585, align 8, !dbg !7869
  %bf.clear3251 = and i32 %bf.load3250, 65535, !dbg !7869
  %cmp3252 = icmp eq i32 %bf.clear3251, 99, !dbg !7870
  br i1 %cmp3252, label %if.then3254, label %if.end3255, !dbg !7871

if.then3254:                                      ; preds = %lor.lhs.false3246, %land.lhs.true3238, %lor.lhs.false3206, %lor.lhs.false3200, %lor.lhs.false3191, %lor.lhs.false3182, %lor.lhs.false3173, %land.lhs.true3164
  br label %for.inc3569, !dbg !7872

if.end3255:                                       ; preds = %lor.lhs.false3246, %land.lhs.true3217, %lor.lhs.false3212
  %1586 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7873
  %1587 = bitcast %struct.rtx_def* %1586 to i32*, !dbg !7873
  %bf.load3256 = load i32, i32* %1587, align 8, !dbg !7873
  %bf.clear3257 = and i32 %bf.load3256, 65535, !dbg !7873
  %cmp3258 = icmp eq i32 %bf.clear3257, 40, !dbg !7875
  br i1 %cmp3258, label %if.then3260, label %if.end3269, !dbg !7876

if.then3260:                                      ; preds = %if.end3255
  %1588 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7877
  %u3261 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1588, i32 0, i32 1, !dbg !7877
  %fld3262 = bitcast %union.u* %u3261 to [1 x %union.rtunion_def]*, !dbg !7877
  %arrayidx3263 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3262, i64 0, i64 0, !dbg !7877
  %rt_rtx3264 = bitcast %union.rtunion_def* %arrayidx3263 to %struct.rtx_def**, !dbg !7877
  %1589 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3264, align 8, !dbg !7877
  %u3265 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1589, i32 0, i32 1, !dbg !7877
  %fld3266 = bitcast %union.u* %u3265 to [1 x %union.rtunion_def]*, !dbg !7877
  %arrayidx3267 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3266, i64 0, i64 0, !dbg !7877
  %rt_rtx3268 = bitcast %union.rtunion_def* %arrayidx3267 to %struct.rtx_def**, !dbg !7877
  %1590 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3268, align 8, !dbg !7877
  store %struct.rtx_def* %1590, %struct.rtx_def** %dest3149, align 8, !dbg !7878
  br label %if.end3269, !dbg !7879

if.end3269:                                       ; preds = %if.then3260, %if.end3255
  %1591 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7880
  %1592 = bitcast %struct.rtx_def* %1591 to i32*, !dbg !7880
  %bf.load3270 = load i32, i32* %1592, align 8, !dbg !7880
  %bf.clear3271 = and i32 %bf.load3270, 65535, !dbg !7880
  %cmp3272 = icmp eq i32 %bf.clear3271, 37, !dbg !7880
  br i1 %cmp3272, label %if.then3279, label %lor.lhs.false3274, !dbg !7882

lor.lhs.false3274:                                ; preds = %if.end3269
  %1593 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7883
  %1594 = bitcast %struct.rtx_def* %1593 to i32*, !dbg !7883
  %bf.load3275 = load i32, i32* %1594, align 8, !dbg !7883
  %bf.clear3276 = and i32 %bf.load3275, 65535, !dbg !7883
  %cmp3277 = icmp eq i32 %bf.clear3276, 39, !dbg !7884
  br i1 %cmp3277, label %if.then3279, label %if.end3311, !dbg !7885

if.then3279:                                      ; preds = %lor.lhs.false3274, %if.end3269
  %1595 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7886
  %1596 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7888
  %1597 = load i32, i32* %i, align 4, !dbg !7889
  %idxprom3280 = sext i32 %1597 to i64, !dbg !7888
  %arrayidx3281 = getelementptr inbounds %struct.set, %struct.set* %1596, i64 %idxprom3280, !dbg !7888
  %src_elt3282 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3281, i32 0, i32 2, !dbg !7890
  %1598 = load %struct.table_elt*, %struct.table_elt** %src_elt3282, align 8, !dbg !7890
  %call3283 = call i32 @insert_regs(%struct.rtx_def* %1595, %struct.table_elt* %1598, i32 1), !dbg !7891
  %tobool3284 = icmp ne i32 %call3283, 0, !dbg !7891
  br i1 %tobool3284, label %if.then3285, label %if.end3310, !dbg !7892

if.then3285:                                      ; preds = %if.then3279
  %1599 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7893
  call void @rehash_using_reg(%struct.rtx_def* %1599), !dbg !7895
  %1600 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7896
  %1601 = bitcast %struct.rtx_def* %1600 to i32*, !dbg !7896
  %bf.load3286 = load i32, i32* %1601, align 8, !dbg !7896
  %bf.clear3287 = and i32 %bf.load3286, 65535, !dbg !7896
  %cmp3288 = icmp eq i32 %bf.clear3287, 37, !dbg !7896
  br i1 %cmp3288, label %land.lhs.true3290, label %cond.false3299, !dbg !7896

land.lhs.true3290:                                ; preds = %if.then3285
  %1602 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7896
  %call3291 = call i32 @rhs_regno(%struct.rtx_def* %1602), !dbg !7896
  %cmp3292 = icmp uge i32 %call3291, 53, !dbg !7896
  br i1 %cmp3292, label %cond.true3294, label %cond.false3299, !dbg !7896

cond.true3294:                                    ; preds = %land.lhs.true3290
  %1603 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7896
  %call3295 = call i32 @rhs_regno(%struct.rtx_def* %1603), !dbg !7896
  %call3296 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call3295), !dbg !7896
  %reg_qty3297 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call3296, i32 0, i32 1, !dbg !7896
  %1604 = load i32, i32* %reg_qty3297, align 4, !dbg !7896
  %add3298 = add i32 4736, %1604, !dbg !7896
  br label %cond.end3304, !dbg !7896

cond.false3299:                                   ; preds = %land.lhs.true3290, %if.then3285
  %1605 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7896
  %1606 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7896
  %1607 = bitcast %struct.rtx_def* %1606 to i32*, !dbg !7896
  %bf.load3300 = load i32, i32* %1607, align 8, !dbg !7896
  %bf.lshr3301 = lshr i32 %bf.load3300, 16, !dbg !7896
  %bf.clear3302 = and i32 %bf.lshr3301, 255, !dbg !7896
  %call3303 = call i32 @canon_hash(%struct.rtx_def* %1605, i32 %bf.clear3302), !dbg !7896
  br label %cond.end3304, !dbg !7896

cond.end3304:                                     ; preds = %cond.false3299, %cond.true3294
  %cond3305 = phi i32 [ %add3298, %cond.true3294 ], [ %call3303, %cond.false3299 ], !dbg !7896
  %and3306 = and i32 %cond3305, 31, !dbg !7896
  %1608 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7897
  %1609 = load i32, i32* %i, align 4, !dbg !7898
  %idxprom3307 = sext i32 %1609 to i64, !dbg !7897
  %arrayidx3308 = getelementptr inbounds %struct.set, %struct.set* %1608, i64 %idxprom3307, !dbg !7897
  %dest_hash3309 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3308, i32 0, i32 4, !dbg !7899
  store i32 %and3306, i32* %dest_hash3309, align 4, !dbg !7900
  br label %if.end3310, !dbg !7901

if.end3310:                                       ; preds = %cond.end3304, %if.then3279
  br label %if.end3311, !dbg !7902

if.end3311:                                       ; preds = %if.end3310, %lor.lhs.false3274
  %1610 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7903
  %1611 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7904
  %1612 = load i32, i32* %i, align 4, !dbg !7905
  %idxprom3312 = sext i32 %1612 to i64, !dbg !7904
  %arrayidx3313 = getelementptr inbounds %struct.set, %struct.set* %1611, i64 %idxprom3312, !dbg !7904
  %src_elt3314 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3313, i32 0, i32 2, !dbg !7906
  %1613 = load %struct.table_elt*, %struct.table_elt** %src_elt3314, align 8, !dbg !7906
  %1614 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7907
  %1615 = load i32, i32* %i, align 4, !dbg !7908
  %idxprom3315 = sext i32 %1615 to i64, !dbg !7907
  %arrayidx3316 = getelementptr inbounds %struct.set, %struct.set* %1614, i64 %idxprom3315, !dbg !7907
  %dest_hash3317 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3316, i32 0, i32 4, !dbg !7909
  %1616 = load i32, i32* %dest_hash3317, align 4, !dbg !7909
  %1617 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7910
  %1618 = bitcast %struct.rtx_def* %1617 to i32*, !dbg !7910
  %bf.load3318 = load i32, i32* %1618, align 8, !dbg !7910
  %bf.lshr3319 = lshr i32 %bf.load3318, 16, !dbg !7910
  %bf.clear3320 = and i32 %bf.lshr3319, 255, !dbg !7910
  %call3321 = call %struct.table_elt* @insert(%struct.rtx_def* %1610, %struct.table_elt* %1613, i32 %1616, i32 %bf.clear3320), !dbg !7911
  store %struct.table_elt* %call3321, %struct.table_elt** %elt3157, align 8, !dbg !7912
  %1619 = load i64, i64* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 87), align 8, !dbg !7913
  %tobool3322 = icmp ne i64 %1619, 0, !dbg !7915
  br i1 %tobool3322, label %land.lhs.true3323, label %if.end3363, !dbg !7916

land.lhs.true3323:                                ; preds = %if.end3311
  %1620 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7917
  %1621 = bitcast %struct.rtx_def* %1620 to i32*, !dbg !7917
  %bf.load3324 = load i32, i32* %1621, align 8, !dbg !7917
  %bf.clear3325 = and i32 %bf.load3324, 65535, !dbg !7917
  %cmp3326 = icmp eq i32 %bf.clear3325, 37, !dbg !7917
  br i1 %cmp3326, label %land.lhs.true3328, label %if.end3363, !dbg !7918

land.lhs.true3328:                                ; preds = %land.lhs.true3323
  %1622 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7919
  %1623 = bitcast %struct.rtx_def* %1622 to i32*, !dbg !7919
  %bf.load3329 = load i32, i32* %1623, align 8, !dbg !7919
  %bf.lshr3330 = lshr i32 %bf.load3329, 16, !dbg !7919
  %bf.clear3331 = and i32 %bf.lshr3330, 255, !dbg !7919
  %idxprom3332 = zext i32 %bf.clear3331 to i64, !dbg !7919
  %arrayidx3333 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom3332, !dbg !7919
  %1624 = load i8, i8* %arrayidx3333, align 1, !dbg !7919
  %conv3334 = zext i8 %1624 to i32, !dbg !7919
  %cmp3335 = icmp eq i32 %conv3334, 2, !dbg !7919
  br i1 %cmp3335, label %land.lhs.true3346, label %lor.lhs.false3337, !dbg !7919

lor.lhs.false3337:                                ; preds = %land.lhs.true3328
  %1625 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7919
  %1626 = bitcast %struct.rtx_def* %1625 to i32*, !dbg !7919
  %bf.load3338 = load i32, i32* %1626, align 8, !dbg !7919
  %bf.lshr3339 = lshr i32 %bf.load3338, 16, !dbg !7919
  %bf.clear3340 = and i32 %bf.lshr3339, 255, !dbg !7919
  %idxprom3341 = zext i32 %bf.clear3340 to i64, !dbg !7919
  %arrayidx3342 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom3341, !dbg !7919
  %1627 = load i8, i8* %arrayidx3342, align 1, !dbg !7919
  %conv3343 = zext i8 %1627 to i32, !dbg !7919
  %cmp3344 = icmp eq i32 %conv3343, 3, !dbg !7919
  br i1 %cmp3344, label %land.lhs.true3346, label %if.end3363, !dbg !7920

land.lhs.true3346:                                ; preds = %lor.lhs.false3337, %land.lhs.true3328
  %1628 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7921
  %1629 = load i32, i32* %i, align 4, !dbg !7921
  %idxprom3347 = sext i32 %1629 to i64, !dbg !7921
  %arrayidx3348 = getelementptr inbounds %struct.set, %struct.set* %1628, i64 %idxprom3347, !dbg !7921
  %src_elt3349 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3348, i32 0, i32 2, !dbg !7921
  %1630 = load %struct.table_elt*, %struct.table_elt** %src_elt3349, align 8, !dbg !7921
  %exp3350 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1630, i32 0, i32 0, !dbg !7921
  %1631 = load %struct.rtx_def*, %struct.rtx_def** %exp3350, align 8, !dbg !7921
  %1632 = bitcast %struct.rtx_def* %1631 to i32*, !dbg !7921
  %bf.load3351 = load i32, i32* %1632, align 8, !dbg !7921
  %bf.clear3352 = and i32 %bf.load3351, 65535, !dbg !7921
  %cmp3353 = icmp eq i32 %bf.clear3352, 30, !dbg !7922
  br i1 %cmp3353, label %if.then3355, label %if.end3363, !dbg !7923

if.then3355:                                      ; preds = %land.lhs.true3346
  %1633 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7924
  %1634 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7925
  %1635 = load i32, i32* %i, align 4, !dbg !7926
  %idxprom3356 = sext i32 %1635 to i64, !dbg !7925
  %arrayidx3357 = getelementptr inbounds %struct.set, %struct.set* %1634, i64 %idxprom3356, !dbg !7925
  %src_elt3358 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3357, i32 0, i32 2, !dbg !7927
  %1636 = load %struct.table_elt*, %struct.table_elt** %src_elt3358, align 8, !dbg !7927
  %exp3359 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1636, i32 0, i32 0, !dbg !7928
  %1637 = load %struct.rtx_def*, %struct.rtx_def** %exp3359, align 8, !dbg !7928
  %1638 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7929
  %1639 = bitcast %struct.rtx_def* %1638 to i32*, !dbg !7929
  %bf.load3360 = load i32, i32* %1639, align 8, !dbg !7929
  %bf.lshr3361 = lshr i32 %bf.load3360, 16, !dbg !7929
  %bf.clear3362 = and i32 %bf.lshr3361, 255, !dbg !7929
  call void @insert_const_anchors(%struct.rtx_def* %1633, %struct.rtx_def* %1637, i32 %bf.clear3362), !dbg !7930
  br label %if.end3363, !dbg !7930

if.end3363:                                       ; preds = %if.then3355, %land.lhs.true3346, %lor.lhs.false3337, %land.lhs.true3323, %if.end3311
  %1640 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7931
  %1641 = load i32, i32* %i, align 4, !dbg !7931
  %idxprom3364 = sext i32 %1641 to i64, !dbg !7931
  %arrayidx3365 = getelementptr inbounds %struct.set, %struct.set* %1640, i64 %idxprom3364, !dbg !7931
  %inner_dest3366 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3365, i32 0, i32 5, !dbg !7931
  %1642 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest3366, align 8, !dbg !7931
  %1643 = bitcast %struct.rtx_def* %1642 to i32*, !dbg !7931
  %bf.load3367 = load i32, i32* %1643, align 8, !dbg !7931
  %bf.clear3368 = and i32 %bf.load3367, 65535, !dbg !7931
  %cmp3369 = icmp eq i32 %bf.clear3368, 43, !dbg !7931
  br i1 %cmp3369, label %land.rhs3371, label %land.end3380, !dbg !7932

land.rhs3371:                                     ; preds = %if.end3363
  %1644 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7933
  %1645 = load i32, i32* %i, align 4, !dbg !7933
  %idxprom3372 = sext i32 %1645 to i64, !dbg !7933
  %arrayidx3373 = getelementptr inbounds %struct.set, %struct.set* %1644, i64 %idxprom3372, !dbg !7933
  %inner_dest3374 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3373, i32 0, i32 5, !dbg !7933
  %1646 = load %struct.rtx_def*, %struct.rtx_def** %inner_dest3374, align 8, !dbg !7933
  %1647 = bitcast %struct.rtx_def* %1646 to i32*, !dbg !7933
  %bf.load3375 = load i32, i32* %1647, align 8, !dbg !7933
  %bf.lshr3376 = lshr i32 %bf.load3375, 26, !dbg !7933
  %bf.clear3377 = and i32 %bf.lshr3376, 1, !dbg !7933
  %tobool3378 = icmp ne i32 %bf.clear3377, 0, !dbg !7934
  %lnot3379 = xor i1 %tobool3378, true, !dbg !7934
  br label %land.end3380

land.end3380:                                     ; preds = %land.rhs3371, %if.end3363
  %1648 = phi i1 [ false, %if.end3363 ], [ %lnot3379, %land.rhs3371 ], !dbg !7935
  %land.ext = zext i1 %1648 to i32, !dbg !7932
  %conv3381 = trunc i32 %land.ext to i8, !dbg !7936
  %1649 = load %struct.table_elt*, %struct.table_elt** %elt3157, align 8, !dbg !7937
  %in_memory3382 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1649, i32 0, i32 11, !dbg !7938
  store i8 %conv3381, i8* %in_memory3382, align 1, !dbg !7939
  %1650 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7940
  %1651 = bitcast %struct.rtx_def* %1650 to i32*, !dbg !7940
  %bf.load3383 = load i32, i32* %1651, align 8, !dbg !7940
  %bf.clear3384 = and i32 %bf.load3383, 65535, !dbg !7940
  %cmp3385 = icmp eq i32 %bf.clear3384, 39, !dbg !7942
  br i1 %cmp3385, label %land.lhs.true3387, label %if.end3567, !dbg !7943

land.lhs.true3387:                                ; preds = %land.end3380
  %1652 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7944
  %u3388 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1652, i32 0, i32 1, !dbg !7944
  %fld3389 = bitcast %union.u* %u3388 to [1 x %union.rtunion_def]*, !dbg !7944
  %arrayidx3390 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3389, i64 0, i64 0, !dbg !7944
  %rt_rtx3391 = bitcast %union.rtunion_def* %arrayidx3390 to %struct.rtx_def**, !dbg !7944
  %1653 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3391, align 8, !dbg !7944
  %1654 = bitcast %struct.rtx_def* %1653 to i32*, !dbg !7944
  %bf.load3392 = load i32, i32* %1654, align 8, !dbg !7944
  %bf.lshr3393 = lshr i32 %bf.load3392, 16, !dbg !7944
  %bf.clear3394 = and i32 %bf.lshr3393, 255, !dbg !7944
  %idxprom3395 = zext i32 %bf.clear3394 to i64, !dbg !7944
  %arrayidx3396 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom3395, !dbg !7944
  %1655 = load i8, i8* %arrayidx3396, align 1, !dbg !7944
  %conv3397 = zext i8 %1655 to i16, !dbg !7944
  %conv3398 = zext i16 %conv3397 to i32, !dbg !7944
  %sub3399 = sub nsw i32 %conv3398, 1, !dbg !7945
  %div = sdiv i32 %sub3399, 4, !dbg !7946
  %1656 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7947
  %1657 = bitcast %struct.rtx_def* %1656 to i32*, !dbg !7947
  %bf.load3400 = load i32, i32* %1657, align 8, !dbg !7947
  %bf.lshr3401 = lshr i32 %bf.load3400, 16, !dbg !7947
  %bf.clear3402 = and i32 %bf.lshr3401, 255, !dbg !7947
  %idxprom3403 = zext i32 %bf.clear3402 to i64, !dbg !7947
  %arrayidx3404 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom3403, !dbg !7947
  %1658 = load i8, i8* %arrayidx3404, align 1, !dbg !7947
  %conv3405 = zext i8 %1658 to i16, !dbg !7947
  %conv3406 = zext i16 %conv3405 to i32, !dbg !7947
  %sub3407 = sub nsw i32 %conv3406, 1, !dbg !7948
  %div3408 = sdiv i32 %sub3407, 4, !dbg !7949
  %cmp3409 = icmp eq i32 %div, %div3408, !dbg !7950
  br i1 %cmp3409, label %land.lhs.true3411, label %if.end3567, !dbg !7951

land.lhs.true3411:                                ; preds = %land.lhs.true3387
  %1659 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7952
  %1660 = bitcast %struct.rtx_def* %1659 to i32*, !dbg !7952
  %bf.load3412 = load i32, i32* %1660, align 8, !dbg !7952
  %bf.lshr3413 = lshr i32 %bf.load3412, 16, !dbg !7952
  %bf.clear3414 = and i32 %bf.lshr3413, 255, !dbg !7952
  %idxprom3415 = zext i32 %bf.clear3414 to i64, !dbg !7952
  %arrayidx3416 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom3415, !dbg !7952
  %1661 = load i8, i8* %arrayidx3416, align 1, !dbg !7952
  %conv3417 = zext i8 %1661 to i16, !dbg !7952
  %conv3418 = zext i16 %conv3417 to i32, !dbg !7952
  %1662 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7953
  %u3419 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1662, i32 0, i32 1, !dbg !7953
  %fld3420 = bitcast %union.u* %u3419 to [1 x %union.rtunion_def]*, !dbg !7953
  %arrayidx3421 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3420, i64 0, i64 0, !dbg !7953
  %rt_rtx3422 = bitcast %union.rtunion_def* %arrayidx3421 to %struct.rtx_def**, !dbg !7953
  %1663 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3422, align 8, !dbg !7953
  %1664 = bitcast %struct.rtx_def* %1663 to i32*, !dbg !7953
  %bf.load3423 = load i32, i32* %1664, align 8, !dbg !7953
  %bf.lshr3424 = lshr i32 %bf.load3423, 16, !dbg !7953
  %bf.clear3425 = and i32 %bf.lshr3424, 255, !dbg !7953
  %idxprom3426 = zext i32 %bf.clear3425 to i64, !dbg !7953
  %arrayidx3427 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom3426, !dbg !7953
  %1665 = load i8, i8* %arrayidx3427, align 1, !dbg !7953
  %conv3428 = zext i8 %1665 to i16, !dbg !7953
  %conv3429 = zext i16 %conv3428 to i32, !dbg !7953
  %cmp3430 = icmp sge i32 %conv3418, %conv3429, !dbg !7954
  br i1 %cmp3430, label %land.lhs.true3432, label %if.end3567, !dbg !7955

land.lhs.true3432:                                ; preds = %land.lhs.true3411
  %1666 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7956
  %1667 = load i32, i32* %i, align 4, !dbg !7957
  %idxprom3433 = sext i32 %1667 to i64, !dbg !7956
  %arrayidx3434 = getelementptr inbounds %struct.set, %struct.set* %1666, i64 %idxprom3433, !dbg !7956
  %src_elt3435 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3434, i32 0, i32 2, !dbg !7958
  %1668 = load %struct.table_elt*, %struct.table_elt** %src_elt3435, align 8, !dbg !7958
  %cmp3436 = icmp ne %struct.table_elt* %1668, null, !dbg !7959
  br i1 %cmp3436, label %if.then3438, label %if.end3567, !dbg !7960

if.then3438:                                      ; preds = %land.lhs.true3432
  call void @llvm.dbg.declare(metadata i32* %new_mode, metadata !7961, metadata !DIExpression()), !dbg !7963
  %1669 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !7964
  %u3439 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1669, i32 0, i32 1, !dbg !7964
  %fld3440 = bitcast %union.u* %u3439 to [1 x %union.rtunion_def]*, !dbg !7964
  %arrayidx3441 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3440, i64 0, i64 0, !dbg !7964
  %rt_rtx3442 = bitcast %union.rtunion_def* %arrayidx3441 to %struct.rtx_def**, !dbg !7964
  %1670 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3442, align 8, !dbg !7964
  %1671 = bitcast %struct.rtx_def* %1670 to i32*, !dbg !7964
  %bf.load3443 = load i32, i32* %1671, align 8, !dbg !7964
  %bf.lshr3444 = lshr i32 %bf.load3443, 16, !dbg !7964
  %bf.clear3445 = and i32 %bf.lshr3444, 255, !dbg !7964
  store i32 %bf.clear3445, i32* %new_mode, align 4, !dbg !7963
  call void @llvm.dbg.declare(metadata %struct.table_elt** %elt3446, metadata !7965, metadata !DIExpression()), !dbg !7966
  call void @llvm.dbg.declare(metadata %struct.table_elt** %classp3447, metadata !7967, metadata !DIExpression()), !dbg !7968
  store %struct.table_elt* null, %struct.table_elt** %classp3447, align 8, !dbg !7968
  %1672 = load %struct.set*, %struct.set** %sets, align 8, !dbg !7969
  %1673 = load i32, i32* %i, align 4, !dbg !7971
  %idxprom3448 = sext i32 %1673 to i64, !dbg !7969
  %arrayidx3449 = getelementptr inbounds %struct.set, %struct.set* %1672, i64 %idxprom3448, !dbg !7969
  %src_elt3450 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3449, i32 0, i32 2, !dbg !7972
  %1674 = load %struct.table_elt*, %struct.table_elt** %src_elt3450, align 8, !dbg !7972
  %first_same_value3451 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1674, i32 0, i32 6, !dbg !7973
  %1675 = load %struct.table_elt*, %struct.table_elt** %first_same_value3451, align 8, !dbg !7973
  store %struct.table_elt* %1675, %struct.table_elt** %elt3446, align 8, !dbg !7974
  br label %for.cond3452, !dbg !7975

for.cond3452:                                     ; preds = %for.inc3564, %if.then3438
  %1676 = load %struct.table_elt*, %struct.table_elt** %elt3446, align 8, !dbg !7976
  %tobool3453 = icmp ne %struct.table_elt* %1676, null, !dbg !7978
  br i1 %tobool3453, label %for.body3454, label %for.end3566, !dbg !7978

for.body3454:                                     ; preds = %for.cond3452
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_src3455, metadata !7979, metadata !DIExpression()), !dbg !7981
  store %struct.rtx_def* null, %struct.rtx_def** %new_src3455, align 8, !dbg !7981
  call void @llvm.dbg.declare(metadata i32* %src_hash3456, metadata !7982, metadata !DIExpression()), !dbg !7983
  call void @llvm.dbg.declare(metadata %struct.table_elt** %src_elt3457, metadata !7984, metadata !DIExpression()), !dbg !7985
  call void @llvm.dbg.declare(metadata i32* %byte, metadata !7986, metadata !DIExpression()), !dbg !7987
  store i32 0, i32* %byte, align 4, !dbg !7987
  %1677 = load %struct.table_elt*, %struct.table_elt** %elt3446, align 8, !dbg !7988
  %exp3458 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1677, i32 0, i32 0, !dbg !7988
  %1678 = load %struct.rtx_def*, %struct.rtx_def** %exp3458, align 8, !dbg !7988
  %1679 = bitcast %struct.rtx_def* %1678 to i32*, !dbg !7988
  %bf.load3459 = load i32, i32* %1679, align 8, !dbg !7988
  %bf.clear3460 = and i32 %bf.load3459, 65535, !dbg !7988
  %cmp3461 = icmp eq i32 %bf.clear3460, 37, !dbg !7988
  br i1 %cmp3461, label %if.end3469, label %land.lhs.true3463, !dbg !7990

land.lhs.true3463:                                ; preds = %for.body3454
  %1680 = load %struct.table_elt*, %struct.table_elt** %elt3446, align 8, !dbg !7991
  %exp3464 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1680, i32 0, i32 0, !dbg !7992
  %1681 = load %struct.rtx_def*, %struct.rtx_def** %exp3464, align 8, !dbg !7992
  %1682 = load %struct.table_elt*, %struct.table_elt** %elt3446, align 8, !dbg !7993
  %exp3465 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1682, i32 0, i32 0, !dbg !7994
  %1683 = load %struct.rtx_def*, %struct.rtx_def** %exp3465, align 8, !dbg !7994
  %call3466 = call i32 @exp_equiv_p(%struct.rtx_def* %1681, %struct.rtx_def* %1683, i32 1, i8 zeroext 0), !dbg !7995
  %tobool3467 = icmp ne i32 %call3466, 0, !dbg !7995
  br i1 %tobool3467, label %if.end3469, label %if.then3468, !dbg !7996

if.then3468:                                      ; preds = %land.lhs.true3463
  br label %for.inc3564, !dbg !7997

if.end3469:                                       ; preds = %land.lhs.true3463, %for.body3454
  %1684 = load %struct.table_elt*, %struct.table_elt** %elt3446, align 8, !dbg !7998
  %exp3470 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1684, i32 0, i32 0, !dbg !7998
  %1685 = load %struct.rtx_def*, %struct.rtx_def** %exp3470, align 8, !dbg !7998
  %1686 = bitcast %struct.rtx_def* %1685 to i32*, !dbg !7998
  %bf.load3471 = load i32, i32* %1686, align 8, !dbg !7998
  %bf.lshr3472 = lshr i32 %bf.load3471, 16, !dbg !7998
  %bf.clear3473 = and i32 %bf.lshr3472, 255, !dbg !7998
  %1687 = load i32, i32* %new_mode, align 4, !dbg !8000
  %cmp3474 = icmp eq i32 %bf.clear3473, %1687, !dbg !8001
  br i1 %cmp3474, label %if.then3476, label %if.else3478, !dbg !8002

if.then3476:                                      ; preds = %if.end3469
  %1688 = load %struct.table_elt*, %struct.table_elt** %elt3446, align 8, !dbg !8003
  %exp3477 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1688, i32 0, i32 0, !dbg !8004
  %1689 = load %struct.rtx_def*, %struct.rtx_def** %exp3477, align 8, !dbg !8004
  store %struct.rtx_def* %1689, %struct.rtx_def** %new_src3455, align 8, !dbg !8005
  br label %if.end3484, !dbg !8006

if.else3478:                                      ; preds = %if.end3469
  %1690 = load i32, i32* %new_mode, align 4, !dbg !8007
  %1691 = load %struct.table_elt*, %struct.table_elt** %elt3446, align 8, !dbg !8009
  %exp3479 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1691, i32 0, i32 0, !dbg !8010
  %1692 = load %struct.rtx_def*, %struct.rtx_def** %exp3479, align 8, !dbg !8010
  %1693 = load %struct.rtx_def*, %struct.rtx_def** %dest3149, align 8, !dbg !8011
  %1694 = bitcast %struct.rtx_def* %1693 to i32*, !dbg !8011
  %bf.load3480 = load i32, i32* %1694, align 8, !dbg !8011
  %bf.lshr3481 = lshr i32 %bf.load3480, 16, !dbg !8011
  %bf.clear3482 = and i32 %bf.lshr3481, 255, !dbg !8011
  %1695 = load i32, i32* %byte, align 4, !dbg !8012
  %call3483 = call %struct.rtx_def* @simplify_gen_subreg(i32 %1690, %struct.rtx_def* %1692, i32 %bf.clear3482, i32 %1695), !dbg !8013
  store %struct.rtx_def* %call3483, %struct.rtx_def** %new_src3455, align 8, !dbg !8014
  br label %if.end3484

if.end3484:                                       ; preds = %if.else3478, %if.then3476
  %1696 = load %struct.rtx_def*, %struct.rtx_def** %new_src3455, align 8, !dbg !8015
  %tobool3485 = icmp ne %struct.rtx_def* %1696, null, !dbg !8015
  br i1 %tobool3485, label %if.end3487, label %if.then3486, !dbg !8017

if.then3486:                                      ; preds = %if.end3484
  br label %for.inc3564, !dbg !8018

if.end3487:                                       ; preds = %if.end3484
  %1697 = load %struct.rtx_def*, %struct.rtx_def** %new_src3455, align 8, !dbg !8019
  %1698 = bitcast %struct.rtx_def* %1697 to i32*, !dbg !8019
  %bf.load3488 = load i32, i32* %1698, align 8, !dbg !8019
  %bf.clear3489 = and i32 %bf.load3488, 65535, !dbg !8019
  %cmp3490 = icmp eq i32 %bf.clear3489, 37, !dbg !8019
  br i1 %cmp3490, label %land.lhs.true3492, label %cond.false3501, !dbg !8019

land.lhs.true3492:                                ; preds = %if.end3487
  %1699 = load %struct.rtx_def*, %struct.rtx_def** %new_src3455, align 8, !dbg !8019
  %call3493 = call i32 @rhs_regno(%struct.rtx_def* %1699), !dbg !8019
  %cmp3494 = icmp uge i32 %call3493, 53, !dbg !8019
  br i1 %cmp3494, label %cond.true3496, label %cond.false3501, !dbg !8019

cond.true3496:                                    ; preds = %land.lhs.true3492
  %1700 = load %struct.rtx_def*, %struct.rtx_def** %new_src3455, align 8, !dbg !8019
  %call3497 = call i32 @rhs_regno(%struct.rtx_def* %1700), !dbg !8019
  %call3498 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call3497), !dbg !8019
  %reg_qty3499 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call3498, i32 0, i32 1, !dbg !8019
  %1701 = load i32, i32* %reg_qty3499, align 4, !dbg !8019
  %add3500 = add i32 4736, %1701, !dbg !8019
  br label %cond.end3503, !dbg !8019

cond.false3501:                                   ; preds = %land.lhs.true3492, %if.end3487
  %1702 = load %struct.rtx_def*, %struct.rtx_def** %new_src3455, align 8, !dbg !8019
  %1703 = load i32, i32* %new_mode, align 4, !dbg !8019
  %call3502 = call i32 @canon_hash(%struct.rtx_def* %1702, i32 %1703), !dbg !8019
  br label %cond.end3503, !dbg !8019

cond.end3503:                                     ; preds = %cond.false3501, %cond.true3496
  %cond3504 = phi i32 [ %add3500, %cond.true3496 ], [ %call3502, %cond.false3501 ], !dbg !8019
  %and3505 = and i32 %cond3504, 31, !dbg !8019
  store i32 %and3505, i32* %src_hash3456, align 4, !dbg !8020
  %1704 = load %struct.rtx_def*, %struct.rtx_def** %new_src3455, align 8, !dbg !8021
  %1705 = load i32, i32* %src_hash3456, align 4, !dbg !8022
  %1706 = load i32, i32* %new_mode, align 4, !dbg !8023
  %call3506 = call %struct.table_elt* @lookup(%struct.rtx_def* %1704, i32 %1705, i32 %1706), !dbg !8024
  store %struct.table_elt* %call3506, %struct.table_elt** %src_elt3457, align 8, !dbg !8025
  %1707 = load %struct.table_elt*, %struct.table_elt** %src_elt3457, align 8, !dbg !8026
  %cmp3507 = icmp eq %struct.table_elt* %1707, null, !dbg !8028
  br i1 %cmp3507, label %if.then3509, label %if.else3535, !dbg !8029

if.then3509:                                      ; preds = %cond.end3503
  %1708 = load %struct.rtx_def*, %struct.rtx_def** %new_src3455, align 8, !dbg !8030
  %1709 = load %struct.table_elt*, %struct.table_elt** %classp3447, align 8, !dbg !8033
  %call3510 = call i32 @insert_regs(%struct.rtx_def* %1708, %struct.table_elt* %1709, i32 0), !dbg !8034
  %tobool3511 = icmp ne i32 %call3510, 0, !dbg !8034
  br i1 %tobool3511, label %if.then3512, label %if.end3531, !dbg !8035

if.then3512:                                      ; preds = %if.then3509
  %1710 = load %struct.rtx_def*, %struct.rtx_def** %new_src3455, align 8, !dbg !8036
  call void @rehash_using_reg(%struct.rtx_def* %1710), !dbg !8038
  %1711 = load %struct.rtx_def*, %struct.rtx_def** %new_src3455, align 8, !dbg !8039
  %1712 = bitcast %struct.rtx_def* %1711 to i32*, !dbg !8039
  %bf.load3513 = load i32, i32* %1712, align 8, !dbg !8039
  %bf.clear3514 = and i32 %bf.load3513, 65535, !dbg !8039
  %cmp3515 = icmp eq i32 %bf.clear3514, 37, !dbg !8039
  br i1 %cmp3515, label %land.lhs.true3517, label %cond.false3526, !dbg !8039

land.lhs.true3517:                                ; preds = %if.then3512
  %1713 = load %struct.rtx_def*, %struct.rtx_def** %new_src3455, align 8, !dbg !8039
  %call3518 = call i32 @rhs_regno(%struct.rtx_def* %1713), !dbg !8039
  %cmp3519 = icmp uge i32 %call3518, 53, !dbg !8039
  br i1 %cmp3519, label %cond.true3521, label %cond.false3526, !dbg !8039

cond.true3521:                                    ; preds = %land.lhs.true3517
  %1714 = load %struct.rtx_def*, %struct.rtx_def** %new_src3455, align 8, !dbg !8039
  %call3522 = call i32 @rhs_regno(%struct.rtx_def* %1714), !dbg !8039
  %call3523 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call3522), !dbg !8039
  %reg_qty3524 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call3523, i32 0, i32 1, !dbg !8039
  %1715 = load i32, i32* %reg_qty3524, align 4, !dbg !8039
  %add3525 = add i32 4736, %1715, !dbg !8039
  br label %cond.end3528, !dbg !8039

cond.false3526:                                   ; preds = %land.lhs.true3517, %if.then3512
  %1716 = load %struct.rtx_def*, %struct.rtx_def** %new_src3455, align 8, !dbg !8039
  %1717 = load i32, i32* %new_mode, align 4, !dbg !8039
  %call3527 = call i32 @canon_hash(%struct.rtx_def* %1716, i32 %1717), !dbg !8039
  br label %cond.end3528, !dbg !8039

cond.end3528:                                     ; preds = %cond.false3526, %cond.true3521
  %cond3529 = phi i32 [ %add3525, %cond.true3521 ], [ %call3527, %cond.false3526 ], !dbg !8039
  %and3530 = and i32 %cond3529, 31, !dbg !8039
  store i32 %and3530, i32* %src_hash3456, align 4, !dbg !8040
  br label %if.end3531, !dbg !8041

if.end3531:                                       ; preds = %cond.end3528, %if.then3509
  %1718 = load %struct.rtx_def*, %struct.rtx_def** %new_src3455, align 8, !dbg !8042
  %1719 = load %struct.table_elt*, %struct.table_elt** %classp3447, align 8, !dbg !8043
  %1720 = load i32, i32* %src_hash3456, align 4, !dbg !8044
  %1721 = load i32, i32* %new_mode, align 4, !dbg !8045
  %call3532 = call %struct.table_elt* @insert(%struct.rtx_def* %1718, %struct.table_elt* %1719, i32 %1720, i32 %1721), !dbg !8046
  store %struct.table_elt* %call3532, %struct.table_elt** %src_elt3457, align 8, !dbg !8047
  %1722 = load %struct.table_elt*, %struct.table_elt** %elt3446, align 8, !dbg !8048
  %in_memory3533 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1722, i32 0, i32 11, !dbg !8049
  %1723 = load i8, i8* %in_memory3533, align 1, !dbg !8049
  %1724 = load %struct.table_elt*, %struct.table_elt** %src_elt3457, align 8, !dbg !8050
  %in_memory3534 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1724, i32 0, i32 11, !dbg !8051
  store i8 %1723, i8* %in_memory3534, align 1, !dbg !8052
  br label %if.end3543, !dbg !8053

if.else3535:                                      ; preds = %cond.end3503
  %1725 = load %struct.table_elt*, %struct.table_elt** %classp3447, align 8, !dbg !8054
  %tobool3536 = icmp ne %struct.table_elt* %1725, null, !dbg !8054
  br i1 %tobool3536, label %land.lhs.true3537, label %if.end3542, !dbg !8056

land.lhs.true3537:                                ; preds = %if.else3535
  %1726 = load %struct.table_elt*, %struct.table_elt** %classp3447, align 8, !dbg !8057
  %1727 = load %struct.table_elt*, %struct.table_elt** %src_elt3457, align 8, !dbg !8058
  %first_same_value3538 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1727, i32 0, i32 6, !dbg !8059
  %1728 = load %struct.table_elt*, %struct.table_elt** %first_same_value3538, align 8, !dbg !8059
  %cmp3539 = icmp ne %struct.table_elt* %1726, %1728, !dbg !8060
  br i1 %cmp3539, label %if.then3541, label %if.end3542, !dbg !8061

if.then3541:                                      ; preds = %land.lhs.true3537
  %1729 = load %struct.table_elt*, %struct.table_elt** %src_elt3457, align 8, !dbg !8062
  %1730 = load %struct.table_elt*, %struct.table_elt** %classp3447, align 8, !dbg !8063
  call void @merge_equiv_classes(%struct.table_elt* %1729, %struct.table_elt* %1730), !dbg !8064
  br label %if.end3542, !dbg !8064

if.end3542:                                       ; preds = %if.then3541, %land.lhs.true3537, %if.else3535
  br label %if.end3543

if.end3543:                                       ; preds = %if.end3542, %if.end3531
  %1731 = load %struct.table_elt*, %struct.table_elt** %src_elt3457, align 8, !dbg !8065
  %first_same_value3544 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1731, i32 0, i32 6, !dbg !8066
  %1732 = load %struct.table_elt*, %struct.table_elt** %first_same_value3544, align 8, !dbg !8066
  store %struct.table_elt* %1732, %struct.table_elt** %classp3447, align 8, !dbg !8067
  br label %while.cond3545, !dbg !8068

while.cond3545:                                   ; preds = %while.body3561, %if.end3543
  %1733 = load %struct.table_elt*, %struct.table_elt** %classp3447, align 8, !dbg !8069
  %tobool3546 = icmp ne %struct.table_elt* %1733, null, !dbg !8069
  br i1 %tobool3546, label %land.lhs.true3547, label %land.end3559, !dbg !8070

land.lhs.true3547:                                ; preds = %while.cond3545
  %1734 = load %struct.table_elt*, %struct.table_elt** %classp3447, align 8, !dbg !8071
  %exp3548 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1734, i32 0, i32 0, !dbg !8071
  %1735 = load %struct.rtx_def*, %struct.rtx_def** %exp3548, align 8, !dbg !8071
  %1736 = bitcast %struct.rtx_def* %1735 to i32*, !dbg !8071
  %bf.load3549 = load i32, i32* %1736, align 8, !dbg !8071
  %bf.clear3550 = and i32 %bf.load3549, 65535, !dbg !8071
  %cmp3551 = icmp eq i32 %bf.clear3550, 37, !dbg !8071
  br i1 %cmp3551, label %land.end3559, label %land.rhs3553, !dbg !8072

land.rhs3553:                                     ; preds = %land.lhs.true3547
  %1737 = load %struct.table_elt*, %struct.table_elt** %classp3447, align 8, !dbg !8073
  %exp3554 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1737, i32 0, i32 0, !dbg !8074
  %1738 = load %struct.rtx_def*, %struct.rtx_def** %exp3554, align 8, !dbg !8074
  %1739 = load %struct.table_elt*, %struct.table_elt** %classp3447, align 8, !dbg !8075
  %exp3555 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1739, i32 0, i32 0, !dbg !8076
  %1740 = load %struct.rtx_def*, %struct.rtx_def** %exp3555, align 8, !dbg !8076
  %call3556 = call i32 @exp_equiv_p(%struct.rtx_def* %1738, %struct.rtx_def* %1740, i32 1, i8 zeroext 0), !dbg !8077
  %tobool3557 = icmp ne i32 %call3556, 0, !dbg !8078
  %lnot3558 = xor i1 %tobool3557, true, !dbg !8078
  br label %land.end3559

land.end3559:                                     ; preds = %land.rhs3553, %land.lhs.true3547, %while.cond3545
  %1741 = phi i1 [ false, %land.lhs.true3547 ], [ false, %while.cond3545 ], [ %lnot3558, %land.rhs3553 ], !dbg !8079
  br i1 %1741, label %while.body3561, label %while.end3563, !dbg !8068

while.body3561:                                   ; preds = %land.end3559
  %1742 = load %struct.table_elt*, %struct.table_elt** %classp3447, align 8, !dbg !8080
  %next_same_value3562 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1742, i32 0, i32 4, !dbg !8081
  %1743 = load %struct.table_elt*, %struct.table_elt** %next_same_value3562, align 8, !dbg !8081
  store %struct.table_elt* %1743, %struct.table_elt** %classp3447, align 8, !dbg !8082
  br label %while.cond3545, !dbg !8068, !llvm.loop !8083

while.end3563:                                    ; preds = %land.end3559
  br label %for.inc3564, !dbg !8084

for.inc3564:                                      ; preds = %while.end3563, %if.then3486, %if.then3468
  %1744 = load %struct.table_elt*, %struct.table_elt** %elt3446, align 8, !dbg !8085
  %next_same_value3565 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1744, i32 0, i32 4, !dbg !8086
  %1745 = load %struct.table_elt*, %struct.table_elt** %next_same_value3565, align 8, !dbg !8086
  store %struct.table_elt* %1745, %struct.table_elt** %elt3446, align 8, !dbg !8087
  br label %for.cond3452, !dbg !8088, !llvm.loop !8089

for.end3566:                                      ; preds = %for.cond3452
  br label %if.end3567, !dbg !8091

if.end3567:                                       ; preds = %for.end3566, %land.lhs.true3432, %land.lhs.true3411, %land.lhs.true3387, %land.end3380
  br label %if.end3568, !dbg !8092

if.end3568:                                       ; preds = %if.end3567, %for.body3143
  br label %for.inc3569, !dbg !7836

for.inc3569:                                      ; preds = %if.end3568, %if.then3254
  %1746 = load i32, i32* %i, align 4, !dbg !8093
  %inc3570 = add nsw i32 %1746, 1, !dbg !8093
  store i32 %inc3570, i32* %i, align 4, !dbg !8093
  br label %for.cond3140, !dbg !8094, !llvm.loop !8095

for.end3571:                                      ; preds = %for.cond3140
  %1747 = load i32, i32* %n_sets, align 4, !dbg !8097
  %cmp3572 = icmp eq i32 %1747, 1, !dbg !8099
  br i1 %cmp3572, label %land.lhs.true3574, label %if.end3775, !dbg !8100

land.lhs.true3574:                                ; preds = %for.end3571
  %1748 = load %struct.set*, %struct.set** %sets, align 8, !dbg !8101
  %arrayidx3575 = getelementptr inbounds %struct.set, %struct.set* %1748, i64 0, !dbg !8101
  %rtl3576 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3575, i32 0, i32 0, !dbg !8102
  %1749 = load %struct.rtx_def*, %struct.rtx_def** %rtl3576, align 8, !dbg !8102
  %tobool3577 = icmp ne %struct.rtx_def* %1749, null, !dbg !8101
  br i1 %tobool3577, label %land.lhs.true3578, label %if.end3775, !dbg !8103

land.lhs.true3578:                                ; preds = %land.lhs.true3574
  %1750 = load %struct.set*, %struct.set** %sets, align 8, !dbg !8104
  %arrayidx3579 = getelementptr inbounds %struct.set, %struct.set* %1750, i64 0, !dbg !8104
  %rtl3580 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3579, i32 0, i32 0, !dbg !8104
  %1751 = load %struct.rtx_def*, %struct.rtx_def** %rtl3580, align 8, !dbg !8104
  %u3581 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1751, i32 0, i32 1, !dbg !8104
  %fld3582 = bitcast %union.u* %u3581 to [1 x %union.rtunion_def]*, !dbg !8104
  %arrayidx3583 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3582, i64 0, i64 0, !dbg !8104
  %rt_rtx3584 = bitcast %union.rtunion_def* %arrayidx3583 to %struct.rtx_def**, !dbg !8104
  %1752 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3584, align 8, !dbg !8104
  %1753 = bitcast %struct.rtx_def* %1752 to i32*, !dbg !8104
  %bf.load3585 = load i32, i32* %1753, align 8, !dbg !8104
  %bf.clear3586 = and i32 %bf.load3585, 65535, !dbg !8104
  %cmp3587 = icmp eq i32 %bf.clear3586, 37, !dbg !8104
  br i1 %cmp3587, label %land.lhs.true3589, label %if.end3775, !dbg !8105

land.lhs.true3589:                                ; preds = %land.lhs.true3578
  %1754 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8106
  %u3590 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1754, i32 0, i32 1, !dbg !8106
  %fld3591 = bitcast %union.u* %u3590 to [1 x %union.rtunion_def]*, !dbg !8106
  %arrayidx3592 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3591, i64 0, i64 1, !dbg !8106
  %rt_rtx3593 = bitcast %union.rtunion_def* %arrayidx3592 to %struct.rtx_def**, !dbg !8106
  %1755 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3593, align 8, !dbg !8106
  %u3594 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1755, i32 0, i32 1, !dbg !8106
  %fld3595 = bitcast %union.u* %u3594 to [1 x %union.rtunion_def]*, !dbg !8106
  %arrayidx3596 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3595, i64 0, i64 2, !dbg !8106
  %rt_rtx3597 = bitcast %union.rtunion_def* %arrayidx3596 to %struct.rtx_def**, !dbg !8106
  %1756 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3597, align 8, !dbg !8106
  %1757 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8107
  %cmp3598 = icmp eq %struct.rtx_def* %1756, %1757, !dbg !8108
  br i1 %cmp3598, label %land.lhs.true3600, label %if.end3775, !dbg !8109

land.lhs.true3600:                                ; preds = %land.lhs.true3589
  %1758 = load %struct.set*, %struct.set** %sets, align 8, !dbg !8110
  %arrayidx3601 = getelementptr inbounds %struct.set, %struct.set* %1758, i64 0, !dbg !8110
  %rtl3602 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3601, i32 0, i32 0, !dbg !8110
  %1759 = load %struct.rtx_def*, %struct.rtx_def** %rtl3602, align 8, !dbg !8110
  %u3603 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1759, i32 0, i32 1, !dbg !8110
  %fld3604 = bitcast %union.u* %u3603 to [1 x %union.rtunion_def]*, !dbg !8110
  %arrayidx3605 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3604, i64 0, i64 1, !dbg !8110
  %rt_rtx3606 = bitcast %union.rtunion_def* %arrayidx3605 to %struct.rtx_def**, !dbg !8110
  %1760 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3606, align 8, !dbg !8110
  %1761 = bitcast %struct.rtx_def* %1760 to i32*, !dbg !8110
  %bf.load3607 = load i32, i32* %1761, align 8, !dbg !8110
  %bf.clear3608 = and i32 %bf.load3607, 65535, !dbg !8110
  %cmp3609 = icmp eq i32 %bf.clear3608, 37, !dbg !8110
  br i1 %cmp3609, label %land.lhs.true3611, label %if.end3775, !dbg !8111

land.lhs.true3611:                                ; preds = %land.lhs.true3600
  %1762 = load %struct.set*, %struct.set** %sets, align 8, !dbg !8112
  %arrayidx3612 = getelementptr inbounds %struct.set, %struct.set* %1762, i64 0, !dbg !8112
  %rtl3613 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3612, i32 0, i32 0, !dbg !8112
  %1763 = load %struct.rtx_def*, %struct.rtx_def** %rtl3613, align 8, !dbg !8112
  %u3614 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1763, i32 0, i32 1, !dbg !8112
  %fld3615 = bitcast %union.u* %u3614 to [1 x %union.rtunion_def]*, !dbg !8112
  %arrayidx3616 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3615, i64 0, i64 1, !dbg !8112
  %rt_rtx3617 = bitcast %union.rtunion_def* %arrayidx3616 to %struct.rtx_def**, !dbg !8112
  %1764 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3617, align 8, !dbg !8112
  %call3618 = call i32 @rhs_regno(%struct.rtx_def* %1764), !dbg !8112
  %cmp3619 = icmp uge i32 %call3618, 53, !dbg !8113
  br i1 %cmp3619, label %land.lhs.true3621, label %if.end3775, !dbg !8114

land.lhs.true3621:                                ; preds = %land.lhs.true3611
  %1765 = load %struct.set*, %struct.set** %sets, align 8, !dbg !8115
  %arrayidx3622 = getelementptr inbounds %struct.set, %struct.set* %1765, i64 0, !dbg !8115
  %rtl3623 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3622, i32 0, i32 0, !dbg !8115
  %1766 = load %struct.rtx_def*, %struct.rtx_def** %rtl3623, align 8, !dbg !8115
  %u3624 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1766, i32 0, i32 1, !dbg !8115
  %fld3625 = bitcast %union.u* %u3624 to [1 x %union.rtunion_def]*, !dbg !8115
  %arrayidx3626 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3625, i64 0, i64 1, !dbg !8115
  %rt_rtx3627 = bitcast %union.rtunion_def* %arrayidx3626 to %struct.rtx_def**, !dbg !8115
  %1767 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3627, align 8, !dbg !8115
  %call3628 = call i32 @rhs_regno(%struct.rtx_def* %1767), !dbg !8115
  %call3629 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call3628), !dbg !8115
  %reg_qty3630 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call3629, i32 0, i32 1, !dbg !8115
  %1768 = load i32, i32* %reg_qty3630, align 4, !dbg !8115
  %cmp3631 = icmp sge i32 %1768, 0, !dbg !8115
  br i1 %cmp3631, label %if.then3633, label %if.end3775, !dbg !8116

if.then3633:                                      ; preds = %land.lhs.true3621
  call void @llvm.dbg.declare(metadata i32* %src_q3634, metadata !8117, metadata !DIExpression()), !dbg !8119
  %1769 = load %struct.set*, %struct.set** %sets, align 8, !dbg !8120
  %arrayidx3635 = getelementptr inbounds %struct.set, %struct.set* %1769, i64 0, !dbg !8120
  %rtl3636 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3635, i32 0, i32 0, !dbg !8120
  %1770 = load %struct.rtx_def*, %struct.rtx_def** %rtl3636, align 8, !dbg !8120
  %u3637 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1770, i32 0, i32 1, !dbg !8120
  %fld3638 = bitcast %union.u* %u3637 to [1 x %union.rtunion_def]*, !dbg !8120
  %arrayidx3639 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3638, i64 0, i64 1, !dbg !8120
  %rt_rtx3640 = bitcast %union.rtunion_def* %arrayidx3639 to %struct.rtx_def**, !dbg !8120
  %1771 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3640, align 8, !dbg !8120
  %call3641 = call i32 @rhs_regno(%struct.rtx_def* %1771), !dbg !8120
  %call3642 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call3641), !dbg !8120
  %reg_qty3643 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call3642, i32 0, i32 1, !dbg !8120
  %1772 = load i32, i32* %reg_qty3643, align 4, !dbg !8120
  store i32 %1772, i32* %src_q3634, align 4, !dbg !8119
  call void @llvm.dbg.declare(metadata %struct.qty_table_elem** %src_ent3644, metadata !8121, metadata !DIExpression()), !dbg !8122
  %1773 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8, !dbg !8123
  %1774 = load i32, i32* %src_q3634, align 4, !dbg !8124
  %idxprom3645 = sext i32 %1774 to i64, !dbg !8123
  %arrayidx3646 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %1773, i64 %idxprom3645, !dbg !8123
  store %struct.qty_table_elem* %arrayidx3646, %struct.qty_table_elem** %src_ent3644, align 8, !dbg !8122
  %1775 = load %struct.qty_table_elem*, %struct.qty_table_elem** %src_ent3644, align 8, !dbg !8125
  %first_reg3647 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %1775, i32 0, i32 4, !dbg !8127
  %1776 = load i32, i32* %first_reg3647, align 4, !dbg !8127
  %1777 = load %struct.set*, %struct.set** %sets, align 8, !dbg !8128
  %arrayidx3648 = getelementptr inbounds %struct.set, %struct.set* %1777, i64 0, !dbg !8128
  %rtl3649 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3648, i32 0, i32 0, !dbg !8128
  %1778 = load %struct.rtx_def*, %struct.rtx_def** %rtl3649, align 8, !dbg !8128
  %u3650 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1778, i32 0, i32 1, !dbg !8128
  %fld3651 = bitcast %union.u* %u3650 to [1 x %union.rtunion_def]*, !dbg !8128
  %arrayidx3652 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3651, i64 0, i64 0, !dbg !8128
  %rt_rtx3653 = bitcast %union.rtunion_def* %arrayidx3652 to %struct.rtx_def**, !dbg !8128
  %1779 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3653, align 8, !dbg !8128
  %call3654 = call i32 @rhs_regno(%struct.rtx_def* %1779), !dbg !8128
  %cmp3655 = icmp eq i32 %1776, %call3654, !dbg !8129
  br i1 %cmp3655, label %if.then3657, label %if.end3774, !dbg !8130

if.then3657:                                      ; preds = %if.then3633
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %prev, metadata !8131, metadata !DIExpression()), !dbg !8133
  %1780 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8134
  store %struct.rtx_def* %1780, %struct.rtx_def** %prev, align 8, !dbg !8133
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %bb_head, metadata !8135, metadata !DIExpression()), !dbg !8136
  %1781 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8137
  %u3658 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1781, i32 0, i32 1, !dbg !8137
  %fld3659 = bitcast %union.u* %u3658 to [1 x %union.rtunion_def]*, !dbg !8137
  %arrayidx3660 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3659, i64 0, i64 3, !dbg !8137
  %rt_bb = bitcast %union.rtunion_def* %arrayidx3660 to %struct.basic_block_def**, !dbg !8137
  %1782 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !8137
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1782, i32 0, i32 7, !dbg !8137
  %rtl3661 = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !8137
  %1783 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl3661, align 8, !dbg !8137
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %1783, i32 0, i32 0, !dbg !8137
  %1784 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !8137
  store %struct.rtx_def* %1784, %struct.rtx_def** %bb_head, align 8, !dbg !8136
  br label %do.body, !dbg !8138

do.body:                                          ; preds = %land.end3679, %if.then3657
  %1785 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !8139
  %u3662 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1785, i32 0, i32 1, !dbg !8139
  %fld3663 = bitcast %union.u* %u3662 to [1 x %union.rtunion_def]*, !dbg !8139
  %arrayidx3664 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3663, i64 0, i64 1, !dbg !8139
  %rt_rtx3665 = bitcast %union.rtunion_def* %arrayidx3664 to %struct.rtx_def**, !dbg !8139
  %1786 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3665, align 8, !dbg !8139
  store %struct.rtx_def* %1786, %struct.rtx_def** %prev, align 8, !dbg !8141
  br label %do.cond, !dbg !8142

do.cond:                                          ; preds = %do.body
  %1787 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !8143
  %1788 = load %struct.rtx_def*, %struct.rtx_def** %bb_head, align 8, !dbg !8144
  %cmp3666 = icmp ne %struct.rtx_def* %1787, %1788, !dbg !8145
  br i1 %cmp3666, label %land.rhs3668, label %land.end3679, !dbg !8146

land.rhs3668:                                     ; preds = %do.cond
  %1789 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !8147
  %1790 = bitcast %struct.rtx_def* %1789 to i32*, !dbg !8147
  %bf.load3669 = load i32, i32* %1790, align 8, !dbg !8147
  %bf.clear3670 = and i32 %bf.load3669, 65535, !dbg !8147
  %cmp3671 = icmp eq i32 %bf.clear3670, 13, !dbg !8147
  br i1 %cmp3671, label %lor.end3678, label %lor.rhs3673, !dbg !8148

lor.rhs3673:                                      ; preds = %land.rhs3668
  %1791 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !8149
  %1792 = bitcast %struct.rtx_def* %1791 to i32*, !dbg !8149
  %bf.load3674 = load i32, i32* %1792, align 8, !dbg !8149
  %bf.clear3675 = and i32 %bf.load3674, 65535, !dbg !8149
  %cmp3676 = icmp eq i32 %bf.clear3675, 7, !dbg !8149
  br label %lor.end3678, !dbg !8148

lor.end3678:                                      ; preds = %lor.rhs3673, %land.rhs3668
  %1793 = phi i1 [ true, %land.rhs3668 ], [ %cmp3676, %lor.rhs3673 ]
  br label %land.end3679

land.end3679:                                     ; preds = %lor.end3678, %do.cond
  %1794 = phi i1 [ false, %do.cond ], [ %1793, %lor.end3678 ], !dbg !8150
  br i1 %1794, label %do.body, label %do.end, !dbg !8142, !llvm.loop !8151

do.end:                                           ; preds = %land.end3679
  %1795 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !8153
  %1796 = bitcast %struct.rtx_def* %1795 to i32*, !dbg !8153
  %bf.load3681 = load i32, i32* %1796, align 8, !dbg !8153
  %bf.clear3682 = and i32 %bf.load3681, 65535, !dbg !8153
  %cmp3683 = icmp eq i32 %bf.clear3682, 8, !dbg !8153
  br i1 %cmp3683, label %land.lhs.true3685, label %if.end3773, !dbg !8155

land.lhs.true3685:                                ; preds = %do.end
  %1797 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !8156
  %u3686 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1797, i32 0, i32 1, !dbg !8156
  %fld3687 = bitcast %union.u* %u3686 to [1 x %union.rtunion_def]*, !dbg !8156
  %arrayidx3688 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3687, i64 0, i64 5, !dbg !8156
  %rt_rtx3689 = bitcast %union.rtunion_def* %arrayidx3688 to %struct.rtx_def**, !dbg !8156
  %1798 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3689, align 8, !dbg !8156
  %1799 = bitcast %struct.rtx_def* %1798 to i32*, !dbg !8156
  %bf.load3690 = load i32, i32* %1799, align 8, !dbg !8156
  %bf.clear3691 = and i32 %bf.load3690, 65535, !dbg !8156
  %cmp3692 = icmp eq i32 %bf.clear3691, 23, !dbg !8157
  br i1 %cmp3692, label %land.lhs.true3694, label %if.end3773, !dbg !8158

land.lhs.true3694:                                ; preds = %land.lhs.true3685
  %1800 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !8159
  %u3695 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1800, i32 0, i32 1, !dbg !8159
  %fld3696 = bitcast %union.u* %u3695 to [1 x %union.rtunion_def]*, !dbg !8159
  %arrayidx3697 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3696, i64 0, i64 5, !dbg !8159
  %rt_rtx3698 = bitcast %union.rtunion_def* %arrayidx3697 to %struct.rtx_def**, !dbg !8159
  %1801 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3698, align 8, !dbg !8159
  %u3699 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1801, i32 0, i32 1, !dbg !8159
  %fld3700 = bitcast %union.u* %u3699 to [1 x %union.rtunion_def]*, !dbg !8159
  %arrayidx3701 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3700, i64 0, i64 0, !dbg !8159
  %rt_rtx3702 = bitcast %union.rtunion_def* %arrayidx3701 to %struct.rtx_def**, !dbg !8159
  %1802 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3702, align 8, !dbg !8159
  %1803 = load %struct.set*, %struct.set** %sets, align 8, !dbg !8160
  %arrayidx3703 = getelementptr inbounds %struct.set, %struct.set* %1803, i64 0, !dbg !8160
  %rtl3704 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3703, i32 0, i32 0, !dbg !8160
  %1804 = load %struct.rtx_def*, %struct.rtx_def** %rtl3704, align 8, !dbg !8160
  %u3705 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1804, i32 0, i32 1, !dbg !8160
  %fld3706 = bitcast %union.u* %u3705 to [1 x %union.rtunion_def]*, !dbg !8160
  %arrayidx3707 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3706, i64 0, i64 1, !dbg !8160
  %rt_rtx3708 = bitcast %union.rtunion_def* %arrayidx3707 to %struct.rtx_def**, !dbg !8160
  %1805 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3708, align 8, !dbg !8160
  %cmp3709 = icmp eq %struct.rtx_def* %1802, %1805, !dbg !8161
  br i1 %cmp3709, label %land.lhs.true3711, label %if.end3773, !dbg !8162

land.lhs.true3711:                                ; preds = %land.lhs.true3694
  %1806 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !8163
  %call3712 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %1806, i32 3, %struct.rtx_def* null), !dbg !8164
  %tobool3713 = icmp ne %struct.rtx_def* %call3712, null, !dbg !8164
  br i1 %tobool3713, label %if.end3773, label %if.then3714, !dbg !8165

if.then3714:                                      ; preds = %land.lhs.true3711
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dest3715, metadata !8166, metadata !DIExpression()), !dbg !8168
  %1807 = load %struct.set*, %struct.set** %sets, align 8, !dbg !8169
  %arrayidx3716 = getelementptr inbounds %struct.set, %struct.set* %1807, i64 0, !dbg !8169
  %rtl3717 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3716, i32 0, i32 0, !dbg !8169
  %1808 = load %struct.rtx_def*, %struct.rtx_def** %rtl3717, align 8, !dbg !8169
  %u3718 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1808, i32 0, i32 1, !dbg !8169
  %fld3719 = bitcast %union.u* %u3718 to [1 x %union.rtunion_def]*, !dbg !8169
  %arrayidx3720 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3719, i64 0, i64 0, !dbg !8169
  %rt_rtx3721 = bitcast %union.rtunion_def* %arrayidx3720 to %struct.rtx_def**, !dbg !8169
  %1809 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3721, align 8, !dbg !8169
  store %struct.rtx_def* %1809, %struct.rtx_def** %dest3715, align 8, !dbg !8168
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %src3722, metadata !8170, metadata !DIExpression()), !dbg !8171
  %1810 = load %struct.set*, %struct.set** %sets, align 8, !dbg !8172
  %arrayidx3723 = getelementptr inbounds %struct.set, %struct.set* %1810, i64 0, !dbg !8172
  %rtl3724 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3723, i32 0, i32 0, !dbg !8172
  %1811 = load %struct.rtx_def*, %struct.rtx_def** %rtl3724, align 8, !dbg !8172
  %u3725 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1811, i32 0, i32 1, !dbg !8172
  %fld3726 = bitcast %union.u* %u3725 to [1 x %union.rtunion_def]*, !dbg !8172
  %arrayidx3727 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3726, i64 0, i64 1, !dbg !8172
  %rt_rtx3728 = bitcast %union.rtunion_def* %arrayidx3727 to %struct.rtx_def**, !dbg !8172
  %1812 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3728, align 8, !dbg !8172
  store %struct.rtx_def* %1812, %struct.rtx_def** %src3722, align 8, !dbg !8171
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %note3729, metadata !8173, metadata !DIExpression()), !dbg !8174
  %1813 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !8175
  %1814 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !8176
  %u3730 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1814, i32 0, i32 1, !dbg !8176
  %fld3731 = bitcast %union.u* %u3730 to [1 x %union.rtunion_def]*, !dbg !8176
  %arrayidx3732 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3731, i64 0, i64 5, !dbg !8176
  %rt_rtx3733 = bitcast %union.rtunion_def* %arrayidx3732 to %struct.rtx_def**, !dbg !8176
  %1815 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3733, align 8, !dbg !8176
  %u3734 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1815, i32 0, i32 1, !dbg !8176
  %fld3735 = bitcast %union.u* %u3734 to [1 x %union.rtunion_def]*, !dbg !8176
  %arrayidx3736 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3735, i64 0, i64 0, !dbg !8176
  %rt_rtx3737 = bitcast %union.rtunion_def* %arrayidx3736 to %struct.rtx_def**, !dbg !8176
  %1816 = load %struct.rtx_def*, %struct.rtx_def** %dest3715, align 8, !dbg !8177
  %call3738 = call zeroext i8 @validate_change(%struct.rtx_def* %1813, %struct.rtx_def** %rt_rtx3737, %struct.rtx_def* %1816, i8 zeroext 1), !dbg !8178
  %1817 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8179
  %1818 = load %struct.set*, %struct.set** %sets, align 8, !dbg !8180
  %arrayidx3739 = getelementptr inbounds %struct.set, %struct.set* %1818, i64 0, !dbg !8180
  %rtl3740 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3739, i32 0, i32 0, !dbg !8180
  %1819 = load %struct.rtx_def*, %struct.rtx_def** %rtl3740, align 8, !dbg !8180
  %u3741 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1819, i32 0, i32 1, !dbg !8180
  %fld3742 = bitcast %union.u* %u3741 to [1 x %union.rtunion_def]*, !dbg !8180
  %arrayidx3743 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3742, i64 0, i64 0, !dbg !8180
  %rt_rtx3744 = bitcast %union.rtunion_def* %arrayidx3743 to %struct.rtx_def**, !dbg !8180
  %1820 = load %struct.rtx_def*, %struct.rtx_def** %src3722, align 8, !dbg !8181
  %call3745 = call zeroext i8 @validate_change(%struct.rtx_def* %1817, %struct.rtx_def** %rt_rtx3744, %struct.rtx_def* %1820, i8 zeroext 1), !dbg !8182
  %1821 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8183
  %1822 = load %struct.set*, %struct.set** %sets, align 8, !dbg !8184
  %arrayidx3746 = getelementptr inbounds %struct.set, %struct.set* %1822, i64 0, !dbg !8184
  %rtl3747 = getelementptr inbounds %struct.set, %struct.set* %arrayidx3746, i32 0, i32 0, !dbg !8184
  %1823 = load %struct.rtx_def*, %struct.rtx_def** %rtl3747, align 8, !dbg !8184
  %u3748 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1823, i32 0, i32 1, !dbg !8184
  %fld3749 = bitcast %union.u* %u3748 to [1 x %union.rtunion_def]*, !dbg !8184
  %arrayidx3750 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3749, i64 0, i64 1, !dbg !8184
  %rt_rtx3751 = bitcast %union.rtunion_def* %arrayidx3750 to %struct.rtx_def**, !dbg !8184
  %1824 = load %struct.rtx_def*, %struct.rtx_def** %dest3715, align 8, !dbg !8185
  %call3752 = call zeroext i8 @validate_change(%struct.rtx_def* %1821, %struct.rtx_def** %rt_rtx3751, %struct.rtx_def* %1824, i8 zeroext 1), !dbg !8186
  %call3753 = call i32 @apply_change_group(), !dbg !8187
  %1825 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8188
  %call3754 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %1825, i32 4, %struct.rtx_def* null), !dbg !8189
  store %struct.rtx_def* %call3754, %struct.rtx_def** %note3729, align 8, !dbg !8190
  %1826 = load %struct.rtx_def*, %struct.rtx_def** %note3729, align 8, !dbg !8191
  %cmp3755 = icmp ne %struct.rtx_def* %1826, null, !dbg !8193
  br i1 %cmp3755, label %land.lhs.true3757, label %if.end3772, !dbg !8194

land.lhs.true3757:                                ; preds = %if.then3714
  %1827 = load %struct.rtx_def*, %struct.rtx_def** %dest3715, align 8, !dbg !8195
  %1828 = load %struct.rtx_def*, %struct.rtx_def** %note3729, align 8, !dbg !8196
  %u3758 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1828, i32 0, i32 1, !dbg !8196
  %fld3759 = bitcast %union.u* %u3758 to [1 x %union.rtunion_def]*, !dbg !8196
  %arrayidx3760 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3759, i64 0, i64 0, !dbg !8196
  %rt_rtx3761 = bitcast %union.rtunion_def* %arrayidx3760 to %struct.rtx_def**, !dbg !8196
  %1829 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3761, align 8, !dbg !8196
  %call3762 = call i32 @reg_mentioned_p(%struct.rtx_def* %1827, %struct.rtx_def* %1829), !dbg !8197
  %tobool3763 = icmp ne i32 %call3762, 0, !dbg !8197
  br i1 %tobool3763, label %if.then3771, label %lor.lhs.false3764, !dbg !8198

lor.lhs.false3764:                                ; preds = %land.lhs.true3757
  %1830 = load %struct.rtx_def*, %struct.rtx_def** %src3722, align 8, !dbg !8199
  %1831 = load %struct.rtx_def*, %struct.rtx_def** %note3729, align 8, !dbg !8200
  %u3765 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1831, i32 0, i32 1, !dbg !8200
  %fld3766 = bitcast %union.u* %u3765 to [1 x %union.rtunion_def]*, !dbg !8200
  %arrayidx3767 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3766, i64 0, i64 0, !dbg !8200
  %rt_rtx3768 = bitcast %union.rtunion_def* %arrayidx3767 to %struct.rtx_def**, !dbg !8200
  %1832 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3768, align 8, !dbg !8200
  %call3769 = call i32 @rtx_equal_p(%struct.rtx_def* %1830, %struct.rtx_def* %1832), !dbg !8201
  %tobool3770 = icmp ne i32 %call3769, 0, !dbg !8201
  br i1 %tobool3770, label %if.then3771, label %if.end3772, !dbg !8202

if.then3771:                                      ; preds = %lor.lhs.false3764, %land.lhs.true3757
  %1833 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8203
  %1834 = load %struct.rtx_def*, %struct.rtx_def** %note3729, align 8, !dbg !8204
  call void @remove_note(%struct.rtx_def* %1833, %struct.rtx_def* %1834), !dbg !8205
  br label %if.end3772, !dbg !8205

if.end3772:                                       ; preds = %if.then3771, %lor.lhs.false3764, %if.then3714
  br label %if.end3773, !dbg !8206

if.end3773:                                       ; preds = %if.end3772, %land.lhs.true3711, %land.lhs.true3694, %land.lhs.true3685, %do.end
  br label %if.end3774, !dbg !8207

if.end3774:                                       ; preds = %if.end3773, %if.then3633
  br label %if.end3775, !dbg !8208

if.end3775:                                       ; preds = %if.end3774, %land.lhs.true3621, %land.lhs.true3611, %land.lhs.true3600, %land.lhs.true3589, %land.lhs.true3578, %land.lhs.true3574, %for.end3571
  br label %done, !dbg !8115

done:                                             ; preds = %if.end3775, %if.then3005
  call void @llvm.dbg.label(metadata !8209), !dbg !8210
  ret void, !dbg !8211
}

declare dso_local i32 @for_each_rtx(%struct.rtx_def**, i32 (%struct.rtx_def**, i8*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @check_for_label_ref(%struct.rtx_def** %rtl, i8* %data) #0 !dbg !8212 {
entry:
  %rtl.addr = alloca %struct.rtx_def**, align 8
  %data.addr = alloca i8*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def** %rtl, %struct.rtx_def*** %rtl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %rtl.addr, metadata !8215, metadata !DIExpression()), !dbg !8216
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8217, metadata !DIExpression()), !dbg !8218
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !8219, metadata !DIExpression()), !dbg !8220
  %0 = load i8*, i8** %data.addr, align 8, !dbg !8221
  %1 = bitcast i8* %0 to %struct.rtx_def*, !dbg !8222
  store %struct.rtx_def* %1, %struct.rtx_def** %insn, align 8, !dbg !8220
  %2 = load %struct.rtx_def**, %struct.rtx_def*** %rtl.addr, align 8, !dbg !8223
  %3 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8, !dbg !8223
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !8223
  %bf.load = load i32, i32* %4, align 8, !dbg !8223
  %bf.clear = and i32 %bf.load, 65535, !dbg !8223
  %cmp = icmp eq i32 %bf.clear, 44, !dbg !8224
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !8225

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.rtx_def**, %struct.rtx_def*** %rtl.addr, align 8, !dbg !8226
  %6 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8, !dbg !8226
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !8226
  %bf.load1 = load i32, i32* %7, align 8, !dbg !8226
  %bf.lshr = lshr i32 %bf.load1, 27, !dbg !8226
  %bf.clear2 = and i32 %bf.lshr, 1, !dbg !8226
  %tobool = icmp ne i32 %bf.clear2, 0, !dbg !8226
  br i1 %tobool, label %land.end, label %land.lhs.true3, !dbg !8227

land.lhs.true3:                                   ; preds = %land.lhs.true
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8228
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !8228
  %bf.load4 = load i32, i32* %9, align 8, !dbg !8228
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !8228
  %cmp6 = icmp eq i32 %bf.clear5, 9, !dbg !8228
  br i1 %cmp6, label %lor.lhs.false, label %land.lhs.true8, !dbg !8229

lor.lhs.false:                                    ; preds = %land.lhs.true3
  %10 = load %struct.rtx_def**, %struct.rtx_def*** %rtl.addr, align 8, !dbg !8230
  %11 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8, !dbg !8230
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !8230
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8230
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !8230
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !8230
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8230
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8231
  %call = call zeroext i8 @label_is_jump_target_p(%struct.rtx_def* %12, %struct.rtx_def* %13), !dbg !8232
  %tobool7 = icmp ne i8 %call, 0, !dbg !8232
  br i1 %tobool7, label %land.end, label %land.lhs.true8, !dbg !8233

land.lhs.true8:                                   ; preds = %lor.lhs.false, %land.lhs.true3
  %14 = load %struct.rtx_def**, %struct.rtx_def*** %rtl.addr, align 8, !dbg !8234
  %15 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8, !dbg !8234
  %u9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !8234
  %fld10 = bitcast %union.u* %u9 to [1 x %union.rtunion_def]*, !dbg !8234
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i64 0, i64 0, !dbg !8234
  %rt_rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !8234
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx12, align 8, !dbg !8234
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !8234
  %bf.load13 = load i32, i32* %17, align 8, !dbg !8234
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !8234
  %cmp15 = icmp eq i32 %bf.clear14, 12, !dbg !8234
  br i1 %cmp15, label %land.lhs.true16, label %land.end, !dbg !8235

land.lhs.true16:                                  ; preds = %land.lhs.true8
  %18 = load %struct.rtx_def**, %struct.rtx_def*** %rtl.addr, align 8, !dbg !8236
  %19 = load %struct.rtx_def*, %struct.rtx_def** %18, align 8, !dbg !8236
  %u17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !8236
  %fld18 = bitcast %union.u* %u17 to [1 x %union.rtunion_def]*, !dbg !8236
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i64 0, i64 0, !dbg !8236
  %rt_rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**, !dbg !8236
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx20, align 8, !dbg !8236
  %u21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !8236
  %fld22 = bitcast %union.u* %u21 to [1 x %union.rtunion_def]*, !dbg !8236
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i64 0, i64 0, !dbg !8236
  %rt_int = bitcast %union.rtunion_def* %arrayidx23 to i32*, !dbg !8236
  %21 = load i32, i32* %rt_int, align 8, !dbg !8236
  %cmp24 = icmp ne i32 %21, 0, !dbg !8237
  br i1 %cmp24, label %land.rhs, label %land.end, !dbg !8238

land.rhs:                                         ; preds = %land.lhs.true16
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !8239
  %23 = load %struct.rtx_def**, %struct.rtx_def*** %rtl.addr, align 8, !dbg !8240
  %24 = load %struct.rtx_def*, %struct.rtx_def** %23, align 8, !dbg !8240
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !8240
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !8240
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 0, !dbg !8240
  %rt_rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !8240
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !8240
  %call29 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %22, i32 10, %struct.rtx_def* %25), !dbg !8241
  %tobool30 = icmp ne %struct.rtx_def* %call29, null, !dbg !8242
  %lnot = xor i1 %tobool30, true, !dbg !8242
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true16, %land.lhs.true8, %lor.lhs.false, %land.lhs.true, %entry
  %26 = phi i1 [ false, %land.lhs.true16 ], [ false, %land.lhs.true8 ], [ false, %lor.lhs.false ], [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !8243
  %land.ext = zext i1 %26 to i32, !dbg !8238
  ret i32 %land.ext, !dbg !8244
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @have_eh_succ_edges(%struct.basic_block_def* %bb) #0 !dbg !8245 {
entry:
  %retval = alloca i8, align 1
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !8246, metadata !DIExpression()), !dbg !8247
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e, metadata !8248, metadata !DIExpression()), !dbg !8249
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %ei, metadata !8250, metadata !DIExpression()), !dbg !8251
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !8252
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 1, !dbg !8252
  %call = call { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %succs), !dbg !8252
  %1 = bitcast %struct.edge_iterator* %tmp to { i32, %struct.VEC_edge_gc** }*, !dbg !8252
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %1, i32 0, i32 0, !dbg !8252
  %3 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !8252
  store i32 %3, i32* %2, align 8, !dbg !8252
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %1, i32 0, i32 1, !dbg !8252
  %5 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !8252
  store %struct.VEC_edge_gc** %5, %struct.VEC_edge_gc*** %4, align 8, !dbg !8252
  %6 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !8252
  %7 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !8252
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 16, i1 false), !dbg !8252
  br label %for.cond, !dbg !8252

for.cond:                                         ; preds = %for.inc, %entry
  %8 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !8254
  %9 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 0, !dbg !8254
  %10 = load i32, i32* %9, align 8, !dbg !8254
  %11 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 1, !dbg !8254
  %12 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !8254
  %call1 = call zeroext i8 @ei_cond(i32 %10, %struct.VEC_edge_gc** %12, %struct.edge_def** %e), !dbg !8254
  %tobool = icmp ne i8 %call1, 0, !dbg !8252
  br i1 %tobool, label %for.body, label %for.end, !dbg !8252

for.body:                                         ; preds = %for.cond
  %13 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !8256
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %13, i32 0, i32 7, !dbg !8258
  %14 = load i32, i32* %flags, align 8, !dbg !8258
  %and = and i32 %14, 8, !dbg !8259
  %tobool2 = icmp ne i32 %and, 0, !dbg !8259
  br i1 %tobool2, label %if.then, label %if.end, !dbg !8260

if.then:                                          ; preds = %for.body
  store i8 1, i8* %retval, align 1, !dbg !8261
  br label %return, !dbg !8261

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !8262

for.inc:                                          ; preds = %if.end
  call void @ei_next(%struct.edge_iterator* %ei), !dbg !8254
  br label %for.cond, !dbg !8254, !llvm.loop !8263

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !8265
  br label %return, !dbg !8265

return:                                           ; preds = %for.end, %if.then
  %15 = load i8, i8* %retval, align 1, !dbg !8266
  ret i8 %15, !dbg !8266
}

declare dso_local zeroext i8 @purge_dead_edges(%struct.basic_block_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @RESET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) #0 !dbg !8267 {
entry:
  %map.addr = alloca %struct.simple_bitmap_def*, align 8
  %bitno.addr = alloca i32, align 4
  %oldbit = alloca i8, align 1
  store %struct.simple_bitmap_def* %map, %struct.simple_bitmap_def** %map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.simple_bitmap_def** %map.addr, metadata !8268, metadata !DIExpression()), !dbg !8269
  store i32 %bitno, i32* %bitno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bitno.addr, metadata !8270, metadata !DIExpression()), !dbg !8271
  %0 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !8272
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %0, i32 0, i32 0, !dbg !8274
  %1 = load i8*, i8** %popcount, align 8, !dbg !8274
  %tobool = icmp ne i8* %1, null, !dbg !8272
  br i1 %tobool, label %if.then, label %if.end7, !dbg !8275

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %oldbit, metadata !8276, metadata !DIExpression()), !dbg !8278
  %2 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !8279
  %elms = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %2, i32 0, i32 3, !dbg !8279
  %3 = load i32, i32* %bitno.addr, align 4, !dbg !8279
  %div = udiv i32 %3, 64, !dbg !8279
  %idxprom = zext i32 %div to i64, !dbg !8279
  %arrayidx = getelementptr inbounds [1 x i64], [1 x i64]* %elms, i64 0, i64 %idxprom, !dbg !8279
  %4 = load i64, i64* %arrayidx, align 8, !dbg !8279
  %5 = load i32, i32* %bitno.addr, align 4, !dbg !8279
  %rem = urem i32 %5, 64, !dbg !8279
  %sh_prom = zext i32 %rem to i64, !dbg !8279
  %shr = lshr i64 %4, %sh_prom, !dbg !8279
  %and = and i64 %shr, 1, !dbg !8279
  %conv = trunc i64 %and to i8, !dbg !8279
  store i8 %conv, i8* %oldbit, align 1, !dbg !8280
  %6 = load i8, i8* %oldbit, align 1, !dbg !8281
  %tobool1 = icmp ne i8 %6, 0, !dbg !8281
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !8283

if.then2:                                         ; preds = %if.then
  %7 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !8284
  %popcount3 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %7, i32 0, i32 0, !dbg !8285
  %8 = load i8*, i8** %popcount3, align 8, !dbg !8285
  %9 = load i32, i32* %bitno.addr, align 4, !dbg !8286
  %div4 = udiv i32 %9, 64, !dbg !8287
  %idxprom5 = zext i32 %div4 to i64, !dbg !8284
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 %idxprom5, !dbg !8284
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !8288
  %dec = add i8 %10, -1, !dbg !8288
  store i8 %dec, i8* %arrayidx6, align 1, !dbg !8288
  br label %if.end, !dbg !8284

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end7, !dbg !8289

if.end7:                                          ; preds = %if.end, %entry
  %11 = load i32, i32* %bitno.addr, align 4, !dbg !8290
  %rem8 = urem i32 %11, 64, !dbg !8291
  %sh_prom9 = zext i32 %rem8 to i64, !dbg !8292
  %shl = shl i64 1, %sh_prom9, !dbg !8292
  %neg = xor i64 %shl, -1, !dbg !8293
  %12 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !8294
  %elms10 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %12, i32 0, i32 3, !dbg !8295
  %13 = load i32, i32* %bitno.addr, align 4, !dbg !8296
  %div11 = udiv i32 %13, 64, !dbg !8297
  %idxprom12 = zext i32 %div11 to i64, !dbg !8294
  %arrayidx13 = getelementptr inbounds [1 x i64], [1 x i64]* %elms10, i64 0, i64 %idxprom12, !dbg !8294
  %14 = load i64, i64* %arrayidx13, align 8, !dbg !8298
  %and14 = and i64 %14, %neg, !dbg !8298
  store i64 %and14, i64* %arrayidx13, align 8, !dbg !8298
  ret void, !dbg !8299
}

declare dso_local %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @record_jump_equiv(%struct.rtx_def* %insn, i8 zeroext %taken) #0 !dbg !8300 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %taken.addr = alloca i8, align 1
  %cond_known_true = alloca i32, align 4
  %op0 = alloca %struct.rtx_def*, align 8
  %op1 = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %mode = alloca i32, align 4
  %mode0 = alloca i32, align 4
  %mode1 = alloca i32, align 4
  %reversed_nonequality = alloca i32, align 4
  %code = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !8303, metadata !DIExpression()), !dbg !8304
  store i8 %taken, i8* %taken.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %taken.addr, metadata !8305, metadata !DIExpression()), !dbg !8306
  call void @llvm.dbg.declare(metadata i32* %cond_known_true, metadata !8307, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op0, metadata !8309, metadata !DIExpression()), !dbg !8310
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op1, metadata !8311, metadata !DIExpression()), !dbg !8312
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set, metadata !8313, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !8315, metadata !DIExpression()), !dbg !8316
  call void @llvm.dbg.declare(metadata i32* %mode0, metadata !8317, metadata !DIExpression()), !dbg !8318
  call void @llvm.dbg.declare(metadata i32* %mode1, metadata !8319, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.declare(metadata i32* %reversed_nonequality, metadata !8321, metadata !DIExpression()), !dbg !8322
  store i32 0, i32* %reversed_nonequality, align 4, !dbg !8322
  call void @llvm.dbg.declare(metadata i32* %code, metadata !8323, metadata !DIExpression()), !dbg !8324
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8325
  %call = call i32 @any_condjump_p(%struct.rtx_def* %0), !dbg !8325
  %tobool = icmp ne i32 %call, 0, !dbg !8325
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !8325

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32 3906, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)), !dbg !8325
  br label %cond.end, !dbg !8325

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8325

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !8325
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8326
  %call1 = call %struct.rtx_def* @pc_set(%struct.rtx_def* %1), !dbg !8327
  store %struct.rtx_def* %call1, %struct.rtx_def** %set, align 8, !dbg !8328
  %2 = load i8, i8* %taken.addr, align 1, !dbg !8329
  %tobool2 = icmp ne i8 %2, 0, !dbg !8329
  br i1 %tobool2, label %if.then, label %if.else, !dbg !8331

if.then:                                          ; preds = %cond.end
  %3 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !8332
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !8332
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8332
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !8332
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !8332
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8332
  %u3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !8332
  %fld4 = bitcast %union.u* %u3 to [1 x %union.rtunion_def]*, !dbg !8332
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i64 0, i64 2, !dbg !8332
  %rt_rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**, !dbg !8332
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx6, align 8, !dbg !8332
  %6 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !8333
  %cmp = icmp eq %struct.rtx_def* %5, %6, !dbg !8334
  %conv = zext i1 %cmp to i32, !dbg !8334
  store i32 %conv, i32* %cond_known_true, align 4, !dbg !8335
  br label %if.end, !dbg !8336

if.else:                                          ; preds = %cond.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !8337
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !8337
  %fld8 = bitcast %union.u* %u7 to [1 x %union.rtunion_def]*, !dbg !8337
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i64 0, i64 1, !dbg !8337
  %rt_rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**, !dbg !8337
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx10, align 8, !dbg !8337
  %u11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !8337
  %fld12 = bitcast %union.u* %u11 to [1 x %union.rtunion_def]*, !dbg !8337
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i64 0, i64 1, !dbg !8337
  %rt_rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**, !dbg !8337
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx14, align 8, !dbg !8337
  %10 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !8338
  %cmp15 = icmp eq %struct.rtx_def* %9, %10, !dbg !8339
  %conv16 = zext i1 %cmp15 to i32, !dbg !8339
  store i32 %conv16, i32* %cond_known_true, align 4, !dbg !8340
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !8341
  %u17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !8341
  %fld18 = bitcast %union.u* %u17 to [1 x %union.rtunion_def]*, !dbg !8341
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i64 0, i64 1, !dbg !8341
  %rt_rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**, !dbg !8341
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx20, align 8, !dbg !8341
  %u21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !8341
  %fld22 = bitcast %union.u* %u21 to [1 x %union.rtunion_def]*, !dbg !8341
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i64 0, i64 0, !dbg !8341
  %rt_rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**, !dbg !8341
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx24, align 8, !dbg !8341
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !8341
  %bf.load = load i32, i32* %14, align 8, !dbg !8341
  %bf.clear = and i32 %bf.load, 65535, !dbg !8341
  store i32 %bf.clear, i32* %code, align 4, !dbg !8342
  %15 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !8343
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !8343
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !8343
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 1, !dbg !8343
  %rt_rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !8343
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !8343
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !8343
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !8343
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 0, !dbg !8343
  %rt_rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !8343
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !8343
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !8343
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !8343
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 0, !dbg !8343
  %rt_rtx36 = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtx_def**, !dbg !8343
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx36, align 8, !dbg !8343
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8344
  %call37 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %18, %struct.rtx_def* %19), !dbg !8345
  store %struct.rtx_def* %call37, %struct.rtx_def** %op0, align 8, !dbg !8346
  %20 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !8347
  %u38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !8347
  %fld39 = bitcast %union.u* %u38 to [1 x %union.rtunion_def]*, !dbg !8347
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i64 0, i64 1, !dbg !8347
  %rt_rtx41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**, !dbg !8347
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx41, align 8, !dbg !8347
  %u42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !8347
  %fld43 = bitcast %union.u* %u42 to [1 x %union.rtunion_def]*, !dbg !8347
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i64 0, i64 0, !dbg !8347
  %rt_rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**, !dbg !8347
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx45, align 8, !dbg !8347
  %u46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !8347
  %fld47 = bitcast %union.u* %u46 to [1 x %union.rtunion_def]*, !dbg !8347
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i64 0, i64 1, !dbg !8347
  %rt_rtx49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**, !dbg !8347
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx49, align 8, !dbg !8347
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8348
  %call50 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %23, %struct.rtx_def* %24), !dbg !8349
  store %struct.rtx_def* %call50, %struct.rtx_def** %op1, align 8, !dbg !8350
  %25 = load i32, i32* %code, align 4, !dbg !8351
  %call51 = call i32 @find_comparison_args(i32 %25, %struct.rtx_def** %op0, %struct.rtx_def** %op1, i32* %mode0, i32* %mode1), !dbg !8352
  store i32 %call51, i32* %code, align 4, !dbg !8353
  %26 = load i32, i32* %cond_known_true, align 4, !dbg !8354
  %tobool52 = icmp ne i32 %26, 0, !dbg !8354
  br i1 %tobool52, label %if.end59, label %if.then53, !dbg !8356

if.then53:                                        ; preds = %if.end
  %27 = load i32, i32* %code, align 4, !dbg !8357
  %28 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !8359
  %29 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !8360
  %30 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !8361
  %call54 = call i32 @reversed_comparison_code_parts(i32 %27, %struct.rtx_def* %28, %struct.rtx_def* %29, %struct.rtx_def* %30), !dbg !8362
  store i32 %call54, i32* %code, align 4, !dbg !8363
  %31 = load i32, i32* %code, align 4, !dbg !8364
  %cmp55 = icmp eq i32 %31, 0, !dbg !8366
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !8367

if.then57:                                        ; preds = %if.then53
  br label %return, !dbg !8368

if.end58:                                         ; preds = %if.then53
  br label %if.end59, !dbg !8369

if.end59:                                         ; preds = %if.end58, %if.end
  %32 = load i32, i32* %mode0, align 4, !dbg !8370
  store i32 %32, i32* %mode, align 4, !dbg !8371
  %33 = load i32, i32* %mode1, align 4, !dbg !8372
  %cmp60 = icmp ne i32 %33, 0, !dbg !8374
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !8375

if.then62:                                        ; preds = %if.end59
  %34 = load i32, i32* %mode1, align 4, !dbg !8376
  store i32 %34, i32* %mode, align 4, !dbg !8377
  br label %if.end63, !dbg !8378

if.end63:                                         ; preds = %if.then62, %if.end59
  %35 = load i32, i32* %code, align 4, !dbg !8379
  %36 = load i32, i32* %mode, align 4, !dbg !8380
  %37 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !8381
  %38 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !8382
  %39 = load i32, i32* %reversed_nonequality, align 4, !dbg !8383
  call void @record_jump_cond(i32 %35, i32 %36, %struct.rtx_def* %37, %struct.rtx_def* %38, i32 %39), !dbg !8384
  br label %return, !dbg !8385

return:                                           ; preds = %if.end63, %if.then57
  ret void, !dbg !8385
}

; Function Attrs: noinline nounwind uwtable
define internal { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) #0 !dbg !8386 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  %ev.addr = alloca %struct.VEC_edge_gc**, align 8
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %ev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_gc*** %ev.addr, metadata !8389, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %retval, metadata !8391, metadata !DIExpression()), !dbg !8392
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i32 0, i32 0, !dbg !8393
  store i32 0, i32* %index, align 8, !dbg !8394
  %0 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %ev.addr, align 8, !dbg !8395
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i32 0, i32 1, !dbg !8396
  store %struct.VEC_edge_gc** %0, %struct.VEC_edge_gc*** %container, align 8, !dbg !8397
  %1 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !8398
  %2 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %1, align 8, !dbg !8398
  ret { i32, %struct.VEC_edge_gc** } %2, !dbg !8398
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) #0 !dbg !8399 {
entry:
  %retval = alloca i8, align 1
  %ei = alloca %struct.edge_iterator, align 8
  %p.addr = alloca %struct.edge_def**, align 8
  %0 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %ei.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %ei.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %ei, metadata !8403, metadata !DIExpression()), !dbg !8404
  store %struct.edge_def** %p, %struct.edge_def*** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_def*** %p.addr, metadata !8405, metadata !DIExpression()), !dbg !8406
  %3 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !8407
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 0, !dbg !8407
  %5 = load i32, i32* %4, align 8, !dbg !8407
  %6 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 1, !dbg !8407
  %7 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %6, align 8, !dbg !8407
  %call = call zeroext i8 @ei_end_p(i32 %5, %struct.VEC_edge_gc** %7), !dbg !8407
  %tobool = icmp ne i8 %call, 0, !dbg !8407
  br i1 %tobool, label %if.else, label %if.then, !dbg !8409

if.then:                                          ; preds = %entry
  %8 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !8410
  %9 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 0, !dbg !8410
  %10 = load i32, i32* %9, align 8, !dbg !8410
  %11 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 1, !dbg !8410
  %12 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !8410
  %call1 = call %struct.edge_def* @ei_edge(i32 %10, %struct.VEC_edge_gc** %12), !dbg !8410
  %13 = load %struct.edge_def**, %struct.edge_def*** %p.addr, align 8, !dbg !8412
  store %struct.edge_def* %call1, %struct.edge_def** %13, align 8, !dbg !8413
  store i8 1, i8* %retval, align 1, !dbg !8414
  br label %return, !dbg !8414

if.else:                                          ; preds = %entry
  %14 = load %struct.edge_def**, %struct.edge_def*** %p.addr, align 8, !dbg !8415
  store %struct.edge_def* null, %struct.edge_def** %14, align 8, !dbg !8417
  store i8 0, i8* %retval, align 1, !dbg !8418
  br label %return, !dbg !8418

return:                                           ; preds = %if.else, %if.then
  %15 = load i8, i8* %retval, align 1, !dbg !8419
  ret i8 %15, !dbg !8419
}

; Function Attrs: noinline nounwind uwtable
define internal void @ei_next(%struct.edge_iterator* %i) #0 !dbg !8420 {
entry:
  %i.addr = alloca %struct.edge_iterator*, align 8
  store %struct.edge_iterator* %i, %struct.edge_iterator** %i.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator** %i.addr, metadata !8424, metadata !DIExpression()), !dbg !8425
  %0 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !8426
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %0, i32 0, i32 0, !dbg !8426
  %1 = load i32, i32* %index, align 8, !dbg !8426
  %2 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !8426
  %3 = bitcast %struct.edge_iterator* %2 to { i32, %struct.VEC_edge_gc** }*, !dbg !8426
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 0, !dbg !8426
  %5 = load i32, i32* %4, align 8, !dbg !8426
  %6 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 1, !dbg !8426
  %7 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %6, align 8, !dbg !8426
  %call = call %struct.VEC_edge_gc* @ei_container(i32 %5, %struct.VEC_edge_gc** %7), !dbg !8426
  %tobool = icmp ne %struct.VEC_edge_gc* %call, null, !dbg !8426
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8426

cond.true:                                        ; preds = %entry
  %8 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !8426
  %9 = bitcast %struct.edge_iterator* %8 to { i32, %struct.VEC_edge_gc** }*, !dbg !8426
  %10 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 0, !dbg !8426
  %11 = load i32, i32* %10, align 8, !dbg !8426
  %12 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 1, !dbg !8426
  %13 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !8426
  %call1 = call %struct.VEC_edge_gc* @ei_container(i32 %11, %struct.VEC_edge_gc** %13), !dbg !8426
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i32 0, i32 0, !dbg !8426
  br label %cond.end, !dbg !8426

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8426

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !8426
  %call2 = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !8426
  %cmp = icmp ult i32 %1, %call2, !dbg !8426
  br i1 %cmp, label %cond.false4, label %cond.true3, !dbg !8426

cond.true3:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)), !dbg !8426
  br label %cond.end5, !dbg !8426

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !8426

cond.end5:                                        ; preds = %cond.false4, %cond.true3
  %cond6 = phi i32 [ 0, %cond.true3 ], [ 0, %cond.false4 ], !dbg !8426
  %14 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !8427
  %index7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %14, i32 0, i32 0, !dbg !8428
  %15 = load i32, i32* %index7, align 8, !dbg !8429
  %inc = add i32 %15, 1, !dbg !8429
  store i32 %inc, i32* %index7, align 8, !dbg !8429
  ret void, !dbg !8430
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #0 !dbg !8431 {
entry:
  %i = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %i.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %i.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %i, metadata !8434, metadata !DIExpression()), !dbg !8435
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 0, !dbg !8436
  %3 = load i32, i32* %index, align 8, !dbg !8436
  %4 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !8437
  %5 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %4, i32 0, i32 0, !dbg !8437
  %6 = load i32, i32* %5, align 8, !dbg !8437
  %7 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %4, i32 0, i32 1, !dbg !8437
  %8 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %7, align 8, !dbg !8437
  %call = call %struct.VEC_edge_gc* @ei_container(i32 %6, %struct.VEC_edge_gc** %8), !dbg !8437
  %tobool = icmp ne %struct.VEC_edge_gc* %call, null, !dbg !8437
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8437

cond.true:                                        ; preds = %entry
  %9 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !8437
  %10 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 0, !dbg !8437
  %11 = load i32, i32* %10, align 8, !dbg !8437
  %12 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 1, !dbg !8437
  %13 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !8437
  %call1 = call %struct.VEC_edge_gc* @ei_container(i32 %11, %struct.VEC_edge_gc** %13), !dbg !8437
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i32 0, i32 0, !dbg !8437
  br label %cond.end, !dbg !8437

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8437

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !8437
  %call2 = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !8437
  %cmp = icmp eq i32 %3, %call2, !dbg !8438
  %conv = zext i1 %cmp to i32, !dbg !8438
  %conv3 = trunc i32 %conv to i8, !dbg !8439
  ret i8 %conv3, !dbg !8440
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #0 !dbg !8441 {
entry:
  %i = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %i.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %i.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %i, metadata !8444, metadata !DIExpression()), !dbg !8445
  %3 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !8446
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 0, !dbg !8446
  %5 = load i32, i32* %4, align 8, !dbg !8446
  %6 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 1, !dbg !8446
  %7 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %6, align 8, !dbg !8446
  %call = call %struct.VEC_edge_gc* @ei_container(i32 %5, %struct.VEC_edge_gc** %7), !dbg !8446
  %tobool = icmp ne %struct.VEC_edge_gc* %call, null, !dbg !8446
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8446

cond.true:                                        ; preds = %entry
  %8 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !8446
  %9 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 0, !dbg !8446
  %10 = load i32, i32* %9, align 8, !dbg !8446
  %11 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 1, !dbg !8446
  %12 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !8446
  %call1 = call %struct.VEC_edge_gc* @ei_container(i32 %10, %struct.VEC_edge_gc** %12), !dbg !8446
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i32 0, i32 0, !dbg !8446
  br label %cond.end, !dbg !8446

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8446

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !8446
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 0, !dbg !8446
  %13 = load i32, i32* %index, align 8, !dbg !8446
  %call2 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %13), !dbg !8446
  ret %struct.edge_def* %call2, !dbg !8447
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #0 !dbg !8448 {
entry:
  %i = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %i.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %i.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %i, metadata !8451, metadata !DIExpression()), !dbg !8452
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 1, !dbg !8453
  %3 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %container, align 8, !dbg !8453
  %tobool = icmp ne %struct.VEC_edge_gc** %3, null, !dbg !8453
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !8453

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)), !dbg !8453
  br label %cond.end, !dbg !8453

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8453

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !8453
  %container1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 1, !dbg !8454
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %container1, align 8, !dbg !8454
  %5 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %4, align 8, !dbg !8455
  ret %struct.VEC_edge_gc* %5, !dbg !8456
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 %index) #0 !dbg !8457 {
entry:
  %retval = alloca %struct.df_scan_bb_info*, align 8
  %index.addr = alloca i32, align 4
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !8460, metadata !DIExpression()), !dbg !8461
  %0 = load i32, i32* %index.addr, align 4, !dbg !8462
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !8464
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %1, i32 0, i32 1, !dbg !8464
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 0, !dbg !8464
  %2 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !8464
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %2, i32 0, i32 2, !dbg !8465
  %3 = load i32, i32* %block_info_size, align 8, !dbg !8465
  %cmp = icmp ult i32 %0, %3, !dbg !8466
  br i1 %cmp, label %if.then, label %if.else, !dbg !8467

if.then:                                          ; preds = %entry
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !8468
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 1, !dbg !8468
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 0, !dbg !8468
  %5 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !8468
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %5, i32 0, i32 1, !dbg !8469
  %6 = load i8**, i8*** %block_info, align 8, !dbg !8469
  %7 = load i32, i32* %index.addr, align 4, !dbg !8470
  %idxprom = zext i32 %7 to i64, !dbg !8468
  %arrayidx3 = getelementptr inbounds i8*, i8** %6, i64 %idxprom, !dbg !8468
  %8 = load i8*, i8** %arrayidx3, align 8, !dbg !8468
  %9 = bitcast i8* %8 to %struct.df_scan_bb_info*, !dbg !8471
  store %struct.df_scan_bb_info* %9, %struct.df_scan_bb_info** %retval, align 8, !dbg !8472
  br label %return, !dbg !8472

if.else:                                          ; preds = %entry
  store %struct.df_scan_bb_info* null, %struct.df_scan_bb_info** %retval, align 8, !dbg !8473
  br label %return, !dbg !8473

return:                                           ; preds = %if.else, %if.then
  %10 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %retval, align 8, !dbg !8474
  ret %struct.df_scan_bb_info* %10, !dbg !8474
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @canon_hash(%struct.rtx_def* %x, i32 %mode) #0 !dbg !8475 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !8478, metadata !DIExpression()), !dbg !8479
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8480, metadata !DIExpression()), !dbg !8481
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8482
  %1 = load i32, i32* %mode.addr, align 4, !dbg !8483
  %call = call i32 @hash_rtx(%struct.rtx_def* %0, i32 %1, i32* @do_not_record, i32* @hash_arg_in_memory, i8 zeroext 1), !dbg !8484
  ret i32 %call, !dbg !8485
}

; Function Attrs: noinline nounwind uwtable
define internal void @delete_reg_equiv(i32 %reg) #0 !dbg !8486 {
entry:
  %reg.addr = alloca i32, align 4
  %ent = alloca %struct.qty_table_elem*, align 8
  %q = alloca i32, align 4
  %p = alloca i32, align 4
  %n = alloca i32, align 4
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !8487, metadata !DIExpression()), !dbg !8488
  call void @llvm.dbg.declare(metadata %struct.qty_table_elem** %ent, metadata !8489, metadata !DIExpression()), !dbg !8490
  call void @llvm.dbg.declare(metadata i32* %q, metadata !8491, metadata !DIExpression()), !dbg !8492
  %0 = load i32, i32* %reg.addr, align 4, !dbg !8493
  %call = call %struct.cse_reg_info* @get_cse_reg_info(i32 %0), !dbg !8493
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call, i32 0, i32 1, !dbg !8493
  %1 = load i32, i32* %reg_qty, align 4, !dbg !8493
  store i32 %1, i32* %q, align 4, !dbg !8492
  call void @llvm.dbg.declare(metadata i32* %p, metadata !8494, metadata !DIExpression()), !dbg !8495
  call void @llvm.dbg.declare(metadata i32* %n, metadata !8496, metadata !DIExpression()), !dbg !8497
  %2 = load i32, i32* %reg.addr, align 4, !dbg !8498
  %call1 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %2), !dbg !8498
  %reg_qty2 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call1, i32 0, i32 1, !dbg !8498
  %3 = load i32, i32* %reg_qty2, align 4, !dbg !8498
  %cmp = icmp sge i32 %3, 0, !dbg !8498
  br i1 %cmp, label %if.end, label %if.then, !dbg !8500

if.then:                                          ; preds = %entry
  br label %return, !dbg !8501

if.end:                                           ; preds = %entry
  %4 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8, !dbg !8502
  %5 = load i32, i32* %q, align 4, !dbg !8503
  %idxprom = sext i32 %5 to i64, !dbg !8502
  %arrayidx = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %4, i64 %idxprom, !dbg !8502
  store %struct.qty_table_elem* %arrayidx, %struct.qty_table_elem** %ent, align 8, !dbg !8504
  %6 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8, !dbg !8505
  %7 = load i32, i32* %reg.addr, align 4, !dbg !8506
  %idxprom3 = zext i32 %7 to i64, !dbg !8505
  %arrayidx4 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %6, i64 %idxprom3, !dbg !8505
  %prev = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx4, i32 0, i32 1, !dbg !8507
  %8 = load i32, i32* %prev, align 4, !dbg !8507
  store i32 %8, i32* %p, align 4, !dbg !8508
  %9 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8, !dbg !8509
  %10 = load i32, i32* %reg.addr, align 4, !dbg !8510
  %idxprom5 = zext i32 %10 to i64, !dbg !8509
  %arrayidx6 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %9, i64 %idxprom5, !dbg !8509
  %next = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx6, i32 0, i32 0, !dbg !8511
  %11 = load i32, i32* %next, align 4, !dbg !8511
  store i32 %11, i32* %n, align 4, !dbg !8512
  %12 = load i32, i32* %n, align 4, !dbg !8513
  %cmp7 = icmp ne i32 %12, -1, !dbg !8515
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !8516

if.then8:                                         ; preds = %if.end
  %13 = load i32, i32* %p, align 4, !dbg !8517
  %14 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8, !dbg !8518
  %15 = load i32, i32* %n, align 4, !dbg !8519
  %idxprom9 = sext i32 %15 to i64, !dbg !8518
  %arrayidx10 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %14, i64 %idxprom9, !dbg !8518
  %prev11 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx10, i32 0, i32 1, !dbg !8520
  store i32 %13, i32* %prev11, align 4, !dbg !8521
  br label %if.end12, !dbg !8518

if.else:                                          ; preds = %if.end
  %16 = load i32, i32* %p, align 4, !dbg !8522
  %17 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !8523
  %last_reg = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %17, i32 0, i32 5, !dbg !8524
  store i32 %16, i32* %last_reg, align 8, !dbg !8525
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then8
  %18 = load i32, i32* %p, align 4, !dbg !8526
  %cmp13 = icmp ne i32 %18, -1, !dbg !8528
  br i1 %cmp13, label %if.then14, label %if.else18, !dbg !8529

if.then14:                                        ; preds = %if.end12
  %19 = load i32, i32* %n, align 4, !dbg !8530
  %20 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8, !dbg !8531
  %21 = load i32, i32* %p, align 4, !dbg !8532
  %idxprom15 = sext i32 %21 to i64, !dbg !8531
  %arrayidx16 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %20, i64 %idxprom15, !dbg !8531
  %next17 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx16, i32 0, i32 0, !dbg !8533
  store i32 %19, i32* %next17, align 4, !dbg !8534
  br label %if.end19, !dbg !8531

if.else18:                                        ; preds = %if.end12
  %22 = load i32, i32* %n, align 4, !dbg !8535
  %23 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !8536
  %first_reg = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %23, i32 0, i32 4, !dbg !8537
  store i32 %22, i32* %first_reg, align 4, !dbg !8538
  br label %if.end19

if.end19:                                         ; preds = %if.else18, %if.then14
  %24 = load i32, i32* %reg.addr, align 4, !dbg !8539
  %sub = sub i32 0, %24, !dbg !8540
  %sub20 = sub i32 %sub, 1, !dbg !8541
  %25 = load i32, i32* %reg.addr, align 4, !dbg !8542
  %call21 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %25), !dbg !8542
  %reg_qty22 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call21, i32 0, i32 1, !dbg !8542
  store i32 %sub20, i32* %reg_qty22, align 4, !dbg !8543
  br label %return, !dbg !8544

return:                                           ; preds = %if.end19, %if.then
  ret void, !dbg !8544
}

; Function Attrs: noinline nounwind uwtable
define internal void @remove_pseudo_from_table(%struct.rtx_def* %x, i32 %hash) #0 !dbg !8545 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %hash.addr = alloca i32, align 4
  %elt = alloca %struct.table_elt*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !8548, metadata !DIExpression()), !dbg !8549
  store i32 %hash, i32* %hash.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hash.addr, metadata !8550, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.declare(metadata %struct.table_elt** %elt, metadata !8552, metadata !DIExpression()), !dbg !8553
  br label %while.cond, !dbg !8554

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8555
  %1 = load i32, i32* %hash.addr, align 4, !dbg !8556
  %call = call %struct.table_elt* @lookup_for_remove(%struct.rtx_def* %0, i32 %1, i32 0), !dbg !8557
  store %struct.table_elt* %call, %struct.table_elt** %elt, align 8, !dbg !8558
  %tobool = icmp ne %struct.table_elt* %call, null, !dbg !8554
  br i1 %tobool, label %while.body, label %while.end, !dbg !8554

while.body:                                       ; preds = %while.cond
  %2 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !8559
  %3 = load i32, i32* %hash.addr, align 4, !dbg !8560
  call void @remove_from_table(%struct.table_elt* %2, i32 %3), !dbg !8561
  br label %while.cond, !dbg !8554, !llvm.loop !8562

while.end:                                        ; preds = %while.cond
  ret void, !dbg !8564
}

; Function Attrs: noinline nounwind uwtable
define internal void @remove_from_table(%struct.table_elt* %elt, i32 %hash) #0 !dbg !8565 {
entry:
  %elt.addr = alloca %struct.table_elt*, align 8
  %hash.addr = alloca i32, align 4
  %prev = alloca %struct.table_elt*, align 8
  %next = alloca %struct.table_elt*, align 8
  %newfirst = alloca %struct.table_elt*, align 8
  %prev11 = alloca %struct.table_elt*, align 8
  %next12 = alloca %struct.table_elt*, align 8
  %p = alloca %struct.table_elt*, align 8
  store %struct.table_elt* %elt, %struct.table_elt** %elt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.table_elt** %elt.addr, metadata !8568, metadata !DIExpression()), !dbg !8569
  store i32 %hash, i32* %hash.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hash.addr, metadata !8570, metadata !DIExpression()), !dbg !8571
  %0 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8, !dbg !8572
  %cmp = icmp eq %struct.table_elt* %0, null, !dbg !8574
  br i1 %cmp, label %if.then, label %if.end, !dbg !8575

if.then:                                          ; preds = %entry
  br label %return, !dbg !8576

if.end:                                           ; preds = %entry
  %1 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8, !dbg !8577
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1, i32 0, i32 6, !dbg !8578
  store %struct.table_elt* null, %struct.table_elt** %first_same_value, align 8, !dbg !8579
  call void @llvm.dbg.declare(metadata %struct.table_elt** %prev, metadata !8580, metadata !DIExpression()), !dbg !8582
  %2 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8, !dbg !8583
  %prev_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %2, i32 0, i32 5, !dbg !8584
  %3 = load %struct.table_elt*, %struct.table_elt** %prev_same_value, align 8, !dbg !8584
  store %struct.table_elt* %3, %struct.table_elt** %prev, align 8, !dbg !8582
  call void @llvm.dbg.declare(metadata %struct.table_elt** %next, metadata !8585, metadata !DIExpression()), !dbg !8586
  %4 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8, !dbg !8587
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %4, i32 0, i32 4, !dbg !8588
  %5 = load %struct.table_elt*, %struct.table_elt** %next_same_value, align 8, !dbg !8588
  store %struct.table_elt* %5, %struct.table_elt** %next, align 8, !dbg !8586
  %6 = load %struct.table_elt*, %struct.table_elt** %next, align 8, !dbg !8589
  %tobool = icmp ne %struct.table_elt* %6, null, !dbg !8589
  br i1 %tobool, label %if.then1, label %if.end3, !dbg !8591

if.then1:                                         ; preds = %if.end
  %7 = load %struct.table_elt*, %struct.table_elt** %prev, align 8, !dbg !8592
  %8 = load %struct.table_elt*, %struct.table_elt** %next, align 8, !dbg !8593
  %prev_same_value2 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %8, i32 0, i32 5, !dbg !8594
  store %struct.table_elt* %7, %struct.table_elt** %prev_same_value2, align 8, !dbg !8595
  br label %if.end3, !dbg !8593

if.end3:                                          ; preds = %if.then1, %if.end
  %9 = load %struct.table_elt*, %struct.table_elt** %prev, align 8, !dbg !8596
  %tobool4 = icmp ne %struct.table_elt* %9, null, !dbg !8596
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !8598

if.then5:                                         ; preds = %if.end3
  %10 = load %struct.table_elt*, %struct.table_elt** %next, align 8, !dbg !8599
  %11 = load %struct.table_elt*, %struct.table_elt** %prev, align 8, !dbg !8600
  %next_same_value6 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %11, i32 0, i32 4, !dbg !8601
  store %struct.table_elt* %10, %struct.table_elt** %next_same_value6, align 8, !dbg !8602
  br label %if.end10, !dbg !8600

if.else:                                          ; preds = %if.end3
  call void @llvm.dbg.declare(metadata %struct.table_elt** %newfirst, metadata !8603, metadata !DIExpression()), !dbg !8605
  %12 = load %struct.table_elt*, %struct.table_elt** %next, align 8, !dbg !8606
  store %struct.table_elt* %12, %struct.table_elt** %newfirst, align 8, !dbg !8605
  br label %while.cond, !dbg !8607

while.cond:                                       ; preds = %while.body, %if.else
  %13 = load %struct.table_elt*, %struct.table_elt** %next, align 8, !dbg !8608
  %tobool7 = icmp ne %struct.table_elt* %13, null, !dbg !8607
  br i1 %tobool7, label %while.body, label %while.end, !dbg !8607

while.body:                                       ; preds = %while.cond
  %14 = load %struct.table_elt*, %struct.table_elt** %newfirst, align 8, !dbg !8609
  %15 = load %struct.table_elt*, %struct.table_elt** %next, align 8, !dbg !8611
  %first_same_value8 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %15, i32 0, i32 6, !dbg !8612
  store %struct.table_elt* %14, %struct.table_elt** %first_same_value8, align 8, !dbg !8613
  %16 = load %struct.table_elt*, %struct.table_elt** %next, align 8, !dbg !8614
  %next_same_value9 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %16, i32 0, i32 4, !dbg !8615
  %17 = load %struct.table_elt*, %struct.table_elt** %next_same_value9, align 8, !dbg !8615
  store %struct.table_elt* %17, %struct.table_elt** %next, align 8, !dbg !8616
  br label %while.cond, !dbg !8607, !llvm.loop !8617

while.end:                                        ; preds = %while.cond
  br label %if.end10

if.end10:                                         ; preds = %while.end, %if.then5
  call void @llvm.dbg.declare(metadata %struct.table_elt** %prev11, metadata !8619, metadata !DIExpression()), !dbg !8621
  %18 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8, !dbg !8622
  %prev_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %18, i32 0, i32 3, !dbg !8623
  %19 = load %struct.table_elt*, %struct.table_elt** %prev_same_hash, align 8, !dbg !8623
  store %struct.table_elt* %19, %struct.table_elt** %prev11, align 8, !dbg !8621
  call void @llvm.dbg.declare(metadata %struct.table_elt** %next12, metadata !8624, metadata !DIExpression()), !dbg !8625
  %20 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8, !dbg !8626
  %next_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %20, i32 0, i32 2, !dbg !8627
  %21 = load %struct.table_elt*, %struct.table_elt** %next_same_hash, align 8, !dbg !8627
  store %struct.table_elt* %21, %struct.table_elt** %next12, align 8, !dbg !8625
  %22 = load %struct.table_elt*, %struct.table_elt** %next12, align 8, !dbg !8628
  %tobool13 = icmp ne %struct.table_elt* %22, null, !dbg !8628
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !8630

if.then14:                                        ; preds = %if.end10
  %23 = load %struct.table_elt*, %struct.table_elt** %prev11, align 8, !dbg !8631
  %24 = load %struct.table_elt*, %struct.table_elt** %next12, align 8, !dbg !8632
  %prev_same_hash15 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %24, i32 0, i32 3, !dbg !8633
  store %struct.table_elt* %23, %struct.table_elt** %prev_same_hash15, align 8, !dbg !8634
  br label %if.end16, !dbg !8632

if.end16:                                         ; preds = %if.then14, %if.end10
  %25 = load %struct.table_elt*, %struct.table_elt** %prev11, align 8, !dbg !8635
  %tobool17 = icmp ne %struct.table_elt* %25, null, !dbg !8635
  br i1 %tobool17, label %if.then18, label %if.else20, !dbg !8637

if.then18:                                        ; preds = %if.end16
  %26 = load %struct.table_elt*, %struct.table_elt** %next12, align 8, !dbg !8638
  %27 = load %struct.table_elt*, %struct.table_elt** %prev11, align 8, !dbg !8639
  %next_same_hash19 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %27, i32 0, i32 2, !dbg !8640
  store %struct.table_elt* %26, %struct.table_elt** %next_same_hash19, align 8, !dbg !8641
  br label %if.end35, !dbg !8639

if.else20:                                        ; preds = %if.end16
  %28 = load i32, i32* %hash.addr, align 4, !dbg !8642
  %idxprom = zext i32 %28 to i64, !dbg !8644
  %arrayidx = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom, !dbg !8644
  %29 = load %struct.table_elt*, %struct.table_elt** %arrayidx, align 8, !dbg !8644
  %30 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8, !dbg !8645
  %cmp21 = icmp eq %struct.table_elt* %29, %30, !dbg !8646
  br i1 %cmp21, label %if.then22, label %if.else25, !dbg !8647

if.then22:                                        ; preds = %if.else20
  %31 = load %struct.table_elt*, %struct.table_elt** %next12, align 8, !dbg !8648
  %32 = load i32, i32* %hash.addr, align 4, !dbg !8649
  %idxprom23 = zext i32 %32 to i64, !dbg !8650
  %arrayidx24 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom23, !dbg !8650
  store %struct.table_elt* %31, %struct.table_elt** %arrayidx24, align 8, !dbg !8651
  br label %if.end34, !dbg !8650

if.else25:                                        ; preds = %if.else20
  store i32 0, i32* %hash.addr, align 4, !dbg !8652
  br label %for.cond, !dbg !8655

for.cond:                                         ; preds = %for.inc, %if.else25
  %33 = load i32, i32* %hash.addr, align 4, !dbg !8656
  %cmp26 = icmp ult i32 %33, 32, !dbg !8658
  br i1 %cmp26, label %for.body, label %for.end, !dbg !8659

for.body:                                         ; preds = %for.cond
  %34 = load i32, i32* %hash.addr, align 4, !dbg !8660
  %idxprom27 = zext i32 %34 to i64, !dbg !8662
  %arrayidx28 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom27, !dbg !8662
  %35 = load %struct.table_elt*, %struct.table_elt** %arrayidx28, align 8, !dbg !8662
  %36 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8, !dbg !8663
  %cmp29 = icmp eq %struct.table_elt* %35, %36, !dbg !8664
  br i1 %cmp29, label %if.then30, label %if.end33, !dbg !8665

if.then30:                                        ; preds = %for.body
  %37 = load %struct.table_elt*, %struct.table_elt** %next12, align 8, !dbg !8666
  %38 = load i32, i32* %hash.addr, align 4, !dbg !8667
  %idxprom31 = zext i32 %38 to i64, !dbg !8668
  %arrayidx32 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom31, !dbg !8668
  store %struct.table_elt* %37, %struct.table_elt** %arrayidx32, align 8, !dbg !8669
  br label %if.end33, !dbg !8668

if.end33:                                         ; preds = %if.then30, %for.body
  br label %for.inc, !dbg !8663

for.inc:                                          ; preds = %if.end33
  %39 = load i32, i32* %hash.addr, align 4, !dbg !8670
  %inc = add i32 %39, 1, !dbg !8670
  store i32 %inc, i32* %hash.addr, align 4, !dbg !8670
  br label %for.cond, !dbg !8671, !llvm.loop !8672

for.end:                                          ; preds = %for.cond
  br label %if.end34

if.end34:                                         ; preds = %for.end, %if.then22
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then18
  %40 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8, !dbg !8674
  %related_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %40, i32 0, i32 7, !dbg !8676
  %41 = load %struct.table_elt*, %struct.table_elt** %related_value, align 8, !dbg !8676
  %cmp36 = icmp ne %struct.table_elt* %41, null, !dbg !8677
  br i1 %cmp36, label %land.lhs.true, label %if.end54, !dbg !8678

land.lhs.true:                                    ; preds = %if.end35
  %42 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8, !dbg !8679
  %related_value37 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %42, i32 0, i32 7, !dbg !8680
  %43 = load %struct.table_elt*, %struct.table_elt** %related_value37, align 8, !dbg !8680
  %44 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8, !dbg !8681
  %cmp38 = icmp ne %struct.table_elt* %43, %44, !dbg !8682
  br i1 %cmp38, label %if.then39, label %if.end54, !dbg !8683

if.then39:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.table_elt** %p, metadata !8684, metadata !DIExpression()), !dbg !8686
  %45 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8, !dbg !8687
  %related_value40 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %45, i32 0, i32 7, !dbg !8688
  %46 = load %struct.table_elt*, %struct.table_elt** %related_value40, align 8, !dbg !8688
  store %struct.table_elt* %46, %struct.table_elt** %p, align 8, !dbg !8686
  br label %while.cond41, !dbg !8689

while.cond41:                                     ; preds = %while.body44, %if.then39
  %47 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !8690
  %related_value42 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %47, i32 0, i32 7, !dbg !8691
  %48 = load %struct.table_elt*, %struct.table_elt** %related_value42, align 8, !dbg !8691
  %49 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8, !dbg !8692
  %cmp43 = icmp ne %struct.table_elt* %48, %49, !dbg !8693
  br i1 %cmp43, label %while.body44, label %while.end46, !dbg !8689

while.body44:                                     ; preds = %while.cond41
  %50 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !8694
  %related_value45 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %50, i32 0, i32 7, !dbg !8695
  %51 = load %struct.table_elt*, %struct.table_elt** %related_value45, align 8, !dbg !8695
  store %struct.table_elt* %51, %struct.table_elt** %p, align 8, !dbg !8696
  br label %while.cond41, !dbg !8689, !llvm.loop !8697

while.end46:                                      ; preds = %while.cond41
  %52 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8, !dbg !8698
  %related_value47 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %52, i32 0, i32 7, !dbg !8699
  %53 = load %struct.table_elt*, %struct.table_elt** %related_value47, align 8, !dbg !8699
  %54 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !8700
  %related_value48 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %54, i32 0, i32 7, !dbg !8701
  store %struct.table_elt* %53, %struct.table_elt** %related_value48, align 8, !dbg !8702
  %55 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !8703
  %related_value49 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %55, i32 0, i32 7, !dbg !8705
  %56 = load %struct.table_elt*, %struct.table_elt** %related_value49, align 8, !dbg !8705
  %57 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !8706
  %cmp50 = icmp eq %struct.table_elt* %56, %57, !dbg !8707
  br i1 %cmp50, label %if.then51, label %if.end53, !dbg !8708

if.then51:                                        ; preds = %while.end46
  %58 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !8709
  %related_value52 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %58, i32 0, i32 7, !dbg !8710
  store %struct.table_elt* null, %struct.table_elt** %related_value52, align 8, !dbg !8711
  br label %if.end53, !dbg !8709

if.end53:                                         ; preds = %if.then51, %while.end46
  br label %if.end54, !dbg !8712

if.end54:                                         ; preds = %if.end53, %land.lhs.true, %if.end35
  %59 = load %struct.table_elt*, %struct.table_elt** @free_element_chain, align 8, !dbg !8713
  %60 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8, !dbg !8714
  %next_same_hash55 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %60, i32 0, i32 2, !dbg !8715
  store %struct.table_elt* %59, %struct.table_elt** %next_same_hash55, align 8, !dbg !8716
  %61 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8, !dbg !8717
  store %struct.table_elt* %61, %struct.table_elt** @free_element_chain, align 8, !dbg !8718
  br label %return, !dbg !8719

return:                                           ; preds = %if.end54, %if.then
  ret void, !dbg !8719
}

declare dso_local %struct.rtx_def* @canon_rtx(%struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @get_addr(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @check_dependence(%struct.rtx_def** %x, i8* %data) #0 !dbg !8720 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def**, align 8
  %data.addr = alloca i8*, align 8
  %d = alloca %struct.check_dependence_data*, align 8
  store %struct.rtx_def** %x, %struct.rtx_def*** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %x.addr, metadata !8721, metadata !DIExpression()), !dbg !8722
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8723, metadata !DIExpression()), !dbg !8724
  call void @llvm.dbg.declare(metadata %struct.check_dependence_data** %d, metadata !8725, metadata !DIExpression()), !dbg !8726
  %0 = load i8*, i8** %data.addr, align 8, !dbg !8727
  %1 = bitcast i8* %0 to %struct.check_dependence_data*, !dbg !8728
  store %struct.check_dependence_data* %1, %struct.check_dependence_data** %d, align 8, !dbg !8726
  %2 = load %struct.rtx_def**, %struct.rtx_def*** %x.addr, align 8, !dbg !8729
  %3 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8, !dbg !8731
  %tobool = icmp ne %struct.rtx_def* %3, null, !dbg !8731
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !8732

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.rtx_def**, %struct.rtx_def*** %x.addr, align 8, !dbg !8733
  %5 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8, !dbg !8733
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !8733
  %bf.load = load i32, i32* %6, align 8, !dbg !8733
  %bf.clear = and i32 %bf.load, 65535, !dbg !8733
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !8733
  br i1 %cmp, label %if.then, label %if.else, !dbg !8734

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.check_dependence_data*, %struct.check_dependence_data** %d, align 8, !dbg !8735
  %exp = getelementptr inbounds %struct.check_dependence_data, %struct.check_dependence_data* %7, i32 0, i32 1, !dbg !8736
  %8 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !8736
  %9 = load %struct.check_dependence_data*, %struct.check_dependence_data** %d, align 8, !dbg !8737
  %mode = getelementptr inbounds %struct.check_dependence_data, %struct.check_dependence_data* %9, i32 0, i32 0, !dbg !8738
  %10 = load i32, i32* %mode, align 8, !dbg !8738
  %11 = load %struct.check_dependence_data*, %struct.check_dependence_data** %d, align 8, !dbg !8739
  %addr = getelementptr inbounds %struct.check_dependence_data, %struct.check_dependence_data* %11, i32 0, i32 2, !dbg !8740
  %12 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !8740
  %13 = load %struct.rtx_def**, %struct.rtx_def*** %x.addr, align 8, !dbg !8741
  %14 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8, !dbg !8742
  %call = call i32 @canon_true_dependence(%struct.rtx_def* %8, i32 %10, %struct.rtx_def* %12, %struct.rtx_def* %14, %struct.rtx_def* null, i8 (%struct.rtx_def*, i8)* @cse_rtx_varies_p), !dbg !8743
  store i32 %call, i32* %retval, align 4, !dbg !8744
  br label %return, !dbg !8744

if.else:                                          ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !8745
  br label %return, !dbg !8745

return:                                           ; preds = %if.else, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !8746
  ret i32 %15, !dbg !8746
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.table_elt* @lookup_for_remove(%struct.rtx_def* %x, i32 %hash, i32 %mode) #0 !dbg !8747 {
entry:
  %retval = alloca %struct.table_elt*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %hash.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %p = alloca %struct.table_elt*, align 8
  %regno = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !8750, metadata !DIExpression()), !dbg !8751
  store i32 %hash, i32* %hash.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hash.addr, metadata !8752, metadata !DIExpression()), !dbg !8753
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8754, metadata !DIExpression()), !dbg !8755
  call void @llvm.dbg.declare(metadata %struct.table_elt** %p, metadata !8756, metadata !DIExpression()), !dbg !8757
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8758
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !8758
  %bf.load = load i32, i32* %1, align 8, !dbg !8758
  %bf.clear = and i32 %bf.load, 65535, !dbg !8758
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !8758
  br i1 %cmp, label %if.then, label %if.else, !dbg !8760

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !8761, metadata !DIExpression()), !dbg !8763
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8764
  %call = call i32 @rhs_regno(%struct.rtx_def* %2), !dbg !8764
  store i32 %call, i32* %regno, align 4, !dbg !8763
  %3 = load i32, i32* %hash.addr, align 4, !dbg !8765
  %idxprom = zext i32 %3 to i64, !dbg !8767
  %arrayidx = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom, !dbg !8767
  %4 = load %struct.table_elt*, %struct.table_elt** %arrayidx, align 8, !dbg !8767
  store %struct.table_elt* %4, %struct.table_elt** %p, align 8, !dbg !8768
  br label %for.cond, !dbg !8769

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !8770
  %tobool = icmp ne %struct.table_elt* %5, null, !dbg !8772
  br i1 %tobool, label %for.body, label %for.end, !dbg !8772

for.body:                                         ; preds = %for.cond
  %6 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !8773
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %6, i32 0, i32 0, !dbg !8773
  %7 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !8773
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !8773
  %bf.load1 = load i32, i32* %8, align 8, !dbg !8773
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !8773
  %cmp3 = icmp eq i32 %bf.clear2, 37, !dbg !8773
  br i1 %cmp3, label %land.lhs.true, label %if.end, !dbg !8775

land.lhs.true:                                    ; preds = %for.body
  %9 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !8776
  %exp4 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %9, i32 0, i32 0, !dbg !8776
  %10 = load %struct.rtx_def*, %struct.rtx_def** %exp4, align 8, !dbg !8776
  %call5 = call i32 @rhs_regno(%struct.rtx_def* %10), !dbg !8776
  %11 = load i32, i32* %regno, align 4, !dbg !8777
  %cmp6 = icmp eq i32 %call5, %11, !dbg !8778
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !8779

if.then7:                                         ; preds = %land.lhs.true
  %12 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !8780
  store %struct.table_elt* %12, %struct.table_elt** %retval, align 8, !dbg !8781
  br label %return, !dbg !8781

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !8777

for.inc:                                          ; preds = %if.end
  %13 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !8782
  %next_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %13, i32 0, i32 2, !dbg !8783
  %14 = load %struct.table_elt*, %struct.table_elt** %next_same_hash, align 8, !dbg !8783
  store %struct.table_elt* %14, %struct.table_elt** %p, align 8, !dbg !8784
  br label %for.cond, !dbg !8785, !llvm.loop !8786

for.end:                                          ; preds = %for.cond
  br label %if.end27, !dbg !8788

if.else:                                          ; preds = %entry
  %15 = load i32, i32* %hash.addr, align 4, !dbg !8789
  %idxprom8 = zext i32 %15 to i64, !dbg !8792
  %arrayidx9 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom8, !dbg !8792
  %16 = load %struct.table_elt*, %struct.table_elt** %arrayidx9, align 8, !dbg !8792
  store %struct.table_elt* %16, %struct.table_elt** %p, align 8, !dbg !8793
  br label %for.cond10, !dbg !8794

for.cond10:                                       ; preds = %for.inc24, %if.else
  %17 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !8795
  %tobool11 = icmp ne %struct.table_elt* %17, null, !dbg !8797
  br i1 %tobool11, label %for.body12, label %for.end26, !dbg !8797

for.body12:                                       ; preds = %for.cond10
  %18 = load i32, i32* %mode.addr, align 4, !dbg !8798
  %19 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !8800
  %mode13 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %19, i32 0, i32 10, !dbg !8801
  %bf.load14 = load i8, i8* %mode13, align 8, !dbg !8801
  %bf.cast = zext i8 %bf.load14 to i32, !dbg !8801
  %cmp15 = icmp eq i32 %18, %bf.cast, !dbg !8802
  br i1 %cmp15, label %land.lhs.true16, label %if.end23, !dbg !8803

land.lhs.true16:                                  ; preds = %for.body12
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8804
  %21 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !8805
  %exp17 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %21, i32 0, i32 0, !dbg !8806
  %22 = load %struct.rtx_def*, %struct.rtx_def** %exp17, align 8, !dbg !8806
  %cmp18 = icmp eq %struct.rtx_def* %20, %22, !dbg !8807
  br i1 %cmp18, label %if.then22, label %lor.lhs.false, !dbg !8808

lor.lhs.false:                                    ; preds = %land.lhs.true16
  %23 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8809
  %24 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !8810
  %exp19 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %24, i32 0, i32 0, !dbg !8811
  %25 = load %struct.rtx_def*, %struct.rtx_def** %exp19, align 8, !dbg !8811
  %call20 = call i32 @exp_equiv_p(%struct.rtx_def* %23, %struct.rtx_def* %25, i32 0, i8 zeroext 0), !dbg !8812
  %tobool21 = icmp ne i32 %call20, 0, !dbg !8812
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !8813

if.then22:                                        ; preds = %lor.lhs.false, %land.lhs.true16
  %26 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !8814
  store %struct.table_elt* %26, %struct.table_elt** %retval, align 8, !dbg !8815
  br label %return, !dbg !8815

if.end23:                                         ; preds = %lor.lhs.false, %for.body12
  br label %for.inc24, !dbg !8816

for.inc24:                                        ; preds = %if.end23
  %27 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !8817
  %next_same_hash25 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %27, i32 0, i32 2, !dbg !8818
  %28 = load %struct.table_elt*, %struct.table_elt** %next_same_hash25, align 8, !dbg !8818
  store %struct.table_elt* %28, %struct.table_elt** %p, align 8, !dbg !8819
  br label %for.cond10, !dbg !8820, !llvm.loop !8821

for.end26:                                        ; preds = %for.cond10
  br label %if.end27

if.end27:                                         ; preds = %for.end26, %for.end
  store %struct.table_elt* null, %struct.table_elt** %retval, align 8, !dbg !8823
  br label %return, !dbg !8823

return:                                           ; preds = %if.end27, %if.then22, %if.then7
  %29 = load %struct.table_elt*, %struct.table_elt** %retval, align 8, !dbg !8824
  ret %struct.table_elt* %29, !dbg !8824
}

declare dso_local i32 @canon_true_dependence(%struct.rtx_def*, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i8 (%struct.rtx_def*, i8)*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @cse_rtx_varies_p(%struct.rtx_def* %x, i8 zeroext %from_alias) #0 !dbg !8825 {
entry:
  %retval = alloca i8, align 1
  %x.addr = alloca %struct.rtx_def*, align 8
  %from_alias.addr = alloca i8, align 1
  %x_q = alloca i32, align 4
  %x_ent = alloca %struct.qty_table_elem*, align 8
  %x0_q = alloca i32, align 4
  %x0_ent = alloca %struct.qty_table_elem*, align 8
  %x0_q107 = alloca i32, align 4
  %x1_q = alloca i32, align 4
  %x0_ent122 = alloca %struct.qty_table_elem*, align 8
  %x1_ent = alloca %struct.qty_table_elem*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !8828, metadata !DIExpression()), !dbg !8829
  store i8 %from_alias, i8* %from_alias.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %from_alias.addr, metadata !8830, metadata !DIExpression()), !dbg !8831
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8832
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !8832
  %bf.load = load i32, i32* %1, align 8, !dbg !8832
  %bf.clear = and i32 %bf.load, 65535, !dbg !8832
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !8832
  br i1 %cmp, label %land.lhs.true, label %if.end15, !dbg !8834

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8835
  %call = call i32 @rhs_regno(%struct.rtx_def* %2), !dbg !8835
  %call1 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call), !dbg !8835
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call1, i32 0, i32 1, !dbg !8835
  %3 = load i32, i32* %reg_qty, align 4, !dbg !8835
  %cmp2 = icmp sge i32 %3, 0, !dbg !8835
  br i1 %cmp2, label %if.then, label %if.end15, !dbg !8836

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %x_q, metadata !8837, metadata !DIExpression()), !dbg !8839
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8840
  %call3 = call i32 @rhs_regno(%struct.rtx_def* %4), !dbg !8840
  %call4 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call3), !dbg !8840
  %reg_qty5 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call4, i32 0, i32 1, !dbg !8840
  %5 = load i32, i32* %reg_qty5, align 4, !dbg !8840
  store i32 %5, i32* %x_q, align 4, !dbg !8839
  call void @llvm.dbg.declare(metadata %struct.qty_table_elem** %x_ent, metadata !8841, metadata !DIExpression()), !dbg !8842
  %6 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8, !dbg !8843
  %7 = load i32, i32* %x_q, align 4, !dbg !8844
  %idxprom = sext i32 %7 to i64, !dbg !8843
  %arrayidx = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %6, i64 %idxprom, !dbg !8843
  store %struct.qty_table_elem* %arrayidx, %struct.qty_table_elem** %x_ent, align 8, !dbg !8842
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8845
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !8845
  %bf.load6 = load i32, i32* %9, align 8, !dbg !8845
  %bf.lshr = lshr i32 %bf.load6, 16, !dbg !8845
  %bf.clear7 = and i32 %bf.lshr, 255, !dbg !8845
  %10 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x_ent, align 8, !dbg !8847
  %mode = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %10, i32 0, i32 6, !dbg !8848
  %11 = bitcast i24* %mode to i32*, !dbg !8848
  %bf.load8 = load i32, i32* %11, align 4, !dbg !8848
  %bf.lshr9 = lshr i32 %bf.load8, 16, !dbg !8848
  %bf.clear10 = and i32 %bf.lshr9, 255, !dbg !8848
  %cmp11 = icmp eq i32 %bf.clear7, %bf.clear10, !dbg !8849
  br i1 %cmp11, label %land.lhs.true12, label %if.end, !dbg !8850

land.lhs.true12:                                  ; preds = %if.then
  %12 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x_ent, align 8, !dbg !8851
  %const_rtx = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %12, i32 0, i32 0, !dbg !8852
  %13 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx, align 8, !dbg !8852
  %cmp13 = icmp ne %struct.rtx_def* %13, null, !dbg !8853
  br i1 %cmp13, label %if.then14, label %if.end, !dbg !8854

if.then14:                                        ; preds = %land.lhs.true12
  store i8 0, i8* %retval, align 1, !dbg !8855
  br label %return, !dbg !8855

if.end:                                           ; preds = %land.lhs.true12, %if.then
  br label %if.end15, !dbg !8856

if.end15:                                         ; preds = %if.end, %land.lhs.true, %entry
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8857
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !8857
  %bf.load16 = load i32, i32* %15, align 8, !dbg !8857
  %bf.clear17 = and i32 %bf.load16, 65535, !dbg !8857
  %cmp18 = icmp eq i32 %bf.clear17, 49, !dbg !8859
  br i1 %cmp18, label %land.lhs.true19, label %if.end68, !dbg !8860

land.lhs.true19:                                  ; preds = %if.end15
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8861
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !8861
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8861
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !8861
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**, !dbg !8861
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8861
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !8861
  %bf.load21 = load i32, i32* %18, align 8, !dbg !8861
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !8861
  %cmp23 = icmp eq i32 %bf.clear22, 30, !dbg !8861
  br i1 %cmp23, label %land.lhs.true24, label %if.end68, !dbg !8862

land.lhs.true24:                                  ; preds = %land.lhs.true19
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8863
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !8863
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !8863
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 0, !dbg !8863
  %rt_rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !8863
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !8863
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !8863
  %bf.load29 = load i32, i32* %21, align 8, !dbg !8863
  %bf.clear30 = and i32 %bf.load29, 65535, !dbg !8863
  %cmp31 = icmp eq i32 %bf.clear30, 37, !dbg !8863
  br i1 %cmp31, label %land.lhs.true32, label %if.end68, !dbg !8864

land.lhs.true32:                                  ; preds = %land.lhs.true24
  %22 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8865
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !8865
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !8865
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 0, !dbg !8865
  %rt_rtx36 = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtx_def**, !dbg !8865
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx36, align 8, !dbg !8865
  %call37 = call i32 @rhs_regno(%struct.rtx_def* %23), !dbg !8865
  %call38 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call37), !dbg !8865
  %reg_qty39 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call38, i32 0, i32 1, !dbg !8865
  %24 = load i32, i32* %reg_qty39, align 4, !dbg !8865
  %cmp40 = icmp sge i32 %24, 0, !dbg !8865
  br i1 %cmp40, label %if.then41, label %if.end68, !dbg !8866

if.then41:                                        ; preds = %land.lhs.true32
  call void @llvm.dbg.declare(metadata i32* %x0_q, metadata !8867, metadata !DIExpression()), !dbg !8869
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8870
  %u42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !8870
  %fld43 = bitcast %union.u* %u42 to [1 x %union.rtunion_def]*, !dbg !8870
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i64 0, i64 0, !dbg !8870
  %rt_rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**, !dbg !8870
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx45, align 8, !dbg !8870
  %call46 = call i32 @rhs_regno(%struct.rtx_def* %26), !dbg !8870
  %call47 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call46), !dbg !8870
  %reg_qty48 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call47, i32 0, i32 1, !dbg !8870
  %27 = load i32, i32* %reg_qty48, align 4, !dbg !8870
  store i32 %27, i32* %x0_q, align 4, !dbg !8869
  call void @llvm.dbg.declare(metadata %struct.qty_table_elem** %x0_ent, metadata !8871, metadata !DIExpression()), !dbg !8872
  %28 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8, !dbg !8873
  %29 = load i32, i32* %x0_q, align 4, !dbg !8874
  %idxprom49 = sext i32 %29 to i64, !dbg !8873
  %arrayidx50 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %28, i64 %idxprom49, !dbg !8873
  store %struct.qty_table_elem* %arrayidx50, %struct.qty_table_elem** %x0_ent, align 8, !dbg !8872
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8875
  %u51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !8875
  %fld52 = bitcast %union.u* %u51 to [1 x %union.rtunion_def]*, !dbg !8875
  %arrayidx53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld52, i64 0, i64 0, !dbg !8875
  %rt_rtx54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtx_def**, !dbg !8875
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx54, align 8, !dbg !8875
  %32 = bitcast %struct.rtx_def* %31 to i32*, !dbg !8875
  %bf.load55 = load i32, i32* %32, align 8, !dbg !8875
  %bf.lshr56 = lshr i32 %bf.load55, 16, !dbg !8875
  %bf.clear57 = and i32 %bf.lshr56, 255, !dbg !8875
  %33 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x0_ent, align 8, !dbg !8877
  %mode58 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %33, i32 0, i32 6, !dbg !8878
  %34 = bitcast i24* %mode58 to i32*, !dbg !8878
  %bf.load59 = load i32, i32* %34, align 4, !dbg !8878
  %bf.lshr60 = lshr i32 %bf.load59, 16, !dbg !8878
  %bf.clear61 = and i32 %bf.lshr60, 255, !dbg !8878
  %cmp62 = icmp eq i32 %bf.clear57, %bf.clear61, !dbg !8879
  br i1 %cmp62, label %land.lhs.true63, label %if.end67, !dbg !8880

land.lhs.true63:                                  ; preds = %if.then41
  %35 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x0_ent, align 8, !dbg !8881
  %const_rtx64 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %35, i32 0, i32 0, !dbg !8882
  %36 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx64, align 8, !dbg !8882
  %cmp65 = icmp ne %struct.rtx_def* %36, null, !dbg !8883
  br i1 %cmp65, label %if.then66, label %if.end67, !dbg !8884

if.then66:                                        ; preds = %land.lhs.true63
  store i8 0, i8* %retval, align 1, !dbg !8885
  br label %return, !dbg !8885

if.end67:                                         ; preds = %land.lhs.true63, %if.then41
  br label %if.end68, !dbg !8886

if.end68:                                         ; preds = %if.end67, %land.lhs.true32, %land.lhs.true24, %land.lhs.true19, %if.end15
  %37 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8887
  %38 = bitcast %struct.rtx_def* %37 to i32*, !dbg !8887
  %bf.load69 = load i32, i32* %38, align 8, !dbg !8887
  %bf.clear70 = and i32 %bf.load69, 65535, !dbg !8887
  %cmp71 = icmp eq i32 %bf.clear70, 49, !dbg !8889
  br i1 %cmp71, label %land.lhs.true72, label %if.end160, !dbg !8890

land.lhs.true72:                                  ; preds = %if.end68
  %39 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8891
  %u73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !8891
  %fld74 = bitcast %union.u* %u73 to [1 x %union.rtunion_def]*, !dbg !8891
  %arrayidx75 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld74, i64 0, i64 0, !dbg !8891
  %rt_rtx76 = bitcast %union.rtunion_def* %arrayidx75 to %struct.rtx_def**, !dbg !8891
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx76, align 8, !dbg !8891
  %41 = bitcast %struct.rtx_def* %40 to i32*, !dbg !8891
  %bf.load77 = load i32, i32* %41, align 8, !dbg !8891
  %bf.clear78 = and i32 %bf.load77, 65535, !dbg !8891
  %cmp79 = icmp eq i32 %bf.clear78, 37, !dbg !8891
  br i1 %cmp79, label %land.lhs.true80, label %if.end160, !dbg !8892

land.lhs.true80:                                  ; preds = %land.lhs.true72
  %42 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8893
  %u81 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !8893
  %fld82 = bitcast %union.u* %u81 to [1 x %union.rtunion_def]*, !dbg !8893
  %arrayidx83 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld82, i64 0, i64 1, !dbg !8893
  %rt_rtx84 = bitcast %union.rtunion_def* %arrayidx83 to %struct.rtx_def**, !dbg !8893
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx84, align 8, !dbg !8893
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !8893
  %bf.load85 = load i32, i32* %44, align 8, !dbg !8893
  %bf.clear86 = and i32 %bf.load85, 65535, !dbg !8893
  %cmp87 = icmp eq i32 %bf.clear86, 37, !dbg !8893
  br i1 %cmp87, label %land.lhs.true88, label %if.end160, !dbg !8894

land.lhs.true88:                                  ; preds = %land.lhs.true80
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8895
  %u89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !8895
  %fld90 = bitcast %union.u* %u89 to [1 x %union.rtunion_def]*, !dbg !8895
  %arrayidx91 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld90, i64 0, i64 0, !dbg !8895
  %rt_rtx92 = bitcast %union.rtunion_def* %arrayidx91 to %struct.rtx_def**, !dbg !8895
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx92, align 8, !dbg !8895
  %call93 = call i32 @rhs_regno(%struct.rtx_def* %46), !dbg !8895
  %call94 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call93), !dbg !8895
  %reg_qty95 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call94, i32 0, i32 1, !dbg !8895
  %47 = load i32, i32* %reg_qty95, align 4, !dbg !8895
  %cmp96 = icmp sge i32 %47, 0, !dbg !8895
  br i1 %cmp96, label %land.lhs.true97, label %if.end160, !dbg !8896

land.lhs.true97:                                  ; preds = %land.lhs.true88
  %48 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8897
  %u98 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1, !dbg !8897
  %fld99 = bitcast %union.u* %u98 to [1 x %union.rtunion_def]*, !dbg !8897
  %arrayidx100 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld99, i64 0, i64 1, !dbg !8897
  %rt_rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**, !dbg !8897
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx101, align 8, !dbg !8897
  %call102 = call i32 @rhs_regno(%struct.rtx_def* %49), !dbg !8897
  %call103 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call102), !dbg !8897
  %reg_qty104 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call103, i32 0, i32 1, !dbg !8897
  %50 = load i32, i32* %reg_qty104, align 4, !dbg !8897
  %cmp105 = icmp sge i32 %50, 0, !dbg !8897
  br i1 %cmp105, label %if.then106, label %if.end160, !dbg !8898

if.then106:                                       ; preds = %land.lhs.true97
  call void @llvm.dbg.declare(metadata i32* %x0_q107, metadata !8899, metadata !DIExpression()), !dbg !8901
  %51 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8902
  %u108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1, !dbg !8902
  %fld109 = bitcast %union.u* %u108 to [1 x %union.rtunion_def]*, !dbg !8902
  %arrayidx110 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld109, i64 0, i64 0, !dbg !8902
  %rt_rtx111 = bitcast %union.rtunion_def* %arrayidx110 to %struct.rtx_def**, !dbg !8902
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx111, align 8, !dbg !8902
  %call112 = call i32 @rhs_regno(%struct.rtx_def* %52), !dbg !8902
  %call113 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call112), !dbg !8902
  %reg_qty114 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call113, i32 0, i32 1, !dbg !8902
  %53 = load i32, i32* %reg_qty114, align 4, !dbg !8902
  store i32 %53, i32* %x0_q107, align 4, !dbg !8901
  call void @llvm.dbg.declare(metadata i32* %x1_q, metadata !8903, metadata !DIExpression()), !dbg !8904
  %54 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8905
  %u115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1, !dbg !8905
  %fld116 = bitcast %union.u* %u115 to [1 x %union.rtunion_def]*, !dbg !8905
  %arrayidx117 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld116, i64 0, i64 1, !dbg !8905
  %rt_rtx118 = bitcast %union.rtunion_def* %arrayidx117 to %struct.rtx_def**, !dbg !8905
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx118, align 8, !dbg !8905
  %call119 = call i32 @rhs_regno(%struct.rtx_def* %55), !dbg !8905
  %call120 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call119), !dbg !8905
  %reg_qty121 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call120, i32 0, i32 1, !dbg !8905
  %56 = load i32, i32* %reg_qty121, align 4, !dbg !8905
  store i32 %56, i32* %x1_q, align 4, !dbg !8904
  call void @llvm.dbg.declare(metadata %struct.qty_table_elem** %x0_ent122, metadata !8906, metadata !DIExpression()), !dbg !8907
  %57 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8, !dbg !8908
  %58 = load i32, i32* %x0_q107, align 4, !dbg !8909
  %idxprom123 = sext i32 %58 to i64, !dbg !8908
  %arrayidx124 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %57, i64 %idxprom123, !dbg !8908
  store %struct.qty_table_elem* %arrayidx124, %struct.qty_table_elem** %x0_ent122, align 8, !dbg !8907
  call void @llvm.dbg.declare(metadata %struct.qty_table_elem** %x1_ent, metadata !8910, metadata !DIExpression()), !dbg !8911
  %59 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8, !dbg !8912
  %60 = load i32, i32* %x1_q, align 4, !dbg !8913
  %idxprom125 = sext i32 %60 to i64, !dbg !8912
  %arrayidx126 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %59, i64 %idxprom125, !dbg !8912
  store %struct.qty_table_elem* %arrayidx126, %struct.qty_table_elem** %x1_ent, align 8, !dbg !8911
  %61 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8914
  %u127 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1, !dbg !8914
  %fld128 = bitcast %union.u* %u127 to [1 x %union.rtunion_def]*, !dbg !8914
  %arrayidx129 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld128, i64 0, i64 0, !dbg !8914
  %rt_rtx130 = bitcast %union.rtunion_def* %arrayidx129 to %struct.rtx_def**, !dbg !8914
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx130, align 8, !dbg !8914
  %63 = bitcast %struct.rtx_def* %62 to i32*, !dbg !8914
  %bf.load131 = load i32, i32* %63, align 8, !dbg !8914
  %bf.lshr132 = lshr i32 %bf.load131, 16, !dbg !8914
  %bf.clear133 = and i32 %bf.lshr132, 255, !dbg !8914
  %64 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x0_ent122, align 8, !dbg !8916
  %mode134 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %64, i32 0, i32 6, !dbg !8917
  %65 = bitcast i24* %mode134 to i32*, !dbg !8917
  %bf.load135 = load i32, i32* %65, align 4, !dbg !8917
  %bf.lshr136 = lshr i32 %bf.load135, 16, !dbg !8917
  %bf.clear137 = and i32 %bf.lshr136, 255, !dbg !8917
  %cmp138 = icmp eq i32 %bf.clear133, %bf.clear137, !dbg !8918
  br i1 %cmp138, label %land.lhs.true139, label %if.end159, !dbg !8919

land.lhs.true139:                                 ; preds = %if.then106
  %66 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x0_ent122, align 8, !dbg !8920
  %const_rtx140 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %66, i32 0, i32 0, !dbg !8921
  %67 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx140, align 8, !dbg !8921
  %cmp141 = icmp ne %struct.rtx_def* %67, null, !dbg !8922
  br i1 %cmp141, label %land.lhs.true142, label %if.end159, !dbg !8923

land.lhs.true142:                                 ; preds = %land.lhs.true139
  %68 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8924
  %u143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1, !dbg !8924
  %fld144 = bitcast %union.u* %u143 to [1 x %union.rtunion_def]*, !dbg !8924
  %arrayidx145 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld144, i64 0, i64 1, !dbg !8924
  %rt_rtx146 = bitcast %union.rtunion_def* %arrayidx145 to %struct.rtx_def**, !dbg !8924
  %69 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx146, align 8, !dbg !8924
  %70 = bitcast %struct.rtx_def* %69 to i32*, !dbg !8924
  %bf.load147 = load i32, i32* %70, align 8, !dbg !8924
  %bf.lshr148 = lshr i32 %bf.load147, 16, !dbg !8924
  %bf.clear149 = and i32 %bf.lshr148, 255, !dbg !8924
  %71 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x1_ent, align 8, !dbg !8925
  %mode150 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %71, i32 0, i32 6, !dbg !8926
  %72 = bitcast i24* %mode150 to i32*, !dbg !8926
  %bf.load151 = load i32, i32* %72, align 4, !dbg !8926
  %bf.lshr152 = lshr i32 %bf.load151, 16, !dbg !8926
  %bf.clear153 = and i32 %bf.lshr152, 255, !dbg !8926
  %cmp154 = icmp eq i32 %bf.clear149, %bf.clear153, !dbg !8927
  br i1 %cmp154, label %land.lhs.true155, label %if.end159, !dbg !8928

land.lhs.true155:                                 ; preds = %land.lhs.true142
  %73 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x1_ent, align 8, !dbg !8929
  %const_rtx156 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %73, i32 0, i32 0, !dbg !8930
  %74 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx156, align 8, !dbg !8930
  %cmp157 = icmp ne %struct.rtx_def* %74, null, !dbg !8931
  br i1 %cmp157, label %if.then158, label %if.end159, !dbg !8932

if.then158:                                       ; preds = %land.lhs.true155
  store i8 0, i8* %retval, align 1, !dbg !8933
  br label %return, !dbg !8933

if.end159:                                        ; preds = %land.lhs.true155, %land.lhs.true142, %land.lhs.true139, %if.then106
  br label %if.end160, !dbg !8934

if.end160:                                        ; preds = %if.end159, %land.lhs.true97, %land.lhs.true88, %land.lhs.true80, %land.lhs.true72, %if.end68
  %75 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8935
  %76 = load i8, i8* %from_alias.addr, align 1, !dbg !8936
  %call161 = call zeroext i8 @rtx_varies_p(%struct.rtx_def* %75, i8 zeroext %76), !dbg !8937
  store i8 %call161, i8* %retval, align 1, !dbg !8938
  br label %return, !dbg !8938

return:                                           ; preds = %if.end160, %if.then158, %if.then66, %if.then14
  %77 = load i8, i8* %retval, align 1, !dbg !8939
  ret i8 %77, !dbg !8939
}

declare dso_local zeroext i8 @rtx_varies_p(%struct.rtx_def*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @cse_process_notes_1(%struct.rtx_def* %x, %struct.rtx_def* %object, i8* %changed) #0 !dbg !8940 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %object.addr = alloca %struct.rtx_def*, align 8
  %changed.addr = alloca i8*, align 8
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %new_rtx = alloca %struct.rtx_def*, align 8
  %ent = alloca %struct.qty_table_elem*, align 8
  %new_rtx74 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !8941, metadata !DIExpression()), !dbg !8942
  store %struct.rtx_def* %object, %struct.rtx_def** %object.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %object.addr, metadata !8943, metadata !DIExpression()), !dbg !8944
  store i8* %changed, i8** %changed.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %changed.addr, metadata !8945, metadata !DIExpression()), !dbg !8946
  call void @llvm.dbg.declare(metadata i32* %code, metadata !8947, metadata !DIExpression()), !dbg !8948
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8949
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !8949
  %bf.load = load i32, i32* %1, align 8, !dbg !8949
  %bf.clear = and i32 %bf.load, 65535, !dbg !8949
  store i32 %bf.clear, i32* %code, align 4, !dbg !8948
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !8950, metadata !DIExpression()), !dbg !8951
  %2 = load i32, i32* %code, align 4, !dbg !8952
  %idxprom = sext i32 %2 to i64, !dbg !8952
  %arrayidx = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !8952
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !8952
  store i8* %3, i8** %fmt, align 8, !dbg !8951
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8953, metadata !DIExpression()), !dbg !8954
  %4 = load i32, i32* %code, align 4, !dbg !8955
  switch i32 %4, label %sw.default [
    i32 30, label %sw.bb
    i32 35, label %sw.bb
    i32 45, label %sw.bb
    i32 44, label %sw.bb
    i32 32, label %sw.bb
    i32 31, label %sw.bb
    i32 33, label %sw.bb
    i32 36, label %sw.bb
    i32 46, label %sw.bb
    i32 122, label %sw.bb
    i32 43, label %sw.bb1
    i32 3, label %sw.bb8
    i32 4, label %sw.bb8
    i32 98, label %sw.bb35
    i32 99, label %sw.bb35
    i32 39, label %sw.bb35
    i32 37, label %sw.bb52
  ], !dbg !8956

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8957
  store %struct.rtx_def* %5, %struct.rtx_def** %retval, align 8, !dbg !8959
  br label %return, !dbg !8959

sw.bb1:                                           ; preds = %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8960
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8961
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !8961
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8961
  %arrayidx2 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !8961
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx2 to %struct.rtx_def**, !dbg !8961
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8962
  %u3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !8962
  %fld4 = bitcast %union.u* %u3 to [1 x %union.rtunion_def]*, !dbg !8962
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i64 0, i64 0, !dbg !8962
  %rt_rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**, !dbg !8962
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx6, align 8, !dbg !8962
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8963
  %11 = load i8*, i8** %changed.addr, align 8, !dbg !8964
  %call = call %struct.rtx_def* @cse_process_notes(%struct.rtx_def* %9, %struct.rtx_def* %10, i8* %11), !dbg !8965
  %call7 = call zeroext i8 @validate_change(%struct.rtx_def* %6, %struct.rtx_def** %rt_rtx, %struct.rtx_def* %call, i8 zeroext 0), !dbg !8966
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8967
  store %struct.rtx_def* %12, %struct.rtx_def** %retval, align 8, !dbg !8968
  br label %return, !dbg !8968

sw.bb8:                                           ; preds = %entry, %entry
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8969
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !8969
  %bf.load9 = load i32, i32* %14, align 8, !dbg !8969
  %bf.lshr = lshr i32 %bf.load9, 16, !dbg !8969
  %bf.clear10 = and i32 %bf.lshr, 255, !dbg !8969
  %cmp = icmp eq i32 %bf.clear10, 4, !dbg !8971
  br i1 %cmp, label %if.then, label %if.end, !dbg !8972

if.then:                                          ; preds = %sw.bb8
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8973
  %u11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !8973
  %fld12 = bitcast %union.u* %u11 to [1 x %union.rtunion_def]*, !dbg !8973
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i64 0, i64 0, !dbg !8973
  %rt_rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**, !dbg !8973
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx14, align 8, !dbg !8973
  %17 = load i8*, i8** %changed.addr, align 8, !dbg !8974
  %call15 = call %struct.rtx_def* @cse_process_notes(%struct.rtx_def* %16, %struct.rtx_def* null, i8* %17), !dbg !8975
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8976
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !8976
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !8976
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 0, !dbg !8976
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !8976
  store %struct.rtx_def* %call15, %struct.rtx_def** %rt_rtx19, align 8, !dbg !8977
  br label %if.end, !dbg !8976

if.end:                                           ; preds = %if.then, %sw.bb8
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8978
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !8978
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !8978
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 1, !dbg !8978
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !8978
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !8978
  %tobool = icmp ne %struct.rtx_def* %20, null, !dbg !8978
  br i1 %tobool, label %if.then24, label %if.end34, !dbg !8980

if.then24:                                        ; preds = %if.end
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8981
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !8981
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !8981
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 1, !dbg !8981
  %rt_rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !8981
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !8981
  %23 = load i8*, i8** %changed.addr, align 8, !dbg !8982
  %call29 = call %struct.rtx_def* @cse_process_notes(%struct.rtx_def* %22, %struct.rtx_def* null, i8* %23), !dbg !8983
  %24 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8984
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !8984
  %fld31 = bitcast %union.u* %u30 to [1 x %union.rtunion_def]*, !dbg !8984
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i64 0, i64 1, !dbg !8984
  %rt_rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**, !dbg !8984
  store %struct.rtx_def* %call29, %struct.rtx_def** %rt_rtx33, align 8, !dbg !8985
  br label %if.end34, !dbg !8984

if.end34:                                         ; preds = %if.then24, %if.end
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8986
  store %struct.rtx_def* %25, %struct.rtx_def** %retval, align 8, !dbg !8987
  br label %return, !dbg !8987

sw.bb35:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_rtx, metadata !8988, metadata !DIExpression()), !dbg !8990
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8991
  %u36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !8991
  %fld37 = bitcast %union.u* %u36 to [1 x %union.rtunion_def]*, !dbg !8991
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i64 0, i64 0, !dbg !8991
  %rt_rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**, !dbg !8991
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx39, align 8, !dbg !8991
  %28 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8, !dbg !8992
  %29 = load i8*, i8** %changed.addr, align 8, !dbg !8993
  %call40 = call %struct.rtx_def* @cse_process_notes(%struct.rtx_def* %27, %struct.rtx_def* %28, i8* %29), !dbg !8994
  store %struct.rtx_def* %call40, %struct.rtx_def** %new_rtx, align 8, !dbg !8990
  %30 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !8995
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !8995
  %bf.load41 = load i32, i32* %31, align 8, !dbg !8995
  %bf.lshr42 = lshr i32 %bf.load41, 16, !dbg !8995
  %bf.clear43 = and i32 %bf.lshr42, 255, !dbg !8995
  %cmp44 = icmp ne i32 %bf.clear43, 0, !dbg !8997
  br i1 %cmp44, label %if.then45, label %if.end51, !dbg !8998

if.then45:                                        ; preds = %sw.bb35
  %32 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8, !dbg !8999
  %33 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9000
  %u46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !9000
  %fld47 = bitcast %union.u* %u46 to [1 x %union.rtunion_def]*, !dbg !9000
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i64 0, i64 0, !dbg !9000
  %rt_rtx49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**, !dbg !9000
  %34 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !9001
  %call50 = call zeroext i8 @validate_change(%struct.rtx_def* %32, %struct.rtx_def** %rt_rtx49, %struct.rtx_def* %34, i8 zeroext 0), !dbg !9002
  br label %if.end51, !dbg !9002

if.end51:                                         ; preds = %if.then45, %sw.bb35
  %35 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9003
  store %struct.rtx_def* %35, %struct.rtx_def** %retval, align 8, !dbg !9004
  br label %return, !dbg !9004

sw.bb52:                                          ; preds = %entry
  %36 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9005
  %call53 = call i32 @rhs_regno(%struct.rtx_def* %36), !dbg !9005
  %call54 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call53), !dbg !9005
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call54, i32 0, i32 1, !dbg !9005
  %37 = load i32, i32* %reg_qty, align 4, !dbg !9005
  store i32 %37, i32* %i, align 4, !dbg !9006
  %38 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9007
  %call55 = call i32 @rhs_regno(%struct.rtx_def* %38), !dbg !9007
  %call56 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call55), !dbg !9007
  %reg_qty57 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call56, i32 0, i32 1, !dbg !9007
  %39 = load i32, i32* %reg_qty57, align 4, !dbg !9007
  %cmp58 = icmp sge i32 %39, 0, !dbg !9007
  br i1 %cmp58, label %if.then59, label %if.end85, !dbg !9009

if.then59:                                        ; preds = %sw.bb52
  call void @llvm.dbg.declare(metadata %struct.qty_table_elem** %ent, metadata !9010, metadata !DIExpression()), !dbg !9012
  %40 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8, !dbg !9013
  %41 = load i32, i32* %i, align 4, !dbg !9014
  %idxprom60 = sext i32 %41 to i64, !dbg !9013
  %arrayidx61 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %40, i64 %idxprom60, !dbg !9013
  store %struct.qty_table_elem* %arrayidx61, %struct.qty_table_elem** %ent, align 8, !dbg !9012
  %42 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !9015
  %const_rtx = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %42, i32 0, i32 0, !dbg !9017
  %43 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx, align 8, !dbg !9017
  %cmp62 = icmp ne %struct.rtx_def* %43, null, !dbg !9018
  br i1 %cmp62, label %land.lhs.true, label %if.end84, !dbg !9019

land.lhs.true:                                    ; preds = %if.then59
  %44 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !9020
  %const_rtx63 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %44, i32 0, i32 0, !dbg !9020
  %45 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx63, align 8, !dbg !9020
  %46 = bitcast %struct.rtx_def* %45 to i32*, !dbg !9020
  %bf.load64 = load i32, i32* %46, align 8, !dbg !9020
  %bf.clear65 = and i32 %bf.load64, 65535, !dbg !9020
  %idxprom66 = sext i32 %bf.clear65 to i64, !dbg !9020
  %arrayidx67 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom66, !dbg !9020
  %47 = load i32, i32* %arrayidx67, align 4, !dbg !9020
  %cmp68 = icmp eq i32 %47, 9, !dbg !9020
  br i1 %cmp68, label %if.then73, label %lor.lhs.false, !dbg !9021

lor.lhs.false:                                    ; preds = %land.lhs.true
  %48 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !9022
  %const_rtx69 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %48, i32 0, i32 0, !dbg !9022
  %49 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx69, align 8, !dbg !9022
  %50 = bitcast %struct.rtx_def* %49 to i32*, !dbg !9022
  %bf.load70 = load i32, i32* %50, align 8, !dbg !9022
  %bf.clear71 = and i32 %bf.load70, 65535, !dbg !9022
  %cmp72 = icmp eq i32 %bf.clear71, 37, !dbg !9022
  br i1 %cmp72, label %if.then73, label %if.end84, !dbg !9023

if.then73:                                        ; preds = %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_rtx74, metadata !9024, metadata !DIExpression()), !dbg !9026
  %51 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i32 0, i32 0), align 8, !dbg !9027
  %52 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9028
  %53 = bitcast %struct.rtx_def* %52 to i32*, !dbg !9028
  %bf.load75 = load i32, i32* %53, align 8, !dbg !9028
  %bf.lshr76 = lshr i32 %bf.load75, 16, !dbg !9028
  %bf.clear77 = and i32 %bf.lshr76, 255, !dbg !9028
  %54 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !9029
  %const_rtx78 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %54, i32 0, i32 0, !dbg !9030
  %55 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx78, align 8, !dbg !9030
  %call79 = call %struct.rtx_def* %51(i32 %bf.clear77, %struct.rtx_def* %55), !dbg !9027
  store %struct.rtx_def* %call79, %struct.rtx_def** %new_rtx74, align 8, !dbg !9026
  %56 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx74, align 8, !dbg !9031
  %tobool80 = icmp ne %struct.rtx_def* %56, null, !dbg !9031
  br i1 %tobool80, label %if.then81, label %if.end83, !dbg !9033

if.then81:                                        ; preds = %if.then73
  %57 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx74, align 8, !dbg !9034
  %call82 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %57), !dbg !9035
  store %struct.rtx_def* %call82, %struct.rtx_def** %retval, align 8, !dbg !9036
  br label %return, !dbg !9036

if.end83:                                         ; preds = %if.then73
  br label %if.end84, !dbg !9037

if.end84:                                         ; preds = %if.end83, %lor.lhs.false, %if.then59
  br label %if.end85, !dbg !9038

if.end85:                                         ; preds = %if.end84, %sw.bb52
  %58 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9039
  %call86 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %58, %struct.rtx_def* null), !dbg !9040
  store %struct.rtx_def* %call86, %struct.rtx_def** %retval, align 8, !dbg !9041
  br label %return, !dbg !9041

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !9042

sw.epilog:                                        ; preds = %sw.default
  store i32 0, i32* %i, align 4, !dbg !9043
  br label %for.cond, !dbg !9045

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %59 = load i32, i32* %i, align 4, !dbg !9046
  %60 = load i32, i32* %code, align 4, !dbg !9048
  %idxprom87 = sext i32 %60 to i64, !dbg !9048
  %arrayidx88 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom87, !dbg !9048
  %61 = load i8, i8* %arrayidx88, align 1, !dbg !9048
  %conv = zext i8 %61 to i32, !dbg !9048
  %cmp89 = icmp slt i32 %59, %conv, !dbg !9049
  br i1 %cmp89, label %for.body, label %for.end, !dbg !9050

for.body:                                         ; preds = %for.cond
  %62 = load i8*, i8** %fmt, align 8, !dbg !9051
  %63 = load i32, i32* %i, align 4, !dbg !9053
  %idxprom91 = sext i32 %63 to i64, !dbg !9051
  %arrayidx92 = getelementptr inbounds i8, i8* %62, i64 %idxprom91, !dbg !9051
  %64 = load i8, i8* %arrayidx92, align 1, !dbg !9051
  %conv93 = sext i8 %64 to i32, !dbg !9051
  %cmp94 = icmp eq i32 %conv93, 101, !dbg !9054
  br i1 %cmp94, label %if.then96, label %if.end109, !dbg !9055

if.then96:                                        ; preds = %for.body
  %65 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8, !dbg !9056
  %66 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9057
  %u97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1, !dbg !9057
  %fld98 = bitcast %union.u* %u97 to [1 x %union.rtunion_def]*, !dbg !9057
  %67 = load i32, i32* %i, align 4, !dbg !9057
  %idxprom99 = sext i32 %67 to i64, !dbg !9057
  %arrayidx100 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld98, i64 0, i64 %idxprom99, !dbg !9057
  %rt_rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**, !dbg !9057
  %68 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9058
  %u102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1, !dbg !9058
  %fld103 = bitcast %union.u* %u102 to [1 x %union.rtunion_def]*, !dbg !9058
  %69 = load i32, i32* %i, align 4, !dbg !9058
  %idxprom104 = sext i32 %69 to i64, !dbg !9058
  %arrayidx105 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld103, i64 0, i64 %idxprom104, !dbg !9058
  %rt_rtx106 = bitcast %union.rtunion_def* %arrayidx105 to %struct.rtx_def**, !dbg !9058
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx106, align 8, !dbg !9058
  %71 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8, !dbg !9059
  %72 = load i8*, i8** %changed.addr, align 8, !dbg !9060
  %call107 = call %struct.rtx_def* @cse_process_notes(%struct.rtx_def* %70, %struct.rtx_def* %71, i8* %72), !dbg !9061
  %call108 = call zeroext i8 @validate_change(%struct.rtx_def* %65, %struct.rtx_def** %rt_rtx101, %struct.rtx_def* %call107, i8 zeroext 0), !dbg !9062
  br label %if.end109, !dbg !9062

if.end109:                                        ; preds = %if.then96, %for.body
  br label %for.inc, !dbg !9063

for.inc:                                          ; preds = %if.end109
  %73 = load i32, i32* %i, align 4, !dbg !9064
  %inc = add nsw i32 %73, 1, !dbg !9064
  store i32 %inc, i32* %i, align 4, !dbg !9064
  br label %for.cond, !dbg !9065, !llvm.loop !9066

for.end:                                          ; preds = %for.cond
  %74 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9068
  store %struct.rtx_def* %74, %struct.rtx_def** %retval, align 8, !dbg !9069
  br label %return, !dbg !9069

return:                                           ; preds = %for.end, %if.end85, %if.then81, %if.end51, %if.end34, %sw.bb1, %sw.bb
  %75 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !9070
  ret %struct.rtx_def* %75, !dbg !9070
}

declare dso_local zeroext i8 @validate_change(%struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def*, i8 zeroext) #2

declare dso_local %struct.rtx_def* @copy_rtx(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @canon_reg(%struct.rtx_def* %x, %struct.rtx_def* %insn) #0 !dbg !9071 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %first = alloca i32, align 4
  %q = alloca i32, align 4
  %ent = alloca %struct.qty_table_elem*, align 8
  %j = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !9074, metadata !DIExpression()), !dbg !9075
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !9076, metadata !DIExpression()), !dbg !9077
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9078, metadata !DIExpression()), !dbg !9079
  call void @llvm.dbg.declare(metadata i32* %code, metadata !9080, metadata !DIExpression()), !dbg !9081
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !9082, metadata !DIExpression()), !dbg !9083
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9084
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !9086
  br i1 %cmp, label %if.then, label %if.end, !dbg !9087

if.then:                                          ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9088
  store %struct.rtx_def* %1, %struct.rtx_def** %retval, align 8, !dbg !9089
  br label %return, !dbg !9089

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9090
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !9090
  %bf.load = load i32, i32* %3, align 8, !dbg !9090
  %bf.clear = and i32 %bf.load, 65535, !dbg !9090
  store i32 %bf.clear, i32* %code, align 4, !dbg !9091
  %4 = load i32, i32* %code, align 4, !dbg !9092
  switch i32 %4, label %sw.default [
    i32 36, label %sw.bb
    i32 46, label %sw.bb
    i32 35, label %sw.bb
    i32 30, label %sw.bb
    i32 32, label %sw.bb
    i32 31, label %sw.bb
    i32 33, label %sw.bb
    i32 45, label %sw.bb
    i32 44, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 37, label %sw.bb1
  ], !dbg !9093

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9094
  store %struct.rtx_def* %5, %struct.rtx_def** %retval, align 8, !dbg !9096
  br label %return, !dbg !9096

sw.bb1:                                           ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %first, metadata !9097, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.declare(metadata i32* %q, metadata !9100, metadata !DIExpression()), !dbg !9101
  call void @llvm.dbg.declare(metadata %struct.qty_table_elem** %ent, metadata !9102, metadata !DIExpression()), !dbg !9103
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9104
  %call = call i32 @rhs_regno(%struct.rtx_def* %6), !dbg !9104
  %cmp2 = icmp ult i32 %call, 53, !dbg !9106
  br i1 %cmp2, label %if.then6, label %lor.lhs.false, !dbg !9107

lor.lhs.false:                                    ; preds = %sw.bb1
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9108
  %call3 = call i32 @rhs_regno(%struct.rtx_def* %7), !dbg !9108
  %call4 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call3), !dbg !9108
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call4, i32 0, i32 1, !dbg !9108
  %8 = load i32, i32* %reg_qty, align 4, !dbg !9108
  %cmp5 = icmp sge i32 %8, 0, !dbg !9108
  br i1 %cmp5, label %if.end7, label %if.then6, !dbg !9109

if.then6:                                         ; preds = %lor.lhs.false, %sw.bb1
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9110
  store %struct.rtx_def* %9, %struct.rtx_def** %retval, align 8, !dbg !9111
  br label %return, !dbg !9111

if.end7:                                          ; preds = %lor.lhs.false
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9112
  %call8 = call i32 @rhs_regno(%struct.rtx_def* %10), !dbg !9112
  %call9 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call8), !dbg !9112
  %reg_qty10 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call9, i32 0, i32 1, !dbg !9112
  %11 = load i32, i32* %reg_qty10, align 4, !dbg !9112
  store i32 %11, i32* %q, align 4, !dbg !9113
  %12 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8, !dbg !9114
  %13 = load i32, i32* %q, align 4, !dbg !9115
  %idxprom = sext i32 %13 to i64, !dbg !9114
  %arrayidx = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %12, i64 %idxprom, !dbg !9114
  store %struct.qty_table_elem* %arrayidx, %struct.qty_table_elem** %ent, align 8, !dbg !9116
  %14 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !9117
  %first_reg = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %14, i32 0, i32 4, !dbg !9118
  %15 = load i32, i32* %first_reg, align 4, !dbg !9118
  store i32 %15, i32* %first, align 4, !dbg !9119
  %16 = load i32, i32* %first, align 4, !dbg !9120
  %cmp11 = icmp sge i32 %16, 53, !dbg !9121
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !9120

cond.true:                                        ; preds = %if.end7
  %17 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !9122
  %18 = load i32, i32* %first, align 4, !dbg !9123
  %idxprom12 = sext i32 %18 to i64, !dbg !9122
  %arrayidx13 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %17, i64 %idxprom12, !dbg !9122
  %19 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx13, align 8, !dbg !9122
  br label %cond.end22, !dbg !9120

cond.false:                                       ; preds = %if.end7
  %20 = load i32, i32* %first, align 4, !dbg !9124
  %idxprom14 = sext i32 %20 to i64, !dbg !9124
  %arrayidx15 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom14, !dbg !9124
  %21 = load i32, i32* %arrayidx15, align 4, !dbg !9124
  %cmp16 = icmp eq i32 %21, 0, !dbg !9125
  br i1 %cmp16, label %cond.true17, label %cond.false18, !dbg !9124

cond.true17:                                      ; preds = %cond.false
  %22 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9126
  br label %cond.end, !dbg !9124

cond.false18:                                     ; preds = %cond.false
  %23 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !9127
  %mode = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %23, i32 0, i32 6, !dbg !9128
  %24 = bitcast i24* %mode to i32*, !dbg !9128
  %bf.load19 = load i32, i32* %24, align 4, !dbg !9128
  %bf.lshr = lshr i32 %bf.load19, 16, !dbg !9128
  %bf.clear20 = and i32 %bf.lshr, 255, !dbg !9128
  %25 = load i32, i32* %first, align 4, !dbg !9129
  %call21 = call %struct.rtx_def* @gen_rtx_REG(i32 %bf.clear20, i32 %25), !dbg !9130
  br label %cond.end, !dbg !9124

cond.end:                                         ; preds = %cond.false18, %cond.true17
  %cond = phi %struct.rtx_def* [ %22, %cond.true17 ], [ %call21, %cond.false18 ], !dbg !9124
  br label %cond.end22, !dbg !9120

cond.end22:                                       ; preds = %cond.end, %cond.true
  %cond23 = phi %struct.rtx_def* [ %19, %cond.true ], [ %cond, %cond.end ], !dbg !9120
  store %struct.rtx_def* %cond23, %struct.rtx_def** %retval, align 8, !dbg !9131
  br label %return, !dbg !9131

sw.default:                                       ; preds = %if.end
  br label %sw.epilog, !dbg !9132

sw.epilog:                                        ; preds = %sw.default
  %26 = load i32, i32* %code, align 4, !dbg !9133
  %idxprom24 = sext i32 %26 to i64, !dbg !9133
  %arrayidx25 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom24, !dbg !9133
  %27 = load i8*, i8** %arrayidx25, align 8, !dbg !9133
  store i8* %27, i8** %fmt, align 8, !dbg !9134
  %28 = load i32, i32* %code, align 4, !dbg !9135
  %idxprom26 = sext i32 %28 to i64, !dbg !9135
  %arrayidx27 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom26, !dbg !9135
  %29 = load i8, i8* %arrayidx27, align 1, !dbg !9135
  %conv = zext i8 %29 to i32, !dbg !9135
  %sub = sub nsw i32 %conv, 1, !dbg !9137
  store i32 %sub, i32* %i, align 4, !dbg !9138
  br label %for.cond, !dbg !9139

for.cond:                                         ; preds = %for.inc61, %sw.epilog
  %30 = load i32, i32* %i, align 4, !dbg !9140
  %cmp28 = icmp sge i32 %30, 0, !dbg !9142
  br i1 %cmp28, label %for.body, label %for.end62, !dbg !9143

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9144, metadata !DIExpression()), !dbg !9146
  %31 = load i8*, i8** %fmt, align 8, !dbg !9147
  %32 = load i32, i32* %i, align 4, !dbg !9149
  %idxprom30 = sext i32 %32 to i64, !dbg !9147
  %arrayidx31 = getelementptr inbounds i8, i8* %31, i64 %idxprom30, !dbg !9147
  %33 = load i8, i8* %arrayidx31, align 1, !dbg !9147
  %conv32 = sext i8 %33 to i32, !dbg !9147
  %cmp33 = icmp eq i32 %conv32, 101, !dbg !9150
  br i1 %cmp33, label %if.then35, label %if.else, !dbg !9151

if.then35:                                        ; preds = %for.body
  %34 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9152
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !9152
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9152
  %35 = load i32, i32* %i, align 4, !dbg !9152
  %idxprom36 = sext i32 %35 to i64, !dbg !9152
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 %idxprom36, !dbg !9152
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**, !dbg !9152
  %36 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9153
  call void @validate_canon_reg(%struct.rtx_def** %rt_rtx, %struct.rtx_def* %36), !dbg !9154
  br label %if.end60, !dbg !9154

if.else:                                          ; preds = %for.body
  %37 = load i8*, i8** %fmt, align 8, !dbg !9155
  %38 = load i32, i32* %i, align 4, !dbg !9157
  %idxprom38 = sext i32 %38 to i64, !dbg !9155
  %arrayidx39 = getelementptr inbounds i8, i8* %37, i64 %idxprom38, !dbg !9155
  %39 = load i8, i8* %arrayidx39, align 1, !dbg !9155
  %conv40 = sext i8 %39 to i32, !dbg !9155
  %cmp41 = icmp eq i32 %conv40, 69, !dbg !9158
  br i1 %cmp41, label %if.then43, label %if.end59, !dbg !9159

if.then43:                                        ; preds = %if.else
  store i32 0, i32* %j, align 4, !dbg !9160
  br label %for.cond44, !dbg !9162

for.cond44:                                       ; preds = %for.inc, %if.then43
  %40 = load i32, i32* %j, align 4, !dbg !9163
  %41 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9165
  %u45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !9165
  %fld46 = bitcast %union.u* %u45 to [1 x %union.rtunion_def]*, !dbg !9165
  %42 = load i32, i32* %i, align 4, !dbg !9165
  %idxprom47 = sext i32 %42 to i64, !dbg !9165
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i64 0, i64 %idxprom47, !dbg !9165
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtvec_def**, !dbg !9165
  %43 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !9165
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %43, i32 0, i32 0, !dbg !9165
  %44 = load i32, i32* %num_elem, align 8, !dbg !9165
  %cmp49 = icmp slt i32 %40, %44, !dbg !9166
  br i1 %cmp49, label %for.body51, label %for.end, !dbg !9167

for.body51:                                       ; preds = %for.cond44
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9168
  %u52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !9168
  %fld53 = bitcast %union.u* %u52 to [1 x %union.rtunion_def]*, !dbg !9168
  %46 = load i32, i32* %i, align 4, !dbg !9168
  %idxprom54 = sext i32 %46 to i64, !dbg !9168
  %arrayidx55 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i64 0, i64 %idxprom54, !dbg !9168
  %rt_rtvec56 = bitcast %union.rtunion_def* %arrayidx55 to %struct.rtvec_def**, !dbg !9168
  %47 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec56, align 8, !dbg !9168
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %47, i32 0, i32 1, !dbg !9168
  %48 = load i32, i32* %j, align 4, !dbg !9168
  %idxprom57 = sext i32 %48 to i64, !dbg !9168
  %arrayidx58 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom57, !dbg !9168
  %49 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9169
  call void @validate_canon_reg(%struct.rtx_def** %arrayidx58, %struct.rtx_def* %49), !dbg !9170
  br label %for.inc, !dbg !9170

for.inc:                                          ; preds = %for.body51
  %50 = load i32, i32* %j, align 4, !dbg !9171
  %inc = add nsw i32 %50, 1, !dbg !9171
  store i32 %inc, i32* %j, align 4, !dbg !9171
  br label %for.cond44, !dbg !9172, !llvm.loop !9173

for.end:                                          ; preds = %for.cond44
  br label %if.end59, !dbg !9174

if.end59:                                         ; preds = %for.end, %if.else
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then35
  br label %for.inc61, !dbg !9175

for.inc61:                                        ; preds = %if.end60
  %51 = load i32, i32* %i, align 4, !dbg !9176
  %dec = add nsw i32 %51, -1, !dbg !9176
  store i32 %dec, i32* %i, align 4, !dbg !9176
  br label %for.cond, !dbg !9177, !llvm.loop !9178

for.end62:                                        ; preds = %for.cond
  %52 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9180
  store %struct.rtx_def* %52, %struct.rtx_def** %retval, align 8, !dbg !9181
  br label %return, !dbg !9181

return:                                           ; preds = %for.end62, %cond.end22, %if.then6, %sw.bb, %if.then
  %53 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !9182
  ret %struct.rtx_def* %53, !dbg !9182
}

declare dso_local %struct.rtx_def* @gen_rtx_REG(i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @validate_canon_reg(%struct.rtx_def** %xloc, %struct.rtx_def* %insn) #0 !dbg !9183 {
entry:
  %xloc.addr = alloca %struct.rtx_def**, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %new_rtx = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def** %xloc, %struct.rtx_def*** %xloc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %xloc.addr, metadata !9186, metadata !DIExpression()), !dbg !9187
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !9188, metadata !DIExpression()), !dbg !9189
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %xloc.addr, align 8, !dbg !9190
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !9192
  %tobool = icmp ne %struct.rtx_def* %1, null, !dbg !9192
  br i1 %tobool, label %if.then, label %if.end, !dbg !9193

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_rtx, metadata !9194, metadata !DIExpression()), !dbg !9196
  %2 = load %struct.rtx_def**, %struct.rtx_def*** %xloc.addr, align 8, !dbg !9197
  %3 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8, !dbg !9198
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9199
  %call = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %3, %struct.rtx_def* %4), !dbg !9200
  store %struct.rtx_def* %call, %struct.rtx_def** %new_rtx, align 8, !dbg !9196
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9201
  %tobool1 = icmp ne %struct.rtx_def* %5, null, !dbg !9201
  br i1 %tobool1, label %land.lhs.true, label %cond.true, !dbg !9201

land.lhs.true:                                    ; preds = %if.then
  %6 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !9201
  %tobool2 = icmp ne %struct.rtx_def* %6, null, !dbg !9201
  br i1 %tobool2, label %cond.false, label %cond.true, !dbg !9201

cond.true:                                        ; preds = %land.lhs.true, %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32 2870, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)), !dbg !9201
  br label %cond.end, !dbg !9201

cond.false:                                       ; preds = %land.lhs.true
  br label %cond.end, !dbg !9201

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !9201
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9202
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %xloc.addr, align 8, !dbg !9203
  %9 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !9204
  %call3 = call zeroext i8 @validate_change(%struct.rtx_def* %7, %struct.rtx_def** %8, %struct.rtx_def* %9, i8 zeroext 1), !dbg !9205
  br label %if.end, !dbg !9206

if.end:                                           ; preds = %cond.end, %entry
  ret void, !dbg !9207
}

declare dso_local i32 @apply_change_group() #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @fold_rtx(%struct.rtx_def* %x, %struct.rtx_def* %insn) #0 !dbg !9208 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %mode = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %i = alloca i32, align 4
  %new_rtx = alloca %struct.rtx_def*, align 8
  %changed = alloca i32, align 4
  %folded_arg0 = alloca %struct.rtx_def*, align 8
  %folded_arg1 = alloca %struct.rtx_def*, align 8
  %const_arg0 = alloca %struct.rtx_def*, align 8
  %const_arg1 = alloca %struct.rtx_def*, align 8
  %const_arg2 = alloca %struct.rtx_def*, align 8
  %mode_arg0 = alloca i32, align 4
  %folded_arg = alloca %struct.rtx_def*, align 8
  %const_arg = alloca %struct.rtx_def*, align 8
  %mode_arg = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  %p0 = alloca %struct.table_elt*, align 8
  %p1 = alloca %struct.table_elt*, align 8
  %true_rtx = alloca %struct.rtx_def*, align 8
  %false_rtx = alloca %struct.rtx_def*, align 8
  %mode_arg1 = alloca i32, align 4
  %cheapest_simplification = alloca %struct.rtx_def*, align 8
  %cheapest_cost = alloca i32, align 4
  %simp_result = alloca %struct.rtx_def*, align 8
  %p = alloca %struct.table_elt*, align 8
  %cost = alloca i32, align 4
  %qty = alloca i32, align 4
  %ent = alloca %struct.qty_table_elem*, align 8
  %y = alloca %struct.rtx_def*, align 8
  %inner_const = alloca %struct.rtx_def*, align 8
  %op0 = alloca %struct.rtx_def*, align 8
  %op1 = alloca %struct.rtx_def*, align 8
  %y545 = alloca %struct.rtx_def*, align 8
  %y657 = alloca %struct.rtx_def*, align 8
  %new_const = alloca %struct.rtx_def*, align 8
  %p792 = alloca %struct.table_elt*, align 8
  %y842 = alloca %struct.rtx_def*, align 8
  %is_shift = alloca i32, align 4
  %y888 = alloca %struct.rtx_def*, align 8
  %inner_const889 = alloca %struct.rtx_def*, align 8
  %new_const890 = alloca %struct.rtx_def*, align 8
  %canon_const_arg1 = alloca %struct.rtx_def*, align 8
  %associate_code = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !9209, metadata !DIExpression()), !dbg !9210
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !9211, metadata !DIExpression()), !dbg !9212
  call void @llvm.dbg.declare(metadata i32* %code, metadata !9213, metadata !DIExpression()), !dbg !9214
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !9215, metadata !DIExpression()), !dbg !9216
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !9217, metadata !DIExpression()), !dbg !9218
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9219, metadata !DIExpression()), !dbg !9220
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_rtx, metadata !9221, metadata !DIExpression()), !dbg !9222
  store %struct.rtx_def* null, %struct.rtx_def** %new_rtx, align 8, !dbg !9222
  call void @llvm.dbg.declare(metadata i32* %changed, metadata !9223, metadata !DIExpression()), !dbg !9224
  store i32 0, i32* %changed, align 4, !dbg !9224
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %folded_arg0, metadata !9225, metadata !DIExpression()), !dbg !9226
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %folded_arg1, metadata !9227, metadata !DIExpression()), !dbg !9228
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %const_arg0, metadata !9229, metadata !DIExpression()), !dbg !9230
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %const_arg1, metadata !9231, metadata !DIExpression()), !dbg !9232
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %const_arg2, metadata !9233, metadata !DIExpression()), !dbg !9234
  call void @llvm.dbg.declare(metadata i32* %mode_arg0, metadata !9235, metadata !DIExpression()), !dbg !9236
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9237
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !9239
  br i1 %cmp, label %if.then, label %if.end, !dbg !9240

if.then:                                          ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9241
  store %struct.rtx_def* %1, %struct.rtx_def** %retval, align 8, !dbg !9242
  br label %return, !dbg !9242

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9243
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !9243
  %bf.load = load i32, i32* %3, align 8, !dbg !9243
  %bf.clear = and i32 %bf.load, 65535, !dbg !9243
  store i32 %bf.clear, i32* %code, align 4, !dbg !9244
  %4 = load i32, i32* %code, align 4, !dbg !9245
  switch i32 %4, label %sw.default [
    i32 43, label %sw.bb
    i32 39, label %sw.bb
    i32 35, label %sw.bb4
    i32 30, label %sw.bb4
    i32 32, label %sw.bb4
    i32 31, label %sw.bb4
    i32 33, label %sw.bb4
    i32 45, label %sw.bb4
    i32 44, label %sw.bb4
    i32 37, label %sw.bb4
    i32 36, label %sw.bb4
    i32 3, label %sw.bb4
    i32 17, label %sw.bb5
    i32 26, label %sw.bb23
  ], !dbg !9246

sw.bb:                                            ; preds = %if.end, %if.end
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9247
  %call = call %struct.rtx_def* @equiv_constant(%struct.rtx_def* %5), !dbg !9250
  store %struct.rtx_def* %call, %struct.rtx_def** %new_rtx, align 8, !dbg !9251
  %cmp1 = icmp ne %struct.rtx_def* %call, null, !dbg !9252
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !9253

if.then2:                                         ; preds = %sw.bb
  %6 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !9254
  store %struct.rtx_def* %6, %struct.rtx_def** %retval, align 8, !dbg !9255
  br label %return, !dbg !9255

if.end3:                                          ; preds = %sw.bb
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9256
  store %struct.rtx_def* %7, %struct.rtx_def** %retval, align 8, !dbg !9257
  br label %return, !dbg !9257

sw.bb4:                                           ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9258
  store %struct.rtx_def* %8, %struct.rtx_def** %retval, align 8, !dbg !9259
  br label %return, !dbg !9259

sw.bb5:                                           ; preds = %if.end
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9260
  %tobool = icmp ne %struct.rtx_def* %9, null, !dbg !9260
  br i1 %tobool, label %if.then6, label %if.end22, !dbg !9262

if.then6:                                         ; preds = %sw.bb5
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9263
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !9263
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9263
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !9263
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**, !dbg !9263
  %11 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !9263
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %11, i32 0, i32 0, !dbg !9263
  %12 = load i32, i32* %num_elem, align 8, !dbg !9263
  %sub = sub nsw i32 %12, 1, !dbg !9266
  store i32 %sub, i32* %i, align 4, !dbg !9267
  br label %for.cond, !dbg !9268

for.cond:                                         ; preds = %for.inc, %if.then6
  %13 = load i32, i32* %i, align 4, !dbg !9269
  %cmp7 = icmp sge i32 %13, 0, !dbg !9271
  br i1 %cmp7, label %for.body, label %for.end, !dbg !9272

for.body:                                         ; preds = %for.cond
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9273
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9274
  %u8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !9274
  %fld9 = bitcast %union.u* %u8 to [1 x %union.rtunion_def]*, !dbg !9274
  %arrayidx10 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld9, i64 0, i64 3, !dbg !9274
  %rt_rtvec11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtvec_def**, !dbg !9274
  %16 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec11, align 8, !dbg !9274
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %16, i32 0, i32 1, !dbg !9274
  %17 = load i32, i32* %i, align 4, !dbg !9274
  %idxprom = sext i32 %17 to i64, !dbg !9274
  %arrayidx12 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !9274
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9275
  %u13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !9275
  %fld14 = bitcast %union.u* %u13 to [1 x %union.rtunion_def]*, !dbg !9275
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i64 0, i64 3, !dbg !9275
  %rt_rtvec16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtvec_def**, !dbg !9275
  %19 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec16, align 8, !dbg !9275
  %elem17 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %19, i32 0, i32 1, !dbg !9275
  %20 = load i32, i32* %i, align 4, !dbg !9275
  %idxprom18 = sext i32 %20 to i64, !dbg !9275
  %arrayidx19 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem17, i64 0, i64 %idxprom18, !dbg !9275
  %21 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx19, align 8, !dbg !9275
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9276
  %call20 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %21, %struct.rtx_def* %22), !dbg !9277
  %call21 = call zeroext i8 @validate_change(%struct.rtx_def* %14, %struct.rtx_def** %arrayidx12, %struct.rtx_def* %call20, i8 zeroext 0), !dbg !9278
  br label %for.inc, !dbg !9278

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !dbg !9279
  %dec = add nsw i32 %23, -1, !dbg !9279
  store i32 %dec, i32* %i, align 4, !dbg !9279
  br label %for.cond, !dbg !9280, !llvm.loop !9281

for.end:                                          ; preds = %for.cond
  br label %if.end22, !dbg !9283

if.end22:                                         ; preds = %for.end, %sw.bb5
  %24 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9284
  store %struct.rtx_def* %24, %struct.rtx_def** %retval, align 8, !dbg !9285
  br label %return, !dbg !9285

sw.bb23:                                          ; preds = %if.end
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9286
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !9286
  %fld25 = bitcast %union.u* %u24 to [1 x %union.rtunion_def]*, !dbg !9286
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i64 0, i64 0, !dbg !9286
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**, !dbg !9286
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !9286
  %u27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !9286
  %fld28 = bitcast %union.u* %u27 to [1 x %union.rtunion_def]*, !dbg !9286
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i64 0, i64 0, !dbg !9286
  %rt_rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**, !dbg !9286
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx30, align 8, !dbg !9286
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !9286
  %bf.load31 = load i32, i32* %28, align 8, !dbg !9286
  %bf.clear32 = and i32 %bf.load31, 65535, !dbg !9286
  %idxprom33 = sext i32 %bf.clear32 to i64, !dbg !9286
  %arrayidx34 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom33, !dbg !9286
  %29 = load i32, i32* %arrayidx34, align 4, !dbg !9286
  %cmp35 = icmp eq i32 %29, 9, !dbg !9286
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !9288

if.then36:                                        ; preds = %sw.bb23
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9289
  store %struct.rtx_def* %30, %struct.rtx_def** %retval, align 8, !dbg !9290
  br label %return, !dbg !9290

if.end37:                                         ; preds = %sw.bb23
  br label %sw.epilog, !dbg !9291

sw.default:                                       ; preds = %if.end
  br label %sw.epilog, !dbg !9292

sw.epilog:                                        ; preds = %sw.default, %if.end37
  %31 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9293
  %32 = bitcast %struct.rtx_def* %31 to i32*, !dbg !9293
  %bf.load38 = load i32, i32* %32, align 8, !dbg !9293
  %bf.lshr = lshr i32 %bf.load38, 16, !dbg !9293
  %bf.clear39 = and i32 %bf.lshr, 255, !dbg !9293
  store i32 %bf.clear39, i32* %mode, align 4, !dbg !9294
  store %struct.rtx_def* null, %struct.rtx_def** %const_arg0, align 8, !dbg !9295
  store %struct.rtx_def* null, %struct.rtx_def** %const_arg1, align 8, !dbg !9296
  store %struct.rtx_def* null, %struct.rtx_def** %const_arg2, align 8, !dbg !9297
  store i32 0, i32* %mode_arg0, align 4, !dbg !9298
  %33 = load i32, i32* %code, align 4, !dbg !9299
  %idxprom40 = sext i32 %33 to i64, !dbg !9299
  %arrayidx41 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom40, !dbg !9299
  %34 = load i8*, i8** %arrayidx41, align 8, !dbg !9299
  store i8* %34, i8** %fmt, align 8, !dbg !9300
  %35 = load i32, i32* %code, align 4, !dbg !9301
  %idxprom42 = sext i32 %35 to i64, !dbg !9301
  %arrayidx43 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom42, !dbg !9301
  %36 = load i8, i8* %arrayidx43, align 1, !dbg !9301
  %conv = zext i8 %36 to i32, !dbg !9301
  %sub44 = sub nsw i32 %conv, 1, !dbg !9303
  store i32 %sub44, i32* %i, align 4, !dbg !9304
  br label %for.cond45, !dbg !9305

for.cond45:                                       ; preds = %for.inc159, %sw.epilog
  %37 = load i32, i32* %i, align 4, !dbg !9306
  %cmp46 = icmp sge i32 %37, 0, !dbg !9308
  br i1 %cmp46, label %for.body48, label %for.end161, !dbg !9309

for.body48:                                       ; preds = %for.cond45
  %38 = load i8*, i8** %fmt, align 8, !dbg !9310
  %39 = load i32, i32* %i, align 4, !dbg !9312
  %idxprom49 = sext i32 %39 to i64, !dbg !9310
  %arrayidx50 = getelementptr inbounds i8, i8* %38, i64 %idxprom49, !dbg !9310
  %40 = load i8, i8* %arrayidx50, align 1, !dbg !9310
  %conv51 = sext i8 %40 to i32, !dbg !9310
  %cmp52 = icmp eq i32 %conv51, 101, !dbg !9313
  br i1 %cmp52, label %if.then54, label %if.end158, !dbg !9314

if.then54:                                        ; preds = %for.body48
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %folded_arg, metadata !9315, metadata !DIExpression()), !dbg !9317
  %41 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9318
  %u55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !9318
  %fld56 = bitcast %union.u* %u55 to [1 x %union.rtunion_def]*, !dbg !9318
  %42 = load i32, i32* %i, align 4, !dbg !9318
  %idxprom57 = sext i32 %42 to i64, !dbg !9318
  %arrayidx58 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i64 0, i64 %idxprom57, !dbg !9318
  %rt_rtx59 = bitcast %union.rtunion_def* %arrayidx58 to %struct.rtx_def**, !dbg !9318
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx59, align 8, !dbg !9318
  store %struct.rtx_def* %43, %struct.rtx_def** %folded_arg, align 8, !dbg !9317
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %const_arg, metadata !9319, metadata !DIExpression()), !dbg !9320
  call void @llvm.dbg.declare(metadata i32* %mode_arg, metadata !9321, metadata !DIExpression()), !dbg !9322
  %44 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg, align 8, !dbg !9323
  %45 = bitcast %struct.rtx_def* %44 to i32*, !dbg !9323
  %bf.load60 = load i32, i32* %45, align 8, !dbg !9323
  %bf.lshr61 = lshr i32 %bf.load60, 16, !dbg !9323
  %bf.clear62 = and i32 %bf.lshr61, 255, !dbg !9323
  store i32 %bf.clear62, i32* %mode_arg, align 4, !dbg !9322
  %46 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg, align 8, !dbg !9324
  %47 = bitcast %struct.rtx_def* %46 to i32*, !dbg !9324
  %bf.load63 = load i32, i32* %47, align 8, !dbg !9324
  %bf.clear64 = and i32 %bf.load63, 65535, !dbg !9324
  switch i32 %bf.clear64, label %sw.default68 [
    i32 43, label %sw.bb65
    i32 37, label %sw.bb65
    i32 39, label %sw.bb65
    i32 35, label %sw.bb67
    i32 30, label %sw.bb67
    i32 45, label %sw.bb67
    i32 44, label %sw.bb67
    i32 32, label %sw.bb67
    i32 31, label %sw.bb67
    i32 33, label %sw.bb67
  ], !dbg !9325

sw.bb65:                                          ; preds = %if.then54, %if.then54, %if.then54
  %48 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg, align 8, !dbg !9326
  %call66 = call %struct.rtx_def* @equiv_constant(%struct.rtx_def* %48), !dbg !9328
  store %struct.rtx_def* %call66, %struct.rtx_def** %const_arg, align 8, !dbg !9329
  br label %sw.epilog71, !dbg !9330

sw.bb67:                                          ; preds = %if.then54, %if.then54, %if.then54, %if.then54, %if.then54, %if.then54, %if.then54
  %49 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg, align 8, !dbg !9331
  store %struct.rtx_def* %49, %struct.rtx_def** %const_arg, align 8, !dbg !9332
  br label %sw.epilog71, !dbg !9333

sw.default68:                                     ; preds = %if.then54
  %50 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg, align 8, !dbg !9334
  %51 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9335
  %call69 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %50, %struct.rtx_def* %51), !dbg !9336
  store %struct.rtx_def* %call69, %struct.rtx_def** %folded_arg, align 8, !dbg !9337
  %52 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg, align 8, !dbg !9338
  %call70 = call %struct.rtx_def* @equiv_constant(%struct.rtx_def* %52), !dbg !9339
  store %struct.rtx_def* %call70, %struct.rtx_def** %const_arg, align 8, !dbg !9340
  br label %sw.epilog71, !dbg !9341

sw.epilog71:                                      ; preds = %sw.default68, %sw.bb67, %sw.bb65
  %53 = load i32, i32* %i, align 4, !dbg !9342
  switch i32 %53, label %sw.epilog75 [
    i32 0, label %sw.bb72
    i32 1, label %sw.bb73
    i32 2, label %sw.bb74
  ], !dbg !9343

sw.bb72:                                          ; preds = %sw.epilog71
  %54 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg, align 8, !dbg !9344
  store %struct.rtx_def* %54, %struct.rtx_def** %folded_arg0, align 8, !dbg !9346
  %55 = load %struct.rtx_def*, %struct.rtx_def** %const_arg, align 8, !dbg !9347
  store %struct.rtx_def* %55, %struct.rtx_def** %const_arg0, align 8, !dbg !9348
  %56 = load i32, i32* %mode_arg, align 4, !dbg !9349
  store i32 %56, i32* %mode_arg0, align 4, !dbg !9350
  br label %sw.epilog75, !dbg !9351

sw.bb73:                                          ; preds = %sw.epilog71
  %57 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg, align 8, !dbg !9352
  store %struct.rtx_def* %57, %struct.rtx_def** %folded_arg1, align 8, !dbg !9353
  %58 = load %struct.rtx_def*, %struct.rtx_def** %const_arg, align 8, !dbg !9354
  store %struct.rtx_def* %58, %struct.rtx_def** %const_arg1, align 8, !dbg !9355
  br label %sw.epilog75, !dbg !9356

sw.bb74:                                          ; preds = %sw.epilog71
  %59 = load %struct.rtx_def*, %struct.rtx_def** %const_arg, align 8, !dbg !9357
  store %struct.rtx_def* %59, %struct.rtx_def** %const_arg2, align 8, !dbg !9358
  br label %sw.epilog75, !dbg !9359

sw.epilog75:                                      ; preds = %sw.epilog71, %sw.bb74, %sw.bb73, %sw.bb72
  %60 = load %struct.rtx_def*, %struct.rtx_def** %const_arg, align 8, !dbg !9360
  %cmp76 = icmp ne %struct.rtx_def* %60, null, !dbg !9362
  br i1 %cmp76, label %land.lhs.true, label %if.end135, !dbg !9363

land.lhs.true:                                    ; preds = %sw.epilog75
  %61 = load %struct.rtx_def*, %struct.rtx_def** %const_arg, align 8, !dbg !9364
  %62 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg, align 8, !dbg !9365
  %cmp78 = icmp ne %struct.rtx_def* %61, %62, !dbg !9366
  br i1 %cmp78, label %land.lhs.true80, label %if.end135, !dbg !9367

land.lhs.true80:                                  ; preds = %land.lhs.true
  %63 = load %struct.rtx_def*, %struct.rtx_def** %const_arg, align 8, !dbg !9368
  %64 = bitcast %struct.rtx_def* %63 to i32*, !dbg !9368
  %bf.load81 = load i32, i32* %64, align 8, !dbg !9368
  %bf.clear82 = and i32 %bf.load81, 65535, !dbg !9368
  %cmp83 = icmp eq i32 %bf.clear82, 37, !dbg !9368
  br i1 %cmp83, label %cond.true, label %cond.false, !dbg !9368

cond.true:                                        ; preds = %land.lhs.true80
  br label %cond.end, !dbg !9368

cond.false:                                       ; preds = %land.lhs.true80
  %65 = load %struct.rtx_def*, %struct.rtx_def** %const_arg, align 8, !dbg !9368
  %66 = load i32, i32* %code, align 4, !dbg !9368
  %call85 = call i32 @notreg_cost(%struct.rtx_def* %65, i32 %66), !dbg !9368
  br label %cond.end, !dbg !9368

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call85, %cond.false ], !dbg !9368
  %67 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg, align 8, !dbg !9369
  %68 = bitcast %struct.rtx_def* %67 to i32*, !dbg !9369
  %bf.load86 = load i32, i32* %68, align 8, !dbg !9369
  %bf.clear87 = and i32 %bf.load86, 65535, !dbg !9369
  %cmp88 = icmp eq i32 %bf.clear87, 37, !dbg !9369
  br i1 %cmp88, label %cond.true90, label %cond.false91, !dbg !9369

cond.true90:                                      ; preds = %cond.end
  br label %cond.end93, !dbg !9369

cond.false91:                                     ; preds = %cond.end
  %69 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg, align 8, !dbg !9369
  %70 = load i32, i32* %code, align 4, !dbg !9369
  %call92 = call i32 @notreg_cost(%struct.rtx_def* %69, i32 %70), !dbg !9369
  br label %cond.end93, !dbg !9369

cond.end93:                                       ; preds = %cond.false91, %cond.true90
  %cond94 = phi i32 [ 0, %cond.true90 ], [ %call92, %cond.false91 ], !dbg !9369
  %cmp95 = icmp sle i32 %cond, %cond94, !dbg !9370
  br i1 %cmp95, label %land.lhs.true97, label %if.end135, !dbg !9371

land.lhs.true97:                                  ; preds = %cond.end93
  %71 = load i32, i32* %code, align 4, !dbg !9372
  %idxprom98 = sext i32 %71 to i64, !dbg !9372
  %arrayidx99 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom98, !dbg !9372
  %72 = load i32, i32* %arrayidx99, align 4, !dbg !9372
  %cmp100 = icmp ne i32 %72, 4, !dbg !9373
  br i1 %cmp100, label %if.then134, label %lor.lhs.false, !dbg !9374

lor.lhs.false:                                    ; preds = %land.lhs.true97
  %73 = load %struct.rtx_def*, %struct.rtx_def** %const_arg, align 8, !dbg !9375
  %74 = bitcast %struct.rtx_def* %73 to i32*, !dbg !9375
  %bf.load102 = load i32, i32* %74, align 8, !dbg !9375
  %bf.lshr103 = lshr i32 %bf.load102, 16, !dbg !9375
  %bf.clear104 = and i32 %bf.lshr103, 255, !dbg !9375
  %75 = load i32, i32* %mode_arg0, align 4, !dbg !9376
  %cmp105 = icmp eq i32 %bf.clear104, %75, !dbg !9377
  br i1 %cmp105, label %if.then134, label %lor.lhs.false107, !dbg !9378

lor.lhs.false107:                                 ; preds = %lor.lhs.false
  %76 = load i32, i32* %code, align 4, !dbg !9379
  %cmp108 = icmp ne i32 %76, 99, !dbg !9380
  br i1 %cmp108, label %land.lhs.true110, label %if.end135, !dbg !9381

land.lhs.true110:                                 ; preds = %lor.lhs.false107
  %77 = load i32, i32* %code, align 4, !dbg !9382
  %cmp111 = icmp ne i32 %77, 98, !dbg !9383
  br i1 %cmp111, label %land.lhs.true113, label %if.end135, !dbg !9384

land.lhs.true113:                                 ; preds = %land.lhs.true110
  %78 = load i32, i32* %code, align 4, !dbg !9385
  %cmp114 = icmp ne i32 %78, 100, !dbg !9386
  br i1 %cmp114, label %land.lhs.true116, label %if.end135, !dbg !9387

land.lhs.true116:                                 ; preds = %land.lhs.true113
  %79 = load i32, i32* %code, align 4, !dbg !9388
  %cmp117 = icmp ne i32 %79, 102, !dbg !9389
  br i1 %cmp117, label %land.lhs.true119, label %if.end135, !dbg !9390

land.lhs.true119:                                 ; preds = %land.lhs.true116
  %80 = load i32, i32* %code, align 4, !dbg !9391
  %cmp120 = icmp ne i32 %80, 101, !dbg !9392
  br i1 %cmp120, label %land.lhs.true122, label %if.end135, !dbg !9393

land.lhs.true122:                                 ; preds = %land.lhs.true119
  %81 = load i32, i32* %code, align 4, !dbg !9394
  %cmp123 = icmp ne i32 %81, 103, !dbg !9395
  br i1 %cmp123, label %land.lhs.true125, label %if.end135, !dbg !9396

land.lhs.true125:                                 ; preds = %land.lhs.true122
  %82 = load i32, i32* %code, align 4, !dbg !9397
  %cmp126 = icmp ne i32 %82, 104, !dbg !9398
  br i1 %cmp126, label %land.lhs.true128, label %if.end135, !dbg !9399

land.lhs.true128:                                 ; preds = %land.lhs.true125
  %83 = load i32, i32* %code, align 4, !dbg !9400
  %cmp129 = icmp ne i32 %83, 105, !dbg !9401
  br i1 %cmp129, label %land.lhs.true131, label %if.end135, !dbg !9402

land.lhs.true131:                                 ; preds = %land.lhs.true128
  %84 = load i32, i32* %code, align 4, !dbg !9403
  %cmp132 = icmp ne i32 %84, 106, !dbg !9404
  br i1 %cmp132, label %if.then134, label %if.end135, !dbg !9405

if.then134:                                       ; preds = %land.lhs.true131, %lor.lhs.false, %land.lhs.true97
  %85 = load %struct.rtx_def*, %struct.rtx_def** %const_arg, align 8, !dbg !9406
  store %struct.rtx_def* %85, %struct.rtx_def** %folded_arg, align 8, !dbg !9407
  br label %if.end135, !dbg !9408

if.end135:                                        ; preds = %if.then134, %land.lhs.true131, %land.lhs.true128, %land.lhs.true125, %land.lhs.true122, %land.lhs.true119, %land.lhs.true116, %land.lhs.true113, %land.lhs.true110, %lor.lhs.false107, %cond.end93, %land.lhs.true, %sw.epilog75
  %86 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg, align 8, !dbg !9409
  %87 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9411
  %u136 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1, !dbg !9411
  %fld137 = bitcast %union.u* %u136 to [1 x %union.rtunion_def]*, !dbg !9411
  %88 = load i32, i32* %i, align 4, !dbg !9411
  %idxprom138 = sext i32 %88 to i64, !dbg !9411
  %arrayidx139 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld137, i64 0, i64 %idxprom138, !dbg !9411
  %rt_rtx140 = bitcast %union.rtunion_def* %arrayidx139 to %struct.rtx_def**, !dbg !9411
  %89 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx140, align 8, !dbg !9411
  %cmp141 = icmp eq %struct.rtx_def* %86, %89, !dbg !9412
  br i1 %cmp141, label %if.then143, label %if.end144, !dbg !9413

if.then143:                                       ; preds = %if.end135
  br label %for.inc159, !dbg !9414

if.end144:                                        ; preds = %if.end135
  %90 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9415
  %cmp145 = icmp eq %struct.rtx_def* %90, null, !dbg !9417
  br i1 %cmp145, label %land.lhs.true147, label %if.end151, !dbg !9418

land.lhs.true147:                                 ; preds = %if.end144
  %91 = load i32, i32* %changed, align 4, !dbg !9419
  %tobool148 = icmp ne i32 %91, 0, !dbg !9419
  br i1 %tobool148, label %if.end151, label %if.then149, !dbg !9420

if.then149:                                       ; preds = %land.lhs.true147
  %92 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9421
  %call150 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %92), !dbg !9422
  store %struct.rtx_def* %call150, %struct.rtx_def** %x.addr, align 8, !dbg !9423
  br label %if.end151, !dbg !9424

if.end151:                                        ; preds = %if.then149, %land.lhs.true147, %if.end144
  store i32 1, i32* %changed, align 4, !dbg !9425
  %93 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9426
  %94 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9427
  %u152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1, !dbg !9427
  %fld153 = bitcast %union.u* %u152 to [1 x %union.rtunion_def]*, !dbg !9427
  %95 = load i32, i32* %i, align 4, !dbg !9427
  %idxprom154 = sext i32 %95 to i64, !dbg !9427
  %arrayidx155 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld153, i64 0, i64 %idxprom154, !dbg !9427
  %rt_rtx156 = bitcast %union.rtunion_def* %arrayidx155 to %struct.rtx_def**, !dbg !9427
  %96 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg, align 8, !dbg !9428
  %call157 = call zeroext i8 @validate_unshare_change(%struct.rtx_def* %93, %struct.rtx_def** %rt_rtx156, %struct.rtx_def* %96, i8 zeroext 1), !dbg !9429
  br label %if.end158, !dbg !9430

if.end158:                                        ; preds = %if.end151, %for.body48
  br label %for.inc159, !dbg !9431

for.inc159:                                       ; preds = %if.end158, %if.then143
  %97 = load i32, i32* %i, align 4, !dbg !9432
  %dec160 = add nsw i32 %97, -1, !dbg !9432
  store i32 %dec160, i32* %i, align 4, !dbg !9432
  br label %for.cond45, !dbg !9433, !llvm.loop !9434

for.end161:                                       ; preds = %for.cond45
  %98 = load i32, i32* %changed, align 4, !dbg !9436
  %tobool162 = icmp ne i32 %98, 0, !dbg !9436
  br i1 %tobool162, label %if.then163, label %if.end169, !dbg !9438

if.then163:                                       ; preds = %for.end161
  %99 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9439
  %100 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9442
  %call164 = call zeroext i8 @canonicalize_change_group(%struct.rtx_def* %99, %struct.rtx_def* %100), !dbg !9443
  %tobool165 = icmp ne i8 %call164, 0, !dbg !9443
  br i1 %tobool165, label %if.then166, label %if.end167, !dbg !9444

if.then166:                                       ; preds = %if.then163
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !9445, metadata !DIExpression()), !dbg !9447
  %101 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8, !dbg !9448
  store %struct.rtx_def* %101, %struct.rtx_def** %tem, align 8, !dbg !9449
  %102 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !9450
  store %struct.rtx_def* %102, %struct.rtx_def** %const_arg0, align 8, !dbg !9451
  %103 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9452
  store %struct.rtx_def* %103, %struct.rtx_def** %const_arg1, align 8, !dbg !9453
  %104 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9454
  store %struct.rtx_def* %104, %struct.rtx_def** %tem, align 8, !dbg !9455
  %105 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8, !dbg !9456
  store %struct.rtx_def* %105, %struct.rtx_def** %folded_arg0, align 8, !dbg !9457
  %106 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9458
  store %struct.rtx_def* %106, %struct.rtx_def** %folded_arg1, align 8, !dbg !9459
  br label %if.end167, !dbg !9460

if.end167:                                        ; preds = %if.then166, %if.then163
  %call168 = call i32 @apply_change_group(), !dbg !9461
  br label %if.end169, !dbg !9462

if.end169:                                        ; preds = %if.end167, %for.end161
  %107 = load i32, i32* %code, align 4, !dbg !9463
  %idxprom170 = sext i32 %107 to i64, !dbg !9463
  %arrayidx171 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom170, !dbg !9463
  %108 = load i32, i32* %arrayidx171, align 4, !dbg !9463
  switch i32 %108, label %sw.default1142 [
    i32 4, label %sw.bb172
    i32 0, label %sw.bb189
    i32 1, label %sw.bb189
    i32 2, label %sw.bb536
    i32 3, label %sw.bb536
    i32 8, label %sw.bb1101
    i32 10, label %sw.bb1121
    i32 11, label %sw.bb1121
  ], !dbg !9464

sw.bb172:                                         ; preds = %if.end169
  %109 = load i32, i32* %code, align 4, !dbg !9465
  %cmp173 = icmp eq i32 %109, 99, !dbg !9469
  br i1 %cmp173, label %land.lhs.true178, label %lor.lhs.false175, !dbg !9470

lor.lhs.false175:                                 ; preds = %sw.bb172
  %110 = load i32, i32* %code, align 4, !dbg !9471
  %cmp176 = icmp eq i32 %110, 98, !dbg !9472
  br i1 %cmp176, label %land.lhs.true178, label %if.end182, !dbg !9473

land.lhs.true178:                                 ; preds = %lor.lhs.false175, %sw.bb172
  %111 = load i32, i32* %mode_arg0, align 4, !dbg !9474
  %cmp179 = icmp eq i32 %111, 0, !dbg !9475
  br i1 %cmp179, label %if.then181, label %if.end182, !dbg !9476

if.then181:                                       ; preds = %land.lhs.true178
  br label %sw.epilog1143, !dbg !9477

if.end182:                                        ; preds = %land.lhs.true178, %lor.lhs.false175
  %112 = load i32, i32* %code, align 4, !dbg !9478
  %113 = load i32, i32* %mode, align 4, !dbg !9479
  %114 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8, !dbg !9480
  %tobool183 = icmp ne %struct.rtx_def* %114, null, !dbg !9480
  br i1 %tobool183, label %cond.true184, label %cond.false185, !dbg !9480

cond.true184:                                     ; preds = %if.end182
  %115 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8, !dbg !9481
  br label %cond.end186, !dbg !9480

cond.false185:                                    ; preds = %if.end182
  %116 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9482
  br label %cond.end186, !dbg !9480

cond.end186:                                      ; preds = %cond.false185, %cond.true184
  %cond187 = phi %struct.rtx_def* [ %115, %cond.true184 ], [ %116, %cond.false185 ], !dbg !9480
  %117 = load i32, i32* %mode_arg0, align 4, !dbg !9483
  %call188 = call %struct.rtx_def* @simplify_unary_operation(i32 %112, i32 %113, %struct.rtx_def* %cond187, i32 %117), !dbg !9484
  store %struct.rtx_def* %call188, %struct.rtx_def** %new_rtx, align 8, !dbg !9485
  br label %sw.epilog1143, !dbg !9486

sw.bb189:                                         ; preds = %if.end169, %if.end169
  %118 = load i32, i32* %mode, align 4, !dbg !9487
  %idxprom190 = zext i32 %118 to i64, !dbg !9487
  %arrayidx191 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom190, !dbg !9487
  %119 = load i8, i8* %arrayidx191, align 1, !dbg !9487
  %conv192 = zext i8 %119 to i32, !dbg !9487
  %cmp193 = icmp eq i32 %conv192, 12, !dbg !9487
  br i1 %cmp193, label %if.then225, label %lor.lhs.false195, !dbg !9487

lor.lhs.false195:                                 ; preds = %sw.bb189
  %120 = load i32, i32* %mode, align 4, !dbg !9487
  %idxprom196 = zext i32 %120 to i64, !dbg !9487
  %arrayidx197 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom196, !dbg !9487
  %121 = load i8, i8* %arrayidx197, align 1, !dbg !9487
  %conv198 = zext i8 %121 to i32, !dbg !9487
  %cmp199 = icmp eq i32 %conv198, 17, !dbg !9487
  br i1 %cmp199, label %if.then225, label %lor.lhs.false201, !dbg !9487

lor.lhs.false201:                                 ; preds = %lor.lhs.false195
  %122 = load i32, i32* %mode, align 4, !dbg !9487
  %idxprom202 = zext i32 %122 to i64, !dbg !9487
  %arrayidx203 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom202, !dbg !9487
  %123 = load i8, i8* %arrayidx203, align 1, !dbg !9487
  %conv204 = zext i8 %123 to i32, !dbg !9487
  %cmp205 = icmp eq i32 %conv204, 13, !dbg !9487
  br i1 %cmp205, label %if.then225, label %lor.lhs.false207, !dbg !9487

lor.lhs.false207:                                 ; preds = %lor.lhs.false201
  %124 = load i32, i32* %mode, align 4, !dbg !9487
  %idxprom208 = zext i32 %124 to i64, !dbg !9487
  %arrayidx209 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom208, !dbg !9487
  %125 = load i8, i8* %arrayidx209, align 1, !dbg !9487
  %conv210 = zext i8 %125 to i32, !dbg !9487
  %cmp211 = icmp eq i32 %conv210, 14, !dbg !9487
  br i1 %cmp211, label %if.then225, label %lor.lhs.false213, !dbg !9487

lor.lhs.false213:                                 ; preds = %lor.lhs.false207
  %126 = load i32, i32* %mode, align 4, !dbg !9487
  %idxprom214 = zext i32 %126 to i64, !dbg !9487
  %arrayidx215 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom214, !dbg !9487
  %127 = load i8, i8* %arrayidx215, align 1, !dbg !9487
  %conv216 = zext i8 %127 to i32, !dbg !9487
  %cmp217 = icmp eq i32 %conv216, 15, !dbg !9487
  br i1 %cmp217, label %if.then225, label %lor.lhs.false219, !dbg !9487

lor.lhs.false219:                                 ; preds = %lor.lhs.false213
  %128 = load i32, i32* %mode, align 4, !dbg !9487
  %idxprom220 = zext i32 %128 to i64, !dbg !9487
  %arrayidx221 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom220, !dbg !9487
  %129 = load i8, i8* %arrayidx221, align 1, !dbg !9487
  %conv222 = zext i8 %129 to i32, !dbg !9487
  %cmp223 = icmp eq i32 %conv222, 16, !dbg !9487
  br i1 %cmp223, label %if.then225, label %if.end226, !dbg !9489

if.then225:                                       ; preds = %lor.lhs.false219, %lor.lhs.false213, %lor.lhs.false207, %lor.lhs.false201, %lor.lhs.false195, %sw.bb189
  br label %sw.epilog1143, !dbg !9490

if.end226:                                        ; preds = %lor.lhs.false219
  %130 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8, !dbg !9491
  %cmp227 = icmp eq %struct.rtx_def* %130, null, !dbg !9493
  br i1 %cmp227, label %if.then232, label %lor.lhs.false229, !dbg !9494

lor.lhs.false229:                                 ; preds = %if.end226
  %131 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !9495
  %cmp230 = icmp eq %struct.rtx_def* %131, null, !dbg !9496
  br i1 %cmp230, label %if.then232, label %if.end490, !dbg !9497

if.then232:                                       ; preds = %lor.lhs.false229, %if.end226
  call void @llvm.dbg.declare(metadata %struct.table_elt** %p0, metadata !9498, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.declare(metadata %struct.table_elt** %p1, metadata !9501, metadata !DIExpression()), !dbg !9502
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %true_rtx, metadata !9503, metadata !DIExpression()), !dbg !9504
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %false_rtx, metadata !9505, metadata !DIExpression()), !dbg !9506
  call void @llvm.dbg.declare(metadata i32* %mode_arg1, metadata !9507, metadata !DIExpression()), !dbg !9508
  %132 = load i32, i32* %mode, align 4, !dbg !9509
  %idxprom233 = zext i32 %132 to i64, !dbg !9509
  %arrayidx234 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom233, !dbg !9509
  %133 = load i8, i8* %arrayidx234, align 1, !dbg !9509
  %conv235 = zext i8 %133 to i32, !dbg !9509
  %cmp236 = icmp eq i32 %conv235, 8, !dbg !9509
  br i1 %cmp236, label %if.then244, label %lor.lhs.false238, !dbg !9509

lor.lhs.false238:                                 ; preds = %if.then232
  %134 = load i32, i32* %mode, align 4, !dbg !9509
  %idxprom239 = zext i32 %134 to i64, !dbg !9509
  %arrayidx240 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom239, !dbg !9509
  %135 = load i8, i8* %arrayidx240, align 1, !dbg !9509
  %conv241 = zext i8 %135 to i32, !dbg !9509
  %cmp242 = icmp eq i32 %conv241, 9, !dbg !9509
  br i1 %cmp242, label %if.then244, label %if.else, !dbg !9511

if.then244:                                       ; preds = %lor.lhs.false238, %if.then232
  store %struct.rtx_def* null, %struct.rtx_def** %true_rtx, align 8, !dbg !9512
  %136 = load i32, i32* %mode, align 4, !dbg !9514
  %idxprom245 = sext i32 %136 to i64, !dbg !9514
  %arrayidx246 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom245, !dbg !9514
  %137 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx246, align 8, !dbg !9514
  store %struct.rtx_def* %137, %struct.rtx_def** %false_rtx, align 8, !dbg !9515
  br label %if.end247, !dbg !9516

if.else:                                          ; preds = %lor.lhs.false238
  %138 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !9517
  store %struct.rtx_def* %138, %struct.rtx_def** %true_rtx, align 8, !dbg !9519
  %139 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !9520
  store %struct.rtx_def* %139, %struct.rtx_def** %false_rtx, align 8, !dbg !9521
  br label %if.end247

if.end247:                                        ; preds = %if.else, %if.then244
  %140 = load i32, i32* %code, align 4, !dbg !9522
  %call248 = call i32 @find_comparison_args(i32 %140, %struct.rtx_def** %folded_arg0, %struct.rtx_def** %folded_arg1, i32* %mode_arg0, i32* %mode_arg1), !dbg !9523
  store i32 %call248, i32* %code, align 4, !dbg !9524
  %141 = load i32, i32* %mode_arg0, align 4, !dbg !9525
  %cmp249 = icmp eq i32 %141, 0, !dbg !9527
  br i1 %cmp249, label %if.then257, label %lor.lhs.false251, !dbg !9528

lor.lhs.false251:                                 ; preds = %if.end247
  %142 = load i32, i32* %mode_arg0, align 4, !dbg !9529
  %idxprom252 = zext i32 %142 to i64, !dbg !9529
  %arrayidx253 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom252, !dbg !9529
  %143 = load i8, i8* %arrayidx253, align 1, !dbg !9529
  %conv254 = zext i8 %143 to i32, !dbg !9529
  %cmp255 = icmp eq i32 %conv254, 1, !dbg !9530
  br i1 %cmp255, label %if.then257, label %if.end258, !dbg !9531

if.then257:                                       ; preds = %lor.lhs.false251, %if.end247
  br label %sw.epilog1143, !dbg !9532

if.end258:                                        ; preds = %lor.lhs.false251
  %144 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9533
  %call259 = call %struct.rtx_def* @equiv_constant(%struct.rtx_def* %144), !dbg !9534
  store %struct.rtx_def* %call259, %struct.rtx_def** %const_arg0, align 8, !dbg !9535
  %145 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8, !dbg !9536
  %call260 = call %struct.rtx_def* @equiv_constant(%struct.rtx_def* %145), !dbg !9537
  store %struct.rtx_def* %call260, %struct.rtx_def** %const_arg1, align 8, !dbg !9538
  %146 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8, !dbg !9539
  %cmp261 = icmp eq %struct.rtx_def* %146, null, !dbg !9541
  br i1 %cmp261, label %if.then266, label %lor.lhs.false263, !dbg !9542

lor.lhs.false263:                                 ; preds = %if.end258
  %147 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !9543
  %cmp264 = icmp eq %struct.rtx_def* %147, null, !dbg !9544
  br i1 %cmp264, label %if.then266, label %if.end489, !dbg !9545

if.then266:                                       ; preds = %lor.lhs.false263, %if.end258
  %148 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !9546
  %cmp267 = icmp ne %struct.rtx_def* %148, null, !dbg !9549
  br i1 %cmp267, label %if.then269, label %if.end335, !dbg !9550

if.then269:                                       ; preds = %if.then266
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cheapest_simplification, metadata !9551, metadata !DIExpression()), !dbg !9553
  call void @llvm.dbg.declare(metadata i32* %cheapest_cost, metadata !9554, metadata !DIExpression()), !dbg !9555
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %simp_result, metadata !9556, metadata !DIExpression()), !dbg !9557
  call void @llvm.dbg.declare(metadata %struct.table_elt** %p, metadata !9558, metadata !DIExpression()), !dbg !9559
  %149 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9560
  %150 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9561
  %151 = bitcast %struct.rtx_def* %150 to i32*, !dbg !9561
  %bf.load270 = load i32, i32* %151, align 8, !dbg !9561
  %bf.clear271 = and i32 %bf.load270, 65535, !dbg !9561
  %cmp272 = icmp eq i32 %bf.clear271, 37, !dbg !9561
  br i1 %cmp272, label %land.lhs.true274, label %cond.false281, !dbg !9561

land.lhs.true274:                                 ; preds = %if.then269
  %152 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9561
  %call275 = call i32 @rhs_regno(%struct.rtx_def* %152), !dbg !9561
  %cmp276 = icmp uge i32 %call275, 53, !dbg !9561
  br i1 %cmp276, label %cond.true278, label %cond.false281, !dbg !9561

cond.true278:                                     ; preds = %land.lhs.true274
  %153 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9561
  %call279 = call i32 @rhs_regno(%struct.rtx_def* %153), !dbg !9561
  %call280 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call279), !dbg !9561
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call280, i32 0, i32 1, !dbg !9561
  %154 = load i32, i32* %reg_qty, align 4, !dbg !9561
  %add = add i32 4736, %154, !dbg !9561
  br label %cond.end283, !dbg !9561

cond.false281:                                    ; preds = %land.lhs.true274, %if.then269
  %155 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9561
  %156 = load i32, i32* %mode_arg0, align 4, !dbg !9561
  %call282 = call i32 @safe_hash(%struct.rtx_def* %155, i32 %156), !dbg !9561
  br label %cond.end283, !dbg !9561

cond.end283:                                      ; preds = %cond.false281, %cond.true278
  %cond284 = phi i32 [ %add, %cond.true278 ], [ %call282, %cond.false281 ], !dbg !9561
  %and = and i32 %cond284, 31, !dbg !9561
  %157 = load i32, i32* %mode_arg0, align 4, !dbg !9562
  %call285 = call %struct.table_elt* @lookup(%struct.rtx_def* %149, i32 %and, i32 %157), !dbg !9563
  store %struct.table_elt* %call285, %struct.table_elt** %p, align 8, !dbg !9564
  %158 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !9565
  %cmp286 = icmp ne %struct.table_elt* %158, null, !dbg !9567
  br i1 %cmp286, label %if.then288, label %if.end334, !dbg !9568

if.then288:                                       ; preds = %cond.end283
  %159 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9569
  store %struct.rtx_def* %159, %struct.rtx_def** %cheapest_simplification, align 8, !dbg !9571
  %160 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9572
  %161 = bitcast %struct.rtx_def* %160 to i32*, !dbg !9572
  %bf.load289 = load i32, i32* %161, align 8, !dbg !9572
  %bf.clear290 = and i32 %bf.load289, 65535, !dbg !9572
  %cmp291 = icmp eq i32 %bf.clear290, 37, !dbg !9572
  br i1 %cmp291, label %cond.true293, label %cond.false294, !dbg !9572

cond.true293:                                     ; preds = %if.then288
  br label %cond.end296, !dbg !9572

cond.false294:                                    ; preds = %if.then288
  %162 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9572
  %call295 = call i32 @notreg_cost(%struct.rtx_def* %162, i32 23), !dbg !9572
  br label %cond.end296, !dbg !9572

cond.end296:                                      ; preds = %cond.false294, %cond.true293
  %cond297 = phi i32 [ 0, %cond.true293 ], [ %call295, %cond.false294 ], !dbg !9572
  store i32 %cond297, i32* %cheapest_cost, align 4, !dbg !9573
  %163 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !9574
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %163, i32 0, i32 6, !dbg !9576
  %164 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8, !dbg !9576
  store %struct.table_elt* %164, %struct.table_elt** %p, align 8, !dbg !9577
  br label %for.cond298, !dbg !9578

for.cond298:                                      ; preds = %for.inc326, %cond.end296
  %165 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !9579
  %cmp299 = icmp ne %struct.table_elt* %165, null, !dbg !9581
  br i1 %cmp299, label %for.body301, label %for.end327, !dbg !9582

for.body301:                                      ; preds = %for.cond298
  call void @llvm.dbg.declare(metadata i32* %cost, metadata !9583, metadata !DIExpression()), !dbg !9585
  %166 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !9586
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %166, i32 0, i32 0, !dbg !9588
  %167 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !9588
  %168 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !9589
  %exp302 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %168, i32 0, i32 0, !dbg !9590
  %169 = load %struct.rtx_def*, %struct.rtx_def** %exp302, align 8, !dbg !9590
  %call303 = call i32 @exp_equiv_p(%struct.rtx_def* %167, %struct.rtx_def* %169, i32 1, i8 zeroext 0), !dbg !9591
  %tobool304 = icmp ne i32 %call303, 0, !dbg !9591
  br i1 %tobool304, label %if.end306, label %if.then305, !dbg !9592

if.then305:                                       ; preds = %for.body301
  br label %for.inc326, !dbg !9593

if.end306:                                        ; preds = %for.body301
  %170 = load i32, i32* %code, align 4, !dbg !9594
  %171 = load i32, i32* %mode, align 4, !dbg !9595
  %172 = load i32, i32* %mode_arg0, align 4, !dbg !9596
  %173 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !9597
  %exp307 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %173, i32 0, i32 0, !dbg !9598
  %174 = load %struct.rtx_def*, %struct.rtx_def** %exp307, align 8, !dbg !9598
  %175 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !9599
  %call308 = call %struct.rtx_def* @simplify_relational_operation(i32 %170, i32 %171, i32 %172, %struct.rtx_def* %174, %struct.rtx_def* %175), !dbg !9600
  store %struct.rtx_def* %call308, %struct.rtx_def** %simp_result, align 8, !dbg !9601
  %176 = load %struct.rtx_def*, %struct.rtx_def** %simp_result, align 8, !dbg !9602
  %cmp309 = icmp eq %struct.rtx_def* %176, null, !dbg !9604
  br i1 %cmp309, label %if.then311, label %if.end312, !dbg !9605

if.then311:                                       ; preds = %if.end306
  br label %for.inc326, !dbg !9606

if.end312:                                        ; preds = %if.end306
  %177 = load %struct.rtx_def*, %struct.rtx_def** %simp_result, align 8, !dbg !9607
  %178 = bitcast %struct.rtx_def* %177 to i32*, !dbg !9607
  %bf.load313 = load i32, i32* %178, align 8, !dbg !9607
  %bf.clear314 = and i32 %bf.load313, 65535, !dbg !9607
  %cmp315 = icmp eq i32 %bf.clear314, 37, !dbg !9607
  br i1 %cmp315, label %cond.true317, label %cond.false318, !dbg !9607

cond.true317:                                     ; preds = %if.end312
  br label %cond.end320, !dbg !9607

cond.false318:                                    ; preds = %if.end312
  %179 = load %struct.rtx_def*, %struct.rtx_def** %simp_result, align 8, !dbg !9607
  %call319 = call i32 @notreg_cost(%struct.rtx_def* %179, i32 23), !dbg !9607
  br label %cond.end320, !dbg !9607

cond.end320:                                      ; preds = %cond.false318, %cond.true317
  %cond321 = phi i32 [ 0, %cond.true317 ], [ %call319, %cond.false318 ], !dbg !9607
  store i32 %cond321, i32* %cost, align 4, !dbg !9608
  %180 = load i32, i32* %cost, align 4, !dbg !9609
  %181 = load i32, i32* %cheapest_cost, align 4, !dbg !9611
  %cmp322 = icmp slt i32 %180, %181, !dbg !9612
  br i1 %cmp322, label %if.then324, label %if.end325, !dbg !9613

if.then324:                                       ; preds = %cond.end320
  %182 = load i32, i32* %cost, align 4, !dbg !9614
  store i32 %182, i32* %cheapest_cost, align 4, !dbg !9616
  %183 = load %struct.rtx_def*, %struct.rtx_def** %simp_result, align 8, !dbg !9617
  store %struct.rtx_def* %183, %struct.rtx_def** %cheapest_simplification, align 8, !dbg !9618
  br label %if.end325, !dbg !9619

if.end325:                                        ; preds = %if.then324, %cond.end320
  br label %for.inc326, !dbg !9620

for.inc326:                                       ; preds = %if.end325, %if.then311, %if.then305
  %184 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !9621
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %184, i32 0, i32 4, !dbg !9622
  %185 = load %struct.table_elt*, %struct.table_elt** %next_same_value, align 8, !dbg !9622
  store %struct.table_elt* %185, %struct.table_elt** %p, align 8, !dbg !9623
  br label %for.cond298, !dbg !9624, !llvm.loop !9625

for.end327:                                       ; preds = %for.cond298
  %186 = load %struct.rtx_def*, %struct.rtx_def** %cheapest_simplification, align 8, !dbg !9627
  %187 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9629
  %cmp328 = icmp ne %struct.rtx_def* %186, %187, !dbg !9630
  br i1 %cmp328, label %if.then330, label %if.end333, !dbg !9631

if.then330:                                       ; preds = %for.end327
  %188 = load %struct.rtx_def*, %struct.rtx_def** %cheapest_simplification, align 8, !dbg !9632
  %call331 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %188), !dbg !9633
  %189 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !9634
  %call332 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %call331, %struct.rtx_def* %189), !dbg !9635
  store %struct.rtx_def* %call332, %struct.rtx_def** %retval, align 8, !dbg !9636
  br label %return, !dbg !9636

if.end333:                                        ; preds = %for.end327
  br label %if.end334, !dbg !9637

if.end334:                                        ; preds = %if.end333, %cond.end283
  br label %if.end335, !dbg !9638

if.end335:                                        ; preds = %if.end334, %if.then266
  %190 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9639
  %191 = bitcast %struct.rtx_def* %190 to i32*, !dbg !9639
  %bf.load336 = load i32, i32* %191, align 8, !dbg !9639
  %bf.clear337 = and i32 %bf.load336, 65535, !dbg !9639
  %cmp338 = icmp eq i32 %bf.clear337, 37, !dbg !9639
  br i1 %cmp338, label %land.lhs.true340, label %lor.lhs.false354, !dbg !9641

land.lhs.true340:                                 ; preds = %if.end335
  %192 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8, !dbg !9642
  %193 = bitcast %struct.rtx_def* %192 to i32*, !dbg !9642
  %bf.load341 = load i32, i32* %193, align 8, !dbg !9642
  %bf.clear342 = and i32 %bf.load341, 65535, !dbg !9642
  %cmp343 = icmp eq i32 %bf.clear342, 37, !dbg !9642
  br i1 %cmp343, label %land.lhs.true345, label %lor.lhs.false354, !dbg !9643

land.lhs.true345:                                 ; preds = %land.lhs.true340
  %194 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9644
  %call346 = call i32 @rhs_regno(%struct.rtx_def* %194), !dbg !9644
  %call347 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call346), !dbg !9644
  %reg_qty348 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call347, i32 0, i32 1, !dbg !9644
  %195 = load i32, i32* %reg_qty348, align 4, !dbg !9644
  %196 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8, !dbg !9645
  %call349 = call i32 @rhs_regno(%struct.rtx_def* %196), !dbg !9645
  %call350 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call349), !dbg !9645
  %reg_qty351 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call350, i32 0, i32 1, !dbg !9645
  %197 = load i32, i32* %reg_qty351, align 4, !dbg !9645
  %cmp352 = icmp eq i32 %195, %197, !dbg !9646
  br i1 %cmp352, label %if.then401, label %lor.lhs.false354, !dbg !9647

lor.lhs.false354:                                 ; preds = %land.lhs.true345, %land.lhs.true340, %if.end335
  %198 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9648
  %199 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9649
  %200 = bitcast %struct.rtx_def* %199 to i32*, !dbg !9649
  %bf.load355 = load i32, i32* %200, align 8, !dbg !9649
  %bf.clear356 = and i32 %bf.load355, 65535, !dbg !9649
  %cmp357 = icmp eq i32 %bf.clear356, 37, !dbg !9649
  br i1 %cmp357, label %land.lhs.true359, label %cond.false368, !dbg !9649

land.lhs.true359:                                 ; preds = %lor.lhs.false354
  %201 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9649
  %call360 = call i32 @rhs_regno(%struct.rtx_def* %201), !dbg !9649
  %cmp361 = icmp uge i32 %call360, 53, !dbg !9649
  br i1 %cmp361, label %cond.true363, label %cond.false368, !dbg !9649

cond.true363:                                     ; preds = %land.lhs.true359
  %202 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9649
  %call364 = call i32 @rhs_regno(%struct.rtx_def* %202), !dbg !9649
  %call365 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call364), !dbg !9649
  %reg_qty366 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call365, i32 0, i32 1, !dbg !9649
  %203 = load i32, i32* %reg_qty366, align 4, !dbg !9649
  %add367 = add i32 4736, %203, !dbg !9649
  br label %cond.end370, !dbg !9649

cond.false368:                                    ; preds = %land.lhs.true359, %lor.lhs.false354
  %204 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9649
  %205 = load i32, i32* %mode_arg0, align 4, !dbg !9649
  %call369 = call i32 @safe_hash(%struct.rtx_def* %204, i32 %205), !dbg !9649
  br label %cond.end370, !dbg !9649

cond.end370:                                      ; preds = %cond.false368, %cond.true363
  %cond371 = phi i32 [ %add367, %cond.true363 ], [ %call369, %cond.false368 ], !dbg !9649
  %and372 = and i32 %cond371, 31, !dbg !9649
  %206 = load i32, i32* %mode_arg0, align 4, !dbg !9650
  %call373 = call %struct.table_elt* @lookup(%struct.rtx_def* %198, i32 %and372, i32 %206), !dbg !9651
  store %struct.table_elt* %call373, %struct.table_elt** %p0, align 8, !dbg !9652
  %tobool374 = icmp ne %struct.table_elt* %call373, null, !dbg !9652
  br i1 %tobool374, label %land.lhs.true375, label %if.else402, !dbg !9653

land.lhs.true375:                                 ; preds = %cond.end370
  %207 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8, !dbg !9654
  %208 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8, !dbg !9655
  %209 = bitcast %struct.rtx_def* %208 to i32*, !dbg !9655
  %bf.load376 = load i32, i32* %209, align 8, !dbg !9655
  %bf.clear377 = and i32 %bf.load376, 65535, !dbg !9655
  %cmp378 = icmp eq i32 %bf.clear377, 37, !dbg !9655
  br i1 %cmp378, label %land.lhs.true380, label %cond.false389, !dbg !9655

land.lhs.true380:                                 ; preds = %land.lhs.true375
  %210 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8, !dbg !9655
  %call381 = call i32 @rhs_regno(%struct.rtx_def* %210), !dbg !9655
  %cmp382 = icmp uge i32 %call381, 53, !dbg !9655
  br i1 %cmp382, label %cond.true384, label %cond.false389, !dbg !9655

cond.true384:                                     ; preds = %land.lhs.true380
  %211 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8, !dbg !9655
  %call385 = call i32 @rhs_regno(%struct.rtx_def* %211), !dbg !9655
  %call386 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call385), !dbg !9655
  %reg_qty387 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call386, i32 0, i32 1, !dbg !9655
  %212 = load i32, i32* %reg_qty387, align 4, !dbg !9655
  %add388 = add i32 4736, %212, !dbg !9655
  br label %cond.end391, !dbg !9655

cond.false389:                                    ; preds = %land.lhs.true380, %land.lhs.true375
  %213 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8, !dbg !9655
  %214 = load i32, i32* %mode_arg0, align 4, !dbg !9655
  %call390 = call i32 @safe_hash(%struct.rtx_def* %213, i32 %214), !dbg !9655
  br label %cond.end391, !dbg !9655

cond.end391:                                      ; preds = %cond.false389, %cond.true384
  %cond392 = phi i32 [ %add388, %cond.true384 ], [ %call390, %cond.false389 ], !dbg !9655
  %and393 = and i32 %cond392, 31, !dbg !9655
  %215 = load i32, i32* %mode_arg0, align 4, !dbg !9656
  %call394 = call %struct.table_elt* @lookup(%struct.rtx_def* %207, i32 %and393, i32 %215), !dbg !9657
  store %struct.table_elt* %call394, %struct.table_elt** %p1, align 8, !dbg !9658
  %tobool395 = icmp ne %struct.table_elt* %call394, null, !dbg !9658
  br i1 %tobool395, label %land.lhs.true396, label %if.else402, !dbg !9659

land.lhs.true396:                                 ; preds = %cond.end391
  %216 = load %struct.table_elt*, %struct.table_elt** %p0, align 8, !dbg !9660
  %first_same_value397 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %216, i32 0, i32 6, !dbg !9661
  %217 = load %struct.table_elt*, %struct.table_elt** %first_same_value397, align 8, !dbg !9661
  %218 = load %struct.table_elt*, %struct.table_elt** %p1, align 8, !dbg !9662
  %first_same_value398 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %218, i32 0, i32 6, !dbg !9663
  %219 = load %struct.table_elt*, %struct.table_elt** %first_same_value398, align 8, !dbg !9663
  %cmp399 = icmp eq %struct.table_elt* %217, %219, !dbg !9664
  br i1 %cmp399, label %if.then401, label %if.else402, !dbg !9665

if.then401:                                       ; preds = %land.lhs.true396, %land.lhs.true345
  %220 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9666
  store %struct.rtx_def* %220, %struct.rtx_def** %folded_arg1, align 8, !dbg !9667
  br label %if.end488, !dbg !9668

if.else402:                                       ; preds = %land.lhs.true396, %cond.end391, %cond.end370
  %221 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9669
  %222 = bitcast %struct.rtx_def* %221 to i32*, !dbg !9669
  %bf.load403 = load i32, i32* %222, align 8, !dbg !9669
  %bf.clear404 = and i32 %bf.load403, 65535, !dbg !9669
  %cmp405 = icmp eq i32 %bf.clear404, 37, !dbg !9669
  br i1 %cmp405, label %if.then407, label %if.end487, !dbg !9671

if.then407:                                       ; preds = %if.else402
  call void @llvm.dbg.declare(metadata i32* %qty, metadata !9672, metadata !DIExpression()), !dbg !9674
  %223 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9675
  %call408 = call i32 @rhs_regno(%struct.rtx_def* %223), !dbg !9675
  %call409 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call408), !dbg !9675
  %reg_qty410 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call409, i32 0, i32 1, !dbg !9675
  %224 = load i32, i32* %reg_qty410, align 4, !dbg !9675
  store i32 %224, i32* %qty, align 4, !dbg !9674
  %225 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9676
  %call411 = call i32 @rhs_regno(%struct.rtx_def* %225), !dbg !9676
  %call412 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call411), !dbg !9676
  %reg_qty413 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call412, i32 0, i32 1, !dbg !9676
  %226 = load i32, i32* %reg_qty413, align 4, !dbg !9676
  %cmp414 = icmp sge i32 %226, 0, !dbg !9676
  br i1 %cmp414, label %if.then416, label %if.end486, !dbg !9678

if.then416:                                       ; preds = %if.then407
  call void @llvm.dbg.declare(metadata %struct.qty_table_elem** %ent, metadata !9679, metadata !DIExpression()), !dbg !9681
  %227 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8, !dbg !9682
  %228 = load i32, i32* %qty, align 4, !dbg !9683
  %idxprom417 = sext i32 %228 to i64, !dbg !9682
  %arrayidx418 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %227, i64 %idxprom417, !dbg !9682
  store %struct.qty_table_elem* %arrayidx418, %struct.qty_table_elem** %ent, align 8, !dbg !9681
  %229 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !9684
  %comparison_code = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %229, i32 0, i32 6, !dbg !9686
  %230 = bitcast i24* %comparison_code to i32*, !dbg !9686
  %bf.load419 = load i32, i32* %230, align 4, !dbg !9686
  %bf.clear420 = and i32 %bf.load419, 65535, !dbg !9686
  %231 = load i32, i32* %code, align 4, !dbg !9687
  %call421 = call i32 @comparison_dominates_p(i32 %bf.clear420, i32 %231), !dbg !9688
  %tobool422 = icmp ne i32 %call421, 0, !dbg !9688
  br i1 %tobool422, label %land.lhs.true454, label %lor.lhs.false423, !dbg !9689

lor.lhs.false423:                                 ; preds = %if.then416
  %232 = load i32, i32* %mode_arg0, align 4, !dbg !9690
  %idxprom424 = zext i32 %232 to i64, !dbg !9690
  %arrayidx425 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom424, !dbg !9690
  %233 = load i8, i8* %arrayidx425, align 1, !dbg !9690
  %conv426 = zext i8 %233 to i32, !dbg !9690
  %cmp427 = icmp eq i32 %conv426, 8, !dbg !9690
  br i1 %cmp427, label %if.end485, label %lor.lhs.false429, !dbg !9690

lor.lhs.false429:                                 ; preds = %lor.lhs.false423
  %234 = load i32, i32* %mode_arg0, align 4, !dbg !9690
  %idxprom430 = zext i32 %234 to i64, !dbg !9690
  %arrayidx431 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom430, !dbg !9690
  %235 = load i8, i8* %arrayidx431, align 1, !dbg !9690
  %conv432 = zext i8 %235 to i32, !dbg !9690
  %cmp433 = icmp eq i32 %conv432, 9, !dbg !9690
  br i1 %cmp433, label %if.end485, label %lor.lhs.false435, !dbg !9690

lor.lhs.false435:                                 ; preds = %lor.lhs.false429
  %236 = load i32, i32* %mode_arg0, align 4, !dbg !9690
  %idxprom436 = zext i32 %236 to i64, !dbg !9690
  %arrayidx437 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom436, !dbg !9690
  %237 = load i8, i8* %arrayidx437, align 1, !dbg !9690
  %conv438 = zext i8 %237 to i32, !dbg !9690
  %cmp439 = icmp eq i32 %conv438, 11, !dbg !9690
  br i1 %cmp439, label %if.end485, label %lor.lhs.false441, !dbg !9690

lor.lhs.false441:                                 ; preds = %lor.lhs.false435
  %238 = load i32, i32* %mode_arg0, align 4, !dbg !9690
  %idxprom442 = zext i32 %238 to i64, !dbg !9690
  %arrayidx443 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom442, !dbg !9690
  %239 = load i8, i8* %arrayidx443, align 1, !dbg !9690
  %conv444 = zext i8 %239 to i32, !dbg !9690
  %cmp445 = icmp eq i32 %conv444, 17, !dbg !9690
  br i1 %cmp445, label %if.end485, label %land.lhs.true447, !dbg !9691

land.lhs.true447:                                 ; preds = %lor.lhs.false441
  %240 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !9692
  %comparison_code448 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %240, i32 0, i32 6, !dbg !9693
  %241 = bitcast i24* %comparison_code448 to i32*, !dbg !9693
  %bf.load449 = load i32, i32* %241, align 4, !dbg !9693
  %bf.clear450 = and i32 %bf.load449, 65535, !dbg !9693
  %242 = load i32, i32* %code, align 4, !dbg !9694
  %call451 = call i32 @reverse_condition(i32 %242), !dbg !9695
  %call452 = call i32 @comparison_dominates_p(i32 %bf.clear450, i32 %call451), !dbg !9696
  %tobool453 = icmp ne i32 %call452, 0, !dbg !9696
  br i1 %tobool453, label %land.lhs.true454, label %if.end485, !dbg !9697

land.lhs.true454:                                 ; preds = %land.lhs.true447, %if.then416
  %243 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !9698
  %comparison_const = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %243, i32 0, i32 2, !dbg !9699
  %244 = load %struct.rtx_def*, %struct.rtx_def** %comparison_const, align 8, !dbg !9699
  %245 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8, !dbg !9700
  %call455 = call i32 @rtx_equal_p(%struct.rtx_def* %244, %struct.rtx_def* %245), !dbg !9701
  %tobool456 = icmp ne i32 %call455, 0, !dbg !9701
  br i1 %tobool456, label %if.then474, label %lor.lhs.false457, !dbg !9702

lor.lhs.false457:                                 ; preds = %land.lhs.true454
  %246 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !9703
  %tobool458 = icmp ne %struct.rtx_def* %246, null, !dbg !9703
  br i1 %tobool458, label %land.lhs.true459, label %lor.lhs.false463, !dbg !9704

land.lhs.true459:                                 ; preds = %lor.lhs.false457
  %247 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !9705
  %comparison_const460 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %247, i32 0, i32 2, !dbg !9706
  %248 = load %struct.rtx_def*, %struct.rtx_def** %comparison_const460, align 8, !dbg !9706
  %249 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !9707
  %call461 = call i32 @rtx_equal_p(%struct.rtx_def* %248, %struct.rtx_def* %249), !dbg !9708
  %tobool462 = icmp ne i32 %call461, 0, !dbg !9708
  br i1 %tobool462, label %if.then474, label %lor.lhs.false463, !dbg !9709

lor.lhs.false463:                                 ; preds = %land.lhs.true459, %lor.lhs.false457
  %250 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8, !dbg !9710
  %251 = bitcast %struct.rtx_def* %250 to i32*, !dbg !9710
  %bf.load464 = load i32, i32* %251, align 8, !dbg !9710
  %bf.clear465 = and i32 %bf.load464, 65535, !dbg !9710
  %cmp466 = icmp eq i32 %bf.clear465, 37, !dbg !9710
  br i1 %cmp466, label %land.lhs.true468, label %if.end485, !dbg !9711

land.lhs.true468:                                 ; preds = %lor.lhs.false463
  %252 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8, !dbg !9712
  %call469 = call i32 @rhs_regno(%struct.rtx_def* %252), !dbg !9712
  %call470 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call469), !dbg !9712
  %reg_qty471 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call470, i32 0, i32 1, !dbg !9712
  %253 = load i32, i32* %reg_qty471, align 4, !dbg !9712
  %254 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !9713
  %comparison_qty = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %254, i32 0, i32 3, !dbg !9714
  %255 = load i32, i32* %comparison_qty, align 8, !dbg !9714
  %cmp472 = icmp eq i32 %253, %255, !dbg !9715
  br i1 %cmp472, label %if.then474, label %if.end485, !dbg !9716

if.then474:                                       ; preds = %land.lhs.true468, %land.lhs.true459, %land.lhs.true454
  %256 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !9717
  %comparison_code475 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %256, i32 0, i32 6, !dbg !9720
  %257 = bitcast i24* %comparison_code475 to i32*, !dbg !9720
  %bf.load476 = load i32, i32* %257, align 4, !dbg !9720
  %bf.clear477 = and i32 %bf.load476, 65535, !dbg !9720
  %258 = load i32, i32* %code, align 4, !dbg !9721
  %call478 = call i32 @comparison_dominates_p(i32 %bf.clear477, i32 %258), !dbg !9722
  %tobool479 = icmp ne i32 %call478, 0, !dbg !9722
  br i1 %tobool479, label %if.then480, label %if.else484, !dbg !9723

if.then480:                                       ; preds = %if.then474
  %259 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8, !dbg !9724
  %tobool481 = icmp ne %struct.rtx_def* %259, null, !dbg !9724
  br i1 %tobool481, label %if.then482, label %if.else483, !dbg !9727

if.then482:                                       ; preds = %if.then480
  %260 = load %struct.rtx_def*, %struct.rtx_def** %true_rtx, align 8, !dbg !9728
  store %struct.rtx_def* %260, %struct.rtx_def** %retval, align 8, !dbg !9729
  br label %return, !dbg !9729

if.else483:                                       ; preds = %if.then480
  br label %sw.epilog1143, !dbg !9730

if.else484:                                       ; preds = %if.then474
  %261 = load %struct.rtx_def*, %struct.rtx_def** %false_rtx, align 8, !dbg !9731
  store %struct.rtx_def* %261, %struct.rtx_def** %retval, align 8, !dbg !9732
  br label %return, !dbg !9732

if.end485:                                        ; preds = %land.lhs.true468, %lor.lhs.false463, %land.lhs.true447, %lor.lhs.false441, %lor.lhs.false435, %lor.lhs.false429, %lor.lhs.false423
  br label %if.end486, !dbg !9733

if.end486:                                        ; preds = %if.end485, %if.then407
  br label %if.end487, !dbg !9734

if.end487:                                        ; preds = %if.end486, %if.else402
  br label %if.end488

if.end488:                                        ; preds = %if.end487, %if.then401
  br label %if.end489, !dbg !9735

if.end489:                                        ; preds = %if.end488, %lor.lhs.false263
  br label %if.end490, !dbg !9736

if.end490:                                        ; preds = %if.end489, %lor.lhs.false229
  %262 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !9737
  %263 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !9739
  %cmp491 = icmp eq %struct.rtx_def* %262, %263, !dbg !9740
  br i1 %cmp491, label %land.lhs.true493, label %if.end524, !dbg !9741

land.lhs.true493:                                 ; preds = %if.end490
  %264 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8, !dbg !9742
  %tobool494 = icmp ne %struct.rtx_def* %264, null, !dbg !9742
  br i1 %tobool494, label %if.end524, label %if.then495, !dbg !9743

if.then495:                                       ; preds = %land.lhs.true493
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %y, metadata !9744, metadata !DIExpression()), !dbg !9746
  %265 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9747
  %call496 = call %struct.rtx_def* @lookup_as_function(%struct.rtx_def* %265, i32 62), !dbg !9748
  store %struct.rtx_def* %call496, %struct.rtx_def** %y, align 8, !dbg !9746
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %inner_const, metadata !9749, metadata !DIExpression()), !dbg !9750
  %266 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8, !dbg !9751
  %cmp497 = icmp ne %struct.rtx_def* %266, null, !dbg !9753
  br i1 %cmp497, label %land.lhs.true499, label %if.end523, !dbg !9754

land.lhs.true499:                                 ; preds = %if.then495
  %267 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8, !dbg !9755
  %u500 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %267, i32 0, i32 1, !dbg !9755
  %fld501 = bitcast %union.u* %u500 to [1 x %union.rtunion_def]*, !dbg !9755
  %arrayidx502 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld501, i64 0, i64 1, !dbg !9755
  %rt_rtx503 = bitcast %union.rtunion_def* %arrayidx502 to %struct.rtx_def**, !dbg !9755
  %268 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx503, align 8, !dbg !9755
  %call504 = call %struct.rtx_def* @equiv_constant(%struct.rtx_def* %268), !dbg !9756
  store %struct.rtx_def* %call504, %struct.rtx_def** %inner_const, align 8, !dbg !9757
  %cmp505 = icmp ne %struct.rtx_def* %call504, null, !dbg !9758
  br i1 %cmp505, label %land.lhs.true507, label %if.end523, !dbg !9759

land.lhs.true507:                                 ; preds = %land.lhs.true499
  %269 = load %struct.rtx_def*, %struct.rtx_def** %inner_const, align 8, !dbg !9760
  %270 = bitcast %struct.rtx_def* %269 to i32*, !dbg !9760
  %bf.load508 = load i32, i32* %270, align 8, !dbg !9760
  %bf.clear509 = and i32 %bf.load508, 65535, !dbg !9760
  %cmp510 = icmp eq i32 %bf.clear509, 30, !dbg !9760
  br i1 %cmp510, label %land.lhs.true512, label %if.end523, !dbg !9761

land.lhs.true512:                                 ; preds = %land.lhs.true507
  %271 = load %struct.rtx_def*, %struct.rtx_def** %inner_const, align 8, !dbg !9762
  %u513 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %271, i32 0, i32 1, !dbg !9762
  %hwint = bitcast %union.u* %u513 to [1 x i64]*, !dbg !9762
  %arrayidx514 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !9762
  %272 = load i64, i64* %arrayidx514, align 8, !dbg !9762
  %cmp515 = icmp ne i64 %272, 0, !dbg !9763
  br i1 %cmp515, label %if.then517, label %if.end523, !dbg !9764

if.then517:                                       ; preds = %land.lhs.true512
  %273 = load i32, i32* %mode_arg0, align 4, !dbg !9765
  %274 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8, !dbg !9765
  %u518 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %274, i32 0, i32 1, !dbg !9765
  %fld519 = bitcast %union.u* %u518 to [1 x %union.rtunion_def]*, !dbg !9765
  %arrayidx520 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld519, i64 0, i64 0, !dbg !9765
  %rt_rtx521 = bitcast %union.rtunion_def* %arrayidx520 to %struct.rtx_def**, !dbg !9765
  %275 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx521, align 8, !dbg !9765
  %276 = load %struct.rtx_def*, %struct.rtx_def** %inner_const, align 8, !dbg !9765
  %call522 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 62, i32 %273, %struct.rtx_def* %275, %struct.rtx_def* %276), !dbg !9765
  store %struct.rtx_def* %call522, %struct.rtx_def** %folded_arg0, align 8, !dbg !9766
  br label %if.end523, !dbg !9767

if.end523:                                        ; preds = %if.then517, %land.lhs.true512, %land.lhs.true507, %land.lhs.true499, %if.then495
  br label %if.end524, !dbg !9768

if.end524:                                        ; preds = %if.end523, %land.lhs.true493, %if.end490
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op0, metadata !9769, metadata !DIExpression()), !dbg !9771
  %277 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8, !dbg !9772
  %tobool525 = icmp ne %struct.rtx_def* %277, null, !dbg !9772
  br i1 %tobool525, label %cond.true526, label %cond.false527, !dbg !9772

cond.true526:                                     ; preds = %if.end524
  %278 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8, !dbg !9773
  br label %cond.end528, !dbg !9772

cond.false527:                                    ; preds = %if.end524
  %279 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9774
  br label %cond.end528, !dbg !9772

cond.end528:                                      ; preds = %cond.false527, %cond.true526
  %cond529 = phi %struct.rtx_def* [ %278, %cond.true526 ], [ %279, %cond.false527 ], !dbg !9772
  store %struct.rtx_def* %cond529, %struct.rtx_def** %op0, align 8, !dbg !9771
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op1, metadata !9775, metadata !DIExpression()), !dbg !9776
  %280 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !9777
  %tobool530 = icmp ne %struct.rtx_def* %280, null, !dbg !9777
  br i1 %tobool530, label %cond.true531, label %cond.false532, !dbg !9777

cond.true531:                                     ; preds = %cond.end528
  %281 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !9778
  br label %cond.end533, !dbg !9777

cond.false532:                                    ; preds = %cond.end528
  %282 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8, !dbg !9779
  br label %cond.end533, !dbg !9777

cond.end533:                                      ; preds = %cond.false532, %cond.true531
  %cond534 = phi %struct.rtx_def* [ %281, %cond.true531 ], [ %282, %cond.false532 ], !dbg !9777
  store %struct.rtx_def* %cond534, %struct.rtx_def** %op1, align 8, !dbg !9776
  %283 = load i32, i32* %code, align 4, !dbg !9780
  %284 = load i32, i32* %mode, align 4, !dbg !9781
  %285 = load i32, i32* %mode_arg0, align 4, !dbg !9782
  %286 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !9783
  %287 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !9784
  %call535 = call %struct.rtx_def* @simplify_relational_operation(i32 %283, i32 %284, i32 %285, %struct.rtx_def* %286, %struct.rtx_def* %287), !dbg !9785
  store %struct.rtx_def* %call535, %struct.rtx_def** %new_rtx, align 8, !dbg !9786
  br label %sw.epilog1143, !dbg !9787

sw.bb536:                                         ; preds = %if.end169, %if.end169
  %288 = load i32, i32* %code, align 4, !dbg !9788
  switch i32 %288, label %sw.default1088 [
    i32 49, label %sw.bb537
    i32 50, label %sw.bb833
    i32 70, label %sw.bb868
    i32 71, label %sw.bb868
    i32 72, label %sw.bb868
    i32 73, label %sw.bb868
    i32 62, label %sw.bb868
    i32 61, label %sw.bb868
    i32 63, label %sw.bb868
    i32 52, label %sw.bb868
    i32 65, label %sw.bb868
    i32 68, label %sw.bb868
    i32 67, label %sw.bb868
    i32 55, label %sw.bb1087
    i32 59, label %sw.bb1087
  ], !dbg !9789

sw.bb537:                                         ; preds = %sw.bb536
  %289 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !9790
  %tobool538 = icmp ne %struct.rtx_def* %289, null, !dbg !9790
  br i1 %tobool538, label %land.lhs.true539, label %if.end649, !dbg !9793

land.lhs.true539:                                 ; preds = %sw.bb537
  %290 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !9794
  %291 = bitcast %struct.rtx_def* %290 to i32*, !dbg !9794
  %bf.load540 = load i32, i32* %291, align 8, !dbg !9794
  %bf.clear541 = and i32 %bf.load540, 65535, !dbg !9794
  %cmp542 = icmp eq i32 %bf.clear541, 44, !dbg !9795
  br i1 %cmp542, label %if.then544, label %if.end649, !dbg !9796

if.then544:                                       ; preds = %land.lhs.true539
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %y545, metadata !9797, metadata !DIExpression()), !dbg !9799
  %292 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9800
  %293 = bitcast %struct.rtx_def* %292 to i32*, !dbg !9800
  %bf.load546 = load i32, i32* %293, align 8, !dbg !9800
  %bf.clear547 = and i32 %bf.load546, 65535, !dbg !9800
  %cmp548 = icmp eq i32 %bf.clear547, 50, !dbg !9801
  br i1 %cmp548, label %cond.true550, label %cond.false551, !dbg !9800

cond.true550:                                     ; preds = %if.then544
  %294 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9802
  br label %cond.end553, !dbg !9800

cond.false551:                                    ; preds = %if.then544
  %295 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9803
  %call552 = call %struct.rtx_def* @lookup_as_function(%struct.rtx_def* %295, i32 50), !dbg !9804
  br label %cond.end553, !dbg !9800

cond.end553:                                      ; preds = %cond.false551, %cond.true550
  %cond554 = phi %struct.rtx_def* [ %294, %cond.true550 ], [ %call552, %cond.false551 ], !dbg !9800
  store %struct.rtx_def* %cond554, %struct.rtx_def** %y545, align 8, !dbg !9799
  %296 = load %struct.rtx_def*, %struct.rtx_def** %y545, align 8, !dbg !9805
  %cmp555 = icmp ne %struct.rtx_def* %296, null, !dbg !9807
  br i1 %cmp555, label %land.lhs.true557, label %if.end586, !dbg !9808

land.lhs.true557:                                 ; preds = %cond.end553
  %297 = load %struct.rtx_def*, %struct.rtx_def** %y545, align 8, !dbg !9809
  %u558 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %297, i32 0, i32 1, !dbg !9809
  %fld559 = bitcast %union.u* %u558 to [1 x %union.rtunion_def]*, !dbg !9809
  %arrayidx560 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld559, i64 0, i64 1, !dbg !9809
  %rt_rtx561 = bitcast %union.rtunion_def* %arrayidx560 to %struct.rtx_def**, !dbg !9809
  %298 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx561, align 8, !dbg !9809
  %299 = bitcast %struct.rtx_def* %298 to i32*, !dbg !9809
  %bf.load562 = load i32, i32* %299, align 8, !dbg !9809
  %bf.clear563 = and i32 %bf.load562, 65535, !dbg !9809
  %cmp564 = icmp eq i32 %bf.clear563, 44, !dbg !9810
  br i1 %cmp564, label %land.lhs.true566, label %if.end586, !dbg !9811

land.lhs.true566:                                 ; preds = %land.lhs.true557
  %300 = load %struct.rtx_def*, %struct.rtx_def** %y545, align 8, !dbg !9812
  %u567 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %300, i32 0, i32 1, !dbg !9812
  %fld568 = bitcast %union.u* %u567 to [1 x %union.rtunion_def]*, !dbg !9812
  %arrayidx569 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld568, i64 0, i64 1, !dbg !9812
  %rt_rtx570 = bitcast %union.rtunion_def* %arrayidx569 to %struct.rtx_def**, !dbg !9812
  %301 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx570, align 8, !dbg !9812
  %u571 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %301, i32 0, i32 1, !dbg !9812
  %fld572 = bitcast %union.u* %u571 to [1 x %union.rtunion_def]*, !dbg !9812
  %arrayidx573 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld572, i64 0, i64 0, !dbg !9812
  %rt_rtx574 = bitcast %union.rtunion_def* %arrayidx573 to %struct.rtx_def**, !dbg !9812
  %302 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx574, align 8, !dbg !9812
  %303 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !9813
  %u575 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %303, i32 0, i32 1, !dbg !9813
  %fld576 = bitcast %union.u* %u575 to [1 x %union.rtunion_def]*, !dbg !9813
  %arrayidx577 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld576, i64 0, i64 0, !dbg !9813
  %rt_rtx578 = bitcast %union.rtunion_def* %arrayidx577 to %struct.rtx_def**, !dbg !9813
  %304 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx578, align 8, !dbg !9813
  %cmp579 = icmp eq %struct.rtx_def* %302, %304, !dbg !9814
  br i1 %cmp579, label %if.then581, label %if.end586, !dbg !9815

if.then581:                                       ; preds = %land.lhs.true566
  %305 = load %struct.rtx_def*, %struct.rtx_def** %y545, align 8, !dbg !9816
  %u582 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %305, i32 0, i32 1, !dbg !9816
  %fld583 = bitcast %union.u* %u582 to [1 x %union.rtunion_def]*, !dbg !9816
  %arrayidx584 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld583, i64 0, i64 0, !dbg !9816
  %rt_rtx585 = bitcast %union.rtunion_def* %arrayidx584 to %struct.rtx_def**, !dbg !9816
  %306 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx585, align 8, !dbg !9816
  store %struct.rtx_def* %306, %struct.rtx_def** %retval, align 8, !dbg !9817
  br label %return, !dbg !9817

if.end586:                                        ; preds = %land.lhs.true566, %land.lhs.true557, %cond.end553
  %307 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9818
  %308 = bitcast %struct.rtx_def* %307 to i32*, !dbg !9818
  %bf.load587 = load i32, i32* %308, align 8, !dbg !9818
  %bf.clear588 = and i32 %bf.load587, 65535, !dbg !9818
  %cmp589 = icmp eq i32 %bf.clear588, 35, !dbg !9820
  br i1 %cmp589, label %cond.true591, label %cond.false592, !dbg !9818

cond.true591:                                     ; preds = %if.end586
  %309 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9821
  br label %cond.end594, !dbg !9818

cond.false592:                                    ; preds = %if.end586
  %310 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9822
  %call593 = call %struct.rtx_def* @lookup_as_function(%struct.rtx_def* %310, i32 35), !dbg !9823
  br label %cond.end594, !dbg !9818

cond.end594:                                      ; preds = %cond.false592, %cond.true591
  %cond595 = phi %struct.rtx_def* [ %309, %cond.true591 ], [ %call593, %cond.false592 ], !dbg !9818
  store %struct.rtx_def* %cond595, %struct.rtx_def** %y545, align 8, !dbg !9824
  %cmp596 = icmp ne %struct.rtx_def* %cond595, null, !dbg !9825
  br i1 %cmp596, label %land.lhs.true598, label %if.end648, !dbg !9826

land.lhs.true598:                                 ; preds = %cond.end594
  %311 = load %struct.rtx_def*, %struct.rtx_def** %y545, align 8, !dbg !9827
  %u599 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %311, i32 0, i32 1, !dbg !9827
  %fld600 = bitcast %union.u* %u599 to [1 x %union.rtunion_def]*, !dbg !9827
  %arrayidx601 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld600, i64 0, i64 0, !dbg !9827
  %rt_rtx602 = bitcast %union.rtunion_def* %arrayidx601 to %struct.rtx_def**, !dbg !9827
  %312 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx602, align 8, !dbg !9827
  %313 = bitcast %struct.rtx_def* %312 to i32*, !dbg !9827
  %bf.load603 = load i32, i32* %313, align 8, !dbg !9827
  %bf.clear604 = and i32 %bf.load603, 65535, !dbg !9827
  %cmp605 = icmp eq i32 %bf.clear604, 50, !dbg !9828
  br i1 %cmp605, label %land.lhs.true607, label %if.end648, !dbg !9829

land.lhs.true607:                                 ; preds = %land.lhs.true598
  %314 = load %struct.rtx_def*, %struct.rtx_def** %y545, align 8, !dbg !9830
  %u608 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %314, i32 0, i32 1, !dbg !9830
  %fld609 = bitcast %union.u* %u608 to [1 x %union.rtunion_def]*, !dbg !9830
  %arrayidx610 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld609, i64 0, i64 0, !dbg !9830
  %rt_rtx611 = bitcast %union.rtunion_def* %arrayidx610 to %struct.rtx_def**, !dbg !9830
  %315 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx611, align 8, !dbg !9830
  %u612 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %315, i32 0, i32 1, !dbg !9830
  %fld613 = bitcast %union.u* %u612 to [1 x %union.rtunion_def]*, !dbg !9830
  %arrayidx614 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld613, i64 0, i64 1, !dbg !9830
  %rt_rtx615 = bitcast %union.rtunion_def* %arrayidx614 to %struct.rtx_def**, !dbg !9830
  %316 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx615, align 8, !dbg !9830
  %317 = bitcast %struct.rtx_def* %316 to i32*, !dbg !9830
  %bf.load616 = load i32, i32* %317, align 8, !dbg !9830
  %bf.clear617 = and i32 %bf.load616, 65535, !dbg !9830
  %cmp618 = icmp eq i32 %bf.clear617, 44, !dbg !9831
  br i1 %cmp618, label %land.lhs.true620, label %if.end648, !dbg !9832

land.lhs.true620:                                 ; preds = %land.lhs.true607
  %318 = load %struct.rtx_def*, %struct.rtx_def** %y545, align 8, !dbg !9833
  %u621 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %318, i32 0, i32 1, !dbg !9833
  %fld622 = bitcast %union.u* %u621 to [1 x %union.rtunion_def]*, !dbg !9833
  %arrayidx623 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld622, i64 0, i64 0, !dbg !9833
  %rt_rtx624 = bitcast %union.rtunion_def* %arrayidx623 to %struct.rtx_def**, !dbg !9833
  %319 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx624, align 8, !dbg !9833
  %u625 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %319, i32 0, i32 1, !dbg !9833
  %fld626 = bitcast %union.u* %u625 to [1 x %union.rtunion_def]*, !dbg !9833
  %arrayidx627 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld626, i64 0, i64 1, !dbg !9833
  %rt_rtx628 = bitcast %union.rtunion_def* %arrayidx627 to %struct.rtx_def**, !dbg !9833
  %320 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx628, align 8, !dbg !9833
  %u629 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %320, i32 0, i32 1, !dbg !9833
  %fld630 = bitcast %union.u* %u629 to [1 x %union.rtunion_def]*, !dbg !9833
  %arrayidx631 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld630, i64 0, i64 0, !dbg !9833
  %rt_rtx632 = bitcast %union.rtunion_def* %arrayidx631 to %struct.rtx_def**, !dbg !9833
  %321 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx632, align 8, !dbg !9833
  %322 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !9834
  %u633 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %322, i32 0, i32 1, !dbg !9834
  %fld634 = bitcast %union.u* %u633 to [1 x %union.rtunion_def]*, !dbg !9834
  %arrayidx635 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld634, i64 0, i64 0, !dbg !9834
  %rt_rtx636 = bitcast %union.rtunion_def* %arrayidx635 to %struct.rtx_def**, !dbg !9834
  %323 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx636, align 8, !dbg !9834
  %cmp637 = icmp eq %struct.rtx_def* %321, %323, !dbg !9835
  br i1 %cmp637, label %if.then639, label %if.end648, !dbg !9836

if.then639:                                       ; preds = %land.lhs.true620
  %324 = load %struct.rtx_def*, %struct.rtx_def** %y545, align 8, !dbg !9837
  %u640 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %324, i32 0, i32 1, !dbg !9837
  %fld641 = bitcast %union.u* %u640 to [1 x %union.rtunion_def]*, !dbg !9837
  %arrayidx642 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld641, i64 0, i64 0, !dbg !9837
  %rt_rtx643 = bitcast %union.rtunion_def* %arrayidx642 to %struct.rtx_def**, !dbg !9837
  %325 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx643, align 8, !dbg !9837
  %u644 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %325, i32 0, i32 1, !dbg !9837
  %fld645 = bitcast %union.u* %u644 to [1 x %union.rtunion_def]*, !dbg !9837
  %arrayidx646 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld645, i64 0, i64 0, !dbg !9837
  %rt_rtx647 = bitcast %union.rtunion_def* %arrayidx646 to %struct.rtx_def**, !dbg !9837
  %326 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx647, align 8, !dbg !9837
  store %struct.rtx_def* %326, %struct.rtx_def** %retval, align 8, !dbg !9838
  br label %return, !dbg !9838

if.end648:                                        ; preds = %land.lhs.true620, %land.lhs.true607, %land.lhs.true598, %cond.end594
  br label %if.end649, !dbg !9839

if.end649:                                        ; preds = %if.end648, %land.lhs.true539, %sw.bb537
  %327 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8, !dbg !9840
  %tobool650 = icmp ne %struct.rtx_def* %327, null, !dbg !9840
  br i1 %tobool650, label %land.lhs.true651, label %if.end761, !dbg !9842

land.lhs.true651:                                 ; preds = %if.end649
  %328 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8, !dbg !9843
  %329 = bitcast %struct.rtx_def* %328 to i32*, !dbg !9843
  %bf.load652 = load i32, i32* %329, align 8, !dbg !9843
  %bf.clear653 = and i32 %bf.load652, 65535, !dbg !9843
  %cmp654 = icmp eq i32 %bf.clear653, 44, !dbg !9844
  br i1 %cmp654, label %if.then656, label %if.end761, !dbg !9845

if.then656:                                       ; preds = %land.lhs.true651
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %y657, metadata !9846, metadata !DIExpression()), !dbg !9848
  %330 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8, !dbg !9849
  %331 = bitcast %struct.rtx_def* %330 to i32*, !dbg !9849
  %bf.load658 = load i32, i32* %331, align 8, !dbg !9849
  %bf.clear659 = and i32 %bf.load658, 65535, !dbg !9849
  %cmp660 = icmp eq i32 %bf.clear659, 50, !dbg !9850
  br i1 %cmp660, label %cond.true662, label %cond.false663, !dbg !9849

cond.true662:                                     ; preds = %if.then656
  %332 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8, !dbg !9851
  br label %cond.end665, !dbg !9849

cond.false663:                                    ; preds = %if.then656
  %333 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8, !dbg !9852
  %call664 = call %struct.rtx_def* @lookup_as_function(%struct.rtx_def* %333, i32 50), !dbg !9853
  br label %cond.end665, !dbg !9849

cond.end665:                                      ; preds = %cond.false663, %cond.true662
  %cond666 = phi %struct.rtx_def* [ %332, %cond.true662 ], [ %call664, %cond.false663 ], !dbg !9849
  store %struct.rtx_def* %cond666, %struct.rtx_def** %y657, align 8, !dbg !9848
  %334 = load %struct.rtx_def*, %struct.rtx_def** %y657, align 8, !dbg !9854
  %cmp667 = icmp ne %struct.rtx_def* %334, null, !dbg !9856
  br i1 %cmp667, label %land.lhs.true669, label %if.end698, !dbg !9857

land.lhs.true669:                                 ; preds = %cond.end665
  %335 = load %struct.rtx_def*, %struct.rtx_def** %y657, align 8, !dbg !9858
  %u670 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %335, i32 0, i32 1, !dbg !9858
  %fld671 = bitcast %union.u* %u670 to [1 x %union.rtunion_def]*, !dbg !9858
  %arrayidx672 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld671, i64 0, i64 1, !dbg !9858
  %rt_rtx673 = bitcast %union.rtunion_def* %arrayidx672 to %struct.rtx_def**, !dbg !9858
  %336 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx673, align 8, !dbg !9858
  %337 = bitcast %struct.rtx_def* %336 to i32*, !dbg !9858
  %bf.load674 = load i32, i32* %337, align 8, !dbg !9858
  %bf.clear675 = and i32 %bf.load674, 65535, !dbg !9858
  %cmp676 = icmp eq i32 %bf.clear675, 44, !dbg !9859
  br i1 %cmp676, label %land.lhs.true678, label %if.end698, !dbg !9860

land.lhs.true678:                                 ; preds = %land.lhs.true669
  %338 = load %struct.rtx_def*, %struct.rtx_def** %y657, align 8, !dbg !9861
  %u679 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %338, i32 0, i32 1, !dbg !9861
  %fld680 = bitcast %union.u* %u679 to [1 x %union.rtunion_def]*, !dbg !9861
  %arrayidx681 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld680, i64 0, i64 1, !dbg !9861
  %rt_rtx682 = bitcast %union.rtunion_def* %arrayidx681 to %struct.rtx_def**, !dbg !9861
  %339 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx682, align 8, !dbg !9861
  %u683 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %339, i32 0, i32 1, !dbg !9861
  %fld684 = bitcast %union.u* %u683 to [1 x %union.rtunion_def]*, !dbg !9861
  %arrayidx685 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld684, i64 0, i64 0, !dbg !9861
  %rt_rtx686 = bitcast %union.rtunion_def* %arrayidx685 to %struct.rtx_def**, !dbg !9861
  %340 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx686, align 8, !dbg !9861
  %341 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8, !dbg !9862
  %u687 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %341, i32 0, i32 1, !dbg !9862
  %fld688 = bitcast %union.u* %u687 to [1 x %union.rtunion_def]*, !dbg !9862
  %arrayidx689 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld688, i64 0, i64 0, !dbg !9862
  %rt_rtx690 = bitcast %union.rtunion_def* %arrayidx689 to %struct.rtx_def**, !dbg !9862
  %342 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx690, align 8, !dbg !9862
  %cmp691 = icmp eq %struct.rtx_def* %340, %342, !dbg !9863
  br i1 %cmp691, label %if.then693, label %if.end698, !dbg !9864

if.then693:                                       ; preds = %land.lhs.true678
  %343 = load %struct.rtx_def*, %struct.rtx_def** %y657, align 8, !dbg !9865
  %u694 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %343, i32 0, i32 1, !dbg !9865
  %fld695 = bitcast %union.u* %u694 to [1 x %union.rtunion_def]*, !dbg !9865
  %arrayidx696 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld695, i64 0, i64 0, !dbg !9865
  %rt_rtx697 = bitcast %union.rtunion_def* %arrayidx696 to %struct.rtx_def**, !dbg !9865
  %344 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx697, align 8, !dbg !9865
  store %struct.rtx_def* %344, %struct.rtx_def** %retval, align 8, !dbg !9866
  br label %return, !dbg !9866

if.end698:                                        ; preds = %land.lhs.true678, %land.lhs.true669, %cond.end665
  %345 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8, !dbg !9867
  %346 = bitcast %struct.rtx_def* %345 to i32*, !dbg !9867
  %bf.load699 = load i32, i32* %346, align 8, !dbg !9867
  %bf.clear700 = and i32 %bf.load699, 65535, !dbg !9867
  %cmp701 = icmp eq i32 %bf.clear700, 35, !dbg !9869
  br i1 %cmp701, label %cond.true703, label %cond.false704, !dbg !9867

cond.true703:                                     ; preds = %if.end698
  %347 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8, !dbg !9870
  br label %cond.end706, !dbg !9867

cond.false704:                                    ; preds = %if.end698
  %348 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8, !dbg !9871
  %call705 = call %struct.rtx_def* @lookup_as_function(%struct.rtx_def* %348, i32 35), !dbg !9872
  br label %cond.end706, !dbg !9867

cond.end706:                                      ; preds = %cond.false704, %cond.true703
  %cond707 = phi %struct.rtx_def* [ %347, %cond.true703 ], [ %call705, %cond.false704 ], !dbg !9867
  store %struct.rtx_def* %cond707, %struct.rtx_def** %y657, align 8, !dbg !9873
  %cmp708 = icmp ne %struct.rtx_def* %cond707, null, !dbg !9874
  br i1 %cmp708, label %land.lhs.true710, label %if.end760, !dbg !9875

land.lhs.true710:                                 ; preds = %cond.end706
  %349 = load %struct.rtx_def*, %struct.rtx_def** %y657, align 8, !dbg !9876
  %u711 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %349, i32 0, i32 1, !dbg !9876
  %fld712 = bitcast %union.u* %u711 to [1 x %union.rtunion_def]*, !dbg !9876
  %arrayidx713 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld712, i64 0, i64 0, !dbg !9876
  %rt_rtx714 = bitcast %union.rtunion_def* %arrayidx713 to %struct.rtx_def**, !dbg !9876
  %350 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx714, align 8, !dbg !9876
  %351 = bitcast %struct.rtx_def* %350 to i32*, !dbg !9876
  %bf.load715 = load i32, i32* %351, align 8, !dbg !9876
  %bf.clear716 = and i32 %bf.load715, 65535, !dbg !9876
  %cmp717 = icmp eq i32 %bf.clear716, 50, !dbg !9877
  br i1 %cmp717, label %land.lhs.true719, label %if.end760, !dbg !9878

land.lhs.true719:                                 ; preds = %land.lhs.true710
  %352 = load %struct.rtx_def*, %struct.rtx_def** %y657, align 8, !dbg !9879
  %u720 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %352, i32 0, i32 1, !dbg !9879
  %fld721 = bitcast %union.u* %u720 to [1 x %union.rtunion_def]*, !dbg !9879
  %arrayidx722 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld721, i64 0, i64 0, !dbg !9879
  %rt_rtx723 = bitcast %union.rtunion_def* %arrayidx722 to %struct.rtx_def**, !dbg !9879
  %353 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx723, align 8, !dbg !9879
  %u724 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %353, i32 0, i32 1, !dbg !9879
  %fld725 = bitcast %union.u* %u724 to [1 x %union.rtunion_def]*, !dbg !9879
  %arrayidx726 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld725, i64 0, i64 1, !dbg !9879
  %rt_rtx727 = bitcast %union.rtunion_def* %arrayidx726 to %struct.rtx_def**, !dbg !9879
  %354 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx727, align 8, !dbg !9879
  %355 = bitcast %struct.rtx_def* %354 to i32*, !dbg !9879
  %bf.load728 = load i32, i32* %355, align 8, !dbg !9879
  %bf.clear729 = and i32 %bf.load728, 65535, !dbg !9879
  %cmp730 = icmp eq i32 %bf.clear729, 44, !dbg !9880
  br i1 %cmp730, label %land.lhs.true732, label %if.end760, !dbg !9881

land.lhs.true732:                                 ; preds = %land.lhs.true719
  %356 = load %struct.rtx_def*, %struct.rtx_def** %y657, align 8, !dbg !9882
  %u733 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %356, i32 0, i32 1, !dbg !9882
  %fld734 = bitcast %union.u* %u733 to [1 x %union.rtunion_def]*, !dbg !9882
  %arrayidx735 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld734, i64 0, i64 0, !dbg !9882
  %rt_rtx736 = bitcast %union.rtunion_def* %arrayidx735 to %struct.rtx_def**, !dbg !9882
  %357 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx736, align 8, !dbg !9882
  %u737 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %357, i32 0, i32 1, !dbg !9882
  %fld738 = bitcast %union.u* %u737 to [1 x %union.rtunion_def]*, !dbg !9882
  %arrayidx739 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld738, i64 0, i64 1, !dbg !9882
  %rt_rtx740 = bitcast %union.rtunion_def* %arrayidx739 to %struct.rtx_def**, !dbg !9882
  %358 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx740, align 8, !dbg !9882
  %u741 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %358, i32 0, i32 1, !dbg !9882
  %fld742 = bitcast %union.u* %u741 to [1 x %union.rtunion_def]*, !dbg !9882
  %arrayidx743 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld742, i64 0, i64 0, !dbg !9882
  %rt_rtx744 = bitcast %union.rtunion_def* %arrayidx743 to %struct.rtx_def**, !dbg !9882
  %359 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx744, align 8, !dbg !9882
  %360 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8, !dbg !9883
  %u745 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %360, i32 0, i32 1, !dbg !9883
  %fld746 = bitcast %union.u* %u745 to [1 x %union.rtunion_def]*, !dbg !9883
  %arrayidx747 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld746, i64 0, i64 0, !dbg !9883
  %rt_rtx748 = bitcast %union.rtunion_def* %arrayidx747 to %struct.rtx_def**, !dbg !9883
  %361 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx748, align 8, !dbg !9883
  %cmp749 = icmp eq %struct.rtx_def* %359, %361, !dbg !9884
  br i1 %cmp749, label %if.then751, label %if.end760, !dbg !9885

if.then751:                                       ; preds = %land.lhs.true732
  %362 = load %struct.rtx_def*, %struct.rtx_def** %y657, align 8, !dbg !9886
  %u752 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %362, i32 0, i32 1, !dbg !9886
  %fld753 = bitcast %union.u* %u752 to [1 x %union.rtunion_def]*, !dbg !9886
  %arrayidx754 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld753, i64 0, i64 0, !dbg !9886
  %rt_rtx755 = bitcast %union.rtunion_def* %arrayidx754 to %struct.rtx_def**, !dbg !9886
  %363 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx755, align 8, !dbg !9886
  %u756 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %363, i32 0, i32 1, !dbg !9886
  %fld757 = bitcast %union.u* %u756 to [1 x %union.rtunion_def]*, !dbg !9886
  %arrayidx758 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld757, i64 0, i64 0, !dbg !9886
  %rt_rtx759 = bitcast %union.rtunion_def* %arrayidx758 to %struct.rtx_def**, !dbg !9886
  %364 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx759, align 8, !dbg !9886
  store %struct.rtx_def* %364, %struct.rtx_def** %retval, align 8, !dbg !9887
  br label %return, !dbg !9887

if.end760:                                        ; preds = %land.lhs.true732, %land.lhs.true719, %land.lhs.true710, %cond.end706
  br label %if.end761, !dbg !9888

if.end761:                                        ; preds = %if.end760, %land.lhs.true651, %if.end649
  %365 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !9889
  %cmp762 = icmp ne %struct.rtx_def* %365, null, !dbg !9891
  br i1 %cmp762, label %land.lhs.true764, label %if.end832, !dbg !9892

land.lhs.true764:                                 ; preds = %if.end761
  %366 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !9893
  %367 = bitcast %struct.rtx_def* %366 to i32*, !dbg !9893
  %bf.load765 = load i32, i32* %367, align 8, !dbg !9893
  %bf.clear766 = and i32 %bf.load765, 65535, !dbg !9893
  %cmp767 = icmp eq i32 %bf.clear766, 30, !dbg !9893
  br i1 %cmp767, label %land.lhs.true769, label %if.end832, !dbg !9894

land.lhs.true769:                                 ; preds = %land.lhs.true764
  %368 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !9895
  %u770 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %368, i32 0, i32 1, !dbg !9895
  %hwint771 = bitcast %union.u* %u770 to [1 x i64]*, !dbg !9895
  %arrayidx772 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint771, i64 0, i64 0, !dbg !9895
  %369 = load i64, i64* %arrayidx772, align 8, !dbg !9895
  %cmp773 = icmp slt i64 %369, 0, !dbg !9896
  br i1 %cmp773, label %land.lhs.true775, label %if.end832, !dbg !9897

land.lhs.true775:                                 ; preds = %land.lhs.true769
  %370 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !9898
  %u776 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %370, i32 0, i32 1, !dbg !9898
  %hwint777 = bitcast %union.u* %u776 to [1 x i64]*, !dbg !9898
  %arrayidx778 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint777, i64 0, i64 0, !dbg !9898
  %371 = load i64, i64* %arrayidx778, align 8, !dbg !9898
  %cmp779 = icmp ne i64 %371, -9223372036854775808, !dbg !9899
  br i1 %cmp779, label %land.lhs.true781, label %if.end832, !dbg !9900

land.lhs.true781:                                 ; preds = %land.lhs.true775
  %372 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8, !dbg !9901
  %373 = bitcast %struct.rtx_def* %372 to i32*, !dbg !9901
  %bf.load782 = load i32, i32* %373, align 8, !dbg !9901
  %bf.clear783 = and i32 %bf.load782, 65535, !dbg !9901
  %cmp784 = icmp eq i32 %bf.clear783, 37, !dbg !9901
  br i1 %cmp784, label %if.then786, label %if.end832, !dbg !9902

if.then786:                                       ; preds = %land.lhs.true781
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_const, metadata !9903, metadata !DIExpression()), !dbg !9905
  %374 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !9906
  %u787 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %374, i32 0, i32 1, !dbg !9906
  %hwint788 = bitcast %union.u* %u787 to [1 x i64]*, !dbg !9906
  %arrayidx789 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint788, i64 0, i64 0, !dbg !9906
  %375 = load i64, i64* %arrayidx789, align 8, !dbg !9906
  %sub790 = sub nsw i64 0, %375, !dbg !9906
  %call791 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub790), !dbg !9906
  store %struct.rtx_def* %call791, %struct.rtx_def** %new_const, align 8, !dbg !9905
  call void @llvm.dbg.declare(metadata %struct.table_elt** %p792, metadata !9907, metadata !DIExpression()), !dbg !9908
  %376 = load %struct.rtx_def*, %struct.rtx_def** %new_const, align 8, !dbg !9909
  %377 = load %struct.rtx_def*, %struct.rtx_def** %new_const, align 8, !dbg !9910
  %378 = bitcast %struct.rtx_def* %377 to i32*, !dbg !9910
  %bf.load793 = load i32, i32* %378, align 8, !dbg !9910
  %bf.clear794 = and i32 %bf.load793, 65535, !dbg !9910
  %cmp795 = icmp eq i32 %bf.clear794, 37, !dbg !9910
  br i1 %cmp795, label %land.lhs.true797, label %cond.false806, !dbg !9910

land.lhs.true797:                                 ; preds = %if.then786
  %379 = load %struct.rtx_def*, %struct.rtx_def** %new_const, align 8, !dbg !9910
  %call798 = call i32 @rhs_regno(%struct.rtx_def* %379), !dbg !9910
  %cmp799 = icmp uge i32 %call798, 53, !dbg !9910
  br i1 %cmp799, label %cond.true801, label %cond.false806, !dbg !9910

cond.true801:                                     ; preds = %land.lhs.true797
  %380 = load %struct.rtx_def*, %struct.rtx_def** %new_const, align 8, !dbg !9910
  %call802 = call i32 @rhs_regno(%struct.rtx_def* %380), !dbg !9910
  %call803 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call802), !dbg !9910
  %reg_qty804 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call803, i32 0, i32 1, !dbg !9910
  %381 = load i32, i32* %reg_qty804, align 4, !dbg !9910
  %add805 = add i32 4736, %381, !dbg !9910
  br label %cond.end808, !dbg !9910

cond.false806:                                    ; preds = %land.lhs.true797, %if.then786
  %382 = load %struct.rtx_def*, %struct.rtx_def** %new_const, align 8, !dbg !9910
  %383 = load i32, i32* %mode, align 4, !dbg !9910
  %call807 = call i32 @safe_hash(%struct.rtx_def* %382, i32 %383), !dbg !9910
  br label %cond.end808, !dbg !9910

cond.end808:                                      ; preds = %cond.false806, %cond.true801
  %cond809 = phi i32 [ %add805, %cond.true801 ], [ %call807, %cond.false806 ], !dbg !9910
  %and810 = and i32 %cond809, 31, !dbg !9910
  %384 = load i32, i32* %mode, align 4, !dbg !9911
  %call811 = call %struct.table_elt* @lookup(%struct.rtx_def* %376, i32 %and810, i32 %384), !dbg !9912
  store %struct.table_elt* %call811, %struct.table_elt** %p792, align 8, !dbg !9908
  %385 = load %struct.table_elt*, %struct.table_elt** %p792, align 8, !dbg !9913
  %tobool812 = icmp ne %struct.table_elt* %385, null, !dbg !9913
  br i1 %tobool812, label %if.then813, label %if.end831, !dbg !9915

if.then813:                                       ; preds = %cond.end808
  %386 = load %struct.table_elt*, %struct.table_elt** %p792, align 8, !dbg !9916
  %first_same_value814 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %386, i32 0, i32 6, !dbg !9918
  %387 = load %struct.table_elt*, %struct.table_elt** %first_same_value814, align 8, !dbg !9918
  store %struct.table_elt* %387, %struct.table_elt** %p792, align 8, !dbg !9919
  br label %for.cond815, !dbg !9920

for.cond815:                                      ; preds = %for.inc828, %if.then813
  %388 = load %struct.table_elt*, %struct.table_elt** %p792, align 8, !dbg !9921
  %tobool816 = icmp ne %struct.table_elt* %388, null, !dbg !9923
  br i1 %tobool816, label %for.body817, label %for.end830, !dbg !9923

for.body817:                                      ; preds = %for.cond815
  %389 = load %struct.table_elt*, %struct.table_elt** %p792, align 8, !dbg !9924
  %exp818 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %389, i32 0, i32 0, !dbg !9924
  %390 = load %struct.rtx_def*, %struct.rtx_def** %exp818, align 8, !dbg !9924
  %391 = bitcast %struct.rtx_def* %390 to i32*, !dbg !9924
  %bf.load819 = load i32, i32* %391, align 8, !dbg !9924
  %bf.clear820 = and i32 %bf.load819, 65535, !dbg !9924
  %cmp821 = icmp eq i32 %bf.clear820, 37, !dbg !9924
  br i1 %cmp821, label %if.then823, label %if.end827, !dbg !9926

if.then823:                                       ; preds = %for.body817
  %392 = load i32, i32* %mode, align 4, !dbg !9927
  %393 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9928
  %394 = load %struct.table_elt*, %struct.table_elt** %p792, align 8, !dbg !9929
  %exp824 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %394, i32 0, i32 0, !dbg !9930
  %395 = load %struct.rtx_def*, %struct.rtx_def** %exp824, align 8, !dbg !9930
  %call825 = call %struct.rtx_def* @canon_reg(%struct.rtx_def* %395, %struct.rtx_def* null), !dbg !9931
  %call826 = call %struct.rtx_def* @simplify_gen_binary(i32 50, i32 %392, %struct.rtx_def* %393, %struct.rtx_def* %call825), !dbg !9932
  store %struct.rtx_def* %call826, %struct.rtx_def** %retval, align 8, !dbg !9933
  br label %return, !dbg !9933

if.end827:                                        ; preds = %for.body817
  br label %for.inc828, !dbg !9924

for.inc828:                                       ; preds = %if.end827
  %396 = load %struct.table_elt*, %struct.table_elt** %p792, align 8, !dbg !9934
  %next_same_value829 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %396, i32 0, i32 4, !dbg !9935
  %397 = load %struct.table_elt*, %struct.table_elt** %next_same_value829, align 8, !dbg !9935
  store %struct.table_elt* %397, %struct.table_elt** %p792, align 8, !dbg !9936
  br label %for.cond815, !dbg !9937, !llvm.loop !9938

for.end830:                                       ; preds = %for.cond815
  br label %if.end831, !dbg !9939

if.end831:                                        ; preds = %for.end830, %cond.end808
  br label %if.end832, !dbg !9940

if.end832:                                        ; preds = %if.end831, %land.lhs.true781, %land.lhs.true775, %land.lhs.true769, %land.lhs.true764, %if.end761
  br label %from_plus, !dbg !9941

sw.bb833:                                         ; preds = %sw.bb536
  %398 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !9942
  %cmp834 = icmp ne %struct.rtx_def* %398, null, !dbg !9944
  br i1 %cmp834, label %land.lhs.true836, label %if.end867, !dbg !9945

land.lhs.true836:                                 ; preds = %sw.bb833
  %399 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !9946
  %400 = bitcast %struct.rtx_def* %399 to i32*, !dbg !9946
  %bf.load837 = load i32, i32* %400, align 8, !dbg !9946
  %bf.clear838 = and i32 %bf.load837, 65535, !dbg !9946
  %cmp839 = icmp eq i32 %bf.clear838, 30, !dbg !9946
  br i1 %cmp839, label %if.then841, label %if.end867, !dbg !9947

if.then841:                                       ; preds = %land.lhs.true836
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %y842, metadata !9948, metadata !DIExpression()), !dbg !9950
  %401 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9951
  %u843 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %401, i32 0, i32 1, !dbg !9951
  %fld844 = bitcast %union.u* %u843 to [1 x %union.rtunion_def]*, !dbg !9951
  %arrayidx845 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld844, i64 0, i64 0, !dbg !9951
  %rt_rtx846 = bitcast %union.rtunion_def* %arrayidx845 to %struct.rtx_def**, !dbg !9951
  %402 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx846, align 8, !dbg !9951
  %call847 = call %struct.rtx_def* @lookup_as_function(%struct.rtx_def* %402, i32 49), !dbg !9952
  store %struct.rtx_def* %call847, %struct.rtx_def** %y842, align 8, !dbg !9950
  %403 = load %struct.rtx_def*, %struct.rtx_def** %y842, align 8, !dbg !9953
  %tobool848 = icmp ne %struct.rtx_def* %403, null, !dbg !9953
  br i1 %tobool848, label %land.lhs.true849, label %if.end866, !dbg !9955

land.lhs.true849:                                 ; preds = %if.then841
  %404 = load %struct.rtx_def*, %struct.rtx_def** %y842, align 8, !dbg !9956
  %u850 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %404, i32 0, i32 1, !dbg !9956
  %fld851 = bitcast %union.u* %u850 to [1 x %union.rtunion_def]*, !dbg !9956
  %arrayidx852 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld851, i64 0, i64 1, !dbg !9956
  %rt_rtx853 = bitcast %union.rtunion_def* %arrayidx852 to %struct.rtx_def**, !dbg !9956
  %405 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx853, align 8, !dbg !9956
  %406 = bitcast %struct.rtx_def* %405 to i32*, !dbg !9956
  %bf.load854 = load i32, i32* %406, align 8, !dbg !9956
  %bf.clear855 = and i32 %bf.load854, 65535, !dbg !9956
  %cmp856 = icmp eq i32 %bf.clear855, 30, !dbg !9956
  br i1 %cmp856, label %if.then858, label %if.end866, !dbg !9957

if.then858:                                       ; preds = %land.lhs.true849
  %407 = load %struct.rtx_def*, %struct.rtx_def** %y842, align 8, !dbg !9958
  %call859 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %407), !dbg !9959
  %408 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !9960
  %u860 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %408, i32 0, i32 1, !dbg !9960
  %hwint861 = bitcast %union.u* %u860 to [1 x i64]*, !dbg !9960
  %arrayidx862 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint861, i64 0, i64 0, !dbg !9960
  %409 = load i64, i64* %arrayidx862, align 8, !dbg !9960
  %sub863 = sub nsw i64 0, %409, !dbg !9961
  %call864 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %call859, i64 %sub863), !dbg !9962
  %call865 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %call864, %struct.rtx_def* null), !dbg !9963
  store %struct.rtx_def* %call865, %struct.rtx_def** %retval, align 8, !dbg !9964
  br label %return, !dbg !9964

if.end866:                                        ; preds = %land.lhs.true849, %if.then841
  br label %if.end867, !dbg !9965

if.end867:                                        ; preds = %if.end866, %land.lhs.true836, %sw.bb833
  br label %from_plus, !dbg !9946

from_plus:                                        ; preds = %if.end867, %if.end832
  call void @llvm.dbg.label(metadata !9966), !dbg !9967
  br label %sw.bb868, !dbg !9946

sw.bb868:                                         ; preds = %sw.bb536, %sw.bb536, %sw.bb536, %sw.bb536, %sw.bb536, %sw.bb536, %sw.bb536, %sw.bb536, %sw.bb536, %sw.bb536, %sw.bb536, %from_plus
  %410 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !9968
  %411 = bitcast %struct.rtx_def* %410 to i32*, !dbg !9968
  %bf.load869 = load i32, i32* %411, align 8, !dbg !9968
  %bf.clear870 = and i32 %bf.load869, 65535, !dbg !9968
  %cmp871 = icmp eq i32 %bf.clear870, 37, !dbg !9968
  br i1 %cmp871, label %land.lhs.true873, label %if.end1086, !dbg !9970

land.lhs.true873:                                 ; preds = %sw.bb868
  %412 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !9971
  %tobool874 = icmp ne %struct.rtx_def* %412, null, !dbg !9971
  br i1 %tobool874, label %land.lhs.true875, label %if.end1086, !dbg !9972

land.lhs.true875:                                 ; preds = %land.lhs.true873
  %413 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !9973
  %414 = bitcast %struct.rtx_def* %413 to i32*, !dbg !9973
  %bf.load876 = load i32, i32* %414, align 8, !dbg !9973
  %bf.clear877 = and i32 %bf.load876, 65535, !dbg !9973
  %cmp878 = icmp eq i32 %bf.clear877, 30, !dbg !9973
  br i1 %cmp878, label %if.then880, label %if.end1086, !dbg !9974

if.then880:                                       ; preds = %land.lhs.true875
  call void @llvm.dbg.declare(metadata i32* %is_shift, metadata !9975, metadata !DIExpression()), !dbg !9977
  %415 = load i32, i32* %code, align 4, !dbg !9978
  %cmp881 = icmp eq i32 %415, 65, !dbg !9979
  br i1 %cmp881, label %lor.end, label %lor.lhs.false883, !dbg !9980

lor.lhs.false883:                                 ; preds = %if.then880
  %416 = load i32, i32* %code, align 4, !dbg !9981
  %cmp884 = icmp eq i32 %416, 67, !dbg !9982
  br i1 %cmp884, label %lor.end, label %lor.rhs, !dbg !9983

lor.rhs:                                          ; preds = %lor.lhs.false883
  %417 = load i32, i32* %code, align 4, !dbg !9984
  %cmp886 = icmp eq i32 %417, 68, !dbg !9985
  br label %lor.end, !dbg !9983

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false883, %if.then880
  %418 = phi i1 [ true, %lor.lhs.false883 ], [ true, %if.then880 ], [ %cmp886, %lor.rhs ]
  %lor.ext = zext i1 %418 to i32, !dbg !9983
  store i32 %lor.ext, i32* %is_shift, align 4, !dbg !9977
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %y888, metadata !9986, metadata !DIExpression()), !dbg !9987
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %inner_const889, metadata !9988, metadata !DIExpression()), !dbg !9989
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_const890, metadata !9990, metadata !DIExpression()), !dbg !9991
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %canon_const_arg1, metadata !9992, metadata !DIExpression()), !dbg !9993
  %419 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !9994
  store %struct.rtx_def* %419, %struct.rtx_def** %canon_const_arg1, align 8, !dbg !9993
  call void @llvm.dbg.declare(metadata i32* %associate_code, metadata !9995, metadata !DIExpression()), !dbg !9996
  %420 = load i32, i32* %is_shift, align 4, !dbg !9997
  %tobool891 = icmp ne i32 %420, 0, !dbg !9997
  br i1 %tobool891, label %land.lhs.true892, label %if.end911, !dbg !9999

land.lhs.true892:                                 ; preds = %lor.end
  %421 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !10000
  %u893 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %421, i32 0, i32 1, !dbg !10000
  %hwint894 = bitcast %union.u* %u893 to [1 x i64]*, !dbg !10000
  %arrayidx895 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint894, i64 0, i64 0, !dbg !10000
  %422 = load i64, i64* %arrayidx895, align 8, !dbg !10000
  %423 = load i32, i32* %mode, align 4, !dbg !10001
  %idxprom896 = zext i32 %423 to i64, !dbg !10001
  %arrayidx897 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom896, !dbg !10001
  %424 = load i8, i8* %arrayidx897, align 1, !dbg !10001
  %conv898 = zext i8 %424 to i16, !dbg !10001
  %conv899 = zext i16 %conv898 to i32, !dbg !10001
  %mul = mul nsw i32 %conv899, 8, !dbg !10001
  %conv900 = trunc i32 %mul to i16, !dbg !10001
  %conv901 = zext i16 %conv900 to i64, !dbg !10001
  %cmp902 = icmp sge i64 %422, %conv901, !dbg !10002
  br i1 %cmp902, label %if.then910, label %lor.lhs.false904, !dbg !10003

lor.lhs.false904:                                 ; preds = %land.lhs.true892
  %425 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !10004
  %u905 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %425, i32 0, i32 1, !dbg !10004
  %hwint906 = bitcast %union.u* %u905 to [1 x i64]*, !dbg !10004
  %arrayidx907 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint906, i64 0, i64 0, !dbg !10004
  %426 = load i64, i64* %arrayidx907, align 8, !dbg !10004
  %cmp908 = icmp slt i64 %426, 0, !dbg !10005
  br i1 %cmp908, label %if.then910, label %if.end911, !dbg !10006

if.then910:                                       ; preds = %lor.lhs.false904, %land.lhs.true892
  br label %sw.epilog1089, !dbg !10007

if.end911:                                        ; preds = %lor.lhs.false904, %lor.end
  %427 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !10010
  %428 = load i32, i32* %code, align 4, !dbg !10011
  %call912 = call %struct.rtx_def* @lookup_as_function(%struct.rtx_def* %427, i32 %428), !dbg !10012
  store %struct.rtx_def* %call912, %struct.rtx_def** %y888, align 8, !dbg !10013
  %429 = load %struct.rtx_def*, %struct.rtx_def** %y888, align 8, !dbg !10014
  %cmp913 = icmp eq %struct.rtx_def* %429, null, !dbg !10016
  br i1 %cmp913, label %if.then915, label %if.end916, !dbg !10017

if.then915:                                       ; preds = %if.end911
  br label %sw.epilog1089, !dbg !10018

if.end916:                                        ; preds = %if.end911
  %430 = load %struct.rtx_def*, %struct.rtx_def** %y888, align 8, !dbg !10019
  %u917 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %430, i32 0, i32 1, !dbg !10019
  %fld918 = bitcast %union.u* %u917 to [1 x %union.rtunion_def]*, !dbg !10019
  %arrayidx919 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld918, i64 0, i64 0, !dbg !10019
  %rt_rtx920 = bitcast %union.rtunion_def* %arrayidx919 to %struct.rtx_def**, !dbg !10019
  %431 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx920, align 8, !dbg !10019
  %432 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !10021
  %cmp921 = icmp eq %struct.rtx_def* %431, %432, !dbg !10022
  br i1 %cmp921, label %if.then923, label %if.end924, !dbg !10023

if.then923:                                       ; preds = %if.end916
  br label %sw.epilog1089, !dbg !10024

if.end924:                                        ; preds = %if.end916
  %433 = load %struct.rtx_def*, %struct.rtx_def** %y888, align 8, !dbg !10025
  %u925 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %433, i32 0, i32 1, !dbg !10025
  %fld926 = bitcast %union.u* %u925 to [1 x %union.rtunion_def]*, !dbg !10025
  %arrayidx927 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld926, i64 0, i64 1, !dbg !10025
  %rt_rtx928 = bitcast %union.rtunion_def* %arrayidx927 to %struct.rtx_def**, !dbg !10025
  %434 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx928, align 8, !dbg !10025
  %call929 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %434, %struct.rtx_def* null), !dbg !10026
  %call930 = call %struct.rtx_def* @equiv_constant(%struct.rtx_def* %call929), !dbg !10027
  store %struct.rtx_def* %call930, %struct.rtx_def** %inner_const889, align 8, !dbg !10028
  %435 = load %struct.rtx_def*, %struct.rtx_def** %inner_const889, align 8, !dbg !10029
  %tobool931 = icmp ne %struct.rtx_def* %435, null, !dbg !10029
  br i1 %tobool931, label %lor.lhs.false932, label %if.then937, !dbg !10031

lor.lhs.false932:                                 ; preds = %if.end924
  %436 = load %struct.rtx_def*, %struct.rtx_def** %inner_const889, align 8, !dbg !10032
  %437 = bitcast %struct.rtx_def* %436 to i32*, !dbg !10032
  %bf.load933 = load i32, i32* %437, align 8, !dbg !10032
  %bf.clear934 = and i32 %bf.load933, 65535, !dbg !10032
  %cmp935 = icmp eq i32 %bf.clear934, 30, !dbg !10032
  br i1 %cmp935, label %if.end938, label %if.then937, !dbg !10033

if.then937:                                       ; preds = %lor.lhs.false932, %if.end924
  br label %sw.epilog1089, !dbg !10034

if.end938:                                        ; preds = %lor.lhs.false932
  %438 = load i32, i32* %code, align 4, !dbg !10035
  %cmp939 = icmp eq i32 %438, 49, !dbg !10037
  br i1 %cmp939, label %land.lhs.true941, label %if.end954, !dbg !10038

land.lhs.true941:                                 ; preds = %if.end938
  %439 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !10039
  %440 = load %struct.rtx_def*, %struct.rtx_def** %inner_const889, align 8, !dbg !10040
  %cmp942 = icmp eq %struct.rtx_def* %439, %440, !dbg !10041
  br i1 %cmp942, label %land.lhs.true944, label %if.end954, !dbg !10042

land.lhs.true944:                                 ; preds = %land.lhs.true941
  br i1 false, label %land.lhs.true945, label %if.end954, !dbg !10043

land.lhs.true945:                                 ; preds = %land.lhs.true944
  %441 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !10044
  %u946 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %441, i32 0, i32 1, !dbg !10044
  %hwint947 = bitcast %union.u* %u946 to [1 x i64]*, !dbg !10044
  %arrayidx948 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint947, i64 0, i64 0, !dbg !10044
  %442 = load i64, i64* %arrayidx948, align 8, !dbg !10044
  %sub949 = sub nsw i64 0, %442, !dbg !10045
  %call950 = call i32 @exact_log2(i64 %sub949), !dbg !10046
  %cmp951 = icmp sge i32 %call950, 0, !dbg !10047
  br i1 %cmp951, label %if.then953, label %if.end954, !dbg !10048

if.then953:                                       ; preds = %land.lhs.true945
  br label %sw.epilog1089, !dbg !10049

if.end954:                                        ; preds = %land.lhs.true945, %land.lhs.true944, %land.lhs.true941, %if.end938
  %443 = load i32, i32* %is_shift, align 4, !dbg !10050
  %tobool955 = icmp ne i32 %443, 0, !dbg !10050
  br i1 %tobool955, label %land.lhs.true956, label %if.end993, !dbg !10052

land.lhs.true956:                                 ; preds = %if.end954
  %444 = load i32, i32* %mode, align 4, !dbg !10053
  %idxprom957 = zext i32 %444 to i64, !dbg !10053
  %arrayidx958 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom957, !dbg !10053
  %445 = load i8, i8* %arrayidx958, align 1, !dbg !10053
  %conv959 = zext i8 %445 to i32, !dbg !10053
  %cmp960 = icmp eq i32 %conv959, 12, !dbg !10053
  br i1 %cmp960, label %if.then992, label %lor.lhs.false962, !dbg !10053

lor.lhs.false962:                                 ; preds = %land.lhs.true956
  %446 = load i32, i32* %mode, align 4, !dbg !10053
  %idxprom963 = zext i32 %446 to i64, !dbg !10053
  %arrayidx964 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom963, !dbg !10053
  %447 = load i8, i8* %arrayidx964, align 1, !dbg !10053
  %conv965 = zext i8 %447 to i32, !dbg !10053
  %cmp966 = icmp eq i32 %conv965, 17, !dbg !10053
  br i1 %cmp966, label %if.then992, label %lor.lhs.false968, !dbg !10053

lor.lhs.false968:                                 ; preds = %lor.lhs.false962
  %448 = load i32, i32* %mode, align 4, !dbg !10053
  %idxprom969 = zext i32 %448 to i64, !dbg !10053
  %arrayidx970 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom969, !dbg !10053
  %449 = load i8, i8* %arrayidx970, align 1, !dbg !10053
  %conv971 = zext i8 %449 to i32, !dbg !10053
  %cmp972 = icmp eq i32 %conv971, 13, !dbg !10053
  br i1 %cmp972, label %if.then992, label %lor.lhs.false974, !dbg !10053

lor.lhs.false974:                                 ; preds = %lor.lhs.false968
  %450 = load i32, i32* %mode, align 4, !dbg !10053
  %idxprom975 = zext i32 %450 to i64, !dbg !10053
  %arrayidx976 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom975, !dbg !10053
  %451 = load i8, i8* %arrayidx976, align 1, !dbg !10053
  %conv977 = zext i8 %451 to i32, !dbg !10053
  %cmp978 = icmp eq i32 %conv977, 14, !dbg !10053
  br i1 %cmp978, label %if.then992, label %lor.lhs.false980, !dbg !10053

lor.lhs.false980:                                 ; preds = %lor.lhs.false974
  %452 = load i32, i32* %mode, align 4, !dbg !10053
  %idxprom981 = zext i32 %452 to i64, !dbg !10053
  %arrayidx982 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom981, !dbg !10053
  %453 = load i8, i8* %arrayidx982, align 1, !dbg !10053
  %conv983 = zext i8 %453 to i32, !dbg !10053
  %cmp984 = icmp eq i32 %conv983, 15, !dbg !10053
  br i1 %cmp984, label %if.then992, label %lor.lhs.false986, !dbg !10053

lor.lhs.false986:                                 ; preds = %lor.lhs.false980
  %454 = load i32, i32* %mode, align 4, !dbg !10053
  %idxprom987 = zext i32 %454 to i64, !dbg !10053
  %arrayidx988 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom987, !dbg !10053
  %455 = load i8, i8* %arrayidx988, align 1, !dbg !10053
  %conv989 = zext i8 %455 to i32, !dbg !10053
  %cmp990 = icmp eq i32 %conv989, 16, !dbg !10053
  br i1 %cmp990, label %if.then992, label %if.end993, !dbg !10054

if.then992:                                       ; preds = %lor.lhs.false986, %lor.lhs.false980, %lor.lhs.false974, %lor.lhs.false968, %lor.lhs.false962, %land.lhs.true956
  br label %sw.epilog1089, !dbg !10055

if.end993:                                        ; preds = %lor.lhs.false986, %if.end954
  %456 = load i32, i32* %is_shift, align 4, !dbg !10056
  %tobool994 = icmp ne i32 %456, 0, !dbg !10056
  br i1 %tobool994, label %land.lhs.true995, label %if.end1015, !dbg !10058

land.lhs.true995:                                 ; preds = %if.end993
  %457 = load %struct.rtx_def*, %struct.rtx_def** %inner_const889, align 8, !dbg !10059
  %u996 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %457, i32 0, i32 1, !dbg !10059
  %hwint997 = bitcast %union.u* %u996 to [1 x i64]*, !dbg !10059
  %arrayidx998 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint997, i64 0, i64 0, !dbg !10059
  %458 = load i64, i64* %arrayidx998, align 8, !dbg !10059
  %459 = load i32, i32* %mode, align 4, !dbg !10060
  %idxprom999 = zext i32 %459 to i64, !dbg !10060
  %arrayidx1000 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom999, !dbg !10060
  %460 = load i8, i8* %arrayidx1000, align 1, !dbg !10060
  %conv1001 = zext i8 %460 to i16, !dbg !10060
  %conv1002 = zext i16 %conv1001 to i32, !dbg !10060
  %mul1003 = mul nsw i32 %conv1002, 8, !dbg !10060
  %conv1004 = trunc i32 %mul1003 to i16, !dbg !10060
  %conv1005 = zext i16 %conv1004 to i64, !dbg !10060
  %cmp1006 = icmp sge i64 %458, %conv1005, !dbg !10061
  br i1 %cmp1006, label %if.then1014, label %lor.lhs.false1008, !dbg !10062

lor.lhs.false1008:                                ; preds = %land.lhs.true995
  %461 = load %struct.rtx_def*, %struct.rtx_def** %inner_const889, align 8, !dbg !10063
  %u1009 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %461, i32 0, i32 1, !dbg !10063
  %hwint1010 = bitcast %union.u* %u1009 to [1 x i64]*, !dbg !10063
  %arrayidx1011 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1010, i64 0, i64 0, !dbg !10063
  %462 = load i64, i64* %arrayidx1011, align 8, !dbg !10063
  %cmp1012 = icmp slt i64 %462, 0, !dbg !10064
  br i1 %cmp1012, label %if.then1014, label %if.end1015, !dbg !10065

if.then1014:                                      ; preds = %lor.lhs.false1008, %land.lhs.true995
  br label %sw.epilog1089, !dbg !10066

if.end1015:                                       ; preds = %lor.lhs.false1008, %if.end993
  %463 = load i32, i32* %is_shift, align 4, !dbg !10069
  %tobool1016 = icmp ne i32 %463, 0, !dbg !10069
  br i1 %tobool1016, label %cond.true1020, label %lor.lhs.false1017, !dbg !10070

lor.lhs.false1017:                                ; preds = %if.end1015
  %464 = load i32, i32* %code, align 4, !dbg !10071
  %cmp1018 = icmp eq i32 %464, 50, !dbg !10072
  br i1 %cmp1018, label %cond.true1020, label %cond.false1021, !dbg !10069

cond.true1020:                                    ; preds = %lor.lhs.false1017, %if.end1015
  br label %cond.end1022, !dbg !10069

cond.false1021:                                   ; preds = %lor.lhs.false1017
  %465 = load i32, i32* %code, align 4, !dbg !10073
  br label %cond.end1022, !dbg !10069

cond.end1022:                                     ; preds = %cond.false1021, %cond.true1020
  %cond1023 = phi i32 [ 49, %cond.true1020 ], [ %465, %cond.false1021 ], !dbg !10069
  store i32 %cond1023, i32* %associate_code, align 4, !dbg !10074
  %466 = load i32, i32* %associate_code, align 4, !dbg !10075
  %467 = load i32, i32* %mode, align 4, !dbg !10076
  %468 = load %struct.rtx_def*, %struct.rtx_def** %canon_const_arg1, align 8, !dbg !10077
  %469 = load %struct.rtx_def*, %struct.rtx_def** %inner_const889, align 8, !dbg !10078
  %call1024 = call %struct.rtx_def* @simplify_binary_operation(i32 %466, i32 %467, %struct.rtx_def* %468, %struct.rtx_def* %469), !dbg !10079
  store %struct.rtx_def* %call1024, %struct.rtx_def** %new_const890, align 8, !dbg !10080
  %470 = load %struct.rtx_def*, %struct.rtx_def** %new_const890, align 8, !dbg !10081
  %cmp1025 = icmp eq %struct.rtx_def* %470, null, !dbg !10083
  br i1 %cmp1025, label %if.then1027, label %if.end1028, !dbg !10084

if.then1027:                                      ; preds = %cond.end1022
  br label %sw.epilog1089, !dbg !10085

if.end1028:                                       ; preds = %cond.end1022
  %471 = load i32, i32* %is_shift, align 4, !dbg !10086
  %tobool1029 = icmp ne i32 %471, 0, !dbg !10086
  br i1 %tobool1029, label %land.lhs.true1030, label %if.end1074, !dbg !10088

land.lhs.true1030:                                ; preds = %if.end1028
  %472 = load %struct.rtx_def*, %struct.rtx_def** %new_const890, align 8, !dbg !10089
  %473 = bitcast %struct.rtx_def* %472 to i32*, !dbg !10089
  %bf.load1031 = load i32, i32* %473, align 8, !dbg !10089
  %bf.clear1032 = and i32 %bf.load1031, 65535, !dbg !10089
  %cmp1033 = icmp eq i32 %bf.clear1032, 30, !dbg !10089
  br i1 %cmp1033, label %land.lhs.true1035, label %if.end1074, !dbg !10090

land.lhs.true1035:                                ; preds = %land.lhs.true1030
  %474 = load %struct.rtx_def*, %struct.rtx_def** %new_const890, align 8, !dbg !10091
  %u1036 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %474, i32 0, i32 1, !dbg !10091
  %hwint1037 = bitcast %union.u* %u1036 to [1 x i64]*, !dbg !10091
  %arrayidx1038 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1037, i64 0, i64 0, !dbg !10091
  %475 = load i64, i64* %arrayidx1038, align 8, !dbg !10091
  %476 = load i32, i32* %mode, align 4, !dbg !10092
  %idxprom1039 = zext i32 %476 to i64, !dbg !10092
  %arrayidx1040 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1039, !dbg !10092
  %477 = load i8, i8* %arrayidx1040, align 1, !dbg !10092
  %conv1041 = zext i8 %477 to i16, !dbg !10092
  %conv1042 = zext i16 %conv1041 to i32, !dbg !10092
  %mul1043 = mul nsw i32 %conv1042, 8, !dbg !10092
  %conv1044 = trunc i32 %mul1043 to i16, !dbg !10092
  %conv1045 = zext i16 %conv1044 to i64, !dbg !10092
  %cmp1046 = icmp sge i64 %475, %conv1045, !dbg !10093
  br i1 %cmp1046, label %if.then1048, label %if.end1074, !dbg !10094

if.then1048:                                      ; preds = %land.lhs.true1035
  %478 = load i32, i32* %code, align 4, !dbg !10095
  %cmp1049 = icmp eq i32 %478, 67, !dbg !10098
  br i1 %cmp1049, label %if.then1051, label %if.else1062, !dbg !10099

if.then1051:                                      ; preds = %if.then1048
  %479 = load i32, i32* %mode, align 4, !dbg !10100
  %idxprom1052 = zext i32 %479 to i64, !dbg !10100
  %arrayidx1053 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1052, !dbg !10100
  %480 = load i8, i8* %arrayidx1053, align 1, !dbg !10100
  %conv1054 = zext i8 %480 to i16, !dbg !10100
  %conv1055 = zext i16 %conv1054 to i32, !dbg !10100
  %mul1056 = mul nsw i32 %conv1055, 8, !dbg !10100
  %conv1057 = trunc i32 %mul1056 to i16, !dbg !10100
  %conv1058 = zext i16 %conv1057 to i32, !dbg !10100
  %sub1059 = sub nsw i32 %conv1058, 1, !dbg !10100
  %conv1060 = sext i32 %sub1059 to i64, !dbg !10100
  %call1061 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv1060), !dbg !10100
  store %struct.rtx_def* %call1061, %struct.rtx_def** %new_const890, align 8, !dbg !10101
  br label %if.end1073, !dbg !10102

if.else1062:                                      ; preds = %if.then1048
  %481 = load %struct.rtx_def*, %struct.rtx_def** %y888, align 8, !dbg !10103
  %u1063 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %481, i32 0, i32 1, !dbg !10103
  %fld1064 = bitcast %union.u* %u1063 to [1 x %union.rtunion_def]*, !dbg !10103
  %arrayidx1065 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1064, i64 0, i64 0, !dbg !10103
  %rt_rtx1066 = bitcast %union.rtunion_def* %arrayidx1065 to %struct.rtx_def**, !dbg !10103
  %482 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1066, align 8, !dbg !10103
  %call1067 = call i32 @side_effects_p(%struct.rtx_def* %482), !dbg !10105
  %tobool1068 = icmp ne i32 %call1067, 0, !dbg !10105
  br i1 %tobool1068, label %if.else1072, label %if.then1069, !dbg !10106

if.then1069:                                      ; preds = %if.else1062
  %483 = load i32, i32* %mode, align 4, !dbg !10107
  %idxprom1070 = sext i32 %483 to i64, !dbg !10107
  %arrayidx1071 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom1070, !dbg !10107
  %484 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1071, align 8, !dbg !10107
  store %struct.rtx_def* %484, %struct.rtx_def** %retval, align 8, !dbg !10108
  br label %return, !dbg !10108

if.else1072:                                      ; preds = %if.else1062
  br label %sw.epilog1089, !dbg !10109

if.end1073:                                       ; preds = %if.then1051
  br label %if.end1074, !dbg !10110

if.end1074:                                       ; preds = %if.end1073, %land.lhs.true1035, %land.lhs.true1030, %if.end1028
  %485 = load %struct.rtx_def*, %struct.rtx_def** %y888, align 8, !dbg !10111
  %u1075 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %485, i32 0, i32 1, !dbg !10111
  %fld1076 = bitcast %union.u* %u1075 to [1 x %union.rtunion_def]*, !dbg !10111
  %arrayidx1077 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1076, i64 0, i64 0, !dbg !10111
  %rt_rtx1078 = bitcast %union.rtunion_def* %arrayidx1077 to %struct.rtx_def**, !dbg !10111
  %486 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1078, align 8, !dbg !10111
  %call1079 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %486), !dbg !10112
  store %struct.rtx_def* %call1079, %struct.rtx_def** %y888, align 8, !dbg !10113
  %487 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !10114
  %488 = load %struct.rtx_def*, %struct.rtx_def** %y888, align 8, !dbg !10116
  %call1080 = call i32 @reg_mentioned_p(%struct.rtx_def* %487, %struct.rtx_def* %488), !dbg !10117
  %tobool1081 = icmp ne i32 %call1080, 0, !dbg !10117
  br i1 %tobool1081, label %if.end1084, label %if.then1082, !dbg !10118

if.then1082:                                      ; preds = %if.end1074
  %489 = load %struct.rtx_def*, %struct.rtx_def** %y888, align 8, !dbg !10119
  %490 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !10120
  %call1083 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %489, %struct.rtx_def* %490), !dbg !10121
  store %struct.rtx_def* %call1083, %struct.rtx_def** %y888, align 8, !dbg !10122
  br label %if.end1084, !dbg !10123

if.end1084:                                       ; preds = %if.then1082, %if.end1074
  %491 = load i32, i32* %code, align 4, !dbg !10124
  %492 = load i32, i32* %mode, align 4, !dbg !10125
  %493 = load %struct.rtx_def*, %struct.rtx_def** %y888, align 8, !dbg !10126
  %494 = load %struct.rtx_def*, %struct.rtx_def** %new_const890, align 8, !dbg !10127
  %call1085 = call %struct.rtx_def* @simplify_gen_binary(i32 %491, i32 %492, %struct.rtx_def* %493, %struct.rtx_def* %494), !dbg !10128
  store %struct.rtx_def* %call1085, %struct.rtx_def** %retval, align 8, !dbg !10129
  br label %return, !dbg !10129

if.end1086:                                       ; preds = %land.lhs.true875, %land.lhs.true873, %sw.bb868
  br label %sw.epilog1089, !dbg !10130

sw.bb1087:                                        ; preds = %sw.bb536, %sw.bb536
  br label %sw.epilog1089, !dbg !10131

sw.default1088:                                   ; preds = %sw.bb536
  br label %sw.epilog1089, !dbg !10132

sw.epilog1089:                                    ; preds = %sw.default1088, %sw.bb1087, %if.end1086, %if.else1072, %if.then1027, %if.then1014, %if.then992, %if.then953, %if.then937, %if.then923, %if.then915, %if.then910
  %495 = load i32, i32* %code, align 4, !dbg !10133
  %496 = load i32, i32* %mode, align 4, !dbg !10134
  %497 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8, !dbg !10135
  %tobool1090 = icmp ne %struct.rtx_def* %497, null, !dbg !10135
  br i1 %tobool1090, label %cond.true1091, label %cond.false1092, !dbg !10135

cond.true1091:                                    ; preds = %sw.epilog1089
  %498 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8, !dbg !10136
  br label %cond.end1093, !dbg !10135

cond.false1092:                                   ; preds = %sw.epilog1089
  %499 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !10137
  br label %cond.end1093, !dbg !10135

cond.end1093:                                     ; preds = %cond.false1092, %cond.true1091
  %cond1094 = phi %struct.rtx_def* [ %498, %cond.true1091 ], [ %499, %cond.false1092 ], !dbg !10135
  %500 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !10138
  %tobool1095 = icmp ne %struct.rtx_def* %500, null, !dbg !10138
  br i1 %tobool1095, label %cond.true1096, label %cond.false1097, !dbg !10138

cond.true1096:                                    ; preds = %cond.end1093
  %501 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !10139
  br label %cond.end1098, !dbg !10138

cond.false1097:                                   ; preds = %cond.end1093
  %502 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8, !dbg !10140
  br label %cond.end1098, !dbg !10138

cond.end1098:                                     ; preds = %cond.false1097, %cond.true1096
  %cond1099 = phi %struct.rtx_def* [ %501, %cond.true1096 ], [ %502, %cond.false1097 ], !dbg !10138
  %call1100 = call %struct.rtx_def* @simplify_binary_operation(i32 %495, i32 %496, %struct.rtx_def* %cond1094, %struct.rtx_def* %cond1099), !dbg !10141
  store %struct.rtx_def* %call1100, %struct.rtx_def** %new_rtx, align 8, !dbg !10142
  br label %sw.epilog1143, !dbg !10143

sw.bb1101:                                        ; preds = %if.end169
  %503 = load i32, i32* %code, align 4, !dbg !10144
  %cmp1102 = icmp eq i32 %503, 122, !dbg !10146
  br i1 %cmp1102, label %land.lhs.true1104, label %if.end1120, !dbg !10147

land.lhs.true1104:                                ; preds = %sw.bb1101
  %504 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8, !dbg !10148
  %cmp1105 = icmp ne %struct.rtx_def* %504, null, !dbg !10149
  br i1 %cmp1105, label %land.lhs.true1107, label %if.end1120, !dbg !10150

land.lhs.true1107:                                ; preds = %land.lhs.true1104
  %505 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8, !dbg !10151
  %506 = bitcast %struct.rtx_def* %505 to i32*, !dbg !10151
  %bf.load1108 = load i32, i32* %506, align 8, !dbg !10151
  %bf.clear1109 = and i32 %bf.load1108, 65535, !dbg !10151
  %cmp1110 = icmp eq i32 %bf.clear1109, 121, !dbg !10152
  br i1 %cmp1110, label %land.lhs.true1112, label %if.end1120, !dbg !10153

land.lhs.true1112:                                ; preds = %land.lhs.true1107
  %507 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8, !dbg !10154
  %u1113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %507, i32 0, i32 1, !dbg !10154
  %fld1114 = bitcast %union.u* %u1113 to [1 x %union.rtunion_def]*, !dbg !10154
  %arrayidx1115 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1114, i64 0, i64 0, !dbg !10154
  %rt_rtx1116 = bitcast %union.rtunion_def* %arrayidx1115 to %struct.rtx_def**, !dbg !10154
  %508 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1116, align 8, !dbg !10154
  %509 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !10155
  %call1117 = call i32 @rtx_equal_p(%struct.rtx_def* %508, %struct.rtx_def* %509), !dbg !10156
  %tobool1118 = icmp ne i32 %call1117, 0, !dbg !10156
  br i1 %tobool1118, label %if.then1119, label %if.end1120, !dbg !10157

if.then1119:                                      ; preds = %land.lhs.true1112
  %510 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !10158
  store %struct.rtx_def* %510, %struct.rtx_def** %retval, align 8, !dbg !10159
  br label %return, !dbg !10159

if.end1120:                                       ; preds = %land.lhs.true1112, %land.lhs.true1107, %land.lhs.true1104, %sw.bb1101
  br label %sw.epilog1143, !dbg !10160

sw.bb1121:                                        ; preds = %if.end169, %if.end169
  %511 = load i32, i32* %code, align 4, !dbg !10161
  %512 = load i32, i32* %mode, align 4, !dbg !10162
  %513 = load i32, i32* %mode_arg0, align 4, !dbg !10163
  %514 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8, !dbg !10164
  %tobool1122 = icmp ne %struct.rtx_def* %514, null, !dbg !10164
  br i1 %tobool1122, label %cond.true1123, label %cond.false1124, !dbg !10164

cond.true1123:                                    ; preds = %sw.bb1121
  %515 = load %struct.rtx_def*, %struct.rtx_def** %const_arg0, align 8, !dbg !10165
  br label %cond.end1125, !dbg !10164

cond.false1124:                                   ; preds = %sw.bb1121
  %516 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg0, align 8, !dbg !10166
  br label %cond.end1125, !dbg !10164

cond.end1125:                                     ; preds = %cond.false1124, %cond.true1123
  %cond1126 = phi %struct.rtx_def* [ %515, %cond.true1123 ], [ %516, %cond.false1124 ], !dbg !10164
  %517 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !10167
  %tobool1127 = icmp ne %struct.rtx_def* %517, null, !dbg !10167
  br i1 %tobool1127, label %cond.true1128, label %cond.false1129, !dbg !10167

cond.true1128:                                    ; preds = %cond.end1125
  %518 = load %struct.rtx_def*, %struct.rtx_def** %const_arg1, align 8, !dbg !10168
  br label %cond.end1130, !dbg !10167

cond.false1129:                                   ; preds = %cond.end1125
  %519 = load %struct.rtx_def*, %struct.rtx_def** %folded_arg1, align 8, !dbg !10169
  br label %cond.end1130, !dbg !10167

cond.end1130:                                     ; preds = %cond.false1129, %cond.true1128
  %cond1131 = phi %struct.rtx_def* [ %518, %cond.true1128 ], [ %519, %cond.false1129 ], !dbg !10167
  %520 = load %struct.rtx_def*, %struct.rtx_def** %const_arg2, align 8, !dbg !10170
  %tobool1132 = icmp ne %struct.rtx_def* %520, null, !dbg !10170
  br i1 %tobool1132, label %cond.true1133, label %cond.false1134, !dbg !10170

cond.true1133:                                    ; preds = %cond.end1130
  %521 = load %struct.rtx_def*, %struct.rtx_def** %const_arg2, align 8, !dbg !10171
  br label %cond.end1139, !dbg !10170

cond.false1134:                                   ; preds = %cond.end1130
  %522 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10172
  %u1135 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %522, i32 0, i32 1, !dbg !10172
  %fld1136 = bitcast %union.u* %u1135 to [1 x %union.rtunion_def]*, !dbg !10172
  %arrayidx1137 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1136, i64 0, i64 2, !dbg !10172
  %rt_rtx1138 = bitcast %union.rtunion_def* %arrayidx1137 to %struct.rtx_def**, !dbg !10172
  %523 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1138, align 8, !dbg !10172
  br label %cond.end1139, !dbg !10170

cond.end1139:                                     ; preds = %cond.false1134, %cond.true1133
  %cond1140 = phi %struct.rtx_def* [ %521, %cond.true1133 ], [ %523, %cond.false1134 ], !dbg !10170
  %call1141 = call %struct.rtx_def* @simplify_ternary_operation(i32 %511, i32 %512, i32 %513, %struct.rtx_def* %cond1126, %struct.rtx_def* %cond1131, %struct.rtx_def* %cond1140), !dbg !10173
  store %struct.rtx_def* %call1141, %struct.rtx_def** %new_rtx, align 8, !dbg !10174
  br label %sw.epilog1143, !dbg !10175

sw.default1142:                                   ; preds = %if.end169
  br label %sw.epilog1143, !dbg !10176

sw.epilog1143:                                    ; preds = %sw.default1142, %cond.end1139, %if.end1120, %cond.end1098, %cond.end533, %if.else483, %if.then257, %if.then225, %cond.end186, %if.then181
  %524 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !10177
  %tobool1144 = icmp ne %struct.rtx_def* %524, null, !dbg !10177
  br i1 %tobool1144, label %cond.true1145, label %cond.false1146, !dbg !10177

cond.true1145:                                    ; preds = %sw.epilog1143
  %525 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !10178
  br label %cond.end1147, !dbg !10177

cond.false1146:                                   ; preds = %sw.epilog1143
  %526 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10179
  br label %cond.end1147, !dbg !10177

cond.end1147:                                     ; preds = %cond.false1146, %cond.true1145
  %cond1148 = phi %struct.rtx_def* [ %525, %cond.true1145 ], [ %526, %cond.false1146 ], !dbg !10177
  store %struct.rtx_def* %cond1148, %struct.rtx_def** %retval, align 8, !dbg !10180
  br label %return, !dbg !10180

return:                                           ; preds = %cond.end1147, %if.then1119, %if.end1084, %if.then1069, %if.then858, %if.then823, %if.then751, %if.then693, %if.then639, %if.then581, %if.else484, %if.then482, %if.then330, %if.then36, %if.end22, %sw.bb4, %if.end3, %if.then2, %if.then
  %527 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !10181
  ret %struct.rtx_def* %527, !dbg !10181
}

declare dso_local %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #2

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.table_elt* @lookup(%struct.rtx_def* %x, i32 %hash, i32 %mode) #0 !dbg !10182 {
entry:
  %retval = alloca %struct.table_elt*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %hash.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %p = alloca %struct.table_elt*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !10183, metadata !DIExpression()), !dbg !10184
  store i32 %hash, i32* %hash.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hash.addr, metadata !10185, metadata !DIExpression()), !dbg !10186
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !10187, metadata !DIExpression()), !dbg !10188
  call void @llvm.dbg.declare(metadata %struct.table_elt** %p, metadata !10189, metadata !DIExpression()), !dbg !10190
  %0 = load i32, i32* %hash.addr, align 4, !dbg !10191
  %idxprom = zext i32 %0 to i64, !dbg !10193
  %arrayidx = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom, !dbg !10193
  %1 = load %struct.table_elt*, %struct.table_elt** %arrayidx, align 8, !dbg !10193
  store %struct.table_elt* %1, %struct.table_elt** %p, align 8, !dbg !10194
  br label %for.cond, !dbg !10195

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10196
  %tobool = icmp ne %struct.table_elt* %2, null, !dbg !10198
  br i1 %tobool, label %for.body, label %for.end, !dbg !10198

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %mode.addr, align 4, !dbg !10199
  %4 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10201
  %mode1 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %4, i32 0, i32 10, !dbg !10202
  %bf.load = load i8, i8* %mode1, align 8, !dbg !10202
  %bf.cast = zext i8 %bf.load to i32, !dbg !10202
  %cmp = icmp eq i32 %3, %bf.cast, !dbg !10203
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10204

land.lhs.true:                                    ; preds = %for.body
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10205
  %6 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10206
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %6, i32 0, i32 0, !dbg !10207
  %7 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !10207
  %cmp2 = icmp eq %struct.rtx_def* %5, %7, !dbg !10208
  br i1 %cmp2, label %land.lhs.true3, label %lor.lhs.false, !dbg !10209

land.lhs.true3:                                   ; preds = %land.lhs.true
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10210
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !10210
  %bf.load4 = load i32, i32* %9, align 8, !dbg !10210
  %bf.clear = and i32 %bf.load4, 65535, !dbg !10210
  %cmp5 = icmp eq i32 %bf.clear, 37, !dbg !10210
  br i1 %cmp5, label %if.then, label %lor.lhs.false, !dbg !10211

lor.lhs.false:                                    ; preds = %land.lhs.true3, %land.lhs.true
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10212
  %11 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10213
  %exp6 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %11, i32 0, i32 0, !dbg !10214
  %12 = load %struct.rtx_def*, %struct.rtx_def** %exp6, align 8, !dbg !10214
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10215
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !10215
  %bf.load7 = load i32, i32* %14, align 8, !dbg !10215
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !10215
  %cmp9 = icmp eq i32 %bf.clear8, 37, !dbg !10215
  %lnot = xor i1 %cmp9, true, !dbg !10216
  %lnot.ext = zext i1 %lnot to i32, !dbg !10216
  %call = call i32 @exp_equiv_p(%struct.rtx_def* %10, %struct.rtx_def* %12, i32 %lnot.ext, i8 zeroext 0), !dbg !10217
  %tobool10 = icmp ne i32 %call, 0, !dbg !10217
  br i1 %tobool10, label %if.then, label %if.end, !dbg !10218

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true3
  %15 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10219
  store %struct.table_elt* %15, %struct.table_elt** %retval, align 8, !dbg !10220
  br label %return, !dbg !10220

if.end:                                           ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !10221

for.inc:                                          ; preds = %if.end
  %16 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10222
  %next_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %16, i32 0, i32 2, !dbg !10223
  %17 = load %struct.table_elt*, %struct.table_elt** %next_same_hash, align 8, !dbg !10223
  store %struct.table_elt* %17, %struct.table_elt** %p, align 8, !dbg !10224
  br label %for.cond, !dbg !10225, !llvm.loop !10226

for.end:                                          ; preds = %for.cond
  store %struct.table_elt* null, %struct.table_elt** %retval, align 8, !dbg !10228
  br label %return, !dbg !10228

return:                                           ; preds = %for.end, %if.then
  %18 = load %struct.table_elt*, %struct.table_elt** %retval, align 8, !dbg !10229
  ret %struct.table_elt* %18, !dbg !10229
}

; Function Attrs: noinline nounwind uwtable
define internal void @merge_equiv_classes(%struct.table_elt* %class1, %struct.table_elt* %class2) #0 !dbg !10230 {
entry:
  %class1.addr = alloca %struct.table_elt*, align 8
  %class2.addr = alloca %struct.table_elt*, align 8
  %elt = alloca %struct.table_elt*, align 8
  %next = alloca %struct.table_elt*, align 8
  %new_elt = alloca %struct.table_elt*, align 8
  %hash = alloca i32, align 4
  %exp = alloca %struct.rtx_def*, align 8
  %mode = alloca i32, align 4
  %need_rehash = alloca i8, align 1
  store %struct.table_elt* %class1, %struct.table_elt** %class1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.table_elt** %class1.addr, metadata !10233, metadata !DIExpression()), !dbg !10234
  store %struct.table_elt* %class2, %struct.table_elt** %class2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.table_elt** %class2.addr, metadata !10235, metadata !DIExpression()), !dbg !10236
  call void @llvm.dbg.declare(metadata %struct.table_elt** %elt, metadata !10237, metadata !DIExpression()), !dbg !10238
  call void @llvm.dbg.declare(metadata %struct.table_elt** %next, metadata !10239, metadata !DIExpression()), !dbg !10240
  call void @llvm.dbg.declare(metadata %struct.table_elt** %new_elt, metadata !10241, metadata !DIExpression()), !dbg !10242
  %0 = load %struct.table_elt*, %struct.table_elt** %class1.addr, align 8, !dbg !10243
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %0, i32 0, i32 6, !dbg !10244
  %1 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8, !dbg !10244
  store %struct.table_elt* %1, %struct.table_elt** %class1.addr, align 8, !dbg !10245
  %2 = load %struct.table_elt*, %struct.table_elt** %class2.addr, align 8, !dbg !10246
  %first_same_value1 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %2, i32 0, i32 6, !dbg !10247
  %3 = load %struct.table_elt*, %struct.table_elt** %first_same_value1, align 8, !dbg !10247
  store %struct.table_elt* %3, %struct.table_elt** %class2.addr, align 8, !dbg !10248
  %4 = load %struct.table_elt*, %struct.table_elt** %class1.addr, align 8, !dbg !10249
  %5 = load %struct.table_elt*, %struct.table_elt** %class2.addr, align 8, !dbg !10251
  %cmp = icmp eq %struct.table_elt* %4, %5, !dbg !10252
  br i1 %cmp, label %if.then, label %if.end, !dbg !10253

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !10254

if.end:                                           ; preds = %entry
  %6 = load %struct.table_elt*, %struct.table_elt** %class2.addr, align 8, !dbg !10255
  store %struct.table_elt* %6, %struct.table_elt** %elt, align 8, !dbg !10257
  br label %for.cond, !dbg !10258

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !10259
  %tobool = icmp ne %struct.table_elt* %7, null, !dbg !10261
  br i1 %tobool, label %for.body, label %for.end, !dbg !10261

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %hash, metadata !10262, metadata !DIExpression()), !dbg !10264
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %exp, metadata !10265, metadata !DIExpression()), !dbg !10266
  %8 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !10267
  %exp2 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %8, i32 0, i32 0, !dbg !10268
  %9 = load %struct.rtx_def*, %struct.rtx_def** %exp2, align 8, !dbg !10268
  store %struct.rtx_def* %9, %struct.rtx_def** %exp, align 8, !dbg !10266
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !10269, metadata !DIExpression()), !dbg !10270
  %10 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !10271
  %mode3 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %10, i32 0, i32 10, !dbg !10272
  %bf.load = load i8, i8* %mode3, align 8, !dbg !10272
  %bf.cast = zext i8 %bf.load to i32, !dbg !10272
  store i32 %bf.cast, i32* %mode, align 4, !dbg !10270
  %11 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !10273
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %11, i32 0, i32 4, !dbg !10274
  %12 = load %struct.table_elt*, %struct.table_elt** %next_same_value, align 8, !dbg !10274
  store %struct.table_elt* %12, %struct.table_elt** %next, align 8, !dbg !10275
  %13 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !10276
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !10276
  %bf.load4 = load i32, i32* %14, align 8, !dbg !10276
  %bf.clear = and i32 %bf.load4, 65535, !dbg !10276
  %cmp5 = icmp eq i32 %bf.clear, 37, !dbg !10276
  br i1 %cmp5, label %if.then7, label %lor.lhs.false, !dbg !10278

lor.lhs.false:                                    ; preds = %for.body
  %15 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !10279
  %16 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !10280
  %call = call i32 @exp_equiv_p(%struct.rtx_def* %15, %struct.rtx_def* %16, i32 1, i8 zeroext 0), !dbg !10281
  %tobool6 = icmp ne i32 %call, 0, !dbg !10281
  br i1 %tobool6, label %if.then7, label %if.end64, !dbg !10282

if.then7:                                         ; preds = %lor.lhs.false, %for.body
  call void @llvm.dbg.declare(metadata i8* %need_rehash, metadata !10283, metadata !DIExpression()), !dbg !10285
  store i8 0, i8* %need_rehash, align 1, !dbg !10285
  store i32 0, i32* @hash_arg_in_memory, align 4, !dbg !10286
  %17 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !10287
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !10287
  %bf.load8 = load i32, i32* %18, align 8, !dbg !10287
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !10287
  %cmp10 = icmp eq i32 %bf.clear9, 37, !dbg !10287
  br i1 %cmp10, label %land.lhs.true, label %cond.false, !dbg !10287

land.lhs.true:                                    ; preds = %if.then7
  %19 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !10287
  %call11 = call i32 @rhs_regno(%struct.rtx_def* %19), !dbg !10287
  %cmp12 = icmp uge i32 %call11, 53, !dbg !10287
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !10287

cond.true:                                        ; preds = %land.lhs.true
  %20 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !10287
  %call13 = call i32 @rhs_regno(%struct.rtx_def* %20), !dbg !10287
  %call14 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call13), !dbg !10287
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call14, i32 0, i32 1, !dbg !10287
  %21 = load i32, i32* %reg_qty, align 4, !dbg !10287
  %add = add i32 4736, %21, !dbg !10287
  br label %cond.end, !dbg !10287

cond.false:                                       ; preds = %land.lhs.true, %if.then7
  %22 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !10287
  %23 = load i32, i32* %mode, align 4, !dbg !10287
  %call15 = call i32 @canon_hash(%struct.rtx_def* %22, i32 %23), !dbg !10287
  br label %cond.end, !dbg !10287

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %call15, %cond.false ], !dbg !10287
  %and = and i32 %cond, 31, !dbg !10287
  store i32 %and, i32* %hash, align 4, !dbg !10288
  %24 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !10289
  %25 = bitcast %struct.rtx_def* %24 to i32*, !dbg !10289
  %bf.load16 = load i32, i32* %25, align 8, !dbg !10289
  %bf.clear17 = and i32 %bf.load16, 65535, !dbg !10289
  %cmp18 = icmp eq i32 %bf.clear17, 37, !dbg !10289
  br i1 %cmp18, label %if.then19, label %if.end26, !dbg !10291

if.then19:                                        ; preds = %cond.end
  %26 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !10292
  %call20 = call i32 @rhs_regno(%struct.rtx_def* %26), !dbg !10292
  %call21 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call20), !dbg !10292
  %reg_qty22 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call21, i32 0, i32 1, !dbg !10292
  %27 = load i32, i32* %reg_qty22, align 4, !dbg !10292
  %cmp23 = icmp sge i32 %27, 0, !dbg !10292
  %conv = zext i1 %cmp23 to i32, !dbg !10292
  %conv24 = trunc i32 %conv to i8, !dbg !10292
  store i8 %conv24, i8* %need_rehash, align 1, !dbg !10294
  %28 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !10295
  %call25 = call i32 @rhs_regno(%struct.rtx_def* %28), !dbg !10295
  call void @delete_reg_equiv(i32 %call25), !dbg !10296
  br label %if.end26, !dbg !10297

if.end26:                                         ; preds = %if.then19, %cond.end
  %29 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !10298
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !10298
  %bf.load27 = load i32, i32* %30, align 8, !dbg !10298
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !10298
  %cmp29 = icmp eq i32 %bf.clear28, 37, !dbg !10298
  br i1 %cmp29, label %land.lhs.true31, label %if.else, !dbg !10300

land.lhs.true31:                                  ; preds = %if.end26
  %31 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !10301
  %call32 = call i32 @rhs_regno(%struct.rtx_def* %31), !dbg !10301
  %cmp33 = icmp uge i32 %call32, 53, !dbg !10302
  br i1 %cmp33, label %if.then35, label %if.else, !dbg !10303

if.then35:                                        ; preds = %land.lhs.true31
  %32 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !10304
  %33 = load i32, i32* %hash, align 4, !dbg !10305
  call void @remove_pseudo_from_table(%struct.rtx_def* %32, i32 %33), !dbg !10306
  br label %if.end36, !dbg !10306

if.else:                                          ; preds = %land.lhs.true31, %if.end26
  %34 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !10307
  %35 = load i32, i32* %hash, align 4, !dbg !10308
  call void @remove_from_table(%struct.table_elt* %34, i32 %35), !dbg !10309
  br label %if.end36

if.end36:                                         ; preds = %if.else, %if.then35
  %36 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !10310
  %37 = load %struct.table_elt*, %struct.table_elt** %class1.addr, align 8, !dbg !10312
  %call37 = call i32 @insert_regs(%struct.rtx_def* %36, %struct.table_elt* %37, i32 0), !dbg !10313
  %tobool38 = icmp ne i32 %call37, 0, !dbg !10313
  br i1 %tobool38, label %if.then42, label %lor.lhs.false39, !dbg !10314

lor.lhs.false39:                                  ; preds = %if.end36
  %38 = load i8, i8* %need_rehash, align 1, !dbg !10315
  %conv40 = zext i8 %38 to i32, !dbg !10315
  %tobool41 = icmp ne i32 %conv40, 0, !dbg !10315
  br i1 %tobool41, label %if.then42, label %if.end61, !dbg !10316

if.then42:                                        ; preds = %lor.lhs.false39, %if.end36
  %39 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !10317
  call void @rehash_using_reg(%struct.rtx_def* %39), !dbg !10319
  %40 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !10320
  %41 = bitcast %struct.rtx_def* %40 to i32*, !dbg !10320
  %bf.load43 = load i32, i32* %41, align 8, !dbg !10320
  %bf.clear44 = and i32 %bf.load43, 65535, !dbg !10320
  %cmp45 = icmp eq i32 %bf.clear44, 37, !dbg !10320
  br i1 %cmp45, label %land.lhs.true47, label %cond.false56, !dbg !10320

land.lhs.true47:                                  ; preds = %if.then42
  %42 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !10320
  %call48 = call i32 @rhs_regno(%struct.rtx_def* %42), !dbg !10320
  %cmp49 = icmp uge i32 %call48, 53, !dbg !10320
  br i1 %cmp49, label %cond.true51, label %cond.false56, !dbg !10320

cond.true51:                                      ; preds = %land.lhs.true47
  %43 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !10320
  %call52 = call i32 @rhs_regno(%struct.rtx_def* %43), !dbg !10320
  %call53 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call52), !dbg !10320
  %reg_qty54 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call53, i32 0, i32 1, !dbg !10320
  %44 = load i32, i32* %reg_qty54, align 4, !dbg !10320
  %add55 = add i32 4736, %44, !dbg !10320
  br label %cond.end58, !dbg !10320

cond.false56:                                     ; preds = %land.lhs.true47, %if.then42
  %45 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !10320
  %46 = load i32, i32* %mode, align 4, !dbg !10320
  %call57 = call i32 @canon_hash(%struct.rtx_def* %45, i32 %46), !dbg !10320
  br label %cond.end58, !dbg !10320

cond.end58:                                       ; preds = %cond.false56, %cond.true51
  %cond59 = phi i32 [ %add55, %cond.true51 ], [ %call57, %cond.false56 ], !dbg !10320
  %and60 = and i32 %cond59, 31, !dbg !10320
  store i32 %and60, i32* %hash, align 4, !dbg !10321
  br label %if.end61, !dbg !10322

if.end61:                                         ; preds = %cond.end58, %lor.lhs.false39
  %47 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !10323
  %48 = load %struct.table_elt*, %struct.table_elt** %class1.addr, align 8, !dbg !10324
  %49 = load i32, i32* %hash, align 4, !dbg !10325
  %50 = load i32, i32* %mode, align 4, !dbg !10326
  %call62 = call %struct.table_elt* @insert(%struct.rtx_def* %47, %struct.table_elt* %48, i32 %49, i32 %50), !dbg !10327
  store %struct.table_elt* %call62, %struct.table_elt** %new_elt, align 8, !dbg !10328
  %51 = load i32, i32* @hash_arg_in_memory, align 4, !dbg !10329
  %conv63 = trunc i32 %51 to i8, !dbg !10329
  %52 = load %struct.table_elt*, %struct.table_elt** %new_elt, align 8, !dbg !10330
  %in_memory = getelementptr inbounds %struct.table_elt, %struct.table_elt* %52, i32 0, i32 11, !dbg !10331
  store i8 %conv63, i8* %in_memory, align 1, !dbg !10332
  br label %if.end64, !dbg !10333

if.end64:                                         ; preds = %if.end61, %lor.lhs.false
  br label %for.inc, !dbg !10334

for.inc:                                          ; preds = %if.end64
  %53 = load %struct.table_elt*, %struct.table_elt** %next, align 8, !dbg !10335
  store %struct.table_elt* %53, %struct.table_elt** %elt, align 8, !dbg !10336
  br label %for.cond, !dbg !10337, !llvm.loop !10338

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !10340
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @use_related_value(%struct.rtx_def* %x, %struct.table_elt* %elt) #0 !dbg !10341 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %elt.addr = alloca %struct.table_elt*, align 8
  %relt = alloca %struct.table_elt*, align 8
  %p = alloca %struct.table_elt*, align 8
  %q = alloca %struct.table_elt*, align 8
  %offset = alloca i64, align 8
  %subexp = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !10344, metadata !DIExpression()), !dbg !10345
  store %struct.table_elt* %elt, %struct.table_elt** %elt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.table_elt** %elt.addr, metadata !10346, metadata !DIExpression()), !dbg !10347
  call void @llvm.dbg.declare(metadata %struct.table_elt** %relt, metadata !10348, metadata !DIExpression()), !dbg !10349
  store %struct.table_elt* null, %struct.table_elt** %relt, align 8, !dbg !10349
  call void @llvm.dbg.declare(metadata %struct.table_elt** %p, metadata !10350, metadata !DIExpression()), !dbg !10351
  call void @llvm.dbg.declare(metadata %struct.table_elt** %q, metadata !10352, metadata !DIExpression()), !dbg !10353
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !10354, metadata !DIExpression()), !dbg !10355
  %0 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8, !dbg !10356
  %cmp = icmp ne %struct.table_elt* %0, null, !dbg !10358
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !10359

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8, !dbg !10360
  %related_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %1, i32 0, i32 7, !dbg !10361
  %2 = load %struct.table_elt*, %struct.table_elt** %related_value, align 8, !dbg !10361
  %cmp1 = icmp ne %struct.table_elt* %2, null, !dbg !10362
  br i1 %cmp1, label %if.then, label %if.else, !dbg !10363

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8, !dbg !10364
  store %struct.table_elt* %3, %struct.table_elt** %relt, align 8, !dbg !10365
  br label %if.end24, !dbg !10366

if.else:                                          ; preds = %land.lhs.true, %entry
  %4 = load %struct.table_elt*, %struct.table_elt** %elt.addr, align 8, !dbg !10367
  %cmp2 = icmp eq %struct.table_elt* %4, null, !dbg !10369
  br i1 %cmp2, label %land.lhs.true3, label %if.end23, !dbg !10370

land.lhs.true3:                                   ; preds = %if.else
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10371
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !10371
  %bf.load = load i32, i32* %6, align 8, !dbg !10371
  %bf.clear = and i32 %bf.load, 65535, !dbg !10371
  %cmp4 = icmp eq i32 %bf.clear, 35, !dbg !10372
  br i1 %cmp4, label %if.then5, label %if.end23, !dbg !10373

if.then5:                                         ; preds = %land.lhs.true3
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %subexp, metadata !10374, metadata !DIExpression()), !dbg !10376
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10377
  %call = call %struct.rtx_def* @get_related_value(%struct.rtx_def* %7), !dbg !10378
  store %struct.rtx_def* %call, %struct.rtx_def** %subexp, align 8, !dbg !10376
  %8 = load %struct.rtx_def*, %struct.rtx_def** %subexp, align 8, !dbg !10379
  %cmp6 = icmp ne %struct.rtx_def* %8, null, !dbg !10381
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !10382

if.then7:                                         ; preds = %if.then5
  %9 = load %struct.rtx_def*, %struct.rtx_def** %subexp, align 8, !dbg !10383
  %10 = load %struct.rtx_def*, %struct.rtx_def** %subexp, align 8, !dbg !10384
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !10384
  %bf.load8 = load i32, i32* %11, align 8, !dbg !10384
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !10384
  %cmp10 = icmp eq i32 %bf.clear9, 37, !dbg !10384
  br i1 %cmp10, label %land.lhs.true11, label %cond.false, !dbg !10384

land.lhs.true11:                                  ; preds = %if.then7
  %12 = load %struct.rtx_def*, %struct.rtx_def** %subexp, align 8, !dbg !10384
  %call12 = call i32 @rhs_regno(%struct.rtx_def* %12), !dbg !10384
  %cmp13 = icmp uge i32 %call12, 53, !dbg !10384
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !10384

cond.true:                                        ; preds = %land.lhs.true11
  %13 = load %struct.rtx_def*, %struct.rtx_def** %subexp, align 8, !dbg !10384
  %call14 = call i32 @rhs_regno(%struct.rtx_def* %13), !dbg !10384
  %call15 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call14), !dbg !10384
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call15, i32 0, i32 1, !dbg !10384
  %14 = load i32, i32* %reg_qty, align 4, !dbg !10384
  %add = add i32 4736, %14, !dbg !10384
  br label %cond.end, !dbg !10384

cond.false:                                       ; preds = %land.lhs.true11, %if.then7
  %15 = load %struct.rtx_def*, %struct.rtx_def** %subexp, align 8, !dbg !10384
  %16 = load %struct.rtx_def*, %struct.rtx_def** %subexp, align 8, !dbg !10384
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !10384
  %bf.load16 = load i32, i32* %17, align 8, !dbg !10384
  %bf.lshr = lshr i32 %bf.load16, 16, !dbg !10384
  %bf.clear17 = and i32 %bf.lshr, 255, !dbg !10384
  %call18 = call i32 @safe_hash(%struct.rtx_def* %15, i32 %bf.clear17), !dbg !10384
  br label %cond.end, !dbg !10384

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %call18, %cond.false ], !dbg !10384
  %and = and i32 %cond, 31, !dbg !10384
  %18 = load %struct.rtx_def*, %struct.rtx_def** %subexp, align 8, !dbg !10385
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !10385
  %bf.load19 = load i32, i32* %19, align 8, !dbg !10385
  %bf.lshr20 = lshr i32 %bf.load19, 16, !dbg !10385
  %bf.clear21 = and i32 %bf.lshr20, 255, !dbg !10385
  %call22 = call %struct.table_elt* @lookup(%struct.rtx_def* %9, i32 %and, i32 %bf.clear21), !dbg !10386
  store %struct.table_elt* %call22, %struct.table_elt** %relt, align 8, !dbg !10387
  br label %if.end, !dbg !10388

if.end:                                           ; preds = %cond.end, %if.then5
  br label %if.end23, !dbg !10389

if.end23:                                         ; preds = %if.end, %land.lhs.true3, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then
  %20 = load %struct.table_elt*, %struct.table_elt** %relt, align 8, !dbg !10390
  %cmp25 = icmp eq %struct.table_elt* %20, null, !dbg !10392
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !10393

if.then26:                                        ; preds = %if.end24
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !10394
  br label %return, !dbg !10394

if.end27:                                         ; preds = %if.end24
  %21 = load %struct.table_elt*, %struct.table_elt** %relt, align 8, !dbg !10395
  store %struct.table_elt* %21, %struct.table_elt** %p, align 8, !dbg !10396
  br label %while.body, !dbg !10397

while.body:                                       ; preds = %if.end27, %if.end46
  %22 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10398
  %23 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10401
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %23, i32 0, i32 0, !dbg !10402
  %24 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !10402
  %call28 = call i32 @rtx_equal_p(%struct.rtx_def* %22, %struct.rtx_def* %24), !dbg !10403
  %tobool = icmp ne i32 %call28, 0, !dbg !10403
  br i1 %tobool, label %if.then29, label %if.else30, !dbg !10404

if.then29:                                        ; preds = %while.body
  store %struct.table_elt* null, %struct.table_elt** %q, align 8, !dbg !10405
  br label %if.end38, !dbg !10406

if.else30:                                        ; preds = %while.body
  %25 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10407
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %25, i32 0, i32 6, !dbg !10409
  %26 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8, !dbg !10409
  store %struct.table_elt* %26, %struct.table_elt** %q, align 8, !dbg !10410
  br label %for.cond, !dbg !10411

for.cond:                                         ; preds = %for.inc, %if.else30
  %27 = load %struct.table_elt*, %struct.table_elt** %q, align 8, !dbg !10412
  %tobool31 = icmp ne %struct.table_elt* %27, null, !dbg !10414
  br i1 %tobool31, label %for.body, label %for.end, !dbg !10414

for.body:                                         ; preds = %for.cond
  %28 = load %struct.table_elt*, %struct.table_elt** %q, align 8, !dbg !10415
  %exp32 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %28, i32 0, i32 0, !dbg !10415
  %29 = load %struct.rtx_def*, %struct.rtx_def** %exp32, align 8, !dbg !10415
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !10415
  %bf.load33 = load i32, i32* %30, align 8, !dbg !10415
  %bf.clear34 = and i32 %bf.load33, 65535, !dbg !10415
  %cmp35 = icmp eq i32 %bf.clear34, 37, !dbg !10415
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !10417

if.then36:                                        ; preds = %for.body
  br label %for.end, !dbg !10418

if.end37:                                         ; preds = %for.body
  br label %for.inc, !dbg !10415

for.inc:                                          ; preds = %if.end37
  %31 = load %struct.table_elt*, %struct.table_elt** %q, align 8, !dbg !10419
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %31, i32 0, i32 4, !dbg !10420
  %32 = load %struct.table_elt*, %struct.table_elt** %next_same_value, align 8, !dbg !10420
  store %struct.table_elt* %32, %struct.table_elt** %q, align 8, !dbg !10421
  br label %for.cond, !dbg !10422, !llvm.loop !10423

for.end:                                          ; preds = %if.then36, %for.cond
  br label %if.end38

if.end38:                                         ; preds = %for.end, %if.then29
  %33 = load %struct.table_elt*, %struct.table_elt** %q, align 8, !dbg !10425
  %tobool39 = icmp ne %struct.table_elt* %33, null, !dbg !10425
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !10427

if.then40:                                        ; preds = %if.end38
  br label %while.end, !dbg !10428

if.end41:                                         ; preds = %if.end38
  %34 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10429
  %related_value42 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %34, i32 0, i32 7, !dbg !10430
  %35 = load %struct.table_elt*, %struct.table_elt** %related_value42, align 8, !dbg !10430
  store %struct.table_elt* %35, %struct.table_elt** %p, align 8, !dbg !10431
  %36 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10432
  %37 = load %struct.table_elt*, %struct.table_elt** %relt, align 8, !dbg !10434
  %cmp43 = icmp eq %struct.table_elt* %36, %37, !dbg !10435
  br i1 %cmp43, label %if.then45, label %lor.lhs.false, !dbg !10436

lor.lhs.false:                                    ; preds = %if.end41
  %38 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10437
  %cmp44 = icmp eq %struct.table_elt* %38, null, !dbg !10438
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !10439

if.then45:                                        ; preds = %lor.lhs.false, %if.end41
  br label %while.end, !dbg !10440

if.end46:                                         ; preds = %lor.lhs.false
  br label %while.body, !dbg !10397, !llvm.loop !10441

while.end:                                        ; preds = %if.then45, %if.then40
  %39 = load %struct.table_elt*, %struct.table_elt** %q, align 8, !dbg !10443
  %cmp47 = icmp eq %struct.table_elt* %39, null, !dbg !10445
  br i1 %cmp47, label %if.then48, label %if.end49, !dbg !10446

if.then48:                                        ; preds = %while.end
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !10447
  br label %return, !dbg !10447

if.end49:                                         ; preds = %while.end
  %40 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10448
  %call50 = call i64 @get_integer_term(%struct.rtx_def* %40), !dbg !10449
  %41 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10450
  %exp51 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %41, i32 0, i32 0, !dbg !10451
  %42 = load %struct.rtx_def*, %struct.rtx_def** %exp51, align 8, !dbg !10451
  %call52 = call i64 @get_integer_term(%struct.rtx_def* %42), !dbg !10452
  %sub = sub nsw i64 %call50, %call52, !dbg !10453
  store i64 %sub, i64* %offset, align 8, !dbg !10454
  %43 = load %struct.table_elt*, %struct.table_elt** %q, align 8, !dbg !10455
  %exp53 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %43, i32 0, i32 0, !dbg !10456
  %44 = load %struct.rtx_def*, %struct.rtx_def** %exp53, align 8, !dbg !10456
  %45 = load i64, i64* %offset, align 8, !dbg !10457
  %call54 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %44, i64 %45), !dbg !10458
  store %struct.rtx_def* %call54, %struct.rtx_def** %retval, align 8, !dbg !10459
  br label %return, !dbg !10459

return:                                           ; preds = %if.end49, %if.then48, %if.then26
  %46 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !10460
  ret %struct.rtx_def* %46, !dbg !10460
}

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @try_const_anchors(%struct.rtx_def* %src_const, i32 %mode) #0 !dbg !10461 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %src_const.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %lower_elt = alloca %struct.table_elt*, align 8
  %upper_elt = alloca %struct.table_elt*, align 8
  %lower_base = alloca i64, align 8
  %lower_offs = alloca i64, align 8
  %upper_base = alloca i64, align 8
  %upper_offs = alloca i64, align 8
  %lower_anchor_rtx = alloca %struct.rtx_def*, align 8
  %upper_anchor_rtx = alloca %struct.rtx_def*, align 8
  %lower_exp = alloca %struct.rtx_def*, align 8
  %upper_exp = alloca %struct.rtx_def*, align 8
  %lower_old = alloca i32, align 4
  %upper_old = alloca i32, align 4
  store %struct.rtx_def* %src_const, %struct.rtx_def** %src_const.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %src_const.addr, metadata !10464, metadata !DIExpression()), !dbg !10465
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !10466, metadata !DIExpression()), !dbg !10467
  call void @llvm.dbg.declare(metadata %struct.table_elt** %lower_elt, metadata !10468, metadata !DIExpression()), !dbg !10469
  call void @llvm.dbg.declare(metadata %struct.table_elt** %upper_elt, metadata !10470, metadata !DIExpression()), !dbg !10471
  call void @llvm.dbg.declare(metadata i64* %lower_base, metadata !10472, metadata !DIExpression()), !dbg !10473
  call void @llvm.dbg.declare(metadata i64* %lower_offs, metadata !10474, metadata !DIExpression()), !dbg !10475
  call void @llvm.dbg.declare(metadata i64* %upper_base, metadata !10476, metadata !DIExpression()), !dbg !10477
  call void @llvm.dbg.declare(metadata i64* %upper_offs, metadata !10478, metadata !DIExpression()), !dbg !10479
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %lower_anchor_rtx, metadata !10480, metadata !DIExpression()), !dbg !10481
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %upper_anchor_rtx, metadata !10482, metadata !DIExpression()), !dbg !10483
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %lower_exp, metadata !10484, metadata !DIExpression()), !dbg !10485
  store %struct.rtx_def* null, %struct.rtx_def** %lower_exp, align 8, !dbg !10485
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %upper_exp, metadata !10486, metadata !DIExpression()), !dbg !10487
  store %struct.rtx_def* null, %struct.rtx_def** %upper_exp, align 8, !dbg !10487
  call void @llvm.dbg.declare(metadata i32* %lower_old, metadata !10488, metadata !DIExpression()), !dbg !10489
  call void @llvm.dbg.declare(metadata i32* %upper_old, metadata !10490, metadata !DIExpression()), !dbg !10491
  %0 = load %struct.rtx_def*, %struct.rtx_def** %src_const.addr, align 8, !dbg !10492
  %call = call zeroext i8 @compute_const_anchors(%struct.rtx_def* %0, i64* %lower_base, i64* %lower_offs, i64* %upper_base, i64* %upper_offs), !dbg !10494
  %tobool = icmp ne i8 %call, 0, !dbg !10494
  br i1 %tobool, label %if.end, label %if.then, !dbg !10495

if.then:                                          ; preds = %entry
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !10496
  br label %return, !dbg !10496

if.end:                                           ; preds = %entry
  %1 = load i64, i64* %lower_base, align 8, !dbg !10497
  %call1 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %1), !dbg !10497
  store %struct.rtx_def* %call1, %struct.rtx_def** %lower_anchor_rtx, align 8, !dbg !10498
  %2 = load i64, i64* %upper_base, align 8, !dbg !10499
  %call2 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %2), !dbg !10499
  store %struct.rtx_def* %call2, %struct.rtx_def** %upper_anchor_rtx, align 8, !dbg !10500
  %3 = load %struct.rtx_def*, %struct.rtx_def** %lower_anchor_rtx, align 8, !dbg !10501
  %4 = load %struct.rtx_def*, %struct.rtx_def** %lower_anchor_rtx, align 8, !dbg !10502
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !10502
  %bf.load = load i32, i32* %5, align 8, !dbg !10502
  %bf.clear = and i32 %bf.load, 65535, !dbg !10502
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !10502
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !10502

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %lower_anchor_rtx, align 8, !dbg !10502
  %call3 = call i32 @rhs_regno(%struct.rtx_def* %6), !dbg !10502
  %cmp4 = icmp uge i32 %call3, 53, !dbg !10502
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !10502

cond.true:                                        ; preds = %land.lhs.true
  %7 = load %struct.rtx_def*, %struct.rtx_def** %lower_anchor_rtx, align 8, !dbg !10502
  %call5 = call i32 @rhs_regno(%struct.rtx_def* %7), !dbg !10502
  %call6 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call5), !dbg !10502
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call6, i32 0, i32 1, !dbg !10502
  %8 = load i32, i32* %reg_qty, align 4, !dbg !10502
  %add = add i32 4736, %8, !dbg !10502
  br label %cond.end, !dbg !10502

cond.false:                                       ; preds = %land.lhs.true, %if.end
  %9 = load %struct.rtx_def*, %struct.rtx_def** %lower_anchor_rtx, align 8, !dbg !10502
  %10 = load i32, i32* %mode.addr, align 4, !dbg !10502
  %call7 = call i32 @canon_hash(%struct.rtx_def* %9, i32 %10), !dbg !10502
  br label %cond.end, !dbg !10502

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %call7, %cond.false ], !dbg !10502
  %and = and i32 %cond, 31, !dbg !10502
  %11 = load i32, i32* %mode.addr, align 4, !dbg !10503
  %call8 = call %struct.table_elt* @lookup(%struct.rtx_def* %3, i32 %and, i32 %11), !dbg !10504
  store %struct.table_elt* %call8, %struct.table_elt** %lower_elt, align 8, !dbg !10505
  %12 = load %struct.rtx_def*, %struct.rtx_def** %upper_anchor_rtx, align 8, !dbg !10506
  %13 = load %struct.rtx_def*, %struct.rtx_def** %upper_anchor_rtx, align 8, !dbg !10507
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !10507
  %bf.load9 = load i32, i32* %14, align 8, !dbg !10507
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !10507
  %cmp11 = icmp eq i32 %bf.clear10, 37, !dbg !10507
  br i1 %cmp11, label %land.lhs.true12, label %cond.false20, !dbg !10507

land.lhs.true12:                                  ; preds = %cond.end
  %15 = load %struct.rtx_def*, %struct.rtx_def** %upper_anchor_rtx, align 8, !dbg !10507
  %call13 = call i32 @rhs_regno(%struct.rtx_def* %15), !dbg !10507
  %cmp14 = icmp uge i32 %call13, 53, !dbg !10507
  br i1 %cmp14, label %cond.true15, label %cond.false20, !dbg !10507

cond.true15:                                      ; preds = %land.lhs.true12
  %16 = load %struct.rtx_def*, %struct.rtx_def** %upper_anchor_rtx, align 8, !dbg !10507
  %call16 = call i32 @rhs_regno(%struct.rtx_def* %16), !dbg !10507
  %call17 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call16), !dbg !10507
  %reg_qty18 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call17, i32 0, i32 1, !dbg !10507
  %17 = load i32, i32* %reg_qty18, align 4, !dbg !10507
  %add19 = add i32 4736, %17, !dbg !10507
  br label %cond.end22, !dbg !10507

cond.false20:                                     ; preds = %land.lhs.true12, %cond.end
  %18 = load %struct.rtx_def*, %struct.rtx_def** %upper_anchor_rtx, align 8, !dbg !10507
  %19 = load i32, i32* %mode.addr, align 4, !dbg !10507
  %call21 = call i32 @canon_hash(%struct.rtx_def* %18, i32 %19), !dbg !10507
  br label %cond.end22, !dbg !10507

cond.end22:                                       ; preds = %cond.false20, %cond.true15
  %cond23 = phi i32 [ %add19, %cond.true15 ], [ %call21, %cond.false20 ], !dbg !10507
  %and24 = and i32 %cond23, 31, !dbg !10507
  %20 = load i32, i32* %mode.addr, align 4, !dbg !10508
  %call25 = call %struct.table_elt* @lookup(%struct.rtx_def* %12, i32 %and24, i32 %20), !dbg !10509
  store %struct.table_elt* %call25, %struct.table_elt** %upper_elt, align 8, !dbg !10510
  %21 = load %struct.table_elt*, %struct.table_elt** %lower_elt, align 8, !dbg !10511
  %tobool26 = icmp ne %struct.table_elt* %21, null, !dbg !10511
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !10513

if.then27:                                        ; preds = %cond.end22
  %22 = load %struct.table_elt*, %struct.table_elt** %lower_elt, align 8, !dbg !10514
  %23 = load i64, i64* %lower_offs, align 8, !dbg !10515
  %call28 = call %struct.rtx_def* @find_reg_offset_for_const(%struct.table_elt* %22, i64 %23, i32* %lower_old), !dbg !10516
  store %struct.rtx_def* %call28, %struct.rtx_def** %lower_exp, align 8, !dbg !10517
  br label %if.end29, !dbg !10518

if.end29:                                         ; preds = %if.then27, %cond.end22
  %24 = load %struct.table_elt*, %struct.table_elt** %upper_elt, align 8, !dbg !10519
  %tobool30 = icmp ne %struct.table_elt* %24, null, !dbg !10519
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !10521

if.then31:                                        ; preds = %if.end29
  %25 = load %struct.table_elt*, %struct.table_elt** %upper_elt, align 8, !dbg !10522
  %26 = load i64, i64* %upper_offs, align 8, !dbg !10523
  %call32 = call %struct.rtx_def* @find_reg_offset_for_const(%struct.table_elt* %25, i64 %26, i32* %upper_old), !dbg !10524
  store %struct.rtx_def* %call32, %struct.rtx_def** %upper_exp, align 8, !dbg !10525
  br label %if.end33, !dbg !10526

if.end33:                                         ; preds = %if.then31, %if.end29
  %27 = load %struct.rtx_def*, %struct.rtx_def** %lower_exp, align 8, !dbg !10527
  %tobool34 = icmp ne %struct.rtx_def* %27, null, !dbg !10527
  br i1 %tobool34, label %if.end36, label %if.then35, !dbg !10529

if.then35:                                        ; preds = %if.end33
  %28 = load %struct.rtx_def*, %struct.rtx_def** %upper_exp, align 8, !dbg !10530
  store %struct.rtx_def* %28, %struct.rtx_def** %retval, align 8, !dbg !10531
  br label %return, !dbg !10531

if.end36:                                         ; preds = %if.end33
  %29 = load %struct.rtx_def*, %struct.rtx_def** %upper_exp, align 8, !dbg !10532
  %tobool37 = icmp ne %struct.rtx_def* %29, null, !dbg !10532
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !10534

if.then38:                                        ; preds = %if.end36
  %30 = load %struct.rtx_def*, %struct.rtx_def** %lower_exp, align 8, !dbg !10535
  store %struct.rtx_def* %30, %struct.rtx_def** %retval, align 8, !dbg !10536
  br label %return, !dbg !10536

if.end39:                                         ; preds = %if.end36
  %31 = load i32, i32* %upper_old, align 4, !dbg !10537
  %32 = load i32, i32* %lower_old, align 4, !dbg !10538
  %cmp40 = icmp ugt i32 %31, %32, !dbg !10539
  br i1 %cmp40, label %cond.true41, label %cond.false42, !dbg !10537

cond.true41:                                      ; preds = %if.end39
  %33 = load %struct.rtx_def*, %struct.rtx_def** %upper_exp, align 8, !dbg !10540
  br label %cond.end43, !dbg !10537

cond.false42:                                     ; preds = %if.end39
  %34 = load %struct.rtx_def*, %struct.rtx_def** %lower_exp, align 8, !dbg !10541
  br label %cond.end43, !dbg !10537

cond.end43:                                       ; preds = %cond.false42, %cond.true41
  %cond44 = phi %struct.rtx_def* [ %33, %cond.true41 ], [ %34, %cond.false42 ], !dbg !10537
  store %struct.rtx_def* %cond44, %struct.rtx_def** %retval, align 8, !dbg !10542
  br label %return, !dbg !10542

return:                                           ; preds = %cond.end43, %if.then38, %if.then35, %if.then
  %35 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !10543
  ret %struct.rtx_def* %35, !dbg !10543
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @notreg_cost(%struct.rtx_def* %x, i32 %outer) #0 !dbg !10544 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %outer.addr = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !10547, metadata !DIExpression()), !dbg !10548
  store i32 %outer, i32* %outer.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %outer.addr, metadata !10549, metadata !DIExpression()), !dbg !10550
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10551
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !10551
  %bf.load = load i32, i32* %1, align 8, !dbg !10551
  %bf.clear = and i32 %bf.load, 65535, !dbg !10551
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !10552
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !10553

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10554
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !10554
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !10554
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !10554
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !10554
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !10554
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !10554
  %bf.load1 = load i32, i32* %4, align 8, !dbg !10554
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !10554
  %cmp3 = icmp eq i32 %bf.clear2, 37, !dbg !10554
  br i1 %cmp3, label %land.lhs.true4, label %cond.false, !dbg !10555

land.lhs.true4:                                   ; preds = %land.lhs.true
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10556
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !10556
  %bf.load5 = load i32, i32* %6, align 8, !dbg !10556
  %bf.lshr = lshr i32 %bf.load5, 16, !dbg !10556
  %bf.clear6 = and i32 %bf.lshr, 255, !dbg !10556
  %idxprom = zext i32 %bf.clear6 to i64, !dbg !10556
  %arrayidx7 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !10556
  %7 = load i8, i8* %arrayidx7, align 1, !dbg !10556
  %conv = zext i8 %7 to i32, !dbg !10556
  %cmp8 = icmp eq i32 %conv, 2, !dbg !10557
  br i1 %cmp8, label %land.lhs.true10, label %cond.false, !dbg !10558

land.lhs.true10:                                  ; preds = %land.lhs.true4
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10559
  %u11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !10559
  %fld12 = bitcast %union.u* %u11 to [1 x %union.rtunion_def]*, !dbg !10559
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i64 0, i64 0, !dbg !10559
  %rt_rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**, !dbg !10559
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx14, align 8, !dbg !10559
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !10559
  %bf.load15 = load i32, i32* %10, align 8, !dbg !10559
  %bf.lshr16 = lshr i32 %bf.load15, 16, !dbg !10559
  %bf.clear17 = and i32 %bf.lshr16, 255, !dbg !10559
  %idxprom18 = zext i32 %bf.clear17 to i64, !dbg !10559
  %arrayidx19 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom18, !dbg !10559
  %11 = load i8, i8* %arrayidx19, align 1, !dbg !10559
  %conv20 = zext i8 %11 to i32, !dbg !10559
  %cmp21 = icmp eq i32 %conv20, 2, !dbg !10560
  br i1 %cmp21, label %land.lhs.true23, label %cond.false, !dbg !10561

land.lhs.true23:                                  ; preds = %land.lhs.true10
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10562
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !10562
  %bf.load24 = load i32, i32* %13, align 8, !dbg !10562
  %bf.lshr25 = lshr i32 %bf.load24, 16, !dbg !10562
  %bf.clear26 = and i32 %bf.lshr25, 255, !dbg !10562
  %idxprom27 = zext i32 %bf.clear26 to i64, !dbg !10562
  %arrayidx28 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom27, !dbg !10562
  %14 = load i8, i8* %arrayidx28, align 1, !dbg !10562
  %conv29 = zext i8 %14 to i16, !dbg !10562
  %conv30 = zext i16 %conv29 to i32, !dbg !10562
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10563
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !10563
  %fld32 = bitcast %union.u* %u31 to [1 x %union.rtunion_def]*, !dbg !10563
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i64 0, i64 0, !dbg !10563
  %rt_rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**, !dbg !10563
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx34, align 8, !dbg !10563
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !10563
  %bf.load35 = load i32, i32* %17, align 8, !dbg !10563
  %bf.lshr36 = lshr i32 %bf.load35, 16, !dbg !10563
  %bf.clear37 = and i32 %bf.lshr36, 255, !dbg !10563
  %idxprom38 = zext i32 %bf.clear37 to i64, !dbg !10563
  %arrayidx39 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom38, !dbg !10563
  %18 = load i8, i8* %arrayidx39, align 1, !dbg !10563
  %conv40 = zext i8 %18 to i16, !dbg !10563
  %conv41 = zext i16 %conv40 to i32, !dbg !10563
  %cmp42 = icmp slt i32 %conv30, %conv41, !dbg !10564
  br i1 %cmp42, label %land.lhs.true44, label %cond.false, !dbg !10565

land.lhs.true44:                                  ; preds = %land.lhs.true23
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10566
  %call = call i32 @subreg_lowpart_p(%struct.rtx_def* %19), !dbg !10567
  %tobool = icmp ne i32 %call, 0, !dbg !10567
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10568

cond.true:                                        ; preds = %land.lhs.true44
  br label %cond.end, !dbg !10568

cond.false:                                       ; preds = %land.lhs.true44, %land.lhs.true23, %land.lhs.true10, %land.lhs.true4, %land.lhs.true, %entry
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10569
  %21 = load i32, i32* %outer.addr, align 4, !dbg !10570
  %22 = load i8, i8* @optimize_this_for_speed_p, align 1, !dbg !10571
  %call45 = call i32 @rtx_cost(%struct.rtx_def* %20, i32 %21, i8 zeroext %22), !dbg !10572
  %mul = mul nsw i32 %call45, 2, !dbg !10573
  br label %cond.end, !dbg !10568

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %mul, %cond.false ], !dbg !10568
  ret i32 %cond, !dbg !10574
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @approx_reg_cost(%struct.rtx_def* %x) #0 !dbg !10575 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %cost = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !10578, metadata !DIExpression()), !dbg !10579
  call void @llvm.dbg.declare(metadata i32* %cost, metadata !10580, metadata !DIExpression()), !dbg !10581
  store i32 0, i32* %cost, align 4, !dbg !10581
  %0 = bitcast i32* %cost to i8*, !dbg !10582
  %call = call i32 @for_each_rtx(%struct.rtx_def** %x.addr, i32 (%struct.rtx_def**, i8*)* @approx_reg_cost_1, i8* %0), !dbg !10584
  %tobool = icmp ne i32 %call, 0, !dbg !10584
  br i1 %tobool, label %if.then, label %if.end, !dbg !10585

if.then:                                          ; preds = %entry
  store i32 2147483647, i32* %retval, align 4, !dbg !10586
  br label %return, !dbg !10586

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %cost, align 4, !dbg !10587
  store i32 %1, i32* %retval, align 4, !dbg !10588
  br label %return, !dbg !10588

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !10589
  ret i32 %2, !dbg !10589
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @preferable(i32 %cost_a, i32 %regcost_a, i32 %cost_b, i32 %regcost_b) #0 !dbg !10590 {
entry:
  %retval = alloca i32, align 4
  %cost_a.addr = alloca i32, align 4
  %regcost_a.addr = alloca i32, align 4
  %cost_b.addr = alloca i32, align 4
  %regcost_b.addr = alloca i32, align 4
  store i32 %cost_a, i32* %cost_a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cost_a.addr, metadata !10593, metadata !DIExpression()), !dbg !10594
  store i32 %regcost_a, i32* %regcost_a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regcost_a.addr, metadata !10595, metadata !DIExpression()), !dbg !10596
  store i32 %cost_b, i32* %cost_b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cost_b.addr, metadata !10597, metadata !DIExpression()), !dbg !10598
  store i32 %regcost_b, i32* %regcost_b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regcost_b.addr, metadata !10599, metadata !DIExpression()), !dbg !10600
  %0 = load i32, i32* %cost_a.addr, align 4, !dbg !10601
  %1 = load i32, i32* %cost_b.addr, align 4, !dbg !10603
  %cmp = icmp ne i32 %0, %1, !dbg !10604
  br i1 %cmp, label %if.then, label %if.end6, !dbg !10605

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %cost_a.addr, align 4, !dbg !10606
  %cmp1 = icmp eq i32 %2, 2147483647, !dbg !10609
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !10610

if.then2:                                         ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !10611
  br label %return, !dbg !10611

if.end:                                           ; preds = %if.then
  %3 = load i32, i32* %cost_b.addr, align 4, !dbg !10612
  %cmp3 = icmp eq i32 %3, 2147483647, !dbg !10614
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !10615

if.then4:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !10616
  br label %return, !dbg !10616

if.end5:                                          ; preds = %if.end
  br label %if.end6, !dbg !10617

if.end6:                                          ; preds = %if.end5, %entry
  %4 = load i32, i32* %regcost_a.addr, align 4, !dbg !10618
  %5 = load i32, i32* %regcost_b.addr, align 4, !dbg !10620
  %cmp7 = icmp ne i32 %4, %5, !dbg !10621
  br i1 %cmp7, label %if.then8, label %if.end15, !dbg !10622

if.then8:                                         ; preds = %if.end6
  %6 = load i32, i32* %regcost_a.addr, align 4, !dbg !10623
  %cmp9 = icmp eq i32 %6, 2147483647, !dbg !10626
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !10627

if.then10:                                        ; preds = %if.then8
  store i32 1, i32* %retval, align 4, !dbg !10628
  br label %return, !dbg !10628

if.end11:                                         ; preds = %if.then8
  %7 = load i32, i32* %regcost_b.addr, align 4, !dbg !10629
  %cmp12 = icmp eq i32 %7, 2147483647, !dbg !10631
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !10632

if.then13:                                        ; preds = %if.end11
  store i32 -1, i32* %retval, align 4, !dbg !10633
  br label %return, !dbg !10633

if.end14:                                         ; preds = %if.end11
  br label %if.end15, !dbg !10634

if.end15:                                         ; preds = %if.end14, %if.end6
  %8 = load i32, i32* %cost_a.addr, align 4, !dbg !10635
  %9 = load i32, i32* %cost_b.addr, align 4, !dbg !10637
  %cmp16 = icmp ne i32 %8, %9, !dbg !10638
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !10639

if.then17:                                        ; preds = %if.end15
  %10 = load i32, i32* %cost_a.addr, align 4, !dbg !10640
  %11 = load i32, i32* %cost_b.addr, align 4, !dbg !10641
  %sub = sub nsw i32 %10, %11, !dbg !10642
  store i32 %sub, i32* %retval, align 4, !dbg !10643
  br label %return, !dbg !10643

if.end18:                                         ; preds = %if.end15
  %12 = load i32, i32* %regcost_a.addr, align 4, !dbg !10644
  %13 = load i32, i32* %regcost_b.addr, align 4, !dbg !10646
  %cmp19 = icmp ne i32 %12, %13, !dbg !10647
  br i1 %cmp19, label %if.then20, label %if.end22, !dbg !10648

if.then20:                                        ; preds = %if.end18
  %14 = load i32, i32* %regcost_a.addr, align 4, !dbg !10649
  %15 = load i32, i32* %regcost_b.addr, align 4, !dbg !10650
  %sub21 = sub nsw i32 %14, %15, !dbg !10651
  store i32 %sub21, i32* %retval, align 4, !dbg !10652
  br label %return, !dbg !10652

if.end22:                                         ; preds = %if.end18
  store i32 0, i32* %retval, align 4, !dbg !10653
  br label %return, !dbg !10653

return:                                           ; preds = %if.end22, %if.then20, %if.then17, %if.then13, %if.then10, %if.then4, %if.then2
  %16 = load i32, i32* %retval, align 4, !dbg !10654
  ret i32 %16, !dbg !10654
}

declare dso_local %struct.rtx_def* @force_const_mem(i32, %struct.rtx_def*) #2

declare dso_local i32 @nonoverlapping_memrefs_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local i64 @trunc_int_for_mode(i64, i32) #2

declare dso_local zeroext i8 @validate_unshare_change(%struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def*, i8 zeroext) #2

declare dso_local %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #2

declare dso_local void @remove_note(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local i32 @condjump_p(%struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @emit_jump_insn_before(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @gen_jump(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @insert_regs(%struct.rtx_def* %x, %struct.table_elt* %classp, i32 %modified) #0 !dbg !10655 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %classp.addr = alloca %struct.table_elt*, align 8
  %modified.addr = alloca i32, align 4
  %regno = alloca i32, align 4
  %qty_valid = alloca i32, align 4
  %ent = alloca %struct.qty_table_elem*, align 8
  %c_regno = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !10658, metadata !DIExpression()), !dbg !10659
  store %struct.table_elt* %classp, %struct.table_elt** %classp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.table_elt** %classp.addr, metadata !10660, metadata !DIExpression()), !dbg !10661
  store i32 %modified, i32* %modified.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %modified.addr, metadata !10662, metadata !DIExpression()), !dbg !10663
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10664
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !10664
  %bf.load = load i32, i32* %1, align 8, !dbg !10664
  %bf.clear = and i32 %bf.load, 65535, !dbg !10664
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !10664
  br i1 %cmp, label %if.then, label %if.else, !dbg !10666

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !10667, metadata !DIExpression()), !dbg !10669
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10670
  %call = call i32 @rhs_regno(%struct.rtx_def* %2), !dbg !10670
  store i32 %call, i32* %regno, align 4, !dbg !10669
  call void @llvm.dbg.declare(metadata i32* %qty_valid, metadata !10671, metadata !DIExpression()), !dbg !10672
  %3 = load i32, i32* %regno, align 4, !dbg !10673
  %call1 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %3), !dbg !10673
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call1, i32 0, i32 1, !dbg !10673
  %4 = load i32, i32* %reg_qty, align 4, !dbg !10673
  %cmp2 = icmp sge i32 %4, 0, !dbg !10673
  %conv = zext i1 %cmp2 to i32, !dbg !10673
  store i32 %conv, i32* %qty_valid, align 4, !dbg !10674
  %5 = load i32, i32* %qty_valid, align 4, !dbg !10675
  %tobool = icmp ne i32 %5, 0, !dbg !10675
  br i1 %tobool, label %if.then3, label %if.end14, !dbg !10677

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.qty_table_elem** %ent, metadata !10678, metadata !DIExpression()), !dbg !10680
  %6 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8, !dbg !10681
  %7 = load i32, i32* %regno, align 4, !dbg !10682
  %call4 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %7), !dbg !10682
  %reg_qty5 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call4, i32 0, i32 1, !dbg !10682
  %8 = load i32, i32* %reg_qty5, align 4, !dbg !10682
  %idxprom = sext i32 %8 to i64, !dbg !10681
  %arrayidx = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %6, i64 %idxprom, !dbg !10681
  store %struct.qty_table_elem* %arrayidx, %struct.qty_table_elem** %ent, align 8, !dbg !10680
  %9 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !10683
  %mode = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %9, i32 0, i32 6, !dbg !10685
  %10 = bitcast i24* %mode to i32*, !dbg !10685
  %bf.load6 = load i32, i32* %10, align 4, !dbg !10685
  %bf.lshr = lshr i32 %bf.load6, 16, !dbg !10685
  %bf.clear7 = and i32 %bf.lshr, 255, !dbg !10685
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10686
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !10686
  %bf.load8 = load i32, i32* %12, align 8, !dbg !10686
  %bf.lshr9 = lshr i32 %bf.load8, 16, !dbg !10686
  %bf.clear10 = and i32 %bf.lshr9, 255, !dbg !10686
  %cmp11 = icmp ne i32 %bf.clear7, %bf.clear10, !dbg !10687
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !10688

if.then13:                                        ; preds = %if.then3
  store i32 0, i32* %retval, align 4, !dbg !10689
  br label %return, !dbg !10689

if.end:                                           ; preds = %if.then3
  br label %if.end14, !dbg !10690

if.end14:                                         ; preds = %if.end, %if.then
  %13 = load i32, i32* %modified.addr, align 4, !dbg !10691
  %tobool15 = icmp ne i32 %13, 0, !dbg !10691
  br i1 %tobool15, label %if.then17, label %lor.lhs.false, !dbg !10693

lor.lhs.false:                                    ; preds = %if.end14
  %14 = load i32, i32* %qty_valid, align 4, !dbg !10694
  %tobool16 = icmp ne i32 %14, 0, !dbg !10694
  br i1 %tobool16, label %if.end77, label %if.then17, !dbg !10695

if.then17:                                        ; preds = %lor.lhs.false, %if.end14
  %15 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8, !dbg !10696
  %tobool18 = icmp ne %struct.table_elt* %15, null, !dbg !10696
  br i1 %tobool18, label %if.then19, label %if.end58, !dbg !10699

if.then19:                                        ; preds = %if.then17
  %16 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8, !dbg !10700
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %16, i32 0, i32 6, !dbg !10702
  %17 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8, !dbg !10702
  store %struct.table_elt* %17, %struct.table_elt** %classp.addr, align 8, !dbg !10703
  br label %for.cond, !dbg !10704

for.cond:                                         ; preds = %for.inc, %if.then19
  %18 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8, !dbg !10705
  %cmp20 = icmp ne %struct.table_elt* %18, null, !dbg !10707
  br i1 %cmp20, label %for.body, label %for.end, !dbg !10708

for.body:                                         ; preds = %for.cond
  %19 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8, !dbg !10709
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %19, i32 0, i32 0, !dbg !10709
  %20 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !10709
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !10709
  %bf.load22 = load i32, i32* %21, align 8, !dbg !10709
  %bf.clear23 = and i32 %bf.load22, 65535, !dbg !10709
  %cmp24 = icmp eq i32 %bf.clear23, 37, !dbg !10709
  br i1 %cmp24, label %land.lhs.true, label %if.end57, !dbg !10711

land.lhs.true:                                    ; preds = %for.body
  %22 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8, !dbg !10712
  %exp26 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %22, i32 0, i32 0, !dbg !10712
  %23 = load %struct.rtx_def*, %struct.rtx_def** %exp26, align 8, !dbg !10712
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !10712
  %bf.load27 = load i32, i32* %24, align 8, !dbg !10712
  %bf.lshr28 = lshr i32 %bf.load27, 16, !dbg !10712
  %bf.clear29 = and i32 %bf.lshr28, 255, !dbg !10712
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10713
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !10713
  %bf.load30 = load i32, i32* %26, align 8, !dbg !10713
  %bf.lshr31 = lshr i32 %bf.load30, 16, !dbg !10713
  %bf.clear32 = and i32 %bf.lshr31, 255, !dbg !10713
  %cmp33 = icmp eq i32 %bf.clear29, %bf.clear32, !dbg !10714
  br i1 %cmp33, label %if.then35, label %if.end57, !dbg !10715

if.then35:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %c_regno, metadata !10716, metadata !DIExpression()), !dbg !10718
  %27 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8, !dbg !10719
  %exp36 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %27, i32 0, i32 0, !dbg !10719
  %28 = load %struct.rtx_def*, %struct.rtx_def** %exp36, align 8, !dbg !10719
  %call37 = call i32 @rhs_regno(%struct.rtx_def* %28), !dbg !10719
  store i32 %call37, i32* %c_regno, align 4, !dbg !10718
  %29 = load i32, i32* %c_regno, align 4, !dbg !10720
  %call38 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %29), !dbg !10720
  %reg_qty39 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call38, i32 0, i32 1, !dbg !10720
  %30 = load i32, i32* %reg_qty39, align 4, !dbg !10720
  %cmp40 = icmp sge i32 %30, 0, !dbg !10720
  br i1 %cmp40, label %cond.false, label %cond.true, !dbg !10720

cond.true:                                        ; preds = %if.then35
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32 1167, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)), !dbg !10720
  br label %cond.end, !dbg !10720

cond.false:                                       ; preds = %if.then35
  br label %cond.end, !dbg !10720

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !10720
  %31 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8, !dbg !10721
  %32 = load i32, i32* %c_regno, align 4, !dbg !10723
  %call42 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %32), !dbg !10723
  %reg_qty43 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call42, i32 0, i32 1, !dbg !10723
  %33 = load i32, i32* %reg_qty43, align 4, !dbg !10723
  %idxprom44 = sext i32 %33 to i64, !dbg !10721
  %arrayidx45 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %31, i64 %idxprom44, !dbg !10721
  %mode46 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %arrayidx45, i32 0, i32 6, !dbg !10724
  %34 = bitcast i24* %mode46 to i32*, !dbg !10724
  %bf.load47 = load i32, i32* %34, align 4, !dbg !10724
  %bf.lshr48 = lshr i32 %bf.load47, 16, !dbg !10724
  %bf.clear49 = and i32 %bf.lshr48, 255, !dbg !10724
  %35 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10725
  %36 = bitcast %struct.rtx_def* %35 to i32*, !dbg !10725
  %bf.load50 = load i32, i32* %36, align 8, !dbg !10725
  %bf.lshr51 = lshr i32 %bf.load50, 16, !dbg !10725
  %bf.clear52 = and i32 %bf.lshr51, 255, !dbg !10725
  %cmp53 = icmp ne i32 %bf.clear49, %bf.clear52, !dbg !10726
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !10727

if.then55:                                        ; preds = %cond.end
  br label %for.inc, !dbg !10728

if.end56:                                         ; preds = %cond.end
  %37 = load i32, i32* %regno, align 4, !dbg !10729
  %38 = load i32, i32* %c_regno, align 4, !dbg !10730
  call void @make_regs_eqv(i32 %37, i32 %38), !dbg !10731
  store i32 1, i32* %retval, align 4, !dbg !10732
  br label %return, !dbg !10732

if.end57:                                         ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !10713

for.inc:                                          ; preds = %if.end57, %if.then55
  %39 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8, !dbg !10733
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %39, i32 0, i32 4, !dbg !10734
  %40 = load %struct.table_elt*, %struct.table_elt** %next_same_value, align 8, !dbg !10734
  store %struct.table_elt* %40, %struct.table_elt** %classp.addr, align 8, !dbg !10735
  br label %for.cond, !dbg !10736, !llvm.loop !10737

for.end:                                          ; preds = %for.cond
  br label %if.end58, !dbg !10738

if.end58:                                         ; preds = %for.end, %if.then17
  %41 = load i32, i32* %modified.addr, align 4, !dbg !10739
  %tobool59 = icmp ne i32 %41, 0, !dbg !10739
  br i1 %tobool59, label %if.end73, label %land.lhs.true60, !dbg !10741

land.lhs.true60:                                  ; preds = %if.end58
  %42 = load i32, i32* %regno, align 4, !dbg !10742
  %call61 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %42), !dbg !10742
  %reg_in_table = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call61, i32 0, i32 3, !dbg !10742
  %43 = load i32, i32* %reg_in_table, align 4, !dbg !10742
  %cmp62 = icmp sge i32 %43, 0, !dbg !10743
  br i1 %cmp62, label %land.lhs.true64, label %if.end73, !dbg !10744

land.lhs.true64:                                  ; preds = %land.lhs.true60
  %44 = load i32, i32* %regno, align 4, !dbg !10745
  %call65 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %44), !dbg !10745
  %reg_tick = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call65, i32 0, i32 2, !dbg !10745
  %45 = load i32, i32* %reg_tick, align 4, !dbg !10745
  %46 = load i32, i32* %regno, align 4, !dbg !10746
  %call66 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %46), !dbg !10746
  %reg_in_table67 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call66, i32 0, i32 3, !dbg !10746
  %47 = load i32, i32* %reg_in_table67, align 4, !dbg !10746
  %add = add nsw i32 %47, 1, !dbg !10747
  %cmp68 = icmp eq i32 %45, %add, !dbg !10748
  br i1 %cmp68, label %if.then70, label %if.end73, !dbg !10749

if.then70:                                        ; preds = %land.lhs.true64
  %48 = load i32, i32* %regno, align 4, !dbg !10750
  %call71 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %48), !dbg !10750
  %reg_tick72 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call71, i32 0, i32 2, !dbg !10750
  %49 = load i32, i32* %reg_tick72, align 4, !dbg !10751
  %inc = add nsw i32 %49, 1, !dbg !10751
  store i32 %inc, i32* %reg_tick72, align 4, !dbg !10751
  br label %if.end73, !dbg !10750

if.end73:                                         ; preds = %if.then70, %land.lhs.true64, %land.lhs.true60, %if.end58
  %50 = load i32, i32* %regno, align 4, !dbg !10752
  %51 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10753
  %52 = bitcast %struct.rtx_def* %51 to i32*, !dbg !10753
  %bf.load74 = load i32, i32* %52, align 8, !dbg !10753
  %bf.lshr75 = lshr i32 %bf.load74, 16, !dbg !10753
  %bf.clear76 = and i32 %bf.lshr75, 255, !dbg !10753
  call void @make_new_qty(i32 %50, i32 %bf.clear76), !dbg !10754
  store i32 1, i32* %retval, align 4, !dbg !10755
  br label %return, !dbg !10755

if.end77:                                         ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !10756
  br label %return, !dbg !10756

if.else:                                          ; preds = %entry
  %53 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10757
  %54 = bitcast %struct.rtx_def* %53 to i32*, !dbg !10757
  %bf.load78 = load i32, i32* %54, align 8, !dbg !10757
  %bf.clear79 = and i32 %bf.load78, 65535, !dbg !10757
  %cmp80 = icmp eq i32 %bf.clear79, 39, !dbg !10759
  br i1 %cmp80, label %land.lhs.true82, label %if.else105, !dbg !10760

land.lhs.true82:                                  ; preds = %if.else
  %55 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10761
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i32 0, i32 1, !dbg !10761
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !10761
  %arrayidx83 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !10761
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx83 to %struct.rtx_def**, !dbg !10761
  %56 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !10761
  %57 = bitcast %struct.rtx_def* %56 to i32*, !dbg !10761
  %bf.load84 = load i32, i32* %57, align 8, !dbg !10761
  %bf.clear85 = and i32 %bf.load84, 65535, !dbg !10761
  %cmp86 = icmp eq i32 %bf.clear85, 37, !dbg !10761
  br i1 %cmp86, label %land.lhs.true88, label %if.else105, !dbg !10762

land.lhs.true88:                                  ; preds = %land.lhs.true82
  %58 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10763
  %u89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1, !dbg !10763
  %fld90 = bitcast %union.u* %u89 to [1 x %union.rtunion_def]*, !dbg !10763
  %arrayidx91 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld90, i64 0, i64 0, !dbg !10763
  %rt_rtx92 = bitcast %union.rtunion_def* %arrayidx91 to %struct.rtx_def**, !dbg !10763
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx92, align 8, !dbg !10763
  %call93 = call i32 @rhs_regno(%struct.rtx_def* %59), !dbg !10763
  %call94 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call93), !dbg !10763
  %reg_qty95 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call94, i32 0, i32 1, !dbg !10763
  %60 = load i32, i32* %reg_qty95, align 4, !dbg !10763
  %cmp96 = icmp sge i32 %60, 0, !dbg !10763
  br i1 %cmp96, label %if.else105, label %if.then98, !dbg !10764

if.then98:                                        ; preds = %land.lhs.true88
  %61 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10765
  %u99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1, !dbg !10765
  %fld100 = bitcast %union.u* %u99 to [1 x %union.rtunion_def]*, !dbg !10765
  %arrayidx101 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld100, i64 0, i64 0, !dbg !10765
  %rt_rtx102 = bitcast %union.rtunion_def* %arrayidx101 to %struct.rtx_def**, !dbg !10765
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx102, align 8, !dbg !10765
  %call103 = call i32 @insert_regs(%struct.rtx_def* %62, %struct.table_elt* null, i32 0), !dbg !10767
  %63 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10768
  %call104 = call i32 @mention_regs(%struct.rtx_def* %63), !dbg !10769
  store i32 1, i32* %retval, align 4, !dbg !10770
  br label %return, !dbg !10770

if.else105:                                       ; preds = %land.lhs.true88, %land.lhs.true82, %if.else
  %64 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10771
  %call106 = call i32 @mention_regs(%struct.rtx_def* %64), !dbg !10772
  store i32 %call106, i32* %retval, align 4, !dbg !10773
  br label %return, !dbg !10773

return:                                           ; preds = %if.else105, %if.then98, %if.end77, %if.end73, %if.end56, %if.then13
  %65 = load i32, i32* %retval, align 4, !dbg !10774
  ret i32 %65, !dbg !10774
}

; Function Attrs: noinline nounwind uwtable
define internal void @rehash_using_reg(%struct.rtx_def* %x) #0 !dbg !10775 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %p = alloca %struct.table_elt*, align 8
  %next = alloca %struct.table_elt*, align 8
  %hash = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !10776, metadata !DIExpression()), !dbg !10777
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10778, metadata !DIExpression()), !dbg !10779
  call void @llvm.dbg.declare(metadata %struct.table_elt** %p, metadata !10780, metadata !DIExpression()), !dbg !10781
  call void @llvm.dbg.declare(metadata %struct.table_elt** %next, metadata !10782, metadata !DIExpression()), !dbg !10783
  call void @llvm.dbg.declare(metadata i32* %hash, metadata !10784, metadata !DIExpression()), !dbg !10785
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10786
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !10786
  %bf.load = load i32, i32* %1, align 8, !dbg !10786
  %bf.clear = and i32 %bf.load, 65535, !dbg !10786
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !10788
  br i1 %cmp, label %if.then, label %if.end, !dbg !10789

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10790
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !10790
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !10790
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !10790
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !10790
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !10790
  store %struct.rtx_def* %3, %struct.rtx_def** %x.addr, align 8, !dbg !10791
  br label %if.end, !dbg !10792

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10793
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !10793
  %bf.load1 = load i32, i32* %5, align 8, !dbg !10793
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !10793
  %cmp3 = icmp eq i32 %bf.clear2, 37, !dbg !10793
  br i1 %cmp3, label %lor.lhs.false, label %if.then13, !dbg !10795

lor.lhs.false:                                    ; preds = %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10796
  %call = call i32 @rhs_regno(%struct.rtx_def* %6), !dbg !10796
  %call4 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call), !dbg !10796
  %reg_in_table = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call4, i32 0, i32 3, !dbg !10796
  %7 = load i32, i32* %reg_in_table, align 4, !dbg !10796
  %cmp5 = icmp slt i32 %7, 0, !dbg !10797
  br i1 %cmp5, label %if.then13, label %lor.lhs.false6, !dbg !10798

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10799
  %call7 = call i32 @rhs_regno(%struct.rtx_def* %8), !dbg !10799
  %call8 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call7), !dbg !10799
  %reg_in_table9 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call8, i32 0, i32 3, !dbg !10799
  %9 = load i32, i32* %reg_in_table9, align 4, !dbg !10799
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10800
  %call10 = call i32 @rhs_regno(%struct.rtx_def* %10), !dbg !10800
  %call11 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call10), !dbg !10800
  %reg_tick = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call11, i32 0, i32 2, !dbg !10800
  %11 = load i32, i32* %reg_tick, align 4, !dbg !10800
  %cmp12 = icmp ne i32 %9, %11, !dbg !10801
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !10802

if.then13:                                        ; preds = %lor.lhs.false6, %lor.lhs.false, %if.end
  br label %for.end74, !dbg !10803

if.end14:                                         ; preds = %lor.lhs.false6
  store i32 0, i32* %i, align 4, !dbg !10804
  br label %for.cond, !dbg !10806

for.cond:                                         ; preds = %for.inc73, %if.end14
  %12 = load i32, i32* %i, align 4, !dbg !10807
  %cmp15 = icmp ult i32 %12, 32, !dbg !10809
  br i1 %cmp15, label %for.body, label %for.end74, !dbg !10810

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4, !dbg !10811
  %idxprom = zext i32 %13 to i64, !dbg !10813
  %arrayidx16 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom, !dbg !10813
  %14 = load %struct.table_elt*, %struct.table_elt** %arrayidx16, align 8, !dbg !10813
  store %struct.table_elt* %14, %struct.table_elt** %p, align 8, !dbg !10814
  br label %for.cond17, !dbg !10815

for.cond17:                                       ; preds = %for.inc, %for.body
  %15 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10816
  %tobool = icmp ne %struct.table_elt* %15, null, !dbg !10818
  br i1 %tobool, label %for.body18, label %for.end, !dbg !10818

for.body18:                                       ; preds = %for.cond17
  %16 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10819
  %next_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %16, i32 0, i32 2, !dbg !10821
  %17 = load %struct.table_elt*, %struct.table_elt** %next_same_hash, align 8, !dbg !10821
  store %struct.table_elt* %17, %struct.table_elt** %next, align 8, !dbg !10822
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10823
  %19 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10825
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %19, i32 0, i32 0, !dbg !10826
  %20 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !10826
  %call19 = call i32 @reg_mentioned_p(%struct.rtx_def* %18, %struct.rtx_def* %20), !dbg !10827
  %tobool20 = icmp ne i32 %call19, 0, !dbg !10827
  br i1 %tobool20, label %land.lhs.true, label %if.end72, !dbg !10828

land.lhs.true:                                    ; preds = %for.body18
  %21 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10829
  %exp21 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %21, i32 0, i32 0, !dbg !10830
  %22 = load %struct.rtx_def*, %struct.rtx_def** %exp21, align 8, !dbg !10830
  %23 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10831
  %exp22 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %23, i32 0, i32 0, !dbg !10832
  %24 = load %struct.rtx_def*, %struct.rtx_def** %exp22, align 8, !dbg !10832
  %call23 = call i32 @exp_equiv_p(%struct.rtx_def* %22, %struct.rtx_def* %24, i32 1, i8 zeroext 0), !dbg !10833
  %tobool24 = icmp ne i32 %call23, 0, !dbg !10833
  br i1 %tobool24, label %land.lhs.true25, label %if.end72, !dbg !10834

land.lhs.true25:                                  ; preds = %land.lhs.true
  %25 = load i32, i32* %i, align 4, !dbg !10835
  %26 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10836
  %exp26 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %26, i32 0, i32 0, !dbg !10836
  %27 = load %struct.rtx_def*, %struct.rtx_def** %exp26, align 8, !dbg !10836
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !10836
  %bf.load27 = load i32, i32* %28, align 8, !dbg !10836
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !10836
  %cmp29 = icmp eq i32 %bf.clear28, 37, !dbg !10836
  br i1 %cmp29, label %land.lhs.true30, label %cond.false, !dbg !10836

land.lhs.true30:                                  ; preds = %land.lhs.true25
  %29 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10836
  %exp31 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %29, i32 0, i32 0, !dbg !10836
  %30 = load %struct.rtx_def*, %struct.rtx_def** %exp31, align 8, !dbg !10836
  %call32 = call i32 @rhs_regno(%struct.rtx_def* %30), !dbg !10836
  %cmp33 = icmp uge i32 %call32, 53, !dbg !10836
  br i1 %cmp33, label %cond.true, label %cond.false, !dbg !10836

cond.true:                                        ; preds = %land.lhs.true30
  %31 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10836
  %exp34 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %31, i32 0, i32 0, !dbg !10836
  %32 = load %struct.rtx_def*, %struct.rtx_def** %exp34, align 8, !dbg !10836
  %call35 = call i32 @rhs_regno(%struct.rtx_def* %32), !dbg !10836
  %call36 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call35), !dbg !10836
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call36, i32 0, i32 1, !dbg !10836
  %33 = load i32, i32* %reg_qty, align 4, !dbg !10836
  %add = add i32 4736, %33, !dbg !10836
  br label %cond.end, !dbg !10836

cond.false:                                       ; preds = %land.lhs.true30, %land.lhs.true25
  %34 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10836
  %exp37 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %34, i32 0, i32 0, !dbg !10836
  %35 = load %struct.rtx_def*, %struct.rtx_def** %exp37, align 8, !dbg !10836
  %36 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10836
  %mode = getelementptr inbounds %struct.table_elt, %struct.table_elt* %36, i32 0, i32 10, !dbg !10836
  %bf.load38 = load i8, i8* %mode, align 8, !dbg !10836
  %bf.cast = zext i8 %bf.load38 to i32, !dbg !10836
  %call39 = call i32 @safe_hash(%struct.rtx_def* %35, i32 %bf.cast), !dbg !10836
  br label %cond.end, !dbg !10836

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %call39, %cond.false ], !dbg !10836
  %and = and i32 %cond, 31, !dbg !10836
  store i32 %and, i32* %hash, align 4, !dbg !10837
  %cmp40 = icmp ne i32 %25, %and, !dbg !10838
  br i1 %cmp40, label %if.then41, label %if.end72, !dbg !10839

if.then41:                                        ; preds = %cond.end
  %37 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10840
  %next_same_hash42 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %37, i32 0, i32 2, !dbg !10843
  %38 = load %struct.table_elt*, %struct.table_elt** %next_same_hash42, align 8, !dbg !10843
  %tobool43 = icmp ne %struct.table_elt* %38, null, !dbg !10840
  br i1 %tobool43, label %if.then44, label %if.end47, !dbg !10844

if.then44:                                        ; preds = %if.then41
  %39 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10845
  %prev_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %39, i32 0, i32 3, !dbg !10846
  %40 = load %struct.table_elt*, %struct.table_elt** %prev_same_hash, align 8, !dbg !10846
  %41 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10847
  %next_same_hash45 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %41, i32 0, i32 2, !dbg !10848
  %42 = load %struct.table_elt*, %struct.table_elt** %next_same_hash45, align 8, !dbg !10848
  %prev_same_hash46 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %42, i32 0, i32 3, !dbg !10849
  store %struct.table_elt* %40, %struct.table_elt** %prev_same_hash46, align 8, !dbg !10850
  br label %if.end47, !dbg !10847

if.end47:                                         ; preds = %if.then44, %if.then41
  %43 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10851
  %prev_same_hash48 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %43, i32 0, i32 3, !dbg !10853
  %44 = load %struct.table_elt*, %struct.table_elt** %prev_same_hash48, align 8, !dbg !10853
  %tobool49 = icmp ne %struct.table_elt* %44, null, !dbg !10851
  br i1 %tobool49, label %if.then50, label %if.else, !dbg !10854

if.then50:                                        ; preds = %if.end47
  %45 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10855
  %next_same_hash51 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %45, i32 0, i32 2, !dbg !10856
  %46 = load %struct.table_elt*, %struct.table_elt** %next_same_hash51, align 8, !dbg !10856
  %47 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10857
  %prev_same_hash52 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %47, i32 0, i32 3, !dbg !10858
  %48 = load %struct.table_elt*, %struct.table_elt** %prev_same_hash52, align 8, !dbg !10858
  %next_same_hash53 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %48, i32 0, i32 2, !dbg !10859
  store %struct.table_elt* %46, %struct.table_elt** %next_same_hash53, align 8, !dbg !10860
  br label %if.end57, !dbg !10857

if.else:                                          ; preds = %if.end47
  %49 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10861
  %next_same_hash54 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %49, i32 0, i32 2, !dbg !10862
  %50 = load %struct.table_elt*, %struct.table_elt** %next_same_hash54, align 8, !dbg !10862
  %51 = load i32, i32* %i, align 4, !dbg !10863
  %idxprom55 = zext i32 %51 to i64, !dbg !10864
  %arrayidx56 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom55, !dbg !10864
  store %struct.table_elt* %50, %struct.table_elt** %arrayidx56, align 8, !dbg !10865
  br label %if.end57

if.end57:                                         ; preds = %if.else, %if.then50
  %52 = load i32, i32* %hash, align 4, !dbg !10866
  %idxprom58 = zext i32 %52 to i64, !dbg !10867
  %arrayidx59 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom58, !dbg !10867
  %53 = load %struct.table_elt*, %struct.table_elt** %arrayidx59, align 8, !dbg !10867
  %54 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10868
  %next_same_hash60 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %54, i32 0, i32 2, !dbg !10869
  store %struct.table_elt* %53, %struct.table_elt** %next_same_hash60, align 8, !dbg !10870
  %55 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10871
  %prev_same_hash61 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %55, i32 0, i32 3, !dbg !10872
  store %struct.table_elt* null, %struct.table_elt** %prev_same_hash61, align 8, !dbg !10873
  %56 = load i32, i32* %hash, align 4, !dbg !10874
  %idxprom62 = zext i32 %56 to i64, !dbg !10876
  %arrayidx63 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom62, !dbg !10876
  %57 = load %struct.table_elt*, %struct.table_elt** %arrayidx63, align 8, !dbg !10876
  %tobool64 = icmp ne %struct.table_elt* %57, null, !dbg !10876
  br i1 %tobool64, label %if.then65, label %if.end69, !dbg !10877

if.then65:                                        ; preds = %if.end57
  %58 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10878
  %59 = load i32, i32* %hash, align 4, !dbg !10879
  %idxprom66 = zext i32 %59 to i64, !dbg !10880
  %arrayidx67 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom66, !dbg !10880
  %60 = load %struct.table_elt*, %struct.table_elt** %arrayidx67, align 8, !dbg !10880
  %prev_same_hash68 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %60, i32 0, i32 3, !dbg !10881
  store %struct.table_elt* %58, %struct.table_elt** %prev_same_hash68, align 8, !dbg !10882
  br label %if.end69, !dbg !10880

if.end69:                                         ; preds = %if.then65, %if.end57
  %61 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !10883
  %62 = load i32, i32* %hash, align 4, !dbg !10884
  %idxprom70 = zext i32 %62 to i64, !dbg !10885
  %arrayidx71 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom70, !dbg !10885
  store %struct.table_elt* %61, %struct.table_elt** %arrayidx71, align 8, !dbg !10886
  br label %if.end72, !dbg !10887

if.end72:                                         ; preds = %if.end69, %cond.end, %land.lhs.true, %for.body18
  br label %for.inc, !dbg !10888

for.inc:                                          ; preds = %if.end72
  %63 = load %struct.table_elt*, %struct.table_elt** %next, align 8, !dbg !10889
  store %struct.table_elt* %63, %struct.table_elt** %p, align 8, !dbg !10890
  br label %for.cond17, !dbg !10891, !llvm.loop !10892

for.end:                                          ; preds = %for.cond17
  br label %for.inc73, !dbg !10893

for.inc73:                                        ; preds = %for.end
  %64 = load i32, i32* %i, align 4, !dbg !10894
  %inc = add i32 %64, 1, !dbg !10894
  store i32 %inc, i32* %i, align 4, !dbg !10894
  br label %for.cond, !dbg !10895, !llvm.loop !10896

for.end74:                                        ; preds = %if.then13, %for.cond
  ret void, !dbg !10898
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.table_elt* @insert(%struct.rtx_def* %x, %struct.table_elt* %classp, i32 %hash, i32 %mode) #0 !dbg !10899 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %classp.addr = alloca %struct.table_elt*, align 8
  %hash.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !10902, metadata !DIExpression()), !dbg !10903
  store %struct.table_elt* %classp, %struct.table_elt** %classp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.table_elt** %classp.addr, metadata !10904, metadata !DIExpression()), !dbg !10905
  store i32 %hash, i32* %hash.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hash.addr, metadata !10906, metadata !DIExpression()), !dbg !10907
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !10908, metadata !DIExpression()), !dbg !10909
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10910
  %1 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8, !dbg !10911
  %2 = load i32, i32* %hash.addr, align 4, !dbg !10912
  %3 = load i32, i32* %mode.addr, align 4, !dbg !10913
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10914
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !10914
  %bf.load = load i32, i32* %5, align 8, !dbg !10914
  %bf.clear = and i32 %bf.load, 65535, !dbg !10914
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !10914
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10914

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !10914

cond.false:                                       ; preds = %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10914
  %call = call i32 @notreg_cost(%struct.rtx_def* %6, i32 23), !dbg !10914
  br label %cond.end, !dbg !10914

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call, %cond.false ], !dbg !10914
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10915
  %call1 = call i32 @approx_reg_cost(%struct.rtx_def* %7), !dbg !10916
  %call2 = call %struct.table_elt* @insert_with_costs(%struct.rtx_def* %0, %struct.table_elt* %1, i32 %2, i32 %3, i32 %cond, i32 %call1), !dbg !10917
  ret %struct.table_elt* %call2, !dbg !10918
}

; Function Attrs: noinline nounwind uwtable
define internal void @invalidate_from_clobbers(%struct.rtx_def* %x) #0 !dbg !10919 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %ref = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %y = alloca %struct.rtx_def*, align 8
  %ref47 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !10920, metadata !DIExpression()), !dbg !10921
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10922
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !10922
  %bf.load = load i32, i32* %1, align 8, !dbg !10922
  %bf.clear = and i32 %bf.load, 65535, !dbg !10922
  %cmp = icmp eq i32 %bf.clear, 25, !dbg !10924
  br i1 %cmp, label %if.then, label %if.else29, !dbg !10925

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %ref, metadata !10926, metadata !DIExpression()), !dbg !10928
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10929
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !10929
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !10929
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !10929
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !10929
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !10929
  store %struct.rtx_def* %3, %struct.rtx_def** %ref, align 8, !dbg !10928
  %4 = load %struct.rtx_def*, %struct.rtx_def** %ref, align 8, !dbg !10930
  %tobool = icmp ne %struct.rtx_def* %4, null, !dbg !10930
  br i1 %tobool, label %if.then1, label %if.end28, !dbg !10932

if.then1:                                         ; preds = %if.then
  %5 = load %struct.rtx_def*, %struct.rtx_def** %ref, align 8, !dbg !10933
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !10933
  %bf.load2 = load i32, i32* %6, align 8, !dbg !10933
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !10933
  %cmp4 = icmp eq i32 %bf.clear3, 37, !dbg !10933
  br i1 %cmp4, label %if.then12, label %lor.lhs.false, !dbg !10936

lor.lhs.false:                                    ; preds = %if.then1
  %7 = load %struct.rtx_def*, %struct.rtx_def** %ref, align 8, !dbg !10937
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !10937
  %bf.load5 = load i32, i32* %8, align 8, !dbg !10937
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !10937
  %cmp7 = icmp eq i32 %bf.clear6, 39, !dbg !10938
  br i1 %cmp7, label %if.then12, label %lor.lhs.false8, !dbg !10939

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %9 = load %struct.rtx_def*, %struct.rtx_def** %ref, align 8, !dbg !10940
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !10940
  %bf.load9 = load i32, i32* %10, align 8, !dbg !10940
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !10940
  %cmp11 = icmp eq i32 %bf.clear10, 43, !dbg !10940
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !10941

if.then12:                                        ; preds = %lor.lhs.false8, %lor.lhs.false, %if.then1
  %11 = load %struct.rtx_def*, %struct.rtx_def** %ref, align 8, !dbg !10942
  call void @invalidate(%struct.rtx_def* %11, i32 0), !dbg !10943
  br label %if.end27, !dbg !10943

if.else:                                          ; preds = %lor.lhs.false8
  %12 = load %struct.rtx_def*, %struct.rtx_def** %ref, align 8, !dbg !10944
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !10944
  %bf.load13 = load i32, i32* %13, align 8, !dbg !10944
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !10944
  %cmp15 = icmp eq i32 %bf.clear14, 40, !dbg !10946
  br i1 %cmp15, label %if.then20, label %lor.lhs.false16, !dbg !10947

lor.lhs.false16:                                  ; preds = %if.else
  %14 = load %struct.rtx_def*, %struct.rtx_def** %ref, align 8, !dbg !10948
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !10948
  %bf.load17 = load i32, i32* %15, align 8, !dbg !10948
  %bf.clear18 = and i32 %bf.load17, 65535, !dbg !10948
  %cmp19 = icmp eq i32 %bf.clear18, 120, !dbg !10949
  br i1 %cmp19, label %if.then20, label %if.end, !dbg !10950

if.then20:                                        ; preds = %lor.lhs.false16, %if.else
  %16 = load %struct.rtx_def*, %struct.rtx_def** %ref, align 8, !dbg !10951
  %u21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !10951
  %fld22 = bitcast %union.u* %u21 to [1 x %union.rtunion_def]*, !dbg !10951
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i64 0, i64 0, !dbg !10951
  %rt_rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**, !dbg !10951
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx24, align 8, !dbg !10951
  %18 = load %struct.rtx_def*, %struct.rtx_def** %ref, align 8, !dbg !10952
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !10952
  %bf.load25 = load i32, i32* %19, align 8, !dbg !10952
  %bf.lshr = lshr i32 %bf.load25, 16, !dbg !10952
  %bf.clear26 = and i32 %bf.lshr, 255, !dbg !10952
  call void @invalidate(%struct.rtx_def* %17, i32 %bf.clear26), !dbg !10953
  br label %if.end, !dbg !10953

if.end:                                           ; preds = %if.then20, %lor.lhs.false16
  br label %if.end27

if.end27:                                         ; preds = %if.end, %if.then12
  br label %if.end28, !dbg !10954

if.end28:                                         ; preds = %if.end27, %if.then
  br label %if.end84, !dbg !10955

if.else29:                                        ; preds = %entry
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10956
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !10956
  %bf.load30 = load i32, i32* %21, align 8, !dbg !10956
  %bf.clear31 = and i32 %bf.load30, 65535, !dbg !10956
  %cmp32 = icmp eq i32 %bf.clear31, 15, !dbg !10958
  br i1 %cmp32, label %if.then33, label %if.end83, !dbg !10959

if.then33:                                        ; preds = %if.else29
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10960, metadata !DIExpression()), !dbg !10962
  %22 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10963
  %u34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !10963
  %fld35 = bitcast %union.u* %u34 to [1 x %union.rtunion_def]*, !dbg !10963
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i64 0, i64 0, !dbg !10963
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtvec_def**, !dbg !10963
  %23 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !10963
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %23, i32 0, i32 0, !dbg !10963
  %24 = load i32, i32* %num_elem, align 8, !dbg !10963
  %sub = sub nsw i32 %24, 1, !dbg !10965
  store i32 %sub, i32* %i, align 4, !dbg !10966
  br label %for.cond, !dbg !10967

for.cond:                                         ; preds = %for.inc, %if.then33
  %25 = load i32, i32* %i, align 4, !dbg !10968
  %cmp37 = icmp sge i32 %25, 0, !dbg !10970
  br i1 %cmp37, label %for.body, label %for.end, !dbg !10971

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %y, metadata !10972, metadata !DIExpression()), !dbg !10974
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !10975
  %u38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !10975
  %fld39 = bitcast %union.u* %u38 to [1 x %union.rtunion_def]*, !dbg !10975
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i64 0, i64 0, !dbg !10975
  %rt_rtvec41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtvec_def**, !dbg !10975
  %27 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec41, align 8, !dbg !10975
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %27, i32 0, i32 1, !dbg !10975
  %28 = load i32, i32* %i, align 4, !dbg !10975
  %idxprom = sext i32 %28 to i64, !dbg !10975
  %arrayidx42 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !10975
  %29 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx42, align 8, !dbg !10975
  store %struct.rtx_def* %29, %struct.rtx_def** %y, align 8, !dbg !10974
  %30 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8, !dbg !10976
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !10976
  %bf.load43 = load i32, i32* %31, align 8, !dbg !10976
  %bf.clear44 = and i32 %bf.load43, 65535, !dbg !10976
  %cmp45 = icmp eq i32 %bf.clear44, 25, !dbg !10978
  br i1 %cmp45, label %if.then46, label %if.end82, !dbg !10979

if.then46:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %ref47, metadata !10980, metadata !DIExpression()), !dbg !10982
  %32 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8, !dbg !10983
  %u48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !10983
  %fld49 = bitcast %union.u* %u48 to [1 x %union.rtunion_def]*, !dbg !10983
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i64 0, i64 0, !dbg !10983
  %rt_rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**, !dbg !10983
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx51, align 8, !dbg !10983
  store %struct.rtx_def* %33, %struct.rtx_def** %ref47, align 8, !dbg !10982
  %34 = load %struct.rtx_def*, %struct.rtx_def** %ref47, align 8, !dbg !10984
  %35 = bitcast %struct.rtx_def* %34 to i32*, !dbg !10984
  %bf.load52 = load i32, i32* %35, align 8, !dbg !10984
  %bf.clear53 = and i32 %bf.load52, 65535, !dbg !10984
  %cmp54 = icmp eq i32 %bf.clear53, 37, !dbg !10984
  br i1 %cmp54, label %if.then63, label %lor.lhs.false55, !dbg !10986

lor.lhs.false55:                                  ; preds = %if.then46
  %36 = load %struct.rtx_def*, %struct.rtx_def** %ref47, align 8, !dbg !10987
  %37 = bitcast %struct.rtx_def* %36 to i32*, !dbg !10987
  %bf.load56 = load i32, i32* %37, align 8, !dbg !10987
  %bf.clear57 = and i32 %bf.load56, 65535, !dbg !10987
  %cmp58 = icmp eq i32 %bf.clear57, 39, !dbg !10988
  br i1 %cmp58, label %if.then63, label %lor.lhs.false59, !dbg !10989

lor.lhs.false59:                                  ; preds = %lor.lhs.false55
  %38 = load %struct.rtx_def*, %struct.rtx_def** %ref47, align 8, !dbg !10990
  %39 = bitcast %struct.rtx_def* %38 to i32*, !dbg !10990
  %bf.load60 = load i32, i32* %39, align 8, !dbg !10990
  %bf.clear61 = and i32 %bf.load60, 65535, !dbg !10990
  %cmp62 = icmp eq i32 %bf.clear61, 43, !dbg !10990
  br i1 %cmp62, label %if.then63, label %if.else64, !dbg !10991

if.then63:                                        ; preds = %lor.lhs.false59, %lor.lhs.false55, %if.then46
  %40 = load %struct.rtx_def*, %struct.rtx_def** %ref47, align 8, !dbg !10992
  call void @invalidate(%struct.rtx_def* %40, i32 0), !dbg !10993
  br label %if.end81, !dbg !10993

if.else64:                                        ; preds = %lor.lhs.false59
  %41 = load %struct.rtx_def*, %struct.rtx_def** %ref47, align 8, !dbg !10994
  %42 = bitcast %struct.rtx_def* %41 to i32*, !dbg !10994
  %bf.load65 = load i32, i32* %42, align 8, !dbg !10994
  %bf.clear66 = and i32 %bf.load65, 65535, !dbg !10994
  %cmp67 = icmp eq i32 %bf.clear66, 40, !dbg !10996
  br i1 %cmp67, label %if.then72, label %lor.lhs.false68, !dbg !10997

lor.lhs.false68:                                  ; preds = %if.else64
  %43 = load %struct.rtx_def*, %struct.rtx_def** %ref47, align 8, !dbg !10998
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !10998
  %bf.load69 = load i32, i32* %44, align 8, !dbg !10998
  %bf.clear70 = and i32 %bf.load69, 65535, !dbg !10998
  %cmp71 = icmp eq i32 %bf.clear70, 120, !dbg !10999
  br i1 %cmp71, label %if.then72, label %if.end80, !dbg !11000

if.then72:                                        ; preds = %lor.lhs.false68, %if.else64
  %45 = load %struct.rtx_def*, %struct.rtx_def** %ref47, align 8, !dbg !11001
  %u73 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !11001
  %fld74 = bitcast %union.u* %u73 to [1 x %union.rtunion_def]*, !dbg !11001
  %arrayidx75 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld74, i64 0, i64 0, !dbg !11001
  %rt_rtx76 = bitcast %union.rtunion_def* %arrayidx75 to %struct.rtx_def**, !dbg !11001
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx76, align 8, !dbg !11001
  %47 = load %struct.rtx_def*, %struct.rtx_def** %ref47, align 8, !dbg !11002
  %48 = bitcast %struct.rtx_def* %47 to i32*, !dbg !11002
  %bf.load77 = load i32, i32* %48, align 8, !dbg !11002
  %bf.lshr78 = lshr i32 %bf.load77, 16, !dbg !11002
  %bf.clear79 = and i32 %bf.lshr78, 255, !dbg !11002
  call void @invalidate(%struct.rtx_def* %46, i32 %bf.clear79), !dbg !11003
  br label %if.end80, !dbg !11003

if.end80:                                         ; preds = %if.then72, %lor.lhs.false68
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.then63
  br label %if.end82, !dbg !11004

if.end82:                                         ; preds = %if.end81, %for.body
  br label %for.inc, !dbg !11005

for.inc:                                          ; preds = %if.end82
  %49 = load i32, i32* %i, align 4, !dbg !11006
  %dec = add nsw i32 %49, -1, !dbg !11006
  store i32 %dec, i32* %i, align 4, !dbg !11006
  br label %for.cond, !dbg !11007, !llvm.loop !11008

for.end:                                          ; preds = %for.cond
  br label %if.end83, !dbg !11010

if.end83:                                         ; preds = %for.end, %if.else29
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.end28
  ret void, !dbg !11011
}

; Function Attrs: noinline nounwind uwtable
define internal void @invalidate_memory() #0 !dbg !11012 {
entry:
  %i = alloca i32, align 4
  %p = alloca %struct.table_elt*, align 8
  %next = alloca %struct.table_elt*, align 8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11013, metadata !DIExpression()), !dbg !11014
  call void @llvm.dbg.declare(metadata %struct.table_elt** %p, metadata !11015, metadata !DIExpression()), !dbg !11016
  call void @llvm.dbg.declare(metadata %struct.table_elt** %next, metadata !11017, metadata !DIExpression()), !dbg !11018
  store i32 0, i32* %i, align 4, !dbg !11019
  br label %for.cond, !dbg !11021

for.cond:                                         ; preds = %for.inc4, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11022
  %cmp = icmp slt i32 %0, 32, !dbg !11024
  br i1 %cmp, label %for.body, label %for.end5, !dbg !11025

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !11026
  %idxprom = sext i32 %1 to i64, !dbg !11028
  %arrayidx = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom, !dbg !11028
  %2 = load %struct.table_elt*, %struct.table_elt** %arrayidx, align 8, !dbg !11028
  store %struct.table_elt* %2, %struct.table_elt** %p, align 8, !dbg !11029
  br label %for.cond1, !dbg !11030

for.cond1:                                        ; preds = %for.inc, %for.body
  %3 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11031
  %tobool = icmp ne %struct.table_elt* %3, null, !dbg !11033
  br i1 %tobool, label %for.body2, label %for.end, !dbg !11033

for.body2:                                        ; preds = %for.cond1
  %4 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11034
  %next_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %4, i32 0, i32 2, !dbg !11036
  %5 = load %struct.table_elt*, %struct.table_elt** %next_same_hash, align 8, !dbg !11036
  store %struct.table_elt* %5, %struct.table_elt** %next, align 8, !dbg !11037
  %6 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11038
  %in_memory = getelementptr inbounds %struct.table_elt, %struct.table_elt* %6, i32 0, i32 11, !dbg !11040
  %7 = load i8, i8* %in_memory, align 1, !dbg !11040
  %tobool3 = icmp ne i8 %7, 0, !dbg !11038
  br i1 %tobool3, label %if.then, label %if.end, !dbg !11041

if.then:                                          ; preds = %for.body2
  %8 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11042
  %9 = load i32, i32* %i, align 4, !dbg !11043
  call void @remove_from_table(%struct.table_elt* %8, i32 %9), !dbg !11044
  br label %if.end, !dbg !11044

if.end:                                           ; preds = %if.then, %for.body2
  br label %for.inc, !dbg !11045

for.inc:                                          ; preds = %if.end
  %10 = load %struct.table_elt*, %struct.table_elt** %next, align 8, !dbg !11046
  store %struct.table_elt* %10, %struct.table_elt** %p, align 8, !dbg !11047
  br label %for.cond1, !dbg !11048, !llvm.loop !11049

for.end:                                          ; preds = %for.cond1
  br label %for.inc4, !dbg !11050

for.inc4:                                         ; preds = %for.end
  %11 = load i32, i32* %i, align 4, !dbg !11051
  %inc = add nsw i32 %11, 1, !dbg !11051
  store i32 %inc, i32* %i, align 4, !dbg !11051
  br label %for.cond, !dbg !11052, !llvm.loop !11053

for.end5:                                         ; preds = %for.cond
  ret void, !dbg !11055
}

; Function Attrs: noinline nounwind uwtable
define internal void @invalidate_for_call() #0 !dbg !11056 {
entry:
  %regno = alloca i32, align 4
  %endregno = alloca i32, align 4
  %i = alloca i32, align 4
  %hash = alloca i32, align 4
  %p = alloca %struct.table_elt*, align 8
  %next = alloca %struct.table_elt*, align 8
  %in_table = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !11057, metadata !DIExpression()), !dbg !11058
  call void @llvm.dbg.declare(metadata i32* %endregno, metadata !11059, metadata !DIExpression()), !dbg !11060
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11061, metadata !DIExpression()), !dbg !11062
  call void @llvm.dbg.declare(metadata i32* %hash, metadata !11063, metadata !DIExpression()), !dbg !11064
  call void @llvm.dbg.declare(metadata %struct.table_elt** %p, metadata !11065, metadata !DIExpression()), !dbg !11066
  call void @llvm.dbg.declare(metadata %struct.table_elt** %next, metadata !11067, metadata !DIExpression()), !dbg !11068
  call void @llvm.dbg.declare(metadata i32* %in_table, metadata !11069, metadata !DIExpression()), !dbg !11070
  store i32 0, i32* %in_table, align 4, !dbg !11070
  store i32 0, i32* %regno, align 4, !dbg !11071
  br label %for.cond, !dbg !11073

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %regno, align 4, !dbg !11074
  %cmp = icmp ult i32 %0, 53, !dbg !11076
  br i1 %cmp, label %for.body, label %for.end, !dbg !11077

for.body:                                         ; preds = %for.cond
  %1 = load i64, i64* @regs_invalidated_by_call, align 8, !dbg !11078
  %2 = load i32, i32* %regno, align 4, !dbg !11078
  %sh_prom = zext i32 %2 to i64, !dbg !11078
  %shl = shl i64 1, %sh_prom, !dbg !11078
  %and = and i64 %1, %shl, !dbg !11078
  %tobool = icmp ne i64 %and, 0, !dbg !11078
  br i1 %tobool, label %if.then, label %if.end12, !dbg !11080

if.then:                                          ; preds = %for.body
  %3 = load i32, i32* %regno, align 4, !dbg !11081
  call void @delete_reg_equiv(i32 %3), !dbg !11083
  %4 = load i32, i32* %regno, align 4, !dbg !11084
  %call = call %struct.cse_reg_info* @get_cse_reg_info(i32 %4), !dbg !11084
  %reg_tick = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call, i32 0, i32 2, !dbg !11084
  %5 = load i32, i32* %reg_tick, align 4, !dbg !11084
  %cmp1 = icmp sge i32 %5, 0, !dbg !11086
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !11087

if.then2:                                         ; preds = %if.then
  %6 = load i32, i32* %regno, align 4, !dbg !11088
  %call3 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %6), !dbg !11088
  %reg_tick4 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call3, i32 0, i32 2, !dbg !11088
  %7 = load i32, i32* %reg_tick4, align 4, !dbg !11090
  %inc = add nsw i32 %7, 1, !dbg !11090
  store i32 %inc, i32* %reg_tick4, align 4, !dbg !11090
  %8 = load i32, i32* %regno, align 4, !dbg !11091
  %call5 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %8), !dbg !11091
  %subreg_ticked = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call5, i32 0, i32 4, !dbg !11091
  store i32 -1, i32* %subreg_ticked, align 4, !dbg !11092
  br label %if.end, !dbg !11093

if.end:                                           ; preds = %if.then2, %if.then
  %9 = load i64, i64* @hard_regs_in_table, align 8, !dbg !11094
  %10 = load i32, i32* %regno, align 4, !dbg !11094
  %sh_prom6 = zext i32 %10 to i64, !dbg !11094
  %shl7 = shl i64 1, %sh_prom6, !dbg !11094
  %and8 = and i64 %9, %shl7, !dbg !11094
  %tobool9 = icmp ne i64 %and8, 0, !dbg !11094
  %lnot = xor i1 %tobool9, true, !dbg !11094
  %lnot10 = xor i1 %lnot, true, !dbg !11094
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !11094
  %cmp11 = icmp ne i32 %lnot.ext, 0, !dbg !11095
  %conv = zext i1 %cmp11 to i32, !dbg !11095
  %11 = load i32, i32* %in_table, align 4, !dbg !11096
  %or = or i32 %11, %conv, !dbg !11096
  store i32 %or, i32* %in_table, align 4, !dbg !11096
  br label %if.end12, !dbg !11097

if.end12:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !11078

for.inc:                                          ; preds = %if.end12
  %12 = load i32, i32* %regno, align 4, !dbg !11098
  %inc13 = add i32 %12, 1, !dbg !11098
  store i32 %inc13, i32* %regno, align 4, !dbg !11098
  br label %for.cond, !dbg !11099, !llvm.loop !11100

for.end:                                          ; preds = %for.cond
  %13 = load i32, i32* %in_table, align 4, !dbg !11102
  %tobool14 = icmp ne i32 %13, 0, !dbg !11102
  br i1 %tobool14, label %if.then15, label %if.end57, !dbg !11104

if.then15:                                        ; preds = %for.end
  store i32 0, i32* %hash, align 4, !dbg !11105
  br label %for.cond16, !dbg !11107

for.cond16:                                       ; preds = %for.inc54, %if.then15
  %14 = load i32, i32* %hash, align 4, !dbg !11108
  %cmp17 = icmp ult i32 %14, 32, !dbg !11110
  br i1 %cmp17, label %for.body19, label %for.end56, !dbg !11111

for.body19:                                       ; preds = %for.cond16
  %15 = load i32, i32* %hash, align 4, !dbg !11112
  %idxprom = zext i32 %15 to i64, !dbg !11114
  %arrayidx = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom, !dbg !11114
  %16 = load %struct.table_elt*, %struct.table_elt** %arrayidx, align 8, !dbg !11114
  store %struct.table_elt* %16, %struct.table_elt** %p, align 8, !dbg !11115
  br label %for.cond20, !dbg !11116

for.cond20:                                       ; preds = %for.inc52, %for.body19
  %17 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11117
  %tobool21 = icmp ne %struct.table_elt* %17, null, !dbg !11119
  br i1 %tobool21, label %for.body22, label %for.end53, !dbg !11119

for.body22:                                       ; preds = %for.cond20
  %18 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11120
  %next_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %18, i32 0, i32 2, !dbg !11122
  %19 = load %struct.table_elt*, %struct.table_elt** %next_same_hash, align 8, !dbg !11122
  store %struct.table_elt* %19, %struct.table_elt** %next, align 8, !dbg !11123
  %20 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11124
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %20, i32 0, i32 0, !dbg !11124
  %21 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !11124
  %22 = bitcast %struct.rtx_def* %21 to i32*, !dbg !11124
  %bf.load = load i32, i32* %22, align 8, !dbg !11124
  %bf.clear = and i32 %bf.load, 65535, !dbg !11124
  %cmp23 = icmp eq i32 %bf.clear, 37, !dbg !11124
  br i1 %cmp23, label %lor.lhs.false, label %if.then29, !dbg !11126

lor.lhs.false:                                    ; preds = %for.body22
  %23 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11127
  %exp25 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %23, i32 0, i32 0, !dbg !11127
  %24 = load %struct.rtx_def*, %struct.rtx_def** %exp25, align 8, !dbg !11127
  %call26 = call i32 @rhs_regno(%struct.rtx_def* %24), !dbg !11127
  %cmp27 = icmp uge i32 %call26, 53, !dbg !11128
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !11129

if.then29:                                        ; preds = %lor.lhs.false, %for.body22
  br label %for.inc52, !dbg !11130

if.end30:                                         ; preds = %lor.lhs.false
  %25 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11131
  %exp31 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %25, i32 0, i32 0, !dbg !11131
  %26 = load %struct.rtx_def*, %struct.rtx_def** %exp31, align 8, !dbg !11131
  %call32 = call i32 @rhs_regno(%struct.rtx_def* %26), !dbg !11131
  store i32 %call32, i32* %regno, align 4, !dbg !11132
  %27 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11133
  %exp33 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %27, i32 0, i32 0, !dbg !11133
  %28 = load %struct.rtx_def*, %struct.rtx_def** %exp33, align 8, !dbg !11133
  %29 = bitcast %struct.rtx_def* %28 to i32*, !dbg !11133
  %bf.load34 = load i32, i32* %29, align 8, !dbg !11133
  %bf.lshr = lshr i32 %bf.load34, 16, !dbg !11133
  %bf.clear35 = and i32 %bf.lshr, 255, !dbg !11133
  %30 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11133
  %exp36 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %30, i32 0, i32 0, !dbg !11133
  %31 = load %struct.rtx_def*, %struct.rtx_def** %exp36, align 8, !dbg !11133
  %call37 = call i32 @rhs_regno(%struct.rtx_def* %31), !dbg !11133
  %call38 = call i32 @end_hard_regno(i32 %bf.clear35, i32 %call37), !dbg !11133
  store i32 %call38, i32* %endregno, align 4, !dbg !11134
  %32 = load i32, i32* %regno, align 4, !dbg !11135
  store i32 %32, i32* %i, align 4, !dbg !11137
  br label %for.cond39, !dbg !11138

for.cond39:                                       ; preds = %for.inc49, %if.end30
  %33 = load i32, i32* %i, align 4, !dbg !11139
  %34 = load i32, i32* %endregno, align 4, !dbg !11141
  %cmp40 = icmp ult i32 %33, %34, !dbg !11142
  br i1 %cmp40, label %for.body42, label %for.end51, !dbg !11143

for.body42:                                       ; preds = %for.cond39
  %35 = load i64, i64* @regs_invalidated_by_call, align 8, !dbg !11144
  %36 = load i32, i32* %i, align 4, !dbg !11144
  %sh_prom43 = zext i32 %36 to i64, !dbg !11144
  %shl44 = shl i64 1, %sh_prom43, !dbg !11144
  %and45 = and i64 %35, %shl44, !dbg !11144
  %tobool46 = icmp ne i64 %and45, 0, !dbg !11144
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !11146

if.then47:                                        ; preds = %for.body42
  %37 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11147
  %38 = load i32, i32* %hash, align 4, !dbg !11149
  call void @remove_from_table(%struct.table_elt* %37, i32 %38), !dbg !11150
  br label %for.end51, !dbg !11151

if.end48:                                         ; preds = %for.body42
  br label %for.inc49, !dbg !11144

for.inc49:                                        ; preds = %if.end48
  %39 = load i32, i32* %i, align 4, !dbg !11152
  %inc50 = add i32 %39, 1, !dbg !11152
  store i32 %inc50, i32* %i, align 4, !dbg !11152
  br label %for.cond39, !dbg !11153, !llvm.loop !11154

for.end51:                                        ; preds = %if.then47, %for.cond39
  br label %for.inc52, !dbg !11156

for.inc52:                                        ; preds = %for.end51, %if.then29
  %40 = load %struct.table_elt*, %struct.table_elt** %next, align 8, !dbg !11157
  store %struct.table_elt* %40, %struct.table_elt** %p, align 8, !dbg !11158
  br label %for.cond20, !dbg !11159, !llvm.loop !11160

for.end53:                                        ; preds = %for.cond20
  br label %for.inc54, !dbg !11161

for.inc54:                                        ; preds = %for.end53
  %41 = load i32, i32* %hash, align 4, !dbg !11162
  %inc55 = add i32 %41, 1, !dbg !11162
  store i32 %inc55, i32* %hash, align 4, !dbg !11162
  br label %for.cond16, !dbg !11163, !llvm.loop !11164

for.end56:                                        ; preds = %for.cond16
  br label %if.end57, !dbg !11165

if.end57:                                         ; preds = %for.end56, %for.end
  ret void, !dbg !11166
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @mention_regs(%struct.rtx_def* %x) #0 !dbg !11167 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %changed = alloca i32, align 4
  %regno = alloca i32, align 4
  %endregno = alloca i32, align 4
  %i10 = alloca i32, align 4
  %i39 = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !11168, metadata !DIExpression()), !dbg !11169
  call void @llvm.dbg.declare(metadata i32* %code, metadata !11170, metadata !DIExpression()), !dbg !11171
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11172, metadata !DIExpression()), !dbg !11173
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11174, metadata !DIExpression()), !dbg !11175
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !11176, metadata !DIExpression()), !dbg !11177
  call void @llvm.dbg.declare(metadata i32* %changed, metadata !11178, metadata !DIExpression()), !dbg !11179
  store i32 0, i32* %changed, align 4, !dbg !11179
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11180
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !11182
  br i1 %cmp, label %if.then, label %if.end, !dbg !11183

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11184
  br label %return, !dbg !11184

if.end:                                           ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11185
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !11185
  %bf.load = load i32, i32* %2, align 8, !dbg !11185
  %bf.clear = and i32 %bf.load, 65535, !dbg !11185
  store i32 %bf.clear, i32* %code, align 4, !dbg !11186
  %3 = load i32, i32* %code, align 4, !dbg !11187
  %cmp1 = icmp eq i32 %3, 37, !dbg !11189
  br i1 %cmp1, label %if.then2, label %if.end25, !dbg !11190

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !11191, metadata !DIExpression()), !dbg !11193
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11194
  %call = call i32 @rhs_regno(%struct.rtx_def* %4), !dbg !11194
  store i32 %call, i32* %regno, align 4, !dbg !11193
  call void @llvm.dbg.declare(metadata i32* %endregno, metadata !11195, metadata !DIExpression()), !dbg !11196
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11197
  %call3 = call i32 @rhs_regno(%struct.rtx_def* %5), !dbg !11197
  %cmp4 = icmp ult i32 %call3, 53, !dbg !11197
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !11197

cond.true:                                        ; preds = %if.then2
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11197
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !11197
  %bf.load5 = load i32, i32* %7, align 8, !dbg !11197
  %bf.lshr = lshr i32 %bf.load5, 16, !dbg !11197
  %bf.clear6 = and i32 %bf.lshr, 255, !dbg !11197
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11197
  %call7 = call i32 @rhs_regno(%struct.rtx_def* %8), !dbg !11197
  %call8 = call i32 @end_hard_regno(i32 %bf.clear6, i32 %call7), !dbg !11197
  br label %cond.end, !dbg !11197

cond.false:                                       ; preds = %if.then2
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11197
  %call9 = call i32 @rhs_regno(%struct.rtx_def* %9), !dbg !11197
  %add = add i32 %call9, 1, !dbg !11197
  br label %cond.end, !dbg !11197

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call8, %cond.true ], [ %add, %cond.false ], !dbg !11197
  store i32 %cond, i32* %endregno, align 4, !dbg !11196
  call void @llvm.dbg.declare(metadata i32* %i10, metadata !11198, metadata !DIExpression()), !dbg !11199
  %10 = load i32, i32* %regno, align 4, !dbg !11200
  store i32 %10, i32* %i10, align 4, !dbg !11202
  br label %for.cond, !dbg !11203

for.cond:                                         ; preds = %for.inc, %cond.end
  %11 = load i32, i32* %i10, align 4, !dbg !11204
  %12 = load i32, i32* %endregno, align 4, !dbg !11206
  %cmp11 = icmp ult i32 %11, %12, !dbg !11207
  br i1 %cmp11, label %for.body, label %for.end, !dbg !11208

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i10, align 4, !dbg !11209
  %call12 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %13), !dbg !11209
  %reg_in_table = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call12, i32 0, i32 3, !dbg !11209
  %14 = load i32, i32* %reg_in_table, align 4, !dbg !11209
  %cmp13 = icmp sge i32 %14, 0, !dbg !11212
  br i1 %cmp13, label %land.lhs.true, label %if.end19, !dbg !11213

land.lhs.true:                                    ; preds = %for.body
  %15 = load i32, i32* %i10, align 4, !dbg !11214
  %call14 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %15), !dbg !11214
  %reg_in_table15 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call14, i32 0, i32 3, !dbg !11214
  %16 = load i32, i32* %reg_in_table15, align 4, !dbg !11214
  %17 = load i32, i32* %i10, align 4, !dbg !11215
  %call16 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %17), !dbg !11215
  %reg_tick = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call16, i32 0, i32 2, !dbg !11215
  %18 = load i32, i32* %reg_tick, align 4, !dbg !11215
  %cmp17 = icmp ne i32 %16, %18, !dbg !11216
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !11217

if.then18:                                        ; preds = %land.lhs.true
  %19 = load i32, i32* %i10, align 4, !dbg !11218
  call void @remove_invalid_refs(i32 %19), !dbg !11219
  br label %if.end19, !dbg !11219

if.end19:                                         ; preds = %if.then18, %land.lhs.true, %for.body
  %20 = load i32, i32* %i10, align 4, !dbg !11220
  %call20 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %20), !dbg !11220
  %reg_tick21 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call20, i32 0, i32 2, !dbg !11220
  %21 = load i32, i32* %reg_tick21, align 4, !dbg !11220
  %22 = load i32, i32* %i10, align 4, !dbg !11221
  %call22 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %22), !dbg !11221
  %reg_in_table23 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call22, i32 0, i32 3, !dbg !11221
  store i32 %21, i32* %reg_in_table23, align 4, !dbg !11222
  %23 = load i32, i32* %i10, align 4, !dbg !11223
  %call24 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %23), !dbg !11223
  %subreg_ticked = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call24, i32 0, i32 4, !dbg !11223
  store i32 -1, i32* %subreg_ticked, align 4, !dbg !11224
  br label %for.inc, !dbg !11225

for.inc:                                          ; preds = %if.end19
  %24 = load i32, i32* %i10, align 4, !dbg !11226
  %inc = add i32 %24, 1, !dbg !11226
  store i32 %inc, i32* %i10, align 4, !dbg !11226
  br label %for.cond, !dbg !11227, !llvm.loop !11228

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !11230
  br label %return, !dbg !11230

if.end25:                                         ; preds = %if.end
  %25 = load i32, i32* %code, align 4, !dbg !11231
  %cmp26 = icmp eq i32 %25, 39, !dbg !11233
  br i1 %cmp26, label %land.lhs.true27, label %if.end88, !dbg !11234

land.lhs.true27:                                  ; preds = %if.end25
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11235
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !11235
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !11235
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !11235
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !11235
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !11235
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !11235
  %bf.load28 = load i32, i32* %28, align 8, !dbg !11235
  %bf.clear29 = and i32 %bf.load28, 65535, !dbg !11235
  %cmp30 = icmp eq i32 %bf.clear29, 37, !dbg !11235
  br i1 %cmp30, label %land.lhs.true31, label %if.end88, !dbg !11236

land.lhs.true31:                                  ; preds = %land.lhs.true27
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11237
  %u32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !11237
  %fld33 = bitcast %union.u* %u32 to [1 x %union.rtunion_def]*, !dbg !11237
  %arrayidx34 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld33, i64 0, i64 0, !dbg !11237
  %rt_rtx35 = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtx_def**, !dbg !11237
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx35, align 8, !dbg !11237
  %call36 = call i32 @rhs_regno(%struct.rtx_def* %30), !dbg !11237
  %cmp37 = icmp uge i32 %call36, 53, !dbg !11238
  br i1 %cmp37, label %if.then38, label %if.end88, !dbg !11239

if.then38:                                        ; preds = %land.lhs.true31
  call void @llvm.dbg.declare(metadata i32* %i39, metadata !11240, metadata !DIExpression()), !dbg !11242
  %31 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11243
  %u40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !11243
  %fld41 = bitcast %union.u* %u40 to [1 x %union.rtunion_def]*, !dbg !11243
  %arrayidx42 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld41, i64 0, i64 0, !dbg !11243
  %rt_rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**, !dbg !11243
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx43, align 8, !dbg !11243
  %call44 = call i32 @rhs_regno(%struct.rtx_def* %32), !dbg !11243
  store i32 %call44, i32* %i39, align 4, !dbg !11242
  %33 = load i32, i32* %i39, align 4, !dbg !11244
  %call45 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %33), !dbg !11244
  %reg_in_table46 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call45, i32 0, i32 3, !dbg !11244
  %34 = load i32, i32* %reg_in_table46, align 4, !dbg !11244
  %cmp47 = icmp sge i32 %34, 0, !dbg !11246
  br i1 %cmp47, label %land.lhs.true48, label %if.end76, !dbg !11247

land.lhs.true48:                                  ; preds = %if.then38
  %35 = load i32, i32* %i39, align 4, !dbg !11248
  %call49 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %35), !dbg !11248
  %reg_in_table50 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call49, i32 0, i32 3, !dbg !11248
  %36 = load i32, i32* %reg_in_table50, align 4, !dbg !11248
  %37 = load i32, i32* %i39, align 4, !dbg !11249
  %call51 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %37), !dbg !11249
  %reg_tick52 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call51, i32 0, i32 2, !dbg !11249
  %38 = load i32, i32* %reg_tick52, align 4, !dbg !11249
  %cmp53 = icmp ne i32 %36, %38, !dbg !11250
  br i1 %cmp53, label %if.then54, label %if.end76, !dbg !11251

if.then54:                                        ; preds = %land.lhs.true48
  %39 = load i32, i32* %i39, align 4, !dbg !11252
  %call55 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %39), !dbg !11252
  %reg_tick56 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call55, i32 0, i32 2, !dbg !11252
  %40 = load i32, i32* %reg_tick56, align 4, !dbg !11252
  %41 = load i32, i32* %i39, align 4, !dbg !11255
  %call57 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %41), !dbg !11255
  %reg_in_table58 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call57, i32 0, i32 3, !dbg !11255
  %42 = load i32, i32* %reg_in_table58, align 4, !dbg !11255
  %sub = sub nsw i32 %40, %42, !dbg !11256
  %cmp59 = icmp sgt i32 %sub, 1, !dbg !11257
  br i1 %cmp59, label %if.then68, label %lor.lhs.false, !dbg !11258

lor.lhs.false:                                    ; preds = %if.then54
  %43 = load i32, i32* %i39, align 4, !dbg !11259
  %call60 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %43), !dbg !11259
  %subreg_ticked61 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call60, i32 0, i32 4, !dbg !11259
  %44 = load i32, i32* %subreg_ticked61, align 4, !dbg !11259
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11260
  %u62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !11260
  %fld63 = bitcast %union.u* %u62 to [1 x %union.rtunion_def]*, !dbg !11260
  %arrayidx64 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld63, i64 0, i64 0, !dbg !11260
  %rt_rtx65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.rtx_def**, !dbg !11260
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx65, align 8, !dbg !11260
  %call66 = call i32 @rhs_regno(%struct.rtx_def* %46), !dbg !11260
  %cmp67 = icmp ne i32 %44, %call66, !dbg !11261
  br i1 %cmp67, label %if.then68, label %if.else, !dbg !11262

if.then68:                                        ; preds = %lor.lhs.false, %if.then54
  %47 = load i32, i32* %i39, align 4, !dbg !11263
  call void @remove_invalid_refs(i32 %47), !dbg !11264
  br label %if.end75, !dbg !11264

if.else:                                          ; preds = %lor.lhs.false
  %48 = load i32, i32* %i39, align 4, !dbg !11265
  %49 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11266
  %u69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1, !dbg !11266
  %fld70 = bitcast %union.u* %u69 to [1 x %union.rtunion_def]*, !dbg !11266
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i64 0, i64 1, !dbg !11266
  %rt_uint = bitcast %union.rtunion_def* %arrayidx71 to i32*, !dbg !11266
  %50 = load i32, i32* %rt_uint, align 8, !dbg !11266
  %51 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11267
  %52 = bitcast %struct.rtx_def* %51 to i32*, !dbg !11267
  %bf.load72 = load i32, i32* %52, align 8, !dbg !11267
  %bf.lshr73 = lshr i32 %bf.load72, 16, !dbg !11267
  %bf.clear74 = and i32 %bf.lshr73, 255, !dbg !11267
  call void @remove_invalid_subreg_refs(i32 %48, i32 %50, i32 %bf.clear74), !dbg !11268
  br label %if.end75

if.end75:                                         ; preds = %if.else, %if.then68
  br label %if.end76, !dbg !11269

if.end76:                                         ; preds = %if.end75, %land.lhs.true48, %if.then38
  %53 = load i32, i32* %i39, align 4, !dbg !11270
  %call77 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %53), !dbg !11270
  %reg_tick78 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call77, i32 0, i32 2, !dbg !11270
  %54 = load i32, i32* %reg_tick78, align 4, !dbg !11270
  %55 = load i32, i32* %i39, align 4, !dbg !11271
  %call79 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %55), !dbg !11271
  %reg_in_table80 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call79, i32 0, i32 3, !dbg !11271
  store i32 %54, i32* %reg_in_table80, align 4, !dbg !11272
  %56 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11273
  %u81 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1, !dbg !11273
  %fld82 = bitcast %union.u* %u81 to [1 x %union.rtunion_def]*, !dbg !11273
  %arrayidx83 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld82, i64 0, i64 0, !dbg !11273
  %rt_rtx84 = bitcast %union.rtunion_def* %arrayidx83 to %struct.rtx_def**, !dbg !11273
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx84, align 8, !dbg !11273
  %call85 = call i32 @rhs_regno(%struct.rtx_def* %57), !dbg !11273
  %58 = load i32, i32* %i39, align 4, !dbg !11274
  %call86 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %58), !dbg !11274
  %subreg_ticked87 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call86, i32 0, i32 4, !dbg !11274
  store i32 %call85, i32* %subreg_ticked87, align 4, !dbg !11275
  store i32 0, i32* %retval, align 4, !dbg !11276
  br label %return, !dbg !11276

if.end88:                                         ; preds = %land.lhs.true31, %land.lhs.true27, %if.end25
  %59 = load i32, i32* %code, align 4, !dbg !11277
  %cmp89 = icmp eq i32 %59, 48, !dbg !11279
  br i1 %cmp89, label %if.then95, label %lor.lhs.false90, !dbg !11280

lor.lhs.false90:                                  ; preds = %if.end88
  %60 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11281
  %61 = bitcast %struct.rtx_def* %60 to i32*, !dbg !11281
  %bf.load91 = load i32, i32* %61, align 8, !dbg !11281
  %bf.clear92 = and i32 %bf.load91, 65535, !dbg !11281
  %idxprom = sext i32 %bf.clear92 to i64, !dbg !11281
  %arrayidx93 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !11281
  %62 = load i32, i32* %arrayidx93, align 4, !dbg !11281
  %and = and i32 %62, -2, !dbg !11281
  %cmp94 = icmp eq i32 %and, 0, !dbg !11281
  br i1 %cmp94, label %if.then95, label %if.end154, !dbg !11282

if.then95:                                        ; preds = %lor.lhs.false90, %if.end88
  %63 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11283
  %u96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1, !dbg !11283
  %fld97 = bitcast %union.u* %u96 to [1 x %union.rtunion_def]*, !dbg !11283
  %arrayidx98 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld97, i64 0, i64 0, !dbg !11283
  %rt_rtx99 = bitcast %union.rtunion_def* %arrayidx98 to %struct.rtx_def**, !dbg !11283
  %64 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx99, align 8, !dbg !11283
  %65 = bitcast %struct.rtx_def* %64 to i32*, !dbg !11283
  %bf.load100 = load i32, i32* %65, align 8, !dbg !11283
  %bf.clear101 = and i32 %bf.load100, 65535, !dbg !11283
  %cmp102 = icmp eq i32 %bf.clear101, 37, !dbg !11283
  br i1 %cmp102, label %land.lhs.true103, label %if.end123, !dbg !11286

land.lhs.true103:                                 ; preds = %if.then95
  %66 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11287
  %u104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1, !dbg !11287
  %fld105 = bitcast %union.u* %u104 to [1 x %union.rtunion_def]*, !dbg !11287
  %arrayidx106 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld105, i64 0, i64 0, !dbg !11287
  %rt_rtx107 = bitcast %union.rtunion_def* %arrayidx106 to %struct.rtx_def**, !dbg !11287
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx107, align 8, !dbg !11287
  %call108 = call i32 @rhs_regno(%struct.rtx_def* %67), !dbg !11287
  %call109 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call108), !dbg !11287
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call109, i32 0, i32 1, !dbg !11287
  %68 = load i32, i32* %reg_qty, align 4, !dbg !11287
  %cmp110 = icmp sge i32 %68, 0, !dbg !11287
  br i1 %cmp110, label %if.end123, label %if.then111, !dbg !11288

if.then111:                                       ; preds = %land.lhs.true103
  %69 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11289
  %u112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1, !dbg !11289
  %fld113 = bitcast %union.u* %u112 to [1 x %union.rtunion_def]*, !dbg !11289
  %arrayidx114 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld113, i64 0, i64 0, !dbg !11289
  %rt_rtx115 = bitcast %union.rtunion_def* %arrayidx114 to %struct.rtx_def**, !dbg !11289
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx115, align 8, !dbg !11289
  %call116 = call i32 @insert_regs(%struct.rtx_def* %70, %struct.table_elt* null, i32 0), !dbg !11291
  %tobool = icmp ne i32 %call116, 0, !dbg !11291
  br i1 %tobool, label %if.then117, label %if.end122, !dbg !11292

if.then117:                                       ; preds = %if.then111
  %71 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11293
  %u118 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1, !dbg !11293
  %fld119 = bitcast %union.u* %u118 to [1 x %union.rtunion_def]*, !dbg !11293
  %arrayidx120 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld119, i64 0, i64 0, !dbg !11293
  %rt_rtx121 = bitcast %union.rtunion_def* %arrayidx120 to %struct.rtx_def**, !dbg !11293
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx121, align 8, !dbg !11293
  call void @rehash_using_reg(%struct.rtx_def* %72), !dbg !11295
  store i32 1, i32* %changed, align 4, !dbg !11296
  br label %if.end122, !dbg !11297

if.end122:                                        ; preds = %if.then117, %if.then111
  br label %if.end123, !dbg !11298

if.end123:                                        ; preds = %if.end122, %land.lhs.true103, %if.then95
  %73 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11299
  %u124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1, !dbg !11299
  %fld125 = bitcast %union.u* %u124 to [1 x %union.rtunion_def]*, !dbg !11299
  %arrayidx126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i64 0, i64 1, !dbg !11299
  %rt_rtx127 = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtx_def**, !dbg !11299
  %74 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx127, align 8, !dbg !11299
  %75 = bitcast %struct.rtx_def* %74 to i32*, !dbg !11299
  %bf.load128 = load i32, i32* %75, align 8, !dbg !11299
  %bf.clear129 = and i32 %bf.load128, 65535, !dbg !11299
  %cmp130 = icmp eq i32 %bf.clear129, 37, !dbg !11299
  br i1 %cmp130, label %land.lhs.true131, label %if.end153, !dbg !11301

land.lhs.true131:                                 ; preds = %if.end123
  %76 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11302
  %u132 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1, !dbg !11302
  %fld133 = bitcast %union.u* %u132 to [1 x %union.rtunion_def]*, !dbg !11302
  %arrayidx134 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld133, i64 0, i64 1, !dbg !11302
  %rt_rtx135 = bitcast %union.rtunion_def* %arrayidx134 to %struct.rtx_def**, !dbg !11302
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx135, align 8, !dbg !11302
  %call136 = call i32 @rhs_regno(%struct.rtx_def* %77), !dbg !11302
  %call137 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call136), !dbg !11302
  %reg_qty138 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call137, i32 0, i32 1, !dbg !11302
  %78 = load i32, i32* %reg_qty138, align 4, !dbg !11302
  %cmp139 = icmp sge i32 %78, 0, !dbg !11302
  br i1 %cmp139, label %if.end153, label %if.then140, !dbg !11303

if.then140:                                       ; preds = %land.lhs.true131
  %79 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11304
  %u141 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1, !dbg !11304
  %fld142 = bitcast %union.u* %u141 to [1 x %union.rtunion_def]*, !dbg !11304
  %arrayidx143 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld142, i64 0, i64 1, !dbg !11304
  %rt_rtx144 = bitcast %union.rtunion_def* %arrayidx143 to %struct.rtx_def**, !dbg !11304
  %80 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx144, align 8, !dbg !11304
  %call145 = call i32 @insert_regs(%struct.rtx_def* %80, %struct.table_elt* null, i32 0), !dbg !11306
  %tobool146 = icmp ne i32 %call145, 0, !dbg !11306
  br i1 %tobool146, label %if.then147, label %if.end152, !dbg !11307

if.then147:                                       ; preds = %if.then140
  %81 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11308
  %u148 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i32 0, i32 1, !dbg !11308
  %fld149 = bitcast %union.u* %u148 to [1 x %union.rtunion_def]*, !dbg !11308
  %arrayidx150 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld149, i64 0, i64 1, !dbg !11308
  %rt_rtx151 = bitcast %union.rtunion_def* %arrayidx150 to %struct.rtx_def**, !dbg !11308
  %82 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx151, align 8, !dbg !11308
  call void @rehash_using_reg(%struct.rtx_def* %82), !dbg !11310
  store i32 1, i32* %changed, align 4, !dbg !11311
  br label %if.end152, !dbg !11312

if.end152:                                        ; preds = %if.then147, %if.then140
  br label %if.end153, !dbg !11313

if.end153:                                        ; preds = %if.end152, %land.lhs.true131, %if.end123
  br label %if.end154, !dbg !11314

if.end154:                                        ; preds = %if.end153, %lor.lhs.false90
  %83 = load i32, i32* %code, align 4, !dbg !11315
  %idxprom155 = sext i32 %83 to i64, !dbg !11315
  %arrayidx156 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom155, !dbg !11315
  %84 = load i8*, i8** %arrayidx156, align 8, !dbg !11315
  store i8* %84, i8** %fmt, align 8, !dbg !11316
  %85 = load i32, i32* %code, align 4, !dbg !11317
  %idxprom157 = sext i32 %85 to i64, !dbg !11317
  %arrayidx158 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom157, !dbg !11317
  %86 = load i8, i8* %arrayidx158, align 1, !dbg !11317
  %conv = zext i8 %86 to i32, !dbg !11317
  %sub159 = sub nsw i32 %conv, 1, !dbg !11319
  store i32 %sub159, i32* %i, align 4, !dbg !11320
  br label %for.cond160, !dbg !11321

for.cond160:                                      ; preds = %for.inc205, %if.end154
  %87 = load i32, i32* %i, align 4, !dbg !11322
  %cmp161 = icmp sge i32 %87, 0, !dbg !11324
  br i1 %cmp161, label %for.body163, label %for.end206, !dbg !11325

for.body163:                                      ; preds = %for.cond160
  %88 = load i8*, i8** %fmt, align 8, !dbg !11326
  %89 = load i32, i32* %i, align 4, !dbg !11328
  %idxprom164 = sext i32 %89 to i64, !dbg !11326
  %arrayidx165 = getelementptr inbounds i8, i8* %88, i64 %idxprom164, !dbg !11326
  %90 = load i8, i8* %arrayidx165, align 1, !dbg !11326
  %conv166 = sext i8 %90 to i32, !dbg !11326
  %cmp167 = icmp eq i32 %conv166, 101, !dbg !11329
  br i1 %cmp167, label %if.then169, label %if.else176, !dbg !11330

if.then169:                                       ; preds = %for.body163
  %91 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11331
  %u170 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1, !dbg !11331
  %fld171 = bitcast %union.u* %u170 to [1 x %union.rtunion_def]*, !dbg !11331
  %92 = load i32, i32* %i, align 4, !dbg !11331
  %idxprom172 = sext i32 %92 to i64, !dbg !11331
  %arrayidx173 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld171, i64 0, i64 %idxprom172, !dbg !11331
  %rt_rtx174 = bitcast %union.rtunion_def* %arrayidx173 to %struct.rtx_def**, !dbg !11331
  %93 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx174, align 8, !dbg !11331
  %call175 = call i32 @mention_regs(%struct.rtx_def* %93), !dbg !11332
  %94 = load i32, i32* %changed, align 4, !dbg !11333
  %or = or i32 %94, %call175, !dbg !11333
  store i32 %or, i32* %changed, align 4, !dbg !11333
  br label %if.end204, !dbg !11334

if.else176:                                       ; preds = %for.body163
  %95 = load i8*, i8** %fmt, align 8, !dbg !11335
  %96 = load i32, i32* %i, align 4, !dbg !11337
  %idxprom177 = sext i32 %96 to i64, !dbg !11335
  %arrayidx178 = getelementptr inbounds i8, i8* %95, i64 %idxprom177, !dbg !11335
  %97 = load i8, i8* %arrayidx178, align 1, !dbg !11335
  %conv179 = sext i8 %97 to i32, !dbg !11335
  %cmp180 = icmp eq i32 %conv179, 69, !dbg !11338
  br i1 %cmp180, label %if.then182, label %if.end203, !dbg !11339

if.then182:                                       ; preds = %if.else176
  store i32 0, i32* %j, align 4, !dbg !11340
  br label %for.cond183, !dbg !11342

for.cond183:                                      ; preds = %for.inc200, %if.then182
  %98 = load i32, i32* %j, align 4, !dbg !11343
  %99 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11345
  %u184 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %99, i32 0, i32 1, !dbg !11345
  %fld185 = bitcast %union.u* %u184 to [1 x %union.rtunion_def]*, !dbg !11345
  %100 = load i32, i32* %i, align 4, !dbg !11345
  %idxprom186 = sext i32 %100 to i64, !dbg !11345
  %arrayidx187 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld185, i64 0, i64 %idxprom186, !dbg !11345
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx187 to %struct.rtvec_def**, !dbg !11345
  %101 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !11345
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %101, i32 0, i32 0, !dbg !11345
  %102 = load i32, i32* %num_elem, align 8, !dbg !11345
  %cmp188 = icmp slt i32 %98, %102, !dbg !11346
  br i1 %cmp188, label %for.body190, label %for.end202, !dbg !11347

for.body190:                                      ; preds = %for.cond183
  %103 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11348
  %u191 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1, !dbg !11348
  %fld192 = bitcast %union.u* %u191 to [1 x %union.rtunion_def]*, !dbg !11348
  %104 = load i32, i32* %i, align 4, !dbg !11348
  %idxprom193 = sext i32 %104 to i64, !dbg !11348
  %arrayidx194 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld192, i64 0, i64 %idxprom193, !dbg !11348
  %rt_rtvec195 = bitcast %union.rtunion_def* %arrayidx194 to %struct.rtvec_def**, !dbg !11348
  %105 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec195, align 8, !dbg !11348
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %105, i32 0, i32 1, !dbg !11348
  %106 = load i32, i32* %j, align 4, !dbg !11348
  %idxprom196 = sext i32 %106 to i64, !dbg !11348
  %arrayidx197 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom196, !dbg !11348
  %107 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx197, align 8, !dbg !11348
  %call198 = call i32 @mention_regs(%struct.rtx_def* %107), !dbg !11349
  %108 = load i32, i32* %changed, align 4, !dbg !11350
  %or199 = or i32 %108, %call198, !dbg !11350
  store i32 %or199, i32* %changed, align 4, !dbg !11350
  br label %for.inc200, !dbg !11351

for.inc200:                                       ; preds = %for.body190
  %109 = load i32, i32* %j, align 4, !dbg !11352
  %inc201 = add nsw i32 %109, 1, !dbg !11352
  store i32 %inc201, i32* %j, align 4, !dbg !11352
  br label %for.cond183, !dbg !11353, !llvm.loop !11354

for.end202:                                       ; preds = %for.cond183
  br label %if.end203, !dbg !11355

if.end203:                                        ; preds = %for.end202, %if.else176
  br label %if.end204

if.end204:                                        ; preds = %if.end203, %if.then169
  br label %for.inc205, !dbg !11356

for.inc205:                                       ; preds = %if.end204
  %110 = load i32, i32* %i, align 4, !dbg !11357
  %dec = add nsw i32 %110, -1, !dbg !11357
  store i32 %dec, i32* %i, align 4, !dbg !11357
  br label %for.cond160, !dbg !11358, !llvm.loop !11359

for.end206:                                       ; preds = %for.cond160
  %111 = load i32, i32* %changed, align 4, !dbg !11361
  store i32 %111, i32* %retval, align 4, !dbg !11362
  br label %return, !dbg !11362

return:                                           ; preds = %for.end206, %if.end76, %for.end, %if.then
  %112 = load i32, i32* %retval, align 4, !dbg !11363
  ret i32 %112, !dbg !11363
}

; Function Attrs: noinline nounwind uwtable
define internal void @remove_invalid_refs(i32 %regno) #0 !dbg !11364 {
entry:
  %regno.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %p = alloca %struct.table_elt*, align 8
  %next = alloca %struct.table_elt*, align 8
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !11365, metadata !DIExpression()), !dbg !11366
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11367, metadata !DIExpression()), !dbg !11368
  call void @llvm.dbg.declare(metadata %struct.table_elt** %p, metadata !11369, metadata !DIExpression()), !dbg !11370
  call void @llvm.dbg.declare(metadata %struct.table_elt** %next, metadata !11371, metadata !DIExpression()), !dbg !11372
  store i32 0, i32* %i, align 4, !dbg !11373
  br label %for.cond, !dbg !11375

for.cond:                                         ; preds = %for.inc6, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11376
  %cmp = icmp ult i32 %0, 32, !dbg !11378
  br i1 %cmp, label %for.body, label %for.end7, !dbg !11379

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !11380
  %idxprom = zext i32 %1 to i64, !dbg !11382
  %arrayidx = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom, !dbg !11382
  %2 = load %struct.table_elt*, %struct.table_elt** %arrayidx, align 8, !dbg !11382
  store %struct.table_elt* %2, %struct.table_elt** %p, align 8, !dbg !11383
  br label %for.cond1, !dbg !11384

for.cond1:                                        ; preds = %for.inc, %for.body
  %3 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11385
  %tobool = icmp ne %struct.table_elt* %3, null, !dbg !11387
  br i1 %tobool, label %for.body2, label %for.end, !dbg !11387

for.body2:                                        ; preds = %for.cond1
  %4 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11388
  %next_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %4, i32 0, i32 2, !dbg !11390
  %5 = load %struct.table_elt*, %struct.table_elt** %next_same_hash, align 8, !dbg !11390
  store %struct.table_elt* %5, %struct.table_elt** %next, align 8, !dbg !11391
  %6 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11392
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %6, i32 0, i32 0, !dbg !11392
  %7 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !11392
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !11392
  %bf.load = load i32, i32* %8, align 8, !dbg !11392
  %bf.clear = and i32 %bf.load, 65535, !dbg !11392
  %cmp3 = icmp eq i32 %bf.clear, 37, !dbg !11392
  br i1 %cmp3, label %if.end, label %land.lhs.true, !dbg !11394

land.lhs.true:                                    ; preds = %for.body2
  %9 = load i32, i32* %regno.addr, align 4, !dbg !11395
  %10 = load i32, i32* %regno.addr, align 4, !dbg !11396
  %add = add i32 %10, 1, !dbg !11397
  %11 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11398
  %exp4 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %11, i32 0, i32 0, !dbg !11399
  %12 = load %struct.rtx_def*, %struct.rtx_def** %exp4, align 8, !dbg !11399
  %call = call i32 @refers_to_regno_p(i32 %9, i32 %add, %struct.rtx_def* %12, %struct.rtx_def** null), !dbg !11400
  %tobool5 = icmp ne i32 %call, 0, !dbg !11400
  br i1 %tobool5, label %if.then, label %if.end, !dbg !11401

if.then:                                          ; preds = %land.lhs.true
  %13 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11402
  %14 = load i32, i32* %i, align 4, !dbg !11403
  call void @remove_from_table(%struct.table_elt* %13, i32 %14), !dbg !11404
  br label %if.end, !dbg !11404

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body2
  br label %for.inc, !dbg !11405

for.inc:                                          ; preds = %if.end
  %15 = load %struct.table_elt*, %struct.table_elt** %next, align 8, !dbg !11406
  store %struct.table_elt* %15, %struct.table_elt** %p, align 8, !dbg !11407
  br label %for.cond1, !dbg !11408, !llvm.loop !11409

for.end:                                          ; preds = %for.cond1
  br label %for.inc6, !dbg !11410

for.inc6:                                         ; preds = %for.end
  %16 = load i32, i32* %i, align 4, !dbg !11411
  %inc = add i32 %16, 1, !dbg !11411
  store i32 %inc, i32* %i, align 4, !dbg !11411
  br label %for.cond, !dbg !11412, !llvm.loop !11413

for.end7:                                         ; preds = %for.cond
  ret void, !dbg !11415
}

; Function Attrs: noinline nounwind uwtable
define internal void @insert_const_anchors(%struct.rtx_def* %reg, %struct.rtx_def* %cst, i32 %mode) #0 !dbg !11416 {
entry:
  %reg.addr = alloca %struct.rtx_def*, align 8
  %cst.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %lower_base = alloca i64, align 8
  %lower_offs = alloca i64, align 8
  %upper_base = alloca i64, align 8
  %upper_offs = alloca i64, align 8
  store %struct.rtx_def* %reg, %struct.rtx_def** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg.addr, metadata !11419, metadata !DIExpression()), !dbg !11420
  store %struct.rtx_def* %cst, %struct.rtx_def** %cst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cst.addr, metadata !11421, metadata !DIExpression()), !dbg !11422
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !11423, metadata !DIExpression()), !dbg !11424
  call void @llvm.dbg.declare(metadata i64* %lower_base, metadata !11425, metadata !DIExpression()), !dbg !11426
  call void @llvm.dbg.declare(metadata i64* %lower_offs, metadata !11427, metadata !DIExpression()), !dbg !11428
  call void @llvm.dbg.declare(metadata i64* %upper_base, metadata !11429, metadata !DIExpression()), !dbg !11430
  call void @llvm.dbg.declare(metadata i64* %upper_offs, metadata !11431, metadata !DIExpression()), !dbg !11432
  %0 = load %struct.rtx_def*, %struct.rtx_def** %cst.addr, align 8, !dbg !11433
  %call = call zeroext i8 @compute_const_anchors(%struct.rtx_def* %0, i64* %lower_base, i64* %lower_offs, i64* %upper_base, i64* %upper_offs), !dbg !11435
  %tobool = icmp ne i8 %call, 0, !dbg !11435
  br i1 %tobool, label %if.end, label %if.then, !dbg !11436

if.then:                                          ; preds = %entry
  br label %if.end6, !dbg !11437

if.end:                                           ; preds = %entry
  %1 = load i64, i64* %lower_base, align 8, !dbg !11438
  %cmp = icmp ne i64 %1, 0, !dbg !11440
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !11441

if.then1:                                         ; preds = %if.end
  %2 = load i64, i64* %lower_base, align 8, !dbg !11442
  %3 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !11443
  %4 = load i64, i64* %lower_offs, align 8, !dbg !11444
  %sub = sub nsw i64 0, %4, !dbg !11445
  %5 = load i32, i32* %mode.addr, align 4, !dbg !11446
  call void @insert_const_anchor(i64 %2, %struct.rtx_def* %3, i64 %sub, i32 %5), !dbg !11447
  br label %if.end2, !dbg !11447

if.end2:                                          ; preds = %if.then1, %if.end
  %6 = load i64, i64* %upper_base, align 8, !dbg !11448
  %cmp3 = icmp ne i64 %6, 0, !dbg !11450
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !11451

if.then4:                                         ; preds = %if.end2
  %7 = load i64, i64* %upper_base, align 8, !dbg !11452
  %8 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !11453
  %9 = load i64, i64* %upper_offs, align 8, !dbg !11454
  %sub5 = sub nsw i64 0, %9, !dbg !11455
  %10 = load i32, i32* %mode.addr, align 4, !dbg !11456
  call void @insert_const_anchor(i64 %7, %struct.rtx_def* %8, i64 %sub5, i32 %10), !dbg !11457
  br label %if.end6, !dbg !11457

if.end6:                                          ; preds = %if.then, %if.then4, %if.end2
  ret void, !dbg !11458
}

declare dso_local %struct.rtx_def* @simplify_gen_subreg(i32, %struct.rtx_def*, i32, i32) #2

declare dso_local i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @equiv_constant(%struct.rtx_def* %x) #0 !dbg !11459 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %x_q = alloca i32, align 4
  %x_ent = alloca %struct.qty_table_elem*, align 8
  %mode = alloca i32, align 4
  %imode = alloca i32, align 4
  %new_rtx = alloca %struct.rtx_def*, align 8
  %byte = alloca i32, align 4
  %y = alloca %struct.rtx_def*, align 8
  %elt = alloca %struct.table_elt*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !11462, metadata !DIExpression()), !dbg !11463
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11464
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !11464
  %bf.load = load i32, i32* %1, align 8, !dbg !11464
  %bf.clear = and i32 %bf.load, 65535, !dbg !11464
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !11464
  br i1 %cmp, label %land.lhs.true, label %if.end11, !dbg !11466

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11467
  %call = call i32 @rhs_regno(%struct.rtx_def* %2), !dbg !11467
  %call1 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call), !dbg !11467
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call1, i32 0, i32 1, !dbg !11467
  %3 = load i32, i32* %reg_qty, align 4, !dbg !11467
  %cmp2 = icmp sge i32 %3, 0, !dbg !11467
  br i1 %cmp2, label %if.then, label %if.end11, !dbg !11468

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %x_q, metadata !11469, metadata !DIExpression()), !dbg !11471
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11472
  %call3 = call i32 @rhs_regno(%struct.rtx_def* %4), !dbg !11472
  %call4 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call3), !dbg !11472
  %reg_qty5 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call4, i32 0, i32 1, !dbg !11472
  %5 = load i32, i32* %reg_qty5, align 4, !dbg !11472
  store i32 %5, i32* %x_q, align 4, !dbg !11471
  call void @llvm.dbg.declare(metadata %struct.qty_table_elem** %x_ent, metadata !11473, metadata !DIExpression()), !dbg !11474
  %6 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8, !dbg !11475
  %7 = load i32, i32* %x_q, align 4, !dbg !11476
  %idxprom = sext i32 %7 to i64, !dbg !11475
  %arrayidx = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %6, i64 %idxprom, !dbg !11475
  store %struct.qty_table_elem* %arrayidx, %struct.qty_table_elem** %x_ent, align 8, !dbg !11474
  %8 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x_ent, align 8, !dbg !11477
  %const_rtx = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %8, i32 0, i32 0, !dbg !11479
  %9 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx, align 8, !dbg !11479
  %tobool = icmp ne %struct.rtx_def* %9, null, !dbg !11477
  br i1 %tobool, label %if.then6, label %if.end, !dbg !11480

if.then6:                                         ; preds = %if.then
  %10 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i32 0, i32 0), align 8, !dbg !11481
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11482
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !11482
  %bf.load7 = load i32, i32* %12, align 8, !dbg !11482
  %bf.lshr = lshr i32 %bf.load7, 16, !dbg !11482
  %bf.clear8 = and i32 %bf.lshr, 255, !dbg !11482
  %13 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x_ent, align 8, !dbg !11483
  %const_rtx9 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %13, i32 0, i32 0, !dbg !11484
  %14 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx9, align 8, !dbg !11484
  %call10 = call %struct.rtx_def* %10(i32 %bf.clear8, %struct.rtx_def* %14), !dbg !11481
  store %struct.rtx_def* %call10, %struct.rtx_def** %x.addr, align 8, !dbg !11485
  br label %if.end, !dbg !11486

if.end:                                           ; preds = %if.then6, %if.then
  br label %if.end11, !dbg !11487

if.end11:                                         ; preds = %if.end, %land.lhs.true, %entry
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11488
  %cmp12 = icmp eq %struct.rtx_def* %15, null, !dbg !11490
  br i1 %cmp12, label %if.then18, label %lor.lhs.false, !dbg !11491

lor.lhs.false:                                    ; preds = %if.end11
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11492
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !11492
  %bf.load13 = load i32, i32* %17, align 8, !dbg !11492
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !11492
  %idxprom15 = sext i32 %bf.clear14 to i64, !dbg !11492
  %arrayidx16 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom15, !dbg !11492
  %18 = load i32, i32* %arrayidx16, align 4, !dbg !11492
  %cmp17 = icmp eq i32 %18, 9, !dbg !11492
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !11493

if.then18:                                        ; preds = %lor.lhs.false, %if.end11
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11494
  store %struct.rtx_def* %19, %struct.rtx_def** %retval, align 8, !dbg !11495
  br label %return, !dbg !11495

if.end19:                                         ; preds = %lor.lhs.false
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11496
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !11496
  %bf.load20 = load i32, i32* %21, align 8, !dbg !11496
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !11496
  %cmp22 = icmp eq i32 %bf.clear21, 39, !dbg !11498
  br i1 %cmp22, label %if.then23, label %if.end107, !dbg !11499

if.then23:                                        ; preds = %if.end19
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !11500, metadata !DIExpression()), !dbg !11502
  %22 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11503
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !11503
  %bf.load24 = load i32, i32* %23, align 8, !dbg !11503
  %bf.lshr25 = lshr i32 %bf.load24, 16, !dbg !11503
  %bf.clear26 = and i32 %bf.lshr25, 255, !dbg !11503
  store i32 %bf.clear26, i32* %mode, align 4, !dbg !11502
  call void @llvm.dbg.declare(metadata i32* %imode, metadata !11504, metadata !DIExpression()), !dbg !11505
  %24 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11506
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !11506
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !11506
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !11506
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !11506
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !11506
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !11506
  %bf.load28 = load i32, i32* %26, align 8, !dbg !11506
  %bf.lshr29 = lshr i32 %bf.load28, 16, !dbg !11506
  %bf.clear30 = and i32 %bf.lshr29, 255, !dbg !11506
  store i32 %bf.clear30, i32* %imode, align 4, !dbg !11505
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_rtx, metadata !11507, metadata !DIExpression()), !dbg !11508
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11509
  %call31 = call %struct.rtx_def* @lookup_as_function(%struct.rtx_def* %27, i32 30), !dbg !11511
  store %struct.rtx_def* %call31, %struct.rtx_def** %new_rtx, align 8, !dbg !11512
  %cmp32 = icmp ne %struct.rtx_def* %call31, null, !dbg !11513
  br i1 %cmp32, label %if.then39, label %lor.lhs.false33, !dbg !11514

lor.lhs.false33:                                  ; preds = %if.then23
  %28 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11515
  %call34 = call %struct.rtx_def* @lookup_as_function(%struct.rtx_def* %28, i32 32), !dbg !11516
  store %struct.rtx_def* %call34, %struct.rtx_def** %new_rtx, align 8, !dbg !11517
  %cmp35 = icmp ne %struct.rtx_def* %call34, null, !dbg !11518
  br i1 %cmp35, label %if.then39, label %lor.lhs.false36, !dbg !11519

lor.lhs.false36:                                  ; preds = %lor.lhs.false33
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11520
  %call37 = call %struct.rtx_def* @lookup_as_function(%struct.rtx_def* %29, i32 31), !dbg !11521
  store %struct.rtx_def* %call37, %struct.rtx_def** %new_rtx, align 8, !dbg !11522
  %cmp38 = icmp ne %struct.rtx_def* %call37, null, !dbg !11523
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !11524

if.then39:                                        ; preds = %lor.lhs.false36, %lor.lhs.false33, %if.then23
  %30 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !11525
  store %struct.rtx_def* %30, %struct.rtx_def** %retval, align 8, !dbg !11526
  br label %return, !dbg !11526

if.end40:                                         ; preds = %lor.lhs.false36
  %31 = load i32, i32* %mode, align 4, !dbg !11527
  %idxprom41 = zext i32 %31 to i64, !dbg !11527
  %arrayidx42 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom41, !dbg !11527
  %32 = load i8, i8* %arrayidx42, align 1, !dbg !11527
  %conv = zext i8 %32 to i16, !dbg !11527
  %conv43 = zext i16 %conv to i32, !dbg !11527
  %33 = load i32, i32* @word_mode, align 4, !dbg !11529
  %idxprom44 = zext i32 %33 to i64, !dbg !11529
  %arrayidx45 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom44, !dbg !11529
  %34 = load i8, i8* %arrayidx45, align 1, !dbg !11529
  %conv46 = zext i8 %34 to i16, !dbg !11529
  %conv47 = zext i16 %conv46 to i32, !dbg !11529
  %cmp48 = icmp slt i32 %conv43, %conv47, !dbg !11530
  br i1 %cmp48, label %land.lhs.true50, label %if.end83, !dbg !11531

land.lhs.true50:                                  ; preds = %if.end40
  %35 = load i32, i32* @word_mode, align 4, !dbg !11532
  %idxprom51 = zext i32 %35 to i64, !dbg !11532
  %arrayidx52 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom51, !dbg !11532
  %36 = load i8, i8* %arrayidx52, align 1, !dbg !11532
  %conv53 = zext i8 %36 to i16, !dbg !11532
  %conv54 = zext i16 %conv53 to i32, !dbg !11532
  %37 = load i32, i32* %imode, align 4, !dbg !11533
  %idxprom55 = zext i32 %37 to i64, !dbg !11533
  %arrayidx56 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom55, !dbg !11533
  %38 = load i8, i8* %arrayidx56, align 1, !dbg !11533
  %conv57 = zext i8 %38 to i16, !dbg !11533
  %conv58 = zext i16 %conv57 to i32, !dbg !11533
  %cmp59 = icmp slt i32 %conv54, %conv58, !dbg !11534
  br i1 %cmp59, label %if.then61, label %if.end83, !dbg !11535

if.then61:                                        ; preds = %land.lhs.true50
  call void @llvm.dbg.declare(metadata i32* %byte, metadata !11536, metadata !DIExpression()), !dbg !11538
  %39 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11539
  %u62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !11539
  %fld63 = bitcast %union.u* %u62 to [1 x %union.rtunion_def]*, !dbg !11539
  %arrayidx64 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld63, i64 0, i64 1, !dbg !11539
  %rt_uint = bitcast %union.rtunion_def* %arrayidx64 to i32*, !dbg !11539
  %40 = load i32, i32* %rt_uint, align 8, !dbg !11539
  %41 = load i32, i32* %mode, align 4, !dbg !11540
  %42 = load i32, i32* @word_mode, align 4, !dbg !11541
  %call65 = call i32 @subreg_lowpart_offset(i32 %41, i32 %42), !dbg !11542
  %sub = sub i32 %40, %call65, !dbg !11543
  store i32 %sub, i32* %byte, align 4, !dbg !11538
  %43 = load i32, i32* %byte, align 4, !dbg !11544
  %cmp66 = icmp sge i32 %43, 0, !dbg !11546
  br i1 %cmp66, label %land.lhs.true68, label %if.end82, !dbg !11547

land.lhs.true68:                                  ; preds = %if.then61
  %44 = load i32, i32* %byte, align 4, !dbg !11548
  %rem = srem i32 %44, 4, !dbg !11549
  %cmp69 = icmp eq i32 %rem, 0, !dbg !11550
  br i1 %cmp69, label %if.then71, label %if.end82, !dbg !11551

if.then71:                                        ; preds = %land.lhs.true68
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %y, metadata !11552, metadata !DIExpression()), !dbg !11554
  %45 = load i32, i32* @word_mode, align 4, !dbg !11555
  %46 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11556
  %u72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1, !dbg !11556
  %fld73 = bitcast %union.u* %u72 to [1 x %union.rtunion_def]*, !dbg !11556
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i64 0, i64 0, !dbg !11556
  %rt_rtx75 = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtx_def**, !dbg !11556
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx75, align 8, !dbg !11556
  %48 = load i32, i32* %byte, align 4, !dbg !11557
  %call76 = call %struct.rtx_def* @gen_rtx_SUBREG(i32 %45, %struct.rtx_def* %47, i32 %48), !dbg !11558
  store %struct.rtx_def* %call76, %struct.rtx_def** %y, align 8, !dbg !11554
  %49 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8, !dbg !11559
  %call77 = call %struct.rtx_def* @lookup_as_function(%struct.rtx_def* %49, i32 30), !dbg !11560
  store %struct.rtx_def* %call77, %struct.rtx_def** %new_rtx, align 8, !dbg !11561
  %50 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !11562
  %tobool78 = icmp ne %struct.rtx_def* %50, null, !dbg !11562
  br i1 %tobool78, label %if.then79, label %if.end81, !dbg !11564

if.then79:                                        ; preds = %if.then71
  %51 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i32 0, i32 0), align 8, !dbg !11565
  %52 = load i32, i32* %mode, align 4, !dbg !11566
  %53 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !11567
  %call80 = call %struct.rtx_def* %51(i32 %52, %struct.rtx_def* %53), !dbg !11565
  store %struct.rtx_def* %call80, %struct.rtx_def** %retval, align 8, !dbg !11568
  br label %return, !dbg !11568

if.end81:                                         ; preds = %if.then71
  br label %if.end82, !dbg !11569

if.end82:                                         ; preds = %if.end81, %land.lhs.true68, %if.then61
  br label %if.end83, !dbg !11570

if.end83:                                         ; preds = %if.end82, %land.lhs.true50, %if.end40
  %54 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11571
  %u84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1, !dbg !11571
  %fld85 = bitcast %union.u* %u84 to [1 x %union.rtunion_def]*, !dbg !11571
  %arrayidx86 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld85, i64 0, i64 0, !dbg !11571
  %rt_rtx87 = bitcast %union.rtunion_def* %arrayidx86 to %struct.rtx_def**, !dbg !11571
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx87, align 8, !dbg !11571
  %56 = bitcast %struct.rtx_def* %55 to i32*, !dbg !11571
  %bf.load88 = load i32, i32* %56, align 8, !dbg !11571
  %bf.clear89 = and i32 %bf.load88, 65535, !dbg !11571
  %cmp90 = icmp eq i32 %bf.clear89, 37, !dbg !11571
  br i1 %cmp90, label %land.lhs.true92, label %if.end106, !dbg !11573

land.lhs.true92:                                  ; preds = %if.end83
  %57 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11574
  %u93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1, !dbg !11574
  %fld94 = bitcast %union.u* %u93 to [1 x %union.rtunion_def]*, !dbg !11574
  %arrayidx95 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld94, i64 0, i64 0, !dbg !11574
  %rt_rtx96 = bitcast %union.rtunion_def* %arrayidx95 to %struct.rtx_def**, !dbg !11574
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx96, align 8, !dbg !11574
  %call97 = call %struct.rtx_def* @equiv_constant(%struct.rtx_def* %58), !dbg !11575
  store %struct.rtx_def* %call97, %struct.rtx_def** %new_rtx, align 8, !dbg !11576
  %cmp98 = icmp ne %struct.rtx_def* %call97, null, !dbg !11577
  br i1 %cmp98, label %if.then100, label %if.end106, !dbg !11578

if.then100:                                       ; preds = %land.lhs.true92
  %59 = load i32, i32* %mode, align 4, !dbg !11579
  %60 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !11580
  %61 = load i32, i32* %imode, align 4, !dbg !11581
  %62 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11582
  %u101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1, !dbg !11582
  %fld102 = bitcast %union.u* %u101 to [1 x %union.rtunion_def]*, !dbg !11582
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i64 0, i64 1, !dbg !11582
  %rt_uint104 = bitcast %union.rtunion_def* %arrayidx103 to i32*, !dbg !11582
  %63 = load i32, i32* %rt_uint104, align 8, !dbg !11582
  %call105 = call %struct.rtx_def* @simplify_subreg(i32 %59, %struct.rtx_def* %60, i32 %61, i32 %63), !dbg !11583
  store %struct.rtx_def* %call105, %struct.rtx_def** %retval, align 8, !dbg !11584
  br label %return, !dbg !11584

if.end106:                                        ; preds = %land.lhs.true92, %if.end83
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !11585
  br label %return, !dbg !11585

if.end107:                                        ; preds = %if.end19
  %64 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11586
  %65 = bitcast %struct.rtx_def* %64 to i32*, !dbg !11586
  %bf.load108 = load i32, i32* %65, align 8, !dbg !11586
  %bf.clear109 = and i32 %bf.load108, 65535, !dbg !11586
  %cmp110 = icmp eq i32 %bf.clear109, 43, !dbg !11586
  br i1 %cmp110, label %if.then112, label %if.end158, !dbg !11588

if.then112:                                       ; preds = %if.end107
  call void @llvm.dbg.declare(metadata %struct.table_elt** %elt, metadata !11589, metadata !DIExpression()), !dbg !11591
  %66 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11592
  %call113 = call %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* %66), !dbg !11593
  store %struct.rtx_def* %call113, %struct.rtx_def** %x.addr, align 8, !dbg !11594
  %67 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11595
  %68 = bitcast %struct.rtx_def* %67 to i32*, !dbg !11595
  %bf.load114 = load i32, i32* %68, align 8, !dbg !11595
  %bf.clear115 = and i32 %bf.load114, 65535, !dbg !11595
  %idxprom116 = sext i32 %bf.clear115 to i64, !dbg !11595
  %arrayidx117 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom116, !dbg !11595
  %69 = load i32, i32* %arrayidx117, align 4, !dbg !11595
  %cmp118 = icmp eq i32 %69, 9, !dbg !11595
  br i1 %cmp118, label %if.then120, label %if.end121, !dbg !11597

if.then120:                                       ; preds = %if.then112
  %70 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11598
  store %struct.rtx_def* %70, %struct.rtx_def** %retval, align 8, !dbg !11599
  br label %return, !dbg !11599

if.end121:                                        ; preds = %if.then112
  %71 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11600
  %72 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11601
  %73 = bitcast %struct.rtx_def* %72 to i32*, !dbg !11601
  %bf.load122 = load i32, i32* %73, align 8, !dbg !11601
  %bf.clear123 = and i32 %bf.load122, 65535, !dbg !11601
  %cmp124 = icmp eq i32 %bf.clear123, 37, !dbg !11601
  br i1 %cmp124, label %land.lhs.true126, label %cond.false, !dbg !11601

land.lhs.true126:                                 ; preds = %if.end121
  %74 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11601
  %call127 = call i32 @rhs_regno(%struct.rtx_def* %74), !dbg !11601
  %cmp128 = icmp uge i32 %call127, 53, !dbg !11601
  br i1 %cmp128, label %cond.true, label %cond.false, !dbg !11601

cond.true:                                        ; preds = %land.lhs.true126
  %75 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11601
  %call130 = call i32 @rhs_regno(%struct.rtx_def* %75), !dbg !11601
  %call131 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call130), !dbg !11601
  %reg_qty132 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call131, i32 0, i32 1, !dbg !11601
  %76 = load i32, i32* %reg_qty132, align 4, !dbg !11601
  %add = add i32 4736, %76, !dbg !11601
  br label %cond.end, !dbg !11601

cond.false:                                       ; preds = %land.lhs.true126, %if.end121
  %77 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11601
  %78 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11601
  %79 = bitcast %struct.rtx_def* %78 to i32*, !dbg !11601
  %bf.load133 = load i32, i32* %79, align 8, !dbg !11601
  %bf.lshr134 = lshr i32 %bf.load133, 16, !dbg !11601
  %bf.clear135 = and i32 %bf.lshr134, 255, !dbg !11601
  %call136 = call i32 @safe_hash(%struct.rtx_def* %77, i32 %bf.clear135), !dbg !11601
  br label %cond.end, !dbg !11601

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %call136, %cond.false ], !dbg !11601
  %and = and i32 %cond, 31, !dbg !11601
  %80 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11602
  %81 = bitcast %struct.rtx_def* %80 to i32*, !dbg !11602
  %bf.load137 = load i32, i32* %81, align 8, !dbg !11602
  %bf.lshr138 = lshr i32 %bf.load137, 16, !dbg !11602
  %bf.clear139 = and i32 %bf.lshr138, 255, !dbg !11602
  %call140 = call %struct.table_elt* @lookup(%struct.rtx_def* %71, i32 %and, i32 %bf.clear139), !dbg !11603
  store %struct.table_elt* %call140, %struct.table_elt** %elt, align 8, !dbg !11604
  %82 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !11605
  %cmp141 = icmp eq %struct.table_elt* %82, null, !dbg !11607
  br i1 %cmp141, label %if.then143, label %if.end144, !dbg !11608

if.then143:                                       ; preds = %cond.end
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !11609
  br label %return, !dbg !11609

if.end144:                                        ; preds = %cond.end
  %83 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !11610
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %83, i32 0, i32 6, !dbg !11612
  %84 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8, !dbg !11612
  store %struct.table_elt* %84, %struct.table_elt** %elt, align 8, !dbg !11613
  br label %for.cond, !dbg !11614

for.cond:                                         ; preds = %for.inc, %if.end144
  %85 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !11615
  %tobool145 = icmp ne %struct.table_elt* %85, null, !dbg !11617
  br i1 %tobool145, label %for.body, label %for.end, !dbg !11617

for.body:                                         ; preds = %for.cond
  %86 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !11618
  %is_const = getelementptr inbounds %struct.table_elt, %struct.table_elt* %86, i32 0, i32 12, !dbg !11620
  %87 = load i8, i8* %is_const, align 2, !dbg !11620
  %conv146 = sext i8 %87 to i32, !dbg !11618
  %tobool147 = icmp ne i32 %conv146, 0, !dbg !11618
  br i1 %tobool147, label %land.lhs.true148, label %if.end157, !dbg !11621

land.lhs.true148:                                 ; preds = %for.body
  %88 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !11622
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %88, i32 0, i32 0, !dbg !11622
  %89 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !11622
  %90 = bitcast %struct.rtx_def* %89 to i32*, !dbg !11622
  %bf.load149 = load i32, i32* %90, align 8, !dbg !11622
  %bf.clear150 = and i32 %bf.load149, 65535, !dbg !11622
  %idxprom151 = sext i32 %bf.clear150 to i64, !dbg !11622
  %arrayidx152 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom151, !dbg !11622
  %91 = load i32, i32* %arrayidx152, align 4, !dbg !11622
  %cmp153 = icmp eq i32 %91, 9, !dbg !11622
  br i1 %cmp153, label %if.then155, label %if.end157, !dbg !11623

if.then155:                                       ; preds = %land.lhs.true148
  %92 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !11624
  %exp156 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %92, i32 0, i32 0, !dbg !11625
  %93 = load %struct.rtx_def*, %struct.rtx_def** %exp156, align 8, !dbg !11625
  store %struct.rtx_def* %93, %struct.rtx_def** %retval, align 8, !dbg !11626
  br label %return, !dbg !11626

if.end157:                                        ; preds = %land.lhs.true148, %for.body
  br label %for.inc, !dbg !11622

for.inc:                                          ; preds = %if.end157
  %94 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !11627
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %94, i32 0, i32 4, !dbg !11628
  %95 = load %struct.table_elt*, %struct.table_elt** %next_same_value, align 8, !dbg !11628
  store %struct.table_elt* %95, %struct.table_elt** %elt, align 8, !dbg !11629
  br label %for.cond, !dbg !11630, !llvm.loop !11631

for.end:                                          ; preds = %for.cond
  br label %if.end158, !dbg !11633

if.end158:                                        ; preds = %for.end, %if.end107
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !11634
  br label %return, !dbg !11634

return:                                           ; preds = %if.end158, %if.then155, %if.then143, %if.then120, %if.end106, %if.then100, %if.then79, %if.then39, %if.then18
  %96 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !11635
  ret %struct.rtx_def* %96, !dbg !11635
}

declare dso_local zeroext i8 @canonicalize_change_group(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @simplify_unary_operation(i32, i32, %struct.rtx_def*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @find_comparison_args(i32 %code, %struct.rtx_def** %parg1, %struct.rtx_def** %parg2, i32* %pmode1, i32* %pmode2) #0 !dbg !11636 {
entry:
  %code.addr = alloca i32, align 4
  %parg1.addr = alloca %struct.rtx_def**, align 8
  %parg2.addr = alloca %struct.rtx_def**, align 8
  %pmode1.addr = alloca i32*, align 8
  %pmode2.addr = alloca i32*, align 8
  %arg1 = alloca %struct.rtx_def*, align 8
  %arg2 = alloca %struct.rtx_def*, align 8
  %x = alloca %struct.rtx_def*, align 8
  %reverse_code = alloca i32, align 4
  %p = alloca %struct.table_elt*, align 8
  %inner_mode = alloca i32, align 4
  %reversed = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !11639, metadata !DIExpression()), !dbg !11640
  store %struct.rtx_def** %parg1, %struct.rtx_def*** %parg1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %parg1.addr, metadata !11641, metadata !DIExpression()), !dbg !11642
  store %struct.rtx_def** %parg2, %struct.rtx_def*** %parg2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %parg2.addr, metadata !11643, metadata !DIExpression()), !dbg !11644
  store i32* %pmode1, i32** %pmode1.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pmode1.addr, metadata !11645, metadata !DIExpression()), !dbg !11646
  store i32* %pmode2, i32** %pmode2.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pmode2.addr, metadata !11647, metadata !DIExpression()), !dbg !11648
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %arg1, metadata !11649, metadata !DIExpression()), !dbg !11650
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %arg2, metadata !11651, metadata !DIExpression()), !dbg !11652
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %parg1.addr, align 8, !dbg !11653
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !11654
  store %struct.rtx_def* %1, %struct.rtx_def** %arg1, align 8, !dbg !11655
  %2 = load %struct.rtx_def**, %struct.rtx_def*** %parg2.addr, align 8, !dbg !11656
  %3 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8, !dbg !11657
  store %struct.rtx_def* %3, %struct.rtx_def** %arg2, align 8, !dbg !11658
  br label %while.cond, !dbg !11659

while.cond:                                       ; preds = %if.end207, %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %arg2, align 8, !dbg !11660
  %5 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8, !dbg !11661
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !11661
  %bf.load = load i32, i32* %6, align 8, !dbg !11661
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !11661
  %bf.clear = and i32 %bf.lshr, 255, !dbg !11661
  %idxprom = sext i32 %bf.clear to i64, !dbg !11661
  %arrayidx = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom, !dbg !11661
  %7 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !11661
  %cmp = icmp eq %struct.rtx_def* %4, %7, !dbg !11662
  br i1 %cmp, label %while.body, label %while.end, !dbg !11659

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !11663, metadata !DIExpression()), !dbg !11665
  store %struct.rtx_def* null, %struct.rtx_def** %x, align 8, !dbg !11665
  call void @llvm.dbg.declare(metadata i32* %reverse_code, metadata !11666, metadata !DIExpression()), !dbg !11667
  store i32 0, i32* %reverse_code, align 4, !dbg !11667
  call void @llvm.dbg.declare(metadata %struct.table_elt** %p, metadata !11668, metadata !DIExpression()), !dbg !11669
  store %struct.table_elt* null, %struct.table_elt** %p, align 8, !dbg !11669
  %8 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8, !dbg !11670
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !11670
  %bf.load1 = load i32, i32* %9, align 8, !dbg !11670
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !11670
  %cmp3 = icmp eq i32 %bf.clear2, 48, !dbg !11672
  br i1 %cmp3, label %land.lhs.true, label %if.else, !dbg !11673

land.lhs.true:                                    ; preds = %while.body
  %10 = load %struct.rtx_def*, %struct.rtx_def** %arg2, align 8, !dbg !11674
  %11 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11675
  %cmp4 = icmp eq %struct.rtx_def* %10, %11, !dbg !11676
  br i1 %cmp4, label %if.then, label %if.else, !dbg !11677

if.then:                                          ; preds = %land.lhs.true
  %12 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8, !dbg !11678
  store %struct.rtx_def* %12, %struct.rtx_def** %x, align 8, !dbg !11679
  br label %if.end43, !dbg !11680

if.else:                                          ; preds = %land.lhs.true, %while.body
  %13 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8, !dbg !11681
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !11681
  %bf.load5 = load i32, i32* %14, align 8, !dbg !11681
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !11681
  %idxprom7 = sext i32 %bf.clear6 to i64, !dbg !11681
  %arrayidx8 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom7, !dbg !11681
  %15 = load i32, i32* %arrayidx8, align 4, !dbg !11681
  %and = and i32 %15, -2, !dbg !11681
  %cmp9 = icmp eq i32 %and, 0, !dbg !11681
  br i1 %cmp9, label %if.then10, label %if.end42, !dbg !11683

if.then10:                                        ; preds = %if.else
  %16 = load i32, i32* %code.addr, align 4, !dbg !11684
  %cmp11 = icmp eq i32 %16, 80, !dbg !11687
  br i1 %cmp11, label %if.then23, label %lor.lhs.false, !dbg !11688

lor.lhs.false:                                    ; preds = %if.then10
  %17 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8, !dbg !11689
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !11689
  %bf.load12 = load i32, i32* %18, align 8, !dbg !11689
  %bf.lshr13 = lshr i32 %bf.load12, 16, !dbg !11689
  %bf.clear14 = and i32 %bf.lshr13, 255, !dbg !11689
  %idxprom15 = zext i32 %bf.clear14 to i64, !dbg !11689
  %arrayidx16 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom15, !dbg !11689
  %19 = load i8, i8* %arrayidx16, align 1, !dbg !11689
  %conv = zext i8 %19 to i32, !dbg !11689
  %cmp17 = icmp eq i32 %conv, 2, !dbg !11690
  br i1 %cmp17, label %land.lhs.true19, label %if.else24, !dbg !11691

land.lhs.true19:                                  ; preds = %lor.lhs.false
  %20 = load i32, i32* %code.addr, align 4, !dbg !11692
  %cmp20 = icmp eq i32 %20, 85, !dbg !11693
  br i1 %cmp20, label %land.lhs.true22, label %if.else24, !dbg !11694

land.lhs.true22:                                  ; preds = %land.lhs.true19
  br i1 false, label %if.then23, label %if.else24, !dbg !11695

if.then23:                                        ; preds = %land.lhs.true22, %if.then10
  %21 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8, !dbg !11696
  store %struct.rtx_def* %21, %struct.rtx_def** %x, align 8, !dbg !11697
  br label %if.end41, !dbg !11698

if.else24:                                        ; preds = %land.lhs.true22, %land.lhs.true19, %lor.lhs.false
  %22 = load i32, i32* %code.addr, align 4, !dbg !11699
  %cmp25 = icmp eq i32 %22, 81, !dbg !11701
  br i1 %cmp25, label %if.then40, label %lor.lhs.false27, !dbg !11702

lor.lhs.false27:                                  ; preds = %if.else24
  %23 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8, !dbg !11703
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !11703
  %bf.load28 = load i32, i32* %24, align 8, !dbg !11703
  %bf.lshr29 = lshr i32 %bf.load28, 16, !dbg !11703
  %bf.clear30 = and i32 %bf.lshr29, 255, !dbg !11703
  %idxprom31 = zext i32 %bf.clear30 to i64, !dbg !11703
  %arrayidx32 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom31, !dbg !11703
  %25 = load i8, i8* %arrayidx32, align 1, !dbg !11703
  %conv33 = zext i8 %25 to i32, !dbg !11703
  %cmp34 = icmp eq i32 %conv33, 2, !dbg !11704
  br i1 %cmp34, label %land.lhs.true36, label %if.end, !dbg !11705

land.lhs.true36:                                  ; preds = %lor.lhs.false27
  %26 = load i32, i32* %code.addr, align 4, !dbg !11706
  %cmp37 = icmp eq i32 %26, 82, !dbg !11707
  br i1 %cmp37, label %land.lhs.true39, label %if.end, !dbg !11708

land.lhs.true39:                                  ; preds = %land.lhs.true36
  br i1 false, label %if.then40, label %if.end, !dbg !11709

if.then40:                                        ; preds = %land.lhs.true39, %if.else24
  %27 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8, !dbg !11710
  store %struct.rtx_def* %27, %struct.rtx_def** %x, align 8, !dbg !11711
  store i32 1, i32* %reverse_code, align 4, !dbg !11712
  br label %if.end, !dbg !11713

if.end:                                           ; preds = %if.then40, %land.lhs.true39, %land.lhs.true36, %lor.lhs.false27
  br label %if.end41

if.end41:                                         ; preds = %if.end, %if.then23
  br label %if.end42, !dbg !11714

if.end42:                                         ; preds = %if.end41, %if.else
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then
  %28 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !11715
  %cmp44 = icmp eq %struct.rtx_def* %28, null, !dbg !11717
  br i1 %cmp44, label %if.then46, label %if.end65, !dbg !11718

if.then46:                                        ; preds = %if.end43
  %29 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8, !dbg !11719
  %30 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8, !dbg !11720
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !11720
  %bf.load47 = load i32, i32* %31, align 8, !dbg !11720
  %bf.clear48 = and i32 %bf.load47, 65535, !dbg !11720
  %cmp49 = icmp eq i32 %bf.clear48, 37, !dbg !11720
  br i1 %cmp49, label %land.lhs.true51, label %cond.false, !dbg !11720

land.lhs.true51:                                  ; preds = %if.then46
  %32 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8, !dbg !11720
  %call = call i32 @rhs_regno(%struct.rtx_def* %32), !dbg !11720
  %cmp52 = icmp uge i32 %call, 53, !dbg !11720
  br i1 %cmp52, label %cond.true, label %cond.false, !dbg !11720

cond.true:                                        ; preds = %land.lhs.true51
  %33 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8, !dbg !11720
  %call54 = call i32 @rhs_regno(%struct.rtx_def* %33), !dbg !11720
  %call55 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call54), !dbg !11720
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call55, i32 0, i32 1, !dbg !11720
  %34 = load i32, i32* %reg_qty, align 4, !dbg !11720
  %add = add i32 4736, %34, !dbg !11720
  br label %cond.end, !dbg !11720

cond.false:                                       ; preds = %land.lhs.true51, %if.then46
  %35 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8, !dbg !11720
  %36 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8, !dbg !11720
  %37 = bitcast %struct.rtx_def* %36 to i32*, !dbg !11720
  %bf.load56 = load i32, i32* %37, align 8, !dbg !11720
  %bf.lshr57 = lshr i32 %bf.load56, 16, !dbg !11720
  %bf.clear58 = and i32 %bf.lshr57, 255, !dbg !11720
  %call59 = call i32 @safe_hash(%struct.rtx_def* %35, i32 %bf.clear58), !dbg !11720
  br label %cond.end, !dbg !11720

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %call59, %cond.false ], !dbg !11720
  %and60 = and i32 %cond, 31, !dbg !11720
  %38 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8, !dbg !11721
  %39 = bitcast %struct.rtx_def* %38 to i32*, !dbg !11721
  %bf.load61 = load i32, i32* %39, align 8, !dbg !11721
  %bf.lshr62 = lshr i32 %bf.load61, 16, !dbg !11721
  %bf.clear63 = and i32 %bf.lshr62, 255, !dbg !11721
  %call64 = call %struct.table_elt* @lookup(%struct.rtx_def* %29, i32 %and60, i32 %bf.clear63), !dbg !11722
  store %struct.table_elt* %call64, %struct.table_elt** %p, align 8, !dbg !11723
  br label %if.end65, !dbg !11724

if.end65:                                         ; preds = %cond.end, %if.end43
  %40 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11725
  %tobool = icmp ne %struct.table_elt* %40, null, !dbg !11725
  br i1 %tobool, label %if.then66, label %if.end70, !dbg !11727

if.then66:                                        ; preds = %if.end65
  %41 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11728
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %41, i32 0, i32 6, !dbg !11730
  %42 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8, !dbg !11730
  store %struct.table_elt* %42, %struct.table_elt** %p, align 8, !dbg !11731
  %43 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11732
  %is_const = getelementptr inbounds %struct.table_elt, %struct.table_elt* %43, i32 0, i32 12, !dbg !11734
  %44 = load i8, i8* %is_const, align 2, !dbg !11734
  %tobool67 = icmp ne i8 %44, 0, !dbg !11732
  br i1 %tobool67, label %if.then68, label %if.end69, !dbg !11735

if.then68:                                        ; preds = %if.then66
  br label %while.end, !dbg !11736

if.end69:                                         ; preds = %if.then66
  br label %if.end70, !dbg !11737

if.end70:                                         ; preds = %if.end69, %if.end65
  br label %for.cond, !dbg !11738

for.cond:                                         ; preds = %for.inc, %if.end70
  %45 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11739
  %tobool71 = icmp ne %struct.table_elt* %45, null, !dbg !11742
  br i1 %tobool71, label %for.body, label %for.end, !dbg !11742

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %inner_mode, metadata !11743, metadata !DIExpression()), !dbg !11745
  %46 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11746
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %46, i32 0, i32 0, !dbg !11746
  %47 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !11746
  %48 = bitcast %struct.rtx_def* %47 to i32*, !dbg !11746
  %bf.load72 = load i32, i32* %48, align 8, !dbg !11746
  %bf.lshr73 = lshr i32 %bf.load72, 16, !dbg !11746
  %bf.clear74 = and i32 %bf.lshr73, 255, !dbg !11746
  store i32 %bf.clear74, i32* %inner_mode, align 4, !dbg !11745
  %49 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11747
  %exp75 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %49, i32 0, i32 0, !dbg !11749
  %50 = load %struct.rtx_def*, %struct.rtx_def** %exp75, align 8, !dbg !11749
  %51 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11750
  %exp76 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %51, i32 0, i32 0, !dbg !11751
  %52 = load %struct.rtx_def*, %struct.rtx_def** %exp76, align 8, !dbg !11751
  %call77 = call i32 @exp_equiv_p(%struct.rtx_def* %50, %struct.rtx_def* %52, i32 1, i8 zeroext 0), !dbg !11752
  %tobool78 = icmp ne i32 %call77, 0, !dbg !11752
  br i1 %tobool78, label %if.end80, label %if.then79, !dbg !11753

if.then79:                                        ; preds = %for.body
  br label %for.inc, !dbg !11754

if.end80:                                         ; preds = %for.body
  %53 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11755
  %exp81 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %53, i32 0, i32 0, !dbg !11755
  %54 = load %struct.rtx_def*, %struct.rtx_def** %exp81, align 8, !dbg !11755
  %55 = bitcast %struct.rtx_def* %54 to i32*, !dbg !11755
  %bf.load82 = load i32, i32* %55, align 8, !dbg !11755
  %bf.clear83 = and i32 %bf.load82, 65535, !dbg !11755
  %cmp84 = icmp eq i32 %bf.clear83, 48, !dbg !11757
  br i1 %cmp84, label %if.then126, label %lor.lhs.false86, !dbg !11758

lor.lhs.false86:                                  ; preds = %if.end80
  %56 = load i32, i32* %code.addr, align 4, !dbg !11759
  %cmp87 = icmp eq i32 %56, 80, !dbg !11760
  br i1 %cmp87, label %land.lhs.true117, label %lor.lhs.false89, !dbg !11761

lor.lhs.false89:                                  ; preds = %lor.lhs.false86
  %57 = load i32, i32* %code.addr, align 4, !dbg !11762
  %cmp90 = icmp eq i32 %57, 85, !dbg !11763
  br i1 %cmp90, label %land.lhs.true92, label %if.else128, !dbg !11764

land.lhs.true92:                                  ; preds = %lor.lhs.false89
  %58 = load i32, i32* %inner_mode, align 4, !dbg !11765
  %idxprom93 = zext i32 %58 to i64, !dbg !11765
  %arrayidx94 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom93, !dbg !11765
  %59 = load i8, i8* %arrayidx94, align 1, !dbg !11765
  %conv95 = zext i8 %59 to i32, !dbg !11765
  %cmp96 = icmp eq i32 %conv95, 2, !dbg !11766
  br i1 %cmp96, label %land.lhs.true98, label %if.else128, !dbg !11767

land.lhs.true98:                                  ; preds = %land.lhs.true92
  %60 = load i32, i32* %inner_mode, align 4, !dbg !11768
  %idxprom99 = zext i32 %60 to i64, !dbg !11768
  %arrayidx100 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom99, !dbg !11768
  %61 = load i8, i8* %arrayidx100, align 1, !dbg !11768
  %conv101 = zext i8 %61 to i16, !dbg !11768
  %conv102 = zext i16 %conv101 to i32, !dbg !11768
  %mul = mul nsw i32 %conv102, 8, !dbg !11768
  %conv103 = trunc i32 %mul to i16, !dbg !11768
  %conv104 = zext i16 %conv103 to i32, !dbg !11768
  %cmp105 = icmp sle i32 %conv104, 64, !dbg !11769
  br i1 %cmp105, label %land.lhs.true107, label %if.else128, !dbg !11770

land.lhs.true107:                                 ; preds = %land.lhs.true98
  %62 = load i32, i32* %inner_mode, align 4, !dbg !11771
  %idxprom108 = zext i32 %62 to i64, !dbg !11771
  %arrayidx109 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom108, !dbg !11771
  %63 = load i8, i8* %arrayidx109, align 1, !dbg !11771
  %conv110 = zext i8 %63 to i16, !dbg !11771
  %conv111 = zext i16 %conv110 to i32, !dbg !11771
  %mul112 = mul nsw i32 %conv111, 8, !dbg !11771
  %conv113 = trunc i32 %mul112 to i16, !dbg !11771
  %conv114 = zext i16 %conv113 to i32, !dbg !11771
  %sub = sub nsw i32 %conv114, 1, !dbg !11772
  %sh_prom = zext i32 %sub to i64, !dbg !11773
  %shl = shl i64 1, %sh_prom, !dbg !11773
  %and115 = and i64 1, %shl, !dbg !11774
  %tobool116 = icmp ne i64 %and115, 0, !dbg !11774
  br i1 %tobool116, label %land.lhs.true117, label %if.else128, !dbg !11775

land.lhs.true117:                                 ; preds = %land.lhs.true107, %lor.lhs.false86
  %64 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11776
  %exp118 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %64, i32 0, i32 0, !dbg !11776
  %65 = load %struct.rtx_def*, %struct.rtx_def** %exp118, align 8, !dbg !11776
  %66 = bitcast %struct.rtx_def* %65 to i32*, !dbg !11776
  %bf.load119 = load i32, i32* %66, align 8, !dbg !11776
  %bf.clear120 = and i32 %bf.load119, 65535, !dbg !11776
  %idxprom121 = sext i32 %bf.clear120 to i64, !dbg !11776
  %arrayidx122 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom121, !dbg !11776
  %67 = load i32, i32* %arrayidx122, align 4, !dbg !11776
  %and123 = and i32 %67, -2, !dbg !11776
  %cmp124 = icmp eq i32 %and123, 0, !dbg !11776
  br i1 %cmp124, label %if.then126, label %if.else128, !dbg !11777

if.then126:                                       ; preds = %land.lhs.true117, %if.end80
  %68 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11778
  %exp127 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %68, i32 0, i32 0, !dbg !11780
  %69 = load %struct.rtx_def*, %struct.rtx_def** %exp127, align 8, !dbg !11780
  store %struct.rtx_def* %69, %struct.rtx_def** %x, align 8, !dbg !11781
  br label %for.end, !dbg !11782

if.else128:                                       ; preds = %land.lhs.true117, %land.lhs.true107, %land.lhs.true98, %land.lhs.true92, %lor.lhs.false89
  %70 = load i32, i32* %code.addr, align 4, !dbg !11783
  %cmp129 = icmp eq i32 %70, 81, !dbg !11785
  br i1 %cmp129, label %land.lhs.true163, label %lor.lhs.false131, !dbg !11786

lor.lhs.false131:                                 ; preds = %if.else128
  %71 = load i32, i32* %code.addr, align 4, !dbg !11787
  %cmp132 = icmp eq i32 %71, 82, !dbg !11788
  br i1 %cmp132, label %land.lhs.true134, label %if.else174, !dbg !11789

land.lhs.true134:                                 ; preds = %lor.lhs.false131
  %72 = load i32, i32* %inner_mode, align 4, !dbg !11790
  %idxprom135 = zext i32 %72 to i64, !dbg !11790
  %arrayidx136 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom135, !dbg !11790
  %73 = load i8, i8* %arrayidx136, align 1, !dbg !11790
  %conv137 = zext i8 %73 to i32, !dbg !11790
  %cmp138 = icmp eq i32 %conv137, 2, !dbg !11791
  br i1 %cmp138, label %land.lhs.true140, label %if.else174, !dbg !11792

land.lhs.true140:                                 ; preds = %land.lhs.true134
  %74 = load i32, i32* %inner_mode, align 4, !dbg !11793
  %idxprom141 = zext i32 %74 to i64, !dbg !11793
  %arrayidx142 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom141, !dbg !11793
  %75 = load i8, i8* %arrayidx142, align 1, !dbg !11793
  %conv143 = zext i8 %75 to i16, !dbg !11793
  %conv144 = zext i16 %conv143 to i32, !dbg !11793
  %mul145 = mul nsw i32 %conv144, 8, !dbg !11793
  %conv146 = trunc i32 %mul145 to i16, !dbg !11793
  %conv147 = zext i16 %conv146 to i32, !dbg !11793
  %cmp148 = icmp sle i32 %conv147, 64, !dbg !11794
  br i1 %cmp148, label %land.lhs.true150, label %if.else174, !dbg !11795

land.lhs.true150:                                 ; preds = %land.lhs.true140
  %76 = load i32, i32* %inner_mode, align 4, !dbg !11796
  %idxprom151 = zext i32 %76 to i64, !dbg !11796
  %arrayidx152 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom151, !dbg !11796
  %77 = load i8, i8* %arrayidx152, align 1, !dbg !11796
  %conv153 = zext i8 %77 to i16, !dbg !11796
  %conv154 = zext i16 %conv153 to i32, !dbg !11796
  %mul155 = mul nsw i32 %conv154, 8, !dbg !11796
  %conv156 = trunc i32 %mul155 to i16, !dbg !11796
  %conv157 = zext i16 %conv156 to i32, !dbg !11796
  %sub158 = sub nsw i32 %conv157, 1, !dbg !11797
  %sh_prom159 = zext i32 %sub158 to i64, !dbg !11798
  %shl160 = shl i64 1, %sh_prom159, !dbg !11798
  %and161 = and i64 1, %shl160, !dbg !11799
  %tobool162 = icmp ne i64 %and161, 0, !dbg !11799
  br i1 %tobool162, label %land.lhs.true163, label %if.else174, !dbg !11800

land.lhs.true163:                                 ; preds = %land.lhs.true150, %if.else128
  %78 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11801
  %exp164 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %78, i32 0, i32 0, !dbg !11801
  %79 = load %struct.rtx_def*, %struct.rtx_def** %exp164, align 8, !dbg !11801
  %80 = bitcast %struct.rtx_def* %79 to i32*, !dbg !11801
  %bf.load165 = load i32, i32* %80, align 8, !dbg !11801
  %bf.clear166 = and i32 %bf.load165, 65535, !dbg !11801
  %idxprom167 = sext i32 %bf.clear166 to i64, !dbg !11801
  %arrayidx168 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom167, !dbg !11801
  %81 = load i32, i32* %arrayidx168, align 4, !dbg !11801
  %and169 = and i32 %81, -2, !dbg !11801
  %cmp170 = icmp eq i32 %and169, 0, !dbg !11801
  br i1 %cmp170, label %if.then172, label %if.else174, !dbg !11802

if.then172:                                       ; preds = %land.lhs.true163
  store i32 1, i32* %reverse_code, align 4, !dbg !11803
  %82 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11805
  %exp173 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %82, i32 0, i32 0, !dbg !11806
  %83 = load %struct.rtx_def*, %struct.rtx_def** %exp173, align 8, !dbg !11806
  store %struct.rtx_def* %83, %struct.rtx_def** %x, align 8, !dbg !11807
  br label %for.end, !dbg !11808

if.else174:                                       ; preds = %land.lhs.true163, %land.lhs.true150, %land.lhs.true140, %land.lhs.true134, %lor.lhs.false131
  %84 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11809
  %exp175 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %84, i32 0, i32 0, !dbg !11811
  %85 = load %struct.rtx_def*, %struct.rtx_def** %exp175, align 8, !dbg !11811
  %call176 = call i32 @rtx_addr_can_trap_p(%struct.rtx_def* %85), !dbg !11812
  %tobool177 = icmp ne i32 %call176, 0, !dbg !11812
  br i1 %tobool177, label %if.end180, label %if.then178, !dbg !11813

if.then178:                                       ; preds = %if.else174
  %86 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11814
  %exp179 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %86, i32 0, i32 0, !dbg !11816
  %87 = load %struct.rtx_def*, %struct.rtx_def** %exp179, align 8, !dbg !11816
  store %struct.rtx_def* %87, %struct.rtx_def** %arg1, align 8, !dbg !11817
  br label %for.inc, !dbg !11818

if.end180:                                        ; preds = %if.else174
  br label %if.end181

if.end181:                                        ; preds = %if.end180
  br label %if.end182

if.end182:                                        ; preds = %if.end181
  br label %for.inc, !dbg !11819

for.inc:                                          ; preds = %if.end182, %if.then178, %if.then79
  %88 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11820
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %88, i32 0, i32 4, !dbg !11821
  %89 = load %struct.table_elt*, %struct.table_elt** %next_same_value, align 8, !dbg !11821
  store %struct.table_elt* %89, %struct.table_elt** %p, align 8, !dbg !11822
  br label %for.cond, !dbg !11823, !llvm.loop !11824

for.end:                                          ; preds = %if.then172, %if.then126, %for.cond
  %90 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !11826
  %cmp183 = icmp eq %struct.rtx_def* %90, null, !dbg !11828
  br i1 %cmp183, label %if.then185, label %if.end186, !dbg !11829

if.then185:                                       ; preds = %for.end
  br label %while.end, !dbg !11830

if.end186:                                        ; preds = %for.end
  %91 = load i32, i32* %reverse_code, align 4, !dbg !11831
  %tobool187 = icmp ne i32 %91, 0, !dbg !11831
  br i1 %tobool187, label %if.then188, label %if.else195, !dbg !11833

if.then188:                                       ; preds = %if.end186
  call void @llvm.dbg.declare(metadata i32* %reversed, metadata !11834, metadata !DIExpression()), !dbg !11836
  %92 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !11837
  %call189 = call i32 @reversed_comparison_code(%struct.rtx_def* %92, %struct.rtx_def* null), !dbg !11838
  store i32 %call189, i32* %reversed, align 4, !dbg !11836
  %93 = load i32, i32* %reversed, align 4, !dbg !11839
  %cmp190 = icmp eq i32 %93, 0, !dbg !11841
  br i1 %cmp190, label %if.then192, label %if.else193, !dbg !11842

if.then192:                                       ; preds = %if.then188
  br label %while.end, !dbg !11843

if.else193:                                       ; preds = %if.then188
  %94 = load i32, i32* %reversed, align 4, !dbg !11844
  store i32 %94, i32* %code.addr, align 4, !dbg !11845
  br label %if.end194

if.end194:                                        ; preds = %if.else193
  br label %if.end207, !dbg !11846

if.else195:                                       ; preds = %if.end186
  %95 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !11847
  %96 = bitcast %struct.rtx_def* %95 to i32*, !dbg !11847
  %bf.load196 = load i32, i32* %96, align 8, !dbg !11847
  %bf.clear197 = and i32 %bf.load196, 65535, !dbg !11847
  %idxprom198 = sext i32 %bf.clear197 to i64, !dbg !11847
  %arrayidx199 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom198, !dbg !11847
  %97 = load i32, i32* %arrayidx199, align 4, !dbg !11847
  %and200 = and i32 %97, -2, !dbg !11847
  %cmp201 = icmp eq i32 %and200, 0, !dbg !11847
  br i1 %cmp201, label %if.then203, label %if.end206, !dbg !11849

if.then203:                                       ; preds = %if.else195
  %98 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !11850
  %99 = bitcast %struct.rtx_def* %98 to i32*, !dbg !11850
  %bf.load204 = load i32, i32* %99, align 8, !dbg !11850
  %bf.clear205 = and i32 %bf.load204, 65535, !dbg !11850
  store i32 %bf.clear205, i32* %code.addr, align 4, !dbg !11851
  br label %if.end206, !dbg !11852

if.end206:                                        ; preds = %if.then203, %if.else195
  br label %if.end207

if.end207:                                        ; preds = %if.end206, %if.end194
  %100 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !11853
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %100, i32 0, i32 1, !dbg !11853
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !11853
  %arrayidx208 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !11853
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx208 to %struct.rtx_def**, !dbg !11853
  %101 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !11853
  store %struct.rtx_def* %101, %struct.rtx_def** %arg1, align 8, !dbg !11854
  %102 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !11855
  %u209 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1, !dbg !11855
  %fld210 = bitcast %union.u* %u209 to [1 x %union.rtunion_def]*, !dbg !11855
  %arrayidx211 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld210, i64 0, i64 1, !dbg !11855
  %rt_rtx212 = bitcast %union.rtunion_def* %arrayidx211 to %struct.rtx_def**, !dbg !11855
  %103 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx212, align 8, !dbg !11855
  store %struct.rtx_def* %103, %struct.rtx_def** %arg2, align 8, !dbg !11856
  br label %while.cond, !dbg !11659, !llvm.loop !11857

while.end:                                        ; preds = %if.then192, %if.then185, %if.then68, %while.cond
  %104 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8, !dbg !11859
  %105 = bitcast %struct.rtx_def* %104 to i32*, !dbg !11859
  %bf.load213 = load i32, i32* %105, align 8, !dbg !11859
  %bf.lshr214 = lshr i32 %bf.load213, 16, !dbg !11859
  %bf.clear215 = and i32 %bf.lshr214, 255, !dbg !11859
  %106 = load i32*, i32** %pmode1.addr, align 8, !dbg !11860
  store i32 %bf.clear215, i32* %106, align 4, !dbg !11861
  %107 = load %struct.rtx_def*, %struct.rtx_def** %arg2, align 8, !dbg !11862
  %108 = bitcast %struct.rtx_def* %107 to i32*, !dbg !11862
  %bf.load216 = load i32, i32* %108, align 8, !dbg !11862
  %bf.lshr217 = lshr i32 %bf.load216, 16, !dbg !11862
  %bf.clear218 = and i32 %bf.lshr217, 255, !dbg !11862
  %109 = load i32*, i32** %pmode2.addr, align 8, !dbg !11863
  store i32 %bf.clear218, i32* %109, align 4, !dbg !11864
  %110 = load %struct.rtx_def*, %struct.rtx_def** %arg1, align 8, !dbg !11865
  %call219 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %110, %struct.rtx_def* null), !dbg !11866
  %111 = load %struct.rtx_def**, %struct.rtx_def*** %parg1.addr, align 8, !dbg !11867
  store %struct.rtx_def* %call219, %struct.rtx_def** %111, align 8, !dbg !11868
  %112 = load %struct.rtx_def*, %struct.rtx_def** %arg2, align 8, !dbg !11869
  %call220 = call %struct.rtx_def* @fold_rtx(%struct.rtx_def* %112, %struct.rtx_def* null), !dbg !11870
  %113 = load %struct.rtx_def**, %struct.rtx_def*** %parg2.addr, align 8, !dbg !11871
  store %struct.rtx_def* %call220, %struct.rtx_def** %113, align 8, !dbg !11872
  %114 = load i32, i32* %code.addr, align 4, !dbg !11873
  ret i32 %114, !dbg !11874
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @safe_hash(%struct.rtx_def* %x, i32 %mode) #0 !dbg !11875 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %dummy_do_not_record = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !11876, metadata !DIExpression()), !dbg !11877
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !11878, metadata !DIExpression()), !dbg !11879
  call void @llvm.dbg.declare(metadata i32* %dummy_do_not_record, metadata !11880, metadata !DIExpression()), !dbg !11881
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11882
  %1 = load i32, i32* %mode.addr, align 4, !dbg !11883
  %call = call i32 @hash_rtx(%struct.rtx_def* %0, i32 %1, i32* %dummy_do_not_record, i32* null, i8 zeroext 1), !dbg !11884
  ret i32 %call, !dbg !11885
}

declare dso_local %struct.rtx_def* @simplify_relational_operation(i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local i32 @comparison_dominates_p(i32, i32) #2

declare dso_local i32 @reverse_condition(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @lookup_as_function(%struct.rtx_def* %x, i32 %code) #0 !dbg !11886 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %code.addr = alloca i32, align 4
  %p = alloca %struct.table_elt*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !11889, metadata !DIExpression()), !dbg !11890
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !11891, metadata !DIExpression()), !dbg !11892
  call void @llvm.dbg.declare(metadata %struct.table_elt** %p, metadata !11893, metadata !DIExpression()), !dbg !11894
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11895
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11896
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !11896
  %bf.load = load i32, i32* %2, align 8, !dbg !11896
  %bf.clear = and i32 %bf.load, 65535, !dbg !11896
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !11896
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !11896

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11896
  %call = call i32 @rhs_regno(%struct.rtx_def* %3), !dbg !11896
  %cmp1 = icmp uge i32 %call, 53, !dbg !11896
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !11896

cond.true:                                        ; preds = %land.lhs.true
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11896
  %call2 = call i32 @rhs_regno(%struct.rtx_def* %4), !dbg !11896
  %call3 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call2), !dbg !11896
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call3, i32 0, i32 1, !dbg !11896
  %5 = load i32, i32* %reg_qty, align 4, !dbg !11896
  %add = add i32 4736, %5, !dbg !11896
  br label %cond.end, !dbg !11896

cond.false:                                       ; preds = %land.lhs.true, %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11896
  %call4 = call i32 @safe_hash(%struct.rtx_def* %6, i32 0), !dbg !11896
  br label %cond.end, !dbg !11896

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %call4, %cond.false ], !dbg !11896
  %and = and i32 %cond, 31, !dbg !11896
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !11897
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !11897
  %bf.load5 = load i32, i32* %8, align 8, !dbg !11897
  %bf.lshr = lshr i32 %bf.load5, 16, !dbg !11897
  %bf.clear6 = and i32 %bf.lshr, 255, !dbg !11897
  %call7 = call %struct.table_elt* @lookup(%struct.rtx_def* %0, i32 %and, i32 %bf.clear6), !dbg !11898
  store %struct.table_elt* %call7, %struct.table_elt** %p, align 8, !dbg !11894
  %9 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11899
  %cmp8 = icmp eq %struct.table_elt* %9, null, !dbg !11901
  br i1 %cmp8, label %if.then, label %if.end, !dbg !11902

if.then:                                          ; preds = %cond.end
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !11903
  br label %return, !dbg !11903

if.end:                                           ; preds = %cond.end
  %10 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11904
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %10, i32 0, i32 6, !dbg !11906
  %11 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8, !dbg !11906
  store %struct.table_elt* %11, %struct.table_elt** %p, align 8, !dbg !11907
  br label %for.cond, !dbg !11908

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11909
  %tobool = icmp ne %struct.table_elt* %12, null, !dbg !11911
  br i1 %tobool, label %for.body, label %for.end, !dbg !11911

for.body:                                         ; preds = %for.cond
  %13 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11912
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %13, i32 0, i32 0, !dbg !11912
  %14 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !11912
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !11912
  %bf.load9 = load i32, i32* %15, align 8, !dbg !11912
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !11912
  %16 = load i32, i32* %code.addr, align 4, !dbg !11914
  %cmp11 = icmp eq i32 %bf.clear10, %16, !dbg !11915
  br i1 %cmp11, label %land.lhs.true12, label %if.end19, !dbg !11916

land.lhs.true12:                                  ; preds = %for.body
  %17 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11917
  %exp13 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %17, i32 0, i32 0, !dbg !11918
  %18 = load %struct.rtx_def*, %struct.rtx_def** %exp13, align 8, !dbg !11918
  %19 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11919
  %exp14 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %19, i32 0, i32 0, !dbg !11920
  %20 = load %struct.rtx_def*, %struct.rtx_def** %exp14, align 8, !dbg !11920
  %call15 = call i32 @exp_equiv_p(%struct.rtx_def* %18, %struct.rtx_def* %20, i32 1, i8 zeroext 0), !dbg !11921
  %tobool16 = icmp ne i32 %call15, 0, !dbg !11921
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !11922

if.then17:                                        ; preds = %land.lhs.true12
  %21 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11923
  %exp18 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %21, i32 0, i32 0, !dbg !11924
  %22 = load %struct.rtx_def*, %struct.rtx_def** %exp18, align 8, !dbg !11924
  store %struct.rtx_def* %22, %struct.rtx_def** %retval, align 8, !dbg !11925
  br label %return, !dbg !11925

if.end19:                                         ; preds = %land.lhs.true12, %for.body
  br label %for.inc, !dbg !11926

for.inc:                                          ; preds = %if.end19
  %23 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !11927
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %23, i32 0, i32 4, !dbg !11928
  %24 = load %struct.table_elt*, %struct.table_elt** %next_same_value, align 8, !dbg !11928
  store %struct.table_elt* %24, %struct.table_elt** %p, align 8, !dbg !11929
  br label %for.cond, !dbg !11930, !llvm.loop !11931

for.end:                                          ; preds = %for.cond
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !11933
  br label %return, !dbg !11933

return:                                           ; preds = %for.end, %if.then17, %if.then
  %25 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !11934
  ret %struct.rtx_def* %25, !dbg !11934
}

declare dso_local %struct.rtx_def* @simplify_gen_binary(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @plus_constant(%struct.rtx_def*, i64) #2

declare dso_local i32 @exact_log2(i64) #2

declare dso_local %struct.rtx_def* @simplify_binary_operation(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local i32 @side_effects_p(%struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @simplify_ternary_operation(i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local i32 @subreg_lowpart_offset(i32, i32) #2

declare dso_local %struct.rtx_def* @gen_rtx_SUBREG(i32, %struct.rtx_def*, i32) #2

declare dso_local %struct.rtx_def* @simplify_subreg(i32, %struct.rtx_def*, i32, i32) #2

declare dso_local %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def*) #2

declare dso_local i32 @rtx_addr_can_trap_p(%struct.rtx_def*) #2

declare dso_local i32 @reversed_comparison_code(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @get_related_value(%struct.rtx_def*) #2

declare dso_local i64 @get_integer_term(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @compute_const_anchors(%struct.rtx_def* %cst, i64* %lower_base, i64* %lower_offs, i64* %upper_base, i64* %upper_offs) #0 !dbg !11935 {
entry:
  %retval = alloca i8, align 1
  %cst.addr = alloca %struct.rtx_def*, align 8
  %lower_base.addr = alloca i64*, align 8
  %lower_offs.addr = alloca i64*, align 8
  %upper_base.addr = alloca i64*, align 8
  %upper_offs.addr = alloca i64*, align 8
  %n = alloca i64, align 8
  store %struct.rtx_def* %cst, %struct.rtx_def** %cst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cst.addr, metadata !11939, metadata !DIExpression()), !dbg !11940
  store i64* %lower_base, i64** %lower_base.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %lower_base.addr, metadata !11941, metadata !DIExpression()), !dbg !11942
  store i64* %lower_offs, i64** %lower_offs.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %lower_offs.addr, metadata !11943, metadata !DIExpression()), !dbg !11944
  store i64* %upper_base, i64** %upper_base.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %upper_base.addr, metadata !11945, metadata !DIExpression()), !dbg !11946
  store i64* %upper_offs, i64** %upper_offs.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %upper_offs.addr, metadata !11947, metadata !DIExpression()), !dbg !11948
  call void @llvm.dbg.declare(metadata i64* %n, metadata !11949, metadata !DIExpression()), !dbg !11950
  %0 = load %struct.rtx_def*, %struct.rtx_def** %cst.addr, align 8, !dbg !11951
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !11951
  %hwint = bitcast %union.u* %u to [1 x i64]*, !dbg !11951
  %arrayidx = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !11951
  %1 = load i64, i64* %arrayidx, align 8, !dbg !11951
  store i64 %1, i64* %n, align 8, !dbg !11950
  %2 = load i64, i64* %n, align 8, !dbg !11952
  %3 = load i64, i64* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 87), align 8, !dbg !11953
  %sub = sub i64 %3, 1, !dbg !11954
  %neg = xor i64 %sub, -1, !dbg !11955
  %and = and i64 %2, %neg, !dbg !11956
  %4 = load i64*, i64** %lower_base.addr, align 8, !dbg !11957
  store i64 %and, i64* %4, align 8, !dbg !11958
  %5 = load i64*, i64** %lower_base.addr, align 8, !dbg !11959
  %6 = load i64, i64* %5, align 8, !dbg !11961
  %7 = load i64, i64* %n, align 8, !dbg !11962
  %cmp = icmp eq i64 %6, %7, !dbg !11963
  br i1 %cmp, label %if.then, label %if.end, !dbg !11964

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !11965
  br label %return, !dbg !11965

if.end:                                           ; preds = %entry
  %8 = load i64, i64* %n, align 8, !dbg !11966
  %9 = load i64, i64* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 87), align 8, !dbg !11967
  %sub1 = sub i64 %9, 1, !dbg !11968
  %add = add i64 %8, %sub1, !dbg !11969
  %10 = load i64, i64* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 87), align 8, !dbg !11970
  %sub2 = sub i64 %10, 1, !dbg !11971
  %neg3 = xor i64 %sub2, -1, !dbg !11972
  %and4 = and i64 %add, %neg3, !dbg !11973
  %11 = load i64*, i64** %upper_base.addr, align 8, !dbg !11974
  store i64 %and4, i64* %11, align 8, !dbg !11975
  %12 = load i64, i64* %n, align 8, !dbg !11976
  %13 = load i64*, i64** %upper_base.addr, align 8, !dbg !11977
  %14 = load i64, i64* %13, align 8, !dbg !11978
  %sub5 = sub nsw i64 %12, %14, !dbg !11979
  %15 = load i64*, i64** %upper_offs.addr, align 8, !dbg !11980
  store i64 %sub5, i64* %15, align 8, !dbg !11981
  %16 = load i64, i64* %n, align 8, !dbg !11982
  %17 = load i64*, i64** %lower_base.addr, align 8, !dbg !11983
  %18 = load i64, i64* %17, align 8, !dbg !11984
  %sub6 = sub nsw i64 %16, %18, !dbg !11985
  %19 = load i64*, i64** %lower_offs.addr, align 8, !dbg !11986
  store i64 %sub6, i64* %19, align 8, !dbg !11987
  store i8 1, i8* %retval, align 1, !dbg !11988
  br label %return, !dbg !11988

return:                                           ; preds = %if.end, %if.then
  %20 = load i8, i8* %retval, align 1, !dbg !11989
  ret i8 %20, !dbg !11989
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @find_reg_offset_for_const(%struct.table_elt* %anchor_elt, i64 %offs, i32* %old) #0 !dbg !11990 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %anchor_elt.addr = alloca %struct.table_elt*, align 8
  %offs.addr = alloca i64, align 8
  %old.addr = alloca i32*, align 8
  %elt = alloca %struct.table_elt*, align 8
  %idx = alloca i32, align 4
  %match_elt = alloca %struct.table_elt*, align 8
  %match = alloca %struct.rtx_def*, align 8
  %x = alloca %struct.rtx_def*, align 8
  store %struct.table_elt* %anchor_elt, %struct.table_elt** %anchor_elt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.table_elt** %anchor_elt.addr, metadata !11993, metadata !DIExpression()), !dbg !11994
  store i64 %offs, i64* %offs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offs.addr, metadata !11995, metadata !DIExpression()), !dbg !11996
  store i32* %old, i32** %old.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %old.addr, metadata !11997, metadata !DIExpression()), !dbg !11998
  call void @llvm.dbg.declare(metadata %struct.table_elt** %elt, metadata !11999, metadata !DIExpression()), !dbg !12000
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !12001, metadata !DIExpression()), !dbg !12002
  call void @llvm.dbg.declare(metadata %struct.table_elt** %match_elt, metadata !12003, metadata !DIExpression()), !dbg !12004
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %match, metadata !12005, metadata !DIExpression()), !dbg !12006
  store %struct.table_elt* null, %struct.table_elt** %match_elt, align 8, !dbg !12007
  store %struct.rtx_def* null, %struct.rtx_def** %match, align 8, !dbg !12008
  %0 = load %struct.table_elt*, %struct.table_elt** %anchor_elt.addr, align 8, !dbg !12009
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %0, i32 0, i32 6, !dbg !12011
  %1 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8, !dbg !12011
  store %struct.table_elt* %1, %struct.table_elt** %elt, align 8, !dbg !12012
  store i32 0, i32* %idx, align 4, !dbg !12013
  br label %for.cond, !dbg !12014

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12015
  %tobool = icmp ne %struct.table_elt* %2, null, !dbg !12017
  br i1 %tobool, label %for.body, label %for.end, !dbg !12017

for.body:                                         ; preds = %for.cond
  %3 = load %struct.table_elt*, %struct.table_elt** %match_elt, align 8, !dbg !12018
  %tobool1 = icmp ne %struct.table_elt* %3, null, !dbg !12018
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !12021

land.lhs.true:                                    ; preds = %for.body
  %4 = load %struct.table_elt*, %struct.table_elt** %match_elt, align 8, !dbg !12022
  %cost = getelementptr inbounds %struct.table_elt, %struct.table_elt* %4, i32 0, i32 8, !dbg !12022
  %5 = load i32, i32* %cost, align 8, !dbg !12022
  %6 = load %struct.table_elt*, %struct.table_elt** %match_elt, align 8, !dbg !12022
  %regcost = getelementptr inbounds %struct.table_elt, %struct.table_elt* %6, i32 0, i32 9, !dbg !12022
  %7 = load i32, i32* %regcost, align 4, !dbg !12022
  %8 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12022
  %cost2 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %8, i32 0, i32 8, !dbg !12022
  %9 = load i32, i32* %cost2, align 8, !dbg !12022
  %10 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12022
  %regcost3 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %10, i32 0, i32 9, !dbg !12022
  %11 = load i32, i32* %regcost3, align 4, !dbg !12022
  %call = call i32 @preferable(i32 %5, i32 %7, i32 %9, i32 %11), !dbg !12022
  %cmp = icmp slt i32 %call, 0, !dbg !12022
  br i1 %cmp, label %if.then, label %if.end, !dbg !12023

if.then:                                          ; preds = %land.lhs.true
  %12 = load %struct.rtx_def*, %struct.rtx_def** %match, align 8, !dbg !12024
  store %struct.rtx_def* %12, %struct.rtx_def** %retval, align 8, !dbg !12025
  br label %return, !dbg !12025

if.end:                                           ; preds = %land.lhs.true, %for.body
  %13 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12026
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %13, i32 0, i32 0, !dbg !12026
  %14 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !12026
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !12026
  %bf.load = load i32, i32* %15, align 8, !dbg !12026
  %bf.clear = and i32 %bf.load, 65535, !dbg !12026
  %cmp4 = icmp eq i32 %bf.clear, 37, !dbg !12026
  br i1 %cmp4, label %if.then23, label %lor.lhs.false, !dbg !12028

lor.lhs.false:                                    ; preds = %if.end
  %16 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12029
  %exp5 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %16, i32 0, i32 0, !dbg !12029
  %17 = load %struct.rtx_def*, %struct.rtx_def** %exp5, align 8, !dbg !12029
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !12029
  %bf.load6 = load i32, i32* %18, align 8, !dbg !12029
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !12029
  %cmp8 = icmp eq i32 %bf.clear7, 49, !dbg !12030
  br i1 %cmp8, label %land.lhs.true9, label %if.end58, !dbg !12031

land.lhs.true9:                                   ; preds = %lor.lhs.false
  %19 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12032
  %exp10 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %19, i32 0, i32 0, !dbg !12032
  %20 = load %struct.rtx_def*, %struct.rtx_def** %exp10, align 8, !dbg !12032
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !12032
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !12032
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !12032
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !12032
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !12032
  %22 = bitcast %struct.rtx_def* %21 to i32*, !dbg !12032
  %bf.load11 = load i32, i32* %22, align 8, !dbg !12032
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !12032
  %cmp13 = icmp eq i32 %bf.clear12, 37, !dbg !12032
  br i1 %cmp13, label %land.lhs.true14, label %if.end58, !dbg !12033

land.lhs.true14:                                  ; preds = %land.lhs.true9
  %23 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12034
  %exp15 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %23, i32 0, i32 0, !dbg !12034
  %24 = load %struct.rtx_def*, %struct.rtx_def** %exp15, align 8, !dbg !12034
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !12034
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !12034
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 1, !dbg !12034
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !12034
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !12034
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !12034
  %bf.load20 = load i32, i32* %26, align 8, !dbg !12034
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !12034
  %cmp22 = icmp eq i32 %bf.clear21, 30, !dbg !12035
  br i1 %cmp22, label %if.then23, label %if.end58, !dbg !12036

if.then23:                                        ; preds = %land.lhs.true14, %if.end
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !12037, metadata !DIExpression()), !dbg !12039
  %27 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12040
  %exp24 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %27, i32 0, i32 0, !dbg !12040
  %28 = load %struct.rtx_def*, %struct.rtx_def** %exp24, align 8, !dbg !12040
  %29 = bitcast %struct.rtx_def* %28 to i32*, !dbg !12040
  %bf.load25 = load i32, i32* %29, align 8, !dbg !12040
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !12040
  %cmp27 = icmp eq i32 %bf.clear26, 37, !dbg !12040
  br i1 %cmp27, label %if.end34, label %land.lhs.true28, !dbg !12042

land.lhs.true28:                                  ; preds = %if.then23
  %30 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12043
  %exp29 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %30, i32 0, i32 0, !dbg !12044
  %31 = load %struct.rtx_def*, %struct.rtx_def** %exp29, align 8, !dbg !12044
  %32 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12045
  %exp30 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %32, i32 0, i32 0, !dbg !12046
  %33 = load %struct.rtx_def*, %struct.rtx_def** %exp30, align 8, !dbg !12046
  %call31 = call i32 @exp_equiv_p(%struct.rtx_def* %31, %struct.rtx_def* %33, i32 1, i8 zeroext 0), !dbg !12047
  %tobool32 = icmp ne i32 %call31, 0, !dbg !12047
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !12048

if.then33:                                        ; preds = %land.lhs.true28
  br label %for.inc, !dbg !12049

if.end34:                                         ; preds = %land.lhs.true28, %if.then23
  %34 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12050
  %exp35 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %34, i32 0, i32 0, !dbg !12051
  %35 = load %struct.rtx_def*, %struct.rtx_def** %exp35, align 8, !dbg !12051
  %36 = load i64, i64* %offs.addr, align 8, !dbg !12052
  %call36 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %35, i64 %36), !dbg !12053
  store %struct.rtx_def* %call36, %struct.rtx_def** %x, align 8, !dbg !12054
  %37 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !12055
  %38 = bitcast %struct.rtx_def* %37 to i32*, !dbg !12055
  %bf.load37 = load i32, i32* %38, align 8, !dbg !12055
  %bf.clear38 = and i32 %bf.load37, 65535, !dbg !12055
  %cmp39 = icmp eq i32 %bf.clear38, 37, !dbg !12055
  br i1 %cmp39, label %if.then56, label %lor.lhs.false40, !dbg !12057

lor.lhs.false40:                                  ; preds = %if.end34
  %39 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !12058
  %40 = bitcast %struct.rtx_def* %39 to i32*, !dbg !12058
  %bf.load41 = load i32, i32* %40, align 8, !dbg !12058
  %bf.clear42 = and i32 %bf.load41, 65535, !dbg !12058
  %cmp43 = icmp eq i32 %bf.clear42, 49, !dbg !12059
  br i1 %cmp43, label %land.lhs.true44, label %if.end57, !dbg !12060

land.lhs.true44:                                  ; preds = %lor.lhs.false40
  %41 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !12061
  %u45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !12061
  %fld46 = bitcast %union.u* %u45 to [1 x %union.rtunion_def]*, !dbg !12061
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i64 0, i64 1, !dbg !12061
  %rt_rtx48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**, !dbg !12061
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx48, align 8, !dbg !12061
  %u49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !12061
  %hwint = bitcast %union.u* %u49 to [1 x i64]*, !dbg !12061
  %arrayidx50 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !12061
  %43 = load i64, i64* %arrayidx50, align 8, !dbg !12061
  %44 = load i64, i64* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 87), align 8, !dbg !12061
  %sub = sub i64 0, %44, !dbg !12061
  %sub51 = sub i64 %43, %sub, !dbg !12061
  %45 = load i64, i64* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 87), align 8, !dbg !12061
  %sub52 = sub i64 %45, 1, !dbg !12061
  %46 = load i64, i64* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 87), align 8, !dbg !12061
  %sub53 = sub i64 0, %46, !dbg !12061
  %sub54 = sub i64 %sub52, %sub53, !dbg !12061
  %cmp55 = icmp ule i64 %sub51, %sub54, !dbg !12061
  br i1 %cmp55, label %if.then56, label %if.end57, !dbg !12062

if.then56:                                        ; preds = %land.lhs.true44, %if.end34
  %47 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !12063
  store %struct.rtx_def* %47, %struct.rtx_def** %match, align 8, !dbg !12065
  %48 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12066
  store %struct.table_elt* %48, %struct.table_elt** %match_elt, align 8, !dbg !12067
  %49 = load i32, i32* %idx, align 4, !dbg !12068
  %50 = load i32*, i32** %old.addr, align 8, !dbg !12069
  store i32 %49, i32* %50, align 4, !dbg !12070
  br label %if.end57, !dbg !12071

if.end57:                                         ; preds = %if.then56, %land.lhs.true44, %lor.lhs.false40
  br label %if.end58, !dbg !12072

if.end58:                                         ; preds = %if.end57, %land.lhs.true14, %land.lhs.true9, %lor.lhs.false
  br label %for.inc, !dbg !12073

for.inc:                                          ; preds = %if.end58, %if.then33
  %51 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12074
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %51, i32 0, i32 4, !dbg !12075
  %52 = load %struct.table_elt*, %struct.table_elt** %next_same_value, align 8, !dbg !12075
  store %struct.table_elt* %52, %struct.table_elt** %elt, align 8, !dbg !12076
  %53 = load i32, i32* %idx, align 4, !dbg !12077
  %inc = add i32 %53, 1, !dbg !12077
  store i32 %inc, i32* %idx, align 4, !dbg !12077
  br label %for.cond, !dbg !12078, !llvm.loop !12079

for.end:                                          ; preds = %for.cond
  %54 = load %struct.rtx_def*, %struct.rtx_def** %match, align 8, !dbg !12081
  store %struct.rtx_def* %54, %struct.rtx_def** %retval, align 8, !dbg !12082
  br label %return, !dbg !12082

return:                                           ; preds = %for.end, %if.then
  %55 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !12083
  ret %struct.rtx_def* %55, !dbg !12083
}

declare dso_local i32 @subreg_lowpart_p(%struct.rtx_def*) #2

declare dso_local i32 @rtx_cost(%struct.rtx_def*, i32, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @approx_reg_cost_1(%struct.rtx_def** %xp, i8* %data) #0 !dbg !12084 {
entry:
  %retval = alloca i32, align 4
  %xp.addr = alloca %struct.rtx_def**, align 8
  %data.addr = alloca i8*, align 8
  %x = alloca %struct.rtx_def*, align 8
  %cost_p = alloca i32*, align 8
  %regno = alloca i32, align 4
  store %struct.rtx_def** %xp, %struct.rtx_def*** %xp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %xp.addr, metadata !12085, metadata !DIExpression()), !dbg !12086
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !12087, metadata !DIExpression()), !dbg !12088
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !12089, metadata !DIExpression()), !dbg !12090
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %xp.addr, align 8, !dbg !12091
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !12092
  store %struct.rtx_def* %1, %struct.rtx_def** %x, align 8, !dbg !12090
  call void @llvm.dbg.declare(metadata i32** %cost_p, metadata !12093, metadata !DIExpression()), !dbg !12094
  %2 = load i8*, i8** %data.addr, align 8, !dbg !12095
  %3 = bitcast i8* %2 to i32*, !dbg !12096
  store i32* %3, i32** %cost_p, align 8, !dbg !12094
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !12097
  %tobool = icmp ne %struct.rtx_def* %4, null, !dbg !12097
  br i1 %tobool, label %land.lhs.true, label %if.end34, !dbg !12099

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !12100
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !12100
  %bf.load = load i32, i32* %6, align 8, !dbg !12100
  %bf.clear = and i32 %bf.load, 65535, !dbg !12100
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !12100
  br i1 %cmp, label %if.then, label %if.end34, !dbg !12101

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !12102, metadata !DIExpression()), !dbg !12104
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !12105
  %call = call i32 @rhs_regno(%struct.rtx_def* %7), !dbg !12105
  store i32 %call, i32* %regno, align 4, !dbg !12104
  %8 = load i32, i32* %regno, align 4, !dbg !12106
  %cmp1 = icmp eq i32 %8, 7, !dbg !12106
  br i1 %cmp1, label %if.end33, label %lor.lhs.false, !dbg !12106

lor.lhs.false:                                    ; preds = %if.then
  %9 = load i32, i32* %regno, align 4, !dbg !12106
  %cmp2 = icmp eq i32 %9, 20, !dbg !12106
  br i1 %cmp2, label %if.end33, label %lor.lhs.false3, !dbg !12106

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %10 = load i32, i32* %regno, align 4, !dbg !12106
  %cmp4 = icmp eq i32 %10, 6, !dbg !12106
  br i1 %cmp4, label %if.end33, label %lor.lhs.false5, !dbg !12106

lor.lhs.false5:                                   ; preds = %lor.lhs.false3
  %11 = load i32, i32* %regno, align 4, !dbg !12106
  %cmp6 = icmp eq i32 %11, 16, !dbg !12106
  br i1 %cmp6, label %if.end33, label %lor.lhs.false7, !dbg !12106

lor.lhs.false7:                                   ; preds = %lor.lhs.false5
  %12 = load i32, i32* %regno, align 4, !dbg !12106
  %cmp8 = icmp uge i32 %12, 53, !dbg !12106
  br i1 %cmp8, label %land.lhs.true9, label %lor.lhs.false11, !dbg !12106

land.lhs.true9:                                   ; preds = %lor.lhs.false7
  %13 = load i32, i32* %regno, align 4, !dbg !12106
  %cmp10 = icmp ule i32 %13, 57, !dbg !12106
  br i1 %cmp10, label %if.end33, label %lor.lhs.false11, !dbg !12106

lor.lhs.false11:                                  ; preds = %land.lhs.true9, %lor.lhs.false7
  %14 = load i32, i32* %regno, align 4, !dbg !12106
  %cmp12 = icmp ult i32 %14, 53, !dbg !12106
  br i1 %cmp12, label %land.lhs.true13, label %if.then29, !dbg !12106

land.lhs.true13:                                  ; preds = %lor.lhs.false11
  %15 = load i32, i32* %regno, align 4, !dbg !12106
  %cmp14 = icmp eq i32 %15, 20, !dbg !12106
  br i1 %cmp14, label %land.lhs.true24, label %lor.lhs.false15, !dbg !12106

lor.lhs.false15:                                  ; preds = %land.lhs.true13
  %16 = load i32, i32* %regno, align 4, !dbg !12106
  %cmp16 = icmp eq i32 %16, 6, !dbg !12106
  br i1 %cmp16, label %land.lhs.true24, label %lor.lhs.false17, !dbg !12106

lor.lhs.false17:                                  ; preds = %lor.lhs.false15
  %17 = load i32, i32* %regno, align 4, !dbg !12106
  %idxprom = zext i32 %17 to i64, !dbg !12106
  %arrayidx = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %idxprom, !dbg !12106
  %18 = load i8, i8* %arrayidx, align 1, !dbg !12106
  %conv = sext i8 %18 to i32, !dbg !12106
  %tobool18 = icmp ne i32 %conv, 0, !dbg !12106
  br i1 %tobool18, label %land.lhs.true24, label %lor.lhs.false19, !dbg !12106

lor.lhs.false19:                                  ; preds = %lor.lhs.false17
  %19 = load i32, i32* %regno, align 4, !dbg !12106
  %idxprom20 = zext i32 %19 to i64, !dbg !12106
  %arrayidx21 = getelementptr inbounds [53 x i8], [53 x i8]* @global_regs, i64 0, i64 %idxprom20, !dbg !12106
  %20 = load i8, i8* %arrayidx21, align 1, !dbg !12106
  %conv22 = sext i8 %20 to i32, !dbg !12106
  %tobool23 = icmp ne i32 %conv22, 0, !dbg !12106
  br i1 %tobool23, label %land.lhs.true24, label %if.then29, !dbg !12106

land.lhs.true24:                                  ; preds = %lor.lhs.false19, %lor.lhs.false17, %lor.lhs.false15, %land.lhs.true13
  %21 = load i32, i32* %regno, align 4, !dbg !12106
  %idxprom25 = zext i32 %21 to i64, !dbg !12106
  %arrayidx26 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom25, !dbg !12106
  %22 = load i32, i32* %arrayidx26, align 4, !dbg !12106
  %cmp27 = icmp ne i32 %22, 0, !dbg !12106
  br i1 %cmp27, label %if.end33, label %if.then29, !dbg !12108

if.then29:                                        ; preds = %land.lhs.true24, %lor.lhs.false19, %lor.lhs.false11
  %23 = load i32, i32* %regno, align 4, !dbg !12109
  %cmp30 = icmp ult i32 %23, 53, !dbg !12112
  br i1 %cmp30, label %if.then32, label %if.else, !dbg !12113

if.then32:                                        ; preds = %if.then29
  store i32 1, i32* %retval, align 4, !dbg !12114
  br label %return, !dbg !12114

if.else:                                          ; preds = %if.then29
  %24 = load i32*, i32** %cost_p, align 8, !dbg !12117
  %25 = load i32, i32* %24, align 4, !dbg !12118
  %add = add nsw i32 %25, 1, !dbg !12118
  store i32 %add, i32* %24, align 4, !dbg !12118
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %if.end33, !dbg !12119

if.end33:                                         ; preds = %if.end, %land.lhs.true24, %land.lhs.true9, %lor.lhs.false5, %lor.lhs.false3, %lor.lhs.false, %if.then
  br label %if.end34, !dbg !12120

if.end34:                                         ; preds = %if.end33, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !12121
  br label %return, !dbg !12121

return:                                           ; preds = %if.end34, %if.then32
  %26 = load i32, i32* %retval, align 4, !dbg !12122
  ret i32 %26, !dbg !12122
}

; Function Attrs: noinline nounwind uwtable
define internal void @make_regs_eqv(i32 %new_reg, i32 %old_reg) #0 !dbg !12123 {
entry:
  %new_reg.addr = alloca i32, align 4
  %old_reg.addr = alloca i32, align 4
  %lastr = alloca i32, align 4
  %firstr = alloca i32, align 4
  %q = alloca i32, align 4
  %ent = alloca %struct.qty_table_elem*, align 8
  store i32 %new_reg, i32* %new_reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_reg.addr, metadata !12126, metadata !DIExpression()), !dbg !12127
  store i32 %old_reg, i32* %old_reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %old_reg.addr, metadata !12128, metadata !DIExpression()), !dbg !12129
  call void @llvm.dbg.declare(metadata i32* %lastr, metadata !12130, metadata !DIExpression()), !dbg !12131
  call void @llvm.dbg.declare(metadata i32* %firstr, metadata !12132, metadata !DIExpression()), !dbg !12133
  call void @llvm.dbg.declare(metadata i32* %q, metadata !12134, metadata !DIExpression()), !dbg !12135
  %0 = load i32, i32* %old_reg.addr, align 4, !dbg !12136
  %call = call %struct.cse_reg_info* @get_cse_reg_info(i32 %0), !dbg !12136
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call, i32 0, i32 1, !dbg !12136
  %1 = load i32, i32* %reg_qty, align 4, !dbg !12136
  store i32 %1, i32* %q, align 4, !dbg !12135
  call void @llvm.dbg.declare(metadata %struct.qty_table_elem** %ent, metadata !12137, metadata !DIExpression()), !dbg !12138
  %2 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8, !dbg !12139
  %3 = load i32, i32* %q, align 4, !dbg !12140
  %idxprom = sext i32 %3 to i64, !dbg !12139
  %arrayidx = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %2, i64 %idxprom, !dbg !12139
  store %struct.qty_table_elem* %arrayidx, %struct.qty_table_elem** %ent, align 8, !dbg !12141
  %4 = load i32, i32* %old_reg.addr, align 4, !dbg !12142
  %call1 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %4), !dbg !12142
  %reg_qty2 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call1, i32 0, i32 1, !dbg !12142
  %5 = load i32, i32* %reg_qty2, align 4, !dbg !12142
  %cmp = icmp sge i32 %5, 0, !dbg !12142
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !12142

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32 938, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)), !dbg !12142
  br label %cond.end, !dbg !12142

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !12142

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !12142
  %6 = load i32, i32* %q, align 4, !dbg !12143
  %7 = load i32, i32* %new_reg.addr, align 4, !dbg !12144
  %call3 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %7), !dbg !12144
  %reg_qty4 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call3, i32 0, i32 1, !dbg !12144
  store i32 %6, i32* %reg_qty4, align 4, !dbg !12145
  %8 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !12146
  %first_reg = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %8, i32 0, i32 4, !dbg !12147
  %9 = load i32, i32* %first_reg, align 4, !dbg !12147
  store i32 %9, i32* %firstr, align 4, !dbg !12148
  %10 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !12149
  %last_reg = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %10, i32 0, i32 5, !dbg !12150
  %11 = load i32, i32* %last_reg, align 8, !dbg !12150
  store i32 %11, i32* %lastr, align 4, !dbg !12151
  %12 = load i32, i32* %firstr, align 4, !dbg !12152
  %cmp5 = icmp ult i32 %12, 53, !dbg !12154
  br i1 %cmp5, label %land.lhs.true, label %land.lhs.true16, !dbg !12155

land.lhs.true:                                    ; preds = %cond.end
  %13 = load i32, i32* %firstr, align 4, !dbg !12156
  %cmp6 = icmp eq i32 %13, 20, !dbg !12156
  br i1 %cmp6, label %if.else, label %lor.lhs.false, !dbg !12156

lor.lhs.false:                                    ; preds = %land.lhs.true
  %14 = load i32, i32* %firstr, align 4, !dbg !12156
  %cmp7 = icmp eq i32 %14, 6, !dbg !12156
  br i1 %cmp7, label %if.else, label %lor.lhs.false8, !dbg !12156

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %15 = load i32, i32* %firstr, align 4, !dbg !12156
  %idxprom9 = zext i32 %15 to i64, !dbg !12156
  %arrayidx10 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %idxprom9, !dbg !12156
  %16 = load i8, i8* %arrayidx10, align 1, !dbg !12156
  %conv = sext i8 %16 to i32, !dbg !12156
  %tobool = icmp ne i32 %conv, 0, !dbg !12156
  br i1 %tobool, label %if.else, label %lor.lhs.false11, !dbg !12156

lor.lhs.false11:                                  ; preds = %lor.lhs.false8
  %17 = load i32, i32* %firstr, align 4, !dbg !12156
  %idxprom12 = zext i32 %17 to i64, !dbg !12156
  %arrayidx13 = getelementptr inbounds [53 x i8], [53 x i8]* @global_regs, i64 0, i64 %idxprom12, !dbg !12156
  %18 = load i8, i8* %arrayidx13, align 1, !dbg !12156
  %conv14 = sext i8 %18 to i32, !dbg !12156
  %tobool15 = icmp ne i32 %conv14, 0, !dbg !12156
  br i1 %tobool15, label %if.else, label %land.lhs.true16, !dbg !12157

land.lhs.true16:                                  ; preds = %lor.lhs.false11, %cond.end
  %19 = load i32, i32* %new_reg.addr, align 4, !dbg !12158
  %cmp17 = icmp uge i32 %19, 53, !dbg !12159
  br i1 %cmp17, label %land.lhs.true24, label %lor.lhs.false19, !dbg !12160

lor.lhs.false19:                                  ; preds = %land.lhs.true16
  %20 = load i32, i32* %new_reg.addr, align 4, !dbg !12161
  %idxprom20 = zext i32 %20 to i64, !dbg !12161
  %arrayidx21 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom20, !dbg !12161
  %21 = load i32, i32* %arrayidx21, align 4, !dbg !12161
  %cmp22 = icmp ne i32 %21, 0, !dbg !12162
  br i1 %cmp22, label %land.lhs.true24, label %if.else, !dbg !12163

land.lhs.true24:                                  ; preds = %lor.lhs.false19, %land.lhs.true16
  %22 = load i32, i32* %new_reg.addr, align 4, !dbg !12164
  %cmp25 = icmp ult i32 %22, 53, !dbg !12165
  br i1 %cmp25, label %land.lhs.true27, label %lor.lhs.false43, !dbg !12166

land.lhs.true27:                                  ; preds = %land.lhs.true24
  %23 = load i32, i32* %new_reg.addr, align 4, !dbg !12167
  %cmp28 = icmp eq i32 %23, 20, !dbg !12167
  br i1 %cmp28, label %if.then, label %lor.lhs.false30, !dbg !12167

lor.lhs.false30:                                  ; preds = %land.lhs.true27
  %24 = load i32, i32* %new_reg.addr, align 4, !dbg !12167
  %cmp31 = icmp eq i32 %24, 6, !dbg !12167
  br i1 %cmp31, label %if.then, label %lor.lhs.false33, !dbg !12167

lor.lhs.false33:                                  ; preds = %lor.lhs.false30
  %25 = load i32, i32* %new_reg.addr, align 4, !dbg !12167
  %idxprom34 = zext i32 %25 to i64, !dbg !12167
  %arrayidx35 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %idxprom34, !dbg !12167
  %26 = load i8, i8* %arrayidx35, align 1, !dbg !12167
  %conv36 = sext i8 %26 to i32, !dbg !12167
  %tobool37 = icmp ne i32 %conv36, 0, !dbg !12167
  br i1 %tobool37, label %if.then, label %lor.lhs.false38, !dbg !12167

lor.lhs.false38:                                  ; preds = %lor.lhs.false33
  %27 = load i32, i32* %new_reg.addr, align 4, !dbg !12167
  %idxprom39 = zext i32 %27 to i64, !dbg !12167
  %arrayidx40 = getelementptr inbounds [53 x i8], [53 x i8]* @global_regs, i64 0, i64 %idxprom39, !dbg !12167
  %28 = load i8, i8* %arrayidx40, align 1, !dbg !12167
  %conv41 = sext i8 %28 to i32, !dbg !12167
  %tobool42 = icmp ne i32 %conv41, 0, !dbg !12167
  br i1 %tobool42, label %if.then, label %lor.lhs.false43, !dbg !12168

lor.lhs.false43:                                  ; preds = %lor.lhs.false38, %land.lhs.true24
  %29 = load i32, i32* %new_reg.addr, align 4, !dbg !12169
  %cmp44 = icmp uge i32 %29, 53, !dbg !12170
  br i1 %cmp44, label %land.lhs.true46, label %if.else, !dbg !12171

land.lhs.true46:                                  ; preds = %lor.lhs.false43
  %30 = load i32, i32* %firstr, align 4, !dbg !12172
  %cmp47 = icmp ult i32 %30, 53, !dbg !12173
  br i1 %cmp47, label %if.then, label %lor.lhs.false49, !dbg !12174

lor.lhs.false49:                                  ; preds = %land.lhs.true46
  %31 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @cse_ebb_live_out, align 8, !dbg !12175
  %32 = load i32, i32* %new_reg.addr, align 4, !dbg !12176
  %call50 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %31, i32 %32), !dbg !12177
  %tobool51 = icmp ne i32 %call50, 0, !dbg !12177
  br i1 %tobool51, label %land.lhs.true52, label %lor.lhs.false55, !dbg !12178

land.lhs.true52:                                  ; preds = %lor.lhs.false49
  %33 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @cse_ebb_live_out, align 8, !dbg !12179
  %34 = load i32, i32* %firstr, align 4, !dbg !12180
  %call53 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %33, i32 %34), !dbg !12181
  %tobool54 = icmp ne i32 %call53, 0, !dbg !12181
  br i1 %tobool54, label %lor.lhs.false55, label %if.then, !dbg !12182

lor.lhs.false55:                                  ; preds = %land.lhs.true52, %lor.lhs.false49
  %35 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @cse_ebb_live_in, align 8, !dbg !12183
  %36 = load i32, i32* %new_reg.addr, align 4, !dbg !12184
  %call56 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %35, i32 %36), !dbg !12185
  %tobool57 = icmp ne i32 %call56, 0, !dbg !12185
  br i1 %tobool57, label %land.lhs.true58, label %if.else, !dbg !12186

land.lhs.true58:                                  ; preds = %lor.lhs.false55
  %37 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @cse_ebb_live_in, align 8, !dbg !12187
  %38 = load i32, i32* %firstr, align 4, !dbg !12188
  %call59 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %37, i32 %38), !dbg !12189
  %tobool60 = icmp ne i32 %call59, 0, !dbg !12189
  br i1 %tobool60, label %if.else, label %if.then, !dbg !12190

if.then:                                          ; preds = %land.lhs.true58, %land.lhs.true52, %land.lhs.true46, %lor.lhs.false38, %lor.lhs.false33, %lor.lhs.false30, %land.lhs.true27
  %39 = load i32, i32* %new_reg.addr, align 4, !dbg !12191
  %40 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8, !dbg !12193
  %41 = load i32, i32* %firstr, align 4, !dbg !12194
  %idxprom61 = zext i32 %41 to i64, !dbg !12193
  %arrayidx62 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %40, i64 %idxprom61, !dbg !12193
  %prev = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx62, i32 0, i32 1, !dbg !12195
  store i32 %39, i32* %prev, align 4, !dbg !12196
  %42 = load i32, i32* %firstr, align 4, !dbg !12197
  %43 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8, !dbg !12198
  %44 = load i32, i32* %new_reg.addr, align 4, !dbg !12199
  %idxprom63 = zext i32 %44 to i64, !dbg !12198
  %arrayidx64 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %43, i64 %idxprom63, !dbg !12198
  %next = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx64, i32 0, i32 0, !dbg !12200
  store i32 %42, i32* %next, align 4, !dbg !12201
  %45 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8, !dbg !12202
  %46 = load i32, i32* %new_reg.addr, align 4, !dbg !12203
  %idxprom65 = zext i32 %46 to i64, !dbg !12202
  %arrayidx66 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %45, i64 %idxprom65, !dbg !12202
  %prev67 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx66, i32 0, i32 1, !dbg !12204
  store i32 -1, i32* %prev67, align 4, !dbg !12205
  %47 = load i32, i32* %new_reg.addr, align 4, !dbg !12206
  %48 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !12207
  %first_reg68 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %48, i32 0, i32 4, !dbg !12208
  store i32 %47, i32* %first_reg68, align 4, !dbg !12209
  br label %if.end131, !dbg !12210

if.else:                                          ; preds = %land.lhs.true58, %lor.lhs.false55, %lor.lhs.false43, %lor.lhs.false19, %lor.lhs.false11, %lor.lhs.false8, %lor.lhs.false, %land.lhs.true
  br label %while.cond, !dbg !12211

while.cond:                                       ; preds = %while.body, %if.else
  %49 = load i32, i32* %lastr, align 4, !dbg !12213
  %cmp69 = icmp ult i32 %49, 53, !dbg !12214
  br i1 %cmp69, label %land.lhs.true71, label %land.end, !dbg !12215

land.lhs.true71:                                  ; preds = %while.cond
  %50 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8, !dbg !12216
  %51 = load i32, i32* %lastr, align 4, !dbg !12217
  %idxprom72 = zext i32 %51 to i64, !dbg !12216
  %arrayidx73 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %50, i64 %idxprom72, !dbg !12216
  %prev74 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx73, i32 0, i32 1, !dbg !12218
  %52 = load i32, i32* %prev74, align 4, !dbg !12218
  %cmp75 = icmp sge i32 %52, 0, !dbg !12219
  br i1 %cmp75, label %land.lhs.true77, label %land.end, !dbg !12220

land.lhs.true77:                                  ; preds = %land.lhs.true71
  %53 = load i32, i32* %lastr, align 4, !dbg !12221
  %idxprom78 = zext i32 %53 to i64, !dbg !12221
  %arrayidx79 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom78, !dbg !12221
  %54 = load i32, i32* %arrayidx79, align 4, !dbg !12221
  %cmp80 = icmp eq i32 %54, 0, !dbg !12222
  br i1 %cmp80, label %land.rhs, label %lor.lhs.false82, !dbg !12223

lor.lhs.false82:                                  ; preds = %land.lhs.true77
  %55 = load i32, i32* %lastr, align 4, !dbg !12224
  %cmp83 = icmp eq i32 %55, 20, !dbg !12224
  br i1 %cmp83, label %land.end, label %lor.lhs.false85, !dbg !12224

lor.lhs.false85:                                  ; preds = %lor.lhs.false82
  %56 = load i32, i32* %lastr, align 4, !dbg !12224
  %cmp86 = icmp eq i32 %56, 6, !dbg !12224
  br i1 %cmp86, label %land.end, label %lor.lhs.false88, !dbg !12224

lor.lhs.false88:                                  ; preds = %lor.lhs.false85
  %57 = load i32, i32* %lastr, align 4, !dbg !12224
  %idxprom89 = zext i32 %57 to i64, !dbg !12224
  %arrayidx90 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %idxprom89, !dbg !12224
  %58 = load i8, i8* %arrayidx90, align 1, !dbg !12224
  %conv91 = sext i8 %58 to i32, !dbg !12224
  %tobool92 = icmp ne i32 %conv91, 0, !dbg !12224
  br i1 %tobool92, label %land.end, label %lor.lhs.false93, !dbg !12224

lor.lhs.false93:                                  ; preds = %lor.lhs.false88
  %59 = load i32, i32* %lastr, align 4, !dbg !12224
  %idxprom94 = zext i32 %59 to i64, !dbg !12224
  %arrayidx95 = getelementptr inbounds [53 x i8], [53 x i8]* @global_regs, i64 0, i64 %idxprom94, !dbg !12224
  %60 = load i8, i8* %arrayidx95, align 1, !dbg !12224
  %conv96 = sext i8 %60 to i32, !dbg !12224
  %tobool97 = icmp ne i32 %conv96, 0, !dbg !12224
  br i1 %tobool97, label %land.end, label %land.rhs, !dbg !12225

land.rhs:                                         ; preds = %lor.lhs.false93, %land.lhs.true77
  %61 = load i32, i32* %new_reg.addr, align 4, !dbg !12226
  %cmp98 = icmp uge i32 %61, 53, !dbg !12227
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false93, %lor.lhs.false88, %lor.lhs.false85, %lor.lhs.false82, %land.lhs.true71, %while.cond
  %62 = phi i1 [ false, %lor.lhs.false93 ], [ false, %lor.lhs.false88 ], [ false, %lor.lhs.false85 ], [ false, %lor.lhs.false82 ], [ false, %land.lhs.true71 ], [ false, %while.cond ], [ %cmp98, %land.rhs ], !dbg !12228
  br i1 %62, label %while.body, label %while.end, !dbg !12211

while.body:                                       ; preds = %land.end
  %63 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8, !dbg !12229
  %64 = load i32, i32* %lastr, align 4, !dbg !12230
  %idxprom100 = zext i32 %64 to i64, !dbg !12229
  %arrayidx101 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %63, i64 %idxprom100, !dbg !12229
  %prev102 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx101, i32 0, i32 1, !dbg !12231
  %65 = load i32, i32* %prev102, align 4, !dbg !12231
  store i32 %65, i32* %lastr, align 4, !dbg !12232
  br label %while.cond, !dbg !12211, !llvm.loop !12233

while.end:                                        ; preds = %land.end
  %66 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8, !dbg !12234
  %67 = load i32, i32* %lastr, align 4, !dbg !12235
  %idxprom103 = zext i32 %67 to i64, !dbg !12234
  %arrayidx104 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %66, i64 %idxprom103, !dbg !12234
  %next105 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx104, i32 0, i32 0, !dbg !12236
  %68 = load i32, i32* %next105, align 4, !dbg !12236
  %69 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8, !dbg !12237
  %70 = load i32, i32* %new_reg.addr, align 4, !dbg !12238
  %idxprom106 = zext i32 %70 to i64, !dbg !12237
  %arrayidx107 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %69, i64 %idxprom106, !dbg !12237
  %next108 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx107, i32 0, i32 0, !dbg !12239
  store i32 %68, i32* %next108, align 4, !dbg !12240
  %71 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8, !dbg !12241
  %72 = load i32, i32* %lastr, align 4, !dbg !12243
  %idxprom109 = zext i32 %72 to i64, !dbg !12241
  %arrayidx110 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %71, i64 %idxprom109, !dbg !12241
  %next111 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx110, i32 0, i32 0, !dbg !12244
  %73 = load i32, i32* %next111, align 4, !dbg !12244
  %cmp112 = icmp sge i32 %73, 0, !dbg !12245
  br i1 %cmp112, label %if.then114, label %if.else121, !dbg !12246

if.then114:                                       ; preds = %while.end
  %74 = load i32, i32* %new_reg.addr, align 4, !dbg !12247
  %75 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8, !dbg !12248
  %76 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8, !dbg !12249
  %77 = load i32, i32* %lastr, align 4, !dbg !12250
  %idxprom115 = zext i32 %77 to i64, !dbg !12249
  %arrayidx116 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %76, i64 %idxprom115, !dbg !12249
  %next117 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx116, i32 0, i32 0, !dbg !12251
  %78 = load i32, i32* %next117, align 4, !dbg !12251
  %idxprom118 = sext i32 %78 to i64, !dbg !12248
  %arrayidx119 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %75, i64 %idxprom118, !dbg !12248
  %prev120 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx119, i32 0, i32 1, !dbg !12252
  store i32 %74, i32* %prev120, align 4, !dbg !12253
  br label %if.end, !dbg !12248

if.else121:                                       ; preds = %while.end
  %79 = load i32, i32* %new_reg.addr, align 4, !dbg !12254
  %80 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8, !dbg !12255
  %81 = load i32, i32* %q, align 4, !dbg !12256
  %idxprom122 = sext i32 %81 to i64, !dbg !12255
  %arrayidx123 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %80, i64 %idxprom122, !dbg !12255
  %last_reg124 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %arrayidx123, i32 0, i32 5, !dbg !12257
  store i32 %79, i32* %last_reg124, align 8, !dbg !12258
  br label %if.end

if.end:                                           ; preds = %if.else121, %if.then114
  %82 = load i32, i32* %new_reg.addr, align 4, !dbg !12259
  %83 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8, !dbg !12260
  %84 = load i32, i32* %lastr, align 4, !dbg !12261
  %idxprom125 = zext i32 %84 to i64, !dbg !12260
  %arrayidx126 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %83, i64 %idxprom125, !dbg !12260
  %next127 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx126, i32 0, i32 0, !dbg !12262
  store i32 %82, i32* %next127, align 4, !dbg !12263
  %85 = load i32, i32* %lastr, align 4, !dbg !12264
  %86 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8, !dbg !12265
  %87 = load i32, i32* %new_reg.addr, align 4, !dbg !12266
  %idxprom128 = zext i32 %87 to i64, !dbg !12265
  %arrayidx129 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %86, i64 %idxprom128, !dbg !12265
  %prev130 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %arrayidx129, i32 0, i32 1, !dbg !12267
  store i32 %85, i32* %prev130, align 4, !dbg !12268
  br label %if.end131

if.end131:                                        ; preds = %if.end, %if.then
  ret void, !dbg !12269
}

; Function Attrs: noinline nounwind uwtable
define internal void @make_new_qty(i32 %reg, i32 %mode) #0 !dbg !12270 {
entry:
  %reg.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %q = alloca i32, align 4
  %ent = alloca %struct.qty_table_elem*, align 8
  %eqv = alloca %struct.reg_eqv_elem*, align 8
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !12273, metadata !DIExpression()), !dbg !12274
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !12275, metadata !DIExpression()), !dbg !12276
  call void @llvm.dbg.declare(metadata i32* %q, metadata !12277, metadata !DIExpression()), !dbg !12278
  call void @llvm.dbg.declare(metadata %struct.qty_table_elem** %ent, metadata !12279, metadata !DIExpression()), !dbg !12280
  call void @llvm.dbg.declare(metadata %struct.reg_eqv_elem** %eqv, metadata !12281, metadata !DIExpression()), !dbg !12282
  %0 = load i32, i32* @next_qty, align 4, !dbg !12283
  %1 = load i32, i32* @max_qty, align 4, !dbg !12283
  %cmp = icmp slt i32 %0, %1, !dbg !12283
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !12283

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32 911, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)), !dbg !12283
  br label %cond.end, !dbg !12283

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !12283

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !12283
  %2 = load i32, i32* @next_qty, align 4, !dbg !12284
  %inc = add nsw i32 %2, 1, !dbg !12284
  store i32 %inc, i32* @next_qty, align 4, !dbg !12284
  %3 = load i32, i32* %reg.addr, align 4, !dbg !12285
  %call = call %struct.cse_reg_info* @get_cse_reg_info(i32 %3), !dbg !12285
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call, i32 0, i32 1, !dbg !12285
  store i32 %2, i32* %reg_qty, align 4, !dbg !12286
  store i32 %2, i32* %q, align 4, !dbg !12287
  %4 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8, !dbg !12288
  %5 = load i32, i32* %q, align 4, !dbg !12289
  %idxprom = sext i32 %5 to i64, !dbg !12288
  %arrayidx = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %4, i64 %idxprom, !dbg !12288
  store %struct.qty_table_elem* %arrayidx, %struct.qty_table_elem** %ent, align 8, !dbg !12290
  %6 = load i32, i32* %reg.addr, align 4, !dbg !12291
  %7 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !12292
  %first_reg = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %7, i32 0, i32 4, !dbg !12293
  store i32 %6, i32* %first_reg, align 4, !dbg !12294
  %8 = load i32, i32* %reg.addr, align 4, !dbg !12295
  %9 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !12296
  %last_reg = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %9, i32 0, i32 5, !dbg !12297
  store i32 %8, i32* %last_reg, align 8, !dbg !12298
  %10 = load i32, i32* %mode.addr, align 4, !dbg !12299
  %11 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !12300
  %mode1 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %11, i32 0, i32 6, !dbg !12301
  %12 = bitcast i24* %mode1 to i32*, !dbg !12301
  %bf.load = load i32, i32* %12, align 4, !dbg !12302
  %bf.value = and i32 %10, 255, !dbg !12302
  %bf.shl = shl i32 %bf.value, 16, !dbg !12302
  %bf.clear = and i32 %bf.load, -16711681, !dbg !12302
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !12302
  store i32 %bf.set, i32* %12, align 4, !dbg !12302
  %13 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !12303
  %const_insn = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %13, i32 0, i32 1, !dbg !12304
  store %struct.rtx_def* null, %struct.rtx_def** %const_insn, align 8, !dbg !12305
  %14 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !12306
  %const_rtx = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %14, i32 0, i32 0, !dbg !12307
  store %struct.rtx_def* null, %struct.rtx_def** %const_rtx, align 8, !dbg !12308
  %15 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !12309
  %comparison_code = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %15, i32 0, i32 6, !dbg !12310
  %16 = bitcast i24* %comparison_code to i32*, !dbg !12310
  %bf.load2 = load i32, i32* %16, align 4, !dbg !12311
  %bf.clear3 = and i32 %bf.load2, -65536, !dbg !12311
  store i32 %bf.clear3, i32* %16, align 4, !dbg !12311
  %17 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** @reg_eqv_table, align 8, !dbg !12312
  %18 = load i32, i32* %reg.addr, align 4, !dbg !12313
  %idxprom4 = zext i32 %18 to i64, !dbg !12312
  %arrayidx5 = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %17, i64 %idxprom4, !dbg !12312
  store %struct.reg_eqv_elem* %arrayidx5, %struct.reg_eqv_elem** %eqv, align 8, !dbg !12314
  %19 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** %eqv, align 8, !dbg !12315
  %prev = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %19, i32 0, i32 1, !dbg !12316
  store i32 -1, i32* %prev, align 4, !dbg !12317
  %20 = load %struct.reg_eqv_elem*, %struct.reg_eqv_elem** %eqv, align 8, !dbg !12318
  %next = getelementptr inbounds %struct.reg_eqv_elem, %struct.reg_eqv_elem* %20, i32 0, i32 0, !dbg !12319
  store i32 -1, i32* %next, align 4, !dbg !12320
  ret void, !dbg !12321
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.table_elt* @insert_with_costs(%struct.rtx_def* %x, %struct.table_elt* %classp, i32 %hash, i32 %mode, i32 %cost, i32 %reg_cost) #0 !dbg !12322 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %classp.addr = alloca %struct.table_elt*, align 8
  %hash.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %cost.addr = alloca i32, align 4
  %reg_cost.addr = alloca i32, align 4
  %elt = alloca %struct.table_elt*, align 8
  %p = alloca %struct.table_elt*, align 8
  %p52 = alloca %struct.table_elt*, align 8
  %next = alloca %struct.table_elt*, align 8
  %exp_q = alloca i32, align 4
  %exp_ent = alloca %struct.qty_table_elem*, align 8
  %p125 = alloca %struct.table_elt*, align 8
  %x_q = alloca i32, align 4
  %x_ent = alloca %struct.qty_table_elem*, align 8
  %subexp = alloca %struct.rtx_def*, align 8
  %subhash = alloca i32, align 4
  %subelt = alloca %struct.table_elt*, align 8
  %subelt_prev = alloca %struct.table_elt*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !12325, metadata !DIExpression()), !dbg !12326
  store %struct.table_elt* %classp, %struct.table_elt** %classp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.table_elt** %classp.addr, metadata !12327, metadata !DIExpression()), !dbg !12328
  store i32 %hash, i32* %hash.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hash.addr, metadata !12329, metadata !DIExpression()), !dbg !12330
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !12331, metadata !DIExpression()), !dbg !12332
  store i32 %cost, i32* %cost.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cost.addr, metadata !12333, metadata !DIExpression()), !dbg !12334
  store i32 %reg_cost, i32* %reg_cost.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg_cost.addr, metadata !12335, metadata !DIExpression()), !dbg !12336
  call void @llvm.dbg.declare(metadata %struct.table_elt** %elt, metadata !12337, metadata !DIExpression()), !dbg !12338
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12339
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !12339
  %bf.load = load i32, i32* %1, align 8, !dbg !12339
  %bf.clear = and i32 %bf.load, 65535, !dbg !12339
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !12339
  br i1 %cmp, label %lor.lhs.false, label %cond.false, !dbg !12339

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12339
  %call = call i32 @rhs_regno(%struct.rtx_def* %2), !dbg !12339
  %call1 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call), !dbg !12339
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call1, i32 0, i32 1, !dbg !12339
  %3 = load i32, i32* %reg_qty, align 4, !dbg !12339
  %cmp2 = icmp sge i32 %3, 0, !dbg !12339
  br i1 %cmp2, label %cond.false, label %cond.true, !dbg !12339

cond.true:                                        ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32 1590, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)), !dbg !12339
  br label %cond.end, !dbg !12339

cond.false:                                       ; preds = %lor.lhs.false, %entry
  br label %cond.end, !dbg !12339

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !12339
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12340
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !12340
  %bf.load3 = load i32, i32* %5, align 8, !dbg !12340
  %bf.clear4 = and i32 %bf.load3, 65535, !dbg !12340
  %cmp5 = icmp eq i32 %bf.clear4, 37, !dbg !12340
  br i1 %cmp5, label %land.lhs.true, label %if.end, !dbg !12342

land.lhs.true:                                    ; preds = %cond.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12343
  %call6 = call i32 @rhs_regno(%struct.rtx_def* %6), !dbg !12343
  %cmp7 = icmp ult i32 %call6, 53, !dbg !12344
  br i1 %cmp7, label %if.then, label %if.end, !dbg !12345

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12346
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !12346
  %bf.load8 = load i32, i32* %8, align 8, !dbg !12346
  %bf.lshr = lshr i32 %bf.load8, 16, !dbg !12346
  %bf.clear9 = and i32 %bf.lshr, 255, !dbg !12346
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12347
  %call10 = call i32 @rhs_regno(%struct.rtx_def* %9), !dbg !12347
  call void @add_to_hard_reg_set(i64* @hard_regs_in_table, i32 %bf.clear9, i32 %call10), !dbg !12348
  br label %if.end, !dbg !12348

if.end:                                           ; preds = %if.then, %land.lhs.true, %cond.end
  %10 = load %struct.table_elt*, %struct.table_elt** @free_element_chain, align 8, !dbg !12349
  store %struct.table_elt* %10, %struct.table_elt** %elt, align 8, !dbg !12350
  %11 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12351
  %tobool = icmp ne %struct.table_elt* %11, null, !dbg !12351
  br i1 %tobool, label %if.then11, label %if.else, !dbg !12353

if.then11:                                        ; preds = %if.end
  %12 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12354
  %next_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %12, i32 0, i32 2, !dbg !12355
  %13 = load %struct.table_elt*, %struct.table_elt** %next_same_hash, align 8, !dbg !12355
  store %struct.table_elt* %13, %struct.table_elt** @free_element_chain, align 8, !dbg !12356
  br label %if.end13, !dbg !12357

if.else:                                          ; preds = %if.end
  %call12 = call i8* @xmalloc(i64 80), !dbg !12358
  %14 = bitcast i8* %call12 to %struct.table_elt*, !dbg !12358
  store %struct.table_elt* %14, %struct.table_elt** %elt, align 8, !dbg !12359
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then11
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12360
  %16 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12361
  %exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %16, i32 0, i32 0, !dbg !12362
  store %struct.rtx_def* %15, %struct.rtx_def** %exp, align 8, !dbg !12363
  %17 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12364
  %canon_exp = getelementptr inbounds %struct.table_elt, %struct.table_elt* %17, i32 0, i32 1, !dbg !12365
  store %struct.rtx_def* null, %struct.rtx_def** %canon_exp, align 8, !dbg !12366
  %18 = load i32, i32* %cost.addr, align 4, !dbg !12367
  %19 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12368
  %cost14 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %19, i32 0, i32 8, !dbg !12369
  store i32 %18, i32* %cost14, align 8, !dbg !12370
  %20 = load i32, i32* %reg_cost.addr, align 4, !dbg !12371
  %21 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12372
  %regcost = getelementptr inbounds %struct.table_elt, %struct.table_elt* %21, i32 0, i32 9, !dbg !12373
  store i32 %20, i32* %regcost, align 4, !dbg !12374
  %22 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12375
  %next_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %22, i32 0, i32 4, !dbg !12376
  store %struct.table_elt* null, %struct.table_elt** %next_same_value, align 8, !dbg !12377
  %23 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12378
  %prev_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %23, i32 0, i32 5, !dbg !12379
  store %struct.table_elt* null, %struct.table_elt** %prev_same_value, align 8, !dbg !12380
  %24 = load i32, i32* %hash.addr, align 4, !dbg !12381
  %idxprom = zext i32 %24 to i64, !dbg !12382
  %arrayidx = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom, !dbg !12382
  %25 = load %struct.table_elt*, %struct.table_elt** %arrayidx, align 8, !dbg !12382
  %26 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12383
  %next_same_hash15 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %26, i32 0, i32 2, !dbg !12384
  store %struct.table_elt* %25, %struct.table_elt** %next_same_hash15, align 8, !dbg !12385
  %27 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12386
  %prev_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %27, i32 0, i32 3, !dbg !12387
  store %struct.table_elt* null, %struct.table_elt** %prev_same_hash, align 8, !dbg !12388
  %28 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12389
  %related_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %28, i32 0, i32 7, !dbg !12390
  store %struct.table_elt* null, %struct.table_elt** %related_value, align 8, !dbg !12391
  %29 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12392
  %in_memory = getelementptr inbounds %struct.table_elt, %struct.table_elt* %29, i32 0, i32 11, !dbg !12393
  store i8 0, i8* %in_memory, align 1, !dbg !12394
  %30 = load i32, i32* %mode.addr, align 4, !dbg !12395
  %31 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12396
  %mode16 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %31, i32 0, i32 10, !dbg !12397
  %32 = trunc i32 %30 to i8, !dbg !12398
  store i8 %32, i8* %mode16, align 8, !dbg !12398
  %bf.result.cast = zext i8 %32 to i32, !dbg !12398
  %33 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12399
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !12399
  %bf.load17 = load i32, i32* %34, align 8, !dbg !12399
  %bf.clear18 = and i32 %bf.load17, 65535, !dbg !12399
  %idxprom19 = sext i32 %bf.clear18 to i64, !dbg !12399
  %arrayidx20 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom19, !dbg !12399
  %35 = load i32, i32* %arrayidx20, align 4, !dbg !12399
  %cmp21 = icmp eq i32 %35, 9, !dbg !12399
  br i1 %cmp21, label %lor.end, label %lor.rhs, !dbg !12400

lor.rhs:                                          ; preds = %if.end13
  %36 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12401
  %call22 = call zeroext i8 @fixed_base_plus_p(%struct.rtx_def* %36), !dbg !12402
  %conv = zext i8 %call22 to i32, !dbg !12402
  %tobool23 = icmp ne i32 %conv, 0, !dbg !12400
  br label %lor.end, !dbg !12400

lor.end:                                          ; preds = %lor.rhs, %if.end13
  %37 = phi i1 [ true, %if.end13 ], [ %tobool23, %lor.rhs ]
  %lor.ext = zext i1 %37 to i32, !dbg !12400
  %conv24 = trunc i32 %lor.ext to i8, !dbg !12403
  %38 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12404
  %is_const = getelementptr inbounds %struct.table_elt, %struct.table_elt* %38, i32 0, i32 12, !dbg !12405
  store i8 %conv24, i8* %is_const, align 2, !dbg !12406
  %39 = load i32, i32* %hash.addr, align 4, !dbg !12407
  %idxprom25 = zext i32 %39 to i64, !dbg !12409
  %arrayidx26 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom25, !dbg !12409
  %40 = load %struct.table_elt*, %struct.table_elt** %arrayidx26, align 8, !dbg !12409
  %tobool27 = icmp ne %struct.table_elt* %40, null, !dbg !12409
  br i1 %tobool27, label %if.then28, label %if.end32, !dbg !12410

if.then28:                                        ; preds = %lor.end
  %41 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12411
  %42 = load i32, i32* %hash.addr, align 4, !dbg !12412
  %idxprom29 = zext i32 %42 to i64, !dbg !12413
  %arrayidx30 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom29, !dbg !12413
  %43 = load %struct.table_elt*, %struct.table_elt** %arrayidx30, align 8, !dbg !12413
  %prev_same_hash31 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %43, i32 0, i32 3, !dbg !12414
  store %struct.table_elt* %41, %struct.table_elt** %prev_same_hash31, align 8, !dbg !12415
  br label %if.end32, !dbg !12413

if.end32:                                         ; preds = %if.then28, %lor.end
  %44 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12416
  %45 = load i32, i32* %hash.addr, align 4, !dbg !12417
  %idxprom33 = zext i32 %45 to i64, !dbg !12418
  %arrayidx34 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom33, !dbg !12418
  store %struct.table_elt* %44, %struct.table_elt** %arrayidx34, align 8, !dbg !12419
  %46 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8, !dbg !12420
  %tobool35 = icmp ne %struct.table_elt* %46, null, !dbg !12420
  br i1 %tobool35, label %if.then36, label %if.else75, !dbg !12422

if.then36:                                        ; preds = %if.end32
  %47 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8, !dbg !12423
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %47, i32 0, i32 6, !dbg !12425
  %48 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8, !dbg !12425
  store %struct.table_elt* %48, %struct.table_elt** %classp.addr, align 8, !dbg !12426
  %49 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12427
  %cost37 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %49, i32 0, i32 8, !dbg !12427
  %50 = load i32, i32* %cost37, align 8, !dbg !12427
  %51 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12427
  %regcost38 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %51, i32 0, i32 9, !dbg !12427
  %52 = load i32, i32* %regcost38, align 4, !dbg !12427
  %53 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8, !dbg !12427
  %cost39 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %53, i32 0, i32 8, !dbg !12427
  %54 = load i32, i32* %cost39, align 8, !dbg !12427
  %55 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8, !dbg !12427
  %regcost40 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %55, i32 0, i32 9, !dbg !12427
  %56 = load i32, i32* %regcost40, align 4, !dbg !12427
  %call41 = call i32 @preferable(i32 %50, i32 %52, i32 %54, i32 %56), !dbg !12427
  %cmp42 = icmp slt i32 %call41, 0, !dbg !12427
  br i1 %cmp42, label %if.then44, label %if.else51, !dbg !12429

if.then44:                                        ; preds = %if.then36
  call void @llvm.dbg.declare(metadata %struct.table_elt** %p, metadata !12430, metadata !DIExpression()), !dbg !12432
  %57 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8, !dbg !12433
  %58 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12434
  %next_same_value45 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %58, i32 0, i32 4, !dbg !12435
  store %struct.table_elt* %57, %struct.table_elt** %next_same_value45, align 8, !dbg !12436
  %59 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12437
  %60 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8, !dbg !12438
  %prev_same_value46 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %60, i32 0, i32 5, !dbg !12439
  store %struct.table_elt* %59, %struct.table_elt** %prev_same_value46, align 8, !dbg !12440
  %61 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12441
  %62 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12442
  %first_same_value47 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %62, i32 0, i32 6, !dbg !12443
  store %struct.table_elt* %61, %struct.table_elt** %first_same_value47, align 8, !dbg !12444
  %63 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8, !dbg !12445
  store %struct.table_elt* %63, %struct.table_elt** %p, align 8, !dbg !12447
  br label %for.cond, !dbg !12448

for.cond:                                         ; preds = %for.inc, %if.then44
  %64 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !12449
  %tobool48 = icmp ne %struct.table_elt* %64, null, !dbg !12451
  br i1 %tobool48, label %for.body, label %for.end, !dbg !12451

for.body:                                         ; preds = %for.cond
  %65 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12452
  %66 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !12453
  %first_same_value49 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %66, i32 0, i32 6, !dbg !12454
  store %struct.table_elt* %65, %struct.table_elt** %first_same_value49, align 8, !dbg !12455
  br label %for.inc, !dbg !12453

for.inc:                                          ; preds = %for.body
  %67 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !12456
  %next_same_value50 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %67, i32 0, i32 4, !dbg !12457
  %68 = load %struct.table_elt*, %struct.table_elt** %next_same_value50, align 8, !dbg !12457
  store %struct.table_elt* %68, %struct.table_elt** %p, align 8, !dbg !12458
  br label %for.cond, !dbg !12459, !llvm.loop !12460

for.end:                                          ; preds = %for.cond
  br label %if.end74, !dbg !12462

if.else51:                                        ; preds = %if.then36
  call void @llvm.dbg.declare(metadata %struct.table_elt** %p52, metadata !12463, metadata !DIExpression()), !dbg !12465
  call void @llvm.dbg.declare(metadata %struct.table_elt** %next, metadata !12466, metadata !DIExpression()), !dbg !12467
  %69 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8, !dbg !12468
  store %struct.table_elt* %69, %struct.table_elt** %p52, align 8, !dbg !12470
  br label %for.cond53, !dbg !12471

for.cond53:                                       ; preds = %for.inc64, %if.else51
  %70 = load %struct.table_elt*, %struct.table_elt** %p52, align 8, !dbg !12472
  %next_same_value54 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %70, i32 0, i32 4, !dbg !12474
  %71 = load %struct.table_elt*, %struct.table_elt** %next_same_value54, align 8, !dbg !12474
  store %struct.table_elt* %71, %struct.table_elt** %next, align 8, !dbg !12475
  %tobool55 = icmp ne %struct.table_elt* %71, null, !dbg !12475
  br i1 %tobool55, label %land.rhs, label %land.end, !dbg !12476

land.rhs:                                         ; preds = %for.cond53
  %72 = load %struct.table_elt*, %struct.table_elt** %next, align 8, !dbg !12477
  %cost56 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %72, i32 0, i32 8, !dbg !12477
  %73 = load i32, i32* %cost56, align 8, !dbg !12477
  %74 = load %struct.table_elt*, %struct.table_elt** %next, align 8, !dbg !12477
  %regcost57 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %74, i32 0, i32 9, !dbg !12477
  %75 = load i32, i32* %regcost57, align 4, !dbg !12477
  %76 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12477
  %cost58 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %76, i32 0, i32 8, !dbg !12477
  %77 = load i32, i32* %cost58, align 8, !dbg !12477
  %78 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12477
  %regcost59 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %78, i32 0, i32 9, !dbg !12477
  %79 = load i32, i32* %regcost59, align 4, !dbg !12477
  %call60 = call i32 @preferable(i32 %73, i32 %75, i32 %77, i32 %79), !dbg !12477
  %cmp61 = icmp slt i32 %call60, 0, !dbg !12477
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond53
  %80 = phi i1 [ false, %for.cond53 ], [ %cmp61, %land.rhs ], !dbg !12478
  br i1 %80, label %for.body63, label %for.end65, !dbg !12479

for.body63:                                       ; preds = %land.end
  br label %for.inc64, !dbg !12479

for.inc64:                                        ; preds = %for.body63
  %81 = load %struct.table_elt*, %struct.table_elt** %next, align 8, !dbg !12480
  store %struct.table_elt* %81, %struct.table_elt** %p52, align 8, !dbg !12481
  br label %for.cond53, !dbg !12482, !llvm.loop !12483

for.end65:                                        ; preds = %land.end
  %82 = load %struct.table_elt*, %struct.table_elt** %next, align 8, !dbg !12485
  %83 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12486
  %next_same_value66 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %83, i32 0, i32 4, !dbg !12487
  store %struct.table_elt* %82, %struct.table_elt** %next_same_value66, align 8, !dbg !12488
  %84 = load %struct.table_elt*, %struct.table_elt** %next, align 8, !dbg !12489
  %tobool67 = icmp ne %struct.table_elt* %84, null, !dbg !12489
  br i1 %tobool67, label %if.then68, label %if.end70, !dbg !12491

if.then68:                                        ; preds = %for.end65
  %85 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12492
  %86 = load %struct.table_elt*, %struct.table_elt** %next, align 8, !dbg !12493
  %prev_same_value69 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %86, i32 0, i32 5, !dbg !12494
  store %struct.table_elt* %85, %struct.table_elt** %prev_same_value69, align 8, !dbg !12495
  br label %if.end70, !dbg !12493

if.end70:                                         ; preds = %if.then68, %for.end65
  %87 = load %struct.table_elt*, %struct.table_elt** %p52, align 8, !dbg !12496
  %88 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12497
  %prev_same_value71 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %88, i32 0, i32 5, !dbg !12498
  store %struct.table_elt* %87, %struct.table_elt** %prev_same_value71, align 8, !dbg !12499
  %89 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12500
  %90 = load %struct.table_elt*, %struct.table_elt** %p52, align 8, !dbg !12501
  %next_same_value72 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %90, i32 0, i32 4, !dbg !12502
  store %struct.table_elt* %89, %struct.table_elt** %next_same_value72, align 8, !dbg !12503
  %91 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8, !dbg !12504
  %92 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12505
  %first_same_value73 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %92, i32 0, i32 6, !dbg !12506
  store %struct.table_elt* %91, %struct.table_elt** %first_same_value73, align 8, !dbg !12507
  br label %if.end74

if.end74:                                         ; preds = %if.end70, %for.end
  br label %if.end77, !dbg !12508

if.else75:                                        ; preds = %if.end32
  %93 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12509
  %94 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12510
  %first_same_value76 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %94, i32 0, i32 6, !dbg !12511
  store %struct.table_elt* %93, %struct.table_elt** %first_same_value76, align 8, !dbg !12512
  br label %if.end77

if.end77:                                         ; preds = %if.else75, %if.end74
  %95 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12513
  %is_const78 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %95, i32 0, i32 12, !dbg !12515
  %96 = load i8, i8* %is_const78, align 2, !dbg !12515
  %conv79 = sext i8 %96 to i32, !dbg !12513
  %tobool80 = icmp ne i32 %conv79, 0, !dbg !12513
  br i1 %tobool80, label %land.lhs.true81, label %if.else106, !dbg !12516

land.lhs.true81:                                  ; preds = %if.end77
  %97 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8, !dbg !12517
  %tobool82 = icmp ne %struct.table_elt* %97, null, !dbg !12517
  br i1 %tobool82, label %land.lhs.true83, label %if.else106, !dbg !12518

land.lhs.true83:                                  ; preds = %land.lhs.true81
  %98 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8, !dbg !12519
  %exp84 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %98, i32 0, i32 0, !dbg !12519
  %99 = load %struct.rtx_def*, %struct.rtx_def** %exp84, align 8, !dbg !12519
  %100 = bitcast %struct.rtx_def* %99 to i32*, !dbg !12519
  %bf.load85 = load i32, i32* %100, align 8, !dbg !12519
  %bf.clear86 = and i32 %bf.load85, 65535, !dbg !12519
  %cmp87 = icmp eq i32 %bf.clear86, 37, !dbg !12519
  br i1 %cmp87, label %land.lhs.true89, label %if.else106, !dbg !12520

land.lhs.true89:                                  ; preds = %land.lhs.true83
  %101 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12521
  %102 = bitcast %struct.rtx_def* %101 to i32*, !dbg !12521
  %bf.load90 = load i32, i32* %102, align 8, !dbg !12521
  %bf.clear91 = and i32 %bf.load90, 65535, !dbg !12521
  %cmp92 = icmp eq i32 %bf.clear91, 37, !dbg !12521
  br i1 %cmp92, label %if.else106, label %if.then94, !dbg !12522

if.then94:                                        ; preds = %land.lhs.true89
  call void @llvm.dbg.declare(metadata i32* %exp_q, metadata !12523, metadata !DIExpression()), !dbg !12525
  %103 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8, !dbg !12526
  %exp95 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %103, i32 0, i32 0, !dbg !12526
  %104 = load %struct.rtx_def*, %struct.rtx_def** %exp95, align 8, !dbg !12526
  %call96 = call i32 @rhs_regno(%struct.rtx_def* %104), !dbg !12526
  %call97 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call96), !dbg !12526
  %reg_qty98 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call97, i32 0, i32 1, !dbg !12526
  %105 = load i32, i32* %reg_qty98, align 4, !dbg !12526
  store i32 %105, i32* %exp_q, align 4, !dbg !12525
  call void @llvm.dbg.declare(metadata %struct.qty_table_elem** %exp_ent, metadata !12527, metadata !DIExpression()), !dbg !12528
  %106 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8, !dbg !12529
  %107 = load i32, i32* %exp_q, align 4, !dbg !12530
  %idxprom99 = sext i32 %107 to i64, !dbg !12529
  %arrayidx100 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %106, i64 %idxprom99, !dbg !12529
  store %struct.qty_table_elem* %arrayidx100, %struct.qty_table_elem** %exp_ent, align 8, !dbg !12528
  %108 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i32 0, i32 0), align 8, !dbg !12531
  %109 = load %struct.qty_table_elem*, %struct.qty_table_elem** %exp_ent, align 8, !dbg !12532
  %mode101 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %109, i32 0, i32 6, !dbg !12533
  %110 = bitcast i24* %mode101 to i32*, !dbg !12533
  %bf.load102 = load i32, i32* %110, align 4, !dbg !12533
  %bf.lshr103 = lshr i32 %bf.load102, 16, !dbg !12533
  %bf.clear104 = and i32 %bf.lshr103, 255, !dbg !12533
  %111 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12534
  %call105 = call %struct.rtx_def* %108(i32 %bf.clear104, %struct.rtx_def* %111), !dbg !12531
  %112 = load %struct.qty_table_elem*, %struct.qty_table_elem** %exp_ent, align 8, !dbg !12535
  %const_rtx = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %112, i32 0, i32 0, !dbg !12536
  store %struct.rtx_def* %call105, %struct.rtx_def** %const_rtx, align 8, !dbg !12537
  %113 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8, !dbg !12538
  %114 = load %struct.qty_table_elem*, %struct.qty_table_elem** %exp_ent, align 8, !dbg !12539
  %const_insn = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %114, i32 0, i32 1, !dbg !12540
  store %struct.rtx_def* %113, %struct.rtx_def** %const_insn, align 8, !dbg !12541
  br label %if.end193, !dbg !12542

if.else106:                                       ; preds = %land.lhs.true89, %land.lhs.true83, %land.lhs.true81, %if.end77
  %115 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12543
  %116 = bitcast %struct.rtx_def* %115 to i32*, !dbg !12543
  %bf.load107 = load i32, i32* %116, align 8, !dbg !12543
  %bf.clear108 = and i32 %bf.load107, 65535, !dbg !12543
  %cmp109 = icmp eq i32 %bf.clear108, 37, !dbg !12543
  br i1 %cmp109, label %land.lhs.true111, label %if.else156, !dbg !12545

land.lhs.true111:                                 ; preds = %if.else106
  %117 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8, !dbg !12546
  %tobool112 = icmp ne %struct.table_elt* %117, null, !dbg !12546
  br i1 %tobool112, label %land.lhs.true113, label %if.else156, !dbg !12547

land.lhs.true113:                                 ; preds = %land.lhs.true111
  %118 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8, !dbg !12548
  %119 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12549
  %call114 = call i32 @rhs_regno(%struct.rtx_def* %119), !dbg !12549
  %call115 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call114), !dbg !12549
  %reg_qty116 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call115, i32 0, i32 1, !dbg !12549
  %120 = load i32, i32* %reg_qty116, align 4, !dbg !12549
  %idxprom117 = sext i32 %120 to i64, !dbg !12548
  %arrayidx118 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %118, i64 %idxprom117, !dbg !12548
  %const_rtx119 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %arrayidx118, i32 0, i32 0, !dbg !12550
  %121 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx119, align 8, !dbg !12550
  %tobool120 = icmp ne %struct.rtx_def* %121, null, !dbg !12548
  br i1 %tobool120, label %if.else156, label %land.lhs.true121, !dbg !12551

land.lhs.true121:                                 ; preds = %land.lhs.true113
  %122 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12552
  %is_const122 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %122, i32 0, i32 12, !dbg !12553
  %123 = load i8, i8* %is_const122, align 2, !dbg !12553
  %tobool123 = icmp ne i8 %123, 0, !dbg !12552
  br i1 %tobool123, label %if.else156, label %if.then124, !dbg !12554

if.then124:                                       ; preds = %land.lhs.true121
  call void @llvm.dbg.declare(metadata %struct.table_elt** %p125, metadata !12555, metadata !DIExpression()), !dbg !12557
  %124 = load %struct.table_elt*, %struct.table_elt** %classp.addr, align 8, !dbg !12558
  store %struct.table_elt* %124, %struct.table_elt** %p125, align 8, !dbg !12560
  br label %for.cond126, !dbg !12561

for.cond126:                                      ; preds = %for.inc153, %if.then124
  %125 = load %struct.table_elt*, %struct.table_elt** %p125, align 8, !dbg !12562
  %cmp127 = icmp ne %struct.table_elt* %125, null, !dbg !12564
  br i1 %cmp127, label %for.body129, label %for.end155, !dbg !12565

for.body129:                                      ; preds = %for.cond126
  %126 = load %struct.table_elt*, %struct.table_elt** %p125, align 8, !dbg !12566
  %is_const130 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %126, i32 0, i32 12, !dbg !12569
  %127 = load i8, i8* %is_const130, align 2, !dbg !12569
  %conv131 = sext i8 %127 to i32, !dbg !12566
  %tobool132 = icmp ne i32 %conv131, 0, !dbg !12566
  br i1 %tobool132, label %land.lhs.true133, label %if.end152, !dbg !12570

land.lhs.true133:                                 ; preds = %for.body129
  %128 = load %struct.table_elt*, %struct.table_elt** %p125, align 8, !dbg !12571
  %exp134 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %128, i32 0, i32 0, !dbg !12571
  %129 = load %struct.rtx_def*, %struct.rtx_def** %exp134, align 8, !dbg !12571
  %130 = bitcast %struct.rtx_def* %129 to i32*, !dbg !12571
  %bf.load135 = load i32, i32* %130, align 8, !dbg !12571
  %bf.clear136 = and i32 %bf.load135, 65535, !dbg !12571
  %cmp137 = icmp eq i32 %bf.clear136, 37, !dbg !12571
  br i1 %cmp137, label %if.end152, label %if.then139, !dbg !12572

if.then139:                                       ; preds = %land.lhs.true133
  call void @llvm.dbg.declare(metadata i32* %x_q, metadata !12573, metadata !DIExpression()), !dbg !12575
  %131 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12576
  %call140 = call i32 @rhs_regno(%struct.rtx_def* %131), !dbg !12576
  %call141 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call140), !dbg !12576
  %reg_qty142 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call141, i32 0, i32 1, !dbg !12576
  %132 = load i32, i32* %reg_qty142, align 4, !dbg !12576
  store i32 %132, i32* %x_q, align 4, !dbg !12575
  call void @llvm.dbg.declare(metadata %struct.qty_table_elem** %x_ent, metadata !12577, metadata !DIExpression()), !dbg !12578
  %133 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8, !dbg !12579
  %134 = load i32, i32* %x_q, align 4, !dbg !12580
  %idxprom143 = sext i32 %134 to i64, !dbg !12579
  %arrayidx144 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %133, i64 %idxprom143, !dbg !12579
  store %struct.qty_table_elem* %arrayidx144, %struct.qty_table_elem** %x_ent, align 8, !dbg !12578
  %135 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i32 0, i32 0), align 8, !dbg !12581
  %136 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12582
  %137 = bitcast %struct.rtx_def* %136 to i32*, !dbg !12582
  %bf.load145 = load i32, i32* %137, align 8, !dbg !12582
  %bf.lshr146 = lshr i32 %bf.load145, 16, !dbg !12582
  %bf.clear147 = and i32 %bf.lshr146, 255, !dbg !12582
  %138 = load %struct.table_elt*, %struct.table_elt** %p125, align 8, !dbg !12583
  %exp148 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %138, i32 0, i32 0, !dbg !12584
  %139 = load %struct.rtx_def*, %struct.rtx_def** %exp148, align 8, !dbg !12584
  %call149 = call %struct.rtx_def* %135(i32 %bf.clear147, %struct.rtx_def* %139), !dbg !12581
  %140 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x_ent, align 8, !dbg !12585
  %const_rtx150 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %140, i32 0, i32 0, !dbg !12586
  store %struct.rtx_def* %call149, %struct.rtx_def** %const_rtx150, align 8, !dbg !12587
  %141 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8, !dbg !12588
  %142 = load %struct.qty_table_elem*, %struct.qty_table_elem** %x_ent, align 8, !dbg !12589
  %const_insn151 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %142, i32 0, i32 1, !dbg !12590
  store %struct.rtx_def* %141, %struct.rtx_def** %const_insn151, align 8, !dbg !12591
  br label %for.end155, !dbg !12592

if.end152:                                        ; preds = %land.lhs.true133, %for.body129
  br label %for.inc153, !dbg !12593

for.inc153:                                       ; preds = %if.end152
  %143 = load %struct.table_elt*, %struct.table_elt** %p125, align 8, !dbg !12594
  %next_same_value154 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %143, i32 0, i32 4, !dbg !12595
  %144 = load %struct.table_elt*, %struct.table_elt** %next_same_value154, align 8, !dbg !12595
  store %struct.table_elt* %144, %struct.table_elt** %p125, align 8, !dbg !12596
  br label %for.cond126, !dbg !12597, !llvm.loop !12598

for.end155:                                       ; preds = %if.then139, %for.cond126
  br label %if.end192, !dbg !12600

if.else156:                                       ; preds = %land.lhs.true121, %land.lhs.true113, %land.lhs.true111, %if.else106
  %145 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12601
  %146 = bitcast %struct.rtx_def* %145 to i32*, !dbg !12601
  %bf.load157 = load i32, i32* %146, align 8, !dbg !12601
  %bf.clear158 = and i32 %bf.load157, 65535, !dbg !12601
  %cmp159 = icmp eq i32 %bf.clear158, 37, !dbg !12601
  br i1 %cmp159, label %land.lhs.true161, label %if.end191, !dbg !12603

land.lhs.true161:                                 ; preds = %if.else156
  %147 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8, !dbg !12604
  %148 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12605
  %call162 = call i32 @rhs_regno(%struct.rtx_def* %148), !dbg !12605
  %call163 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call162), !dbg !12605
  %reg_qty164 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call163, i32 0, i32 1, !dbg !12605
  %149 = load i32, i32* %reg_qty164, align 4, !dbg !12605
  %idxprom165 = sext i32 %149 to i64, !dbg !12604
  %arrayidx166 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %147, i64 %idxprom165, !dbg !12604
  %const_rtx167 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %arrayidx166, i32 0, i32 0, !dbg !12606
  %150 = load %struct.rtx_def*, %struct.rtx_def** %const_rtx167, align 8, !dbg !12606
  %tobool168 = icmp ne %struct.rtx_def* %150, null, !dbg !12604
  br i1 %tobool168, label %land.lhs.true169, label %if.end191, !dbg !12607

land.lhs.true169:                                 ; preds = %land.lhs.true161
  %151 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12608
  %152 = bitcast %struct.rtx_def* %151 to i32*, !dbg !12608
  %bf.load170 = load i32, i32* %152, align 8, !dbg !12608
  %bf.lshr171 = lshr i32 %bf.load170, 16, !dbg !12608
  %bf.clear172 = and i32 %bf.lshr171, 255, !dbg !12608
  %153 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8, !dbg !12609
  %154 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12610
  %call173 = call i32 @rhs_regno(%struct.rtx_def* %154), !dbg !12610
  %call174 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call173), !dbg !12610
  %reg_qty175 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call174, i32 0, i32 1, !dbg !12610
  %155 = load i32, i32* %reg_qty175, align 4, !dbg !12610
  %idxprom176 = sext i32 %155 to i64, !dbg !12609
  %arrayidx177 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %153, i64 %idxprom176, !dbg !12609
  %mode178 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %arrayidx177, i32 0, i32 6, !dbg !12611
  %156 = bitcast i24* %mode178 to i32*, !dbg !12611
  %bf.load179 = load i32, i32* %156, align 4, !dbg !12611
  %bf.lshr180 = lshr i32 %bf.load179, 16, !dbg !12611
  %bf.clear181 = and i32 %bf.lshr180, 255, !dbg !12611
  %cmp182 = icmp eq i32 %bf.clear172, %bf.clear181, !dbg !12612
  br i1 %cmp182, label %if.then184, label %if.end191, !dbg !12613

if.then184:                                       ; preds = %land.lhs.true169
  %157 = load %struct.rtx_def*, %struct.rtx_def** @this_insn, align 8, !dbg !12614
  %158 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8, !dbg !12615
  %159 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12616
  %call185 = call i32 @rhs_regno(%struct.rtx_def* %159), !dbg !12616
  %call186 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call185), !dbg !12616
  %reg_qty187 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call186, i32 0, i32 1, !dbg !12616
  %160 = load i32, i32* %reg_qty187, align 4, !dbg !12616
  %idxprom188 = sext i32 %160 to i64, !dbg !12615
  %arrayidx189 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %158, i64 %idxprom188, !dbg !12615
  %const_insn190 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %arrayidx189, i32 0, i32 1, !dbg !12617
  store %struct.rtx_def* %157, %struct.rtx_def** %const_insn190, align 8, !dbg !12618
  br label %if.end191, !dbg !12615

if.end191:                                        ; preds = %if.then184, %land.lhs.true169, %land.lhs.true161, %if.else156
  br label %if.end192

if.end192:                                        ; preds = %if.end191, %for.end155
  br label %if.end193

if.end193:                                        ; preds = %if.end192, %if.then94
  %161 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12619
  %162 = bitcast %struct.rtx_def* %161 to i32*, !dbg !12619
  %bf.load194 = load i32, i32* %162, align 8, !dbg !12619
  %bf.clear195 = and i32 %bf.load194, 65535, !dbg !12619
  %cmp196 = icmp eq i32 %bf.clear195, 35, !dbg !12621
  br i1 %cmp196, label %if.then198, label %if.end239, !dbg !12622

if.then198:                                       ; preds = %if.end193
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %subexp, metadata !12623, metadata !DIExpression()), !dbg !12625
  %163 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12626
  %call199 = call %struct.rtx_def* @get_related_value(%struct.rtx_def* %163), !dbg !12627
  store %struct.rtx_def* %call199, %struct.rtx_def** %subexp, align 8, !dbg !12625
  call void @llvm.dbg.declare(metadata i32* %subhash, metadata !12628, metadata !DIExpression()), !dbg !12629
  call void @llvm.dbg.declare(metadata %struct.table_elt** %subelt, metadata !12630, metadata !DIExpression()), !dbg !12631
  call void @llvm.dbg.declare(metadata %struct.table_elt** %subelt_prev, metadata !12632, metadata !DIExpression()), !dbg !12633
  %164 = load %struct.rtx_def*, %struct.rtx_def** %subexp, align 8, !dbg !12634
  %cmp200 = icmp ne %struct.rtx_def* %164, null, !dbg !12636
  br i1 %cmp200, label %if.then202, label %if.end238, !dbg !12637

if.then202:                                       ; preds = %if.then198
  %165 = load %struct.rtx_def*, %struct.rtx_def** %subexp, align 8, !dbg !12638
  %166 = bitcast %struct.rtx_def* %165 to i32*, !dbg !12638
  %bf.load203 = load i32, i32* %166, align 8, !dbg !12638
  %bf.clear204 = and i32 %bf.load203, 65535, !dbg !12638
  %cmp205 = icmp eq i32 %bf.clear204, 37, !dbg !12638
  br i1 %cmp205, label %land.lhs.true207, label %cond.false215, !dbg !12638

land.lhs.true207:                                 ; preds = %if.then202
  %167 = load %struct.rtx_def*, %struct.rtx_def** %subexp, align 8, !dbg !12638
  %call208 = call i32 @rhs_regno(%struct.rtx_def* %167), !dbg !12638
  %cmp209 = icmp uge i32 %call208, 53, !dbg !12638
  br i1 %cmp209, label %cond.true211, label %cond.false215, !dbg !12638

cond.true211:                                     ; preds = %land.lhs.true207
  %168 = load %struct.rtx_def*, %struct.rtx_def** %subexp, align 8, !dbg !12638
  %call212 = call i32 @rhs_regno(%struct.rtx_def* %168), !dbg !12638
  %call213 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call212), !dbg !12638
  %reg_qty214 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call213, i32 0, i32 1, !dbg !12638
  %169 = load i32, i32* %reg_qty214, align 4, !dbg !12638
  %add = add i32 4736, %169, !dbg !12638
  br label %cond.end217, !dbg !12638

cond.false215:                                    ; preds = %land.lhs.true207, %if.then202
  %170 = load %struct.rtx_def*, %struct.rtx_def** %subexp, align 8, !dbg !12638
  %171 = load i32, i32* %mode.addr, align 4, !dbg !12638
  %call216 = call i32 @safe_hash(%struct.rtx_def* %170, i32 %171), !dbg !12638
  br label %cond.end217, !dbg !12638

cond.end217:                                      ; preds = %cond.false215, %cond.true211
  %cond218 = phi i32 [ %add, %cond.true211 ], [ %call216, %cond.false215 ], !dbg !12638
  %and = and i32 %cond218, 31, !dbg !12638
  store i32 %and, i32* %subhash, align 4, !dbg !12640
  %172 = load %struct.rtx_def*, %struct.rtx_def** %subexp, align 8, !dbg !12641
  %173 = load i32, i32* %subhash, align 4, !dbg !12642
  %174 = load i32, i32* %mode.addr, align 4, !dbg !12643
  %call219 = call %struct.table_elt* @lookup(%struct.rtx_def* %172, i32 %173, i32 %174), !dbg !12644
  store %struct.table_elt* %call219, %struct.table_elt** %subelt, align 8, !dbg !12645
  %175 = load %struct.table_elt*, %struct.table_elt** %subelt, align 8, !dbg !12646
  %cmp220 = icmp eq %struct.table_elt* %175, null, !dbg !12648
  br i1 %cmp220, label %if.then222, label %if.end224, !dbg !12649

if.then222:                                       ; preds = %cond.end217
  %176 = load %struct.rtx_def*, %struct.rtx_def** %subexp, align 8, !dbg !12650
  %177 = load i32, i32* %subhash, align 4, !dbg !12651
  %178 = load i32, i32* %mode.addr, align 4, !dbg !12652
  %call223 = call %struct.table_elt* @insert(%struct.rtx_def* %176, %struct.table_elt* null, i32 %177, i32 %178), !dbg !12653
  store %struct.table_elt* %call223, %struct.table_elt** %subelt, align 8, !dbg !12654
  br label %if.end224, !dbg !12655

if.end224:                                        ; preds = %if.then222, %cond.end217
  %179 = load %struct.table_elt*, %struct.table_elt** %subelt, align 8, !dbg !12656
  %related_value225 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %179, i32 0, i32 7, !dbg !12658
  %180 = load %struct.table_elt*, %struct.table_elt** %related_value225, align 8, !dbg !12658
  %cmp226 = icmp eq %struct.table_elt* %180, null, !dbg !12659
  br i1 %cmp226, label %if.then228, label %if.end230, !dbg !12660

if.then228:                                       ; preds = %if.end224
  %181 = load %struct.table_elt*, %struct.table_elt** %subelt, align 8, !dbg !12661
  %182 = load %struct.table_elt*, %struct.table_elt** %subelt, align 8, !dbg !12662
  %related_value229 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %182, i32 0, i32 7, !dbg !12663
  store %struct.table_elt* %181, %struct.table_elt** %related_value229, align 8, !dbg !12664
  br label %if.end230, !dbg !12662

if.end230:                                        ; preds = %if.then228, %if.end224
  %183 = load %struct.table_elt*, %struct.table_elt** %subelt, align 8, !dbg !12665
  store %struct.table_elt* %183, %struct.table_elt** %subelt_prev, align 8, !dbg !12666
  br label %while.cond, !dbg !12667

while.cond:                                       ; preds = %while.body, %if.end230
  %184 = load %struct.table_elt*, %struct.table_elt** %subelt_prev, align 8, !dbg !12668
  %related_value231 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %184, i32 0, i32 7, !dbg !12669
  %185 = load %struct.table_elt*, %struct.table_elt** %related_value231, align 8, !dbg !12669
  %186 = load %struct.table_elt*, %struct.table_elt** %subelt, align 8, !dbg !12670
  %cmp232 = icmp ne %struct.table_elt* %185, %186, !dbg !12671
  br i1 %cmp232, label %while.body, label %while.end, !dbg !12667

while.body:                                       ; preds = %while.cond
  %187 = load %struct.table_elt*, %struct.table_elt** %subelt_prev, align 8, !dbg !12672
  %related_value234 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %187, i32 0, i32 7, !dbg !12673
  %188 = load %struct.table_elt*, %struct.table_elt** %related_value234, align 8, !dbg !12673
  store %struct.table_elt* %188, %struct.table_elt** %subelt_prev, align 8, !dbg !12674
  br label %while.cond, !dbg !12667, !llvm.loop !12675

while.end:                                        ; preds = %while.cond
  %189 = load %struct.table_elt*, %struct.table_elt** %subelt_prev, align 8, !dbg !12676
  %related_value235 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %189, i32 0, i32 7, !dbg !12677
  %190 = load %struct.table_elt*, %struct.table_elt** %related_value235, align 8, !dbg !12677
  %191 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12678
  %related_value236 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %191, i32 0, i32 7, !dbg !12679
  store %struct.table_elt* %190, %struct.table_elt** %related_value236, align 8, !dbg !12680
  %192 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12681
  %193 = load %struct.table_elt*, %struct.table_elt** %subelt_prev, align 8, !dbg !12682
  %related_value237 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %193, i32 0, i32 7, !dbg !12683
  store %struct.table_elt* %192, %struct.table_elt** %related_value237, align 8, !dbg !12684
  br label %if.end238, !dbg !12685

if.end238:                                        ; preds = %while.end, %if.then198
  br label %if.end239, !dbg !12686

if.end239:                                        ; preds = %if.end238, %if.end193
  %194 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12687
  ret %struct.table_elt* %194, !dbg !12688
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_to_hard_reg_set(i64* %regs, i32 %mode, i32 %regno) #0 !dbg !12689 {
entry:
  %regs.addr = alloca i64*, align 8
  %mode.addr = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  %end_regno = alloca i32, align 4
  store i64* %regs, i64** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %regs.addr, metadata !12693, metadata !DIExpression()), !dbg !12694
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !12695, metadata !DIExpression()), !dbg !12696
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !12697, metadata !DIExpression()), !dbg !12698
  call void @llvm.dbg.declare(metadata i32* %end_regno, metadata !12699, metadata !DIExpression()), !dbg !12700
  %0 = load i32, i32* %mode.addr, align 4, !dbg !12701
  %1 = load i32, i32* %regno.addr, align 4, !dbg !12702
  %call = call i32 @end_hard_regno(i32 %0, i32 %1), !dbg !12703
  store i32 %call, i32* %end_regno, align 4, !dbg !12704
  br label %do.body, !dbg !12705

do.body:                                          ; preds = %do.cond, %entry
  %2 = load i32, i32* %regno.addr, align 4, !dbg !12706
  %sh_prom = zext i32 %2 to i64, !dbg !12706
  %shl = shl i64 1, %sh_prom, !dbg !12706
  %3 = load i64*, i64** %regs.addr, align 8, !dbg !12706
  %4 = load i64, i64* %3, align 8, !dbg !12706
  %or = or i64 %4, %shl, !dbg !12706
  store i64 %or, i64* %3, align 8, !dbg !12706
  br label %do.cond, !dbg !12706

do.cond:                                          ; preds = %do.body
  %5 = load i32, i32* %regno.addr, align 4, !dbg !12707
  %inc = add i32 %5, 1, !dbg !12707
  store i32 %inc, i32* %regno.addr, align 4, !dbg !12707
  %6 = load i32, i32* %end_regno, align 4, !dbg !12708
  %cmp = icmp ult i32 %inc, %6, !dbg !12709
  br i1 %cmp, label %do.body, label %do.end, !dbg !12706, !llvm.loop !12710

do.end:                                           ; preds = %do.cond
  ret void, !dbg !12712
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @fixed_base_plus_p(%struct.rtx_def* %x) #0 !dbg !12713 {
entry:
  %retval = alloca i8, align 1
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !12716, metadata !DIExpression()), !dbg !12717
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12718
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !12718
  %bf.load = load i32, i32* %1, align 8, !dbg !12718
  %bf.clear = and i32 %bf.load, 65535, !dbg !12718
  switch i32 %bf.clear, label %sw.default [
    i32 37, label %sw.bb
    i32 49, label %sw.bb13
  ], !dbg !12719

sw.bb:                                            ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12720
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !dbg !12723
  %cmp = icmp eq %struct.rtx_def* %2, %3, !dbg !12724
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12725

lor.lhs.false:                                    ; preds = %sw.bb
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12726
  %5 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !12727
  %cmp1 = icmp eq %struct.rtx_def* %4, %5, !dbg !12728
  br i1 %cmp1, label %if.then, label %if.end, !dbg !12729

if.then:                                          ; preds = %lor.lhs.false, %sw.bb
  store i8 1, i8* %retval, align 1, !dbg !12730
  br label %return, !dbg !12730

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12731
  %7 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !12733
  %cmp2 = icmp eq %struct.rtx_def* %6, %7, !dbg !12734
  br i1 %cmp2, label %land.lhs.true, label %if.end4, !dbg !12735

land.lhs.true:                                    ; preds = %if.end
  %8 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 16), align 16, !dbg !12736
  %conv = sext i8 %8 to i32, !dbg !12736
  %tobool = icmp ne i32 %conv, 0, !dbg !12736
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !12737

if.then3:                                         ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !12738
  br label %return, !dbg !12738

if.end4:                                          ; preds = %land.lhs.true, %if.end
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12739
  %call = call i32 @rhs_regno(%struct.rtx_def* %9), !dbg !12739
  %cmp5 = icmp uge i32 %call, 53, !dbg !12741
  br i1 %cmp5, label %land.lhs.true7, label %if.end12, !dbg !12742

land.lhs.true7:                                   ; preds = %if.end4
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12743
  %call8 = call i32 @rhs_regno(%struct.rtx_def* %10), !dbg !12743
  %cmp9 = icmp ule i32 %call8, 57, !dbg !12744
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !12745

if.then11:                                        ; preds = %land.lhs.true7
  store i8 1, i8* %retval, align 1, !dbg !12746
  br label %return, !dbg !12746

if.end12:                                         ; preds = %land.lhs.true7, %if.end4
  store i8 0, i8* %retval, align 1, !dbg !12747
  br label %return, !dbg !12747

sw.bb13:                                          ; preds = %entry
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12748
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !12748
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !12748
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !12748
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !12748
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !12748
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !12748
  %bf.load14 = load i32, i32* %13, align 8, !dbg !12748
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !12748
  %cmp16 = icmp eq i32 %bf.clear15, 30, !dbg !12748
  br i1 %cmp16, label %if.end19, label %if.then18, !dbg !12750

if.then18:                                        ; preds = %sw.bb13
  store i8 0, i8* %retval, align 1, !dbg !12751
  br label %return, !dbg !12751

if.end19:                                         ; preds = %sw.bb13
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12752
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !12752
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !12752
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 0, !dbg !12752
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !12752
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !12752
  %call24 = call zeroext i8 @fixed_base_plus_p(%struct.rtx_def* %15), !dbg !12753
  store i8 %call24, i8* %retval, align 1, !dbg !12754
  br label %return, !dbg !12754

sw.default:                                       ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !12755
  br label %return, !dbg !12755

return:                                           ; preds = %sw.default, %if.end19, %if.then18, %if.end12, %if.then11, %if.then3, %if.then
  %16 = load i8, i8* %retval, align 1, !dbg !12756
  ret i8 %16, !dbg !12756
}

; Function Attrs: noinline nounwind uwtable
define internal void @remove_invalid_subreg_refs(i32 %regno, i32 %offset, i32 %mode) #0 !dbg !12757 {
entry:
  %regno.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %p = alloca %struct.table_elt*, align 8
  %next = alloca %struct.table_elt*, align 8
  %end = alloca i32, align 4
  %exp = alloca %struct.rtx_def*, align 8
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !12760, metadata !DIExpression()), !dbg !12761
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !12762, metadata !DIExpression()), !dbg !12763
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !12764, metadata !DIExpression()), !dbg !12765
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12766, metadata !DIExpression()), !dbg !12767
  call void @llvm.dbg.declare(metadata %struct.table_elt** %p, metadata !12768, metadata !DIExpression()), !dbg !12769
  call void @llvm.dbg.declare(metadata %struct.table_elt** %next, metadata !12770, metadata !DIExpression()), !dbg !12771
  call void @llvm.dbg.declare(metadata i32* %end, metadata !12772, metadata !DIExpression()), !dbg !12773
  %0 = load i32, i32* %offset.addr, align 4, !dbg !12774
  %1 = load i32, i32* %mode.addr, align 4, !dbg !12775
  %idxprom = zext i32 %1 to i64, !dbg !12775
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !12775
  %2 = load i8, i8* %arrayidx, align 1, !dbg !12775
  %conv = zext i8 %2 to i16, !dbg !12775
  %conv1 = zext i16 %conv to i32, !dbg !12775
  %sub = sub nsw i32 %conv1, 1, !dbg !12776
  %add = add i32 %0, %sub, !dbg !12777
  store i32 %add, i32* %end, align 4, !dbg !12773
  store i32 0, i32* %i, align 4, !dbg !12778
  br label %for.cond, !dbg !12780

for.cond:                                         ; preds = %for.inc52, %entry
  %3 = load i32, i32* %i, align 4, !dbg !12781
  %cmp = icmp ult i32 %3, 32, !dbg !12783
  br i1 %cmp, label %for.body, label %for.end53, !dbg !12784

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !12785
  %idxprom3 = zext i32 %4 to i64, !dbg !12787
  %arrayidx4 = getelementptr inbounds [32 x %struct.table_elt*], [32 x %struct.table_elt*]* @table, i64 0, i64 %idxprom3, !dbg !12787
  %5 = load %struct.table_elt*, %struct.table_elt** %arrayidx4, align 8, !dbg !12787
  store %struct.table_elt* %5, %struct.table_elt** %p, align 8, !dbg !12788
  br label %for.cond5, !dbg !12789

for.cond5:                                        ; preds = %for.inc, %for.body
  %6 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !12790
  %tobool = icmp ne %struct.table_elt* %6, null, !dbg !12792
  br i1 %tobool, label %for.body6, label %for.end, !dbg !12792

for.body6:                                        ; preds = %for.cond5
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %exp, metadata !12793, metadata !DIExpression()), !dbg !12795
  %7 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !12796
  %exp7 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %7, i32 0, i32 0, !dbg !12797
  %8 = load %struct.rtx_def*, %struct.rtx_def** %exp7, align 8, !dbg !12797
  store %struct.rtx_def* %8, %struct.rtx_def** %exp, align 8, !dbg !12795
  %9 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !12798
  %next_same_hash = getelementptr inbounds %struct.table_elt, %struct.table_elt* %9, i32 0, i32 2, !dbg !12799
  %10 = load %struct.table_elt*, %struct.table_elt** %next_same_hash, align 8, !dbg !12799
  store %struct.table_elt* %10, %struct.table_elt** %next, align 8, !dbg !12800
  %11 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !12801
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !12801
  %bf.load = load i32, i32* %12, align 8, !dbg !12801
  %bf.clear = and i32 %bf.load, 65535, !dbg !12801
  %cmp8 = icmp eq i32 %bf.clear, 37, !dbg !12801
  br i1 %cmp8, label %if.end, label %land.lhs.true, !dbg !12803

land.lhs.true:                                    ; preds = %for.body6
  %13 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !12804
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !12804
  %bf.load10 = load i32, i32* %14, align 8, !dbg !12804
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !12804
  %cmp12 = icmp ne i32 %bf.clear11, 39, !dbg !12805
  br i1 %cmp12, label %land.lhs.true47, label %lor.lhs.false, !dbg !12806

lor.lhs.false:                                    ; preds = %land.lhs.true
  %15 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !12807
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !12807
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !12807
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !12807
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**, !dbg !12807
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !12807
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !12807
  %bf.load15 = load i32, i32* %17, align 8, !dbg !12807
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !12807
  %cmp17 = icmp eq i32 %bf.clear16, 37, !dbg !12807
  br i1 %cmp17, label %lor.lhs.false19, label %land.lhs.true47, !dbg !12808

lor.lhs.false19:                                  ; preds = %lor.lhs.false
  %18 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !12809
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !12809
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !12809
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 0, !dbg !12809
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !12809
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !12809
  %call = call i32 @rhs_regno(%struct.rtx_def* %19), !dbg !12809
  %20 = load i32, i32* %regno.addr, align 4, !dbg !12810
  %cmp24 = icmp ne i32 %call, %20, !dbg !12811
  br i1 %cmp24, label %land.lhs.true47, label %lor.lhs.false26, !dbg !12812

lor.lhs.false26:                                  ; preds = %lor.lhs.false19
  %21 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !12813
  %u27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !12813
  %fld28 = bitcast %union.u* %u27 to [1 x %union.rtunion_def]*, !dbg !12813
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i64 0, i64 1, !dbg !12813
  %rt_uint = bitcast %union.rtunion_def* %arrayidx29 to i32*, !dbg !12813
  %22 = load i32, i32* %rt_uint, align 8, !dbg !12813
  %23 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !12814
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !12814
  %bf.load30 = load i32, i32* %24, align 8, !dbg !12814
  %bf.lshr = lshr i32 %bf.load30, 16, !dbg !12814
  %bf.clear31 = and i32 %bf.lshr, 255, !dbg !12814
  %idxprom32 = zext i32 %bf.clear31 to i64, !dbg !12814
  %arrayidx33 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom32, !dbg !12814
  %25 = load i8, i8* %arrayidx33, align 1, !dbg !12814
  %conv34 = zext i8 %25 to i16, !dbg !12814
  %conv35 = zext i16 %conv34 to i32, !dbg !12814
  %sub36 = sub nsw i32 %conv35, 1, !dbg !12815
  %add37 = add i32 %22, %sub36, !dbg !12816
  %26 = load i32, i32* %offset.addr, align 4, !dbg !12817
  %cmp38 = icmp uge i32 %add37, %26, !dbg !12818
  br i1 %cmp38, label %land.lhs.true40, label %if.end, !dbg !12819

land.lhs.true40:                                  ; preds = %lor.lhs.false26
  %27 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !12820
  %u41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !12820
  %fld42 = bitcast %union.u* %u41 to [1 x %union.rtunion_def]*, !dbg !12820
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i64 0, i64 1, !dbg !12820
  %rt_uint44 = bitcast %union.rtunion_def* %arrayidx43 to i32*, !dbg !12820
  %28 = load i32, i32* %rt_uint44, align 8, !dbg !12820
  %29 = load i32, i32* %end, align 4, !dbg !12821
  %cmp45 = icmp ule i32 %28, %29, !dbg !12822
  br i1 %cmp45, label %land.lhs.true47, label %if.end, !dbg !12823

land.lhs.true47:                                  ; preds = %land.lhs.true40, %lor.lhs.false19, %lor.lhs.false, %land.lhs.true
  %30 = load i32, i32* %regno.addr, align 4, !dbg !12824
  %31 = load i32, i32* %regno.addr, align 4, !dbg !12825
  %add48 = add i32 %31, 1, !dbg !12826
  %32 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !12827
  %exp49 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %32, i32 0, i32 0, !dbg !12828
  %33 = load %struct.rtx_def*, %struct.rtx_def** %exp49, align 8, !dbg !12828
  %call50 = call i32 @refers_to_regno_p(i32 %30, i32 %add48, %struct.rtx_def* %33, %struct.rtx_def** null), !dbg !12829
  %tobool51 = icmp ne i32 %call50, 0, !dbg !12829
  br i1 %tobool51, label %if.then, label %if.end, !dbg !12830

if.then:                                          ; preds = %land.lhs.true47
  %34 = load %struct.table_elt*, %struct.table_elt** %p, align 8, !dbg !12831
  %35 = load i32, i32* %i, align 4, !dbg !12832
  call void @remove_from_table(%struct.table_elt* %34, i32 %35), !dbg !12833
  br label %if.end, !dbg !12833

if.end:                                           ; preds = %if.then, %land.lhs.true47, %land.lhs.true40, %lor.lhs.false26, %for.body6
  br label %for.inc, !dbg !12834

for.inc:                                          ; preds = %if.end
  %36 = load %struct.table_elt*, %struct.table_elt** %next, align 8, !dbg !12835
  store %struct.table_elt* %36, %struct.table_elt** %p, align 8, !dbg !12836
  br label %for.cond5, !dbg !12837, !llvm.loop !12838

for.end:                                          ; preds = %for.cond5
  br label %for.inc52, !dbg !12839

for.inc52:                                        ; preds = %for.end
  %37 = load i32, i32* %i, align 4, !dbg !12840
  %inc = add i32 %37, 1, !dbg !12840
  store i32 %inc, i32* %i, align 4, !dbg !12840
  br label %for.cond, !dbg !12841, !llvm.loop !12842

for.end53:                                        ; preds = %for.cond
  ret void, !dbg !12844
}

declare dso_local i32 @refers_to_regno_p(i32, i32, %struct.rtx_def*, %struct.rtx_def**) #2

; Function Attrs: noinline nounwind uwtable
define internal void @insert_const_anchor(i64 %anchor, %struct.rtx_def* %reg, i64 %offs, i32 %mode) #0 !dbg !12845 {
entry:
  %anchor.addr = alloca i64, align 8
  %reg.addr = alloca %struct.rtx_def*, align 8
  %offs.addr = alloca i64, align 8
  %mode.addr = alloca i32, align 4
  %elt = alloca %struct.table_elt*, align 8
  %hash = alloca i32, align 4
  %anchor_exp = alloca %struct.rtx_def*, align 8
  %exp = alloca %struct.rtx_def*, align 8
  store i64 %anchor, i64* %anchor.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %anchor.addr, metadata !12848, metadata !DIExpression()), !dbg !12849
  store %struct.rtx_def* %reg, %struct.rtx_def** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg.addr, metadata !12850, metadata !DIExpression()), !dbg !12851
  store i64 %offs, i64* %offs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offs.addr, metadata !12852, metadata !DIExpression()), !dbg !12853
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !12854, metadata !DIExpression()), !dbg !12855
  call void @llvm.dbg.declare(metadata %struct.table_elt** %elt, metadata !12856, metadata !DIExpression()), !dbg !12857
  call void @llvm.dbg.declare(metadata i32* %hash, metadata !12858, metadata !DIExpression()), !dbg !12859
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %anchor_exp, metadata !12860, metadata !DIExpression()), !dbg !12861
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %exp, metadata !12862, metadata !DIExpression()), !dbg !12863
  %0 = load i64, i64* %anchor.addr, align 8, !dbg !12864
  %call = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %0), !dbg !12864
  store %struct.rtx_def* %call, %struct.rtx_def** %anchor_exp, align 8, !dbg !12865
  %1 = load %struct.rtx_def*, %struct.rtx_def** %anchor_exp, align 8, !dbg !12866
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !12866
  %bf.load = load i32, i32* %2, align 8, !dbg !12866
  %bf.clear = and i32 %bf.load, 65535, !dbg !12866
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !12866
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !12866

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %anchor_exp, align 8, !dbg !12866
  %call1 = call i32 @rhs_regno(%struct.rtx_def* %3), !dbg !12866
  %cmp2 = icmp uge i32 %call1, 53, !dbg !12866
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !12866

cond.true:                                        ; preds = %land.lhs.true
  %4 = load %struct.rtx_def*, %struct.rtx_def** %anchor_exp, align 8, !dbg !12866
  %call3 = call i32 @rhs_regno(%struct.rtx_def* %4), !dbg !12866
  %call4 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call3), !dbg !12866
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call4, i32 0, i32 1, !dbg !12866
  %5 = load i32, i32* %reg_qty, align 4, !dbg !12866
  %add = add i32 4736, %5, !dbg !12866
  br label %cond.end, !dbg !12866

cond.false:                                       ; preds = %land.lhs.true, %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %anchor_exp, align 8, !dbg !12866
  %7 = load i32, i32* %mode.addr, align 4, !dbg !12866
  %call5 = call i32 @canon_hash(%struct.rtx_def* %6, i32 %7), !dbg !12866
  br label %cond.end, !dbg !12866

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %call5, %cond.false ], !dbg !12866
  %and = and i32 %cond, 31, !dbg !12866
  store i32 %and, i32* %hash, align 4, !dbg !12867
  %8 = load %struct.rtx_def*, %struct.rtx_def** %anchor_exp, align 8, !dbg !12868
  %9 = load i32, i32* %hash, align 4, !dbg !12869
  %10 = load i32, i32* %mode.addr, align 4, !dbg !12870
  %call6 = call %struct.table_elt* @lookup(%struct.rtx_def* %8, i32 %9, i32 %10), !dbg !12871
  store %struct.table_elt* %call6, %struct.table_elt** %elt, align 8, !dbg !12872
  %11 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12873
  %tobool = icmp ne %struct.table_elt* %11, null, !dbg !12873
  br i1 %tobool, label %if.end, label %if.then, !dbg !12875

if.then:                                          ; preds = %cond.end
  %12 = load %struct.rtx_def*, %struct.rtx_def** %anchor_exp, align 8, !dbg !12876
  %13 = load i32, i32* %hash, align 4, !dbg !12877
  %14 = load i32, i32* %mode.addr, align 4, !dbg !12878
  %call7 = call %struct.table_elt* @insert(%struct.rtx_def* %12, %struct.table_elt* null, i32 %13, i32 %14), !dbg !12879
  store %struct.table_elt* %call7, %struct.table_elt** %elt, align 8, !dbg !12880
  br label %if.end, !dbg !12881

if.end:                                           ; preds = %if.then, %cond.end
  %15 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !12882
  %16 = load i64, i64* %offs.addr, align 8, !dbg !12883
  %call8 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %15, i64 %16), !dbg !12884
  store %struct.rtx_def* %call8, %struct.rtx_def** %exp, align 8, !dbg !12885
  %17 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !12886
  %call9 = call i32 @mention_regs(%struct.rtx_def* %17), !dbg !12887
  %18 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !12888
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !12888
  %bf.load10 = load i32, i32* %19, align 8, !dbg !12888
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !12888
  %cmp12 = icmp eq i32 %bf.clear11, 37, !dbg !12888
  br i1 %cmp12, label %land.lhs.true13, label %cond.false21, !dbg !12888

land.lhs.true13:                                  ; preds = %if.end
  %20 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !12888
  %call14 = call i32 @rhs_regno(%struct.rtx_def* %20), !dbg !12888
  %cmp15 = icmp uge i32 %call14, 53, !dbg !12888
  br i1 %cmp15, label %cond.true16, label %cond.false21, !dbg !12888

cond.true16:                                      ; preds = %land.lhs.true13
  %21 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !12888
  %call17 = call i32 @rhs_regno(%struct.rtx_def* %21), !dbg !12888
  %call18 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call17), !dbg !12888
  %reg_qty19 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call18, i32 0, i32 1, !dbg !12888
  %22 = load i32, i32* %reg_qty19, align 4, !dbg !12888
  %add20 = add i32 4736, %22, !dbg !12888
  br label %cond.end23, !dbg !12888

cond.false21:                                     ; preds = %land.lhs.true13, %if.end
  %23 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !12888
  %24 = load i32, i32* %mode.addr, align 4, !dbg !12888
  %call22 = call i32 @canon_hash(%struct.rtx_def* %23, i32 %24), !dbg !12888
  br label %cond.end23, !dbg !12888

cond.end23:                                       ; preds = %cond.false21, %cond.true16
  %cond24 = phi i32 [ %add20, %cond.true16 ], [ %call22, %cond.false21 ], !dbg !12888
  %and25 = and i32 %cond24, 31, !dbg !12888
  store i32 %and25, i32* %hash, align 4, !dbg !12889
  %25 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !12890
  %26 = load %struct.table_elt*, %struct.table_elt** %elt, align 8, !dbg !12891
  %27 = load i32, i32* %hash, align 4, !dbg !12892
  %28 = load i32, i32* %mode.addr, align 4, !dbg !12893
  %29 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !12894
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !12894
  %bf.load26 = load i32, i32* %30, align 8, !dbg !12894
  %bf.clear27 = and i32 %bf.load26, 65535, !dbg !12894
  %cmp28 = icmp eq i32 %bf.clear27, 37, !dbg !12894
  br i1 %cmp28, label %cond.true29, label %cond.false30, !dbg !12894

cond.true29:                                      ; preds = %cond.end23
  br label %cond.end32, !dbg !12894

cond.false30:                                     ; preds = %cond.end23
  %31 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !12894
  %call31 = call i32 @notreg_cost(%struct.rtx_def* %31, i32 23), !dbg !12894
  br label %cond.end32, !dbg !12894

cond.end32:                                       ; preds = %cond.false30, %cond.true29
  %cond33 = phi i32 [ 0, %cond.true29 ], [ %call31, %cond.false30 ], !dbg !12894
  %call34 = call %struct.table_elt* @insert_with_costs(%struct.rtx_def* %25, %struct.table_elt* %26, i32 %27, i32 %28, i32 %cond33, i32 1), !dbg !12895
  ret void, !dbg !12896
}

declare dso_local zeroext i8 @label_is_jump_target_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @pc_set(%struct.rtx_def*) #2

declare dso_local i32 @reversed_comparison_code_parts(i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @record_jump_cond(i32 %code, i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1, i32 %reversed_nonequality) #0 !dbg !12897 {
entry:
  %code.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %op0.addr = alloca %struct.rtx_def*, align 8
  %op1.addr = alloca %struct.rtx_def*, align 8
  %reversed_nonequality.addr = alloca i32, align 4
  %op0_hash = alloca i32, align 4
  %op1_hash = alloca i32, align 4
  %op0_in_memory = alloca i32, align 4
  %op1_in_memory = alloca i32, align 4
  %op0_elt = alloca %struct.table_elt*, align 8
  %op1_elt = alloca %struct.table_elt*, align 8
  %inner_mode = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  %inner_mode58 = alloca i32, align 4
  %tem66 = alloca %struct.rtx_def*, align 8
  %inner_mode108 = alloca i32, align 4
  %tem116 = alloca %struct.rtx_def*, align 8
  %inner_mode158 = alloca i32, align 4
  %tem166 = alloca %struct.rtx_def*, align 8
  %ent = alloca %struct.qty_table_elem*, align 8
  %qty = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !12900, metadata !DIExpression()), !dbg !12901
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !12902, metadata !DIExpression()), !dbg !12903
  store %struct.rtx_def* %op0, %struct.rtx_def** %op0.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op0.addr, metadata !12904, metadata !DIExpression()), !dbg !12905
  store %struct.rtx_def* %op1, %struct.rtx_def** %op1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op1.addr, metadata !12906, metadata !DIExpression()), !dbg !12907
  store i32 %reversed_nonequality, i32* %reversed_nonequality.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reversed_nonequality.addr, metadata !12908, metadata !DIExpression()), !dbg !12909
  call void @llvm.dbg.declare(metadata i32* %op0_hash, metadata !12910, metadata !DIExpression()), !dbg !12911
  call void @llvm.dbg.declare(metadata i32* %op1_hash, metadata !12912, metadata !DIExpression()), !dbg !12913
  call void @llvm.dbg.declare(metadata i32* %op0_in_memory, metadata !12914, metadata !DIExpression()), !dbg !12915
  call void @llvm.dbg.declare(metadata i32* %op1_in_memory, metadata !12916, metadata !DIExpression()), !dbg !12917
  call void @llvm.dbg.declare(metadata %struct.table_elt** %op0_elt, metadata !12918, metadata !DIExpression()), !dbg !12919
  call void @llvm.dbg.declare(metadata %struct.table_elt** %op1_elt, metadata !12920, metadata !DIExpression()), !dbg !12921
  %0 = load i32, i32* %code.addr, align 4, !dbg !12922
  %cmp = icmp eq i32 %0, 81, !dbg !12924
  br i1 %cmp, label %land.lhs.true, label %if.end28, !dbg !12925

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !12926
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !12926
  %bf.load = load i32, i32* %2, align 8, !dbg !12926
  %bf.clear = and i32 %bf.load, 65535, !dbg !12926
  %cmp1 = icmp eq i32 %bf.clear, 39, !dbg !12927
  br i1 %cmp1, label %land.lhs.true2, label %if.end28, !dbg !12928

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !12929
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !12929
  %bf.load3 = load i32, i32* %4, align 8, !dbg !12929
  %bf.lshr = lshr i32 %bf.load3, 16, !dbg !12929
  %bf.clear4 = and i32 %bf.lshr, 255, !dbg !12929
  %idxprom = zext i32 %bf.clear4 to i64, !dbg !12929
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !12929
  %5 = load i8, i8* %arrayidx, align 1, !dbg !12929
  %conv = zext i8 %5 to i16, !dbg !12929
  %conv5 = zext i16 %conv to i32, !dbg !12929
  %6 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !12930
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !12930
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !12930
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !12930
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**, !dbg !12930
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !12930
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !12930
  %bf.load7 = load i32, i32* %8, align 8, !dbg !12930
  %bf.lshr8 = lshr i32 %bf.load7, 16, !dbg !12930
  %bf.clear9 = and i32 %bf.lshr8, 255, !dbg !12930
  %idxprom10 = zext i32 %bf.clear9 to i64, !dbg !12930
  %arrayidx11 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom10, !dbg !12930
  %9 = load i8, i8* %arrayidx11, align 1, !dbg !12930
  %conv12 = zext i8 %9 to i16, !dbg !12930
  %conv13 = zext i16 %conv12 to i32, !dbg !12930
  %cmp14 = icmp sgt i32 %conv5, %conv13, !dbg !12931
  br i1 %cmp14, label %if.then, label %if.end28, !dbg !12932

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i32* %inner_mode, metadata !12933, metadata !DIExpression()), !dbg !12935
  %10 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !12936
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !12936
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !12936
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 0, !dbg !12936
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !12936
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !12936
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !12936
  %bf.load20 = load i32, i32* %12, align 8, !dbg !12936
  %bf.lshr21 = lshr i32 %bf.load20, 16, !dbg !12936
  %bf.clear22 = and i32 %bf.lshr21, 255, !dbg !12936
  store i32 %bf.clear22, i32* %inner_mode, align 4, !dbg !12935
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !12937, metadata !DIExpression()), !dbg !12938
  %13 = load i32, i32* %inner_mode, align 4, !dbg !12939
  %14 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !12940
  %call = call %struct.rtx_def* @record_jump_cond_subreg(i32 %13, %struct.rtx_def* %14), !dbg !12941
  store %struct.rtx_def* %call, %struct.rtx_def** %tem, align 8, !dbg !12938
  %15 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !12942
  %tobool = icmp ne %struct.rtx_def* %15, null, !dbg !12942
  br i1 %tobool, label %if.then23, label %if.end, !dbg !12944

if.then23:                                        ; preds = %if.then
  %16 = load i32, i32* %code.addr, align 4, !dbg !12945
  %17 = load i32, i32* %mode.addr, align 4, !dbg !12946
  %18 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !12947
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !12947
  %fld25 = bitcast %union.u* %u24 to [1 x %union.rtunion_def]*, !dbg !12947
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i64 0, i64 0, !dbg !12947
  %rt_rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**, !dbg !12947
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx27, align 8, !dbg !12947
  %20 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !12948
  %21 = load i32, i32* %reversed_nonequality.addr, align 4, !dbg !12949
  call void @record_jump_cond(i32 %16, i32 %17, %struct.rtx_def* %19, %struct.rtx_def* %20, i32 %21), !dbg !12950
  br label %if.end, !dbg !12950

if.end:                                           ; preds = %if.then23, %if.then
  br label %if.end28, !dbg !12951

if.end28:                                         ; preds = %if.end, %land.lhs.true2, %land.lhs.true, %entry
  %22 = load i32, i32* %code.addr, align 4, !dbg !12952
  %cmp29 = icmp eq i32 %22, 81, !dbg !12954
  br i1 %cmp29, label %land.lhs.true31, label %if.end75, !dbg !12955

land.lhs.true31:                                  ; preds = %if.end28
  %23 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !12956
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !12956
  %bf.load32 = load i32, i32* %24, align 8, !dbg !12956
  %bf.clear33 = and i32 %bf.load32, 65535, !dbg !12956
  %cmp34 = icmp eq i32 %bf.clear33, 39, !dbg !12957
  br i1 %cmp34, label %land.lhs.true36, label %if.end75, !dbg !12958

land.lhs.true36:                                  ; preds = %land.lhs.true31
  %25 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !12959
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !12959
  %bf.load37 = load i32, i32* %26, align 8, !dbg !12959
  %bf.lshr38 = lshr i32 %bf.load37, 16, !dbg !12959
  %bf.clear39 = and i32 %bf.lshr38, 255, !dbg !12959
  %idxprom40 = zext i32 %bf.clear39 to i64, !dbg !12959
  %arrayidx41 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom40, !dbg !12959
  %27 = load i8, i8* %arrayidx41, align 1, !dbg !12959
  %conv42 = zext i8 %27 to i16, !dbg !12959
  %conv43 = zext i16 %conv42 to i32, !dbg !12959
  %28 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !12960
  %u44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1, !dbg !12960
  %fld45 = bitcast %union.u* %u44 to [1 x %union.rtunion_def]*, !dbg !12960
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i64 0, i64 0, !dbg !12960
  %rt_rtx47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**, !dbg !12960
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx47, align 8, !dbg !12960
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !12960
  %bf.load48 = load i32, i32* %30, align 8, !dbg !12960
  %bf.lshr49 = lshr i32 %bf.load48, 16, !dbg !12960
  %bf.clear50 = and i32 %bf.lshr49, 255, !dbg !12960
  %idxprom51 = zext i32 %bf.clear50 to i64, !dbg !12960
  %arrayidx52 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom51, !dbg !12960
  %31 = load i8, i8* %arrayidx52, align 1, !dbg !12960
  %conv53 = zext i8 %31 to i16, !dbg !12960
  %conv54 = zext i16 %conv53 to i32, !dbg !12960
  %cmp55 = icmp sgt i32 %conv43, %conv54, !dbg !12961
  br i1 %cmp55, label %if.then57, label %if.end75, !dbg !12962

if.then57:                                        ; preds = %land.lhs.true36
  call void @llvm.dbg.declare(metadata i32* %inner_mode58, metadata !12963, metadata !DIExpression()), !dbg !12965
  %32 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !12966
  %u59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !12966
  %fld60 = bitcast %union.u* %u59 to [1 x %union.rtunion_def]*, !dbg !12966
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i64 0, i64 0, !dbg !12966
  %rt_rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**, !dbg !12966
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx62, align 8, !dbg !12966
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !12966
  %bf.load63 = load i32, i32* %34, align 8, !dbg !12966
  %bf.lshr64 = lshr i32 %bf.load63, 16, !dbg !12966
  %bf.clear65 = and i32 %bf.lshr64, 255, !dbg !12966
  store i32 %bf.clear65, i32* %inner_mode58, align 4, !dbg !12965
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem66, metadata !12967, metadata !DIExpression()), !dbg !12968
  %35 = load i32, i32* %inner_mode58, align 4, !dbg !12969
  %36 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !12970
  %call67 = call %struct.rtx_def* @record_jump_cond_subreg(i32 %35, %struct.rtx_def* %36), !dbg !12971
  store %struct.rtx_def* %call67, %struct.rtx_def** %tem66, align 8, !dbg !12968
  %37 = load %struct.rtx_def*, %struct.rtx_def** %tem66, align 8, !dbg !12972
  %tobool68 = icmp ne %struct.rtx_def* %37, null, !dbg !12972
  br i1 %tobool68, label %if.then69, label %if.end74, !dbg !12974

if.then69:                                        ; preds = %if.then57
  %38 = load i32, i32* %code.addr, align 4, !dbg !12975
  %39 = load i32, i32* %mode.addr, align 4, !dbg !12976
  %40 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !12977
  %u70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !12977
  %fld71 = bitcast %union.u* %u70 to [1 x %union.rtunion_def]*, !dbg !12977
  %arrayidx72 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld71, i64 0, i64 0, !dbg !12977
  %rt_rtx73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**, !dbg !12977
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx73, align 8, !dbg !12977
  %42 = load %struct.rtx_def*, %struct.rtx_def** %tem66, align 8, !dbg !12978
  %43 = load i32, i32* %reversed_nonequality.addr, align 4, !dbg !12979
  call void @record_jump_cond(i32 %38, i32 %39, %struct.rtx_def* %41, %struct.rtx_def* %42, i32 %43), !dbg !12980
  br label %if.end74, !dbg !12980

if.end74:                                         ; preds = %if.then69, %if.then57
  br label %if.end75, !dbg !12981

if.end75:                                         ; preds = %if.end74, %land.lhs.true36, %land.lhs.true31, %if.end28
  %44 = load i32, i32* %code.addr, align 4, !dbg !12982
  %cmp76 = icmp eq i32 %44, 80, !dbg !12984
  br i1 %cmp76, label %land.lhs.true78, label %if.end125, !dbg !12985

land.lhs.true78:                                  ; preds = %if.end75
  %45 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !12986
  %46 = bitcast %struct.rtx_def* %45 to i32*, !dbg !12986
  %bf.load79 = load i32, i32* %46, align 8, !dbg !12986
  %bf.clear80 = and i32 %bf.load79, 65535, !dbg !12986
  %cmp81 = icmp eq i32 %bf.clear80, 39, !dbg !12987
  br i1 %cmp81, label %land.lhs.true83, label %if.end125, !dbg !12988

land.lhs.true83:                                  ; preds = %land.lhs.true78
  %47 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !12989
  %call84 = call i32 @subreg_lowpart_p(%struct.rtx_def* %47), !dbg !12990
  %tobool85 = icmp ne i32 %call84, 0, !dbg !12990
  br i1 %tobool85, label %land.lhs.true86, label %if.end125, !dbg !12991

land.lhs.true86:                                  ; preds = %land.lhs.true83
  %48 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !12992
  %49 = bitcast %struct.rtx_def* %48 to i32*, !dbg !12992
  %bf.load87 = load i32, i32* %49, align 8, !dbg !12992
  %bf.lshr88 = lshr i32 %bf.load87, 16, !dbg !12992
  %bf.clear89 = and i32 %bf.lshr88, 255, !dbg !12992
  %idxprom90 = zext i32 %bf.clear89 to i64, !dbg !12992
  %arrayidx91 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom90, !dbg !12992
  %50 = load i8, i8* %arrayidx91, align 1, !dbg !12992
  %conv92 = zext i8 %50 to i16, !dbg !12992
  %conv93 = zext i16 %conv92 to i32, !dbg !12992
  %51 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !12993
  %u94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1, !dbg !12993
  %fld95 = bitcast %union.u* %u94 to [1 x %union.rtunion_def]*, !dbg !12993
  %arrayidx96 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld95, i64 0, i64 0, !dbg !12993
  %rt_rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**, !dbg !12993
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx97, align 8, !dbg !12993
  %53 = bitcast %struct.rtx_def* %52 to i32*, !dbg !12993
  %bf.load98 = load i32, i32* %53, align 8, !dbg !12993
  %bf.lshr99 = lshr i32 %bf.load98, 16, !dbg !12993
  %bf.clear100 = and i32 %bf.lshr99, 255, !dbg !12993
  %idxprom101 = zext i32 %bf.clear100 to i64, !dbg !12993
  %arrayidx102 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom101, !dbg !12993
  %54 = load i8, i8* %arrayidx102, align 1, !dbg !12993
  %conv103 = zext i8 %54 to i16, !dbg !12993
  %conv104 = zext i16 %conv103 to i32, !dbg !12993
  %cmp105 = icmp slt i32 %conv93, %conv104, !dbg !12994
  br i1 %cmp105, label %if.then107, label %if.end125, !dbg !12995

if.then107:                                       ; preds = %land.lhs.true86
  call void @llvm.dbg.declare(metadata i32* %inner_mode108, metadata !12996, metadata !DIExpression()), !dbg !12998
  %55 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !12999
  %u109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i32 0, i32 1, !dbg !12999
  %fld110 = bitcast %union.u* %u109 to [1 x %union.rtunion_def]*, !dbg !12999
  %arrayidx111 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld110, i64 0, i64 0, !dbg !12999
  %rt_rtx112 = bitcast %union.rtunion_def* %arrayidx111 to %struct.rtx_def**, !dbg !12999
  %56 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx112, align 8, !dbg !12999
  %57 = bitcast %struct.rtx_def* %56 to i32*, !dbg !12999
  %bf.load113 = load i32, i32* %57, align 8, !dbg !12999
  %bf.lshr114 = lshr i32 %bf.load113, 16, !dbg !12999
  %bf.clear115 = and i32 %bf.lshr114, 255, !dbg !12999
  store i32 %bf.clear115, i32* %inner_mode108, align 4, !dbg !12998
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem116, metadata !13000, metadata !DIExpression()), !dbg !13001
  %58 = load i32, i32* %inner_mode108, align 4, !dbg !13002
  %59 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13003
  %call117 = call %struct.rtx_def* @record_jump_cond_subreg(i32 %58, %struct.rtx_def* %59), !dbg !13004
  store %struct.rtx_def* %call117, %struct.rtx_def** %tem116, align 8, !dbg !13001
  %60 = load %struct.rtx_def*, %struct.rtx_def** %tem116, align 8, !dbg !13005
  %tobool118 = icmp ne %struct.rtx_def* %60, null, !dbg !13005
  br i1 %tobool118, label %if.then119, label %if.end124, !dbg !13007

if.then119:                                       ; preds = %if.then107
  %61 = load i32, i32* %code.addr, align 4, !dbg !13008
  %62 = load i32, i32* %mode.addr, align 4, !dbg !13009
  %63 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13010
  %u120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1, !dbg !13010
  %fld121 = bitcast %union.u* %u120 to [1 x %union.rtunion_def]*, !dbg !13010
  %arrayidx122 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld121, i64 0, i64 0, !dbg !13010
  %rt_rtx123 = bitcast %union.rtunion_def* %arrayidx122 to %struct.rtx_def**, !dbg !13010
  %64 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx123, align 8, !dbg !13010
  %65 = load %struct.rtx_def*, %struct.rtx_def** %tem116, align 8, !dbg !13011
  %66 = load i32, i32* %reversed_nonequality.addr, align 4, !dbg !13012
  call void @record_jump_cond(i32 %61, i32 %62, %struct.rtx_def* %64, %struct.rtx_def* %65, i32 %66), !dbg !13013
  br label %if.end124, !dbg !13013

if.end124:                                        ; preds = %if.then119, %if.then107
  br label %if.end125, !dbg !13014

if.end125:                                        ; preds = %if.end124, %land.lhs.true86, %land.lhs.true83, %land.lhs.true78, %if.end75
  %67 = load i32, i32* %code.addr, align 4, !dbg !13015
  %cmp126 = icmp eq i32 %67, 80, !dbg !13017
  br i1 %cmp126, label %land.lhs.true128, label %if.end175, !dbg !13018

land.lhs.true128:                                 ; preds = %if.end125
  %68 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13019
  %69 = bitcast %struct.rtx_def* %68 to i32*, !dbg !13019
  %bf.load129 = load i32, i32* %69, align 8, !dbg !13019
  %bf.clear130 = and i32 %bf.load129, 65535, !dbg !13019
  %cmp131 = icmp eq i32 %bf.clear130, 39, !dbg !13020
  br i1 %cmp131, label %land.lhs.true133, label %if.end175, !dbg !13021

land.lhs.true133:                                 ; preds = %land.lhs.true128
  %70 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13022
  %call134 = call i32 @subreg_lowpart_p(%struct.rtx_def* %70), !dbg !13023
  %tobool135 = icmp ne i32 %call134, 0, !dbg !13023
  br i1 %tobool135, label %land.lhs.true136, label %if.end175, !dbg !13024

land.lhs.true136:                                 ; preds = %land.lhs.true133
  %71 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13025
  %72 = bitcast %struct.rtx_def* %71 to i32*, !dbg !13025
  %bf.load137 = load i32, i32* %72, align 8, !dbg !13025
  %bf.lshr138 = lshr i32 %bf.load137, 16, !dbg !13025
  %bf.clear139 = and i32 %bf.lshr138, 255, !dbg !13025
  %idxprom140 = zext i32 %bf.clear139 to i64, !dbg !13025
  %arrayidx141 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom140, !dbg !13025
  %73 = load i8, i8* %arrayidx141, align 1, !dbg !13025
  %conv142 = zext i8 %73 to i16, !dbg !13025
  %conv143 = zext i16 %conv142 to i32, !dbg !13025
  %74 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13026
  %u144 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i32 0, i32 1, !dbg !13026
  %fld145 = bitcast %union.u* %u144 to [1 x %union.rtunion_def]*, !dbg !13026
  %arrayidx146 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld145, i64 0, i64 0, !dbg !13026
  %rt_rtx147 = bitcast %union.rtunion_def* %arrayidx146 to %struct.rtx_def**, !dbg !13026
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx147, align 8, !dbg !13026
  %76 = bitcast %struct.rtx_def* %75 to i32*, !dbg !13026
  %bf.load148 = load i32, i32* %76, align 8, !dbg !13026
  %bf.lshr149 = lshr i32 %bf.load148, 16, !dbg !13026
  %bf.clear150 = and i32 %bf.lshr149, 255, !dbg !13026
  %idxprom151 = zext i32 %bf.clear150 to i64, !dbg !13026
  %arrayidx152 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom151, !dbg !13026
  %77 = load i8, i8* %arrayidx152, align 1, !dbg !13026
  %conv153 = zext i8 %77 to i16, !dbg !13026
  %conv154 = zext i16 %conv153 to i32, !dbg !13026
  %cmp155 = icmp slt i32 %conv143, %conv154, !dbg !13027
  br i1 %cmp155, label %if.then157, label %if.end175, !dbg !13028

if.then157:                                       ; preds = %land.lhs.true136
  call void @llvm.dbg.declare(metadata i32* %inner_mode158, metadata !13029, metadata !DIExpression()), !dbg !13031
  %78 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13032
  %u159 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1, !dbg !13032
  %fld160 = bitcast %union.u* %u159 to [1 x %union.rtunion_def]*, !dbg !13032
  %arrayidx161 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld160, i64 0, i64 0, !dbg !13032
  %rt_rtx162 = bitcast %union.rtunion_def* %arrayidx161 to %struct.rtx_def**, !dbg !13032
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx162, align 8, !dbg !13032
  %80 = bitcast %struct.rtx_def* %79 to i32*, !dbg !13032
  %bf.load163 = load i32, i32* %80, align 8, !dbg !13032
  %bf.lshr164 = lshr i32 %bf.load163, 16, !dbg !13032
  %bf.clear165 = and i32 %bf.lshr164, 255, !dbg !13032
  store i32 %bf.clear165, i32* %inner_mode158, align 4, !dbg !13031
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem166, metadata !13033, metadata !DIExpression()), !dbg !13034
  %81 = load i32, i32* %inner_mode158, align 4, !dbg !13035
  %82 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13036
  %call167 = call %struct.rtx_def* @record_jump_cond_subreg(i32 %81, %struct.rtx_def* %82), !dbg !13037
  store %struct.rtx_def* %call167, %struct.rtx_def** %tem166, align 8, !dbg !13034
  %83 = load %struct.rtx_def*, %struct.rtx_def** %tem166, align 8, !dbg !13038
  %tobool168 = icmp ne %struct.rtx_def* %83, null, !dbg !13038
  br i1 %tobool168, label %if.then169, label %if.end174, !dbg !13040

if.then169:                                       ; preds = %if.then157
  %84 = load i32, i32* %code.addr, align 4, !dbg !13041
  %85 = load i32, i32* %mode.addr, align 4, !dbg !13042
  %86 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13043
  %u170 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1, !dbg !13043
  %fld171 = bitcast %union.u* %u170 to [1 x %union.rtunion_def]*, !dbg !13043
  %arrayidx172 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld171, i64 0, i64 0, !dbg !13043
  %rt_rtx173 = bitcast %union.rtunion_def* %arrayidx172 to %struct.rtx_def**, !dbg !13043
  %87 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx173, align 8, !dbg !13043
  %88 = load %struct.rtx_def*, %struct.rtx_def** %tem166, align 8, !dbg !13044
  %89 = load i32, i32* %reversed_nonequality.addr, align 4, !dbg !13045
  call void @record_jump_cond(i32 %84, i32 %85, %struct.rtx_def* %87, %struct.rtx_def* %88, i32 %89), !dbg !13046
  br label %if.end174, !dbg !13046

if.end174:                                        ; preds = %if.then169, %if.then157
  br label %if.end175, !dbg !13047

if.end175:                                        ; preds = %if.end174, %land.lhs.true136, %land.lhs.true133, %land.lhs.true128, %if.end125
  store i32 0, i32* @do_not_record, align 4, !dbg !13048
  store i32 0, i32* @hash_arg_in_memory, align 4, !dbg !13049
  %90 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13050
  %91 = bitcast %struct.rtx_def* %90 to i32*, !dbg !13050
  %bf.load176 = load i32, i32* %91, align 8, !dbg !13050
  %bf.clear177 = and i32 %bf.load176, 65535, !dbg !13050
  %cmp178 = icmp eq i32 %bf.clear177, 37, !dbg !13050
  br i1 %cmp178, label %land.lhs.true180, label %cond.false, !dbg !13050

land.lhs.true180:                                 ; preds = %if.end175
  %92 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13050
  %call181 = call i32 @rhs_regno(%struct.rtx_def* %92), !dbg !13050
  %cmp182 = icmp uge i32 %call181, 53, !dbg !13050
  br i1 %cmp182, label %cond.true, label %cond.false, !dbg !13050

cond.true:                                        ; preds = %land.lhs.true180
  %93 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13050
  %call184 = call i32 @rhs_regno(%struct.rtx_def* %93), !dbg !13050
  %call185 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call184), !dbg !13050
  %reg_qty = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call185, i32 0, i32 1, !dbg !13050
  %94 = load i32, i32* %reg_qty, align 4, !dbg !13050
  %add = add i32 4736, %94, !dbg !13050
  br label %cond.end, !dbg !13050

cond.false:                                       ; preds = %land.lhs.true180, %if.end175
  %95 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13050
  %96 = load i32, i32* %mode.addr, align 4, !dbg !13050
  %call186 = call i32 @canon_hash(%struct.rtx_def* %95, i32 %96), !dbg !13050
  br label %cond.end, !dbg !13050

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %call186, %cond.false ], !dbg !13050
  %and = and i32 %cond, 31, !dbg !13050
  store i32 %and, i32* %op0_hash, align 4, !dbg !13051
  %97 = load i32, i32* @hash_arg_in_memory, align 4, !dbg !13052
  store i32 %97, i32* %op0_in_memory, align 4, !dbg !13053
  %98 = load i32, i32* @do_not_record, align 4, !dbg !13054
  %tobool187 = icmp ne i32 %98, 0, !dbg !13054
  br i1 %tobool187, label %if.then188, label %if.end189, !dbg !13056

if.then188:                                       ; preds = %cond.end
  br label %return, !dbg !13057

if.end189:                                        ; preds = %cond.end
  store i32 0, i32* @do_not_record, align 4, !dbg !13058
  store i32 0, i32* @hash_arg_in_memory, align 4, !dbg !13059
  %99 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13060
  %100 = bitcast %struct.rtx_def* %99 to i32*, !dbg !13060
  %bf.load190 = load i32, i32* %100, align 8, !dbg !13060
  %bf.clear191 = and i32 %bf.load190, 65535, !dbg !13060
  %cmp192 = icmp eq i32 %bf.clear191, 37, !dbg !13060
  br i1 %cmp192, label %land.lhs.true194, label %cond.false203, !dbg !13060

land.lhs.true194:                                 ; preds = %if.end189
  %101 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13060
  %call195 = call i32 @rhs_regno(%struct.rtx_def* %101), !dbg !13060
  %cmp196 = icmp uge i32 %call195, 53, !dbg !13060
  br i1 %cmp196, label %cond.true198, label %cond.false203, !dbg !13060

cond.true198:                                     ; preds = %land.lhs.true194
  %102 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13060
  %call199 = call i32 @rhs_regno(%struct.rtx_def* %102), !dbg !13060
  %call200 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call199), !dbg !13060
  %reg_qty201 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call200, i32 0, i32 1, !dbg !13060
  %103 = load i32, i32* %reg_qty201, align 4, !dbg !13060
  %add202 = add i32 4736, %103, !dbg !13060
  br label %cond.end205, !dbg !13060

cond.false203:                                    ; preds = %land.lhs.true194, %if.end189
  %104 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13060
  %105 = load i32, i32* %mode.addr, align 4, !dbg !13060
  %call204 = call i32 @canon_hash(%struct.rtx_def* %104, i32 %105), !dbg !13060
  br label %cond.end205, !dbg !13060

cond.end205:                                      ; preds = %cond.false203, %cond.true198
  %cond206 = phi i32 [ %add202, %cond.true198 ], [ %call204, %cond.false203 ], !dbg !13060
  %and207 = and i32 %cond206, 31, !dbg !13060
  store i32 %and207, i32* %op1_hash, align 4, !dbg !13061
  %106 = load i32, i32* @hash_arg_in_memory, align 4, !dbg !13062
  store i32 %106, i32* %op1_in_memory, align 4, !dbg !13063
  %107 = load i32, i32* @do_not_record, align 4, !dbg !13064
  %tobool208 = icmp ne i32 %107, 0, !dbg !13064
  br i1 %tobool208, label %if.then209, label %if.end210, !dbg !13066

if.then209:                                       ; preds = %cond.end205
  br label %return, !dbg !13067

if.end210:                                        ; preds = %cond.end205
  %108 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13068
  %109 = load i32, i32* %op0_hash, align 4, !dbg !13069
  %110 = load i32, i32* %mode.addr, align 4, !dbg !13070
  %call211 = call %struct.table_elt* @lookup(%struct.rtx_def* %108, i32 %109, i32 %110), !dbg !13071
  store %struct.table_elt* %call211, %struct.table_elt** %op0_elt, align 8, !dbg !13072
  %111 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13073
  %112 = load i32, i32* %op1_hash, align 4, !dbg !13074
  %113 = load i32, i32* %mode.addr, align 4, !dbg !13075
  %call212 = call %struct.table_elt* @lookup(%struct.rtx_def* %111, i32 %112, i32 %113), !dbg !13076
  store %struct.table_elt* %call212, %struct.table_elt** %op1_elt, align 8, !dbg !13077
  %114 = load %struct.table_elt*, %struct.table_elt** %op0_elt, align 8, !dbg !13078
  %cmp213 = icmp ne %struct.table_elt* %114, null, !dbg !13080
  br i1 %cmp213, label %land.lhs.true215, label %lor.lhs.false, !dbg !13081

land.lhs.true215:                                 ; preds = %if.end210
  %115 = load %struct.table_elt*, %struct.table_elt** %op1_elt, align 8, !dbg !13082
  %cmp216 = icmp ne %struct.table_elt* %115, null, !dbg !13083
  br i1 %cmp216, label %land.lhs.true218, label %lor.lhs.false, !dbg !13084

land.lhs.true218:                                 ; preds = %land.lhs.true215
  %116 = load %struct.table_elt*, %struct.table_elt** %op0_elt, align 8, !dbg !13085
  %first_same_value = getelementptr inbounds %struct.table_elt, %struct.table_elt* %116, i32 0, i32 6, !dbg !13086
  %117 = load %struct.table_elt*, %struct.table_elt** %first_same_value, align 8, !dbg !13086
  %118 = load %struct.table_elt*, %struct.table_elt** %op1_elt, align 8, !dbg !13087
  %first_same_value219 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %118, i32 0, i32 6, !dbg !13088
  %119 = load %struct.table_elt*, %struct.table_elt** %first_same_value219, align 8, !dbg !13088
  %cmp220 = icmp eq %struct.table_elt* %117, %119, !dbg !13089
  br i1 %cmp220, label %if.then227, label %lor.lhs.false, !dbg !13090

lor.lhs.false:                                    ; preds = %land.lhs.true218, %land.lhs.true215, %if.end210
  %120 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13091
  %121 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13092
  %cmp222 = icmp eq %struct.rtx_def* %120, %121, !dbg !13093
  br i1 %cmp222, label %if.then227, label %lor.lhs.false224, !dbg !13094

lor.lhs.false224:                                 ; preds = %lor.lhs.false
  %122 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13095
  %123 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13096
  %call225 = call i32 @rtx_equal_p(%struct.rtx_def* %122, %struct.rtx_def* %123), !dbg !13097
  %tobool226 = icmp ne i32 %call225, 0, !dbg !13097
  br i1 %tobool226, label %if.then227, label %if.end228, !dbg !13098

if.then227:                                       ; preds = %lor.lhs.false224, %lor.lhs.false, %land.lhs.true218
  br label %return, !dbg !13099

if.end228:                                        ; preds = %lor.lhs.false224
  %124 = load i32, i32* %code.addr, align 4, !dbg !13100
  %cmp229 = icmp ne i32 %124, 81, !dbg !13102
  br i1 %cmp229, label %if.then267, label %lor.lhs.false231, !dbg !13103

lor.lhs.false231:                                 ; preds = %if.end228
  %125 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13104
  %126 = bitcast %struct.rtx_def* %125 to i32*, !dbg !13104
  %bf.load232 = load i32, i32* %126, align 8, !dbg !13104
  %bf.lshr233 = lshr i32 %bf.load232, 16, !dbg !13104
  %bf.clear234 = and i32 %bf.lshr233, 255, !dbg !13104
  %idxprom235 = zext i32 %bf.clear234 to i64, !dbg !13104
  %arrayidx236 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom235, !dbg !13104
  %127 = load i8, i8* %arrayidx236, align 1, !dbg !13104
  %conv237 = zext i8 %127 to i32, !dbg !13104
  %cmp238 = icmp eq i32 %conv237, 8, !dbg !13104
  br i1 %cmp238, label %if.then267, label %lor.lhs.false240, !dbg !13104

lor.lhs.false240:                                 ; preds = %lor.lhs.false231
  %128 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13104
  %129 = bitcast %struct.rtx_def* %128 to i32*, !dbg !13104
  %bf.load241 = load i32, i32* %129, align 8, !dbg !13104
  %bf.lshr242 = lshr i32 %bf.load241, 16, !dbg !13104
  %bf.clear243 = and i32 %bf.lshr242, 255, !dbg !13104
  %idxprom244 = zext i32 %bf.clear243 to i64, !dbg !13104
  %arrayidx245 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom244, !dbg !13104
  %130 = load i8, i8* %arrayidx245, align 1, !dbg !13104
  %conv246 = zext i8 %130 to i32, !dbg !13104
  %cmp247 = icmp eq i32 %conv246, 9, !dbg !13104
  br i1 %cmp247, label %if.then267, label %lor.lhs.false249, !dbg !13104

lor.lhs.false249:                                 ; preds = %lor.lhs.false240
  %131 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13104
  %132 = bitcast %struct.rtx_def* %131 to i32*, !dbg !13104
  %bf.load250 = load i32, i32* %132, align 8, !dbg !13104
  %bf.lshr251 = lshr i32 %bf.load250, 16, !dbg !13104
  %bf.clear252 = and i32 %bf.lshr251, 255, !dbg !13104
  %idxprom253 = zext i32 %bf.clear252 to i64, !dbg !13104
  %arrayidx254 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom253, !dbg !13104
  %133 = load i8, i8* %arrayidx254, align 1, !dbg !13104
  %conv255 = zext i8 %133 to i32, !dbg !13104
  %cmp256 = icmp eq i32 %conv255, 11, !dbg !13104
  br i1 %cmp256, label %if.then267, label %lor.lhs.false258, !dbg !13104

lor.lhs.false258:                                 ; preds = %lor.lhs.false249
  %134 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13104
  %135 = bitcast %struct.rtx_def* %134 to i32*, !dbg !13104
  %bf.load259 = load i32, i32* %135, align 8, !dbg !13104
  %bf.lshr260 = lshr i32 %bf.load259, 16, !dbg !13104
  %bf.clear261 = and i32 %bf.lshr260, 255, !dbg !13104
  %idxprom262 = zext i32 %bf.clear261 to i64, !dbg !13104
  %arrayidx263 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom262, !dbg !13104
  %136 = load i8, i8* %arrayidx263, align 1, !dbg !13104
  %conv264 = zext i8 %136 to i32, !dbg !13104
  %cmp265 = icmp eq i32 %conv264, 17, !dbg !13104
  br i1 %cmp265, label %if.then267, label %if.end412, !dbg !13105

if.then267:                                       ; preds = %lor.lhs.false258, %lor.lhs.false249, %lor.lhs.false240, %lor.lhs.false231, %if.end228
  call void @llvm.dbg.declare(metadata %struct.qty_table_elem** %ent, metadata !13106, metadata !DIExpression()), !dbg !13108
  call void @llvm.dbg.declare(metadata i32* %qty, metadata !13109, metadata !DIExpression()), !dbg !13110
  %137 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13111
  %138 = bitcast %struct.rtx_def* %137 to i32*, !dbg !13111
  %bf.load268 = load i32, i32* %138, align 8, !dbg !13111
  %bf.clear269 = and i32 %bf.load268, 65535, !dbg !13111
  %cmp270 = icmp eq i32 %bf.clear269, 37, !dbg !13111
  br i1 %cmp270, label %if.end274, label %if.then272, !dbg !13113

if.then272:                                       ; preds = %if.then267
  %139 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13114
  %call273 = call %struct.rtx_def* @equiv_constant(%struct.rtx_def* %139), !dbg !13115
  store %struct.rtx_def* %call273, %struct.rtx_def** %op1.addr, align 8, !dbg !13116
  br label %if.end274, !dbg !13117

if.end274:                                        ; preds = %if.then272, %if.then267
  %140 = load i32, i32* %reversed_nonequality.addr, align 4, !dbg !13118
  %tobool275 = icmp ne i32 %140, 0, !dbg !13118
  br i1 %tobool275, label %land.lhs.true276, label %lor.lhs.false300, !dbg !13120

land.lhs.true276:                                 ; preds = %if.end274
  %141 = load i32, i32* %mode.addr, align 4, !dbg !13121
  %idxprom277 = zext i32 %141 to i64, !dbg !13121
  %arrayidx278 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom277, !dbg !13121
  %142 = load i8, i8* %arrayidx278, align 1, !dbg !13121
  %conv279 = zext i8 %142 to i32, !dbg !13121
  %cmp280 = icmp eq i32 %conv279, 8, !dbg !13121
  br i1 %cmp280, label %if.then308, label %lor.lhs.false282, !dbg !13121

lor.lhs.false282:                                 ; preds = %land.lhs.true276
  %143 = load i32, i32* %mode.addr, align 4, !dbg !13121
  %idxprom283 = zext i32 %143 to i64, !dbg !13121
  %arrayidx284 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom283, !dbg !13121
  %144 = load i8, i8* %arrayidx284, align 1, !dbg !13121
  %conv285 = zext i8 %144 to i32, !dbg !13121
  %cmp286 = icmp eq i32 %conv285, 9, !dbg !13121
  br i1 %cmp286, label %if.then308, label %lor.lhs.false288, !dbg !13121

lor.lhs.false288:                                 ; preds = %lor.lhs.false282
  %145 = load i32, i32* %mode.addr, align 4, !dbg !13121
  %idxprom289 = zext i32 %145 to i64, !dbg !13121
  %arrayidx290 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom289, !dbg !13121
  %146 = load i8, i8* %arrayidx290, align 1, !dbg !13121
  %conv291 = zext i8 %146 to i32, !dbg !13121
  %cmp292 = icmp eq i32 %conv291, 11, !dbg !13121
  br i1 %cmp292, label %if.then308, label %lor.lhs.false294, !dbg !13121

lor.lhs.false294:                                 ; preds = %lor.lhs.false288
  %147 = load i32, i32* %mode.addr, align 4, !dbg !13121
  %idxprom295 = zext i32 %147 to i64, !dbg !13121
  %arrayidx296 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom295, !dbg !13121
  %148 = load i8, i8* %arrayidx296, align 1, !dbg !13121
  %conv297 = zext i8 %148 to i32, !dbg !13121
  %cmp298 = icmp eq i32 %conv297, 17, !dbg !13121
  br i1 %cmp298, label %if.then308, label %lor.lhs.false300, !dbg !13122

lor.lhs.false300:                                 ; preds = %lor.lhs.false294, %if.end274
  %149 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13123
  %150 = bitcast %struct.rtx_def* %149 to i32*, !dbg !13123
  %bf.load301 = load i32, i32* %150, align 8, !dbg !13123
  %bf.clear302 = and i32 %bf.load301, 65535, !dbg !13123
  %cmp303 = icmp eq i32 %bf.clear302, 37, !dbg !13123
  br i1 %cmp303, label %lor.lhs.false305, label %if.then308, !dbg !13124

lor.lhs.false305:                                 ; preds = %lor.lhs.false300
  %151 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13125
  %cmp306 = icmp eq %struct.rtx_def* %151, null, !dbg !13126
  br i1 %cmp306, label %if.then308, label %if.end309, !dbg !13127

if.then308:                                       ; preds = %lor.lhs.false305, %lor.lhs.false300, %lor.lhs.false294, %lor.lhs.false288, %lor.lhs.false282, %land.lhs.true276
  br label %return, !dbg !13128

if.end309:                                        ; preds = %lor.lhs.false305
  %152 = load %struct.table_elt*, %struct.table_elt** %op0_elt, align 8, !dbg !13129
  %cmp310 = icmp eq %struct.table_elt* %152, null, !dbg !13131
  br i1 %cmp310, label %if.then312, label %if.end363, !dbg !13132

if.then312:                                       ; preds = %if.end309
  %153 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13133
  %call313 = call i32 @insert_regs(%struct.rtx_def* %153, %struct.table_elt* null, i32 0), !dbg !13136
  %tobool314 = icmp ne i32 %call313, 0, !dbg !13136
  br i1 %tobool314, label %if.then315, label %if.end360, !dbg !13137

if.then315:                                       ; preds = %if.then312
  %154 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13138
  call void @rehash_using_reg(%struct.rtx_def* %154), !dbg !13140
  %155 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13141
  %156 = bitcast %struct.rtx_def* %155 to i32*, !dbg !13141
  %bf.load316 = load i32, i32* %156, align 8, !dbg !13141
  %bf.clear317 = and i32 %bf.load316, 65535, !dbg !13141
  %cmp318 = icmp eq i32 %bf.clear317, 37, !dbg !13141
  br i1 %cmp318, label %land.lhs.true320, label %cond.false329, !dbg !13141

land.lhs.true320:                                 ; preds = %if.then315
  %157 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13141
  %call321 = call i32 @rhs_regno(%struct.rtx_def* %157), !dbg !13141
  %cmp322 = icmp uge i32 %call321, 53, !dbg !13141
  br i1 %cmp322, label %cond.true324, label %cond.false329, !dbg !13141

cond.true324:                                     ; preds = %land.lhs.true320
  %158 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13141
  %call325 = call i32 @rhs_regno(%struct.rtx_def* %158), !dbg !13141
  %call326 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call325), !dbg !13141
  %reg_qty327 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call326, i32 0, i32 1, !dbg !13141
  %159 = load i32, i32* %reg_qty327, align 4, !dbg !13141
  %add328 = add i32 4736, %159, !dbg !13141
  br label %cond.end331, !dbg !13141

cond.false329:                                    ; preds = %land.lhs.true320, %if.then315
  %160 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13141
  %161 = load i32, i32* %mode.addr, align 4, !dbg !13141
  %call330 = call i32 @canon_hash(%struct.rtx_def* %160, i32 %161), !dbg !13141
  br label %cond.end331, !dbg !13141

cond.end331:                                      ; preds = %cond.false329, %cond.true324
  %cond332 = phi i32 [ %add328, %cond.true324 ], [ %call330, %cond.false329 ], !dbg !13141
  %and333 = and i32 %cond332, 31, !dbg !13141
  store i32 %and333, i32* %op0_hash, align 4, !dbg !13142
  %162 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13143
  %163 = bitcast %struct.rtx_def* %162 to i32*, !dbg !13143
  %bf.load334 = load i32, i32* %163, align 8, !dbg !13143
  %bf.clear335 = and i32 %bf.load334, 65535, !dbg !13143
  %idxprom336 = sext i32 %bf.clear335 to i64, !dbg !13143
  %arrayidx337 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom336, !dbg !13143
  %164 = load i32, i32* %arrayidx337, align 4, !dbg !13143
  %cmp338 = icmp eq i32 %164, 9, !dbg !13143
  br i1 %cmp338, label %if.end359, label %if.then340, !dbg !13145

if.then340:                                       ; preds = %cond.end331
  %165 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13146
  %166 = bitcast %struct.rtx_def* %165 to i32*, !dbg !13146
  %bf.load341 = load i32, i32* %166, align 8, !dbg !13146
  %bf.clear342 = and i32 %bf.load341, 65535, !dbg !13146
  %cmp343 = icmp eq i32 %bf.clear342, 37, !dbg !13146
  br i1 %cmp343, label %land.lhs.true345, label %cond.false354, !dbg !13146

land.lhs.true345:                                 ; preds = %if.then340
  %167 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13146
  %call346 = call i32 @rhs_regno(%struct.rtx_def* %167), !dbg !13146
  %cmp347 = icmp uge i32 %call346, 53, !dbg !13146
  br i1 %cmp347, label %cond.true349, label %cond.false354, !dbg !13146

cond.true349:                                     ; preds = %land.lhs.true345
  %168 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13146
  %call350 = call i32 @rhs_regno(%struct.rtx_def* %168), !dbg !13146
  %call351 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call350), !dbg !13146
  %reg_qty352 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call351, i32 0, i32 1, !dbg !13146
  %169 = load i32, i32* %reg_qty352, align 4, !dbg !13146
  %add353 = add i32 4736, %169, !dbg !13146
  br label %cond.end356, !dbg !13146

cond.false354:                                    ; preds = %land.lhs.true345, %if.then340
  %170 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13146
  %171 = load i32, i32* %mode.addr, align 4, !dbg !13146
  %call355 = call i32 @canon_hash(%struct.rtx_def* %170, i32 %171), !dbg !13146
  br label %cond.end356, !dbg !13146

cond.end356:                                      ; preds = %cond.false354, %cond.true349
  %cond357 = phi i32 [ %add353, %cond.true349 ], [ %call355, %cond.false354 ], !dbg !13146
  %and358 = and i32 %cond357, 31, !dbg !13146
  store i32 %and358, i32* %op1_hash, align 4, !dbg !13147
  br label %if.end359, !dbg !13148

if.end359:                                        ; preds = %cond.end356, %cond.end331
  br label %if.end360, !dbg !13149

if.end360:                                        ; preds = %if.end359, %if.then312
  %172 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13150
  %173 = load i32, i32* %op0_hash, align 4, !dbg !13151
  %174 = load i32, i32* %mode.addr, align 4, !dbg !13152
  %call361 = call %struct.table_elt* @insert(%struct.rtx_def* %172, %struct.table_elt* null, i32 %173, i32 %174), !dbg !13153
  store %struct.table_elt* %call361, %struct.table_elt** %op0_elt, align 8, !dbg !13154
  %175 = load i32, i32* %op0_in_memory, align 4, !dbg !13155
  %conv362 = trunc i32 %175 to i8, !dbg !13155
  %176 = load %struct.table_elt*, %struct.table_elt** %op0_elt, align 8, !dbg !13156
  %in_memory = getelementptr inbounds %struct.table_elt, %struct.table_elt* %176, i32 0, i32 11, !dbg !13157
  store i8 %conv362, i8* %in_memory, align 1, !dbg !13158
  br label %if.end363, !dbg !13159

if.end363:                                        ; preds = %if.end360, %if.end309
  %177 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13160
  %call364 = call i32 @rhs_regno(%struct.rtx_def* %177), !dbg !13160
  %call365 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call364), !dbg !13160
  %reg_qty366 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call365, i32 0, i32 1, !dbg !13160
  %178 = load i32, i32* %reg_qty366, align 4, !dbg !13160
  store i32 %178, i32* %qty, align 4, !dbg !13161
  %179 = load %struct.qty_table_elem*, %struct.qty_table_elem** @qty_table, align 8, !dbg !13162
  %180 = load i32, i32* %qty, align 4, !dbg !13163
  %idxprom367 = sext i32 %180 to i64, !dbg !13162
  %arrayidx368 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %179, i64 %idxprom367, !dbg !13162
  store %struct.qty_table_elem* %arrayidx368, %struct.qty_table_elem** %ent, align 8, !dbg !13164
  %181 = load i32, i32* %code.addr, align 4, !dbg !13165
  %182 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !13166
  %comparison_code = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %182, i32 0, i32 6, !dbg !13167
  %183 = bitcast i24* %comparison_code to i32*, !dbg !13167
  %bf.load369 = load i32, i32* %183, align 4, !dbg !13168
  %bf.value = and i32 %181, 65535, !dbg !13168
  %bf.clear370 = and i32 %bf.load369, -65536, !dbg !13168
  %bf.set = or i32 %bf.clear370, %bf.value, !dbg !13168
  store i32 %bf.set, i32* %183, align 4, !dbg !13168
  %184 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13169
  %185 = bitcast %struct.rtx_def* %184 to i32*, !dbg !13169
  %bf.load371 = load i32, i32* %185, align 8, !dbg !13169
  %bf.clear372 = and i32 %bf.load371, 65535, !dbg !13169
  %cmp373 = icmp eq i32 %bf.clear372, 37, !dbg !13169
  br i1 %cmp373, label %if.then375, label %if.else, !dbg !13171

if.then375:                                       ; preds = %if.end363
  %186 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13172
  %187 = load i32, i32* %op1_hash, align 4, !dbg !13174
  %188 = load i32, i32* %mode.addr, align 4, !dbg !13175
  %call376 = call %struct.table_elt* @lookup(%struct.rtx_def* %186, i32 %187, i32 %188), !dbg !13176
  store %struct.table_elt* %call376, %struct.table_elt** %op1_elt, align 8, !dbg !13177
  %189 = load %struct.table_elt*, %struct.table_elt** %op1_elt, align 8, !dbg !13178
  %cmp377 = icmp eq %struct.table_elt* %189, null, !dbg !13180
  br i1 %cmp377, label %if.then379, label %if.end405, !dbg !13181

if.then379:                                       ; preds = %if.then375
  %190 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13182
  %call380 = call i32 @insert_regs(%struct.rtx_def* %190, %struct.table_elt* null, i32 0), !dbg !13185
  %tobool381 = icmp ne i32 %call380, 0, !dbg !13185
  br i1 %tobool381, label %if.then382, label %if.end401, !dbg !13186

if.then382:                                       ; preds = %if.then379
  %191 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13187
  call void @rehash_using_reg(%struct.rtx_def* %191), !dbg !13189
  %192 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13190
  %193 = bitcast %struct.rtx_def* %192 to i32*, !dbg !13190
  %bf.load383 = load i32, i32* %193, align 8, !dbg !13190
  %bf.clear384 = and i32 %bf.load383, 65535, !dbg !13190
  %cmp385 = icmp eq i32 %bf.clear384, 37, !dbg !13190
  br i1 %cmp385, label %land.lhs.true387, label %cond.false396, !dbg !13190

land.lhs.true387:                                 ; preds = %if.then382
  %194 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13190
  %call388 = call i32 @rhs_regno(%struct.rtx_def* %194), !dbg !13190
  %cmp389 = icmp uge i32 %call388, 53, !dbg !13190
  br i1 %cmp389, label %cond.true391, label %cond.false396, !dbg !13190

cond.true391:                                     ; preds = %land.lhs.true387
  %195 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13190
  %call392 = call i32 @rhs_regno(%struct.rtx_def* %195), !dbg !13190
  %call393 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call392), !dbg !13190
  %reg_qty394 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call393, i32 0, i32 1, !dbg !13190
  %196 = load i32, i32* %reg_qty394, align 4, !dbg !13190
  %add395 = add i32 4736, %196, !dbg !13190
  br label %cond.end398, !dbg !13190

cond.false396:                                    ; preds = %land.lhs.true387, %if.then382
  %197 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13190
  %198 = load i32, i32* %mode.addr, align 4, !dbg !13190
  %call397 = call i32 @canon_hash(%struct.rtx_def* %197, i32 %198), !dbg !13190
  br label %cond.end398, !dbg !13190

cond.end398:                                      ; preds = %cond.false396, %cond.true391
  %cond399 = phi i32 [ %add395, %cond.true391 ], [ %call397, %cond.false396 ], !dbg !13190
  %and400 = and i32 %cond399, 31, !dbg !13190
  store i32 %and400, i32* %op1_hash, align 4, !dbg !13191
  br label %if.end401, !dbg !13192

if.end401:                                        ; preds = %cond.end398, %if.then379
  %199 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13193
  %200 = load i32, i32* %op1_hash, align 4, !dbg !13194
  %201 = load i32, i32* %mode.addr, align 4, !dbg !13195
  %call402 = call %struct.table_elt* @insert(%struct.rtx_def* %199, %struct.table_elt* null, i32 %200, i32 %201), !dbg !13196
  store %struct.table_elt* %call402, %struct.table_elt** %op1_elt, align 8, !dbg !13197
  %202 = load i32, i32* %op1_in_memory, align 4, !dbg !13198
  %conv403 = trunc i32 %202 to i8, !dbg !13198
  %203 = load %struct.table_elt*, %struct.table_elt** %op1_elt, align 8, !dbg !13199
  %in_memory404 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %203, i32 0, i32 11, !dbg !13200
  store i8 %conv403, i8* %in_memory404, align 1, !dbg !13201
  br label %if.end405, !dbg !13202

if.end405:                                        ; preds = %if.end401, %if.then375
  %204 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !13203
  %comparison_const = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %204, i32 0, i32 2, !dbg !13204
  store %struct.rtx_def* null, %struct.rtx_def** %comparison_const, align 8, !dbg !13205
  %205 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13206
  %call406 = call i32 @rhs_regno(%struct.rtx_def* %205), !dbg !13206
  %call407 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call406), !dbg !13206
  %reg_qty408 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call407, i32 0, i32 1, !dbg !13206
  %206 = load i32, i32* %reg_qty408, align 4, !dbg !13206
  %207 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !13207
  %comparison_qty = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %207, i32 0, i32 3, !dbg !13208
  store i32 %206, i32* %comparison_qty, align 8, !dbg !13209
  br label %if.end411, !dbg !13210

if.else:                                          ; preds = %if.end363
  %208 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13211
  %209 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !13213
  %comparison_const409 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %209, i32 0, i32 2, !dbg !13214
  store %struct.rtx_def* %208, %struct.rtx_def** %comparison_const409, align 8, !dbg !13215
  %210 = load %struct.qty_table_elem*, %struct.qty_table_elem** %ent, align 8, !dbg !13216
  %comparison_qty410 = getelementptr inbounds %struct.qty_table_elem, %struct.qty_table_elem* %210, i32 0, i32 3, !dbg !13217
  store i32 -1, i32* %comparison_qty410, align 8, !dbg !13218
  br label %if.end411

if.end411:                                        ; preds = %if.else, %if.end405
  br label %return, !dbg !13219

if.end412:                                        ; preds = %lor.lhs.false258
  %211 = load %struct.table_elt*, %struct.table_elt** %op0_elt, align 8, !dbg !13220
  %cmp413 = icmp eq %struct.table_elt* %211, null, !dbg !13222
  br i1 %cmp413, label %if.then415, label %if.end441, !dbg !13223

if.then415:                                       ; preds = %if.end412
  %212 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13224
  %call416 = call i32 @insert_regs(%struct.rtx_def* %212, %struct.table_elt* null, i32 0), !dbg !13227
  %tobool417 = icmp ne i32 %call416, 0, !dbg !13227
  br i1 %tobool417, label %if.then418, label %if.end437, !dbg !13228

if.then418:                                       ; preds = %if.then415
  %213 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13229
  call void @rehash_using_reg(%struct.rtx_def* %213), !dbg !13231
  %214 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13232
  %215 = bitcast %struct.rtx_def* %214 to i32*, !dbg !13232
  %bf.load419 = load i32, i32* %215, align 8, !dbg !13232
  %bf.clear420 = and i32 %bf.load419, 65535, !dbg !13232
  %cmp421 = icmp eq i32 %bf.clear420, 37, !dbg !13232
  br i1 %cmp421, label %land.lhs.true423, label %cond.false432, !dbg !13232

land.lhs.true423:                                 ; preds = %if.then418
  %216 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13232
  %call424 = call i32 @rhs_regno(%struct.rtx_def* %216), !dbg !13232
  %cmp425 = icmp uge i32 %call424, 53, !dbg !13232
  br i1 %cmp425, label %cond.true427, label %cond.false432, !dbg !13232

cond.true427:                                     ; preds = %land.lhs.true423
  %217 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13232
  %call428 = call i32 @rhs_regno(%struct.rtx_def* %217), !dbg !13232
  %call429 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call428), !dbg !13232
  %reg_qty430 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call429, i32 0, i32 1, !dbg !13232
  %218 = load i32, i32* %reg_qty430, align 4, !dbg !13232
  %add431 = add i32 4736, %218, !dbg !13232
  br label %cond.end434, !dbg !13232

cond.false432:                                    ; preds = %land.lhs.true423, %if.then418
  %219 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13232
  %220 = load i32, i32* %mode.addr, align 4, !dbg !13232
  %call433 = call i32 @canon_hash(%struct.rtx_def* %219, i32 %220), !dbg !13232
  br label %cond.end434, !dbg !13232

cond.end434:                                      ; preds = %cond.false432, %cond.true427
  %cond435 = phi i32 [ %add431, %cond.true427 ], [ %call433, %cond.false432 ], !dbg !13232
  %and436 = and i32 %cond435, 31, !dbg !13232
  store i32 %and436, i32* %op0_hash, align 4, !dbg !13233
  br label %if.end437, !dbg !13234

if.end437:                                        ; preds = %cond.end434, %if.then415
  %221 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13235
  %222 = load i32, i32* %op0_hash, align 4, !dbg !13236
  %223 = load i32, i32* %mode.addr, align 4, !dbg !13237
  %call438 = call %struct.table_elt* @insert(%struct.rtx_def* %221, %struct.table_elt* null, i32 %222, i32 %223), !dbg !13238
  store %struct.table_elt* %call438, %struct.table_elt** %op0_elt, align 8, !dbg !13239
  %224 = load i32, i32* %op0_in_memory, align 4, !dbg !13240
  %conv439 = trunc i32 %224 to i8, !dbg !13240
  %225 = load %struct.table_elt*, %struct.table_elt** %op0_elt, align 8, !dbg !13241
  %in_memory440 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %225, i32 0, i32 11, !dbg !13242
  store i8 %conv439, i8* %in_memory440, align 1, !dbg !13243
  br label %if.end441, !dbg !13244

if.end441:                                        ; preds = %if.end437, %if.end412
  %226 = load %struct.table_elt*, %struct.table_elt** %op1_elt, align 8, !dbg !13245
  %cmp442 = icmp eq %struct.table_elt* %226, null, !dbg !13247
  br i1 %cmp442, label %if.then444, label %if.end470, !dbg !13248

if.then444:                                       ; preds = %if.end441
  %227 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13249
  %call445 = call i32 @insert_regs(%struct.rtx_def* %227, %struct.table_elt* null, i32 0), !dbg !13252
  %tobool446 = icmp ne i32 %call445, 0, !dbg !13252
  br i1 %tobool446, label %if.then447, label %if.end466, !dbg !13253

if.then447:                                       ; preds = %if.then444
  %228 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13254
  call void @rehash_using_reg(%struct.rtx_def* %228), !dbg !13256
  %229 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13257
  %230 = bitcast %struct.rtx_def* %229 to i32*, !dbg !13257
  %bf.load448 = load i32, i32* %230, align 8, !dbg !13257
  %bf.clear449 = and i32 %bf.load448, 65535, !dbg !13257
  %cmp450 = icmp eq i32 %bf.clear449, 37, !dbg !13257
  br i1 %cmp450, label %land.lhs.true452, label %cond.false461, !dbg !13257

land.lhs.true452:                                 ; preds = %if.then447
  %231 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13257
  %call453 = call i32 @rhs_regno(%struct.rtx_def* %231), !dbg !13257
  %cmp454 = icmp uge i32 %call453, 53, !dbg !13257
  br i1 %cmp454, label %cond.true456, label %cond.false461, !dbg !13257

cond.true456:                                     ; preds = %land.lhs.true452
  %232 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13257
  %call457 = call i32 @rhs_regno(%struct.rtx_def* %232), !dbg !13257
  %call458 = call %struct.cse_reg_info* @get_cse_reg_info(i32 %call457), !dbg !13257
  %reg_qty459 = getelementptr inbounds %struct.cse_reg_info, %struct.cse_reg_info* %call458, i32 0, i32 1, !dbg !13257
  %233 = load i32, i32* %reg_qty459, align 4, !dbg !13257
  %add460 = add i32 4736, %233, !dbg !13257
  br label %cond.end463, !dbg !13257

cond.false461:                                    ; preds = %land.lhs.true452, %if.then447
  %234 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13257
  %235 = load i32, i32* %mode.addr, align 4, !dbg !13257
  %call462 = call i32 @canon_hash(%struct.rtx_def* %234, i32 %235), !dbg !13257
  br label %cond.end463, !dbg !13257

cond.end463:                                      ; preds = %cond.false461, %cond.true456
  %cond464 = phi i32 [ %add460, %cond.true456 ], [ %call462, %cond.false461 ], !dbg !13257
  %and465 = and i32 %cond464, 31, !dbg !13257
  store i32 %and465, i32* %op1_hash, align 4, !dbg !13258
  br label %if.end466, !dbg !13259

if.end466:                                        ; preds = %cond.end463, %if.then444
  %236 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13260
  %237 = load i32, i32* %op1_hash, align 4, !dbg !13261
  %238 = load i32, i32* %mode.addr, align 4, !dbg !13262
  %call467 = call %struct.table_elt* @insert(%struct.rtx_def* %236, %struct.table_elt* null, i32 %237, i32 %238), !dbg !13263
  store %struct.table_elt* %call467, %struct.table_elt** %op1_elt, align 8, !dbg !13264
  %239 = load i32, i32* %op1_in_memory, align 4, !dbg !13265
  %conv468 = trunc i32 %239 to i8, !dbg !13265
  %240 = load %struct.table_elt*, %struct.table_elt** %op1_elt, align 8, !dbg !13266
  %in_memory469 = getelementptr inbounds %struct.table_elt, %struct.table_elt* %240, i32 0, i32 11, !dbg !13267
  store i8 %conv468, i8* %in_memory469, align 1, !dbg !13268
  br label %if.end470, !dbg !13269

if.end470:                                        ; preds = %if.end466, %if.end441
  %241 = load %struct.table_elt*, %struct.table_elt** %op0_elt, align 8, !dbg !13270
  %242 = load %struct.table_elt*, %struct.table_elt** %op1_elt, align 8, !dbg !13271
  call void @merge_equiv_classes(%struct.table_elt* %241, %struct.table_elt* %242), !dbg !13272
  br label %return, !dbg !13273

return:                                           ; preds = %if.end470, %if.end411, %if.then308, %if.then227, %if.then209, %if.then188
  ret void, !dbg !13273
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @record_jump_cond_subreg(i32 %mode, %struct.rtx_def* %op) #0 !dbg !13274 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %op.addr = alloca %struct.rtx_def*, align 8
  %op_mode = alloca i32, align 4
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !13275, metadata !DIExpression()), !dbg !13276
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !13277, metadata !DIExpression()), !dbg !13278
  call void @llvm.dbg.declare(metadata i32* %op_mode, metadata !13279, metadata !DIExpression()), !dbg !13280
  %0 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !13281
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !13281
  %bf.load = load i32, i32* %1, align 8, !dbg !13281
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !13281
  %bf.clear = and i32 %bf.lshr, 255, !dbg !13281
  store i32 %bf.clear, i32* %op_mode, align 4, !dbg !13280
  %2 = load i32, i32* %op_mode, align 4, !dbg !13282
  %3 = load i32, i32* %mode.addr, align 4, !dbg !13284
  %cmp = icmp eq i32 %2, %3, !dbg !13285
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !13286

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, i32* %op_mode, align 4, !dbg !13287
  %cmp1 = icmp eq i32 %4, 0, !dbg !13288
  br i1 %cmp1, label %if.then, label %if.end, !dbg !13289

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !13290
  store %struct.rtx_def* %5, %struct.rtx_def** %retval, align 8, !dbg !13291
  br label %return, !dbg !13291

if.end:                                           ; preds = %lor.lhs.false
  %6 = load i32, i32* %mode.addr, align 4, !dbg !13292
  %7 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !13293
  %8 = load i32, i32* %op_mode, align 4, !dbg !13294
  %call = call %struct.rtx_def* @lowpart_subreg(i32 %6, %struct.rtx_def* %7, i32 %8), !dbg !13295
  store %struct.rtx_def* %call, %struct.rtx_def** %retval, align 8, !dbg !13296
  br label %return, !dbg !13296

return:                                           ; preds = %if.end, %if.then
  %9 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !13297
  ret %struct.rtx_def* %9, !dbg !13297
}

declare dso_local %struct.rtx_def* @lowpart_subreg(i32, %struct.rtx_def*, i32) #2

declare dso_local zeroext i8 @insn_could_throw_p(%struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @set_live_p(%struct.rtx_def* %set, %struct.rtx_def* %insn, i32* %counts) #0 !dbg !13298 {
entry:
  %retval = alloca i8, align 1
  %set.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %counts.addr = alloca i32*, align 8
  store %struct.rtx_def* %set, %struct.rtx_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set.addr, metadata !13301, metadata !DIExpression()), !dbg !13302
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !13303, metadata !DIExpression()), !dbg !13304
  store i32* %counts, i32** %counts.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %counts.addr, metadata !13305, metadata !DIExpression()), !dbg !13306
  %0 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8, !dbg !13307
  %call = call i32 @set_noop_p(%struct.rtx_def* %0), !dbg !13309
  %tobool = icmp ne i32 %call, 0, !dbg !13309
  br i1 %tobool, label %if.then, label %if.else, !dbg !13310

if.then:                                          ; preds = %entry
  br label %if.end10, !dbg !13310

if.else:                                          ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8, !dbg !13311
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i32 0, i32 1, !dbg !13311
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !13311
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !13311
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !13311
  %2 = load i32*, i32** %counts.addr, align 8, !dbg !13313
  %3 = bitcast i32* %2 to i8*, !dbg !13313
  %call1 = call i32 @is_dead_reg(%struct.rtx_def** %rt_rtx, i8* %3), !dbg !13314
  %tobool2 = icmp ne i32 %call1, 0, !dbg !13314
  br i1 %tobool2, label %lor.lhs.false, label %if.then9, !dbg !13315

lor.lhs.false:                                    ; preds = %if.else
  %4 = load %struct.rtx_def*, %struct.rtx_def** %set.addr, align 8, !dbg !13316
  %u3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !13316
  %fld4 = bitcast %union.u* %u3 to [1 x %union.rtunion_def]*, !dbg !13316
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i64 0, i64 1, !dbg !13316
  %rt_rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**, !dbg !13316
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx6, align 8, !dbg !13316
  %call7 = call i32 @side_effects_p(%struct.rtx_def* %5), !dbg !13317
  %tobool8 = icmp ne i32 %call7, 0, !dbg !13317
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !13318

if.then9:                                         ; preds = %lor.lhs.false, %if.else
  store i8 1, i8* %retval, align 1, !dbg !13319
  br label %return, !dbg !13319

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then
  store i8 0, i8* %retval, align 1, !dbg !13320
  br label %return, !dbg !13320

return:                                           ; preds = %if.end10, %if.then9
  %6 = load i8, i8* %retval, align 1, !dbg !13321
  ret i8 %6, !dbg !13321
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @is_dead_reg(%struct.rtx_def** %loc, i8* %data) #0 !dbg !13322 {
entry:
  %loc.addr = alloca %struct.rtx_def**, align 8
  %data.addr = alloca i8*, align 8
  %x = alloca %struct.rtx_def*, align 8
  %counts = alloca i32*, align 8
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %loc.addr, metadata !13323, metadata !DIExpression()), !dbg !13324
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !13325, metadata !DIExpression()), !dbg !13326
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !13327, metadata !DIExpression()), !dbg !13328
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !13329
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !13330
  store %struct.rtx_def* %1, %struct.rtx_def** %x, align 8, !dbg !13328
  call void @llvm.dbg.declare(metadata i32** %counts, metadata !13331, metadata !DIExpression()), !dbg !13332
  %2 = load i8*, i8** %data.addr, align 8, !dbg !13333
  %3 = bitcast i8* %2 to i32*, !dbg !13334
  store i32* %3, i32** %counts, align 8, !dbg !13332
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !13335
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !13335
  %bf.load = load i32, i32* %5, align 8, !dbg !13335
  %bf.clear = and i32 %bf.load, 65535, !dbg !13335
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !13335
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !13336

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !13337
  %call = call i32 @rhs_regno(%struct.rtx_def* %6), !dbg !13337
  %cmp1 = icmp uge i32 %call, 53, !dbg !13338
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !13339

land.rhs:                                         ; preds = %land.lhs.true
  %7 = load i32*, i32** %counts, align 8, !dbg !13340
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !13341
  %call2 = call i32 @rhs_regno(%struct.rtx_def* %8), !dbg !13341
  %idxprom = zext i32 %call2 to i64, !dbg !13340
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 %idxprom, !dbg !13340
  %9 = load i32, i32* %arrayidx, align 4, !dbg !13340
  %cmp3 = icmp eq i32 %9, 0, !dbg !13342
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !13343
  %land.ext = zext i1 %10 to i32, !dbg !13339
  ret i32 %land.ext, !dbg !13344
}

declare dso_local %struct.rtx_def* @gen_rtx_fmt_e_stat(i32, i32, %struct.rtx_def*) #2

declare dso_local zeroext i8 @df_insn_rescan(%struct.rtx_def*) #2

declare dso_local i32 @set_noop_p(%struct.rtx_def*) #2

declare dso_local void @dump_flow_info(%struct._IO_FILE*, i32) #2

declare dso_local void @rebuild_jump_labels(%struct.rtx_def*) #2

declare dso_local zeroext i8 @cleanup_cfg(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @cse_condition_code_reg() #0 !dbg !13345 {
entry:
  %cc_regno_1 = alloca i32, align 4
  %cc_regno_2 = alloca i32, align 4
  %cc_reg_1 = alloca %struct.rtx_def*, align 8
  %cc_reg_2 = alloca %struct.rtx_def*, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  %last_insn = alloca %struct.rtx_def*, align 8
  %cc_reg = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %cc_src_insn = alloca %struct.rtx_def*, align 8
  %cc_src = alloca %struct.rtx_def*, align 8
  %mode = alloca i32, align 4
  %orig_mode = alloca i32, align 4
  %set = alloca %struct.rtx_def*, align 8
  %newreg = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.declare(metadata i32* %cc_regno_1, metadata !13346, metadata !DIExpression()), !dbg !13347
  call void @llvm.dbg.declare(metadata i32* %cc_regno_2, metadata !13348, metadata !DIExpression()), !dbg !13349
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cc_reg_1, metadata !13350, metadata !DIExpression()), !dbg !13351
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cc_reg_2, metadata !13352, metadata !DIExpression()), !dbg !13353
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !13354, metadata !DIExpression()), !dbg !13355
  %0 = load i8 (i32*, i32*)*, i8 (i32*, i32*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 66), align 8, !dbg !13356
  %call = call zeroext i8 %0(i32* %cc_regno_1, i32* %cc_regno_2), !dbg !13358
  %tobool = icmp ne i8 %call, 0, !dbg !13358
  br i1 %tobool, label %if.end, label %if.then, !dbg !13359

if.then:                                          ; preds = %entry
  br label %for.end163, !dbg !13360

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %cc_regno_1, align 4, !dbg !13361
  %call1 = call %struct.rtx_def* @gen_rtx_REG(i32 2, i32 %1), !dbg !13362
  store %struct.rtx_def* %call1, %struct.rtx_def** %cc_reg_1, align 8, !dbg !13363
  %2 = load i32, i32* %cc_regno_2, align 4, !dbg !13364
  %cmp = icmp ne i32 %2, -1, !dbg !13366
  br i1 %cmp, label %if.then2, label %if.else, !dbg !13367

if.then2:                                         ; preds = %if.end
  %3 = load i32, i32* %cc_regno_2, align 4, !dbg !13368
  %call3 = call %struct.rtx_def* @gen_rtx_REG(i32 2, i32 %3), !dbg !13369
  store %struct.rtx_def* %call3, %struct.rtx_def** %cc_reg_2, align 8, !dbg !13370
  br label %if.end4, !dbg !13371

if.else:                                          ; preds = %if.end
  store %struct.rtx_def* null, %struct.rtx_def** %cc_reg_2, align 8, !dbg !13372
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then2
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !13373
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, !dbg !13373
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !13373
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !13373
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i32 0, i32 0, !dbg !13373
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !13373
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %6, i32 0, i32 6, !dbg !13373
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !13373
  store %struct.basic_block_def* %7, %struct.basic_block_def** %bb, align 8, !dbg !13373
  br label %for.cond, !dbg !13373

for.cond:                                         ; preds = %for.inc161, %if.end4
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !13375
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !13375
  %add.ptr5 = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, !dbg !13375
  %cfg6 = getelementptr inbounds %struct.function, %struct.function* %add.ptr5, i32 0, i32 1, !dbg !13375
  %10 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg6, align 8, !dbg !13375
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i32 0, i32 1, !dbg !13375
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !13375
  %cmp7 = icmp ne %struct.basic_block_def* %8, %11, !dbg !13375
  br i1 %cmp7, label %for.body, label %for.end163, !dbg !13373

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %last_insn, metadata !13377, metadata !DIExpression()), !dbg !13379
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cc_reg, metadata !13380, metadata !DIExpression()), !dbg !13381
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !13382, metadata !DIExpression()), !dbg !13383
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cc_src_insn, metadata !13384, metadata !DIExpression()), !dbg !13385
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cc_src, metadata !13386, metadata !DIExpression()), !dbg !13387
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !13388, metadata !DIExpression()), !dbg !13389
  call void @llvm.dbg.declare(metadata i32* %orig_mode, metadata !13390, metadata !DIExpression()), !dbg !13391
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !13392
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i32 0, i32 7, !dbg !13392
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !13392
  %13 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !13392
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %13, i32 0, i32 1, !dbg !13392
  %14 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !13392
  store %struct.rtx_def* %14, %struct.rtx_def** %last_insn, align 8, !dbg !13393
  %15 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !13394
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !13394
  %bf.load = load i32, i32* %16, align 8, !dbg !13394
  %bf.clear = and i32 %bf.load, 65535, !dbg !13394
  %cmp8 = icmp eq i32 %bf.clear, 9, !dbg !13394
  br i1 %cmp8, label %if.end10, label %if.then9, !dbg !13396

if.then9:                                         ; preds = %for.body
  br label %for.inc161, !dbg !13397

if.end10:                                         ; preds = %for.body
  %17 = load %struct.rtx_def*, %struct.rtx_def** %cc_reg_1, align 8, !dbg !13398
  %18 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !13400
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !13400
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !13400
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !13400
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !13400
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !13400
  %call11 = call i32 @reg_referenced_p(%struct.rtx_def* %17, %struct.rtx_def* %19), !dbg !13401
  %tobool12 = icmp ne i32 %call11, 0, !dbg !13401
  br i1 %tobool12, label %if.then13, label %if.else14, !dbg !13402

if.then13:                                        ; preds = %if.end10
  %20 = load %struct.rtx_def*, %struct.rtx_def** %cc_reg_1, align 8, !dbg !13403
  store %struct.rtx_def* %20, %struct.rtx_def** %cc_reg, align 8, !dbg !13404
  br label %if.end25, !dbg !13405

if.else14:                                        ; preds = %if.end10
  %21 = load %struct.rtx_def*, %struct.rtx_def** %cc_reg_2, align 8, !dbg !13406
  %tobool15 = icmp ne %struct.rtx_def* %21, null, !dbg !13406
  br i1 %tobool15, label %land.lhs.true, label %if.else23, !dbg !13408

land.lhs.true:                                    ; preds = %if.else14
  %22 = load %struct.rtx_def*, %struct.rtx_def** %cc_reg_2, align 8, !dbg !13409
  %23 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !13410
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !13410
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !13410
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 5, !dbg !13410
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !13410
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !13410
  %call20 = call i32 @reg_referenced_p(%struct.rtx_def* %22, %struct.rtx_def* %24), !dbg !13411
  %tobool21 = icmp ne i32 %call20, 0, !dbg !13411
  br i1 %tobool21, label %if.then22, label %if.else23, !dbg !13412

if.then22:                                        ; preds = %land.lhs.true
  %25 = load %struct.rtx_def*, %struct.rtx_def** %cc_reg_2, align 8, !dbg !13413
  store %struct.rtx_def* %25, %struct.rtx_def** %cc_reg, align 8, !dbg !13414
  br label %if.end24, !dbg !13415

if.else23:                                        ; preds = %land.lhs.true, %if.else14
  br label %for.inc161, !dbg !13416

if.end24:                                         ; preds = %if.then22
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then13
  store %struct.rtx_def* null, %struct.rtx_def** %cc_src_insn, align 8, !dbg !13417
  store %struct.rtx_def* null, %struct.rtx_def** %cc_src, align 8, !dbg !13418
  %26 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !13419
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !13419
  %fld27 = bitcast %union.u* %u26 to [1 x %union.rtunion_def]*, !dbg !13419
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i64 0, i64 1, !dbg !13419
  %rt_rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**, !dbg !13419
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx29, align 8, !dbg !13419
  store %struct.rtx_def* %27, %struct.rtx_def** %insn, align 8, !dbg !13421
  br label %for.cond30, !dbg !13422

for.cond30:                                       ; preds = %for.inc, %if.end25
  %28 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13423
  %tobool31 = icmp ne %struct.rtx_def* %28, null, !dbg !13423
  br i1 %tobool31, label %land.rhs, label %land.end, !dbg !13425

land.rhs:                                         ; preds = %for.cond30
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13426
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !13427
  %il32 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %30, i32 0, i32 7, !dbg !13427
  %rtl33 = bitcast %union.basic_block_il_dependent* %il32 to %struct.rtl_bb_info**, !dbg !13427
  %31 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl33, align 8, !dbg !13427
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %31, i32 0, i32 0, !dbg !13427
  %32 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !13427
  %u34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !13427
  %fld35 = bitcast %union.u* %u34 to [1 x %union.rtunion_def]*, !dbg !13427
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i64 0, i64 1, !dbg !13427
  %rt_rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**, !dbg !13427
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx37, align 8, !dbg !13427
  %cmp38 = icmp ne %struct.rtx_def* %29, %33, !dbg !13428
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond30
  %34 = phi i1 [ false, %for.cond30 ], [ %cmp38, %land.rhs ], !dbg !13429
  br i1 %34, label %for.body39, label %for.end, !dbg !13430

for.body39:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set, metadata !13431, metadata !DIExpression()), !dbg !13433
  %35 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13434
  %36 = bitcast %struct.rtx_def* %35 to i32*, !dbg !13434
  %bf.load40 = load i32, i32* %36, align 8, !dbg !13434
  %bf.clear41 = and i32 %bf.load40, 65535, !dbg !13434
  %cmp42 = icmp eq i32 %bf.clear41, 8, !dbg !13434
  br i1 %cmp42, label %if.end55, label %lor.lhs.false, !dbg !13434

lor.lhs.false:                                    ; preds = %for.body39
  %37 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13434
  %38 = bitcast %struct.rtx_def* %37 to i32*, !dbg !13434
  %bf.load43 = load i32, i32* %38, align 8, !dbg !13434
  %bf.clear44 = and i32 %bf.load43, 65535, !dbg !13434
  %cmp45 = icmp eq i32 %bf.clear44, 7, !dbg !13434
  br i1 %cmp45, label %if.end55, label %lor.lhs.false46, !dbg !13434

lor.lhs.false46:                                  ; preds = %lor.lhs.false
  %39 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13434
  %40 = bitcast %struct.rtx_def* %39 to i32*, !dbg !13434
  %bf.load47 = load i32, i32* %40, align 8, !dbg !13434
  %bf.clear48 = and i32 %bf.load47, 65535, !dbg !13434
  %cmp49 = icmp eq i32 %bf.clear48, 9, !dbg !13434
  br i1 %cmp49, label %if.end55, label %lor.lhs.false50, !dbg !13434

lor.lhs.false50:                                  ; preds = %lor.lhs.false46
  %41 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13434
  %42 = bitcast %struct.rtx_def* %41 to i32*, !dbg !13434
  %bf.load51 = load i32, i32* %42, align 8, !dbg !13434
  %bf.clear52 = and i32 %bf.load51, 65535, !dbg !13434
  %cmp53 = icmp eq i32 %bf.clear52, 10, !dbg !13434
  br i1 %cmp53, label %if.end55, label %if.then54, !dbg !13436

if.then54:                                        ; preds = %lor.lhs.false50
  br label %for.inc, !dbg !13437

if.end55:                                         ; preds = %lor.lhs.false50, %lor.lhs.false46, %lor.lhs.false, %for.body39
  %43 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13438
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !13438
  %bf.load56 = load i32, i32* %44, align 8, !dbg !13438
  %bf.clear57 = and i32 %bf.load56, 65535, !dbg !13438
  %cmp58 = icmp eq i32 %bf.clear57, 8, !dbg !13438
  br i1 %cmp58, label %cond.true, label %lor.lhs.false59, !dbg !13438

lor.lhs.false59:                                  ; preds = %if.end55
  %45 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13438
  %46 = bitcast %struct.rtx_def* %45 to i32*, !dbg !13438
  %bf.load60 = load i32, i32* %46, align 8, !dbg !13438
  %bf.clear61 = and i32 %bf.load60, 65535, !dbg !13438
  %cmp62 = icmp eq i32 %bf.clear61, 7, !dbg !13438
  br i1 %cmp62, label %cond.true, label %lor.lhs.false63, !dbg !13438

lor.lhs.false63:                                  ; preds = %lor.lhs.false59
  %47 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13438
  %48 = bitcast %struct.rtx_def* %47 to i32*, !dbg !13438
  %bf.load64 = load i32, i32* %48, align 8, !dbg !13438
  %bf.clear65 = and i32 %bf.load64, 65535, !dbg !13438
  %cmp66 = icmp eq i32 %bf.clear65, 9, !dbg !13438
  br i1 %cmp66, label %cond.true, label %lor.lhs.false67, !dbg !13438

lor.lhs.false67:                                  ; preds = %lor.lhs.false63
  %49 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13438
  %50 = bitcast %struct.rtx_def* %49 to i32*, !dbg !13438
  %bf.load68 = load i32, i32* %50, align 8, !dbg !13438
  %bf.clear69 = and i32 %bf.load68, 65535, !dbg !13438
  %cmp70 = icmp eq i32 %bf.clear69, 10, !dbg !13438
  br i1 %cmp70, label %cond.true, label %cond.false88, !dbg !13438

cond.true:                                        ; preds = %lor.lhs.false67, %lor.lhs.false63, %lor.lhs.false59, %if.end55
  %51 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13438
  %u71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1, !dbg !13438
  %fld72 = bitcast %union.u* %u71 to [1 x %union.rtunion_def]*, !dbg !13438
  %arrayidx73 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld72, i64 0, i64 5, !dbg !13438
  %rt_rtx74 = bitcast %union.rtunion_def* %arrayidx73 to %struct.rtx_def**, !dbg !13438
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx74, align 8, !dbg !13438
  %53 = bitcast %struct.rtx_def* %52 to i32*, !dbg !13438
  %bf.load75 = load i32, i32* %53, align 8, !dbg !13438
  %bf.clear76 = and i32 %bf.load75, 65535, !dbg !13438
  %cmp77 = icmp eq i32 %bf.clear76, 23, !dbg !13438
  br i1 %cmp77, label %cond.true78, label %cond.false, !dbg !13438

cond.true78:                                      ; preds = %cond.true
  %54 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13438
  %u79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1, !dbg !13438
  %fld80 = bitcast %union.u* %u79 to [1 x %union.rtunion_def]*, !dbg !13438
  %arrayidx81 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld80, i64 0, i64 5, !dbg !13438
  %rt_rtx82 = bitcast %union.rtunion_def* %arrayidx81 to %struct.rtx_def**, !dbg !13438
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx82, align 8, !dbg !13438
  br label %cond.end, !dbg !13438

cond.false:                                       ; preds = %cond.true
  %56 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13438
  %57 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13438
  %u83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1, !dbg !13438
  %fld84 = bitcast %union.u* %u83 to [1 x %union.rtunion_def]*, !dbg !13438
  %arrayidx85 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld84, i64 0, i64 5, !dbg !13438
  %rt_rtx86 = bitcast %union.rtunion_def* %arrayidx85 to %struct.rtx_def**, !dbg !13438
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx86, align 8, !dbg !13438
  %call87 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %56, %struct.rtx_def* %58), !dbg !13438
  br label %cond.end, !dbg !13438

cond.end:                                         ; preds = %cond.false, %cond.true78
  %cond = phi %struct.rtx_def* [ %55, %cond.true78 ], [ %call87, %cond.false ], !dbg !13438
  br label %cond.end89, !dbg !13438

cond.false88:                                     ; preds = %lor.lhs.false67
  br label %cond.end89, !dbg !13438

cond.end89:                                       ; preds = %cond.false88, %cond.end
  %cond90 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false88 ], !dbg !13438
  store %struct.rtx_def* %cond90, %struct.rtx_def** %set, align 8, !dbg !13439
  %59 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !13440
  %tobool91 = icmp ne %struct.rtx_def* %59, null, !dbg !13440
  br i1 %tobool91, label %land.lhs.true92, label %if.else113, !dbg !13442

land.lhs.true92:                                  ; preds = %cond.end89
  %60 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !13443
  %u93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1, !dbg !13443
  %fld94 = bitcast %union.u* %u93 to [1 x %union.rtunion_def]*, !dbg !13443
  %arrayidx95 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld94, i64 0, i64 0, !dbg !13443
  %rt_rtx96 = bitcast %union.rtunion_def* %arrayidx95 to %struct.rtx_def**, !dbg !13443
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx96, align 8, !dbg !13443
  %62 = bitcast %struct.rtx_def* %61 to i32*, !dbg !13443
  %bf.load97 = load i32, i32* %62, align 8, !dbg !13443
  %bf.clear98 = and i32 %bf.load97, 65535, !dbg !13443
  %cmp99 = icmp eq i32 %bf.clear98, 37, !dbg !13443
  br i1 %cmp99, label %land.lhs.true100, label %if.else113, !dbg !13444

land.lhs.true100:                                 ; preds = %land.lhs.true92
  %63 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !13445
  %u101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1, !dbg !13445
  %fld102 = bitcast %union.u* %u101 to [1 x %union.rtunion_def]*, !dbg !13445
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i64 0, i64 0, !dbg !13445
  %rt_rtx104 = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtx_def**, !dbg !13445
  %64 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx104, align 8, !dbg !13445
  %call105 = call i32 @rhs_regno(%struct.rtx_def* %64), !dbg !13445
  %65 = load %struct.rtx_def*, %struct.rtx_def** %cc_reg, align 8, !dbg !13446
  %call106 = call i32 @rhs_regno(%struct.rtx_def* %65), !dbg !13446
  %cmp107 = icmp eq i32 %call105, %call106, !dbg !13447
  br i1 %cmp107, label %if.then108, label %if.else113, !dbg !13448

if.then108:                                       ; preds = %land.lhs.true100
  %66 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13449
  store %struct.rtx_def* %66, %struct.rtx_def** %cc_src_insn, align 8, !dbg !13451
  %67 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !13452
  %u109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1, !dbg !13452
  %fld110 = bitcast %union.u* %u109 to [1 x %union.rtunion_def]*, !dbg !13452
  %arrayidx111 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld110, i64 0, i64 1, !dbg !13452
  %rt_rtx112 = bitcast %union.rtunion_def* %arrayidx111 to %struct.rtx_def**, !dbg !13452
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx112, align 8, !dbg !13452
  store %struct.rtx_def* %68, %struct.rtx_def** %cc_src, align 8, !dbg !13453
  br label %for.end, !dbg !13454

if.else113:                                       ; preds = %land.lhs.true100, %land.lhs.true92, %cond.end89
  %69 = load %struct.rtx_def*, %struct.rtx_def** %cc_reg, align 8, !dbg !13455
  %70 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13457
  %call114 = call i32 @reg_set_p(%struct.rtx_def* %69, %struct.rtx_def* %70), !dbg !13458
  %tobool115 = icmp ne i32 %call114, 0, !dbg !13458
  br i1 %tobool115, label %if.then116, label %if.end117, !dbg !13459

if.then116:                                       ; preds = %if.else113
  br label %for.end, !dbg !13460

if.end117:                                        ; preds = %if.else113
  br label %if.end118

if.end118:                                        ; preds = %if.end117
  br label %for.inc, !dbg !13461

for.inc:                                          ; preds = %if.end118, %if.then54
  %71 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13462
  %u119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1, !dbg !13462
  %fld120 = bitcast %union.u* %u119 to [1 x %union.rtunion_def]*, !dbg !13462
  %arrayidx121 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld120, i64 0, i64 1, !dbg !13462
  %rt_rtx122 = bitcast %union.rtunion_def* %arrayidx121 to %struct.rtx_def**, !dbg !13462
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx122, align 8, !dbg !13462
  store %struct.rtx_def* %72, %struct.rtx_def** %insn, align 8, !dbg !13463
  br label %for.cond30, !dbg !13464, !llvm.loop !13465

for.end:                                          ; preds = %if.then116, %if.then108, %land.end
  %73 = load %struct.rtx_def*, %struct.rtx_def** %cc_src_insn, align 8, !dbg !13467
  %tobool123 = icmp ne %struct.rtx_def* %73, null, !dbg !13467
  br i1 %tobool123, label %if.end125, label %if.then124, !dbg !13469

if.then124:                                       ; preds = %for.end
  br label %for.inc161, !dbg !13470

if.end125:                                        ; preds = %for.end
  %74 = load %struct.rtx_def*, %struct.rtx_def** %cc_src, align 8, !dbg !13471
  %75 = load %struct.rtx_def*, %struct.rtx_def** %cc_src_insn, align 8, !dbg !13473
  %76 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !13474
  %u126 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1, !dbg !13474
  %fld127 = bitcast %union.u* %u126 to [1 x %union.rtunion_def]*, !dbg !13474
  %arrayidx128 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld127, i64 0, i64 2, !dbg !13474
  %rt_rtx129 = bitcast %union.rtunion_def* %arrayidx128 to %struct.rtx_def**, !dbg !13474
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx129, align 8, !dbg !13474
  %call130 = call i32 @modified_between_p(%struct.rtx_def* %74, %struct.rtx_def* %75, %struct.rtx_def* %77), !dbg !13475
  %tobool131 = icmp ne i32 %call130, 0, !dbg !13475
  br i1 %tobool131, label %if.then132, label %if.end133, !dbg !13476

if.then132:                                       ; preds = %if.end125
  br label %for.inc161, !dbg !13477

if.end133:                                        ; preds = %if.end125
  %78 = load %struct.rtx_def*, %struct.rtx_def** %cc_src, align 8, !dbg !13478
  %79 = bitcast %struct.rtx_def* %78 to i32*, !dbg !13478
  %bf.load134 = load i32, i32* %79, align 8, !dbg !13478
  %bf.lshr = lshr i32 %bf.load134, 16, !dbg !13478
  %bf.clear135 = and i32 %bf.lshr, 255, !dbg !13478
  store i32 %bf.clear135, i32* %orig_mode, align 4, !dbg !13479
  %80 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !13480
  %81 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !13481
  %82 = load %struct.rtx_def*, %struct.rtx_def** %cc_reg, align 8, !dbg !13482
  %83 = load %struct.rtx_def*, %struct.rtx_def** %cc_src, align 8, !dbg !13483
  %call136 = call i32 @cse_cc_succs(%struct.basic_block_def* %80, %struct.basic_block_def* %81, %struct.rtx_def* %82, %struct.rtx_def* %83, i8 zeroext 1), !dbg !13484
  store i32 %call136, i32* %mode, align 4, !dbg !13485
  %84 = load i32, i32* %mode, align 4, !dbg !13486
  %cmp137 = icmp ne i32 %84, 0, !dbg !13488
  br i1 %cmp137, label %if.then138, label %if.end160, !dbg !13489

if.then138:                                       ; preds = %if.end133
  %85 = load i32, i32* %mode, align 4, !dbg !13490
  %86 = load %struct.rtx_def*, %struct.rtx_def** %cc_src, align 8, !dbg !13490
  %87 = bitcast %struct.rtx_def* %86 to i32*, !dbg !13490
  %bf.load139 = load i32, i32* %87, align 8, !dbg !13490
  %bf.lshr140 = lshr i32 %bf.load139, 16, !dbg !13490
  %bf.clear141 = and i32 %bf.lshr140, 255, !dbg !13490
  %cmp142 = icmp eq i32 %85, %bf.clear141, !dbg !13490
  br i1 %cmp142, label %cond.false144, label %cond.true143, !dbg !13490

cond.true143:                                     ; preds = %if.then138
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32 7206, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)), !dbg !13490
  br label %cond.end145, !dbg !13490

cond.false144:                                    ; preds = %if.then138
  br label %cond.end145, !dbg !13490

cond.end145:                                      ; preds = %cond.false144, %cond.true143
  %cond146 = phi i32 [ 0, %cond.true143 ], [ 0, %cond.false144 ], !dbg !13490
  %88 = load i32, i32* %mode, align 4, !dbg !13492
  %89 = load i32, i32* %orig_mode, align 4, !dbg !13494
  %cmp147 = icmp ne i32 %88, %89, !dbg !13495
  br i1 %cmp147, label %if.then148, label %if.end159, !dbg !13496

if.then148:                                       ; preds = %cond.end145
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %newreg, metadata !13497, metadata !DIExpression()), !dbg !13499
  %90 = load i32, i32* %mode, align 4, !dbg !13500
  %91 = load %struct.rtx_def*, %struct.rtx_def** %cc_reg, align 8, !dbg !13501
  %call149 = call i32 @rhs_regno(%struct.rtx_def* %91), !dbg !13501
  %call150 = call %struct.rtx_def* @gen_rtx_REG(i32 %90, i32 %call149), !dbg !13502
  store %struct.rtx_def* %call150, %struct.rtx_def** %newreg, align 8, !dbg !13499
  %92 = load %struct.rtx_def*, %struct.rtx_def** %cc_src_insn, align 8, !dbg !13503
  %93 = load %struct.rtx_def*, %struct.rtx_def** %newreg, align 8, !dbg !13504
  call void @cse_change_cc_mode_insn(%struct.rtx_def* %92, %struct.rtx_def* %93), !dbg !13505
  %94 = load %struct.rtx_def*, %struct.rtx_def** %cc_src_insn, align 8, !dbg !13506
  %u151 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1, !dbg !13506
  %fld152 = bitcast %union.u* %u151 to [1 x %union.rtunion_def]*, !dbg !13506
  %arrayidx153 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld152, i64 0, i64 2, !dbg !13506
  %rt_rtx154 = bitcast %union.rtunion_def* %arrayidx153 to %struct.rtx_def**, !dbg !13506
  %95 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx154, align 8, !dbg !13506
  %96 = load %struct.rtx_def*, %struct.rtx_def** %last_insn, align 8, !dbg !13507
  %u155 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1, !dbg !13507
  %fld156 = bitcast %union.u* %u155 to [1 x %union.rtunion_def]*, !dbg !13507
  %arrayidx157 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld156, i64 0, i64 2, !dbg !13507
  %rt_rtx158 = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtx_def**, !dbg !13507
  %97 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx158, align 8, !dbg !13507
  %98 = load %struct.rtx_def*, %struct.rtx_def** %newreg, align 8, !dbg !13508
  call void @cse_change_cc_mode_insns(%struct.rtx_def* %95, %struct.rtx_def* %97, %struct.rtx_def* %98), !dbg !13509
  br label %if.end159, !dbg !13510

if.end159:                                        ; preds = %if.then148, %cond.end145
  br label %if.end160, !dbg !13511

if.end160:                                        ; preds = %if.end159, %if.end133
  br label %for.inc161, !dbg !13512

for.inc161:                                       ; preds = %if.end160, %if.then132, %if.then124, %if.else23, %if.then9
  %99 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !13375
  %next_bb162 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %99, i32 0, i32 6, !dbg !13375
  %100 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb162, align 8, !dbg !13375
  store %struct.basic_block_def* %100, %struct.basic_block_def** %bb, align 8, !dbg !13375
  br label %for.cond, !dbg !13375, !llvm.loop !13513

for.end163:                                       ; preds = %if.then, %for.cond
  ret void, !dbg !13515
}

declare dso_local i32 @reg_referenced_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local i32 @reg_set_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local i32 @modified_between_p(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @cse_cc_succs(%struct.basic_block_def* %bb, %struct.basic_block_def* %orig_bb, %struct.rtx_def* %cc_reg, %struct.rtx_def* %cc_src, i8 zeroext %can_change_mode) #0 !dbg !13516 {
entry:
  %retval = alloca i32, align 4
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %orig_bb.addr = alloca %struct.basic_block_def*, align 8
  %cc_reg.addr = alloca %struct.rtx_def*, align 8
  %cc_src.addr = alloca %struct.rtx_def*, align 8
  %can_change_mode.addr = alloca i8, align 1
  %found_equiv = alloca i8, align 1
  %mode = alloca i32, align 4
  %insn_count = alloca i32, align 4
  %e = alloca %struct.edge_def*, align 8
  %insns = alloca [2 x %struct.rtx_def*], align 16
  %modes = alloca [2 x i32], align 4
  %last_insns = alloca [2 x %struct.rtx_def*], align 16
  %i = alloca i32, align 4
  %newreg = alloca %struct.rtx_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %end = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  %found = alloca i8, align 1
  %set_mode = alloca i32, align 4
  %comp_mode = alloca i32, align 4
  %submode = alloca i32, align 4
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !13519, metadata !DIExpression()), !dbg !13520
  store %struct.basic_block_def* %orig_bb, %struct.basic_block_def** %orig_bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %orig_bb.addr, metadata !13521, metadata !DIExpression()), !dbg !13522
  store %struct.rtx_def* %cc_reg, %struct.rtx_def** %cc_reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cc_reg.addr, metadata !13523, metadata !DIExpression()), !dbg !13524
  store %struct.rtx_def* %cc_src, %struct.rtx_def** %cc_src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cc_src.addr, metadata !13525, metadata !DIExpression()), !dbg !13526
  store i8 %can_change_mode, i8* %can_change_mode.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %can_change_mode.addr, metadata !13527, metadata !DIExpression()), !dbg !13528
  call void @llvm.dbg.declare(metadata i8* %found_equiv, metadata !13529, metadata !DIExpression()), !dbg !13530
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !13531, metadata !DIExpression()), !dbg !13532
  call void @llvm.dbg.declare(metadata i32* %insn_count, metadata !13533, metadata !DIExpression()), !dbg !13534
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e, metadata !13535, metadata !DIExpression()), !dbg !13536
  call void @llvm.dbg.declare(metadata [2 x %struct.rtx_def*]* %insns, metadata !13537, metadata !DIExpression()), !dbg !13539
  call void @llvm.dbg.declare(metadata [2 x i32]* %modes, metadata !13540, metadata !DIExpression()), !dbg !13542
  call void @llvm.dbg.declare(metadata [2 x %struct.rtx_def*]* %last_insns, metadata !13543, metadata !DIExpression()), !dbg !13544
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13545, metadata !DIExpression()), !dbg !13546
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %newreg, metadata !13547, metadata !DIExpression()), !dbg !13548
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %ei, metadata !13549, metadata !DIExpression()), !dbg !13550
  store i8 0, i8* %found_equiv, align 1, !dbg !13551
  %0 = load %struct.rtx_def*, %struct.rtx_def** %cc_src.addr, align 8, !dbg !13552
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !13552
  %bf.load = load i32, i32* %1, align 8, !dbg !13552
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !13552
  %bf.clear = and i32 %bf.lshr, 255, !dbg !13552
  store i32 %bf.clear, i32* %mode, align 4, !dbg !13553
  store i32 0, i32* %insn_count, align 4, !dbg !13554
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !13555
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i32 0, i32 1, !dbg !13555
  %call = call { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %succs), !dbg !13555
  %3 = bitcast %struct.edge_iterator* %tmp to { i32, %struct.VEC_edge_gc** }*, !dbg !13555
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 0, !dbg !13555
  %5 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !13555
  store i32 %5, i32* %4, align 8, !dbg !13555
  %6 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 1, !dbg !13555
  %7 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !13555
  store %struct.VEC_edge_gc** %7, %struct.VEC_edge_gc*** %6, align 8, !dbg !13555
  %8 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !13555
  %9 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !13555
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false), !dbg !13555
  br label %for.cond, !dbg !13555

for.cond:                                         ; preds = %for.inc222, %entry
  %10 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !13557
  %11 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %10, i32 0, i32 0, !dbg !13557
  %12 = load i32, i32* %11, align 8, !dbg !13557
  %13 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %10, i32 0, i32 1, !dbg !13557
  %14 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %13, align 8, !dbg !13557
  %call1 = call zeroext i8 @ei_cond(i32 %12, %struct.VEC_edge_gc** %14, %struct.edge_def** %e), !dbg !13557
  %tobool = icmp ne i8 %call1, 0, !dbg !13555
  br i1 %tobool, label %for.body, label %for.end223, !dbg !13555

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !13559, metadata !DIExpression()), !dbg !13561
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %end, metadata !13562, metadata !DIExpression()), !dbg !13563
  %15 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !13564
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %15, i32 0, i32 7, !dbg !13566
  %16 = load i32, i32* %flags, align 8, !dbg !13566
  %and = and i32 %16, 14, !dbg !13567
  %tobool2 = icmp ne i32 %and, 0, !dbg !13567
  br i1 %tobool2, label %if.then, label %if.end, !dbg !13568

if.then:                                          ; preds = %for.body
  br label %for.inc222, !dbg !13569

if.end:                                           ; preds = %for.body
  %17 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !13570
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %17, i32 0, i32 1, !dbg !13570
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !13570
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %18, i32 0, i32 0, !dbg !13570
  %19 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !13570
  %tobool3 = icmp ne %struct.VEC_edge_gc* %19, null, !dbg !13570
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !13570

cond.true:                                        ; preds = %if.end
  %20 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !13570
  %dest4 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %20, i32 0, i32 1, !dbg !13570
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %dest4, align 8, !dbg !13570
  %preds5 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %21, i32 0, i32 0, !dbg !13570
  %22 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds5, align 8, !dbg !13570
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %22, i32 0, i32 0, !dbg !13570
  br label %cond.end, !dbg !13570

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !13570

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !13570
  %call6 = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !13570
  %cmp = icmp ne i32 %call6, 1, !dbg !13572
  br i1 %cmp, label %if.then12, label %lor.lhs.false, !dbg !13573

lor.lhs.false:                                    ; preds = %cond.end
  %23 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !13574
  %dest7 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %23, i32 0, i32 1, !dbg !13575
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %dest7, align 8, !dbg !13575
  %25 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !13576
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %25, i64 0, !dbg !13576
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !13576
  %26 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !13576
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %26, i32 0, i32 1, !dbg !13576
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !13576
  %cmp8 = icmp eq %struct.basic_block_def* %24, %27, !dbg !13577
  br i1 %cmp8, label %if.then12, label %lor.lhs.false9, !dbg !13578

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %28 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !13579
  %dest10 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %28, i32 0, i32 1, !dbg !13580
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %dest10, align 8, !dbg !13580
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %orig_bb.addr, align 8, !dbg !13581
  %cmp11 = icmp eq %struct.basic_block_def* %29, %30, !dbg !13582
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !13583

if.then12:                                        ; preds = %lor.lhs.false9, %lor.lhs.false, %cond.end
  br label %for.inc222, !dbg !13584

if.end13:                                         ; preds = %lor.lhs.false9
  %31 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !13585
  %dest14 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %31, i32 0, i32 1, !dbg !13585
  %32 = load %struct.basic_block_def*, %struct.basic_block_def** %dest14, align 8, !dbg !13585
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %32, i32 0, i32 7, !dbg !13585
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !13585
  %33 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !13585
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %33, i32 0, i32 1, !dbg !13585
  %34 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !13585
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !13585
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !13585
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !13585
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !13585
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !13585
  store %struct.rtx_def* %35, %struct.rtx_def** %end, align 8, !dbg !13586
  %36 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !13587
  %dest15 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %36, i32 0, i32 1, !dbg !13587
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %dest15, align 8, !dbg !13587
  %il16 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %37, i32 0, i32 7, !dbg !13587
  %rtl17 = bitcast %union.basic_block_il_dependent* %il16 to %struct.rtl_bb_info**, !dbg !13587
  %38 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl17, align 8, !dbg !13587
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %38, i32 0, i32 0, !dbg !13587
  %39 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !13587
  store %struct.rtx_def* %39, %struct.rtx_def** %insn, align 8, !dbg !13589
  br label %for.cond18, !dbg !13590

for.cond18:                                       ; preds = %for.inc, %if.end13
  %40 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13591
  %41 = load %struct.rtx_def*, %struct.rtx_def** %end, align 8, !dbg !13593
  %cmp19 = icmp ne %struct.rtx_def* %40, %41, !dbg !13594
  br i1 %cmp19, label %for.body20, label %for.end, !dbg !13595

for.body20:                                       ; preds = %for.cond18
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set, metadata !13596, metadata !DIExpression()), !dbg !13598
  %42 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13599
  %43 = bitcast %struct.rtx_def* %42 to i32*, !dbg !13599
  %bf.load21 = load i32, i32* %43, align 8, !dbg !13599
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !13599
  %cmp23 = icmp eq i32 %bf.clear22, 8, !dbg !13599
  br i1 %cmp23, label %if.end37, label %lor.lhs.false24, !dbg !13599

lor.lhs.false24:                                  ; preds = %for.body20
  %44 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13599
  %45 = bitcast %struct.rtx_def* %44 to i32*, !dbg !13599
  %bf.load25 = load i32, i32* %45, align 8, !dbg !13599
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !13599
  %cmp27 = icmp eq i32 %bf.clear26, 7, !dbg !13599
  br i1 %cmp27, label %if.end37, label %lor.lhs.false28, !dbg !13599

lor.lhs.false28:                                  ; preds = %lor.lhs.false24
  %46 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13599
  %47 = bitcast %struct.rtx_def* %46 to i32*, !dbg !13599
  %bf.load29 = load i32, i32* %47, align 8, !dbg !13599
  %bf.clear30 = and i32 %bf.load29, 65535, !dbg !13599
  %cmp31 = icmp eq i32 %bf.clear30, 9, !dbg !13599
  br i1 %cmp31, label %if.end37, label %lor.lhs.false32, !dbg !13599

lor.lhs.false32:                                  ; preds = %lor.lhs.false28
  %48 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13599
  %49 = bitcast %struct.rtx_def* %48 to i32*, !dbg !13599
  %bf.load33 = load i32, i32* %49, align 8, !dbg !13599
  %bf.clear34 = and i32 %bf.load33, 65535, !dbg !13599
  %cmp35 = icmp eq i32 %bf.clear34, 10, !dbg !13599
  br i1 %cmp35, label %if.end37, label %if.then36, !dbg !13601

if.then36:                                        ; preds = %lor.lhs.false32
  br label %for.inc, !dbg !13602

if.end37:                                         ; preds = %lor.lhs.false32, %lor.lhs.false28, %lor.lhs.false24, %for.body20
  %50 = load %struct.rtx_def*, %struct.rtx_def** %cc_src.addr, align 8, !dbg !13603
  %51 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13605
  %call38 = call i32 @modified_in_p(%struct.rtx_def* %50, %struct.rtx_def* %51), !dbg !13606
  %tobool39 = icmp ne i32 %call38, 0, !dbg !13606
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !13607

if.then40:                                        ; preds = %if.end37
  br label %for.end, !dbg !13608

if.end41:                                         ; preds = %if.end37
  %52 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13609
  %53 = bitcast %struct.rtx_def* %52 to i32*, !dbg !13609
  %bf.load42 = load i32, i32* %53, align 8, !dbg !13609
  %bf.clear43 = and i32 %bf.load42, 65535, !dbg !13609
  %cmp44 = icmp eq i32 %bf.clear43, 8, !dbg !13609
  br i1 %cmp44, label %cond.true57, label %lor.lhs.false45, !dbg !13609

lor.lhs.false45:                                  ; preds = %if.end41
  %54 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13609
  %55 = bitcast %struct.rtx_def* %54 to i32*, !dbg !13609
  %bf.load46 = load i32, i32* %55, align 8, !dbg !13609
  %bf.clear47 = and i32 %bf.load46, 65535, !dbg !13609
  %cmp48 = icmp eq i32 %bf.clear47, 7, !dbg !13609
  br i1 %cmp48, label %cond.true57, label %lor.lhs.false49, !dbg !13609

lor.lhs.false49:                                  ; preds = %lor.lhs.false45
  %56 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13609
  %57 = bitcast %struct.rtx_def* %56 to i32*, !dbg !13609
  %bf.load50 = load i32, i32* %57, align 8, !dbg !13609
  %bf.clear51 = and i32 %bf.load50, 65535, !dbg !13609
  %cmp52 = icmp eq i32 %bf.clear51, 9, !dbg !13609
  br i1 %cmp52, label %cond.true57, label %lor.lhs.false53, !dbg !13609

lor.lhs.false53:                                  ; preds = %lor.lhs.false49
  %58 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13609
  %59 = bitcast %struct.rtx_def* %58 to i32*, !dbg !13609
  %bf.load54 = load i32, i32* %59, align 8, !dbg !13609
  %bf.clear55 = and i32 %bf.load54, 65535, !dbg !13609
  %cmp56 = icmp eq i32 %bf.clear55, 10, !dbg !13609
  br i1 %cmp56, label %cond.true57, label %cond.false78, !dbg !13609

cond.true57:                                      ; preds = %lor.lhs.false53, %lor.lhs.false49, %lor.lhs.false45, %if.end41
  %60 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13609
  %u58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1, !dbg !13609
  %fld59 = bitcast %union.u* %u58 to [1 x %union.rtunion_def]*, !dbg !13609
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i64 0, i64 5, !dbg !13609
  %rt_rtx61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtx_def**, !dbg !13609
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx61, align 8, !dbg !13609
  %62 = bitcast %struct.rtx_def* %61 to i32*, !dbg !13609
  %bf.load62 = load i32, i32* %62, align 8, !dbg !13609
  %bf.clear63 = and i32 %bf.load62, 65535, !dbg !13609
  %cmp64 = icmp eq i32 %bf.clear63, 23, !dbg !13609
  br i1 %cmp64, label %cond.true65, label %cond.false70, !dbg !13609

cond.true65:                                      ; preds = %cond.true57
  %63 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13609
  %u66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1, !dbg !13609
  %fld67 = bitcast %union.u* %u66 to [1 x %union.rtunion_def]*, !dbg !13609
  %arrayidx68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i64 0, i64 5, !dbg !13609
  %rt_rtx69 = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtx_def**, !dbg !13609
  %64 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx69, align 8, !dbg !13609
  br label %cond.end76, !dbg !13609

cond.false70:                                     ; preds = %cond.true57
  %65 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13609
  %66 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13609
  %u71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1, !dbg !13609
  %fld72 = bitcast %union.u* %u71 to [1 x %union.rtunion_def]*, !dbg !13609
  %arrayidx73 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld72, i64 0, i64 5, !dbg !13609
  %rt_rtx74 = bitcast %union.rtunion_def* %arrayidx73 to %struct.rtx_def**, !dbg !13609
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx74, align 8, !dbg !13609
  %call75 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %65, %struct.rtx_def* %67), !dbg !13609
  br label %cond.end76, !dbg !13609

cond.end76:                                       ; preds = %cond.false70, %cond.true65
  %cond77 = phi %struct.rtx_def* [ %64, %cond.true65 ], [ %call75, %cond.false70 ], !dbg !13609
  br label %cond.end79, !dbg !13609

cond.false78:                                     ; preds = %lor.lhs.false53
  br label %cond.end79, !dbg !13609

cond.end79:                                       ; preds = %cond.false78, %cond.end76
  %cond80 = phi %struct.rtx_def* [ %cond77, %cond.end76 ], [ null, %cond.false78 ], !dbg !13609
  store %struct.rtx_def* %cond80, %struct.rtx_def** %set, align 8, !dbg !13610
  %68 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !13611
  %tobool81 = icmp ne %struct.rtx_def* %68, null, !dbg !13611
  br i1 %tobool81, label %land.lhs.true, label %if.end197, !dbg !13613

land.lhs.true:                                    ; preds = %cond.end79
  %69 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !13614
  %u82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1, !dbg !13614
  %fld83 = bitcast %union.u* %u82 to [1 x %union.rtunion_def]*, !dbg !13614
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld83, i64 0, i64 0, !dbg !13614
  %rt_rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**, !dbg !13614
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx85, align 8, !dbg !13614
  %71 = bitcast %struct.rtx_def* %70 to i32*, !dbg !13614
  %bf.load86 = load i32, i32* %71, align 8, !dbg !13614
  %bf.clear87 = and i32 %bf.load86, 65535, !dbg !13614
  %cmp88 = icmp eq i32 %bf.clear87, 37, !dbg !13614
  br i1 %cmp88, label %land.lhs.true89, label %if.end197, !dbg !13615

land.lhs.true89:                                  ; preds = %land.lhs.true
  %72 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !13616
  %u90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1, !dbg !13616
  %fld91 = bitcast %union.u* %u90 to [1 x %union.rtunion_def]*, !dbg !13616
  %arrayidx92 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld91, i64 0, i64 0, !dbg !13616
  %rt_rtx93 = bitcast %union.rtunion_def* %arrayidx92 to %struct.rtx_def**, !dbg !13616
  %73 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx93, align 8, !dbg !13616
  %call94 = call i32 @rhs_regno(%struct.rtx_def* %73), !dbg !13616
  %74 = load %struct.rtx_def*, %struct.rtx_def** %cc_reg.addr, align 8, !dbg !13617
  %call95 = call i32 @rhs_regno(%struct.rtx_def* %74), !dbg !13617
  %cmp96 = icmp eq i32 %call94, %call95, !dbg !13618
  br i1 %cmp96, label %if.then97, label %if.end197, !dbg !13619

if.then97:                                        ; preds = %land.lhs.true89
  call void @llvm.dbg.declare(metadata i8* %found, metadata !13620, metadata !DIExpression()), !dbg !13622
  call void @llvm.dbg.declare(metadata i32* %set_mode, metadata !13623, metadata !DIExpression()), !dbg !13624
  call void @llvm.dbg.declare(metadata i32* %comp_mode, metadata !13625, metadata !DIExpression()), !dbg !13626
  store i8 0, i8* %found, align 1, !dbg !13627
  %75 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !13628
  %u98 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1, !dbg !13628
  %fld99 = bitcast %union.u* %u98 to [1 x %union.rtunion_def]*, !dbg !13628
  %arrayidx100 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld99, i64 0, i64 1, !dbg !13628
  %rt_rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**, !dbg !13628
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx101, align 8, !dbg !13628
  %77 = bitcast %struct.rtx_def* %76 to i32*, !dbg !13628
  %bf.load102 = load i32, i32* %77, align 8, !dbg !13628
  %bf.lshr103 = lshr i32 %bf.load102, 16, !dbg !13628
  %bf.clear104 = and i32 %bf.lshr103, 255, !dbg !13628
  store i32 %bf.clear104, i32* %set_mode, align 4, !dbg !13629
  %78 = load i32, i32* %set_mode, align 4, !dbg !13630
  store i32 %78, i32* %comp_mode, align 4, !dbg !13631
  %79 = load %struct.rtx_def*, %struct.rtx_def** %cc_src.addr, align 8, !dbg !13632
  %80 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !13634
  %u105 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1, !dbg !13634
  %fld106 = bitcast %union.u* %u105 to [1 x %union.rtunion_def]*, !dbg !13634
  %arrayidx107 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld106, i64 0, i64 1, !dbg !13634
  %rt_rtx108 = bitcast %union.rtunion_def* %arrayidx107 to %struct.rtx_def**, !dbg !13634
  %81 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx108, align 8, !dbg !13634
  %call109 = call i32 @rtx_equal_p(%struct.rtx_def* %79, %struct.rtx_def* %81), !dbg !13635
  %tobool110 = icmp ne i32 %call109, 0, !dbg !13635
  br i1 %tobool110, label %if.then111, label %if.else, !dbg !13636

if.then111:                                       ; preds = %if.then97
  store i8 1, i8* %found, align 1, !dbg !13637
  br label %if.end166, !dbg !13638

if.else:                                          ; preds = %if.then97
  %82 = load %struct.rtx_def*, %struct.rtx_def** %cc_src.addr, align 8, !dbg !13639
  %83 = bitcast %struct.rtx_def* %82 to i32*, !dbg !13639
  %bf.load112 = load i32, i32* %83, align 8, !dbg !13639
  %bf.clear113 = and i32 %bf.load112, 65535, !dbg !13639
  %cmp114 = icmp eq i32 %bf.clear113, 48, !dbg !13641
  br i1 %cmp114, label %land.lhs.true115, label %if.end165, !dbg !13642

land.lhs.true115:                                 ; preds = %if.else
  %84 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !13643
  %u116 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1, !dbg !13643
  %fld117 = bitcast %union.u* %u116 to [1 x %union.rtunion_def]*, !dbg !13643
  %arrayidx118 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld117, i64 0, i64 1, !dbg !13643
  %rt_rtx119 = bitcast %union.rtunion_def* %arrayidx118 to %struct.rtx_def**, !dbg !13643
  %85 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx119, align 8, !dbg !13643
  %86 = bitcast %struct.rtx_def* %85 to i32*, !dbg !13643
  %bf.load120 = load i32, i32* %86, align 8, !dbg !13643
  %bf.clear121 = and i32 %bf.load120, 65535, !dbg !13643
  %cmp122 = icmp eq i32 %bf.clear121, 48, !dbg !13644
  br i1 %cmp122, label %land.lhs.true123, label %if.end165, !dbg !13645

land.lhs.true123:                                 ; preds = %land.lhs.true115
  %87 = load i32, i32* %mode, align 4, !dbg !13646
  %88 = load i32, i32* %set_mode, align 4, !dbg !13647
  %cmp124 = icmp ne i32 %87, %88, !dbg !13648
  br i1 %cmp124, label %land.lhs.true125, label %if.end165, !dbg !13649

land.lhs.true125:                                 ; preds = %land.lhs.true123
  %89 = load %struct.rtx_def*, %struct.rtx_def** %cc_src.addr, align 8, !dbg !13650
  %u126 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i32 0, i32 1, !dbg !13650
  %fld127 = bitcast %union.u* %u126 to [1 x %union.rtunion_def]*, !dbg !13650
  %arrayidx128 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld127, i64 0, i64 0, !dbg !13650
  %rt_rtx129 = bitcast %union.rtunion_def* %arrayidx128 to %struct.rtx_def**, !dbg !13650
  %90 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx129, align 8, !dbg !13650
  %91 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !13651
  %u130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1, !dbg !13651
  %fld131 = bitcast %union.u* %u130 to [1 x %union.rtunion_def]*, !dbg !13651
  %arrayidx132 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld131, i64 0, i64 1, !dbg !13651
  %rt_rtx133 = bitcast %union.rtunion_def* %arrayidx132 to %struct.rtx_def**, !dbg !13651
  %92 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx133, align 8, !dbg !13651
  %u134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1, !dbg !13651
  %fld135 = bitcast %union.u* %u134 to [1 x %union.rtunion_def]*, !dbg !13651
  %arrayidx136 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld135, i64 0, i64 0, !dbg !13651
  %rt_rtx137 = bitcast %union.rtunion_def* %arrayidx136 to %struct.rtx_def**, !dbg !13651
  %93 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx137, align 8, !dbg !13651
  %call138 = call i32 @rtx_equal_p(%struct.rtx_def* %90, %struct.rtx_def* %93), !dbg !13652
  %tobool139 = icmp ne i32 %call138, 0, !dbg !13652
  br i1 %tobool139, label %land.lhs.true140, label %if.end165, !dbg !13653

land.lhs.true140:                                 ; preds = %land.lhs.true125
  %94 = load %struct.rtx_def*, %struct.rtx_def** %cc_src.addr, align 8, !dbg !13654
  %u141 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1, !dbg !13654
  %fld142 = bitcast %union.u* %u141 to [1 x %union.rtunion_def]*, !dbg !13654
  %arrayidx143 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld142, i64 0, i64 1, !dbg !13654
  %rt_rtx144 = bitcast %union.rtunion_def* %arrayidx143 to %struct.rtx_def**, !dbg !13654
  %95 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx144, align 8, !dbg !13654
  %96 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !13655
  %u145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1, !dbg !13655
  %fld146 = bitcast %union.u* %u145 to [1 x %union.rtunion_def]*, !dbg !13655
  %arrayidx147 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld146, i64 0, i64 1, !dbg !13655
  %rt_rtx148 = bitcast %union.rtunion_def* %arrayidx147 to %struct.rtx_def**, !dbg !13655
  %97 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx148, align 8, !dbg !13655
  %u149 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %97, i32 0, i32 1, !dbg !13655
  %fld150 = bitcast %union.u* %u149 to [1 x %union.rtunion_def]*, !dbg !13655
  %arrayidx151 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld150, i64 0, i64 1, !dbg !13655
  %rt_rtx152 = bitcast %union.rtunion_def* %arrayidx151 to %struct.rtx_def**, !dbg !13655
  %98 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx152, align 8, !dbg !13655
  %call153 = call i32 @rtx_equal_p(%struct.rtx_def* %95, %struct.rtx_def* %98), !dbg !13656
  %tobool154 = icmp ne i32 %call153, 0, !dbg !13656
  br i1 %tobool154, label %if.then155, label %if.end165, !dbg !13657

if.then155:                                       ; preds = %land.lhs.true140
  %99 = load i32 (i32, i32)*, i32 (i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 67), align 8, !dbg !13658
  %100 = load i32, i32* %mode, align 4, !dbg !13660
  %101 = load i32, i32* %set_mode, align 4, !dbg !13661
  %call156 = call i32 %99(i32 %100, i32 %101), !dbg !13662
  store i32 %call156, i32* %comp_mode, align 4, !dbg !13663
  %102 = load i32, i32* %comp_mode, align 4, !dbg !13664
  %cmp157 = icmp ne i32 %102, 0, !dbg !13666
  br i1 %cmp157, label %land.lhs.true158, label %if.end164, !dbg !13667

land.lhs.true158:                                 ; preds = %if.then155
  %103 = load i8, i8* %can_change_mode.addr, align 1, !dbg !13668
  %conv = zext i8 %103 to i32, !dbg !13668
  %tobool159 = icmp ne i32 %conv, 0, !dbg !13668
  br i1 %tobool159, label %if.then163, label %lor.lhs.false160, !dbg !13669

lor.lhs.false160:                                 ; preds = %land.lhs.true158
  %104 = load i32, i32* %comp_mode, align 4, !dbg !13670
  %105 = load i32, i32* %mode, align 4, !dbg !13671
  %cmp161 = icmp eq i32 %104, %105, !dbg !13672
  br i1 %cmp161, label %if.then163, label %if.end164, !dbg !13673

if.then163:                                       ; preds = %lor.lhs.false160, %land.lhs.true158
  store i8 1, i8* %found, align 1, !dbg !13674
  br label %if.end164, !dbg !13675

if.end164:                                        ; preds = %if.then163, %lor.lhs.false160, %if.then155
  br label %if.end165, !dbg !13676

if.end165:                                        ; preds = %if.end164, %land.lhs.true140, %land.lhs.true125, %land.lhs.true123, %land.lhs.true115, %if.else
  br label %if.end166

if.end166:                                        ; preds = %if.end165, %if.then111
  %106 = load i8, i8* %found, align 1, !dbg !13677
  %tobool167 = icmp ne i8 %106, 0, !dbg !13677
  br i1 %tobool167, label %if.then168, label %if.end196, !dbg !13679

if.then168:                                       ; preds = %if.end166
  store i8 1, i8* %found_equiv, align 1, !dbg !13680
  %107 = load i32, i32* %insn_count, align 4, !dbg !13682
  %conv169 = zext i32 %107 to i64, !dbg !13682
  %cmp170 = icmp ult i64 %conv169, 2, !dbg !13684
  br i1 %cmp170, label %if.then172, label %if.else189, !dbg !13685

if.then172:                                       ; preds = %if.then168
  %108 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13686
  %109 = load i32, i32* %insn_count, align 4, !dbg !13688
  %idxprom = zext i32 %109 to i64, !dbg !13689
  %arrayidx173 = getelementptr inbounds [2 x %struct.rtx_def*], [2 x %struct.rtx_def*]* %insns, i64 0, i64 %idxprom, !dbg !13689
  store %struct.rtx_def* %108, %struct.rtx_def** %arrayidx173, align 8, !dbg !13690
  %110 = load i32, i32* %set_mode, align 4, !dbg !13691
  %111 = load i32, i32* %insn_count, align 4, !dbg !13692
  %idxprom174 = zext i32 %111 to i64, !dbg !13693
  %arrayidx175 = getelementptr inbounds [2 x i32], [2 x i32]* %modes, i64 0, i64 %idxprom174, !dbg !13693
  store i32 %110, i32* %arrayidx175, align 4, !dbg !13694
  %112 = load %struct.rtx_def*, %struct.rtx_def** %end, align 8, !dbg !13695
  %113 = load i32, i32* %insn_count, align 4, !dbg !13696
  %idxprom176 = zext i32 %113 to i64, !dbg !13697
  %arrayidx177 = getelementptr inbounds [2 x %struct.rtx_def*], [2 x %struct.rtx_def*]* %last_insns, i64 0, i64 %idxprom176, !dbg !13697
  store %struct.rtx_def* %112, %struct.rtx_def** %arrayidx177, align 8, !dbg !13698
  %114 = load i32, i32* %insn_count, align 4, !dbg !13699
  %inc = add i32 %114, 1, !dbg !13699
  store i32 %inc, i32* %insn_count, align 4, !dbg !13699
  %115 = load i32, i32* %mode, align 4, !dbg !13700
  %116 = load i32, i32* %comp_mode, align 4, !dbg !13702
  %cmp178 = icmp ne i32 %115, %116, !dbg !13703
  br i1 %cmp178, label %if.then180, label %if.end188, !dbg !13704

if.then180:                                       ; preds = %if.then172
  %117 = load i8, i8* %can_change_mode.addr, align 1, !dbg !13705
  %tobool181 = icmp ne i8 %117, 0, !dbg !13705
  br i1 %tobool181, label %cond.false183, label %cond.true182, !dbg !13705

cond.true182:                                     ; preds = %if.then180
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32 7028, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)), !dbg !13705
  br label %cond.end184, !dbg !13705

cond.false183:                                    ; preds = %if.then180
  br label %cond.end184, !dbg !13705

cond.end184:                                      ; preds = %cond.false183, %cond.true182
  %cond185 = phi i32 [ 0, %cond.true182 ], [ 0, %cond.false183 ], !dbg !13705
  %118 = load i32, i32* %comp_mode, align 4, !dbg !13707
  store i32 %118, i32* %mode, align 4, !dbg !13708
  %119 = load i32, i32* %mode, align 4, !dbg !13709
  %120 = load %struct.rtx_def*, %struct.rtx_def** %cc_src.addr, align 8, !dbg !13709
  %121 = bitcast %struct.rtx_def* %120 to i32*, !dbg !13709
  %bf.load186 = load i32, i32* %121, align 8, !dbg !13709
  %bf.value = and i32 %119, 255, !dbg !13709
  %bf.shl = shl i32 %bf.value, 16, !dbg !13709
  %bf.clear187 = and i32 %bf.load186, -16711681, !dbg !13709
  %bf.set = or i32 %bf.clear187, %bf.shl, !dbg !13709
  store i32 %bf.set, i32* %121, align 8, !dbg !13709
  br label %if.end188, !dbg !13710

if.end188:                                        ; preds = %cond.end184, %if.then172
  br label %if.end195, !dbg !13711

if.else189:                                       ; preds = %if.then168
  %122 = load i32, i32* %set_mode, align 4, !dbg !13712
  %123 = load i32, i32* %mode, align 4, !dbg !13715
  %cmp190 = icmp ne i32 %122, %123, !dbg !13716
  br i1 %cmp190, label %if.then192, label %if.end193, !dbg !13717

if.then192:                                       ; preds = %if.else189
  br label %for.end, !dbg !13718

if.end193:                                        ; preds = %if.else189
  %124 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13720
  %call194 = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %124), !dbg !13721
  br label %if.end195

if.end195:                                        ; preds = %if.end193, %if.end188
  br label %for.inc, !dbg !13722

if.end196:                                        ; preds = %if.end166
  br label %for.end, !dbg !13723

if.end197:                                        ; preds = %land.lhs.true89, %land.lhs.true, %cond.end79
  %125 = load %struct.rtx_def*, %struct.rtx_def** %cc_reg.addr, align 8, !dbg !13724
  %126 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13726
  %call198 = call i32 @reg_set_p(%struct.rtx_def* %125, %struct.rtx_def* %126), !dbg !13727
  %tobool199 = icmp ne i32 %call198, 0, !dbg !13727
  br i1 %tobool199, label %if.then200, label %if.end201, !dbg !13728

if.then200:                                       ; preds = %if.end197
  br label %for.end, !dbg !13729

if.end201:                                        ; preds = %if.end197
  br label %for.inc, !dbg !13730

for.inc:                                          ; preds = %if.end201, %if.end195, %if.then36
  %127 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13731
  %u202 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %127, i32 0, i32 1, !dbg !13731
  %fld203 = bitcast %union.u* %u202 to [1 x %union.rtunion_def]*, !dbg !13731
  %arrayidx204 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld203, i64 0, i64 2, !dbg !13731
  %rt_rtx205 = bitcast %union.rtunion_def* %arrayidx204 to %struct.rtx_def**, !dbg !13731
  %128 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx205, align 8, !dbg !13731
  store %struct.rtx_def* %128, %struct.rtx_def** %insn, align 8, !dbg !13732
  br label %for.cond18, !dbg !13733, !llvm.loop !13734

for.end:                                          ; preds = %if.then200, %if.end196, %if.then192, %if.then40, %for.cond18
  %129 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13736
  %130 = load %struct.rtx_def*, %struct.rtx_def** %end, align 8, !dbg !13738
  %cmp206 = icmp eq %struct.rtx_def* %129, %130, !dbg !13739
  br i1 %cmp206, label %if.then208, label %if.end221, !dbg !13740

if.then208:                                       ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %submode, metadata !13741, metadata !DIExpression()), !dbg !13743
  %131 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !13744
  %dest209 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %131, i32 0, i32 1, !dbg !13745
  %132 = load %struct.basic_block_def*, %struct.basic_block_def** %dest209, align 8, !dbg !13745
  %133 = load %struct.basic_block_def*, %struct.basic_block_def** %orig_bb.addr, align 8, !dbg !13746
  %134 = load %struct.rtx_def*, %struct.rtx_def** %cc_reg.addr, align 8, !dbg !13747
  %135 = load %struct.rtx_def*, %struct.rtx_def** %cc_src.addr, align 8, !dbg !13748
  %call210 = call i32 @cse_cc_succs(%struct.basic_block_def* %132, %struct.basic_block_def* %133, %struct.rtx_def* %134, %struct.rtx_def* %135, i8 zeroext 0), !dbg !13749
  store i32 %call210, i32* %submode, align 4, !dbg !13750
  %136 = load i32, i32* %submode, align 4, !dbg !13751
  %cmp211 = icmp ne i32 %136, 0, !dbg !13753
  br i1 %cmp211, label %if.then213, label %if.end220, !dbg !13754

if.then213:                                       ; preds = %if.then208
  %137 = load i32, i32* %submode, align 4, !dbg !13755
  %138 = load i32, i32* %mode, align 4, !dbg !13755
  %cmp214 = icmp eq i32 %137, %138, !dbg !13755
  br i1 %cmp214, label %cond.false217, label %cond.true216, !dbg !13755

cond.true216:                                     ; preds = %if.then213
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32 7078, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)), !dbg !13755
  br label %cond.end218, !dbg !13755

cond.false217:                                    ; preds = %if.then213
  br label %cond.end218, !dbg !13755

cond.end218:                                      ; preds = %cond.false217, %cond.true216
  %cond219 = phi i32 [ 0, %cond.true216 ], [ 0, %cond.false217 ], !dbg !13755
  store i8 1, i8* %found_equiv, align 1, !dbg !13757
  store i8 0, i8* %can_change_mode.addr, align 1, !dbg !13758
  br label %if.end220, !dbg !13759

if.end220:                                        ; preds = %cond.end218, %if.then208
  br label %if.end221, !dbg !13760

if.end221:                                        ; preds = %if.end220, %for.end
  br label %for.inc222, !dbg !13761

for.inc222:                                       ; preds = %if.end221, %if.then12, %if.then
  call void @ei_next(%struct.edge_iterator* %ei), !dbg !13557
  br label %for.cond, !dbg !13557, !llvm.loop !13762

for.end223:                                       ; preds = %for.cond
  %139 = load i8, i8* %found_equiv, align 1, !dbg !13764
  %tobool224 = icmp ne i8 %139, 0, !dbg !13764
  br i1 %tobool224, label %if.end226, label %if.then225, !dbg !13766

if.then225:                                       ; preds = %for.end223
  store i32 0, i32* %retval, align 4, !dbg !13767
  br label %return, !dbg !13767

if.end226:                                        ; preds = %for.end223
  store %struct.rtx_def* null, %struct.rtx_def** %newreg, align 8, !dbg !13768
  store i32 0, i32* %i, align 4, !dbg !13769
  br label %for.cond227, !dbg !13771

for.cond227:                                      ; preds = %for.inc261, %if.end226
  %140 = load i32, i32* %i, align 4, !dbg !13772
  %141 = load i32, i32* %insn_count, align 4, !dbg !13774
  %cmp228 = icmp ult i32 %140, %141, !dbg !13775
  br i1 %cmp228, label %for.body230, label %for.end263, !dbg !13776

for.body230:                                      ; preds = %for.cond227
  %142 = load i32, i32* %i, align 4, !dbg !13777
  %idxprom231 = zext i32 %142 to i64, !dbg !13780
  %arrayidx232 = getelementptr inbounds [2 x i32], [2 x i32]* %modes, i64 0, i64 %idxprom231, !dbg !13780
  %143 = load i32, i32* %arrayidx232, align 4, !dbg !13780
  %144 = load i32, i32* %mode, align 4, !dbg !13781
  %cmp233 = icmp ne i32 %143, %144, !dbg !13782
  br i1 %cmp233, label %if.then235, label %if.end257, !dbg !13783

if.then235:                                       ; preds = %for.body230
  %145 = load %struct.rtx_def*, %struct.rtx_def** %newreg, align 8, !dbg !13784
  %tobool236 = icmp ne %struct.rtx_def* %145, null, !dbg !13784
  br i1 %tobool236, label %if.end248, label %if.then237, !dbg !13787

if.then237:                                       ; preds = %if.then235
  %146 = load %struct.rtx_def*, %struct.rtx_def** %cc_reg.addr, align 8, !dbg !13788
  %147 = bitcast %struct.rtx_def* %146 to i32*, !dbg !13788
  %bf.load238 = load i32, i32* %147, align 8, !dbg !13788
  %bf.lshr239 = lshr i32 %bf.load238, 16, !dbg !13788
  %bf.clear240 = and i32 %bf.lshr239, 255, !dbg !13788
  %148 = load i32, i32* %mode, align 4, !dbg !13791
  %cmp241 = icmp eq i32 %bf.clear240, %148, !dbg !13792
  br i1 %cmp241, label %if.then243, label %if.else244, !dbg !13793

if.then243:                                       ; preds = %if.then237
  %149 = load %struct.rtx_def*, %struct.rtx_def** %cc_reg.addr, align 8, !dbg !13794
  store %struct.rtx_def* %149, %struct.rtx_def** %newreg, align 8, !dbg !13795
  br label %if.end247, !dbg !13796

if.else244:                                       ; preds = %if.then237
  %150 = load i32, i32* %mode, align 4, !dbg !13797
  %151 = load %struct.rtx_def*, %struct.rtx_def** %cc_reg.addr, align 8, !dbg !13798
  %call245 = call i32 @rhs_regno(%struct.rtx_def* %151), !dbg !13798
  %call246 = call %struct.rtx_def* @gen_rtx_REG(i32 %150, i32 %call245), !dbg !13799
  store %struct.rtx_def* %call246, %struct.rtx_def** %newreg, align 8, !dbg !13800
  br label %if.end247

if.end247:                                        ; preds = %if.else244, %if.then243
  br label %if.end248, !dbg !13801

if.end248:                                        ; preds = %if.end247, %if.then235
  %152 = load i32, i32* %i, align 4, !dbg !13802
  %idxprom249 = zext i32 %152 to i64, !dbg !13802
  %arrayidx250 = getelementptr inbounds [2 x %struct.rtx_def*], [2 x %struct.rtx_def*]* %insns, i64 0, i64 %idxprom249, !dbg !13802
  %153 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx250, align 8, !dbg !13802
  %u251 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %153, i32 0, i32 1, !dbg !13802
  %fld252 = bitcast %union.u* %u251 to [1 x %union.rtunion_def]*, !dbg !13802
  %arrayidx253 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld252, i64 0, i64 2, !dbg !13802
  %rt_rtx254 = bitcast %union.rtunion_def* %arrayidx253 to %struct.rtx_def**, !dbg !13802
  %154 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx254, align 8, !dbg !13802
  %155 = load i32, i32* %i, align 4, !dbg !13803
  %idxprom255 = zext i32 %155 to i64, !dbg !13804
  %arrayidx256 = getelementptr inbounds [2 x %struct.rtx_def*], [2 x %struct.rtx_def*]* %last_insns, i64 0, i64 %idxprom255, !dbg !13804
  %156 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx256, align 8, !dbg !13804
  %157 = load %struct.rtx_def*, %struct.rtx_def** %newreg, align 8, !dbg !13805
  call void @cse_change_cc_mode_insns(%struct.rtx_def* %154, %struct.rtx_def* %156, %struct.rtx_def* %157), !dbg !13806
  br label %if.end257, !dbg !13807

if.end257:                                        ; preds = %if.end248, %for.body230
  %158 = load i32, i32* %i, align 4, !dbg !13808
  %idxprom258 = zext i32 %158 to i64, !dbg !13809
  %arrayidx259 = getelementptr inbounds [2 x %struct.rtx_def*], [2 x %struct.rtx_def*]* %insns, i64 0, i64 %idxprom258, !dbg !13809
  %159 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx259, align 8, !dbg !13809
  %call260 = call %struct.rtx_def* @delete_insn_and_edges(%struct.rtx_def* %159), !dbg !13810
  br label %for.inc261, !dbg !13811

for.inc261:                                       ; preds = %if.end257
  %160 = load i32, i32* %i, align 4, !dbg !13812
  %inc262 = add i32 %160, 1, !dbg !13812
  store i32 %inc262, i32* %i, align 4, !dbg !13812
  br label %for.cond227, !dbg !13813, !llvm.loop !13814

for.end263:                                       ; preds = %for.cond227
  %161 = load i32, i32* %mode, align 4, !dbg !13816
  store i32 %161, i32* %retval, align 4, !dbg !13817
  br label %return, !dbg !13817

return:                                           ; preds = %for.end263, %if.then225
  %162 = load i32, i32* %retval, align 4, !dbg !13818
  ret i32 %162, !dbg !13818
}

; Function Attrs: noinline nounwind uwtable
define internal void @cse_change_cc_mode_insn(%struct.rtx_def* %insn, %struct.rtx_def* %newreg) #0 !dbg !13819 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %newreg.addr = alloca %struct.rtx_def*, align 8
  %args = alloca %struct.change_cc_mode_args, align 8
  %success = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !13822, metadata !DIExpression()), !dbg !13823
  store %struct.rtx_def* %newreg, %struct.rtx_def** %newreg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %newreg.addr, metadata !13824, metadata !DIExpression()), !dbg !13825
  call void @llvm.dbg.declare(metadata %struct.change_cc_mode_args* %args, metadata !13826, metadata !DIExpression()), !dbg !13827
  call void @llvm.dbg.declare(metadata i32* %success, metadata !13828, metadata !DIExpression()), !dbg !13829
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13830
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !13830
  %bf.load = load i32, i32* %1, align 8, !dbg !13830
  %bf.clear = and i32 %bf.load, 65535, !dbg !13830
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !13830
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !13830

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13830
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !13830
  %bf.load1 = load i32, i32* %3, align 8, !dbg !13830
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !13830
  %cmp3 = icmp eq i32 %bf.clear2, 7, !dbg !13830
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !13830

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13830
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !13830
  %bf.load5 = load i32, i32* %5, align 8, !dbg !13830
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !13830
  %cmp7 = icmp eq i32 %bf.clear6, 9, !dbg !13830
  br i1 %cmp7, label %if.end, label %lor.lhs.false8, !dbg !13830

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13830
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !13830
  %bf.load9 = load i32, i32* %7, align 8, !dbg !13830
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !13830
  %cmp11 = icmp eq i32 %bf.clear10, 10, !dbg !13830
  br i1 %cmp11, label %if.end, label %if.then, !dbg !13832

if.then:                                          ; preds = %lor.lhs.false8
  br label %return, !dbg !13833

if.end:                                           ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13834
  %insn12 = getelementptr inbounds %struct.change_cc_mode_args, %struct.change_cc_mode_args* %args, i32 0, i32 0, !dbg !13835
  store %struct.rtx_def* %8, %struct.rtx_def** %insn12, align 8, !dbg !13836
  %9 = load %struct.rtx_def*, %struct.rtx_def** %newreg.addr, align 8, !dbg !13837
  %newreg13 = getelementptr inbounds %struct.change_cc_mode_args, %struct.change_cc_mode_args* %args, i32 0, i32 1, !dbg !13838
  store %struct.rtx_def* %9, %struct.rtx_def** %newreg13, align 8, !dbg !13839
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13840
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !13840
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !13840
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !13840
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !13840
  %11 = bitcast %struct.change_cc_mode_args* %args to i8*, !dbg !13841
  %call = call i32 @for_each_rtx(%struct.rtx_def** %rt_rtx, i32 (%struct.rtx_def**, i8*)* @cse_change_cc_mode, i8* %11), !dbg !13842
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !13843
  %u14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !13843
  %fld15 = bitcast %union.u* %u14 to [1 x %union.rtunion_def]*, !dbg !13843
  %arrayidx16 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld15, i64 0, i64 7, !dbg !13843
  %rt_rtx17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**, !dbg !13843
  %13 = bitcast %struct.change_cc_mode_args* %args to i8*, !dbg !13844
  %call18 = call i32 @for_each_rtx(%struct.rtx_def** %rt_rtx17, i32 (%struct.rtx_def**, i8*)* @cse_change_cc_mode, i8* %13), !dbg !13845
  %call19 = call i32 @apply_change_group(), !dbg !13846
  store i32 %call19, i32* %success, align 4, !dbg !13847
  %14 = load i32, i32* %success, align 4, !dbg !13848
  %tobool = icmp ne i32 %14, 0, !dbg !13848
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !13848

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32 6895, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)), !dbg !13848
  br label %cond.end, !dbg !13848

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !13848

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !13848
  br label %return, !dbg !13849

return:                                           ; preds = %cond.end, %if.then
  ret void, !dbg !13849
}

; Function Attrs: noinline nounwind uwtable
define internal void @cse_change_cc_mode_insns(%struct.rtx_def* %start, %struct.rtx_def* %end, %struct.rtx_def* %newreg) #0 !dbg !13850 {
entry:
  %start.addr = alloca %struct.rtx_def*, align 8
  %end.addr = alloca %struct.rtx_def*, align 8
  %newreg.addr = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %start, %struct.rtx_def** %start.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %start.addr, metadata !13853, metadata !DIExpression()), !dbg !13854
  store %struct.rtx_def* %end, %struct.rtx_def** %end.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %end.addr, metadata !13855, metadata !DIExpression()), !dbg !13856
  store %struct.rtx_def* %newreg, %struct.rtx_def** %newreg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %newreg.addr, metadata !13857, metadata !DIExpression()), !dbg !13858
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !13859, metadata !DIExpression()), !dbg !13860
  %0 = load %struct.rtx_def*, %struct.rtx_def** %start.addr, align 8, !dbg !13861
  store %struct.rtx_def* %0, %struct.rtx_def** %insn, align 8, !dbg !13863
  br label %for.cond, !dbg !13864

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13865
  %2 = load %struct.rtx_def*, %struct.rtx_def** %end.addr, align 8, !dbg !13867
  %cmp = icmp ne %struct.rtx_def* %1, %2, !dbg !13868
  br i1 %cmp, label %for.body, label %for.end, !dbg !13869

for.body:                                         ; preds = %for.cond
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13870
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !13870
  %bf.load = load i32, i32* %4, align 8, !dbg !13870
  %bf.clear = and i32 %bf.load, 65535, !dbg !13870
  %cmp1 = icmp eq i32 %bf.clear, 8, !dbg !13870
  br i1 %cmp1, label %if.end, label %lor.lhs.false, !dbg !13870

lor.lhs.false:                                    ; preds = %for.body
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13870
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !13870
  %bf.load2 = load i32, i32* %6, align 8, !dbg !13870
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !13870
  %cmp4 = icmp eq i32 %bf.clear3, 7, !dbg !13870
  br i1 %cmp4, label %if.end, label %lor.lhs.false5, !dbg !13870

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13870
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !13870
  %bf.load6 = load i32, i32* %8, align 8, !dbg !13870
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !13870
  %cmp8 = icmp eq i32 %bf.clear7, 9, !dbg !13870
  br i1 %cmp8, label %if.end, label %lor.lhs.false9, !dbg !13870

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13870
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !13870
  %bf.load10 = load i32, i32* %10, align 8, !dbg !13870
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !13870
  %cmp12 = icmp eq i32 %bf.clear11, 10, !dbg !13870
  br i1 %cmp12, label %if.end, label %if.then, !dbg !13873

if.then:                                          ; preds = %lor.lhs.false9
  br label %for.inc, !dbg !13874

if.end:                                           ; preds = %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false, %for.body
  %11 = load %struct.rtx_def*, %struct.rtx_def** %newreg.addr, align 8, !dbg !13875
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13877
  %call = call i32 @reg_set_p(%struct.rtx_def* %11, %struct.rtx_def* %12), !dbg !13878
  %tobool = icmp ne i32 %call, 0, !dbg !13878
  br i1 %tobool, label %if.then13, label %if.end14, !dbg !13879

if.then13:                                        ; preds = %if.end
  br label %for.end, !dbg !13880

if.end14:                                         ; preds = %if.end
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13881
  %14 = load %struct.rtx_def*, %struct.rtx_def** %newreg.addr, align 8, !dbg !13882
  call void @cse_change_cc_mode_insn(%struct.rtx_def* %13, %struct.rtx_def* %14), !dbg !13883
  br label %for.inc, !dbg !13884

for.inc:                                          ; preds = %if.end14, %if.then
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13885
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !13885
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !13885
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !13885
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !13885
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !13885
  store %struct.rtx_def* %16, %struct.rtx_def** %insn, align 8, !dbg !13886
  br label %for.cond, !dbg !13887, !llvm.loop !13888

for.end:                                          ; preds = %if.then13, %for.cond
  ret void, !dbg !13890
}

declare dso_local i32 @modified_in_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @delete_insn(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @cse_change_cc_mode(%struct.rtx_def** %loc, i8* %data) #0 !dbg !13891 {
entry:
  %retval = alloca i32, align 4
  %loc.addr = alloca %struct.rtx_def**, align 8
  %data.addr = alloca i8*, align 8
  %args = alloca %struct.change_cc_mode_args*, align 8
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %loc.addr, metadata !13892, metadata !DIExpression()), !dbg !13893
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !13894, metadata !DIExpression()), !dbg !13895
  call void @llvm.dbg.declare(metadata %struct.change_cc_mode_args** %args, metadata !13896, metadata !DIExpression()), !dbg !13897
  %0 = load i8*, i8** %data.addr, align 8, !dbg !13898
  %1 = bitcast i8* %0 to %struct.change_cc_mode_args*, !dbg !13899
  store %struct.change_cc_mode_args* %1, %struct.change_cc_mode_args** %args, align 8, !dbg !13897
  %2 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !13900
  %3 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8, !dbg !13902
  %tobool = icmp ne %struct.rtx_def* %3, null, !dbg !13902
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !13903

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !13904
  %5 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8, !dbg !13904
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !13904
  %bf.load = load i32, i32* %6, align 8, !dbg !13904
  %bf.clear = and i32 %bf.load, 65535, !dbg !13904
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !13904
  br i1 %cmp, label %land.lhs.true1, label %if.end, !dbg !13905

land.lhs.true1:                                   ; preds = %land.lhs.true
  %7 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !13906
  %8 = load %struct.rtx_def*, %struct.rtx_def** %7, align 8, !dbg !13906
  %call = call i32 @rhs_regno(%struct.rtx_def* %8), !dbg !13906
  %9 = load %struct.change_cc_mode_args*, %struct.change_cc_mode_args** %args, align 8, !dbg !13907
  %newreg = getelementptr inbounds %struct.change_cc_mode_args, %struct.change_cc_mode_args* %9, i32 0, i32 1, !dbg !13907
  %10 = load %struct.rtx_def*, %struct.rtx_def** %newreg, align 8, !dbg !13907
  %call2 = call i32 @rhs_regno(%struct.rtx_def* %10), !dbg !13907
  %cmp3 = icmp eq i32 %call, %call2, !dbg !13908
  br i1 %cmp3, label %land.lhs.true4, label %if.end, !dbg !13909

land.lhs.true4:                                   ; preds = %land.lhs.true1
  %11 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !13910
  %12 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8, !dbg !13910
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !13910
  %bf.load5 = load i32, i32* %13, align 8, !dbg !13910
  %bf.lshr = lshr i32 %bf.load5, 16, !dbg !13910
  %bf.clear6 = and i32 %bf.lshr, 255, !dbg !13910
  %14 = load %struct.change_cc_mode_args*, %struct.change_cc_mode_args** %args, align 8, !dbg !13911
  %newreg7 = getelementptr inbounds %struct.change_cc_mode_args, %struct.change_cc_mode_args* %14, i32 0, i32 1, !dbg !13911
  %15 = load %struct.rtx_def*, %struct.rtx_def** %newreg7, align 8, !dbg !13911
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !13911
  %bf.load8 = load i32, i32* %16, align 8, !dbg !13911
  %bf.lshr9 = lshr i32 %bf.load8, 16, !dbg !13911
  %bf.clear10 = and i32 %bf.lshr9, 255, !dbg !13911
  %cmp11 = icmp ne i32 %bf.clear6, %bf.clear10, !dbg !13912
  br i1 %cmp11, label %if.then, label %if.end, !dbg !13913

if.then:                                          ; preds = %land.lhs.true4
  %17 = load %struct.change_cc_mode_args*, %struct.change_cc_mode_args** %args, align 8, !dbg !13914
  %insn = getelementptr inbounds %struct.change_cc_mode_args, %struct.change_cc_mode_args* %17, i32 0, i32 0, !dbg !13916
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !13916
  %19 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !13917
  %20 = load %struct.change_cc_mode_args*, %struct.change_cc_mode_args** %args, align 8, !dbg !13918
  %newreg12 = getelementptr inbounds %struct.change_cc_mode_args, %struct.change_cc_mode_args* %20, i32 0, i32 1, !dbg !13919
  %21 = load %struct.rtx_def*, %struct.rtx_def** %newreg12, align 8, !dbg !13919
  %call13 = call zeroext i8 @validate_change(%struct.rtx_def* %18, %struct.rtx_def** %19, %struct.rtx_def* %21, i8 zeroext 1), !dbg !13920
  store i32 -1, i32* %retval, align 4, !dbg !13921
  br label %return, !dbg !13921

if.end:                                           ; preds = %land.lhs.true4, %land.lhs.true1, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !13922
  br label %return, !dbg !13922

return:                                           ; preds = %if.end, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !13923
  ret i32 %22, !dbg !13923
}

declare dso_local zeroext i8 @purge_all_dead_edges() #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2459, !2460, !2461}
!llvm.ident = !{!2462}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "cse_cfg_altered", scope: !2, file: !3, line: 353, type: !1052, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !1018, globals: !2340, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "cse.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !134, !141, !147, !152, !157, !176, !183, !190, !384, !527, !541, !563, !573, !696, !872, !914, !921, !939, !973, !988}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !135, line: 30, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./except.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!136 = !{!137, !138, !139, !140}
!137 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !142, line: 363, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./basic-block.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!143 = !{!144, !145, !146}
!144 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!147 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !142, line: 355, baseType: !7, size: 32, elements: !148)
!148 = !{!149, !150, !151}
!149 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !153, line: 474, baseType: !7, size: 32, elements: !154)
!153 = !DIFile(filename: "./config/i386/i386.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!154 = !{!155, !156}
!155 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !158, line: 280, baseType: !7, size: 32, elements: !159)
!158 = !DIFile(filename: "./tree.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!159 = !{!160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175}
!160 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!161 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!162 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!163 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!164 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!165 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!166 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!169 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!170 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!171 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !158, line: 1817, baseType: !7, size: 32, elements: !177)
!177 = !{!178, !179, !180, !181, !182}
!178 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !158, line: 1805, baseType: !7, size: 32, elements: !184)
!184 = !{!185, !186, !187, !188, !189}
!185 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!189 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !158, line: 39, baseType: !7, size: 32, elements: !191)
!191 = !{!192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383}
!192 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!193 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!194 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!195 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!196 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!197 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!198 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!199 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!200 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!201 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!202 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!203 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!204 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!205 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!206 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!207 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!208 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!209 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!210 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!211 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!212 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!213 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!214 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!215 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!216 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!217 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!218 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!219 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!220 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!221 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!222 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!223 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!224 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!225 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!226 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!227 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!228 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!229 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!230 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!231 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!232 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!233 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!234 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!235 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!236 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!237 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!238 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!239 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!240 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!241 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!242 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!243 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!244 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!245 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!246 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!247 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!248 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!249 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!250 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!251 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!252 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!253 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!254 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!255 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!256 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!257 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!258 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!259 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!260 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!261 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!262 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!263 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!264 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!265 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!266 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!267 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!268 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!269 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!270 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!271 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!272 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!273 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!274 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!275 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!276 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!277 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!278 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!279 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!280 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!281 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!282 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!283 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!284 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!285 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!286 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!287 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!288 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!289 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!290 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!291 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!292 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!293 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!294 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!295 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!296 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!297 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!298 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!299 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!300 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!301 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!302 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!303 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!304 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!305 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!306 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!307 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!308 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!309 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!310 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!311 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!312 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!313 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!314 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!315 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!316 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!317 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!318 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!319 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!320 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!321 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!322 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!323 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!324 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!325 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!326 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!327 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!328 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!329 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!330 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!331 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!332 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!333 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!334 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!335 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!336 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!337 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!338 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!339 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!340 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!341 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!342 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!343 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!344 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!347 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!349 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!350 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!356 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!357 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!358 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!359 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!360 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!361 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!362 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!363 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!364 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!365 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!366 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!367 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!370 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!371 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!372 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!373 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!374 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!377 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!378 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!379 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!380 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!381 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!382 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!383 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !385, line: 45, baseType: !7, size: 32, elements: !386)
!385 = !DIFile(filename: "./rtl.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!386 = !{!387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526}
!387 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!388 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!389 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!390 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!391 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!392 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!393 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!394 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!395 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!396 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!397 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!398 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!399 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!400 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!401 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!402 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!403 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!404 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!405 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!406 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!407 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!408 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!409 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!410 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!411 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!412 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!413 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!414 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!415 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!416 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!417 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!418 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!419 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!420 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!421 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!422 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!423 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!424 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!425 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!426 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!427 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!428 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!429 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!430 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!431 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!432 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!433 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!434 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!435 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!436 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!437 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!438 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!439 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!440 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!441 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!442 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!443 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!444 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!445 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!446 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!447 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!448 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!449 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!450 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!451 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!452 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!453 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!454 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!455 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!456 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!457 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!458 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!459 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!460 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!461 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!462 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!463 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!464 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!465 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!466 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!467 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!468 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!469 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!470 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!471 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!472 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!473 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!474 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!475 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!476 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!477 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!478 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!479 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!480 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!481 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!482 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!483 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!484 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!485 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!486 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!487 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!488 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!489 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!490 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!491 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!492 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!493 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!494 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!495 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!496 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!497 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!498 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!499 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!500 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!501 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!502 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!503 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!504 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!505 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!506 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!507 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!508 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!509 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!510 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!511 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!512 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!513 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!514 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!515 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!516 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!517 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!518 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!519 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!520 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!521 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!522 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!523 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!524 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!525 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!526 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!527 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "global_rtl_index", file: !385, line: 1994, baseType: !7, size: 32, elements: !528)
!528 = !{!529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540}
!529 = !DIEnumerator(name: "GR_PC", value: 0, isUnsigned: true)
!530 = !DIEnumerator(name: "GR_CC0", value: 1, isUnsigned: true)
!531 = !DIEnumerator(name: "GR_STACK_POINTER", value: 2, isUnsigned: true)
!532 = !DIEnumerator(name: "GR_FRAME_POINTER", value: 3, isUnsigned: true)
!533 = !DIEnumerator(name: "GR_HARD_FRAME_POINTER", value: 4, isUnsigned: true)
!534 = !DIEnumerator(name: "GR_ARG_POINTER", value: 5, isUnsigned: true)
!535 = !DIEnumerator(name: "GR_VIRTUAL_INCOMING_ARGS", value: 6, isUnsigned: true)
!536 = !DIEnumerator(name: "GR_VIRTUAL_STACK_ARGS", value: 7, isUnsigned: true)
!537 = !DIEnumerator(name: "GR_VIRTUAL_STACK_DYNAMIC", value: 8, isUnsigned: true)
!538 = !DIEnumerator(name: "GR_VIRTUAL_OUTGOING_ARGS", value: 9, isUnsigned: true)
!539 = !DIEnumerator(name: "GR_VIRTUAL_CFA", value: 10, isUnsigned: true)
!540 = !DIEnumerator(name: "GR_MAX", value: 11, isUnsigned: true)
!541 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !542, line: 36, baseType: !7, size: 32, elements: !543)
!542 = !DIFile(filename: "./machmode.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!543 = !{!544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562}
!544 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!545 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!546 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!547 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!548 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!549 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!550 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!551 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!552 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!553 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!554 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!555 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!556 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!557 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!558 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!559 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!560 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!561 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!562 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!563 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "df_changeable_flags", file: !564, line: 463, baseType: !7, size: 32, elements: !565)
!564 = !DIFile(filename: "./df.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!565 = !{!566, !567, !568, !569, !570, !571, !572}
!566 = !DIEnumerator(name: "DF_LR_RUN_DCE", value: 1, isUnsigned: true)
!567 = !DIEnumerator(name: "DF_NO_HARD_REGS", value: 2, isUnsigned: true)
!568 = !DIEnumerator(name: "DF_EQ_NOTES", value: 4, isUnsigned: true)
!569 = !DIEnumerator(name: "DF_NO_REGS_EVER_LIVE", value: 8, isUnsigned: true)
!570 = !DIEnumerator(name: "DF_NO_INSN_RESCAN", value: 16, isUnsigned: true)
!571 = !DIEnumerator(name: "DF_DEFER_INSN_RESCAN", value: 32, isUnsigned: true)
!572 = !DIEnumerator(name: "DF_VERIFY_SCHEDULED", value: 64, isUnsigned: true)
!573 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "compiler_param", file: !574, line: 82, baseType: !7, size: 32, elements: !575)
!574 = !DIFile(filename: "./params.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!575 = !{!576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695}
!576 = !DIEnumerator(name: "PARAM_STRUCT_REORG_COLD_STRUCT_RATIO", value: 0, isUnsigned: true)
!577 = !DIEnumerator(name: "PARAM_PREDICTABLE_BRANCH_OUTCOME", value: 1, isUnsigned: true)
!578 = !DIEnumerator(name: "PARAM_MAX_INLINE_INSNS_SINGLE", value: 2, isUnsigned: true)
!579 = !DIEnumerator(name: "PARAM_MAX_INLINE_INSNS_AUTO", value: 3, isUnsigned: true)
!580 = !DIEnumerator(name: "PARAM_MAX_INLINE_INSNS_RECURSIVE", value: 4, isUnsigned: true)
!581 = !DIEnumerator(name: "PARAM_MAX_INLINE_INSNS_RECURSIVE_AUTO", value: 5, isUnsigned: true)
!582 = !DIEnumerator(name: "PARAM_MAX_INLINE_RECURSIVE_DEPTH", value: 6, isUnsigned: true)
!583 = !DIEnumerator(name: "PARAM_MAX_INLINE_RECURSIVE_DEPTH_AUTO", value: 7, isUnsigned: true)
!584 = !DIEnumerator(name: "PARAM_MIN_INLINE_RECURSIVE_PROBABILITY", value: 8, isUnsigned: true)
!585 = !DIEnumerator(name: "PARAM_EARLY_INLINER_MAX_ITERATIONS", value: 9, isUnsigned: true)
!586 = !DIEnumerator(name: "PARAM_MAX_VARIABLE_EXPANSIONS", value: 10, isUnsigned: true)
!587 = !DIEnumerator(name: "PARAM_MIN_VECT_LOOP_BOUND", value: 11, isUnsigned: true)
!588 = !DIEnumerator(name: "PARAM_MAX_DELAY_SLOT_INSN_SEARCH", value: 12, isUnsigned: true)
!589 = !DIEnumerator(name: "PARAM_MAX_DELAY_SLOT_LIVE_SEARCH", value: 13, isUnsigned: true)
!590 = !DIEnumerator(name: "PARAM_MAX_PENDING_LIST_LENGTH", value: 14, isUnsigned: true)
!591 = !DIEnumerator(name: "PARAM_LARGE_FUNCTION_INSNS", value: 15, isUnsigned: true)
!592 = !DIEnumerator(name: "PARAM_LARGE_FUNCTION_GROWTH", value: 16, isUnsigned: true)
!593 = !DIEnumerator(name: "PARAM_LARGE_UNIT_INSNS", value: 17, isUnsigned: true)
!594 = !DIEnumerator(name: "PARAM_INLINE_UNIT_GROWTH", value: 18, isUnsigned: true)
!595 = !DIEnumerator(name: "PARAM_IPCP_UNIT_GROWTH", value: 19, isUnsigned: true)
!596 = !DIEnumerator(name: "PARAM_EARLY_INLINING_INSNS", value: 20, isUnsigned: true)
!597 = !DIEnumerator(name: "PARAM_LARGE_STACK_FRAME", value: 21, isUnsigned: true)
!598 = !DIEnumerator(name: "PARAM_STACK_FRAME_GROWTH", value: 22, isUnsigned: true)
!599 = !DIEnumerator(name: "PARAM_MAX_GCSE_MEMORY", value: 23, isUnsigned: true)
!600 = !DIEnumerator(name: "PARAM_GCSE_AFTER_RELOAD_PARTIAL_FRACTION", value: 24, isUnsigned: true)
!601 = !DIEnumerator(name: "PARAM_GCSE_AFTER_RELOAD_CRITICAL_FRACTION", value: 25, isUnsigned: true)
!602 = !DIEnumerator(name: "PARAM_MAX_UNROLLED_INSNS", value: 26, isUnsigned: true)
!603 = !DIEnumerator(name: "PARAM_MAX_AVERAGE_UNROLLED_INSNS", value: 27, isUnsigned: true)
!604 = !DIEnumerator(name: "PARAM_MAX_UNROLL_TIMES", value: 28, isUnsigned: true)
!605 = !DIEnumerator(name: "PARAM_MAX_PEELED_INSNS", value: 29, isUnsigned: true)
!606 = !DIEnumerator(name: "PARAM_MAX_PEEL_TIMES", value: 30, isUnsigned: true)
!607 = !DIEnumerator(name: "PARAM_MAX_COMPLETELY_PEELED_INSNS", value: 31, isUnsigned: true)
!608 = !DIEnumerator(name: "PARAM_MAX_COMPLETELY_PEEL_TIMES", value: 32, isUnsigned: true)
!609 = !DIEnumerator(name: "PARAM_MAX_ONCE_PEELED_INSNS", value: 33, isUnsigned: true)
!610 = !DIEnumerator(name: "PARAM_MAX_UNROLL_ITERATIONS", value: 34, isUnsigned: true)
!611 = !DIEnumerator(name: "PARAM_MAX_UNSWITCH_INSNS", value: 35, isUnsigned: true)
!612 = !DIEnumerator(name: "PARAM_MAX_UNSWITCH_LEVEL", value: 36, isUnsigned: true)
!613 = !DIEnumerator(name: "PARAM_MAX_ITERATIONS_TO_TRACK", value: 37, isUnsigned: true)
!614 = !DIEnumerator(name: "PARAM_MAX_ITERATIONS_COMPUTATION_COST", value: 38, isUnsigned: true)
!615 = !DIEnumerator(name: "PARAM_SMS_MAX_II_FACTOR", value: 39, isUnsigned: true)
!616 = !DIEnumerator(name: "PARAM_SMS_DFA_HISTORY", value: 40, isUnsigned: true)
!617 = !DIEnumerator(name: "PARAM_SMS_LOOP_AVERAGE_COUNT_THRESHOLD", value: 41, isUnsigned: true)
!618 = !DIEnumerator(name: "HOT_BB_COUNT_FRACTION", value: 42, isUnsigned: true)
!619 = !DIEnumerator(name: "HOT_BB_FREQUENCY_FRACTION", value: 43, isUnsigned: true)
!620 = !DIEnumerator(name: "PARAM_ALIGN_THRESHOLD", value: 44, isUnsigned: true)
!621 = !DIEnumerator(name: "PARAM_ALIGN_LOOP_ITERATIONS", value: 45, isUnsigned: true)
!622 = !DIEnumerator(name: "PARAM_MAX_PREDICTED_ITERATIONS", value: 46, isUnsigned: true)
!623 = !DIEnumerator(name: "TRACER_DYNAMIC_COVERAGE_FEEDBACK", value: 47, isUnsigned: true)
!624 = !DIEnumerator(name: "TRACER_DYNAMIC_COVERAGE", value: 48, isUnsigned: true)
!625 = !DIEnumerator(name: "TRACER_MAX_CODE_GROWTH", value: 49, isUnsigned: true)
!626 = !DIEnumerator(name: "TRACER_MIN_BRANCH_RATIO", value: 50, isUnsigned: true)
!627 = !DIEnumerator(name: "TRACER_MIN_BRANCH_PROBABILITY_FEEDBACK", value: 51, isUnsigned: true)
!628 = !DIEnumerator(name: "TRACER_MIN_BRANCH_PROBABILITY", value: 52, isUnsigned: true)
!629 = !DIEnumerator(name: "PARAM_MAX_CROSSJUMP_EDGES", value: 53, isUnsigned: true)
!630 = !DIEnumerator(name: "PARAM_MIN_CROSSJUMP_INSNS", value: 54, isUnsigned: true)
!631 = !DIEnumerator(name: "PARAM_MAX_GROW_COPY_BB_INSNS", value: 55, isUnsigned: true)
!632 = !DIEnumerator(name: "PARAM_MAX_GOTO_DUPLICATION_INSNS", value: 56, isUnsigned: true)
!633 = !DIEnumerator(name: "PARAM_MAX_CSE_PATH_LENGTH", value: 57, isUnsigned: true)
!634 = !DIEnumerator(name: "PARAM_MAX_CSE_INSNS", value: 58, isUnsigned: true)
!635 = !DIEnumerator(name: "PARAM_LIM_EXPENSIVE", value: 59, isUnsigned: true)
!636 = !DIEnumerator(name: "PARAM_IV_CONSIDER_ALL_CANDIDATES_BOUND", value: 60, isUnsigned: true)
!637 = !DIEnumerator(name: "PARAM_IV_MAX_CONSIDERED_USES", value: 61, isUnsigned: true)
!638 = !DIEnumerator(name: "PARAM_IV_ALWAYS_PRUNE_CAND_SET_BOUND", value: 62, isUnsigned: true)
!639 = !DIEnumerator(name: "PARAM_SCEV_MAX_EXPR_SIZE", value: 63, isUnsigned: true)
!640 = !DIEnumerator(name: "PARAM_OMEGA_MAX_VARS", value: 64, isUnsigned: true)
!641 = !DIEnumerator(name: "PARAM_OMEGA_MAX_GEQS", value: 65, isUnsigned: true)
!642 = !DIEnumerator(name: "PARAM_OMEGA_MAX_EQS", value: 66, isUnsigned: true)
!643 = !DIEnumerator(name: "PARAM_OMEGA_MAX_WILD_CARDS", value: 67, isUnsigned: true)
!644 = !DIEnumerator(name: "PARAM_OMEGA_HASH_TABLE_SIZE", value: 68, isUnsigned: true)
!645 = !DIEnumerator(name: "PARAM_OMEGA_MAX_KEYS", value: 69, isUnsigned: true)
!646 = !DIEnumerator(name: "PARAM_OMEGA_ELIMINATE_REDUNDANT_CONSTRAINTS", value: 70, isUnsigned: true)
!647 = !DIEnumerator(name: "PARAM_VECT_MAX_VERSION_FOR_ALIGNMENT_CHECKS", value: 71, isUnsigned: true)
!648 = !DIEnumerator(name: "PARAM_VECT_MAX_VERSION_FOR_ALIAS_CHECKS", value: 72, isUnsigned: true)
!649 = !DIEnumerator(name: "PARAM_MAX_CSELIB_MEMORY_LOCATIONS", value: 73, isUnsigned: true)
!650 = !DIEnumerator(name: "GGC_MIN_EXPAND", value: 74, isUnsigned: true)
!651 = !DIEnumerator(name: "GGC_MIN_HEAPSIZE", value: 75, isUnsigned: true)
!652 = !DIEnumerator(name: "PARAM_MAX_RELOAD_SEARCH_INSNS", value: 76, isUnsigned: true)
!653 = !DIEnumerator(name: "PARAM_MAX_SCHED_REGION_BLOCKS", value: 77, isUnsigned: true)
!654 = !DIEnumerator(name: "PARAM_MAX_SCHED_REGION_INSNS", value: 78, isUnsigned: true)
!655 = !DIEnumerator(name: "PARAM_MAX_PIPELINE_REGION_BLOCKS", value: 79, isUnsigned: true)
!656 = !DIEnumerator(name: "PARAM_MAX_PIPELINE_REGION_INSNS", value: 80, isUnsigned: true)
!657 = !DIEnumerator(name: "PARAM_MIN_SPEC_PROB", value: 81, isUnsigned: true)
!658 = !DIEnumerator(name: "PARAM_MAX_SCHED_EXTEND_REGIONS_ITERS", value: 82, isUnsigned: true)
!659 = !DIEnumerator(name: "PARAM_MAX_SCHED_INSN_CONFLICT_DELAY", value: 83, isUnsigned: true)
!660 = !DIEnumerator(name: "PARAM_SCHED_SPEC_PROB_CUTOFF", value: 84, isUnsigned: true)
!661 = !DIEnumerator(name: "PARAM_SELSCHED_MAX_LOOKAHEAD", value: 85, isUnsigned: true)
!662 = !DIEnumerator(name: "PARAM_SELSCHED_MAX_SCHED_TIMES", value: 86, isUnsigned: true)
!663 = !DIEnumerator(name: "PARAM_SELSCHED_INSNS_TO_RENAME", value: 87, isUnsigned: true)
!664 = !DIEnumerator(name: "PARAM_SCHED_MEM_TRUE_DEP_COST", value: 88, isUnsigned: true)
!665 = !DIEnumerator(name: "PARAM_MAX_LAST_VALUE_RTL", value: 89, isUnsigned: true)
!666 = !DIEnumerator(name: "PARAM_INTEGER_SHARE_LIMIT", value: 90, isUnsigned: true)
!667 = !DIEnumerator(name: "PARAM_MIN_VIRTUAL_MAPPINGS", value: 91, isUnsigned: true)
!668 = !DIEnumerator(name: "PARAM_VIRTUAL_MAPPINGS_TO_SYMS_RATIO", value: 92, isUnsigned: true)
!669 = !DIEnumerator(name: "PARAM_SSP_BUFFER_SIZE", value: 93, isUnsigned: true)
!670 = !DIEnumerator(name: "PARAM_MAX_JUMP_THREAD_DUPLICATION_STMTS", value: 94, isUnsigned: true)
!671 = !DIEnumerator(name: "PARAM_MAX_FIELDS_FOR_FIELD_SENSITIVE", value: 95, isUnsigned: true)
!672 = !DIEnumerator(name: "PARAM_MAX_SCHED_READY_INSNS", value: 96, isUnsigned: true)
!673 = !DIEnumerator(name: "PARAM_PREFETCH_LATENCY", value: 97, isUnsigned: true)
!674 = !DIEnumerator(name: "PARAM_SIMULTANEOUS_PREFETCHES", value: 98, isUnsigned: true)
!675 = !DIEnumerator(name: "PARAM_L1_CACHE_SIZE", value: 99, isUnsigned: true)
!676 = !DIEnumerator(name: "PARAM_L1_CACHE_LINE_SIZE", value: 100, isUnsigned: true)
!677 = !DIEnumerator(name: "PARAM_L2_CACHE_SIZE", value: 101, isUnsigned: true)
!678 = !DIEnumerator(name: "PARAM_USE_CANONICAL_TYPES", value: 102, isUnsigned: true)
!679 = !DIEnumerator(name: "PARAM_MAX_PARTIAL_ANTIC_LENGTH", value: 103, isUnsigned: true)
!680 = !DIEnumerator(name: "PARAM_SCCVN_MAX_SCC_SIZE", value: 104, isUnsigned: true)
!681 = !DIEnumerator(name: "PARAM_IRA_MAX_LOOPS_NUM", value: 105, isUnsigned: true)
!682 = !DIEnumerator(name: "PARAM_IRA_MAX_CONFLICT_TABLE_SIZE", value: 106, isUnsigned: true)
!683 = !DIEnumerator(name: "PARAM_IRA_LOOP_RESERVED_REGS", value: 107, isUnsigned: true)
!684 = !DIEnumerator(name: "PARAM_SWITCH_CONVERSION_BRANCH_RATIO", value: 108, isUnsigned: true)
!685 = !DIEnumerator(name: "PARAM_LOOP_BLOCK_TILE_SIZE", value: 109, isUnsigned: true)
!686 = !DIEnumerator(name: "PARAM_GRAPHITE_MAX_NB_SCOP_PARAMS", value: 110, isUnsigned: true)
!687 = !DIEnumerator(name: "PARAM_GRAPHITE_MAX_BBS_PER_FUNCTION", value: 111, isUnsigned: true)
!688 = !DIEnumerator(name: "PARAM_LOOP_INVARIANT_MAX_BBS_IN_LOOP", value: 112, isUnsigned: true)
!689 = !DIEnumerator(name: "PARAM_SLP_MAX_INSNS_IN_BB", value: 113, isUnsigned: true)
!690 = !DIEnumerator(name: "PARAM_MIN_INSN_TO_PREFETCH_RATIO", value: 114, isUnsigned: true)
!691 = !DIEnumerator(name: "PARAM_PREFETCH_MIN_INSN_TO_MEM_RATIO", value: 115, isUnsigned: true)
!692 = !DIEnumerator(name: "PARAM_MAX_VARTRACK_SIZE", value: 116, isUnsigned: true)
!693 = !DIEnumerator(name: "PARAM_MIN_NONDEBUG_INSN_UID", value: 117, isUnsigned: true)
!694 = !DIEnumerator(name: "PARAM_IPA_SRA_PTR_GROWTH_FACTOR", value: 118, isUnsigned: true)
!695 = !DIEnumerator(name: "LAST_PARAM", value: 119, isUnsigned: true)
!696 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !697, line: 74, baseType: !7, size: 32, elements: !698)
!697 = !DIFile(filename: "./timevar.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!698 = !{!699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871}
!699 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!700 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!701 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!702 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!703 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!704 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!705 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!706 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!707 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!708 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!709 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!710 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!711 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!712 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!713 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!714 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!715 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!716 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!717 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!718 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!719 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!720 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!721 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!722 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!723 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!724 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!725 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!726 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!727 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!728 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!729 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!730 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!731 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!732 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!733 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!734 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!735 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!736 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!737 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!738 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!739 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!740 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!741 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!742 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!743 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!744 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!745 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!746 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!747 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!748 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!749 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!750 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!751 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!752 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!753 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!754 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!755 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!756 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!757 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!758 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!759 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!760 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!761 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!762 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!763 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!764 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!765 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!766 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!767 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!768 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!769 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!770 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!771 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!772 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!773 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!774 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!775 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!776 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!777 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!778 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!779 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!780 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!781 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!782 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!783 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!784 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!785 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!786 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!787 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!788 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!789 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!790 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!791 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!792 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!793 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!794 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!795 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!796 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!797 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!798 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!799 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!800 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!801 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!802 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!803 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!804 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!805 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!806 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!807 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!808 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!809 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!810 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!811 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!812 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!813 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!814 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!815 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!816 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!817 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!818 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!819 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!820 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!821 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!822 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!823 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!824 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!825 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!826 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!827 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!828 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!829 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!830 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!831 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!832 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!833 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!834 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!835 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!836 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!837 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!838 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!839 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!840 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!841 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!842 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!843 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!844 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!845 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!846 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!847 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!848 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!849 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!850 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!851 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!852 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!853 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!854 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!855 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!856 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!857 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!858 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!859 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!860 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!861 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!862 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!863 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!864 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!865 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!866 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!867 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!868 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!869 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!870 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!871 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!872 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "debug_counter", file: !873, line: 27, baseType: !7, size: 32, elements: !874)
!873 = !DIFile(filename: "./dbgcnt.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!874 = !{!875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913}
!875 = !DIEnumerator(name: "auto_inc_dec", value: 0, isUnsigned: true)
!876 = !DIEnumerator(name: "ccp", value: 1, isUnsigned: true)
!877 = !DIEnumerator(name: "cfg_cleanup", value: 2, isUnsigned: true)
!878 = !DIEnumerator(name: "cse2_move2add", value: 3, isUnsigned: true)
!879 = !DIEnumerator(name: "cprop", value: 4, isUnsigned: true)
!880 = !DIEnumerator(name: "dce", value: 5, isUnsigned: true)
!881 = !DIEnumerator(name: "dce_fast", value: 6, isUnsigned: true)
!882 = !DIEnumerator(name: "dce_ud", value: 7, isUnsigned: true)
!883 = !DIEnumerator(name: "delete_trivial_dead", value: 8, isUnsigned: true)
!884 = !DIEnumerator(name: "df_byte_scan", value: 9, isUnsigned: true)
!885 = !DIEnumerator(name: "dse", value: 10, isUnsigned: true)
!886 = !DIEnumerator(name: "dse1", value: 11, isUnsigned: true)
!887 = !DIEnumerator(name: "dse2", value: 12, isUnsigned: true)
!888 = !DIEnumerator(name: "gcse2_delete", value: 13, isUnsigned: true)
!889 = !DIEnumerator(name: "global_alloc_at_func", value: 14, isUnsigned: true)
!890 = !DIEnumerator(name: "global_alloc_at_reg", value: 15, isUnsigned: true)
!891 = !DIEnumerator(name: "hoist", value: 16, isUnsigned: true)
!892 = !DIEnumerator(name: "ia64_sched2", value: 17, isUnsigned: true)
!893 = !DIEnumerator(name: "if_conversion", value: 18, isUnsigned: true)
!894 = !DIEnumerator(name: "if_after_combine", value: 19, isUnsigned: true)
!895 = !DIEnumerator(name: "if_after_reload", value: 20, isUnsigned: true)
!896 = !DIEnumerator(name: "local_alloc_for_sched", value: 21, isUnsigned: true)
!897 = !DIEnumerator(name: "postreload_cse", value: 22, isUnsigned: true)
!898 = !DIEnumerator(name: "pre", value: 23, isUnsigned: true)
!899 = !DIEnumerator(name: "pre_insn", value: 24, isUnsigned: true)
!900 = !DIEnumerator(name: "treepre_insert", value: 25, isUnsigned: true)
!901 = !DIEnumerator(name: "sched2_func", value: 26, isUnsigned: true)
!902 = !DIEnumerator(name: "sched_block", value: 27, isUnsigned: true)
!903 = !DIEnumerator(name: "sched_func", value: 28, isUnsigned: true)
!904 = !DIEnumerator(name: "sched_insn", value: 29, isUnsigned: true)
!905 = !DIEnumerator(name: "sched_region", value: 30, isUnsigned: true)
!906 = !DIEnumerator(name: "sel_sched_cnt", value: 31, isUnsigned: true)
!907 = !DIEnumerator(name: "sel_sched_region_cnt", value: 32, isUnsigned: true)
!908 = !DIEnumerator(name: "sel_sched_insn_cnt", value: 33, isUnsigned: true)
!909 = !DIEnumerator(name: "sms_sched_loop", value: 34, isUnsigned: true)
!910 = !DIEnumerator(name: "store_motion", value: 35, isUnsigned: true)
!911 = !DIEnumerator(name: "split_for_sched2", value: 36, isUnsigned: true)
!912 = !DIEnumerator(name: "tail_call", value: 37, isUnsigned: true)
!913 = !DIEnumerator(name: "debug_counter_number_of_counters", value: 38, isUnsigned: true)
!914 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !915, line: 104, baseType: !7, size: 32, elements: !916)
!915 = !DIFile(filename: "./tree-pass.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!916 = !{!917, !918, !919, !920}
!917 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!918 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!919 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!920 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!921 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "df_ref_flags", file: !564, line: 84, baseType: !7, size: 32, elements: !922)
!922 = !{!923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938}
!923 = !DIEnumerator(name: "DF_REF_CONDITIONAL", value: 1, isUnsigned: true)
!924 = !DIEnumerator(name: "DF_REF_AT_TOP", value: 2, isUnsigned: true)
!925 = !DIEnumerator(name: "DF_REF_IN_NOTE", value: 4, isUnsigned: true)
!926 = !DIEnumerator(name: "DF_HARD_REG_LIVE", value: 8, isUnsigned: true)
!927 = !DIEnumerator(name: "DF_REF_PARTIAL", value: 16, isUnsigned: true)
!928 = !DIEnumerator(name: "DF_REF_READ_WRITE", value: 32, isUnsigned: true)
!929 = !DIEnumerator(name: "DF_REF_MAY_CLOBBER", value: 64, isUnsigned: true)
!930 = !DIEnumerator(name: "DF_REF_MUST_CLOBBER", value: 128, isUnsigned: true)
!931 = !DIEnumerator(name: "DF_REF_SIGN_EXTRACT", value: 256, isUnsigned: true)
!932 = !DIEnumerator(name: "DF_REF_ZERO_EXTRACT", value: 512, isUnsigned: true)
!933 = !DIEnumerator(name: "DF_REF_STRICT_LOW_PART", value: 1024, isUnsigned: true)
!934 = !DIEnumerator(name: "DF_REF_SUBREG", value: 2048, isUnsigned: true)
!935 = !DIEnumerator(name: "DF_REF_MW_HARDREG", value: 4096, isUnsigned: true)
!936 = !DIEnumerator(name: "DF_REF_CALL_STACK_USAGE", value: 8192, isUnsigned: true)
!937 = !DIEnumerator(name: "DF_REF_REG_MARKER", value: 16384, isUnsigned: true)
!938 = !DIEnumerator(name: "DF_REF_PRE_POST_MODIFY", value: 32768, isUnsigned: true)
!939 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_note", file: !385, line: 836, baseType: !7, size: 32, elements: !940)
!940 = !{!941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972}
!941 = !DIEnumerator(name: "REG_DEP_TRUE", value: 0, isUnsigned: true)
!942 = !DIEnumerator(name: "REG_DEAD", value: 1, isUnsigned: true)
!943 = !DIEnumerator(name: "REG_INC", value: 2, isUnsigned: true)
!944 = !DIEnumerator(name: "REG_EQUIV", value: 3, isUnsigned: true)
!945 = !DIEnumerator(name: "REG_EQUAL", value: 4, isUnsigned: true)
!946 = !DIEnumerator(name: "REG_NONNEG", value: 5, isUnsigned: true)
!947 = !DIEnumerator(name: "REG_UNUSED", value: 6, isUnsigned: true)
!948 = !DIEnumerator(name: "REG_CC_SETTER", value: 7, isUnsigned: true)
!949 = !DIEnumerator(name: "REG_CC_USER", value: 8, isUnsigned: true)
!950 = !DIEnumerator(name: "REG_LABEL_TARGET", value: 9, isUnsigned: true)
!951 = !DIEnumerator(name: "REG_LABEL_OPERAND", value: 10, isUnsigned: true)
!952 = !DIEnumerator(name: "REG_DEP_OUTPUT", value: 11, isUnsigned: true)
!953 = !DIEnumerator(name: "REG_DEP_ANTI", value: 12, isUnsigned: true)
!954 = !DIEnumerator(name: "REG_BR_PROB", value: 13, isUnsigned: true)
!955 = !DIEnumerator(name: "REG_VALUE_PROFILE", value: 14, isUnsigned: true)
!956 = !DIEnumerator(name: "REG_NOALIAS", value: 15, isUnsigned: true)
!957 = !DIEnumerator(name: "REG_BR_PRED", value: 16, isUnsigned: true)
!958 = !DIEnumerator(name: "REG_FRAME_RELATED_EXPR", value: 17, isUnsigned: true)
!959 = !DIEnumerator(name: "REG_CFA_DEF_CFA", value: 18, isUnsigned: true)
!960 = !DIEnumerator(name: "REG_CFA_ADJUST_CFA", value: 19, isUnsigned: true)
!961 = !DIEnumerator(name: "REG_CFA_OFFSET", value: 20, isUnsigned: true)
!962 = !DIEnumerator(name: "REG_CFA_REGISTER", value: 21, isUnsigned: true)
!963 = !DIEnumerator(name: "REG_CFA_RESTORE", value: 22, isUnsigned: true)
!964 = !DIEnumerator(name: "REG_CFA_SET_VDRAP", value: 23, isUnsigned: true)
!965 = !DIEnumerator(name: "REG_EH_CONTEXT", value: 24, isUnsigned: true)
!966 = !DIEnumerator(name: "REG_EH_REGION", value: 25, isUnsigned: true)
!967 = !DIEnumerator(name: "REG_SAVE_NOTE", value: 26, isUnsigned: true)
!968 = !DIEnumerator(name: "REG_NORETURN", value: 27, isUnsigned: true)
!969 = !DIEnumerator(name: "REG_NON_LOCAL_GOTO", value: 28, isUnsigned: true)
!970 = !DIEnumerator(name: "REG_CROSSING_JUMP", value: 29, isUnsigned: true)
!971 = !DIEnumerator(name: "REG_SETJMP", value: 30, isUnsigned: true)
!972 = !DIEnumerator(name: "REG_NOTE_MAX", value: 31, isUnsigned: true)
!973 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_class", file: !385, line: 60, baseType: !7, size: 32, elements: !974)
!974 = !{!975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987}
!975 = !DIEnumerator(name: "RTX_COMPARE", value: 0, isUnsigned: true)
!976 = !DIEnumerator(name: "RTX_COMM_COMPARE", value: 1, isUnsigned: true)
!977 = !DIEnumerator(name: "RTX_BIN_ARITH", value: 2, isUnsigned: true)
!978 = !DIEnumerator(name: "RTX_COMM_ARITH", value: 3, isUnsigned: true)
!979 = !DIEnumerator(name: "RTX_UNARY", value: 4, isUnsigned: true)
!980 = !DIEnumerator(name: "RTX_EXTRA", value: 5, isUnsigned: true)
!981 = !DIEnumerator(name: "RTX_MATCH", value: 6, isUnsigned: true)
!982 = !DIEnumerator(name: "RTX_INSN", value: 7, isUnsigned: true)
!983 = !DIEnumerator(name: "RTX_OBJ", value: 8, isUnsigned: true)
!984 = !DIEnumerator(name: "RTX_CONST_OBJ", value: 9, isUnsigned: true)
!985 = !DIEnumerator(name: "RTX_TERNARY", value: 10, isUnsigned: true)
!986 = !DIEnumerator(name: "RTX_BITFIELD_OPS", value: 11, isUnsigned: true)
!987 = !DIEnumerator(name: "RTX_AUTOINC", value: 12, isUnsigned: true)
!988 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_class", file: !153, line: 1188, baseType: !7, size: 32, elements: !989)
!989 = !{!990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017}
!990 = !DIEnumerator(name: "NO_REGS", value: 0, isUnsigned: true)
!991 = !DIEnumerator(name: "AREG", value: 1, isUnsigned: true)
!992 = !DIEnumerator(name: "DREG", value: 2, isUnsigned: true)
!993 = !DIEnumerator(name: "CREG", value: 3, isUnsigned: true)
!994 = !DIEnumerator(name: "BREG", value: 4, isUnsigned: true)
!995 = !DIEnumerator(name: "SIREG", value: 5, isUnsigned: true)
!996 = !DIEnumerator(name: "DIREG", value: 6, isUnsigned: true)
!997 = !DIEnumerator(name: "AD_REGS", value: 7, isUnsigned: true)
!998 = !DIEnumerator(name: "CLOBBERED_REGS", value: 8, isUnsigned: true)
!999 = !DIEnumerator(name: "Q_REGS", value: 9, isUnsigned: true)
!1000 = !DIEnumerator(name: "NON_Q_REGS", value: 10, isUnsigned: true)
!1001 = !DIEnumerator(name: "INDEX_REGS", value: 11, isUnsigned: true)
!1002 = !DIEnumerator(name: "LEGACY_REGS", value: 12, isUnsigned: true)
!1003 = !DIEnumerator(name: "GENERAL_REGS", value: 13, isUnsigned: true)
!1004 = !DIEnumerator(name: "FP_TOP_REG", value: 14, isUnsigned: true)
!1005 = !DIEnumerator(name: "FP_SECOND_REG", value: 15, isUnsigned: true)
!1006 = !DIEnumerator(name: "FLOAT_REGS", value: 16, isUnsigned: true)
!1007 = !DIEnumerator(name: "SSE_FIRST_REG", value: 17, isUnsigned: true)
!1008 = !DIEnumerator(name: "SSE_REGS", value: 18, isUnsigned: true)
!1009 = !DIEnumerator(name: "MMX_REGS", value: 19, isUnsigned: true)
!1010 = !DIEnumerator(name: "FP_TOP_SSE_REGS", value: 20, isUnsigned: true)
!1011 = !DIEnumerator(name: "FP_SECOND_SSE_REGS", value: 21, isUnsigned: true)
!1012 = !DIEnumerator(name: "FLOAT_SSE_REGS", value: 22, isUnsigned: true)
!1013 = !DIEnumerator(name: "FLOAT_INT_REGS", value: 23, isUnsigned: true)
!1014 = !DIEnumerator(name: "INT_SSE_REGS", value: 24, isUnsigned: true)
!1015 = !DIEnumerator(name: "FLOAT_INT_SSE_REGS", value: 25, isUnsigned: true)
!1016 = !DIEnumerator(name: "ALL_REGS", value: 26, isUnsigned: true)
!1017 = !DIEnumerator(name: "LIM_REG_CLASSES", value: 27, isUnsigned: true)
!1018 = !{!1019, !384, !541, !5, !7, !1020, !1036, !1050, !1053, !1054, !1055, !2203, !1091, !2208, !1033, !2216, !2227, !2229, !2295, !939, !2301, !2334, !1048, !2307, !2281, !2335}
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1022)
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !1023, line: 52, size: 256, elements: !1024)
!1023 = !DIFile(filename: "./real.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1024 = !{!1025, !1026, !1027, !1028, !1029, !1030, !1031}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !1022, file: !1023, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !1022, file: !1023, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !1022, file: !1023, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !1022, file: !1023, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1022, file: !1023, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !1022, file: !1023, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1022, file: !1023, line: 62, baseType: !1032, size: 192, offset: 64)
!1032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1033, size: 192, elements: !1034)
!1033 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1034 = !{!1035}
!1035 = !DISubrange(count: 3)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1038)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !1039, line: 27, size: 192, elements: !1040)
!1039 = !DIFile(filename: "./fixed-value.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1040 = !{!1041, !1049}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1038, file: !1039, line: 29, baseType: !1042, size: 128)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !1043, line: 58, baseType: !1044)
!1043 = !DIFile(filename: "./double-int.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1043, line: 54, size: 128, elements: !1045)
!1045 = !{!1046, !1047}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !1044, file: !1043, line: 56, baseType: !1033, size: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !1044, file: !1043, line: 57, baseType: !1048, size: 64, offset: 64)
!1048 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1038, file: !1039, line: 30, baseType: !5, size: 32, offset: 128)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!1051 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1052)
!1052 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1053 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "branch_path", file: !3, line: 527, size: 64, elements: !1057)
!1057 = !{!1058}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1056, file: !3, line: 530, baseType: !1059, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !1060, line: 111, baseType: !1061)
!1060 = !DIFile(filename: "./coretypes.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !142, line: 217, size: 832, elements: !1063)
!1063 = !{!1064, !2168, !2169, !2170, !2173, !2177, !2178, !2179, !2197, !2198, !2199, !2200, !2201, !2202}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1062, file: !142, line: 219, baseType: !1065, size: 64)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !142, line: 151, baseType: !1067)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !142, line: 151, size: 128, elements: !1068)
!1068 = !{!1069}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1067, file: !142, line: 151, baseType: !1070, size: 128)
!1070 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !142, line: 150, baseType: !1071)
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !142, line: 150, size: 128, elements: !1072)
!1072 = !{!1073, !1074, !1075}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1071, file: !142, line: 150, baseType: !7, size: 32)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1071, file: !142, line: 150, baseType: !7, size: 32, offset: 32)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1071, file: !142, line: 150, baseType: !1076, size: 64, offset: 64)
!1076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1077, size: 64, elements: !1128)
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !1060, line: 108, baseType: !1078)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !142, line: 122, size: 512, elements: !1080)
!1080 = !{!1081, !1082, !1083, !2160, !2161, !2162, !2163, !2164, !2165, !2166}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1079, file: !142, line: 124, baseType: !1061, size: 64)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1079, file: !142, line: 125, baseType: !1061, size: 64, offset: 64)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1079, file: !142, line: 131, baseType: !1084, size: 64, offset: 128)
!1084 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !142, line: 128, size: 64, elements: !1085)
!1085 = !{!1086, !1090}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1084, file: !142, line: 129, baseType: !1087, size: 64)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !1060, line: 66, baseType: !1088)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !1060, line: 65, flags: DIFlagFwdDecl)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1084, file: !142, line: 130, baseType: !1091, size: 64)
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !1060, line: 50, baseType: !1092)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !385, line: 240, size: 384, elements: !1094)
!1094 = !{!1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1093, file: !385, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1093, file: !385, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !1093, file: !385, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !1093, file: !385, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !1093, file: !385, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !1093, file: !385, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !1093, file: !385, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1093, file: !385, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !1093, file: !385, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !1093, file: !385, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1093, file: !385, line: 321, baseType: !1106, size: 320, offset: 64)
!1106 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !385, line: 315, size: 320, elements: !1107)
!1107 = !{!1108, !2095, !2097, !2158, !2159}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1106, file: !385, line: 316, baseType: !1109, size: 64)
!1109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1110, size: 64, elements: !1128)
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !385, line: 183, baseType: !1111)
!1111 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !385, line: 166, size: 64, elements: !1112)
!1112 = !{!1113, !1114, !1115, !1119, !1120, !1130, !1131, !1143, !1146, !1207, !2073, !2074, !2085, !2092}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !1111, file: !385, line: 168, baseType: !1053, size: 32)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !1111, file: !385, line: 169, baseType: !7, size: 32)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !1111, file: !385, line: 170, baseType: !1116, size: 64)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 64)
!1117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1118)
!1118 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !1111, file: !385, line: 171, baseType: !1091, size: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !1111, file: !385, line: 172, baseType: !1121, size: 64)
!1121 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !1060, line: 53, baseType: !1122)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !385, line: 359, size: 128, elements: !1124)
!1124 = !{!1125, !1126}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !1123, file: !385, line: 360, baseType: !1053, size: 32)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !1123, file: !385, line: 361, baseType: !1127, size: 64, offset: 64)
!1127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1091, size: 64, elements: !1128)
!1128 = !{!1129}
!1129 = !DISubrange(count: 1)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !1111, file: !385, line: 173, baseType: !5, size: 32)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !1111, file: !385, line: 174, baseType: !1132, size: 32)
!1132 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !385, line: 133, baseType: !1133)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !385, line: 115, size: 32, elements: !1134)
!1134 = !{!1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !1133, file: !385, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !1133, file: !385, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !1133, file: !385, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !1133, file: !385, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !1133, file: !385, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !1133, file: !385, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !1133, file: !385, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1133, file: !385, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !1111, file: !385, line: 175, baseType: !1144, size: 64)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!1145 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !385, line: 175, flags: DIFlagFwdDecl)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !1111, file: !385, line: 176, baseType: !1147, size: 64)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !1149, line: 75, size: 256, elements: !1150)
!1149 = !DIFile(filename: "./bitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1150 = !{!1151, !1165, !1166, !1167}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1148, file: !1149, line: 76, baseType: !1152, size: 64)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 64)
!1153 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !1149, line: 68, baseType: !1154)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !1149, line: 63, size: 320, elements: !1155)
!1155 = !{!1156, !1158, !1159, !1160}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1154, file: !1149, line: 64, baseType: !1157, size: 64)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1154, file: !1149, line: 65, baseType: !1157, size: 64, offset: 64)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !1154, file: !1149, line: 66, baseType: !7, size: 32, offset: 128)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1154, file: !1149, line: 67, baseType: !1161, size: 128, offset: 192)
!1161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1162, size: 128, elements: !1163)
!1162 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !1149, line: 29, baseType: !1033)
!1163 = !{!1164}
!1164 = !DISubrange(count: 2)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1148, file: !1149, line: 77, baseType: !1152, size: 64, offset: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !1148, file: !1149, line: 78, baseType: !7, size: 32, offset: 128)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !1148, file: !1149, line: 79, baseType: !1168, size: 64, offset: 192)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!1169 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !1149, line: 49, baseType: !1170)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !1149, line: 45, size: 832, elements: !1171)
!1171 = !{!1172, !1173, !1174}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1170, file: !1149, line: 46, baseType: !1157, size: 64)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !1170, file: !1149, line: 47, baseType: !1147, size: 64, offset: 64)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !1170, file: !1149, line: 48, baseType: !1175, size: 704, offset: 128)
!1175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !1176, line: 164, size: 704, elements: !1177)
!1176 = !DIFile(filename: "./include/obstack.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1177 = !{!1178, !1179, !1190, !1191, !1192, !1193, !1194, !1195, !1199, !1203, !1204, !1205, !1206}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !1175, file: !1176, line: 166, baseType: !1048, size: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !1175, file: !1176, line: 167, baseType: !1180, size: 64, offset: 64)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !1176, line: 157, size: 192, elements: !1182)
!1182 = !{!1183, !1185, !1186}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1181, file: !1176, line: 159, baseType: !1184, size: 64)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1181, file: !1176, line: 160, baseType: !1180, size: 64, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !1181, file: !1176, line: 161, baseType: !1187, size: 32, offset: 128)
!1187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1118, size: 32, elements: !1188)
!1188 = !{!1189}
!1189 = !DISubrange(count: 4)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !1175, file: !1176, line: 168, baseType: !1184, size: 64, offset: 128)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1175, file: !1176, line: 169, baseType: !1184, size: 64, offset: 192)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !1175, file: !1176, line: 170, baseType: !1184, size: 64, offset: 256)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1175, file: !1176, line: 171, baseType: !1048, size: 64, offset: 320)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !1175, file: !1176, line: 172, baseType: !1053, size: 32, offset: 384)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !1175, file: !1176, line: 176, baseType: !1196, size: 64, offset: 448)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64)
!1197 = !DISubroutineType(types: !1198)
!1198 = !{!1180, !1019, !1048}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !1175, file: !1176, line: 177, baseType: !1200, size: 64, offset: 512)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DISubroutineType(types: !1202)
!1202 = !{null, !1019, !1180}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !1175, file: !1176, line: 178, baseType: !1019, size: 64, offset: 576)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !1175, file: !1176, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !1175, file: !1176, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !1175, file: !1176, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !1111, file: !385, line: 177, baseType: !1208, size: 64)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !1060, line: 56, baseType: !1209)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64)
!1210 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !158, line: 3371, size: 1792, elements: !1211)
!1211 = !{!1212, !1245, !1251, !1256, !1262, !1268, !1273, !1280, !1286, !1297, !1309, !1347, !1352, !1380, !1388, !1389, !1394, !1403, !1409, !1414, !1418, !1422, !1709, !1758, !1764, !1770, !1777, !1803, !1817, !1834, !1846, !1868, !1883, !2055}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1210, file: !158, line: 3372, baseType: !1213, size: 64)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !158, line: 360, size: 64, elements: !1214)
!1214 = !{!1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1213, file: !158, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !1213, file: !158, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !1213, file: !158, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !1213, file: !158, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !1213, file: !158, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !1213, file: !158, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !1213, file: !158, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !1213, file: !158, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !1213, file: !158, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !1213, file: !158, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !1213, file: !158, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !1213, file: !158, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !1213, file: !158, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !1213, file: !158, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !1213, file: !158, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !1213, file: !158, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !1213, file: !158, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !1213, file: !158, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1213, file: !158, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1213, file: !158, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1213, file: !158, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1213, file: !158, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1213, file: !158, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1213, file: !158, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1213, file: !158, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1213, file: !158, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !1213, file: !158, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !1213, file: !158, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !1213, file: !158, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !1213, file: !158, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1210, file: !158, line: 3373, baseType: !1246, size: 192)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !158, line: 402, size: 192, elements: !1247)
!1247 = !{!1248, !1249, !1250}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1246, file: !158, line: 403, baseType: !1213, size: 64)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !1246, file: !158, line: 404, baseType: !1208, size: 64, offset: 64)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1246, file: !158, line: 405, baseType: !1208, size: 64, offset: 128)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !1210, file: !158, line: 3374, baseType: !1252, size: 320)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !158, line: 1384, size: 320, elements: !1253)
!1253 = !{!1254, !1255}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1252, file: !158, line: 1385, baseType: !1246, size: 192)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !1252, file: !158, line: 1386, baseType: !1042, size: 128, offset: 192)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !1210, file: !158, line: 3375, baseType: !1257, size: 256)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !158, line: 1397, size: 256, elements: !1258)
!1258 = !{!1259, !1260}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1257, file: !158, line: 1398, baseType: !1246, size: 192)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !1257, file: !158, line: 1399, baseType: !1261, size: 64, offset: 192)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !1210, file: !158, line: 3376, baseType: !1263, size: 256)
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !158, line: 1408, size: 256, elements: !1264)
!1264 = !{!1265, !1266}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1263, file: !158, line: 1409, baseType: !1246, size: 192)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !1263, file: !158, line: 1410, baseType: !1267, size: 64, offset: 192)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !1210, file: !158, line: 3377, baseType: !1269, size: 256)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !158, line: 1437, size: 256, elements: !1270)
!1270 = !{!1271, !1272}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1269, file: !158, line: 1438, baseType: !1246, size: 192)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1269, file: !158, line: 1439, baseType: !1208, size: 64, offset: 192)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1210, file: !158, line: 3378, baseType: !1274, size: 256)
!1274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !158, line: 1418, size: 256, elements: !1275)
!1275 = !{!1276, !1277, !1278}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1274, file: !158, line: 1419, baseType: !1246, size: 192)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1274, file: !158, line: 1420, baseType: !1053, size: 32, offset: 192)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1274, file: !158, line: 1421, baseType: !1279, size: 8, offset: 224)
!1279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1118, size: 8, elements: !1128)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !1210, file: !158, line: 3379, baseType: !1281, size: 320)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !158, line: 1428, size: 320, elements: !1282)
!1282 = !{!1283, !1284, !1285}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1281, file: !158, line: 1429, baseType: !1246, size: 192)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !1281, file: !158, line: 1430, baseType: !1208, size: 64, offset: 192)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !1281, file: !158, line: 1431, baseType: !1208, size: 64, offset: 256)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !1210, file: !158, line: 3380, baseType: !1287, size: 320)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !158, line: 1460, size: 320, elements: !1288)
!1288 = !{!1289, !1290}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1287, file: !158, line: 1461, baseType: !1246, size: 192)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1287, file: !158, line: 1462, baseType: !1291, size: 128, offset: 192)
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !1292, line: 31, size: 128, elements: !1293)
!1292 = !DIFile(filename: "./symtab.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1293 = !{!1294, !1295, !1296}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1291, file: !1292, line: 32, baseType: !1050, size: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1291, file: !1292, line: 33, baseType: !7, size: 32, offset: 64)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !1291, file: !1292, line: 34, baseType: !7, size: 32, offset: 96)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !1210, file: !158, line: 3381, baseType: !1298, size: 384)
!1298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !158, line: 2507, size: 384, elements: !1299)
!1299 = !{!1300, !1301, !1306, !1307, !1308}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1298, file: !158, line: 2508, baseType: !1246, size: 192)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1298, file: !158, line: 2509, baseType: !1302, size: 32, offset: 192)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !1303, line: 58, baseType: !1304)
!1303 = !DIFile(filename: "./input.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1304 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !1305, line: 44, baseType: !7)
!1305 = !DIFile(filename: "./line-map.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1298, file: !158, line: 2510, baseType: !7, size: 32, offset: 224)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1298, file: !158, line: 2511, baseType: !1208, size: 64, offset: 256)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1298, file: !158, line: 2512, baseType: !1208, size: 64, offset: 320)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !1210, file: !158, line: 3382, baseType: !1310, size: 896)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !158, line: 2652, size: 896, elements: !1311)
!1311 = !{!1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1310, file: !158, line: 2653, baseType: !1298, size: 384)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1310, file: !158, line: 2654, baseType: !1208, size: 64, offset: 384)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1310, file: !158, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1310, file: !158, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1310, file: !158, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1310, file: !158, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1310, file: !158, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1310, file: !158, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1310, file: !158, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1310, file: !158, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1310, file: !158, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1310, file: !158, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1310, file: !158, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1310, file: !158, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1310, file: !158, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1310, file: !158, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1310, file: !158, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1310, file: !158, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1310, file: !158, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1310, file: !158, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1310, file: !158, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1310, file: !158, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1310, file: !158, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1310, file: !158, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1310, file: !158, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1310, file: !158, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1310, file: !158, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1310, file: !158, line: 2703, baseType: !7, size: 32, offset: 512)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1310, file: !158, line: 2705, baseType: !1208, size: 64, offset: 576)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1310, file: !158, line: 2706, baseType: !1208, size: 64, offset: 640)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1310, file: !158, line: 2707, baseType: !1208, size: 64, offset: 704)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1310, file: !158, line: 2708, baseType: !1208, size: 64, offset: 768)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1310, file: !158, line: 2711, baseType: !1345, size: 64, offset: 832)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64)
!1346 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !158, line: 2711, flags: DIFlagFwdDecl)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !1210, file: !158, line: 3383, baseType: !1348, size: 960)
!1348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !158, line: 2756, size: 960, elements: !1349)
!1349 = !{!1350, !1351}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1348, file: !158, line: 2757, baseType: !1310, size: 896)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1348, file: !158, line: 2758, baseType: !1091, size: 64, offset: 896)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !1210, file: !158, line: 3384, baseType: !1353, size: 1472)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !158, line: 3114, size: 1472, elements: !1354)
!1354 = !{!1355, !1376, !1377, !1378, !1379}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1353, file: !158, line: 3115, baseType: !1356, size: 1216)
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !158, line: 2984, size: 1216, elements: !1357)
!1357 = !{!1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1356, file: !158, line: 2985, baseType: !1348, size: 960)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1356, file: !158, line: 2986, baseType: !1208, size: 64, offset: 960)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1356, file: !158, line: 2987, baseType: !1208, size: 64, offset: 1024)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1356, file: !158, line: 2988, baseType: !1208, size: 64, offset: 1088)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1356, file: !158, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1356, file: !158, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1356, file: !158, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1356, file: !158, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1356, file: !158, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1356, file: !158, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1356, file: !158, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1356, file: !158, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1356, file: !158, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1356, file: !158, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1356, file: !158, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1356, file: !158, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1356, file: !158, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1356, file: !158, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1353, file: !158, line: 3117, baseType: !1208, size: 64, offset: 1216)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1353, file: !158, line: 3119, baseType: !1208, size: 64, offset: 1280)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1353, file: !158, line: 3121, baseType: !1208, size: 64, offset: 1344)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1353, file: !158, line: 3123, baseType: !1208, size: 64, offset: 1408)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !1210, file: !158, line: 3385, baseType: !1381, size: 1088)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !158, line: 2874, size: 1088, elements: !1382)
!1382 = !{!1383, !1384, !1385}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1381, file: !158, line: 2875, baseType: !1348, size: 960)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1381, file: !158, line: 2876, baseType: !1091, size: 64, offset: 960)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1381, file: !158, line: 2877, baseType: !1386, size: 64, offset: 1024)
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 64)
!1387 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !158, line: 2856, flags: DIFlagFwdDecl)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !1210, file: !158, line: 3386, baseType: !1356, size: 1216)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !1210, file: !158, line: 3387, baseType: !1390, size: 1280)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !158, line: 3093, size: 1280, elements: !1391)
!1391 = !{!1392, !1393}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1390, file: !158, line: 3094, baseType: !1356, size: 1216)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1390, file: !158, line: 3095, baseType: !1386, size: 64, offset: 1216)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !1210, file: !158, line: 3388, baseType: !1395, size: 1216)
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !158, line: 2824, size: 1216, elements: !1396)
!1396 = !{!1397, !1398, !1399, !1400, !1401, !1402}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1395, file: !158, line: 2825, baseType: !1310, size: 896)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1395, file: !158, line: 2827, baseType: !1208, size: 64, offset: 896)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1395, file: !158, line: 2828, baseType: !1208, size: 64, offset: 960)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1395, file: !158, line: 2829, baseType: !1208, size: 64, offset: 1024)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1395, file: !158, line: 2830, baseType: !1208, size: 64, offset: 1088)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1395, file: !158, line: 2831, baseType: !1208, size: 64, offset: 1152)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !1210, file: !158, line: 3389, baseType: !1404, size: 1024)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !158, line: 2850, size: 1024, elements: !1405)
!1405 = !{!1406, !1407, !1408}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1404, file: !158, line: 2851, baseType: !1348, size: 960)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1404, file: !158, line: 2852, baseType: !1053, size: 32, offset: 960)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1404, file: !158, line: 2853, baseType: !1053, size: 32, offset: 992)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !1210, file: !158, line: 3390, baseType: !1410, size: 1024)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !158, line: 2857, size: 1024, elements: !1411)
!1411 = !{!1412, !1413}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1410, file: !158, line: 2858, baseType: !1348, size: 960)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1410, file: !158, line: 2859, baseType: !1386, size: 64, offset: 960)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !1210, file: !158, line: 3391, baseType: !1415, size: 960)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !158, line: 2862, size: 960, elements: !1416)
!1416 = !{!1417}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1415, file: !158, line: 2863, baseType: !1348, size: 960)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !1210, file: !158, line: 3392, baseType: !1419, size: 1472)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !158, line: 3304, size: 1472, elements: !1420)
!1420 = !{!1421}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1419, file: !158, line: 3305, baseType: !1353, size: 1472)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !1210, file: !158, line: 3393, baseType: !1423, size: 1792)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !158, line: 3248, size: 1792, elements: !1424)
!1424 = !{!1425, !1426, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1423, file: !158, line: 3249, baseType: !1353, size: 1472)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1423, file: !158, line: 3251, baseType: !1427, size: 64, offset: 1472)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1429, line: 463, size: 1152, elements: !1430)
!1429 = !DIFile(filename: "./function.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1430 = !{!1431, !1595, !1625, !1626, !1629, !1632, !1633, !1634, !1635, !1636, !1637, !1661, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1428, file: !1429, line: 464, baseType: !1432, size: 64)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64)
!1433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !135, line: 194, size: 384, elements: !1434)
!1434 = !{!1435, !1484, !1497, !1511, !1563, !1576}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !1433, file: !135, line: 197, baseType: !1436, size: 64)
!1436 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !135, line: 182, baseType: !1437)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !135, line: 116, size: 704, elements: !1439)
!1439 = !{!1440, !1441, !1442, !1443, !1444, !1445, !1472, !1481, !1482, !1483}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !1438, file: !135, line: 119, baseType: !1437, size: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1438, file: !135, line: 122, baseType: !1437, size: 64, offset: 64)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !1438, file: !135, line: 123, baseType: !1437, size: 64, offset: 128)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1438, file: !135, line: 126, baseType: !1053, size: 32, offset: 192)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1438, file: !135, line: 129, baseType: !134, size: 32, offset: 224)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1438, file: !135, line: 165, baseType: !1446, size: 192, offset: 256)
!1446 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !135, line: 132, size: 192, elements: !1447)
!1447 = !{!1448, !1461, !1467}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !1446, file: !135, line: 137, baseType: !1449, size: 128)
!1449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !135, line: 133, size: 128, elements: !1450)
!1450 = !{!1451, !1460}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !1449, file: !135, line: 135, baseType: !1452, size: 64)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !135, line: 93, size: 320, elements: !1454)
!1454 = !{!1455, !1456, !1457, !1458, !1459}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !1453, file: !135, line: 96, baseType: !1452, size: 64)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !1453, file: !135, line: 97, baseType: !1452, size: 64, offset: 64)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1453, file: !135, line: 101, baseType: !1208, size: 64, offset: 128)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !1453, file: !135, line: 106, baseType: !1208, size: 64, offset: 192)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1453, file: !135, line: 111, baseType: !1208, size: 64, offset: 256)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !1449, file: !135, line: 136, baseType: !1452, size: 64, offset: 64)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !1446, file: !135, line: 151, baseType: !1462, size: 192)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !135, line: 139, size: 192, elements: !1463)
!1463 = !{!1464, !1465, !1466}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1462, file: !135, line: 141, baseType: !1208, size: 64)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1462, file: !135, line: 145, baseType: !1208, size: 64, offset: 64)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1462, file: !135, line: 150, baseType: !1053, size: 32, offset: 128)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !1446, file: !135, line: 164, baseType: !1468, size: 128)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !135, line: 153, size: 128, elements: !1469)
!1469 = !{!1470, !1471}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !1468, file: !135, line: 161, baseType: !1208, size: 64)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !1468, file: !135, line: 163, baseType: !1302, size: 32, offset: 64)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !1438, file: !135, line: 168, baseType: !1473, size: 64, offset: 448)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 64)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !135, line: 67, size: 320, elements: !1475)
!1475 = !{!1476, !1477, !1478, !1479, !1480}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !1474, file: !135, line: 70, baseType: !1473, size: 64)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1474, file: !135, line: 73, baseType: !1437, size: 64, offset: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !1474, file: !135, line: 78, baseType: !1208, size: 64, offset: 128)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !1474, file: !135, line: 85, baseType: !1091, size: 64, offset: 192)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1474, file: !135, line: 88, baseType: !1053, size: 32, offset: 256)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !1438, file: !135, line: 173, baseType: !1091, size: 64, offset: 512)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !1438, file: !135, line: 173, baseType: !1091, size: 64, offset: 576)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !1438, file: !135, line: 177, baseType: !1052, size: 8, offset: 640)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !1433, file: !135, line: 200, baseType: !1485, size: 64, offset: 64)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64)
!1486 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !135, line: 185, baseType: !1487)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !135, line: 185, size: 128, elements: !1488)
!1488 = !{!1489}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1487, file: !135, line: 185, baseType: !1490, size: 128)
!1490 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !135, line: 184, baseType: !1491)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !135, line: 184, size: 128, elements: !1492)
!1492 = !{!1493, !1494, !1495}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1491, file: !135, line: 184, baseType: !7, size: 32)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1491, file: !135, line: 184, baseType: !7, size: 32, offset: 32)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1491, file: !135, line: 184, baseType: !1496, size: 64, offset: 64)
!1496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1436, size: 64, elements: !1128)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !1433, file: !135, line: 203, baseType: !1498, size: 64, offset: 128)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64)
!1499 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, baseType: !1500)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, size: 128, elements: !1501)
!1501 = !{!1502}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1500, file: !135, line: 189, baseType: !1503, size: 128)
!1503 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !135, line: 188, baseType: !1504)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !135, line: 188, size: 128, elements: !1505)
!1505 = !{!1506, !1507, !1508}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1504, file: !135, line: 188, baseType: !7, size: 32)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1504, file: !135, line: 188, baseType: !7, size: 32, offset: 32)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1504, file: !135, line: 188, baseType: !1509, size: 64, offset: 64)
!1509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1510, size: 64, elements: !1128)
!1510 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !135, line: 180, baseType: !1473)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !1433, file: !135, line: 207, baseType: !1512, size: 64, offset: 192)
!1512 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1513, line: 144, baseType: !1514)
!1513 = !DIFile(filename: "./include/hashtab.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1513, line: 100, size: 896, elements: !1516)
!1516 = !{!1517, !1525, !1530, !1535, !1537, !1540, !1541, !1542, !1543, !1544, !1549, !1551, !1552, !1557, !1562}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1515, file: !1513, line: 102, baseType: !1518, size: 64)
!1518 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1513, line: 52, baseType: !1519)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 64)
!1520 = !DISubroutineType(types: !1521)
!1521 = !{!1522, !1523}
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1513, line: 47, baseType: !7)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 64)
!1524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1515, file: !1513, line: 105, baseType: !1526, size: 64, offset: 64)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1513, line: 59, baseType: !1527)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{!1053, !1523, !1523}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1515, file: !1513, line: 108, baseType: !1531, size: 64, offset: 128)
!1531 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1513, line: 63, baseType: !1532)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 64)
!1533 = !DISubroutineType(types: !1534)
!1534 = !{null, !1019}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1515, file: !1513, line: 111, baseType: !1536, size: 64, offset: 192)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1515, file: !1513, line: 114, baseType: !1538, size: 64, offset: 256)
!1538 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1539, line: 46, baseType: !1033)
!1539 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1515, file: !1513, line: 117, baseType: !1538, size: 64, offset: 320)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1515, file: !1513, line: 120, baseType: !1538, size: 64, offset: 384)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1515, file: !1513, line: 124, baseType: !7, size: 32, offset: 448)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1515, file: !1513, line: 128, baseType: !7, size: 32, offset: 480)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1515, file: !1513, line: 131, baseType: !1545, size: 64, offset: 512)
!1545 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1513, line: 75, baseType: !1546)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64)
!1547 = !DISubroutineType(types: !1548)
!1548 = !{!1019, !1538, !1538}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1515, file: !1513, line: 132, baseType: !1550, size: 64, offset: 576)
!1550 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1513, line: 78, baseType: !1532)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1515, file: !1513, line: 135, baseType: !1019, size: 64, offset: 640)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1515, file: !1513, line: 136, baseType: !1553, size: 64, offset: 704)
!1553 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1513, line: 82, baseType: !1554)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 64)
!1555 = !DISubroutineType(types: !1556)
!1556 = !{!1019, !1019, !1538, !1538}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1515, file: !1513, line: 137, baseType: !1558, size: 64, offset: 768)
!1558 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1513, line: 83, baseType: !1559)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64)
!1560 = !DISubroutineType(types: !1561)
!1561 = !{null, !1019, !1019}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1515, file: !1513, line: 141, baseType: !7, size: 32, offset: 832)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !1433, file: !135, line: 211, baseType: !1564, size: 64, offset: 256)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64)
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !158, line: 183, baseType: !1566)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !158, line: 183, size: 128, elements: !1567)
!1567 = !{!1568}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1566, file: !158, line: 183, baseType: !1569, size: 128)
!1569 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !158, line: 182, baseType: !1570)
!1570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !158, line: 182, size: 128, elements: !1571)
!1571 = !{!1572, !1573, !1574}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1570, file: !158, line: 182, baseType: !7, size: 32)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1570, file: !158, line: 182, baseType: !7, size: 32, offset: 32)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1570, file: !158, line: 182, baseType: !1575, size: 64, offset: 64)
!1575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1208, size: 64, elements: !1128)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !1433, file: !135, line: 220, baseType: !1577, size: 64, offset: 320)
!1577 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !135, line: 217, size: 64, elements: !1578)
!1578 = !{!1579, !1580}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !1577, file: !135, line: 218, baseType: !1564, size: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1577, file: !135, line: 219, baseType: !1581, size: 64)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !1583, line: 29, baseType: !1584)
!1583 = !DIFile(filename: "./vecprim.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !1583, line: 29, size: 96, elements: !1585)
!1585 = !{!1586}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1584, file: !1583, line: 29, baseType: !1587, size: 96)
!1587 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !1583, line: 27, baseType: !1588)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !1583, line: 27, size: 96, elements: !1589)
!1589 = !{!1590, !1591, !1592}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1588, file: !1583, line: 27, baseType: !7, size: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1588, file: !1583, line: 27, baseType: !7, size: 32, offset: 32)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1588, file: !1583, line: 27, baseType: !1593, size: 8, offset: 64)
!1593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1594, size: 8, elements: !1128)
!1594 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !1583, line: 26, baseType: !1052)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1428, file: !1429, line: 467, baseType: !1596, size: 64, offset: 64)
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 64)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !142, line: 374, size: 640, elements: !1598)
!1598 = !{!1599, !1600, !1601, !1614, !1615, !1616, !1617, !1618, !1619, !1621, !1623, !1624}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1597, file: !142, line: 377, baseType: !1059, size: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1597, file: !142, line: 378, baseType: !1059, size: 64, offset: 64)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1597, file: !142, line: 381, baseType: !1602, size: 64, offset: 128)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 64)
!1603 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !142, line: 282, baseType: !1604)
!1604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !142, line: 282, size: 128, elements: !1605)
!1605 = !{!1606}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1604, file: !142, line: 282, baseType: !1607, size: 128)
!1607 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !142, line: 281, baseType: !1608)
!1608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !142, line: 281, size: 128, elements: !1609)
!1609 = !{!1610, !1611, !1612}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1608, file: !142, line: 281, baseType: !7, size: 32)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1608, file: !142, line: 281, baseType: !7, size: 32, offset: 32)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1608, file: !142, line: 281, baseType: !1613, size: 64, offset: 64)
!1613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1059, size: 64, elements: !1128)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1597, file: !142, line: 384, baseType: !1053, size: 32, offset: 192)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1597, file: !142, line: 387, baseType: !1053, size: 32, offset: 224)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1597, file: !142, line: 390, baseType: !1053, size: 32, offset: 256)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1597, file: !142, line: 394, baseType: !1602, size: 64, offset: 320)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1597, file: !142, line: 396, baseType: !141, size: 32, offset: 384)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1597, file: !142, line: 399, baseType: !1620, size: 64, offset: 416)
!1620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 64, elements: !1163)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1597, file: !142, line: 402, baseType: !1622, size: 64, offset: 480)
!1622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !1163)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1597, file: !142, line: 406, baseType: !1053, size: 32, offset: 544)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1597, file: !142, line: 409, baseType: !1053, size: 32, offset: 576)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1428, file: !1429, line: 470, baseType: !1088, size: 64, offset: 128)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1428, file: !1429, line: 473, baseType: !1627, size: 64, offset: 192)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64)
!1628 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1429, line: 166, flags: DIFlagFwdDecl)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1428, file: !1429, line: 476, baseType: !1630, size: 64, offset: 256)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64)
!1631 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1429, line: 476, flags: DIFlagFwdDecl)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1428, file: !1429, line: 479, baseType: !1512, size: 64, offset: 320)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1428, file: !1429, line: 484, baseType: !1208, size: 64, offset: 384)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1428, file: !1429, line: 488, baseType: !1208, size: 64, offset: 448)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1428, file: !1429, line: 493, baseType: !1208, size: 64, offset: 512)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1428, file: !1429, line: 496, baseType: !1208, size: 64, offset: 576)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1428, file: !1429, line: 501, baseType: !1638, size: 64, offset: 640)
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 64)
!1639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !153, line: 2355, size: 576, elements: !1640)
!1640 = !{!1641, !1644, !1645, !1646, !1647, !1649, !1650, !1655, !1656, !1657, !1658, !1659, !1660}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1639, file: !153, line: 2356, baseType: !1642, size: 64)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1643 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !153, line: 2356, flags: DIFlagFwdDecl)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1639, file: !153, line: 2357, baseType: !1116, size: 64, offset: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1639, file: !153, line: 2358, baseType: !1053, size: 32, offset: 128)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1639, file: !153, line: 2359, baseType: !1053, size: 32, offset: 160)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1639, file: !153, line: 2360, baseType: !1648, size: 128, offset: 192)
!1648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, size: 128, elements: !1188)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1639, file: !153, line: 2364, baseType: !1053, size: 32, offset: 320)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1639, file: !153, line: 2367, baseType: !1651, size: 128, offset: 384)
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !153, line: 2349, size: 128, elements: !1652)
!1652 = !{!1653, !1654}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1651, file: !153, line: 2351, baseType: !1091, size: 64)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1651, file: !153, line: 2352, baseType: !1048, size: 64, offset: 64)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1639, file: !153, line: 2371, baseType: !152, size: 32, offset: 512)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1639, file: !153, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1639, file: !153, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1639, file: !153, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1639, file: !153, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1639, file: !153, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1428, file: !1429, line: 504, baseType: !1662, size: 64, offset: 704)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64)
!1663 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1429, line: 504, flags: DIFlagFwdDecl)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1428, file: !1429, line: 507, baseType: !1512, size: 64, offset: 768)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1428, file: !1429, line: 510, baseType: !1053, size: 32, offset: 832)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1428, file: !1429, line: 513, baseType: !1053, size: 32, offset: 864)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1428, file: !1429, line: 516, baseType: !1302, size: 32, offset: 896)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1428, file: !1429, line: 519, baseType: !1302, size: 32, offset: 928)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1428, file: !1429, line: 522, baseType: !7, size: 32, offset: 960)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1428, file: !1429, line: 523, baseType: !7, size: 32, offset: 992)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1428, file: !1429, line: 528, baseType: !1116, size: 64, offset: 1024)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1428, file: !1429, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1428, file: !1429, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1428, file: !1429, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1428, file: !1429, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1428, file: !1429, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1428, file: !1429, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1428, file: !1429, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1428, file: !1429, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1428, file: !1429, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1428, file: !1429, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1428, file: !1429, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1428, file: !1429, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1428, file: !1429, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1428, file: !1429, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1428, file: !1429, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1428, file: !1429, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1423, file: !158, line: 3254, baseType: !1208, size: 64, offset: 1536)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1423, file: !158, line: 3257, baseType: !1208, size: 64, offset: 1600)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1423, file: !158, line: 3258, baseType: !1208, size: 64, offset: 1664)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1423, file: !158, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1423, file: !158, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1423, file: !158, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1423, file: !158, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1423, file: !158, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1423, file: !158, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1423, file: !158, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1423, file: !158, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1423, file: !158, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1423, file: !158, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1423, file: !158, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1423, file: !158, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1423, file: !158, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1423, file: !158, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1423, file: !158, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1423, file: !158, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1423, file: !158, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1423, file: !158, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1210, file: !158, line: 3394, baseType: !1710, size: 1344)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !158, line: 2279, size: 1344, elements: !1711)
!1711 = !{!1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1737, !1738, !1739, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1710, file: !158, line: 2280, baseType: !1246, size: 192)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1710, file: !158, line: 2281, baseType: !1208, size: 64, offset: 192)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1710, file: !158, line: 2282, baseType: !1208, size: 64, offset: 256)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1710, file: !158, line: 2283, baseType: !1208, size: 64, offset: 320)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1710, file: !158, line: 2284, baseType: !1208, size: 64, offset: 384)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1710, file: !158, line: 2285, baseType: !7, size: 32, offset: 448)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1710, file: !158, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1710, file: !158, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1710, file: !158, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1710, file: !158, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1710, file: !158, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1710, file: !158, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1710, file: !158, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1710, file: !158, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1710, file: !158, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1710, file: !158, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1710, file: !158, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1710, file: !158, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1710, file: !158, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1710, file: !158, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1710, file: !158, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1710, file: !158, line: 2305, baseType: !7, size: 32, offset: 512)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1710, file: !158, line: 2306, baseType: !1735, size: 32, offset: 544)
!1735 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1736, line: 31, baseType: !1053)
!1736 = !DIFile(filename: "./alias.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1710, file: !158, line: 2307, baseType: !1208, size: 64, offset: 576)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1710, file: !158, line: 2308, baseType: !1208, size: 64, offset: 640)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1710, file: !158, line: 2314, baseType: !1740, size: 64, offset: 704)
!1740 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !158, line: 2309, size: 64, elements: !1741)
!1741 = !{!1742, !1743, !1744}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1740, file: !158, line: 2310, baseType: !1053, size: 32)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1740, file: !158, line: 2311, baseType: !1116, size: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1740, file: !158, line: 2312, baseType: !1745, size: 64)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 64)
!1746 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !158, line: 2277, flags: DIFlagFwdDecl)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1710, file: !158, line: 2315, baseType: !1208, size: 64, offset: 768)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1710, file: !158, line: 2316, baseType: !1208, size: 64, offset: 832)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1710, file: !158, line: 2317, baseType: !1208, size: 64, offset: 896)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1710, file: !158, line: 2318, baseType: !1208, size: 64, offset: 960)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1710, file: !158, line: 2319, baseType: !1208, size: 64, offset: 1024)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1710, file: !158, line: 2320, baseType: !1208, size: 64, offset: 1088)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1710, file: !158, line: 2321, baseType: !1208, size: 64, offset: 1152)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1710, file: !158, line: 2322, baseType: !1208, size: 64, offset: 1216)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1710, file: !158, line: 2324, baseType: !1756, size: 64, offset: 1280)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 64)
!1757 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !158, line: 2324, flags: DIFlagFwdDecl)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1210, file: !158, line: 3395, baseType: !1759, size: 320)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !158, line: 1469, size: 320, elements: !1760)
!1760 = !{!1761, !1762, !1763}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1759, file: !158, line: 1470, baseType: !1246, size: 192)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1759, file: !158, line: 1471, baseType: !1208, size: 64, offset: 192)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1759, file: !158, line: 1472, baseType: !1208, size: 64, offset: 256)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1210, file: !158, line: 3396, baseType: !1765, size: 320)
!1765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !158, line: 1482, size: 320, elements: !1766)
!1766 = !{!1767, !1768, !1769}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1765, file: !158, line: 1483, baseType: !1246, size: 192)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1765, file: !158, line: 1484, baseType: !1053, size: 32, offset: 192)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1765, file: !158, line: 1485, baseType: !1575, size: 64, offset: 256)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !1210, file: !158, line: 3397, baseType: !1771, size: 384)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !158, line: 1829, size: 384, elements: !1772)
!1772 = !{!1773, !1774, !1775, !1776}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1771, file: !158, line: 1830, baseType: !1246, size: 192)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1771, file: !158, line: 1831, baseType: !1302, size: 32, offset: 192)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1771, file: !158, line: 1832, baseType: !1208, size: 64, offset: 256)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1771, file: !158, line: 1835, baseType: !1575, size: 64, offset: 320)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1210, file: !158, line: 3398, baseType: !1778, size: 704)
!1778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !158, line: 1898, size: 704, elements: !1779)
!1779 = !{!1780, !1781, !1782, !1786, !1787, !1790}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1778, file: !158, line: 1899, baseType: !1246, size: 192)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1778, file: !158, line: 1902, baseType: !1208, size: 64, offset: 192)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1778, file: !158, line: 1905, baseType: !1783, size: 64, offset: 256)
!1783 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !1060, line: 58, baseType: !1784)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64)
!1785 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !1060, line: 57, flags: DIFlagFwdDecl)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1778, file: !158, line: 1908, baseType: !7, size: 32, offset: 320)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1778, file: !158, line: 1911, baseType: !1788, size: 64, offset: 384)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 64)
!1789 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !158, line: 1876, flags: DIFlagFwdDecl)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1778, file: !158, line: 1914, baseType: !1791, size: 256, offset: 448)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !158, line: 1883, size: 256, elements: !1792)
!1792 = !{!1793, !1795, !1796, !1801}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1791, file: !158, line: 1884, baseType: !1794, size: 64)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 64)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1791, file: !158, line: 1885, baseType: !1794, size: 64, offset: 64)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1791, file: !158, line: 1891, baseType: !1797, size: 64, offset: 128)
!1797 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1791, file: !158, line: 1891, size: 64, elements: !1798)
!1798 = !{!1799, !1800}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1797, file: !158, line: 1891, baseType: !1783, size: 64)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1797, file: !158, line: 1891, baseType: !1208, size: 64)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1791, file: !158, line: 1892, baseType: !1802, size: 64, offset: 192)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1210, file: !158, line: 3399, baseType: !1804, size: 704)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !158, line: 2008, size: 704, elements: !1805)
!1805 = !{!1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1804, file: !158, line: 2009, baseType: !1246, size: 192)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1804, file: !158, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1804, file: !158, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1804, file: !158, line: 2014, baseType: !1302, size: 32, offset: 224)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1804, file: !158, line: 2016, baseType: !1208, size: 64, offset: 256)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1804, file: !158, line: 2017, baseType: !1564, size: 64, offset: 320)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1804, file: !158, line: 2019, baseType: !1208, size: 64, offset: 384)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1804, file: !158, line: 2020, baseType: !1208, size: 64, offset: 448)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1804, file: !158, line: 2021, baseType: !1208, size: 64, offset: 512)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1804, file: !158, line: 2022, baseType: !1208, size: 64, offset: 576)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1804, file: !158, line: 2023, baseType: !1208, size: 64, offset: 640)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1210, file: !158, line: 3400, baseType: !1818, size: 832)
!1818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !158, line: 2430, size: 832, elements: !1819)
!1819 = !{!1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1818, file: !158, line: 2431, baseType: !1246, size: 192)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1818, file: !158, line: 2433, baseType: !1208, size: 64, offset: 192)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1818, file: !158, line: 2434, baseType: !1208, size: 64, offset: 256)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1818, file: !158, line: 2435, baseType: !1208, size: 64, offset: 320)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1818, file: !158, line: 2436, baseType: !1208, size: 64, offset: 384)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1818, file: !158, line: 2437, baseType: !1564, size: 64, offset: 448)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1818, file: !158, line: 2438, baseType: !1208, size: 64, offset: 512)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1818, file: !158, line: 2440, baseType: !1208, size: 64, offset: 576)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1818, file: !158, line: 2441, baseType: !1208, size: 64, offset: 640)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1818, file: !158, line: 2443, baseType: !1830, size: 128, offset: 704)
!1830 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !158, line: 182, baseType: !1831)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !158, line: 182, size: 128, elements: !1832)
!1832 = !{!1833}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1831, file: !158, line: 182, baseType: !1569, size: 128)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !1210, file: !158, line: 3401, baseType: !1835, size: 320)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !158, line: 3327, size: 320, elements: !1836)
!1836 = !{!1837, !1838, !1845}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1835, file: !158, line: 3329, baseType: !1246, size: 192)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1835, file: !158, line: 3330, baseType: !1839, size: 64, offset: 192)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 64)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !158, line: 3320, size: 192, elements: !1841)
!1841 = !{!1842, !1843, !1844}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1840, file: !158, line: 3322, baseType: !1839, size: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1840, file: !158, line: 3323, baseType: !1839, size: 64, offset: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1840, file: !158, line: 3324, baseType: !1208, size: 64, offset: 128)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1835, file: !158, line: 3331, baseType: !1839, size: 64, offset: 256)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !1210, file: !158, line: 3402, baseType: !1847, size: 256)
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !158, line: 1540, size: 256, elements: !1848)
!1848 = !{!1849, !1850}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1847, file: !158, line: 1541, baseType: !1246, size: 192)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1847, file: !158, line: 1542, baseType: !1851, size: 64, offset: 192)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!1852 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !158, line: 1538, baseType: !1853)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !158, line: 1538, size: 192, elements: !1854)
!1854 = !{!1855}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1853, file: !158, line: 1538, baseType: !1856, size: 192)
!1856 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !158, line: 1537, baseType: !1857)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !158, line: 1537, size: 192, elements: !1858)
!1858 = !{!1859, !1860, !1861}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1857, file: !158, line: 1537, baseType: !7, size: 32)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1857, file: !158, line: 1537, baseType: !7, size: 32, offset: 32)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1857, file: !158, line: 1537, baseType: !1862, size: 128, offset: 64)
!1862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1863, size: 128, elements: !1128)
!1863 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !158, line: 1535, baseType: !1864)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !158, line: 1532, size: 128, elements: !1865)
!1865 = !{!1866, !1867}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1864, file: !158, line: 1533, baseType: !1208, size: 64)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1864, file: !158, line: 1534, baseType: !1208, size: 64, offset: 64)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !1210, file: !158, line: 3403, baseType: !1869, size: 512)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !158, line: 1938, size: 512, elements: !1870)
!1870 = !{!1871, !1872, !1873, !1874, !1880, !1881, !1882}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1869, file: !158, line: 1939, baseType: !1246, size: 192)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1869, file: !158, line: 1940, baseType: !1302, size: 32, offset: 192)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1869, file: !158, line: 1941, baseType: !157, size: 32, offset: 224)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1869, file: !158, line: 1946, baseType: !1875, size: 32, offset: 256)
!1875 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !158, line: 1942, size: 32, elements: !1876)
!1876 = !{!1877, !1878, !1879}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1875, file: !158, line: 1943, baseType: !176, size: 32)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1875, file: !158, line: 1944, baseType: !183, size: 32)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1875, file: !158, line: 1945, baseType: !190, size: 32)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1869, file: !158, line: 1950, baseType: !1087, size: 64, offset: 320)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1869, file: !158, line: 1951, baseType: !1087, size: 64, offset: 384)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1869, file: !158, line: 1953, baseType: !1575, size: 64, offset: 448)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !1210, file: !158, line: 3404, baseType: !1884, size: 1664)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !158, line: 3337, size: 1664, elements: !1885)
!1885 = !{!1886, !1887}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1884, file: !158, line: 3338, baseType: !1246, size: 192)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1884, file: !158, line: 3341, baseType: !1888, size: 1472, offset: 192)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1889, line: 410, size: 1472, elements: !1890)
!1889 = !DIFile(filename: "./options.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1890 = !{!1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1888, file: !1889, line: 412, baseType: !1053, size: 32)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1888, file: !1889, line: 413, baseType: !1053, size: 32, offset: 32)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1888, file: !1889, line: 414, baseType: !1053, size: 32, offset: 64)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1888, file: !1889, line: 415, baseType: !1053, size: 32, offset: 96)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1888, file: !1889, line: 416, baseType: !1053, size: 32, offset: 128)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1888, file: !1889, line: 417, baseType: !1053, size: 32, offset: 160)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1888, file: !1889, line: 418, baseType: !1052, size: 8, offset: 192)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1888, file: !1889, line: 419, baseType: !1052, size: 8, offset: 200)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1888, file: !1889, line: 420, baseType: !1900, size: 8, offset: 208)
!1900 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1888, file: !1889, line: 421, baseType: !1900, size: 8, offset: 216)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1888, file: !1889, line: 422, baseType: !1900, size: 8, offset: 224)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1888, file: !1889, line: 423, baseType: !1900, size: 8, offset: 232)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1888, file: !1889, line: 424, baseType: !1900, size: 8, offset: 240)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1888, file: !1889, line: 425, baseType: !1900, size: 8, offset: 248)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1888, file: !1889, line: 426, baseType: !1900, size: 8, offset: 256)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1888, file: !1889, line: 427, baseType: !1900, size: 8, offset: 264)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1888, file: !1889, line: 428, baseType: !1900, size: 8, offset: 272)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1888, file: !1889, line: 429, baseType: !1900, size: 8, offset: 280)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1888, file: !1889, line: 430, baseType: !1900, size: 8, offset: 288)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1888, file: !1889, line: 431, baseType: !1900, size: 8, offset: 296)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1888, file: !1889, line: 432, baseType: !1900, size: 8, offset: 304)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1888, file: !1889, line: 433, baseType: !1900, size: 8, offset: 312)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1888, file: !1889, line: 434, baseType: !1900, size: 8, offset: 320)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1888, file: !1889, line: 435, baseType: !1900, size: 8, offset: 328)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1888, file: !1889, line: 436, baseType: !1900, size: 8, offset: 336)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1888, file: !1889, line: 437, baseType: !1900, size: 8, offset: 344)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1888, file: !1889, line: 438, baseType: !1900, size: 8, offset: 352)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1888, file: !1889, line: 439, baseType: !1900, size: 8, offset: 360)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1888, file: !1889, line: 440, baseType: !1900, size: 8, offset: 368)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1888, file: !1889, line: 441, baseType: !1900, size: 8, offset: 376)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1888, file: !1889, line: 442, baseType: !1900, size: 8, offset: 384)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1888, file: !1889, line: 443, baseType: !1900, size: 8, offset: 392)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1888, file: !1889, line: 444, baseType: !1900, size: 8, offset: 400)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1888, file: !1889, line: 445, baseType: !1900, size: 8, offset: 408)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1888, file: !1889, line: 446, baseType: !1900, size: 8, offset: 416)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1888, file: !1889, line: 447, baseType: !1900, size: 8, offset: 424)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1888, file: !1889, line: 448, baseType: !1900, size: 8, offset: 432)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1888, file: !1889, line: 449, baseType: !1900, size: 8, offset: 440)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1888, file: !1889, line: 450, baseType: !1900, size: 8, offset: 448)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1888, file: !1889, line: 451, baseType: !1900, size: 8, offset: 456)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1888, file: !1889, line: 452, baseType: !1900, size: 8, offset: 464)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1888, file: !1889, line: 453, baseType: !1900, size: 8, offset: 472)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1888, file: !1889, line: 454, baseType: !1900, size: 8, offset: 480)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1888, file: !1889, line: 455, baseType: !1900, size: 8, offset: 488)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1888, file: !1889, line: 456, baseType: !1900, size: 8, offset: 496)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1888, file: !1889, line: 457, baseType: !1900, size: 8, offset: 504)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1888, file: !1889, line: 458, baseType: !1900, size: 8, offset: 512)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1888, file: !1889, line: 459, baseType: !1900, size: 8, offset: 520)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1888, file: !1889, line: 460, baseType: !1900, size: 8, offset: 528)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1888, file: !1889, line: 461, baseType: !1900, size: 8, offset: 536)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1888, file: !1889, line: 462, baseType: !1900, size: 8, offset: 544)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1888, file: !1889, line: 463, baseType: !1900, size: 8, offset: 552)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1888, file: !1889, line: 464, baseType: !1900, size: 8, offset: 560)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1888, file: !1889, line: 465, baseType: !1900, size: 8, offset: 568)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1888, file: !1889, line: 466, baseType: !1900, size: 8, offset: 576)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1888, file: !1889, line: 467, baseType: !1900, size: 8, offset: 584)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1888, file: !1889, line: 468, baseType: !1900, size: 8, offset: 592)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1888, file: !1889, line: 469, baseType: !1900, size: 8, offset: 600)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1888, file: !1889, line: 470, baseType: !1900, size: 8, offset: 608)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1888, file: !1889, line: 471, baseType: !1900, size: 8, offset: 616)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1888, file: !1889, line: 472, baseType: !1900, size: 8, offset: 624)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1888, file: !1889, line: 473, baseType: !1900, size: 8, offset: 632)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1888, file: !1889, line: 474, baseType: !1900, size: 8, offset: 640)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1888, file: !1889, line: 475, baseType: !1900, size: 8, offset: 648)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1888, file: !1889, line: 476, baseType: !1900, size: 8, offset: 656)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1888, file: !1889, line: 477, baseType: !1900, size: 8, offset: 664)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1888, file: !1889, line: 478, baseType: !1900, size: 8, offset: 672)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1888, file: !1889, line: 479, baseType: !1900, size: 8, offset: 680)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1888, file: !1889, line: 480, baseType: !1900, size: 8, offset: 688)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1888, file: !1889, line: 481, baseType: !1900, size: 8, offset: 696)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1888, file: !1889, line: 482, baseType: !1900, size: 8, offset: 704)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1888, file: !1889, line: 483, baseType: !1900, size: 8, offset: 712)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1888, file: !1889, line: 484, baseType: !1900, size: 8, offset: 720)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1888, file: !1889, line: 485, baseType: !1900, size: 8, offset: 728)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1888, file: !1889, line: 486, baseType: !1900, size: 8, offset: 736)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1888, file: !1889, line: 487, baseType: !1900, size: 8, offset: 744)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1888, file: !1889, line: 488, baseType: !1900, size: 8, offset: 752)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1888, file: !1889, line: 489, baseType: !1900, size: 8, offset: 760)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1888, file: !1889, line: 490, baseType: !1900, size: 8, offset: 768)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1888, file: !1889, line: 491, baseType: !1900, size: 8, offset: 776)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1888, file: !1889, line: 492, baseType: !1900, size: 8, offset: 784)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1888, file: !1889, line: 493, baseType: !1900, size: 8, offset: 792)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1888, file: !1889, line: 494, baseType: !1900, size: 8, offset: 800)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1888, file: !1889, line: 495, baseType: !1900, size: 8, offset: 808)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1888, file: !1889, line: 496, baseType: !1900, size: 8, offset: 816)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1888, file: !1889, line: 497, baseType: !1900, size: 8, offset: 824)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1888, file: !1889, line: 498, baseType: !1900, size: 8, offset: 832)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1888, file: !1889, line: 499, baseType: !1900, size: 8, offset: 840)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1888, file: !1889, line: 500, baseType: !1900, size: 8, offset: 848)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1888, file: !1889, line: 501, baseType: !1900, size: 8, offset: 856)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1888, file: !1889, line: 502, baseType: !1900, size: 8, offset: 864)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1888, file: !1889, line: 503, baseType: !1900, size: 8, offset: 872)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1888, file: !1889, line: 504, baseType: !1900, size: 8, offset: 880)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1888, file: !1889, line: 505, baseType: !1900, size: 8, offset: 888)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1888, file: !1889, line: 506, baseType: !1900, size: 8, offset: 896)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1888, file: !1889, line: 507, baseType: !1900, size: 8, offset: 904)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1888, file: !1889, line: 508, baseType: !1900, size: 8, offset: 912)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1888, file: !1889, line: 509, baseType: !1900, size: 8, offset: 920)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1888, file: !1889, line: 510, baseType: !1900, size: 8, offset: 928)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1888, file: !1889, line: 511, baseType: !1900, size: 8, offset: 936)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1888, file: !1889, line: 512, baseType: !1900, size: 8, offset: 944)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1888, file: !1889, line: 513, baseType: !1900, size: 8, offset: 952)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1888, file: !1889, line: 514, baseType: !1900, size: 8, offset: 960)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1888, file: !1889, line: 515, baseType: !1900, size: 8, offset: 968)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1888, file: !1889, line: 516, baseType: !1900, size: 8, offset: 976)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1888, file: !1889, line: 517, baseType: !1900, size: 8, offset: 984)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1888, file: !1889, line: 518, baseType: !1900, size: 8, offset: 992)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1888, file: !1889, line: 519, baseType: !1900, size: 8, offset: 1000)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1888, file: !1889, line: 520, baseType: !1900, size: 8, offset: 1008)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1888, file: !1889, line: 521, baseType: !1900, size: 8, offset: 1016)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1888, file: !1889, line: 522, baseType: !1900, size: 8, offset: 1024)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1888, file: !1889, line: 523, baseType: !1900, size: 8, offset: 1032)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1888, file: !1889, line: 524, baseType: !1900, size: 8, offset: 1040)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1888, file: !1889, line: 525, baseType: !1900, size: 8, offset: 1048)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1888, file: !1889, line: 526, baseType: !1900, size: 8, offset: 1056)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1888, file: !1889, line: 527, baseType: !1900, size: 8, offset: 1064)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1888, file: !1889, line: 528, baseType: !1900, size: 8, offset: 1072)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1888, file: !1889, line: 529, baseType: !1900, size: 8, offset: 1080)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1888, file: !1889, line: 530, baseType: !1900, size: 8, offset: 1088)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1888, file: !1889, line: 531, baseType: !1900, size: 8, offset: 1096)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1888, file: !1889, line: 532, baseType: !1900, size: 8, offset: 1104)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1888, file: !1889, line: 533, baseType: !1900, size: 8, offset: 1112)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1888, file: !1889, line: 534, baseType: !1900, size: 8, offset: 1120)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1888, file: !1889, line: 535, baseType: !1900, size: 8, offset: 1128)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1888, file: !1889, line: 536, baseType: !1900, size: 8, offset: 1136)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1888, file: !1889, line: 537, baseType: !1900, size: 8, offset: 1144)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1888, file: !1889, line: 538, baseType: !1900, size: 8, offset: 1152)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1888, file: !1889, line: 539, baseType: !1900, size: 8, offset: 1160)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1888, file: !1889, line: 540, baseType: !1900, size: 8, offset: 1168)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1888, file: !1889, line: 541, baseType: !1900, size: 8, offset: 1176)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1888, file: !1889, line: 542, baseType: !1900, size: 8, offset: 1184)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1888, file: !1889, line: 543, baseType: !1900, size: 8, offset: 1192)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1888, file: !1889, line: 544, baseType: !1900, size: 8, offset: 1200)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1888, file: !1889, line: 545, baseType: !1900, size: 8, offset: 1208)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1888, file: !1889, line: 546, baseType: !1900, size: 8, offset: 1216)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1888, file: !1889, line: 547, baseType: !1900, size: 8, offset: 1224)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1888, file: !1889, line: 548, baseType: !1900, size: 8, offset: 1232)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1888, file: !1889, line: 549, baseType: !1900, size: 8, offset: 1240)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1888, file: !1889, line: 550, baseType: !1900, size: 8, offset: 1248)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1888, file: !1889, line: 551, baseType: !1900, size: 8, offset: 1256)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1888, file: !1889, line: 552, baseType: !1900, size: 8, offset: 1264)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1888, file: !1889, line: 553, baseType: !1900, size: 8, offset: 1272)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1888, file: !1889, line: 554, baseType: !1900, size: 8, offset: 1280)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1888, file: !1889, line: 555, baseType: !1900, size: 8, offset: 1288)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1888, file: !1889, line: 556, baseType: !1900, size: 8, offset: 1296)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1888, file: !1889, line: 557, baseType: !1900, size: 8, offset: 1304)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1888, file: !1889, line: 558, baseType: !1900, size: 8, offset: 1312)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1888, file: !1889, line: 559, baseType: !1900, size: 8, offset: 1320)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1888, file: !1889, line: 560, baseType: !1900, size: 8, offset: 1328)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1888, file: !1889, line: 561, baseType: !1900, size: 8, offset: 1336)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1888, file: !1889, line: 562, baseType: !1900, size: 8, offset: 1344)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1888, file: !1889, line: 563, baseType: !1900, size: 8, offset: 1352)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1888, file: !1889, line: 564, baseType: !1900, size: 8, offset: 1360)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1888, file: !1889, line: 565, baseType: !1900, size: 8, offset: 1368)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1888, file: !1889, line: 566, baseType: !1900, size: 8, offset: 1376)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1888, file: !1889, line: 567, baseType: !1900, size: 8, offset: 1384)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1888, file: !1889, line: 568, baseType: !1900, size: 8, offset: 1392)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1888, file: !1889, line: 569, baseType: !1900, size: 8, offset: 1400)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1888, file: !1889, line: 570, baseType: !1900, size: 8, offset: 1408)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1888, file: !1889, line: 571, baseType: !1900, size: 8, offset: 1416)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1888, file: !1889, line: 572, baseType: !1900, size: 8, offset: 1424)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1888, file: !1889, line: 573, baseType: !1900, size: 8, offset: 1432)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1888, file: !1889, line: 574, baseType: !1900, size: 8, offset: 1440)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !1210, file: !158, line: 3405, baseType: !2056, size: 384)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !158, line: 3352, size: 384, elements: !2057)
!2057 = !{!2058, !2059}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2056, file: !158, line: 3353, baseType: !1246, size: 192)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2056, file: !158, line: 3356, baseType: !2060, size: 192, offset: 192)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1889, line: 578, size: 192, elements: !2061)
!2061 = !{!2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !2060, file: !1889, line: 580, baseType: !1053, size: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !2060, file: !1889, line: 581, baseType: !1053, size: 32, offset: 32)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !2060, file: !1889, line: 582, baseType: !1053, size: 32, offset: 64)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !2060, file: !1889, line: 583, baseType: !1053, size: 32, offset: 96)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2060, file: !1889, line: 584, baseType: !1052, size: 8, offset: 128)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !2060, file: !1889, line: 585, baseType: !1052, size: 8, offset: 136)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !2060, file: !1889, line: 586, baseType: !1052, size: 8, offset: 144)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !2060, file: !1889, line: 587, baseType: !1052, size: 8, offset: 152)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !2060, file: !1889, line: 588, baseType: !1052, size: 8, offset: 160)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !2060, file: !1889, line: 589, baseType: !1052, size: 8, offset: 168)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !2060, file: !1889, line: 590, baseType: !1052, size: 8, offset: 176)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !1111, file: !385, line: 178, baseType: !1061, size: 64)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !1111, file: !385, line: 179, baseType: !2075, size: 64)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 64)
!2076 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !385, line: 150, baseType: !2077)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !385, line: 142, size: 320, elements: !2078)
!2078 = !{!2079, !2080, !2081, !2082, !2083, !2084}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !2077, file: !385, line: 144, baseType: !1208, size: 64)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2077, file: !385, line: 145, baseType: !1091, size: 64, offset: 64)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2077, file: !385, line: 146, baseType: !1091, size: 64, offset: 128)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !2077, file: !385, line: 147, baseType: !1735, size: 32, offset: 192)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2077, file: !385, line: 148, baseType: !7, size: 32, offset: 224)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !2077, file: !385, line: 149, baseType: !1052, size: 8, offset: 256)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !1111, file: !385, line: 180, baseType: !2086, size: 64)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 64)
!2087 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !385, line: 162, baseType: !2088)
!2088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !385, line: 159, size: 128, elements: !2089)
!2089 = !{!2090, !2091}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2088, file: !385, line: 160, baseType: !1208, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2088, file: !385, line: 161, baseType: !1048, size: 64, offset: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !1111, file: !385, line: 181, baseType: !2093, size: 64)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64)
!2094 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !385, line: 181, flags: DIFlagFwdDecl)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !1106, file: !385, line: 317, baseType: !2096, size: 64)
!2096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1048, size: 64, elements: !1128)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !1106, file: !385, line: 318, baseType: !2098, size: 320)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !385, line: 188, size: 320, elements: !2099)
!2099 = !{!2100, !2102, !2157}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !2098, file: !385, line: 190, baseType: !2101, size: 192)
!2101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1110, size: 192, elements: !1034)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2098, file: !385, line: 193, baseType: !2103, size: 64, offset: 192)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !385, line: 206, size: 320, elements: !2105)
!2105 = !{!2106, !2142, !2143, !2144, !2156}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !2104, file: !385, line: 208, baseType: !2107, size: 64)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !1060, line: 62, baseType: !2109)
!2109 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !2110, line: 538, size: 256, elements: !2111)
!2110 = !DIFile(filename: "./output.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2111 = !{!2112, !2116, !2122, !2133}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2109, file: !2110, line: 539, baseType: !2113, size: 32)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !2110, line: 482, size: 32, elements: !2114)
!2114 = !{!2115}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2113, file: !2110, line: 484, baseType: !7, size: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !2109, file: !2110, line: 540, baseType: !2117, size: 192)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !2110, line: 488, size: 192, elements: !2118)
!2118 = !{!2119, !2120, !2121}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2117, file: !2110, line: 489, baseType: !2113, size: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2117, file: !2110, line: 492, baseType: !1116, size: 64, offset: 64)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2117, file: !2110, line: 496, baseType: !1208, size: 64, offset: 128)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !2109, file: !2110, line: 541, baseType: !2123, size: 256)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !2110, line: 504, size: 256, elements: !2124)
!2124 = !{!2125, !2126, !2131, !2132}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2123, file: !2110, line: 505, baseType: !2113, size: 32)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2123, file: !2110, line: 509, baseType: !2127, size: 64, offset: 64)
!2127 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !2110, line: 501, baseType: !2128)
!2128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2129, size: 64)
!2129 = !DISubroutineType(types: !2130)
!2130 = !{null, !1523}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2123, file: !2110, line: 510, baseType: !1523, size: 64, offset: 128)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2123, file: !2110, line: 513, baseType: !2107, size: 64, offset: 192)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !2109, file: !2110, line: 542, baseType: !2134, size: 128)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !2110, line: 530, size: 128, elements: !2135)
!2135 = !{!2136, !2137}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2134, file: !2110, line: 531, baseType: !2113, size: 32)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2134, file: !2110, line: 534, baseType: !2138, size: 64, offset: 64)
!2138 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !2110, line: 525, baseType: !2139)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 64)
!2140 = !DISubroutineType(types: !2141)
!2141 = !{!1052, !1208, !1116, !1033, !1033}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !2104, file: !385, line: 211, baseType: !7, size: 32, offset: 64)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2104, file: !385, line: 214, baseType: !1048, size: 64, offset: 128)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2104, file: !385, line: 224, baseType: !2145, size: 64, offset: 192)
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 64)
!2146 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !385, line: 202, baseType: !2147)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !385, line: 202, size: 128, elements: !2148)
!2148 = !{!2149}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2147, file: !385, line: 202, baseType: !2150, size: 128)
!2150 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !385, line: 200, baseType: !2151)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !385, line: 200, size: 128, elements: !2152)
!2152 = !{!2153, !2154, !2155}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2151, file: !385, line: 200, baseType: !7, size: 32)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2151, file: !385, line: 200, baseType: !7, size: 32, offset: 32)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2151, file: !385, line: 200, baseType: !1127, size: 64, offset: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !2104, file: !385, line: 234, baseType: !2145, size: 64, offset: 256)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2098, file: !385, line: 197, baseType: !1048, size: 64, offset: 256)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !1106, file: !385, line: 319, baseType: !1022, size: 256)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !1106, file: !385, line: 320, baseType: !1038, size: 192)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1079, file: !142, line: 134, baseType: !1019, size: 64, offset: 192)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1079, file: !142, line: 137, baseType: !1208, size: 64, offset: 256)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1079, file: !142, line: 138, baseType: !1302, size: 32, offset: 320)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1079, file: !142, line: 142, baseType: !7, size: 32, offset: 352)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1079, file: !142, line: 144, baseType: !1053, size: 32, offset: 384)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1079, file: !142, line: 145, baseType: !1053, size: 32, offset: 416)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1079, file: !142, line: 146, baseType: !2167, size: 64, offset: 448)
!2167 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !142, line: 119, baseType: !1048)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1062, file: !142, line: 220, baseType: !1065, size: 64, offset: 64)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1062, file: !142, line: 223, baseType: !1019, size: 64, offset: 128)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1062, file: !142, line: 226, baseType: !2171, size: 64, offset: 192)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 64)
!2172 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !142, line: 185, flags: DIFlagFwdDecl)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1062, file: !142, line: 229, baseType: !2174, size: 128, offset: 256)
!2174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2175, size: 128, elements: !1163)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64)
!2176 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !142, line: 229, flags: DIFlagFwdDecl)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1062, file: !142, line: 232, baseType: !1061, size: 64, offset: 384)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1062, file: !142, line: 233, baseType: !1061, size: 64, offset: 448)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1062, file: !142, line: 238, baseType: !2180, size: 64, offset: 512)
!2180 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !142, line: 235, size: 64, elements: !2181)
!2181 = !{!2182, !2188}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !2180, file: !142, line: 236, baseType: !2183, size: 64)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 64)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !142, line: 273, size: 128, elements: !2185)
!2185 = !{!2186, !2187}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2184, file: !142, line: 275, baseType: !1087, size: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !2184, file: !142, line: 278, baseType: !1087, size: 64, offset: 64)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !2180, file: !142, line: 237, baseType: !2189, size: 64)
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2190, size: 64)
!2190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !142, line: 259, size: 320, elements: !2191)
!2191 = !{!2192, !2193, !2194, !2195, !2196}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !2190, file: !142, line: 261, baseType: !1091, size: 64)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !2190, file: !142, line: 262, baseType: !1091, size: 64, offset: 64)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2190, file: !142, line: 266, baseType: !1091, size: 64, offset: 128)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !2190, file: !142, line: 267, baseType: !1091, size: 64, offset: 192)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !2190, file: !142, line: 270, baseType: !1053, size: 32, offset: 256)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1062, file: !142, line: 241, baseType: !2167, size: 64, offset: 576)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1062, file: !142, line: 244, baseType: !1053, size: 32, offset: 640)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1062, file: !142, line: 247, baseType: !1053, size: 32, offset: 672)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1062, file: !142, line: 250, baseType: !1053, size: 32, offset: 704)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1062, file: !142, line: 253, baseType: !1053, size: 32, offset: 736)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1062, file: !142, line: 256, baseType: !1053, size: 32, offset: 768)
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 64)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_eqv_elem", file: !3, line: 297, size: 64, elements: !2205)
!2205 = !{!2206, !2207}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2204, file: !3, line: 299, baseType: !1053, size: 32)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2204, file: !3, line: 299, baseType: !1053, size: 32, offset: 32)
!2208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 64)
!2209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cse_reg_info", file: !3, line: 305, size: 160, elements: !2210)
!2210 = !{!2211, !2212, !2213, !2214, !2215}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !2209, file: !3, line: 308, baseType: !7, size: 32)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "reg_qty", scope: !2209, file: !3, line: 311, baseType: !1053, size: 32, offset: 32)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "reg_tick", scope: !2209, file: !3, line: 315, baseType: !1053, size: 32, offset: 64)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "reg_in_table", scope: !2209, file: !3, line: 321, baseType: !1053, size: 32, offset: 96)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "subreg_ticked", scope: !2209, file: !3, line: 325, baseType: !7, size: 32, offset: 128)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 64)
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qty_table_elem", file: !3, line: 245, size: 320, elements: !2218)
!2218 = !{!2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "const_rtx", scope: !2217, file: !3, line: 247, baseType: !1091, size: 64)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "const_insn", scope: !2217, file: !3, line: 248, baseType: !1091, size: 64, offset: 64)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "comparison_const", scope: !2217, file: !3, line: 249, baseType: !1091, size: 64, offset: 128)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "comparison_qty", scope: !2217, file: !3, line: 250, baseType: !1053, size: 32, offset: 192)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "first_reg", scope: !2217, file: !3, line: 251, baseType: !7, size: 32, offset: 224)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "last_reg", scope: !2217, file: !3, line: 251, baseType: !7, size: 32, offset: 256)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "comparison_code", scope: !2217, file: !3, line: 254, baseType: !7, size: 16, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2217, file: !3, line: 255, baseType: !7, size: 8, offset: 304, flags: DIFlagBitField, extraData: i64 288)
!2227 = !DIDerivedType(tag: DW_TAG_typedef, name: "HARD_REG_ELT_TYPE", file: !2228, line: 42, baseType: !1033)
!2228 = !DIFile(filename: "./hard-reg-set.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 64)
!2230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_scan_bb_info", file: !564, line: 771, size: 128, elements: !2231)
!2231 = !{!2232, !2294}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_defs", scope: !2230, file: !564, line: 782, baseType: !2233, size: 64)
!2233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 64)
!2234 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_ref", file: !564, line: 429, baseType: !2235)
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2236, size: 64)
!2236 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "df_ref_d", file: !564, line: 422, size: 704, elements: !2237)
!2237 = !{!2238, !2276, !2282, !2287}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2236, file: !564, line: 424, baseType: !2239, size: 512)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_base_ref", file: !564, line: 356, size: 512, elements: !2240)
!2240 = !{!2241, !2242, !2243, !2244, !2245, !2251, !2271, !2272, !2273, !2274, !2275}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !2239, file: !564, line: 360, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2239, file: !564, line: 362, baseType: !7, size: 8, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2239, file: !564, line: 364, baseType: !1053, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2239, file: !564, line: 365, baseType: !1091, size: 64, offset: 64)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !2239, file: !564, line: 366, baseType: !2246, size: 64, offset: 128)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 64)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_link", file: !564, line: 449, size: 128, elements: !2248)
!2248 = !{!2249, !2250}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2247, file: !564, line: 451, baseType: !2234, size: 64)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2247, file: !564, line: 452, baseType: !2246, size: 64, offset: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "insn_info", scope: !2239, file: !564, line: 370, baseType: !2252, size: 64, offset: 192)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_insn_info", file: !564, line: 433, size: 384, elements: !2254)
!2254 = !{!2255, !2256, !2257, !2258, !2259, !2270}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !2253, file: !564, line: 435, baseType: !1091, size: 64)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !2253, file: !564, line: 436, baseType: !2233, size: 64, offset: 64)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !2253, file: !564, line: 437, baseType: !2233, size: 64, offset: 128)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "eq_uses", scope: !2253, file: !564, line: 439, baseType: !2233, size: 64, offset: 192)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "mw_hardregs", scope: !2253, file: !564, line: 440, baseType: !2260, size: 64, offset: 256)
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 64)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 64)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_mw_hardreg", file: !564, line: 339, size: 192, elements: !2263)
!2263 = !{!2264, !2265, !2266, !2267, !2268, !2269}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "mw_reg", scope: !2262, file: !564, line: 341, baseType: !1091, size: 64)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2262, file: !564, line: 344, baseType: !7, size: 16, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2262, file: !564, line: 346, baseType: !1053, size: 16, offset: 80, flags: DIFlagBitField, extraData: i64 64)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "start_regno", scope: !2262, file: !564, line: 347, baseType: !7, size: 32, offset: 96)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "end_regno", scope: !2262, file: !564, line: 348, baseType: !7, size: 32, offset: 128)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "mw_order", scope: !2262, file: !564, line: 349, baseType: !7, size: 32, offset: 160)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "luid", scope: !2253, file: !564, line: 444, baseType: !1053, size: 32, offset: 320)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "next_reg", scope: !2239, file: !564, line: 374, baseType: !2235, size: 64, offset: 256)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "prev_reg", scope: !2239, file: !564, line: 375, baseType: !2235, size: 64, offset: 320)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !2239, file: !564, line: 376, baseType: !7, size: 32, offset: 384)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2239, file: !564, line: 379, baseType: !1053, size: 32, offset: 416)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "ref_order", scope: !2239, file: !564, line: 382, baseType: !7, size: 32, offset: 448)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "regular_ref", scope: !2236, file: !564, line: 425, baseType: !2277, size: 576)
!2277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_regular_ref", file: !564, line: 398, size: 576, elements: !2278)
!2278 = !{!2279, !2280}
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2277, file: !564, line: 400, baseType: !2239, size: 512)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !2277, file: !564, line: 405, baseType: !2281, size: 64, offset: 512)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_ref", scope: !2236, file: !564, line: 426, baseType: !2283, size: 576)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_artificial_ref", file: !564, line: 388, size: 576, elements: !2284)
!2284 = !{!2285, !2286}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2283, file: !564, line: 390, baseType: !2239, size: 512)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2283, file: !564, line: 394, baseType: !1059, size: 64, offset: 512)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "extract_ref", scope: !2236, file: !564, line: 427, baseType: !2288, size: 704)
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_extract_ref", file: !564, line: 413, size: 704, elements: !2289)
!2289 = !{!2290, !2291, !2292, !2293}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2288, file: !564, line: 415, baseType: !2277, size: 576)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2288, file: !564, line: 416, baseType: !1053, size: 32, offset: 576)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2288, file: !564, line: 417, baseType: !1053, size: 32, offset: 608)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2288, file: !564, line: 418, baseType: !5, size: 32, offset: 640)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_uses", scope: !2230, file: !564, line: 788, baseType: !2233, size: 64, offset: 64)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 64)
!2296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "check_dependence_data", file: !3, line: 1837, size: 192, elements: !2297)
!2297 = !{!2298, !2299, !2300}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2296, file: !3, line: 1839, baseType: !5, size: 32)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !2296, file: !3, line: 1840, baseType: !1091, size: 64, offset: 64)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2296, file: !3, line: 1841, baseType: !1091, size: 64, offset: 128)
!2301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2302, size: 64)
!2302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "set", file: !3, line: 4168, size: 640, elements: !2303)
!2303 = !{!2304, !2305, !2306, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !2302, file: !3, line: 4171, baseType: !1091, size: 64)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2302, file: !3, line: 4173, baseType: !1091, size: 64, offset: 64)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "src_elt", scope: !2302, file: !3, line: 4175, baseType: !2307, size: 64, offset: 128)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 64)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "table_elt", file: !3, line: 419, size: 640, elements: !2309)
!2309 = !{!2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !2308, file: !3, line: 421, baseType: !1091, size: 64)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "canon_exp", scope: !2308, file: !3, line: 422, baseType: !1091, size: 64, offset: 64)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "next_same_hash", scope: !2308, file: !3, line: 423, baseType: !2307, size: 64, offset: 128)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "prev_same_hash", scope: !2308, file: !3, line: 424, baseType: !2307, size: 64, offset: 192)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "next_same_value", scope: !2308, file: !3, line: 425, baseType: !2307, size: 64, offset: 256)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "prev_same_value", scope: !2308, file: !3, line: 426, baseType: !2307, size: 64, offset: 320)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "first_same_value", scope: !2308, file: !3, line: 427, baseType: !2307, size: 64, offset: 384)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "related_value", scope: !2308, file: !3, line: 428, baseType: !2307, size: 64, offset: 448)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !2308, file: !3, line: 429, baseType: !1053, size: 32, offset: 512)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "regcost", scope: !2308, file: !3, line: 430, baseType: !1053, size: 32, offset: 544)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2308, file: !3, line: 433, baseType: !7, size: 8, offset: 576, flags: DIFlagBitField, extraData: i64 576)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "in_memory", scope: !2308, file: !3, line: 434, baseType: !1118, size: 8, offset: 584)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "is_const", scope: !2308, file: !3, line: 435, baseType: !1118, size: 8, offset: 592)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2308, file: !3, line: 436, baseType: !1118, size: 8, offset: 600)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "src_hash", scope: !2302, file: !3, line: 4177, baseType: !7, size: 32, offset: 192)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "dest_hash", scope: !2302, file: !3, line: 4179, baseType: !7, size: 32, offset: 224)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "inner_dest", scope: !2302, file: !3, line: 4181, baseType: !1091, size: 64, offset: 256)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "src_in_memory", scope: !2302, file: !3, line: 4183, baseType: !1118, size: 8, offset: 320)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "src_volatile", scope: !2302, file: !3, line: 4186, baseType: !1118, size: 8, offset: 328)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2302, file: !3, line: 4190, baseType: !7, size: 8, offset: 336, flags: DIFlagBitField, extraData: i64 336)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "src_const", scope: !2302, file: !3, line: 4192, baseType: !1091, size: 64, offset: 384)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "src_const_hash", scope: !2302, file: !3, line: 4194, baseType: !7, size: 32, offset: 448)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "src_const_elt", scope: !2302, file: !3, line: 4196, baseType: !2307, size: 64, offset: 512)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "dest_addr_elt", scope: !2302, file: !3, line: 4198, baseType: !2307, size: 64, offset: 576)
!2334 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 64)
!2336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "change_cc_mode_args", file: !3, line: 263, size: 128, elements: !2337)
!2337 = !{!2338, !2339}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !2336, file: !3, line: 265, baseType: !1091, size: 64)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "newreg", scope: !2336, file: !3, line: 266, baseType: !1091, size: 64, offset: 64)
!2340 = !{!2341, !2369, !2371, !2373, !2375, !0, !2377, !2379, !2381, !2383, !2385, !2398, !2400, !2402, !2404, !2406, !2433, !2435, !2437, !2442, !2444, !2447, !2449, !2451, !2453, !2455, !2457}
!2341 = !DIGlobalVariableExpression(var: !2342, expr: !DIExpression())
!2342 = distinct !DIGlobalVariable(name: "pass_cse", scope: !2, file: !3, line: 7260, type: !2343, isLocal: false, isDefinition: true)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_opt_pass", file: !915, line: 162, size: 640, elements: !2344)
!2344 = !{!2345}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2343, file: !915, line: 164, baseType: !2346, size: 640)
!2346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !915, line: 114, size: 640, elements: !2347)
!2347 = !{!2348, !2349, !2350, !2354, !2358, !2360, !2361, !2362, !2364, !2365, !2366, !2367, !2368}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2346, file: !915, line: 117, baseType: !914, size: 32)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2346, file: !915, line: 121, baseType: !1116, size: 64, offset: 64)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2346, file: !915, line: 125, baseType: !2351, size: 64, offset: 128)
!2351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2352, size: 64)
!2352 = !DISubroutineType(types: !2353)
!2353 = !{!1052}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2346, file: !915, line: 130, baseType: !2355, size: 64, offset: 192)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 64)
!2356 = !DISubroutineType(types: !2357)
!2357 = !{!7}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2346, file: !915, line: 133, baseType: !2359, size: 64, offset: 256)
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 64)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2346, file: !915, line: 136, baseType: !2359, size: 64, offset: 320)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2346, file: !915, line: 139, baseType: !1053, size: 32, offset: 384)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2346, file: !915, line: 143, baseType: !2363, size: 32, offset: 416)
!2363 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !697, line: 80, baseType: !696)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2346, file: !915, line: 146, baseType: !7, size: 32, offset: 448)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2346, file: !915, line: 147, baseType: !7, size: 32, offset: 480)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2346, file: !915, line: 148, baseType: !7, size: 32, offset: 512)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2346, file: !915, line: 151, baseType: !7, size: 32, offset: 544)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2346, file: !915, line: 152, baseType: !7, size: 32, offset: 576)
!2369 = !DIGlobalVariableExpression(var: !2370, expr: !DIExpression())
!2370 = distinct !DIGlobalVariable(name: "pass_cse2", scope: !2, file: !3, line: 7323, type: !2343, isLocal: false, isDefinition: true)
!2371 = !DIGlobalVariableExpression(var: !2372, expr: !DIExpression())
!2372 = distinct !DIGlobalVariable(name: "pass_cse_after_global_opts", scope: !2, file: !3, line: 7384, type: !2343, isLocal: false, isDefinition: true)
!2373 = !DIGlobalVariableExpression(var: !2374, expr: !DIExpression())
!2374 = distinct !DIGlobalVariable(name: "max_qty", scope: !2, file: !3, line: 213, type: !1053, isLocal: true, isDefinition: true)
!2375 = !DIGlobalVariableExpression(var: !2376, expr: !DIExpression())
!2376 = distinct !DIGlobalVariable(name: "reg_eqv_table", scope: !2, file: !3, line: 303, type: !2203, isLocal: true, isDefinition: true)
!2377 = !DIGlobalVariableExpression(var: !2378, expr: !DIExpression())
!2378 = distinct !DIGlobalVariable(name: "cse_jumps_altered", scope: !2, file: !3, line: 357, type: !1052, isLocal: true, isDefinition: true)
!2379 = !DIGlobalVariableExpression(var: !2380, expr: !DIExpression())
!2380 = distinct !DIGlobalVariable(name: "recorded_label_ref", scope: !2, file: !3, line: 362, type: !1052, isLocal: true, isDefinition: true)
!2381 = !DIGlobalVariableExpression(var: !2382, expr: !DIExpression())
!2382 = distinct !DIGlobalVariable(name: "constant_pool_entries_cost", scope: !2, file: !3, line: 522, type: !1053, isLocal: true, isDefinition: true)
!2383 = !DIGlobalVariableExpression(var: !2384, expr: !DIExpression())
!2384 = distinct !DIGlobalVariable(name: "constant_pool_entries_regcost", scope: !2, file: !3, line: 523, type: !1053, isLocal: true, isDefinition: true)
!2385 = !DIGlobalVariableExpression(var: !2386, expr: !DIExpression())
!2386 = distinct !DIGlobalVariable(name: "cse_visited_basic_blocks", scope: !2, file: !3, line: 553, type: !2387, isLocal: true, isDefinition: true)
!2387 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !2388, line: 45, baseType: !2389)
!2388 = !DIFile(filename: "./sbitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 64)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !2388, line: 39, size: 192, elements: !2391)
!2391 = !{!2392, !2394, !2395, !2396}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !2390, file: !2388, line: 41, baseType: !2393, size: 64)
!2393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !2390, file: !2388, line: 42, baseType: !7, size: 32, offset: 64)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2390, file: !2388, line: 43, baseType: !7, size: 32, offset: 96)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !2390, file: !2388, line: 44, baseType: !2397, size: 64, offset: 128)
!2397 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1033, size: 64, elements: !1128)
!2398 = !DIGlobalVariableExpression(var: !2399, expr: !DIExpression())
!2399 = distinct !DIGlobalVariable(name: "cse_reg_info_table", scope: !2, file: !3, line: 329, type: !2208, isLocal: true, isDefinition: true)
!2400 = !DIGlobalVariableExpression(var: !2401, expr: !DIExpression())
!2401 = distinct !DIGlobalVariable(name: "cse_reg_info_timestamp", scope: !2, file: !3, line: 343, type: !7, isLocal: true, isDefinition: true)
!2402 = !DIGlobalVariableExpression(var: !2403, expr: !DIExpression())
!2403 = distinct !DIGlobalVariable(name: "cse_reg_info_table_size", scope: !2, file: !3, line: 332, type: !7, isLocal: true, isDefinition: true)
!2404 = !DIGlobalVariableExpression(var: !2405, expr: !DIExpression())
!2405 = distinct !DIGlobalVariable(name: "cse_reg_info_table_first_uninitialized", scope: !2, file: !3, line: 335, type: !7, isLocal: true, isDefinition: true)
!2406 = !DIGlobalVariableExpression(var: !2407, expr: !DIExpression())
!2407 = distinct !DIGlobalVariable(name: "cse_rtl_hooks", scope: !2, file: !3, line: 624, type: !2408, isLocal: true, isDefinition: true)
!2408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2409)
!2409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_hooks", file: !385, line: 2441, size: 320, elements: !2410)
!2410 = !{!2411, !2415, !2416, !2424, !2429}
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "gen_lowpart", scope: !2409, file: !385, line: 2443, baseType: !2412, size: 64)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 64)
!2413 = !DISubroutineType(types: !2414)
!2414 = !{!1091, !5, !1091}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "gen_lowpart_no_emit", scope: !2409, file: !385, line: 2444, baseType: !2412, size: 64, offset: 64)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "reg_nonzero_bits", scope: !2409, file: !385, line: 2445, baseType: !2417, size: 64, offset: 128)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 64)
!2418 = !DISubroutineType(types: !2419)
!2419 = !{!1091, !2420, !5, !2420, !5, !1033, !2423}
!2420 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !1060, line: 51, baseType: !2421)
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 64)
!2422 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1093)
!2423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "reg_num_sign_bit_copies", scope: !2409, file: !385, line: 2447, baseType: !2425, size: 64, offset: 192)
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 64)
!2426 = !DISubroutineType(types: !2427)
!2427 = !{!1091, !2420, !5, !2420, !5, !7, !2428}
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "reg_truncated_to_mode", scope: !2409, file: !385, line: 2449, baseType: !2430, size: 64, offset: 256)
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 64)
!2431 = !DISubroutineType(types: !2432)
!2432 = !{!1052, !5, !2420}
!2433 = !DIGlobalVariableExpression(var: !2434, expr: !DIExpression())
!2434 = distinct !DIGlobalVariable(name: "qty_table", scope: !2, file: !3, line: 259, type: !2216, isLocal: true, isDefinition: true)
!2435 = !DIGlobalVariableExpression(var: !2436, expr: !DIExpression())
!2436 = distinct !DIGlobalVariable(name: "hard_regs_in_table", scope: !2, file: !3, line: 350, type: !2227, isLocal: true, isDefinition: true)
!2437 = !DIGlobalVariableExpression(var: !2438, expr: !DIExpression())
!2438 = distinct !DIGlobalVariable(name: "table", scope: !2, file: !3, line: 510, type: !2439, isLocal: true, isDefinition: true)
!2439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2307, size: 2048, elements: !2440)
!2440 = !{!2441}
!2441 = !DISubrange(count: 32)
!2442 = !DIGlobalVariableExpression(var: !2443, expr: !DIExpression())
!2443 = distinct !DIGlobalVariable(name: "free_element_chain", scope: !2, file: !3, line: 515, type: !2307, isLocal: true, isDefinition: true)
!2444 = !DIGlobalVariableExpression(var: !2445, expr: !DIExpression())
!2445 = distinct !DIGlobalVariable(name: "cse_ebb_live_in", scope: !2, file: !3, line: 549, type: !2446, isLocal: true, isDefinition: true)
!2446 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !1060, line: 47, baseType: !1147)
!2447 = !DIGlobalVariableExpression(var: !2448, expr: !DIExpression())
!2448 = distinct !DIGlobalVariable(name: "cse_ebb_live_out", scope: !2, file: !3, line: 549, type: !2446, isLocal: true, isDefinition: true)
!2449 = !DIGlobalVariableExpression(var: !2450, expr: !DIExpression())
!2450 = distinct !DIGlobalVariable(name: "do_not_record", scope: !2, file: !3, line: 368, type: !1053, isLocal: true, isDefinition: true)
!2451 = !DIGlobalVariableExpression(var: !2452, expr: !DIExpression())
!2452 = distinct !DIGlobalVariable(name: "hash_arg_in_memory", scope: !2, file: !3, line: 373, type: !1053, isLocal: true, isDefinition: true)
!2453 = !DIGlobalVariableExpression(var: !2454, expr: !DIExpression())
!2454 = distinct !DIGlobalVariable(name: "optimize_this_for_speed_p", scope: !2, file: !3, line: 286, type: !1052, isLocal: true, isDefinition: true)
!2455 = !DIGlobalVariableExpression(var: !2456, expr: !DIExpression())
!2456 = distinct !DIGlobalVariable(name: "this_insn", scope: !2, file: !3, line: 285, type: !1091, isLocal: true, isDefinition: true)
!2457 = !DIGlobalVariableExpression(var: !2458, expr: !DIExpression())
!2458 = distinct !DIGlobalVariable(name: "next_qty", scope: !2, file: !3, line: 218, type: !1053, isLocal: true, isDefinition: true)
!2459 = !{i32 7, !"Dwarf Version", i32 4}
!2460 = !{i32 2, !"Debug Info Version", i32 3}
!2461 = !{i32 1, !"wchar_size", i32 4}
!2462 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2463 = distinct !DISubprogram(name: "dump_class", scope: !3, file: !3, line: 658, type: !2464, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!2464 = !DISubroutineType(types: !2465)
!2465 = !{null, !2307}
!2466 = !{}
!2467 = !DILocalVariable(name: "classp", arg: 1, scope: !2463, file: !3, line: 658, type: !2307)
!2468 = !DILocation(line: 658, column: 31, scope: !2463)
!2469 = !DILocalVariable(name: "elt", scope: !2463, file: !3, line: 660, type: !2307)
!2470 = !DILocation(line: 660, column: 21, scope: !2463)
!2471 = !DILocation(line: 662, column: 12, scope: !2463)
!2472 = !DILocation(line: 662, column: 3, scope: !2463)
!2473 = !DILocation(line: 663, column: 14, scope: !2463)
!2474 = !DILocation(line: 663, column: 22, scope: !2463)
!2475 = !DILocation(line: 663, column: 30, scope: !2463)
!2476 = !DILocation(line: 663, column: 3, scope: !2463)
!2477 = !DILocation(line: 664, column: 12, scope: !2463)
!2478 = !DILocation(line: 664, column: 3, scope: !2463)
!2479 = !DILocation(line: 666, column: 14, scope: !2480)
!2480 = distinct !DILexicalBlock(scope: !2463, file: !3, line: 666, column: 3)
!2481 = !DILocation(line: 666, column: 22, scope: !2480)
!2482 = !DILocation(line: 666, column: 12, scope: !2480)
!2483 = !DILocation(line: 666, column: 8, scope: !2480)
!2484 = !DILocation(line: 666, column: 40, scope: !2485)
!2485 = distinct !DILexicalBlock(scope: !2480, file: !3, line: 666, column: 3)
!2486 = !DILocation(line: 666, column: 3, scope: !2480)
!2487 = !DILocation(line: 668, column: 18, scope: !2488)
!2488 = distinct !DILexicalBlock(scope: !2485, file: !3, line: 667, column: 5)
!2489 = !DILocation(line: 668, column: 26, scope: !2488)
!2490 = !DILocation(line: 668, column: 31, scope: !2488)
!2491 = !DILocation(line: 668, column: 7, scope: !2488)
!2492 = !DILocation(line: 669, column: 16, scope: !2488)
!2493 = !DILocation(line: 669, column: 7, scope: !2488)
!2494 = !DILocation(line: 670, column: 5, scope: !2488)
!2495 = !DILocation(line: 666, column: 51, scope: !2485)
!2496 = !DILocation(line: 666, column: 56, scope: !2485)
!2497 = !DILocation(line: 666, column: 49, scope: !2485)
!2498 = !DILocation(line: 666, column: 3, scope: !2485)
!2499 = distinct !{!2499, !2486, !2500}
!2500 = !DILocation(line: 670, column: 5, scope: !2480)
!2501 = !DILocation(line: 671, column: 1, scope: !2463)
!2502 = distinct !DISubprogram(name: "hash_rtx_cb", scope: !3, file: !3, line: 2244, type: !2503, scopeLine: 2247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!2503 = !DISubroutineType(types: !2504)
!2504 = !{!7, !2420, !5, !1054, !1054, !1052, !2505}
!2505 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_rtx_callback_function", file: !385, line: 1883, baseType: !2506)
!2506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 64)
!2507 = !DISubroutineType(types: !2508)
!2508 = !{!1053, !2420, !5, !2281, !2509}
!2509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!2510 = !DILocalVariable(name: "x", arg: 1, scope: !2502, file: !3, line: 2244, type: !2420)
!2511 = !DILocation(line: 2244, column: 24, scope: !2502)
!2512 = !DILocalVariable(name: "mode", arg: 2, scope: !2502, file: !3, line: 2244, type: !5)
!2513 = !DILocation(line: 2244, column: 45, scope: !2502)
!2514 = !DILocalVariable(name: "do_not_record_p", arg: 3, scope: !2502, file: !3, line: 2245, type: !1054)
!2515 = !DILocation(line: 2245, column: 19, scope: !2502)
!2516 = !DILocalVariable(name: "hash_arg_in_memory_p", arg: 4, scope: !2502, file: !3, line: 2245, type: !1054)
!2517 = !DILocation(line: 2245, column: 41, scope: !2502)
!2518 = !DILocalVariable(name: "have_reg_qty", arg: 5, scope: !2502, file: !3, line: 2246, type: !1052)
!2519 = !DILocation(line: 2246, column: 19, scope: !2502)
!2520 = !DILocalVariable(name: "cb", arg: 6, scope: !2502, file: !3, line: 2246, type: !2505)
!2521 = !DILocation(line: 2246, column: 60, scope: !2502)
!2522 = !DILocalVariable(name: "i", scope: !2502, file: !3, line: 2248, type: !1053)
!2523 = !DILocation(line: 2248, column: 7, scope: !2502)
!2524 = !DILocalVariable(name: "j", scope: !2502, file: !3, line: 2248, type: !1053)
!2525 = !DILocation(line: 2248, column: 10, scope: !2502)
!2526 = !DILocalVariable(name: "hash", scope: !2502, file: !3, line: 2249, type: !7)
!2527 = !DILocation(line: 2249, column: 12, scope: !2502)
!2528 = !DILocalVariable(name: "code", scope: !2502, file: !3, line: 2250, type: !384)
!2529 = !DILocation(line: 2250, column: 17, scope: !2502)
!2530 = !DILocalVariable(name: "fmt", scope: !2502, file: !3, line: 2251, type: !1116)
!2531 = !DILocation(line: 2251, column: 15, scope: !2502)
!2532 = !DILocalVariable(name: "newmode", scope: !2502, file: !3, line: 2252, type: !5)
!2533 = !DILocation(line: 2252, column: 21, scope: !2502)
!2534 = !DILocalVariable(name: "newx", scope: !2502, file: !3, line: 2253, type: !1091)
!2535 = !DILocation(line: 2253, column: 7, scope: !2502)
!2536 = !DILocation(line: 2253, column: 3, scope: !2502)
!2537 = !DILabel(scope: !2502, name: "repeat", file: !3, line: 2258)
!2538 = !DILocation(line: 2258, column: 2, scope: !2502)
!2539 = !DILocation(line: 2259, column: 7, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2502, file: !3, line: 2259, column: 7)
!2541 = !DILocation(line: 2259, column: 9, scope: !2540)
!2542 = !DILocation(line: 2259, column: 7, scope: !2502)
!2543 = !DILocation(line: 2260, column: 12, scope: !2540)
!2544 = !DILocation(line: 2260, column: 5, scope: !2540)
!2545 = !DILocation(line: 2263, column: 7, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !2502, file: !3, line: 2263, column: 7)
!2547 = !DILocation(line: 2263, column: 10, scope: !2546)
!2548 = !DILocation(line: 2264, column: 7, scope: !2546)
!2549 = !DILocation(line: 2264, column: 13, scope: !2546)
!2550 = !DILocation(line: 2264, column: 18, scope: !2546)
!2551 = !DILocation(line: 2264, column: 21, scope: !2546)
!2552 = !DILocation(line: 2264, column: 11, scope: !2546)
!2553 = !DILocation(line: 2263, column: 7, scope: !2502)
!2554 = !DILocation(line: 2266, column: 28, scope: !2555)
!2555 = distinct !DILexicalBlock(scope: !2546, file: !3, line: 2265, column: 5)
!2556 = !DILocation(line: 2266, column: 34, scope: !2555)
!2557 = !DILocation(line: 2266, column: 43, scope: !2555)
!2558 = !DILocation(line: 2267, column: 28, scope: !2555)
!2559 = !DILocation(line: 2267, column: 50, scope: !2555)
!2560 = !DILocation(line: 2267, column: 64, scope: !2555)
!2561 = !DILocation(line: 2266, column: 15, scope: !2555)
!2562 = !DILocation(line: 2266, column: 12, scope: !2555)
!2563 = !DILocation(line: 2268, column: 14, scope: !2555)
!2564 = !DILocation(line: 2268, column: 7, scope: !2555)
!2565 = !DILocation(line: 2271, column: 10, scope: !2502)
!2566 = !DILocation(line: 2271, column: 8, scope: !2502)
!2567 = !DILocation(line: 2272, column: 11, scope: !2502)
!2568 = !DILocation(line: 2272, column: 3, scope: !2502)
!2569 = !DILocalVariable(name: "regno", scope: !2570, file: !3, line: 2276, type: !7)
!2570 = distinct !DILexicalBlock(scope: !2571, file: !3, line: 2275, column: 7)
!2571 = distinct !DILexicalBlock(scope: !2502, file: !3, line: 2273, column: 5)
!2572 = !DILocation(line: 2276, column: 15, scope: !2570)
!2573 = !DILocation(line: 2276, column: 23, scope: !2570)
!2574 = !DILocation(line: 2278, column: 6, scope: !2575)
!2575 = distinct !DILexicalBlock(scope: !2570, file: !3, line: 2278, column: 6)
!2576 = !DILocation(line: 2278, column: 22, scope: !2575)
!2577 = !DILocation(line: 2278, column: 26, scope: !2575)
!2578 = !DILocation(line: 2278, column: 6, scope: !2570)
!2579 = !DILocalVariable(name: "record", scope: !2580, file: !3, line: 2291, type: !1052)
!2580 = distinct !DILexicalBlock(scope: !2575, file: !3, line: 2279, column: 4)
!2581 = !DILocation(line: 2291, column: 11, scope: !2580)
!2582 = !DILocation(line: 2293, column: 10, scope: !2583)
!2583 = distinct !DILexicalBlock(scope: !2580, file: !3, line: 2293, column: 10)
!2584 = !DILocation(line: 2293, column: 16, scope: !2583)
!2585 = !DILocation(line: 2293, column: 10, scope: !2580)
!2586 = !DILocation(line: 2294, column: 15, scope: !2583)
!2587 = !DILocation(line: 2294, column: 8, scope: !2583)
!2588 = !DILocation(line: 2295, column: 15, scope: !2589)
!2589 = distinct !DILexicalBlock(scope: !2583, file: !3, line: 2295, column: 15)
!2590 = !DILocation(line: 2295, column: 20, scope: !2589)
!2591 = !DILocation(line: 2295, column: 17, scope: !2589)
!2592 = !DILocation(line: 2296, column: 8, scope: !2589)
!2593 = !DILocation(line: 2296, column: 11, scope: !2589)
!2594 = !DILocation(line: 2296, column: 16, scope: !2589)
!2595 = !DILocation(line: 2296, column: 13, scope: !2589)
!2596 = !DILocation(line: 2297, column: 8, scope: !2589)
!2597 = !DILocation(line: 2297, column: 11, scope: !2589)
!2598 = !DILocation(line: 2297, column: 16, scope: !2589)
!2599 = !DILocation(line: 2297, column: 13, scope: !2589)
!2600 = !DILocation(line: 2298, column: 8, scope: !2589)
!2601 = !DILocation(line: 2298, column: 11, scope: !2589)
!2602 = !DILocation(line: 2298, column: 16, scope: !2589)
!2603 = !DILocation(line: 2298, column: 13, scope: !2589)
!2604 = !DILocation(line: 2299, column: 8, scope: !2589)
!2605 = !DILocation(line: 2299, column: 11, scope: !2589)
!2606 = !DILocation(line: 2299, column: 16, scope: !2589)
!2607 = !DILocation(line: 2299, column: 13, scope: !2589)
!2608 = !DILocation(line: 2295, column: 15, scope: !2583)
!2609 = !DILocation(line: 2300, column: 15, scope: !2589)
!2610 = !DILocation(line: 2300, column: 8, scope: !2589)
!2611 = !DILocation(line: 2301, column: 27, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2589, file: !3, line: 2301, column: 15)
!2613 = !DILocation(line: 2301, column: 15, scope: !2612)
!2614 = !DILocation(line: 2301, column: 15, scope: !2589)
!2615 = !DILocation(line: 2302, column: 15, scope: !2612)
!2616 = !DILocation(line: 2302, column: 8, scope: !2612)
!2617 = !DILocation(line: 2303, column: 26, scope: !2618)
!2618 = distinct !DILexicalBlock(scope: !2612, file: !3, line: 2303, column: 15)
!2619 = !DILocation(line: 2303, column: 15, scope: !2618)
!2620 = !DILocation(line: 2303, column: 15, scope: !2612)
!2621 = !DILocation(line: 2304, column: 15, scope: !2618)
!2622 = !DILocation(line: 2304, column: 8, scope: !2618)
!2623 = !DILocation(line: 2305, column: 15, scope: !2624)
!2624 = distinct !DILexicalBlock(scope: !2618, file: !3, line: 2305, column: 15)
!2625 = !DILocation(line: 2305, column: 45, scope: !2624)
!2626 = !DILocation(line: 2305, column: 15, scope: !2618)
!2627 = !DILocation(line: 2306, column: 15, scope: !2624)
!2628 = !DILocation(line: 2306, column: 8, scope: !2624)
!2629 = !DILocation(line: 2308, column: 15, scope: !2630)
!2630 = distinct !DILexicalBlock(scope: !2624, file: !3, line: 2307, column: 15)
!2631 = !DILocation(line: 2314, column: 11, scope: !2632)
!2632 = distinct !DILexicalBlock(scope: !2580, file: !3, line: 2314, column: 10)
!2633 = !DILocation(line: 2314, column: 10, scope: !2580)
!2634 = !DILocation(line: 2316, column: 4, scope: !2635)
!2635 = distinct !DILexicalBlock(scope: !2632, file: !3, line: 2315, column: 8)
!2636 = !DILocation(line: 2316, column: 20, scope: !2635)
!2637 = !DILocation(line: 2317, column: 3, scope: !2635)
!2638 = !DILocation(line: 2319, column: 4, scope: !2580)
!2639 = !DILocation(line: 2321, column: 7, scope: !2570)
!2640 = !DILocation(line: 2322, column: 18, scope: !2570)
!2641 = !DILocation(line: 2322, column: 44, scope: !2570)
!2642 = !DILocation(line: 2322, column: 62, scope: !2570)
!2643 = !DILocation(line: 2322, column: 14, scope: !2570)
!2644 = !DILocation(line: 2323, column: 9, scope: !2570)
!2645 = !DILocation(line: 2323, column: 2, scope: !2570)
!2646 = !DILocation(line: 2331, column: 6, scope: !2647)
!2647 = distinct !DILexicalBlock(scope: !2648, file: !3, line: 2331, column: 6)
!2648 = distinct !DILexicalBlock(scope: !2571, file: !3, line: 2330, column: 7)
!2649 = !DILocation(line: 2331, column: 6, scope: !2648)
!2650 = !DILocation(line: 2334, column: 10, scope: !2651)
!2651 = distinct !DILexicalBlock(scope: !2647, file: !3, line: 2332, column: 4)
!2652 = !DILocation(line: 2334, column: 8, scope: !2651)
!2653 = !DILocation(line: 2335, column: 11, scope: !2651)
!2654 = !DILocation(line: 2335, column: 27, scope: !2651)
!2655 = !DILocation(line: 2335, column: 8, scope: !2651)
!2656 = !DILocation(line: 2333, column: 11, scope: !2651)
!2657 = !DILocation(line: 2336, column: 13, scope: !2651)
!2658 = !DILocation(line: 2336, column: 6, scope: !2651)
!2659 = !DILocation(line: 2338, column: 2, scope: !2648)
!2660 = !DILocation(line: 2342, column: 65, scope: !2571)
!2661 = !DILocation(line: 2342, column: 48, scope: !2571)
!2662 = !DILocation(line: 2343, column: 33, scope: !2571)
!2663 = !DILocation(line: 2343, column: 18, scope: !2571)
!2664 = !DILocation(line: 2343, column: 16, scope: !2571)
!2665 = !DILocation(line: 2342, column: 12, scope: !2571)
!2666 = !DILocation(line: 2344, column: 14, scope: !2571)
!2667 = !DILocation(line: 2344, column: 7, scope: !2571)
!2668 = !DILocation(line: 2349, column: 30, scope: !2571)
!2669 = !DILocation(line: 2349, column: 52, scope: !2571)
!2670 = !DILocation(line: 2349, column: 35, scope: !2571)
!2671 = !DILocation(line: 2349, column: 12, scope: !2571)
!2672 = !DILocation(line: 2350, column: 11, scope: !2673)
!2673 = distinct !DILexicalBlock(scope: !2571, file: !3, line: 2350, column: 11)
!2674 = !DILocation(line: 2350, column: 24, scope: !2673)
!2675 = !DILocation(line: 2350, column: 11, scope: !2571)
!2676 = !DILocation(line: 2351, column: 21, scope: !2673)
!2677 = !DILocation(line: 2351, column: 10, scope: !2673)
!2678 = !DILocation(line: 2351, column: 7, scope: !2673)
!2679 = !DILocation(line: 2351, column: 2, scope: !2673)
!2680 = !DILocation(line: 2353, column: 26, scope: !2673)
!2681 = !DILocation(line: 2353, column: 11, scope: !2673)
!2682 = !DILocation(line: 2354, column: 21, scope: !2673)
!2683 = !DILocation(line: 2354, column: 6, scope: !2673)
!2684 = !DILocation(line: 2354, column: 4, scope: !2673)
!2685 = !DILocation(line: 2353, column: 7, scope: !2673)
!2686 = !DILocation(line: 2355, column: 14, scope: !2571)
!2687 = !DILocation(line: 2355, column: 7, scope: !2571)
!2688 = !DILocation(line: 2358, column: 30, scope: !2571)
!2689 = !DILocation(line: 2358, column: 52, scope: !2571)
!2690 = !DILocation(line: 2358, column: 35, scope: !2571)
!2691 = !DILocation(line: 2358, column: 12, scope: !2571)
!2692 = !DILocation(line: 2359, column: 27, scope: !2571)
!2693 = !DILocation(line: 2359, column: 15, scope: !2571)
!2694 = !DILocation(line: 2359, column: 12, scope: !2571)
!2695 = !DILocation(line: 2360, column: 14, scope: !2571)
!2696 = !DILocation(line: 2360, column: 7, scope: !2571)
!2697 = !DILocalVariable(name: "units", scope: !2698, file: !3, line: 2364, type: !1053)
!2698 = distinct !DILexicalBlock(scope: !2571, file: !3, line: 2363, column: 7)
!2699 = !DILocation(line: 2364, column: 6, scope: !2698)
!2700 = !DILocalVariable(name: "elt", scope: !2698, file: !3, line: 2365, type: !1091)
!2701 = !DILocation(line: 2365, column: 6, scope: !2698)
!2702 = !DILocation(line: 2367, column: 10, scope: !2698)
!2703 = !DILocation(line: 2367, column: 8, scope: !2698)
!2704 = !DILocation(line: 2369, column: 9, scope: !2705)
!2705 = distinct !DILexicalBlock(scope: !2698, file: !3, line: 2369, column: 2)
!2706 = !DILocation(line: 2369, column: 7, scope: !2705)
!2707 = !DILocation(line: 2369, column: 14, scope: !2708)
!2708 = distinct !DILexicalBlock(scope: !2705, file: !3, line: 2369, column: 2)
!2709 = !DILocation(line: 2369, column: 18, scope: !2708)
!2710 = !DILocation(line: 2369, column: 16, scope: !2708)
!2711 = !DILocation(line: 2369, column: 2, scope: !2705)
!2712 = !DILocation(line: 2371, column: 12, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !2708, file: !3, line: 2370, column: 4)
!2714 = !DILocation(line: 2371, column: 10, scope: !2713)
!2715 = !DILocation(line: 2372, column: 27, scope: !2713)
!2716 = !DILocation(line: 2372, column: 32, scope: !2713)
!2717 = !DILocation(line: 2373, column: 34, scope: !2713)
!2718 = !DILocation(line: 2373, column: 51, scope: !2713)
!2719 = !DILocation(line: 2374, column: 34, scope: !2713)
!2720 = !DILocation(line: 2374, column: 48, scope: !2713)
!2721 = !DILocation(line: 2372, column: 14, scope: !2713)
!2722 = !DILocation(line: 2372, column: 11, scope: !2713)
!2723 = !DILocation(line: 2375, column: 4, scope: !2713)
!2724 = !DILocation(line: 2369, column: 25, scope: !2708)
!2725 = !DILocation(line: 2369, column: 2, scope: !2708)
!2726 = distinct !{!2726, !2711, !2727}
!2727 = !DILocation(line: 2375, column: 4, scope: !2705)
!2728 = !DILocation(line: 2377, column: 9, scope: !2698)
!2729 = !DILocation(line: 2377, column: 2, scope: !2698)
!2730 = !DILocation(line: 2385, column: 7, scope: !2571)
!2731 = !DILocation(line: 2385, column: 5, scope: !2571)
!2732 = !DILocation(line: 2384, column: 8, scope: !2571)
!2733 = !DILocation(line: 2386, column: 14, scope: !2571)
!2734 = !DILocation(line: 2386, column: 7, scope: !2571)
!2735 = !DILocalVariable(name: "h", scope: !2736, file: !3, line: 2395, type: !7)
!2736 = distinct !DILexicalBlock(scope: !2571, file: !3, line: 2389, column: 7)
!2737 = !DILocation(line: 2395, column: 15, scope: !2736)
!2738 = !DILocalVariable(name: "p", scope: !2736, file: !3, line: 2396, type: !1050)
!2739 = !DILocation(line: 2396, column: 23, scope: !2736)
!2740 = !DILocation(line: 2396, column: 51, scope: !2736)
!2741 = !DILocation(line: 2398, column: 2, scope: !2736)
!2742 = !DILocation(line: 2398, column: 10, scope: !2736)
!2743 = !DILocation(line: 2398, column: 9, scope: !2736)
!2744 = !DILocation(line: 2399, column: 10, scope: !2736)
!2745 = !DILocation(line: 2399, column: 12, scope: !2736)
!2746 = !DILocation(line: 2399, column: 22, scope: !2736)
!2747 = !DILocation(line: 2399, column: 20, scope: !2736)
!2748 = !DILocation(line: 2399, column: 18, scope: !2736)
!2749 = !DILocation(line: 2399, column: 6, scope: !2736)
!2750 = distinct !{!2750, !2741, !2746}
!2751 = !DILocation(line: 2401, column: 45, scope: !2736)
!2752 = !DILocation(line: 2401, column: 43, scope: !2736)
!2753 = !DILocation(line: 2401, column: 7, scope: !2736)
!2754 = !DILocation(line: 2402, column: 9, scope: !2736)
!2755 = !DILocation(line: 2402, column: 2, scope: !2736)
!2756 = !DILocation(line: 2408, column: 11, scope: !2757)
!2757 = distinct !DILexicalBlock(scope: !2571, file: !3, line: 2408, column: 11)
!2758 = !DILocation(line: 2408, column: 27, scope: !2757)
!2759 = !DILocation(line: 2408, column: 31, scope: !2757)
!2760 = !DILocation(line: 2408, column: 50, scope: !2757)
!2761 = !DILocation(line: 2408, column: 53, scope: !2757)
!2762 = !DILocation(line: 2408, column: 66, scope: !2757)
!2763 = !DILocation(line: 2408, column: 11, scope: !2571)
!2764 = !DILocation(line: 2410, column: 5, scope: !2765)
!2765 = distinct !DILexicalBlock(scope: !2757, file: !3, line: 2409, column: 2)
!2766 = !DILocation(line: 2410, column: 21, scope: !2765)
!2767 = !DILocation(line: 2411, column: 4, scope: !2765)
!2768 = !DILocation(line: 2413, column: 11, scope: !2769)
!2769 = distinct !DILexicalBlock(scope: !2571, file: !3, line: 2413, column: 11)
!2770 = !DILocation(line: 2413, column: 32, scope: !2769)
!2771 = !DILocation(line: 2413, column: 36, scope: !2769)
!2772 = !DILocation(line: 2413, column: 11, scope: !2571)
!2773 = !DILocation(line: 2414, column: 3, scope: !2769)
!2774 = !DILocation(line: 2414, column: 24, scope: !2769)
!2775 = !DILocation(line: 2414, column: 2, scope: !2769)
!2776 = !DILocation(line: 2418, column: 12, scope: !2571)
!2777 = !DILocation(line: 2419, column: 11, scope: !2571)
!2778 = !DILocation(line: 2419, column: 9, scope: !2571)
!2779 = !DILocation(line: 2420, column: 7, scope: !2571)
!2780 = !DILocation(line: 2428, column: 11, scope: !2781)
!2781 = distinct !DILexicalBlock(scope: !2571, file: !3, line: 2428, column: 11)
!2782 = !DILocation(line: 2429, column: 4, scope: !2781)
!2783 = !DILocation(line: 2429, column: 9, scope: !2781)
!2784 = !DILocation(line: 2428, column: 11, scope: !2571)
!2785 = !DILocation(line: 2431, column: 9, scope: !2786)
!2786 = distinct !DILexicalBlock(scope: !2781, file: !3, line: 2430, column: 2)
!2787 = !DILocation(line: 2432, column: 8, scope: !2786)
!2788 = !DILocation(line: 2432, column: 6, scope: !2786)
!2789 = !DILocation(line: 2434, column: 8, scope: !2790)
!2790 = distinct !DILexicalBlock(scope: !2786, file: !3, line: 2434, column: 8)
!2791 = !DILocation(line: 2434, column: 29, scope: !2790)
!2792 = !DILocation(line: 2434, column: 33, scope: !2790)
!2793 = !DILocation(line: 2434, column: 8, scope: !2786)
!2794 = !DILocation(line: 2435, column: 7, scope: !2790)
!2795 = !DILocation(line: 2435, column: 28, scope: !2790)
!2796 = !DILocation(line: 2435, column: 6, scope: !2790)
!2797 = !DILocation(line: 2439, column: 9, scope: !2786)
!2798 = !DILocation(line: 2440, column: 8, scope: !2786)
!2799 = !DILocation(line: 2440, column: 6, scope: !2786)
!2800 = !DILocation(line: 2441, column: 4, scope: !2786)
!2801 = !DILocation(line: 2443, column: 7, scope: !2571)
!2802 = !DILocation(line: 2455, column: 11, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2571, file: !3, line: 2455, column: 11)
!2804 = !DILocation(line: 2455, column: 11, scope: !2571)
!2805 = !DILocation(line: 2456, column: 10, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2803, file: !3, line: 2455, column: 28)
!2807 = !DILocation(line: 2456, column: 26, scope: !2806)
!2808 = !DILocation(line: 2457, column: 9, scope: !2806)
!2809 = !DILocation(line: 2460, column: 16, scope: !2803)
!2810 = !DILocation(line: 2460, column: 9, scope: !2803)
!2811 = !DILocation(line: 2464, column: 11, scope: !2812)
!2812 = distinct !DILexicalBlock(scope: !2571, file: !3, line: 2464, column: 11)
!2813 = !DILocation(line: 2464, column: 27, scope: !2812)
!2814 = !DILocation(line: 2464, column: 30, scope: !2812)
!2815 = !DILocation(line: 2464, column: 11, scope: !2571)
!2816 = !DILocation(line: 2466, column: 5, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !2812, file: !3, line: 2465, column: 2)
!2818 = !DILocation(line: 2466, column: 21, scope: !2817)
!2819 = !DILocation(line: 2467, column: 4, scope: !2817)
!2820 = !DILocation(line: 2472, column: 23, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !2812, file: !3, line: 2470, column: 2)
!2822 = !DILocation(line: 2472, column: 41, scope: !2821)
!2823 = !DILocation(line: 2472, column: 28, scope: !2821)
!2824 = !DILocation(line: 2473, column: 25, scope: !2821)
!2825 = !DILocation(line: 2473, column: 8, scope: !2821)
!2826 = !DILocation(line: 2473, column: 6, scope: !2821)
!2827 = !DILocation(line: 2474, column: 25, scope: !2821)
!2828 = !DILocation(line: 2474, column: 8, scope: !2821)
!2829 = !DILocation(line: 2474, column: 6, scope: !2821)
!2830 = !DILocation(line: 2475, column: 19, scope: !2821)
!2831 = !DILocation(line: 2475, column: 6, scope: !2821)
!2832 = !DILocation(line: 2472, column: 9, scope: !2821)
!2833 = !DILocation(line: 2477, column: 8, scope: !2834)
!2834 = distinct !DILexicalBlock(scope: !2821, file: !3, line: 2477, column: 8)
!2835 = !DILocation(line: 2477, column: 8, scope: !2821)
!2836 = !DILocation(line: 2479, column: 15, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2838, file: !3, line: 2479, column: 8)
!2838 = distinct !DILexicalBlock(scope: !2834, file: !3, line: 2478, column: 6)
!2839 = !DILocation(line: 2479, column: 13, scope: !2837)
!2840 = !DILocation(line: 2479, column: 20, scope: !2841)
!2841 = distinct !DILexicalBlock(scope: !2837, file: !3, line: 2479, column: 8)
!2842 = !DILocation(line: 2479, column: 24, scope: !2841)
!2843 = !DILocation(line: 2479, column: 22, scope: !2841)
!2844 = !DILocation(line: 2479, column: 8, scope: !2837)
!2845 = !DILocation(line: 2481, column: 27, scope: !2846)
!2846 = distinct !DILexicalBlock(scope: !2841, file: !3, line: 2480, column: 3)
!2847 = !DILocation(line: 2482, column: 41, scope: !2846)
!2848 = !DILocation(line: 2483, column: 41, scope: !2846)
!2849 = !DILocation(line: 2483, column: 58, scope: !2846)
!2850 = !DILocation(line: 2484, column: 41, scope: !2846)
!2851 = !DILocation(line: 2484, column: 55, scope: !2846)
!2852 = !DILocation(line: 2481, column: 14, scope: !2846)
!2853 = !DILocation(line: 2486, column: 29, scope: !2846)
!2854 = !DILocation(line: 2485, column: 9, scope: !2846)
!2855 = !DILocation(line: 2485, column: 7, scope: !2846)
!2856 = !DILocation(line: 2481, column: 10, scope: !2846)
!2857 = !DILocation(line: 2487, column: 3, scope: !2846)
!2858 = !DILocation(line: 2479, column: 56, scope: !2841)
!2859 = !DILocation(line: 2479, column: 8, scope: !2841)
!2860 = distinct !{!2860, !2844, !2861}
!2861 = !DILocation(line: 2487, column: 3, scope: !2837)
!2862 = !DILocation(line: 2489, column: 33, scope: !2838)
!2863 = !DILocation(line: 2489, column: 16, scope: !2838)
!2864 = !DILocation(line: 2489, column: 13, scope: !2838)
!2865 = !DILocation(line: 2490, column: 12, scope: !2838)
!2866 = !DILocation(line: 2490, column: 10, scope: !2838)
!2867 = !DILocation(line: 2491, column: 15, scope: !2838)
!2868 = !DILocation(line: 2491, column: 13, scope: !2838)
!2869 = !DILocation(line: 2492, column: 8, scope: !2838)
!2870 = !DILocation(line: 2495, column: 11, scope: !2821)
!2871 = !DILocation(line: 2495, column: 4, scope: !2821)
!2872 = !DILocation(line: 2500, column: 7, scope: !2571)
!2873 = !DILocation(line: 2503, column: 7, scope: !2502)
!2874 = !DILocation(line: 2503, column: 29, scope: !2502)
!2875 = !DILocation(line: 2503, column: 5, scope: !2502)
!2876 = !DILocation(line: 2504, column: 22, scope: !2502)
!2877 = !DILocation(line: 2504, column: 40, scope: !2502)
!2878 = !DILocation(line: 2504, column: 27, scope: !2502)
!2879 = !DILocation(line: 2504, column: 8, scope: !2502)
!2880 = !DILocation(line: 2505, column: 9, scope: !2502)
!2881 = !DILocation(line: 2505, column: 7, scope: !2502)
!2882 = !DILocation(line: 2506, column: 3, scope: !2502)
!2883 = !DILocation(line: 2506, column: 10, scope: !2884)
!2884 = distinct !DILexicalBlock(scope: !2885, file: !3, line: 2506, column: 3)
!2885 = distinct !DILexicalBlock(scope: !2502, file: !3, line: 2506, column: 3)
!2886 = !DILocation(line: 2506, column: 12, scope: !2884)
!2887 = !DILocation(line: 2506, column: 3, scope: !2885)
!2888 = !DILocation(line: 2508, column: 15, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2884, file: !3, line: 2507, column: 5)
!2890 = !DILocation(line: 2508, column: 19, scope: !2889)
!2891 = !DILocation(line: 2508, column: 7, scope: !2889)
!2892 = !DILocation(line: 2514, column: 8, scope: !2893)
!2893 = distinct !DILexicalBlock(scope: !2894, file: !3, line: 2514, column: 8)
!2894 = distinct !DILexicalBlock(scope: !2889, file: !3, line: 2509, column: 2)
!2895 = !DILocation(line: 2514, column: 10, scope: !2893)
!2896 = !DILocation(line: 2514, column: 8, scope: !2894)
!2897 = !DILocation(line: 2516, column: 12, scope: !2898)
!2898 = distinct !DILexicalBlock(scope: !2893, file: !3, line: 2515, column: 6)
!2899 = !DILocation(line: 2516, column: 10, scope: !2898)
!2900 = !DILocation(line: 2517, column: 8, scope: !2898)
!2901 = !DILocation(line: 2520, column: 25, scope: !2894)
!2902 = !DILocation(line: 2520, column: 48, scope: !2894)
!2903 = !DILocation(line: 2521, column: 32, scope: !2894)
!2904 = !DILocation(line: 2522, column: 32, scope: !2894)
!2905 = !DILocation(line: 2522, column: 46, scope: !2894)
!2906 = !DILocation(line: 2520, column: 12, scope: !2894)
!2907 = !DILocation(line: 2520, column: 9, scope: !2894)
!2908 = !DILocation(line: 2523, column: 4, scope: !2894)
!2909 = !DILocation(line: 2526, column: 11, scope: !2910)
!2910 = distinct !DILexicalBlock(scope: !2894, file: !3, line: 2526, column: 4)
!2911 = !DILocation(line: 2526, column: 9, scope: !2910)
!2912 = !DILocation(line: 2526, column: 16, scope: !2913)
!2913 = distinct !DILexicalBlock(scope: !2910, file: !3, line: 2526, column: 4)
!2914 = !DILocation(line: 2526, column: 20, scope: !2913)
!2915 = !DILocation(line: 2526, column: 18, scope: !2913)
!2916 = !DILocation(line: 2526, column: 4, scope: !2910)
!2917 = !DILocation(line: 2527, column: 27, scope: !2913)
!2918 = !DILocation(line: 2527, column: 56, scope: !2913)
!2919 = !DILocation(line: 2528, column: 34, scope: !2913)
!2920 = !DILocation(line: 2529, column: 34, scope: !2913)
!2921 = !DILocation(line: 2529, column: 48, scope: !2913)
!2922 = !DILocation(line: 2527, column: 14, scope: !2913)
!2923 = !DILocation(line: 2527, column: 11, scope: !2913)
!2924 = !DILocation(line: 2527, column: 6, scope: !2913)
!2925 = !DILocation(line: 2526, column: 37, scope: !2913)
!2926 = !DILocation(line: 2526, column: 4, scope: !2913)
!2927 = distinct !{!2927, !2916, !2928}
!2928 = !DILocation(line: 2529, column: 50, scope: !2910)
!2929 = !DILocation(line: 2530, column: 4, scope: !2894)
!2930 = !DILocation(line: 2533, column: 29, scope: !2894)
!2931 = !DILocation(line: 2533, column: 12, scope: !2894)
!2932 = !DILocation(line: 2533, column: 9, scope: !2894)
!2933 = !DILocation(line: 2534, column: 4, scope: !2894)
!2934 = !DILocation(line: 2537, column: 27, scope: !2894)
!2935 = !DILocation(line: 2537, column: 9, scope: !2894)
!2936 = !DILocation(line: 2538, column: 4, scope: !2894)
!2937 = !DILocation(line: 2542, column: 4, scope: !2894)
!2938 = !DILocation(line: 2545, column: 4, scope: !2894)
!2939 = !DILocation(line: 2546, column: 2, scope: !2894)
!2940 = !DILocation(line: 2547, column: 5, scope: !2889)
!2941 = !DILocation(line: 2506, column: 19, scope: !2884)
!2942 = !DILocation(line: 2506, column: 3, scope: !2884)
!2943 = distinct !{!2943, !2887, !2944}
!2944 = !DILocation(line: 2547, column: 5, scope: !2885)
!2945 = !DILocation(line: 2549, column: 10, scope: !2502)
!2946 = !DILocation(line: 2549, column: 3, scope: !2502)
!2947 = !DILocation(line: 2550, column: 1, scope: !2502)
!2948 = distinct !DISubprogram(name: "rhs_regno", scope: !385, file: !385, line: 1051, type: !2949, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!2949 = !DISubroutineType(types: !2950)
!2950 = !{!7, !2420}
!2951 = !DILocalVariable(name: "x", arg: 1, scope: !2948, file: !385, line: 1051, type: !2420)
!2952 = !DILocation(line: 1051, column: 22, scope: !2948)
!2953 = !DILocation(line: 1053, column: 10, scope: !2948)
!2954 = !DILocation(line: 1053, column: 3, scope: !2948)
!2955 = distinct !DISubprogram(name: "get_cse_reg_info", scope: !3, file: !3, line: 843, type: !2956, scopeLine: 844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!2956 = !DISubroutineType(types: !2957)
!2957 = !{!2208, !7}
!2958 = !DILocalVariable(name: "regno", arg: 1, scope: !2955, file: !3, line: 843, type: !7)
!2959 = !DILocation(line: 843, column: 32, scope: !2955)
!2960 = !DILocalVariable(name: "p", scope: !2955, file: !3, line: 845, type: !2208)
!2961 = !DILocation(line: 845, column: 24, scope: !2955)
!2962 = !DILocation(line: 845, column: 29, scope: !2955)
!2963 = !DILocation(line: 845, column: 48, scope: !2955)
!2964 = !DILocation(line: 849, column: 7, scope: !2965)
!2965 = distinct !DILexicalBlock(scope: !2955, file: !3, line: 849, column: 7)
!2966 = !DILocation(line: 849, column: 10, scope: !2965)
!2967 = !DILocation(line: 849, column: 23, scope: !2965)
!2968 = !DILocation(line: 849, column: 20, scope: !2965)
!2969 = !DILocation(line: 849, column: 7, scope: !2955)
!2970 = !DILocation(line: 850, column: 25, scope: !2965)
!2971 = !DILocation(line: 850, column: 5, scope: !2965)
!2972 = !DILocation(line: 852, column: 10, scope: !2955)
!2973 = !DILocation(line: 852, column: 3, scope: !2955)
!2974 = distinct !DISubprogram(name: "hash_rtx_string", scope: !3, file: !3, line: 2228, type: !2975, scopeLine: 2229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!2975 = !DISubroutineType(types: !2976)
!2976 = !{!7, !1116}
!2977 = !DILocalVariable(name: "ps", arg: 1, scope: !2974, file: !3, line: 2228, type: !1116)
!2978 = !DILocation(line: 2228, column: 30, scope: !2974)
!2979 = !DILocalVariable(name: "hash", scope: !2974, file: !3, line: 2230, type: !7)
!2980 = !DILocation(line: 2230, column: 12, scope: !2974)
!2981 = !DILocalVariable(name: "p", scope: !2974, file: !3, line: 2231, type: !1050)
!2982 = !DILocation(line: 2231, column: 24, scope: !2974)
!2983 = !DILocation(line: 2231, column: 52, scope: !2974)
!2984 = !DILocation(line: 2233, column: 7, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 2233, column: 7)
!2986 = !DILocation(line: 2233, column: 7, scope: !2974)
!2987 = !DILocation(line: 2234, column: 5, scope: !2985)
!2988 = !DILocation(line: 2234, column: 13, scope: !2985)
!2989 = !DILocation(line: 2234, column: 12, scope: !2985)
!2990 = !DILocation(line: 2235, column: 17, scope: !2985)
!2991 = !DILocation(line: 2235, column: 15, scope: !2985)
!2992 = !DILocation(line: 2235, column: 12, scope: !2985)
!2993 = distinct !{!2993, !2987, !2990}
!2994 = !DILocation(line: 2237, column: 10, scope: !2974)
!2995 = !DILocation(line: 2237, column: 3, scope: !2974)
!2996 = distinct !DISubprogram(name: "hash_rtx", scope: !3, file: !3, line: 2566, type: !2997, scopeLine: 2568, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!2997 = !DISubroutineType(types: !2998)
!2998 = !{!7, !2420, !5, !1054, !1054, !1052}
!2999 = !DILocalVariable(name: "x", arg: 1, scope: !2996, file: !3, line: 2566, type: !2420)
!3000 = !DILocation(line: 2566, column: 21, scope: !2996)
!3001 = !DILocalVariable(name: "mode", arg: 2, scope: !2996, file: !3, line: 2566, type: !5)
!3002 = !DILocation(line: 2566, column: 42, scope: !2996)
!3003 = !DILocalVariable(name: "do_not_record_p", arg: 3, scope: !2996, file: !3, line: 2566, type: !1054)
!3004 = !DILocation(line: 2566, column: 53, scope: !2996)
!3005 = !DILocalVariable(name: "hash_arg_in_memory_p", arg: 4, scope: !2996, file: !3, line: 2567, type: !1054)
!3006 = !DILocation(line: 2567, column: 9, scope: !2996)
!3007 = !DILocalVariable(name: "have_reg_qty", arg: 5, scope: !2996, file: !3, line: 2567, type: !1052)
!3008 = !DILocation(line: 2567, column: 36, scope: !2996)
!3009 = !DILocation(line: 2569, column: 23, scope: !2996)
!3010 = !DILocation(line: 2569, column: 26, scope: !2996)
!3011 = !DILocation(line: 2569, column: 32, scope: !2996)
!3012 = !DILocation(line: 2570, column: 23, scope: !2996)
!3013 = !DILocation(line: 2570, column: 45, scope: !2996)
!3014 = !DILocation(line: 2569, column: 10, scope: !2996)
!3015 = !DILocation(line: 2569, column: 3, scope: !2996)
!3016 = distinct !DISubprogram(name: "exp_equiv_p", scope: !3, file: !3, line: 2604, type: !3017, scopeLine: 2605, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!3017 = !DISubroutineType(types: !3018)
!3018 = !{!1053, !2420, !2420, !1053, !1052}
!3019 = !DILocalVariable(name: "x", arg: 1, scope: !3016, file: !3, line: 2604, type: !2420)
!3020 = !DILocation(line: 2604, column: 24, scope: !3016)
!3021 = !DILocalVariable(name: "y", arg: 2, scope: !3016, file: !3, line: 2604, type: !2420)
!3022 = !DILocation(line: 2604, column: 37, scope: !3016)
!3023 = !DILocalVariable(name: "validate", arg: 3, scope: !3016, file: !3, line: 2604, type: !1053)
!3024 = !DILocation(line: 2604, column: 44, scope: !3016)
!3025 = !DILocalVariable(name: "for_gcse", arg: 4, scope: !3016, file: !3, line: 2604, type: !1052)
!3026 = !DILocation(line: 2604, column: 59, scope: !3016)
!3027 = !DILocalVariable(name: "i", scope: !3016, file: !3, line: 2606, type: !1053)
!3028 = !DILocation(line: 2606, column: 7, scope: !3016)
!3029 = !DILocalVariable(name: "j", scope: !3016, file: !3, line: 2606, type: !1053)
!3030 = !DILocation(line: 2606, column: 10, scope: !3016)
!3031 = !DILocalVariable(name: "code", scope: !3016, file: !3, line: 2607, type: !384)
!3032 = !DILocation(line: 2607, column: 17, scope: !3016)
!3033 = !DILocalVariable(name: "fmt", scope: !3016, file: !3, line: 2608, type: !1116)
!3034 = !DILocation(line: 2608, column: 15, scope: !3016)
!3035 = !DILocation(line: 2612, column: 7, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !3016, file: !3, line: 2612, column: 7)
!3037 = !DILocation(line: 2612, column: 12, scope: !3036)
!3038 = !DILocation(line: 2612, column: 9, scope: !3036)
!3039 = !DILocation(line: 2612, column: 14, scope: !3036)
!3040 = !DILocation(line: 2612, column: 18, scope: !3036)
!3041 = !DILocation(line: 2612, column: 7, scope: !3016)
!3042 = !DILocation(line: 2613, column: 5, scope: !3036)
!3043 = !DILocation(line: 2615, column: 7, scope: !3044)
!3044 = distinct !DILexicalBlock(scope: !3016, file: !3, line: 2615, column: 7)
!3045 = !DILocation(line: 2615, column: 9, scope: !3044)
!3046 = !DILocation(line: 2615, column: 14, scope: !3044)
!3047 = !DILocation(line: 2615, column: 17, scope: !3044)
!3048 = !DILocation(line: 2615, column: 19, scope: !3044)
!3049 = !DILocation(line: 2615, column: 7, scope: !3016)
!3050 = !DILocation(line: 2616, column: 12, scope: !3044)
!3051 = !DILocation(line: 2616, column: 17, scope: !3044)
!3052 = !DILocation(line: 2616, column: 14, scope: !3044)
!3053 = !DILocation(line: 2616, column: 5, scope: !3044)
!3054 = !DILocation(line: 2618, column: 10, scope: !3016)
!3055 = !DILocation(line: 2618, column: 8, scope: !3016)
!3056 = !DILocation(line: 2619, column: 7, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !3016, file: !3, line: 2619, column: 7)
!3058 = !DILocation(line: 2619, column: 15, scope: !3057)
!3059 = !DILocation(line: 2619, column: 12, scope: !3057)
!3060 = !DILocation(line: 2619, column: 7, scope: !3016)
!3061 = !DILocation(line: 2620, column: 5, scope: !3057)
!3062 = !DILocation(line: 2623, column: 7, scope: !3063)
!3063 = distinct !DILexicalBlock(scope: !3016, file: !3, line: 2623, column: 7)
!3064 = !DILocation(line: 2623, column: 23, scope: !3063)
!3065 = !DILocation(line: 2623, column: 20, scope: !3063)
!3066 = !DILocation(line: 2623, column: 7, scope: !3016)
!3067 = !DILocation(line: 2624, column: 5, scope: !3063)
!3068 = !DILocation(line: 2627, column: 7, scope: !3069)
!3069 = distinct !DILexicalBlock(scope: !3016, file: !3, line: 2627, column: 7)
!3070 = !DILocation(line: 2627, column: 12, scope: !3069)
!3071 = !DILocation(line: 2627, column: 19, scope: !3069)
!3072 = !DILocation(line: 2627, column: 22, scope: !3069)
!3073 = !DILocation(line: 2627, column: 44, scope: !3069)
!3074 = !DILocation(line: 2627, column: 41, scope: !3069)
!3075 = !DILocation(line: 2627, column: 7, scope: !3016)
!3076 = !DILocation(line: 2628, column: 5, scope: !3069)
!3077 = !DILocation(line: 2630, column: 11, scope: !3016)
!3078 = !DILocation(line: 2630, column: 3, scope: !3016)
!3079 = !DILocation(line: 2637, column: 14, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3016, file: !3, line: 2631, column: 5)
!3081 = !DILocation(line: 2637, column: 19, scope: !3080)
!3082 = !DILocation(line: 2637, column: 16, scope: !3080)
!3083 = !DILocation(line: 2637, column: 7, scope: !3080)
!3084 = !DILocation(line: 2640, column: 14, scope: !3080)
!3085 = !DILocation(line: 2640, column: 29, scope: !3080)
!3086 = !DILocation(line: 2640, column: 26, scope: !3080)
!3087 = !DILocation(line: 2640, column: 7, scope: !3080)
!3088 = !DILocation(line: 2643, column: 14, scope: !3080)
!3089 = !DILocation(line: 2643, column: 29, scope: !3080)
!3090 = !DILocation(line: 2643, column: 26, scope: !3080)
!3091 = !DILocation(line: 2643, column: 7, scope: !3080)
!3092 = !DILocation(line: 2646, column: 11, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !3080, file: !3, line: 2646, column: 11)
!3094 = !DILocation(line: 2646, column: 11, scope: !3080)
!3095 = !DILocation(line: 2647, column: 9, scope: !3093)
!3096 = !DILocation(line: 2647, column: 22, scope: !3093)
!3097 = !DILocation(line: 2647, column: 19, scope: !3093)
!3098 = !DILocation(line: 2647, column: 2, scope: !3093)
!3099 = !DILocalVariable(name: "regno", scope: !3100, file: !3, line: 2650, type: !7)
!3100 = distinct !DILexicalBlock(scope: !3093, file: !3, line: 2649, column: 2)
!3101 = !DILocation(line: 2650, column: 17, scope: !3100)
!3102 = !DILocation(line: 2650, column: 25, scope: !3100)
!3103 = !DILocalVariable(name: "i", scope: !3100, file: !3, line: 2651, type: !7)
!3104 = !DILocation(line: 2651, column: 17, scope: !3100)
!3105 = !DILocalVariable(name: "endregno", scope: !3100, file: !3, line: 2652, type: !7)
!3106 = !DILocation(line: 2652, column: 17, scope: !3100)
!3107 = !DILocation(line: 2652, column: 28, scope: !3100)
!3108 = !DILocation(line: 2658, column: 8, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !3100, file: !3, line: 2658, column: 8)
!3110 = !DILocation(line: 2658, column: 31, scope: !3109)
!3111 = !DILocation(line: 2658, column: 28, scope: !3109)
!3112 = !DILocation(line: 2658, column: 8, scope: !3100)
!3113 = !DILocation(line: 2659, column: 6, scope: !3109)
!3114 = !DILocation(line: 2661, column: 10, scope: !3115)
!3115 = distinct !DILexicalBlock(scope: !3100, file: !3, line: 2661, column: 8)
!3116 = !DILocation(line: 2661, column: 8, scope: !3100)
!3117 = !DILocation(line: 2662, column: 6, scope: !3115)
!3118 = !DILocation(line: 2664, column: 13, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3100, file: !3, line: 2664, column: 4)
!3120 = !DILocation(line: 2664, column: 11, scope: !3119)
!3121 = !DILocation(line: 2664, column: 9, scope: !3119)
!3122 = !DILocation(line: 2664, column: 20, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !3119, file: !3, line: 2664, column: 4)
!3124 = !DILocation(line: 2664, column: 24, scope: !3123)
!3125 = !DILocation(line: 2664, column: 22, scope: !3123)
!3126 = !DILocation(line: 2664, column: 4, scope: !3119)
!3127 = !DILocation(line: 2665, column: 10, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3123, file: !3, line: 2665, column: 10)
!3129 = !DILocation(line: 2665, column: 30, scope: !3128)
!3130 = !DILocation(line: 2665, column: 27, scope: !3128)
!3131 = !DILocation(line: 2665, column: 10, scope: !3123)
!3132 = !DILocation(line: 2666, column: 8, scope: !3128)
!3133 = !DILocation(line: 2664, column: 35, scope: !3123)
!3134 = !DILocation(line: 2664, column: 4, scope: !3123)
!3135 = distinct !{!3135, !3126, !3136}
!3136 = !DILocation(line: 2666, column: 15, scope: !3119)
!3137 = !DILocation(line: 2668, column: 4, scope: !3100)
!3138 = !DILocation(line: 2672, column: 11, scope: !3139)
!3139 = distinct !DILexicalBlock(scope: !3080, file: !3, line: 2672, column: 11)
!3140 = !DILocation(line: 2672, column: 11, scope: !3080)
!3141 = !DILocation(line: 2676, column: 8, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !3143, file: !3, line: 2676, column: 8)
!3143 = distinct !DILexicalBlock(scope: !3139, file: !3, line: 2673, column: 2)
!3144 = !DILocation(line: 2676, column: 27, scope: !3142)
!3145 = !DILocation(line: 2676, column: 30, scope: !3142)
!3146 = !DILocation(line: 2676, column: 8, scope: !3143)
!3147 = !DILocation(line: 2677, column: 6, scope: !3142)
!3148 = !DILocation(line: 2692, column: 8, scope: !3149)
!3149 = distinct !DILexicalBlock(scope: !3143, file: !3, line: 2692, column: 8)
!3150 = !DILocation(line: 2692, column: 25, scope: !3149)
!3151 = !DILocation(line: 2692, column: 22, scope: !3149)
!3152 = !DILocation(line: 2692, column: 8, scope: !3143)
!3153 = !DILocation(line: 2693, column: 6, scope: !3149)
!3154 = !DILocation(line: 2694, column: 2, scope: !3143)
!3155 = !DILocation(line: 2695, column: 7, scope: !3080)
!3156 = !DILocation(line: 2705, column: 29, scope: !3080)
!3157 = !DILocation(line: 2705, column: 42, scope: !3080)
!3158 = !DILocation(line: 2706, column: 9, scope: !3080)
!3159 = !DILocation(line: 2706, column: 19, scope: !3080)
!3160 = !DILocation(line: 2705, column: 16, scope: !3080)
!3161 = !DILocation(line: 2707, column: 9, scope: !3080)
!3162 = !DILocation(line: 2707, column: 25, scope: !3080)
!3163 = !DILocation(line: 2707, column: 38, scope: !3080)
!3164 = !DILocation(line: 2708, column: 5, scope: !3080)
!3165 = !DILocation(line: 2708, column: 15, scope: !3080)
!3166 = !DILocation(line: 2707, column: 12, scope: !3080)
!3167 = !DILocation(line: 2709, column: 8, scope: !3080)
!3168 = !DILocation(line: 2709, column: 25, scope: !3080)
!3169 = !DILocation(line: 2709, column: 38, scope: !3080)
!3170 = !DILocation(line: 2710, column: 5, scope: !3080)
!3171 = !DILocation(line: 2710, column: 15, scope: !3080)
!3172 = !DILocation(line: 2709, column: 12, scope: !3080)
!3173 = !DILocation(line: 2711, column: 5, scope: !3080)
!3174 = !DILocation(line: 2711, column: 21, scope: !3080)
!3175 = !DILocation(line: 2711, column: 34, scope: !3080)
!3176 = !DILocation(line: 2712, column: 8, scope: !3080)
!3177 = !DILocation(line: 2712, column: 18, scope: !3080)
!3178 = !DILocation(line: 2711, column: 8, scope: !3080)
!3179 = !DILocation(line: 0, scope: !3080)
!3180 = !DILocation(line: 2705, column: 7, scope: !3080)
!3181 = !DILocation(line: 2719, column: 11, scope: !3182)
!3182 = distinct !DILexicalBlock(scope: !3080, file: !3, line: 2719, column: 11)
!3183 = !DILocation(line: 2719, column: 30, scope: !3182)
!3184 = !DILocation(line: 2719, column: 33, scope: !3182)
!3185 = !DILocation(line: 2719, column: 11, scope: !3080)
!3186 = !DILocation(line: 2720, column: 2, scope: !3182)
!3187 = !DILocation(line: 2722, column: 11, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3080, file: !3, line: 2722, column: 11)
!3189 = !DILocation(line: 2722, column: 27, scope: !3188)
!3190 = !DILocation(line: 2722, column: 24, scope: !3188)
!3191 = !DILocation(line: 2723, column: 4, scope: !3188)
!3192 = !DILocation(line: 2723, column: 15, scope: !3188)
!3193 = !DILocation(line: 2723, column: 42, scope: !3188)
!3194 = !DILocation(line: 2723, column: 7, scope: !3188)
!3195 = !DILocation(line: 2724, column: 4, scope: !3188)
!3196 = !DILocation(line: 2724, column: 15, scope: !3188)
!3197 = !DILocation(line: 2725, column: 8, scope: !3188)
!3198 = !DILocation(line: 2724, column: 7, scope: !3188)
!3199 = !DILocation(line: 2726, column: 4, scope: !3188)
!3200 = !DILocation(line: 2726, column: 7, scope: !3188)
!3201 = !DILocation(line: 2726, column: 38, scope: !3188)
!3202 = !DILocation(line: 2726, column: 35, scope: !3188)
!3203 = !DILocation(line: 2727, column: 4, scope: !3188)
!3204 = !DILocation(line: 2727, column: 7, scope: !3188)
!3205 = !DILocation(line: 2727, column: 40, scope: !3188)
!3206 = !DILocation(line: 2727, column: 37, scope: !3188)
!3207 = !DILocation(line: 2722, column: 11, scope: !3080)
!3208 = !DILocation(line: 2728, column: 2, scope: !3188)
!3209 = !DILocation(line: 2730, column: 11, scope: !3210)
!3210 = distinct !DILexicalBlock(scope: !3080, file: !3, line: 2730, column: 11)
!3211 = !DILocation(line: 2730, column: 11, scope: !3080)
!3212 = !DILocation(line: 2732, column: 13, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3214, file: !3, line: 2732, column: 4)
!3214 = distinct !DILexicalBlock(scope: !3210, file: !3, line: 2731, column: 2)
!3215 = !DILocation(line: 2732, column: 43, scope: !3213)
!3216 = !DILocation(line: 2732, column: 11, scope: !3213)
!3217 = !DILocation(line: 2732, column: 9, scope: !3213)
!3218 = !DILocation(line: 2732, column: 48, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3213, file: !3, line: 2732, column: 4)
!3220 = !DILocation(line: 2732, column: 50, scope: !3219)
!3221 = !DILocation(line: 2732, column: 4, scope: !3213)
!3222 = !DILocation(line: 2733, column: 25, scope: !3223)
!3223 = distinct !DILexicalBlock(scope: !3219, file: !3, line: 2733, column: 10)
!3224 = !DILocation(line: 2734, column: 11, scope: !3223)
!3225 = !DILocation(line: 2735, column: 11, scope: !3223)
!3226 = !DILocation(line: 2735, column: 21, scope: !3223)
!3227 = !DILocation(line: 2733, column: 12, scope: !3223)
!3228 = !DILocation(line: 2736, column: 3, scope: !3223)
!3229 = !DILocation(line: 2736, column: 14, scope: !3223)
!3230 = !DILocation(line: 2737, column: 7, scope: !3223)
!3231 = !DILocation(line: 2736, column: 6, scope: !3223)
!3232 = !DILocation(line: 2733, column: 10, scope: !3219)
!3233 = !DILocation(line: 2738, column: 8, scope: !3223)
!3234 = !DILocation(line: 2737, column: 43, scope: !3223)
!3235 = !DILocation(line: 2732, column: 57, scope: !3219)
!3236 = !DILocation(line: 2732, column: 4, scope: !3219)
!3237 = distinct !{!3237, !3221, !3238}
!3238 = !DILocation(line: 2738, column: 15, scope: !3213)
!3239 = !DILocation(line: 2739, column: 2, scope: !3214)
!3240 = !DILocation(line: 2741, column: 7, scope: !3080)
!3241 = !DILocation(line: 2744, column: 7, scope: !3080)
!3242 = !DILocation(line: 2750, column: 9, scope: !3016)
!3243 = !DILocation(line: 2750, column: 7, scope: !3016)
!3244 = !DILocation(line: 2751, column: 12, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3016, file: !3, line: 2751, column: 3)
!3246 = !DILocation(line: 2751, column: 34, scope: !3245)
!3247 = !DILocation(line: 2751, column: 10, scope: !3245)
!3248 = !DILocation(line: 2751, column: 8, scope: !3245)
!3249 = !DILocation(line: 2751, column: 39, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !3245, file: !3, line: 2751, column: 3)
!3251 = !DILocation(line: 2751, column: 41, scope: !3250)
!3252 = !DILocation(line: 2751, column: 3, scope: !3245)
!3253 = !DILocation(line: 2753, column: 15, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 2752, column: 5)
!3255 = !DILocation(line: 2753, column: 19, scope: !3254)
!3256 = !DILocation(line: 2753, column: 7, scope: !3254)
!3257 = !DILocation(line: 2756, column: 23, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !3259, file: !3, line: 2756, column: 8)
!3259 = distinct !DILexicalBlock(scope: !3254, file: !3, line: 2754, column: 2)
!3260 = !DILocation(line: 2756, column: 36, scope: !3258)
!3261 = !DILocation(line: 2757, column: 10, scope: !3258)
!3262 = !DILocation(line: 2757, column: 20, scope: !3258)
!3263 = !DILocation(line: 2756, column: 10, scope: !3258)
!3264 = !DILocation(line: 2756, column: 8, scope: !3259)
!3265 = !DILocation(line: 2758, column: 6, scope: !3258)
!3266 = !DILocation(line: 2759, column: 4, scope: !3259)
!3267 = !DILocation(line: 2762, column: 8, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3259, file: !3, line: 2762, column: 8)
!3269 = !DILocation(line: 2762, column: 26, scope: !3268)
!3270 = !DILocation(line: 2762, column: 23, scope: !3268)
!3271 = !DILocation(line: 2762, column: 8, scope: !3259)
!3272 = !DILocation(line: 2763, column: 6, scope: !3268)
!3273 = !DILocation(line: 2764, column: 11, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3259, file: !3, line: 2764, column: 4)
!3275 = !DILocation(line: 2764, column: 9, scope: !3274)
!3276 = !DILocation(line: 2764, column: 16, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3274, file: !3, line: 2764, column: 4)
!3278 = !DILocation(line: 2764, column: 20, scope: !3277)
!3279 = !DILocation(line: 2764, column: 18, scope: !3277)
!3280 = !DILocation(line: 2764, column: 4, scope: !3274)
!3281 = !DILocation(line: 2765, column: 25, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3277, file: !3, line: 2765, column: 10)
!3283 = !DILocation(line: 2765, column: 44, scope: !3282)
!3284 = !DILocation(line: 2766, column: 5, scope: !3282)
!3285 = !DILocation(line: 2766, column: 15, scope: !3282)
!3286 = !DILocation(line: 2765, column: 12, scope: !3282)
!3287 = !DILocation(line: 2765, column: 10, scope: !3277)
!3288 = !DILocation(line: 2767, column: 8, scope: !3282)
!3289 = !DILocation(line: 2766, column: 23, scope: !3282)
!3290 = !DILocation(line: 2764, column: 37, scope: !3277)
!3291 = !DILocation(line: 2764, column: 4, scope: !3277)
!3292 = distinct !{!3292, !3280, !3293}
!3293 = !DILocation(line: 2767, column: 15, scope: !3274)
!3294 = !DILocation(line: 2768, column: 4, scope: !3259)
!3295 = !DILocation(line: 2771, column: 16, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3259, file: !3, line: 2771, column: 8)
!3297 = !DILocation(line: 2771, column: 29, scope: !3296)
!3298 = !DILocation(line: 2771, column: 8, scope: !3296)
!3299 = !DILocation(line: 2771, column: 8, scope: !3259)
!3300 = !DILocation(line: 2772, column: 6, scope: !3296)
!3301 = !DILocation(line: 2773, column: 4, scope: !3259)
!3302 = !DILocation(line: 2776, column: 8, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3259, file: !3, line: 2776, column: 8)
!3304 = !DILocation(line: 2776, column: 23, scope: !3303)
!3305 = !DILocation(line: 2776, column: 20, scope: !3303)
!3306 = !DILocation(line: 2776, column: 8, scope: !3259)
!3307 = !DILocation(line: 2777, column: 6, scope: !3303)
!3308 = !DILocation(line: 2778, column: 4, scope: !3259)
!3309 = !DILocation(line: 2781, column: 8, scope: !3310)
!3310 = distinct !DILexicalBlock(scope: !3259, file: !3, line: 2781, column: 8)
!3311 = !DILocation(line: 2781, column: 24, scope: !3310)
!3312 = !DILocation(line: 2781, column: 21, scope: !3310)
!3313 = !DILocation(line: 2781, column: 8, scope: !3259)
!3314 = !DILocation(line: 2782, column: 6, scope: !3310)
!3315 = !DILocation(line: 2783, column: 4, scope: !3259)
!3316 = !DILocation(line: 2787, column: 4, scope: !3259)
!3317 = !DILocation(line: 2790, column: 4, scope: !3259)
!3318 = !DILocation(line: 2791, column: 2, scope: !3259)
!3319 = !DILocation(line: 2792, column: 5, scope: !3254)
!3320 = !DILocation(line: 2751, column: 48, scope: !3250)
!3321 = !DILocation(line: 2751, column: 3, scope: !3250)
!3322 = distinct !{!3322, !3252, !3323}
!3323 = !DILocation(line: 2792, column: 5, scope: !3245)
!3324 = !DILocation(line: 2794, column: 3, scope: !3016)
!3325 = !DILocation(line: 2795, column: 1, scope: !3016)
!3326 = distinct !DISubprogram(name: "end_hard_regno", scope: !3327, file: !3327, line: 290, type: !3328, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!3327 = !DIFile(filename: "./regs.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!3328 = !DISubroutineType(types: !3329)
!3329 = !{!7, !5, !7}
!3330 = !DILocalVariable(name: "mode", arg: 1, scope: !3326, file: !3327, line: 290, type: !5)
!3331 = !DILocation(line: 290, column: 35, scope: !3326)
!3332 = !DILocalVariable(name: "regno", arg: 2, scope: !3326, file: !3327, line: 290, type: !7)
!3333 = !DILocation(line: 290, column: 54, scope: !3326)
!3334 = !DILocation(line: 292, column: 10, scope: !3326)
!3335 = !DILocation(line: 292, column: 35, scope: !3326)
!3336 = !DILocation(line: 292, column: 18, scope: !3326)
!3337 = !DILocation(line: 292, column: 48, scope: !3326)
!3338 = !DILocation(line: 292, column: 16, scope: !3326)
!3339 = !DILocation(line: 292, column: 3, scope: !3326)
!3340 = distinct !DISubprogram(name: "cse_main", scope: !3, file: !3, line: 6458, type: !3341, scopeLine: 6459, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!3341 = !DISubroutineType(types: !3342)
!3342 = !{!1053, !1091, !1053}
!3343 = !DILocalVariable(name: "f", arg: 1, scope: !3340, file: !3, line: 6458, type: !1091)
!3344 = !DILocation(line: 6458, column: 15, scope: !3340)
!3345 = !DILocalVariable(name: "nregs", arg: 2, scope: !3340, file: !3, line: 6458, type: !1053)
!3346 = !DILocation(line: 6458, column: 39, scope: !3340)
!3347 = !DILocalVariable(name: "ebb_data", scope: !3340, file: !3, line: 6460, type: !3348)
!3348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cse_basic_block_data", file: !3, line: 536, size: 128, elements: !3349)
!3349 = !{!3350, !3351, !3352}
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "nsets", scope: !3348, file: !3, line: 539, baseType: !1053, size: 32)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "path_size", scope: !3348, file: !3, line: 541, baseType: !1053, size: 32, offset: 32)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !3348, file: !3, line: 543, baseType: !1055, size: 64, offset: 64)
!3353 = !DILocation(line: 6460, column: 31, scope: !3340)
!3354 = !DILocalVariable(name: "bb", scope: !3340, file: !3, line: 6461, type: !1059)
!3355 = !DILocation(line: 6461, column: 15, scope: !3340)
!3356 = !DILocalVariable(name: "rc_order", scope: !3340, file: !3, line: 6462, type: !1054)
!3357 = !DILocation(line: 6462, column: 8, scope: !3340)
!3358 = !DILocation(line: 6462, column: 19, scope: !3340)
!3359 = !DILocalVariable(name: "i", scope: !3340, file: !3, line: 6463, type: !1053)
!3360 = !DILocation(line: 6463, column: 7, scope: !3340)
!3361 = !DILocalVariable(name: "n_blocks", scope: !3340, file: !3, line: 6463, type: !1053)
!3362 = !DILocation(line: 6463, column: 10, scope: !3340)
!3363 = !DILocation(line: 6465, column: 3, scope: !3340)
!3364 = !DILocation(line: 6466, column: 3, scope: !3340)
!3365 = !DILocation(line: 6467, column: 3, scope: !3340)
!3366 = !DILocation(line: 6469, column: 13, scope: !3340)
!3367 = !DILocation(line: 6469, column: 27, scope: !3340)
!3368 = !DILocation(line: 6469, column: 3, scope: !3340)
!3369 = !DILocation(line: 6470, column: 22, scope: !3340)
!3370 = !DILocation(line: 6470, column: 3, scope: !3340)
!3371 = !DILocation(line: 6472, column: 19, scope: !3340)
!3372 = !DILocation(line: 6472, column: 12, scope: !3340)
!3373 = !DILocation(line: 6472, column: 17, scope: !3340)
!3374 = !DILocation(line: 6475, column: 19, scope: !3340)
!3375 = !DILocation(line: 6476, column: 21, scope: !3340)
!3376 = !DILocation(line: 6477, column: 22, scope: !3340)
!3377 = !DILocation(line: 6478, column: 30, scope: !3340)
!3378 = !DILocation(line: 6479, column: 33, scope: !3340)
!3379 = !DILocation(line: 6480, column: 12, scope: !3340)
!3380 = !DILocation(line: 6480, column: 22, scope: !3340)
!3381 = !DILocation(line: 6481, column: 12, scope: !3340)
!3382 = !DILocation(line: 6481, column: 18, scope: !3340)
!3383 = !DILocation(line: 6482, column: 15, scope: !3340)
!3384 = !DILocation(line: 6484, column: 3, scope: !3340)
!3385 = !DILocation(line: 6485, column: 3, scope: !3340)
!3386 = !DILocation(line: 6487, column: 19, scope: !3340)
!3387 = !DILocation(line: 6487, column: 17, scope: !3340)
!3388 = !DILocation(line: 6490, column: 45, scope: !3340)
!3389 = !DILocation(line: 6490, column: 30, scope: !3340)
!3390 = !DILocation(line: 6490, column: 28, scope: !3340)
!3391 = !DILocation(line: 6491, column: 17, scope: !3340)
!3392 = !DILocation(line: 6491, column: 3, scope: !3340)
!3393 = !DILocation(line: 6495, column: 52, scope: !3340)
!3394 = !DILocation(line: 6495, column: 14, scope: !3340)
!3395 = !DILocation(line: 6495, column: 12, scope: !3340)
!3396 = !DILocation(line: 6496, column: 5, scope: !3340)
!3397 = !DILocation(line: 6497, column: 3, scope: !3340)
!3398 = !DILocation(line: 6497, column: 10, scope: !3340)
!3399 = !DILocation(line: 6497, column: 14, scope: !3340)
!3400 = !DILocation(line: 6497, column: 12, scope: !3340)
!3401 = !DILocation(line: 6501, column: 7, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3340, file: !3, line: 6498, column: 5)
!3403 = !DILocation(line: 6503, column: 9, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3402, file: !3, line: 6502, column: 2)
!3405 = !DILocation(line: 6503, column: 7, scope: !3404)
!3406 = !DILocation(line: 6504, column: 2, scope: !3404)
!3407 = !DILocation(line: 6505, column: 14, scope: !3402)
!3408 = !DILocation(line: 6506, column: 7, scope: !3402)
!3409 = !DILocation(line: 6506, column: 10, scope: !3402)
!3410 = !DILocation(line: 6506, column: 14, scope: !3402)
!3411 = !DILocation(line: 6506, column: 12, scope: !3402)
!3412 = !DILocation(line: 0, scope: !3402)
!3413 = distinct !{!3413, !3401, !3414}
!3414 = !DILocation(line: 6506, column: 22, scope: !3402)
!3415 = !DILocation(line: 6509, column: 7, scope: !3402)
!3416 = !DILocation(line: 6509, column: 29, scope: !3402)
!3417 = !DILocation(line: 6509, column: 44, scope: !3402)
!3418 = !DILocation(line: 6509, column: 14, scope: !3402)
!3419 = !DILocation(line: 6512, column: 4, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3402, file: !3, line: 6510, column: 2)
!3421 = !DILocation(line: 6515, column: 17, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3420, file: !3, line: 6515, column: 8)
!3423 = !DILocation(line: 6515, column: 23, scope: !3422)
!3424 = !DILocation(line: 6515, column: 8, scope: !3420)
!3425 = !DILocation(line: 6516, column: 6, scope: !3422)
!3426 = distinct !{!3426, !3415, !3427}
!3427 = !DILocation(line: 6528, column: 2, scope: !3402)
!3428 = !DILocation(line: 6521, column: 23, scope: !3420)
!3429 = !DILocation(line: 6521, column: 29, scope: !3420)
!3430 = !DILocation(line: 6521, column: 12, scope: !3420)
!3431 = !DILocation(line: 6524, column: 8, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3420, file: !3, line: 6524, column: 8)
!3433 = !DILocation(line: 6524, column: 8, scope: !3420)
!3434 = !DILocation(line: 6525, column: 41, scope: !3432)
!3435 = !DILocation(line: 6525, column: 48, scope: !3432)
!3436 = !DILocation(line: 6525, column: 6, scope: !3432)
!3437 = !DILocation(line: 6527, column: 4, scope: !3420)
!3438 = distinct !{!3438, !3397, !3439}
!3439 = !DILocation(line: 6529, column: 5, scope: !3340)
!3440 = !DILocation(line: 6532, column: 3, scope: !3340)
!3441 = !DILocation(line: 6533, column: 9, scope: !3340)
!3442 = !DILocation(line: 6533, column: 3, scope: !3340)
!3443 = !DILocation(line: 6534, column: 18, scope: !3340)
!3444 = !DILocation(line: 6534, column: 9, scope: !3340)
!3445 = !DILocation(line: 6534, column: 3, scope: !3340)
!3446 = !DILocation(line: 6535, column: 3, scope: !3340)
!3447 = !DILocation(line: 6536, column: 9, scope: !3340)
!3448 = !DILocation(line: 6536, column: 3, scope: !3340)
!3449 = !DILocation(line: 6537, column: 15, scope: !3340)
!3450 = !DILocation(line: 6539, column: 7, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3340, file: !3, line: 6539, column: 7)
!3452 = !DILocation(line: 6539, column: 25, scope: !3451)
!3453 = !DILocation(line: 6539, column: 28, scope: !3451)
!3454 = !DILocation(line: 6539, column: 7, scope: !3340)
!3455 = !DILocation(line: 6540, column: 5, scope: !3451)
!3456 = !DILocation(line: 6541, column: 12, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !3451, file: !3, line: 6541, column: 12)
!3458 = !DILocation(line: 6541, column: 12, scope: !3451)
!3459 = !DILocation(line: 6542, column: 5, scope: !3457)
!3460 = !DILocation(line: 6544, column: 5, scope: !3457)
!3461 = !DILocation(line: 6545, column: 1, scope: !3340)
!3462 = distinct !DISubprogram(name: "init_cse_reg_info", scope: !3, file: !3, line: 775, type: !3463, scopeLine: 776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!3463 = !DISubroutineType(types: !3464)
!3464 = !{null, !7}
!3465 = !DILocalVariable(name: "nregs", arg: 1, scope: !3462, file: !3, line: 775, type: !7)
!3466 = !DILocation(line: 775, column: 33, scope: !3462)
!3467 = !DILocation(line: 778, column: 7, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3462, file: !3, line: 778, column: 7)
!3469 = !DILocation(line: 778, column: 15, scope: !3468)
!3470 = !DILocation(line: 778, column: 13, scope: !3468)
!3471 = !DILocation(line: 778, column: 7, scope: !3462)
!3472 = !DILocalVariable(name: "new_size", scope: !3473, file: !3, line: 780, type: !7)
!3473 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 779, column: 5)
!3474 = !DILocation(line: 780, column: 20, scope: !3473)
!3475 = !DILocation(line: 782, column: 11, scope: !3476)
!3476 = distinct !DILexicalBlock(scope: !3473, file: !3, line: 782, column: 11)
!3477 = !DILocation(line: 782, column: 35, scope: !3476)
!3478 = !DILocation(line: 782, column: 11, scope: !3473)
!3479 = !DILocation(line: 786, column: 16, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3476, file: !3, line: 783, column: 2)
!3481 = !DILocation(line: 787, column: 11, scope: !3480)
!3482 = !DILocation(line: 786, column: 13, scope: !3480)
!3483 = !DILocation(line: 789, column: 4, scope: !3480)
!3484 = !DILocation(line: 789, column: 11, scope: !3480)
!3485 = !DILocation(line: 789, column: 22, scope: !3480)
!3486 = !DILocation(line: 789, column: 20, scope: !3480)
!3487 = !DILocation(line: 790, column: 15, scope: !3480)
!3488 = distinct !{!3488, !3483, !3489}
!3489 = !DILocation(line: 790, column: 18, scope: !3480)
!3490 = !DILocation(line: 791, column: 2, scope: !3480)
!3491 = !DILocation(line: 796, column: 15, scope: !3492)
!3492 = distinct !DILexicalBlock(scope: !3476, file: !3, line: 793, column: 2)
!3493 = !DILocation(line: 796, column: 13, scope: !3492)
!3494 = !DILocation(line: 800, column: 11, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3473, file: !3, line: 800, column: 11)
!3496 = !DILocation(line: 800, column: 11, scope: !3473)
!3497 = !DILocation(line: 801, column: 8, scope: !3495)
!3498 = !DILocation(line: 801, column: 2, scope: !3495)
!3499 = !DILocation(line: 802, column: 28, scope: !3473)
!3500 = !DILocation(line: 802, column: 26, scope: !3473)
!3501 = !DILocation(line: 803, column: 33, scope: !3473)
!3502 = !DILocation(line: 803, column: 31, scope: !3473)
!3503 = !DILocation(line: 804, column: 46, scope: !3473)
!3504 = !DILocation(line: 805, column: 5, scope: !3473)
!3505 = !DILocation(line: 808, column: 7, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3462, file: !3, line: 808, column: 7)
!3507 = !DILocation(line: 808, column: 48, scope: !3506)
!3508 = !DILocation(line: 808, column: 46, scope: !3506)
!3509 = !DILocation(line: 808, column: 7, scope: !3462)
!3510 = !DILocalVariable(name: "old_timestamp", scope: !3511, file: !3, line: 810, type: !7)
!3511 = distinct !DILexicalBlock(scope: !3506, file: !3, line: 809, column: 5)
!3512 = !DILocation(line: 810, column: 20, scope: !3511)
!3513 = !DILocation(line: 810, column: 36, scope: !3511)
!3514 = !DILocation(line: 810, column: 59, scope: !3511)
!3515 = !DILocalVariable(name: "i", scope: !3511, file: !3, line: 811, type: !7)
!3516 = !DILocation(line: 811, column: 20, scope: !3511)
!3517 = !DILocation(line: 817, column: 16, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3511, file: !3, line: 817, column: 7)
!3519 = !DILocation(line: 817, column: 14, scope: !3518)
!3520 = !DILocation(line: 817, column: 12, scope: !3518)
!3521 = !DILocation(line: 817, column: 56, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3518, file: !3, line: 817, column: 7)
!3523 = !DILocation(line: 817, column: 60, scope: !3522)
!3524 = !DILocation(line: 817, column: 58, scope: !3522)
!3525 = !DILocation(line: 817, column: 7, scope: !3518)
!3526 = !DILocation(line: 818, column: 36, scope: !3522)
!3527 = !DILocation(line: 818, column: 2, scope: !3522)
!3528 = !DILocation(line: 818, column: 21, scope: !3522)
!3529 = !DILocation(line: 818, column: 24, scope: !3522)
!3530 = !DILocation(line: 818, column: 34, scope: !3522)
!3531 = !DILocation(line: 817, column: 68, scope: !3522)
!3532 = !DILocation(line: 817, column: 7, scope: !3522)
!3533 = distinct !{!3533, !3525, !3534}
!3534 = !DILocation(line: 818, column: 36, scope: !3518)
!3535 = !DILocation(line: 820, column: 48, scope: !3511)
!3536 = !DILocation(line: 820, column: 46, scope: !3511)
!3537 = !DILocation(line: 821, column: 5, scope: !3511)
!3538 = !DILocation(line: 822, column: 1, scope: !3462)
!3539 = distinct !DISubprogram(name: "VEC_basic_block_base_index", scope: !142, file: !142, line: 281, type: !3540, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!3540 = !DISubroutineType(types: !3541)
!3541 = !{!1059, !3542, !7}
!3542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3543, size: 64)
!3543 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1607)
!3544 = !DILocalVariable(name: "vec_", arg: 1, scope: !3539, file: !142, line: 281, type: !3542)
!3545 = !DILocation(line: 281, column: 1, scope: !3539)
!3546 = !DILocalVariable(name: "ix_", arg: 2, scope: !3539, file: !142, line: 281, type: !7)
!3547 = !DILocation(line: 0, scope: !3539)
!3548 = distinct !DISubprogram(name: "cse_find_path", scope: !3, file: !3, line: 6093, type: !3549, scopeLine: 6095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!3549 = !DISubroutineType(types: !3550)
!3550 = !{!1052, !1059, !3551, !1053}
!3551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3348, size: 64)
!3552 = !DILocalVariable(name: "first_bb", arg: 1, scope: !3548, file: !3, line: 6093, type: !1059)
!3553 = !DILocation(line: 6093, column: 28, scope: !3548)
!3554 = !DILocalVariable(name: "data", arg: 2, scope: !3548, file: !3, line: 6093, type: !3551)
!3555 = !DILocation(line: 6093, column: 67, scope: !3548)
!3556 = !DILocalVariable(name: "follow_jumps", arg: 3, scope: !3548, file: !3, line: 6094, type: !1053)
!3557 = !DILocation(line: 6094, column: 13, scope: !3548)
!3558 = !DILocalVariable(name: "bb", scope: !3548, file: !3, line: 6096, type: !1059)
!3559 = !DILocation(line: 6096, column: 15, scope: !3548)
!3560 = !DILocalVariable(name: "e", scope: !3548, file: !3, line: 6097, type: !1077)
!3561 = !DILocation(line: 6097, column: 8, scope: !3548)
!3562 = !DILocalVariable(name: "path_size", scope: !3548, file: !3, line: 6098, type: !1053)
!3563 = !DILocation(line: 6098, column: 7, scope: !3548)
!3564 = !DILocation(line: 6100, column: 12, scope: !3548)
!3565 = !DILocation(line: 6100, column: 38, scope: !3548)
!3566 = !DILocation(line: 6100, column: 48, scope: !3548)
!3567 = !DILocation(line: 6100, column: 3, scope: !3548)
!3568 = !DILocation(line: 6103, column: 15, scope: !3548)
!3569 = !DILocation(line: 6103, column: 21, scope: !3548)
!3570 = !DILocation(line: 6103, column: 13, scope: !3548)
!3571 = !DILocation(line: 6106, column: 7, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3548, file: !3, line: 6106, column: 7)
!3573 = !DILocation(line: 6106, column: 7, scope: !3548)
!3574 = !DILocation(line: 6107, column: 5, scope: !3572)
!3575 = !DILocation(line: 6111, column: 7, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3548, file: !3, line: 6111, column: 7)
!3577 = !DILocation(line: 6111, column: 17, scope: !3576)
!3578 = !DILocation(line: 6111, column: 7, scope: !3548)
!3579 = !DILocation(line: 6113, column: 17, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3576, file: !3, line: 6112, column: 5)
!3581 = !DILocation(line: 6114, column: 7, scope: !3580)
!3582 = !DILocation(line: 6118, column: 7, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3548, file: !3, line: 6118, column: 7)
!3584 = !DILocation(line: 6118, column: 17, scope: !3583)
!3585 = !DILocation(line: 6118, column: 7, scope: !3548)
!3586 = !DILocation(line: 6119, column: 34, scope: !3583)
!3587 = !DILocation(line: 6119, column: 5, scope: !3583)
!3588 = !DILocation(line: 6119, column: 11, scope: !3583)
!3589 = !DILocation(line: 6119, column: 25, scope: !3583)
!3590 = !DILocation(line: 6119, column: 29, scope: !3583)
!3591 = !DILocation(line: 6119, column: 32, scope: !3583)
!3592 = !DILocation(line: 6127, column: 7, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3583, file: !3, line: 6121, column: 5)
!3594 = !DILocation(line: 6127, column: 14, scope: !3593)
!3595 = !DILocation(line: 6127, column: 24, scope: !3593)
!3596 = !DILocalVariable(name: "last_bb_in_path", scope: !3597, file: !3, line: 6129, type: !1059)
!3597 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 6128, column: 2)
!3598 = !DILocation(line: 6129, column: 16, scope: !3597)
!3599 = !DILocalVariable(name: "previous_bb_in_path", scope: !3597, file: !3, line: 6129, type: !1059)
!3600 = !DILocation(line: 6129, column: 33, scope: !3597)
!3601 = !DILocalVariable(name: "e", scope: !3597, file: !3, line: 6130, type: !1077)
!3602 = !DILocation(line: 6130, column: 9, scope: !3597)
!3603 = !DILocation(line: 6132, column: 4, scope: !3597)
!3604 = !DILocation(line: 6133, column: 22, scope: !3597)
!3605 = !DILocation(line: 6133, column: 28, scope: !3597)
!3606 = !DILocation(line: 6133, column: 33, scope: !3597)
!3607 = !DILocation(line: 6133, column: 44, scope: !3597)
!3608 = !DILocation(line: 6133, column: 20, scope: !3597)
!3609 = !DILocation(line: 6134, column: 26, scope: !3597)
!3610 = !DILocation(line: 6134, column: 32, scope: !3597)
!3611 = !DILocation(line: 6134, column: 37, scope: !3597)
!3612 = !DILocation(line: 6134, column: 47, scope: !3597)
!3613 = !DILocation(line: 6134, column: 52, scope: !3597)
!3614 = !DILocation(line: 6134, column: 24, scope: !3597)
!3615 = !DILocation(line: 6138, column: 8, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !3597, file: !3, line: 6138, column: 8)
!3617 = !DILocation(line: 6138, column: 48, scope: !3616)
!3618 = !DILocation(line: 6139, column: 8, scope: !3616)
!3619 = !DILocation(line: 6139, column: 27, scope: !3616)
!3620 = !DILocation(line: 6139, column: 11, scope: !3616)
!3621 = !DILocation(line: 6140, column: 8, scope: !3616)
!3622 = !DILocation(line: 6140, column: 27, scope: !3616)
!3623 = !DILocation(line: 6140, column: 48, scope: !3616)
!3624 = !DILocation(line: 6140, column: 16, scope: !3616)
!3625 = !DILocation(line: 6140, column: 14, scope: !3616)
!3626 = !DILocation(line: 6141, column: 8, scope: !3616)
!3627 = !DILocation(line: 6141, column: 11, scope: !3616)
!3628 = !DILocation(line: 6141, column: 16, scope: !3616)
!3629 = !DILocation(line: 6141, column: 13, scope: !3616)
!3630 = !DILocation(line: 6138, column: 8, scope: !3597)
!3631 = !DILocation(line: 6143, column: 13, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3616, file: !3, line: 6142, column: 6)
!3633 = !DILocation(line: 6143, column: 50, scope: !3632)
!3634 = !DILocation(line: 6143, column: 11, scope: !3632)
!3635 = !DILocation(line: 6144, column: 12, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3632, file: !3, line: 6144, column: 12)
!3637 = !DILocation(line: 6144, column: 18, scope: !3636)
!3638 = !DILocation(line: 6144, column: 15, scope: !3636)
!3639 = !DILocation(line: 6145, column: 5, scope: !3636)
!3640 = !DILocation(line: 6145, column: 23, scope: !3636)
!3641 = !DILocation(line: 6145, column: 8, scope: !3636)
!3642 = !DILocation(line: 6157, column: 5, scope: !3636)
!3643 = !DILocation(line: 6157, column: 9, scope: !3636)
!3644 = !DILocation(line: 6144, column: 12, scope: !3632)
!3645 = !DILocation(line: 6159, column: 14, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3636, file: !3, line: 6158, column: 3)
!3647 = !DILocation(line: 6159, column: 40, scope: !3646)
!3648 = !DILocation(line: 6159, column: 44, scope: !3646)
!3649 = !DILocation(line: 6159, column: 5, scope: !3646)
!3650 = !DILocation(line: 6160, column: 34, scope: !3646)
!3651 = !DILocation(line: 6160, column: 5, scope: !3646)
!3652 = !DILocation(line: 6160, column: 11, scope: !3646)
!3653 = !DILocation(line: 6160, column: 25, scope: !3646)
!3654 = !DILocation(line: 6160, column: 29, scope: !3646)
!3655 = !DILocation(line: 6160, column: 32, scope: !3646)
!3656 = !DILocation(line: 6161, column: 5, scope: !3646)
!3657 = !DILocation(line: 6163, column: 6, scope: !3632)
!3658 = !DILocation(line: 6165, column: 4, scope: !3597)
!3659 = !DILocation(line: 6165, column: 10, scope: !3597)
!3660 = !DILocation(line: 6165, column: 15, scope: !3597)
!3661 = !DILocation(line: 6165, column: 26, scope: !3597)
!3662 = !DILocation(line: 6165, column: 29, scope: !3597)
!3663 = distinct !{!3663, !3592, !3664}
!3664 = !DILocation(line: 6166, column: 2, scope: !3593)
!3665 = !DILocation(line: 6169, column: 11, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 6169, column: 11)
!3667 = !DILocation(line: 6169, column: 21, scope: !3666)
!3668 = !DILocation(line: 6169, column: 11, scope: !3593)
!3669 = !DILocation(line: 6171, column: 14, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3666, file: !3, line: 6170, column: 2)
!3671 = !DILocation(line: 6172, column: 4, scope: !3670)
!3672 = !DILocation(line: 6177, column: 7, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3548, file: !3, line: 6177, column: 7)
!3674 = !DILocation(line: 6177, column: 7, scope: !3548)
!3675 = !DILocation(line: 6179, column: 12, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 6178, column: 5)
!3677 = !DILocation(line: 6179, column: 18, scope: !3676)
!3678 = !DILocation(line: 6179, column: 23, scope: !3676)
!3679 = !DILocation(line: 6179, column: 33, scope: !3676)
!3680 = !DILocation(line: 6179, column: 38, scope: !3676)
!3681 = !DILocation(line: 6179, column: 10, scope: !3676)
!3682 = !DILocation(line: 6180, column: 7, scope: !3676)
!3683 = !DILocation(line: 6180, column: 14, scope: !3676)
!3684 = !DILocation(line: 6180, column: 17, scope: !3676)
!3685 = !DILocation(line: 6180, column: 20, scope: !3676)
!3686 = !DILocation(line: 6180, column: 32, scope: !3676)
!3687 = !DILocation(line: 6180, column: 30, scope: !3676)
!3688 = !DILocation(line: 0, scope: !3676)
!3689 = !DILocation(line: 6182, column: 23, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 6182, column: 8)
!3691 = distinct !DILexicalBlock(scope: !3676, file: !3, line: 6181, column: 2)
!3692 = !DILocation(line: 6182, column: 8, scope: !3690)
!3693 = !DILocation(line: 6182, column: 8, scope: !3691)
!3694 = !DILocation(line: 6183, column: 28, scope: !3690)
!3695 = !DILocation(line: 6183, column: 10, scope: !3690)
!3696 = !DILocation(line: 6183, column: 8, scope: !3690)
!3697 = !DILocation(line: 6183, column: 6, scope: !3690)
!3698 = !DILocation(line: 6184, column: 13, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3690, file: !3, line: 6184, column: 13)
!3700 = !DILocation(line: 6184, column: 36, scope: !3699)
!3701 = !DILocation(line: 6185, column: 6, scope: !3699)
!3702 = !DILocation(line: 6185, column: 25, scope: !3699)
!3703 = !DILocation(line: 6185, column: 9, scope: !3699)
!3704 = !DILocation(line: 6184, column: 13, scope: !3690)
!3705 = !DILocation(line: 6189, column: 12, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3699, file: !3, line: 6186, column: 6)
!3707 = !DILocation(line: 6189, column: 10, scope: !3706)
!3708 = !DILocation(line: 6190, column: 28, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3706, file: !3, line: 6190, column: 12)
!3710 = !DILocation(line: 6190, column: 31, scope: !3709)
!3711 = !DILocation(line: 6190, column: 13, scope: !3709)
!3712 = !DILocation(line: 6190, column: 12, scope: !3706)
!3713 = !DILocation(line: 6191, column: 7, scope: !3709)
!3714 = !DILocation(line: 6191, column: 5, scope: !3709)
!3715 = !DILocation(line: 6191, column: 3, scope: !3709)
!3716 = !DILocation(line: 6192, column: 6, scope: !3706)
!3717 = !DILocation(line: 6194, column: 8, scope: !3699)
!3718 = !DILocation(line: 6196, column: 8, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3691, file: !3, line: 6196, column: 8)
!3720 = !DILocation(line: 6196, column: 10, scope: !3719)
!3721 = !DILocation(line: 6196, column: 13, scope: !3719)
!3722 = !DILocation(line: 6196, column: 16, scope: !3719)
!3723 = !DILocation(line: 6196, column: 24, scope: !3719)
!3724 = !DILocation(line: 6196, column: 21, scope: !3719)
!3725 = !DILocation(line: 6197, column: 8, scope: !3719)
!3726 = !DILocation(line: 6197, column: 26, scope: !3719)
!3727 = !DILocation(line: 6197, column: 29, scope: !3719)
!3728 = !DILocation(line: 6197, column: 11, scope: !3719)
!3729 = !DILocation(line: 6200, column: 8, scope: !3719)
!3730 = !DILocation(line: 6200, column: 12, scope: !3719)
!3731 = !DILocation(line: 6196, column: 8, scope: !3691)
!3732 = !DILocalVariable(name: "bb2", scope: !3733, file: !3, line: 6202, type: !1059)
!3733 = distinct !DILexicalBlock(scope: !3719, file: !3, line: 6201, column: 6)
!3734 = !DILocation(line: 6202, column: 20, scope: !3733)
!3735 = !DILocation(line: 6202, column: 26, scope: !3733)
!3736 = !DILocation(line: 6202, column: 29, scope: !3733)
!3737 = !DILocation(line: 6203, column: 17, scope: !3733)
!3738 = !DILocation(line: 6203, column: 43, scope: !3733)
!3739 = !DILocation(line: 6203, column: 48, scope: !3733)
!3740 = !DILocation(line: 6203, column: 8, scope: !3733)
!3741 = !DILocation(line: 6204, column: 37, scope: !3733)
!3742 = !DILocation(line: 6204, column: 8, scope: !3733)
!3743 = !DILocation(line: 6204, column: 14, scope: !3733)
!3744 = !DILocation(line: 6204, column: 28, scope: !3733)
!3745 = !DILocation(line: 6204, column: 32, scope: !3733)
!3746 = !DILocation(line: 6204, column: 35, scope: !3733)
!3747 = !DILocation(line: 6205, column: 13, scope: !3733)
!3748 = !DILocation(line: 6205, column: 11, scope: !3733)
!3749 = !DILocation(line: 6206, column: 6, scope: !3733)
!3750 = !DILocation(line: 6208, column: 9, scope: !3719)
!3751 = distinct !{!3751, !3682, !3752}
!3752 = !DILocation(line: 6209, column: 2, scope: !3676)
!3753 = !DILocation(line: 6210, column: 5, scope: !3676)
!3754 = !DILabel(scope: !3548, name: "done", file: !3, line: 6212)
!3755 = !DILocation(line: 6212, column: 1, scope: !3548)
!3756 = !DILocation(line: 6213, column: 21, scope: !3548)
!3757 = !DILocation(line: 6213, column: 3, scope: !3548)
!3758 = !DILocation(line: 6213, column: 9, scope: !3548)
!3759 = !DILocation(line: 6213, column: 19, scope: !3548)
!3760 = !DILocation(line: 6214, column: 10, scope: !3548)
!3761 = !DILocation(line: 6214, column: 20, scope: !3548)
!3762 = !DILocation(line: 6214, column: 3, scope: !3548)
!3763 = distinct !DISubprogram(name: "cse_prescan_path", scope: !3, file: !3, line: 6253, type: !3764, scopeLine: 6254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!3764 = !DISubroutineType(types: !3765)
!3765 = !{null, !3551}
!3766 = !DILocalVariable(name: "data", arg: 1, scope: !3763, file: !3, line: 6253, type: !3551)
!3767 = !DILocation(line: 6253, column: 48, scope: !3763)
!3768 = !DILocalVariable(name: "nsets", scope: !3763, file: !3, line: 6255, type: !1053)
!3769 = !DILocation(line: 6255, column: 7, scope: !3763)
!3770 = !DILocalVariable(name: "path_size", scope: !3763, file: !3, line: 6256, type: !1053)
!3771 = !DILocation(line: 6256, column: 7, scope: !3763)
!3772 = !DILocation(line: 6256, column: 19, scope: !3763)
!3773 = !DILocation(line: 6256, column: 25, scope: !3763)
!3774 = !DILocalVariable(name: "path_entry", scope: !3763, file: !3, line: 6257, type: !1053)
!3775 = !DILocation(line: 6257, column: 7, scope: !3763)
!3776 = !DILocation(line: 6260, column: 19, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 6260, column: 3)
!3778 = !DILocation(line: 6260, column: 8, scope: !3777)
!3779 = !DILocation(line: 6260, column: 24, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 6260, column: 3)
!3781 = !DILocation(line: 6260, column: 37, scope: !3780)
!3782 = !DILocation(line: 6260, column: 35, scope: !3780)
!3783 = !DILocation(line: 6260, column: 3, scope: !3777)
!3784 = !DILocalVariable(name: "bb", scope: !3785, file: !3, line: 6262, type: !1059)
!3785 = distinct !DILexicalBlock(scope: !3780, file: !3, line: 6261, column: 5)
!3786 = !DILocation(line: 6262, column: 19, scope: !3785)
!3787 = !DILocalVariable(name: "insn", scope: !3785, file: !3, line: 6263, type: !1091)
!3788 = !DILocation(line: 6263, column: 11, scope: !3785)
!3789 = !DILocation(line: 6265, column: 12, scope: !3785)
!3790 = !DILocation(line: 6265, column: 18, scope: !3785)
!3791 = !DILocation(line: 6265, column: 23, scope: !3785)
!3792 = !DILocation(line: 6265, column: 35, scope: !3785)
!3793 = !DILocation(line: 6265, column: 10, scope: !3785)
!3794 = !DILocation(line: 6267, column: 7, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3785, file: !3, line: 6267, column: 7)
!3796 = !DILocation(line: 6267, column: 7, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3795, file: !3, line: 6267, column: 7)
!3798 = !DILocation(line: 0, scope: !3797)
!3799 = !DILocation(line: 6269, column: 9, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3801, file: !3, line: 6269, column: 8)
!3801 = distinct !DILexicalBlock(scope: !3797, file: !3, line: 6268, column: 2)
!3802 = !DILocation(line: 6269, column: 8, scope: !3801)
!3803 = !DILocation(line: 6270, column: 6, scope: !3800)
!3804 = !DILocation(line: 6274, column: 8, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3801, file: !3, line: 6274, column: 8)
!3806 = !DILocation(line: 6274, column: 34, scope: !3805)
!3807 = !DILocation(line: 6274, column: 8, scope: !3801)
!3808 = !DILocation(line: 6275, column: 15, scope: !3805)
!3809 = !DILocation(line: 6275, column: 12, scope: !3805)
!3810 = !DILocation(line: 6275, column: 6, scope: !3805)
!3811 = !DILocation(line: 6277, column: 12, scope: !3805)
!3812 = !DILocation(line: 6278, column: 2, scope: !3801)
!3813 = distinct !{!3813, !3794, !3814}
!3814 = !DILocation(line: 6278, column: 2, scope: !3795)
!3815 = !DILocation(line: 6279, column: 5, scope: !3785)
!3816 = !DILocation(line: 6260, column: 58, scope: !3780)
!3817 = !DILocation(line: 6260, column: 3, scope: !3780)
!3818 = distinct !{!3818, !3783, !3819}
!3819 = !DILocation(line: 6279, column: 5, scope: !3777)
!3820 = !DILocation(line: 6281, column: 17, scope: !3763)
!3821 = !DILocation(line: 6281, column: 3, scope: !3763)
!3822 = !DILocation(line: 6281, column: 9, scope: !3763)
!3823 = !DILocation(line: 6281, column: 15, scope: !3763)
!3824 = !DILocation(line: 6282, column: 1, scope: !3763)
!3825 = distinct !DISubprogram(name: "cse_dump_path", scope: !3, file: !3, line: 6221, type: !3826, scopeLine: 6222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!3826 = !DISubroutineType(types: !3827)
!3827 = !{null, !3551, !1053, !3828}
!3828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3829, size: 64)
!3829 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3830, line: 7, baseType: !3831)
!3830 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!3831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3832, line: 49, size: 1728, elements: !3833)
!3832 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!3833 = !{!3834, !3835, !3836, !3837, !3838, !3839, !3840, !3841, !3842, !3843, !3844, !3845, !3846, !3849, !3851, !3852, !3853, !3856, !3857, !3858, !3859, !3862, !3864, !3867, !3870, !3871, !3872, !3873, !3874}
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3831, file: !3832, line: 51, baseType: !1053, size: 32)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3831, file: !3832, line: 54, baseType: !1184, size: 64, offset: 64)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3831, file: !3832, line: 55, baseType: !1184, size: 64, offset: 128)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3831, file: !3832, line: 56, baseType: !1184, size: 64, offset: 192)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3831, file: !3832, line: 57, baseType: !1184, size: 64, offset: 256)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3831, file: !3832, line: 58, baseType: !1184, size: 64, offset: 320)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3831, file: !3832, line: 59, baseType: !1184, size: 64, offset: 384)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3831, file: !3832, line: 60, baseType: !1184, size: 64, offset: 448)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3831, file: !3832, line: 61, baseType: !1184, size: 64, offset: 512)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3831, file: !3832, line: 64, baseType: !1184, size: 64, offset: 576)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3831, file: !3832, line: 65, baseType: !1184, size: 64, offset: 640)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3831, file: !3832, line: 66, baseType: !1184, size: 64, offset: 704)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3831, file: !3832, line: 68, baseType: !3847, size: 64, offset: 768)
!3847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3848, size: 64)
!3848 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !3832, line: 36, flags: DIFlagFwdDecl)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3831, file: !3832, line: 70, baseType: !3850, size: 64, offset: 832)
!3850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3831, size: 64)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3831, file: !3832, line: 72, baseType: !1053, size: 32, offset: 896)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3831, file: !3832, line: 73, baseType: !1053, size: 32, offset: 928)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3831, file: !3832, line: 74, baseType: !3854, size: 64, offset: 960)
!3854 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !3855, line: 152, baseType: !1048)
!3855 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3831, file: !3832, line: 77, baseType: !2334, size: 16, offset: 1024)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3831, file: !3832, line: 78, baseType: !1900, size: 8, offset: 1040)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3831, file: !3832, line: 79, baseType: !1279, size: 8, offset: 1048)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3831, file: !3832, line: 81, baseType: !3860, size: 64, offset: 1088)
!3860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3861, size: 64)
!3861 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !3832, line: 43, baseType: null)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3831, file: !3832, line: 89, baseType: !3863, size: 64, offset: 1152)
!3863 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !3855, line: 153, baseType: !1048)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3831, file: !3832, line: 91, baseType: !3865, size: 64, offset: 1216)
!3865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3866, size: 64)
!3866 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !3832, line: 37, flags: DIFlagFwdDecl)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3831, file: !3832, line: 92, baseType: !3868, size: 64, offset: 1280)
!3868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3869, size: 64)
!3869 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !3832, line: 38, flags: DIFlagFwdDecl)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3831, file: !3832, line: 93, baseType: !3850, size: 64, offset: 1344)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3831, file: !3832, line: 94, baseType: !1019, size: 64, offset: 1408)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3831, file: !3832, line: 95, baseType: !1538, size: 64, offset: 1472)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3831, file: !3832, line: 96, baseType: !1053, size: 32, offset: 1536)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3831, file: !3832, line: 98, baseType: !3875, size: 160, offset: 1568)
!3875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1118, size: 160, elements: !3876)
!3876 = !{!3877}
!3877 = !DISubrange(count: 20)
!3878 = !DILocalVariable(name: "data", arg: 1, scope: !3825, file: !3, line: 6221, type: !3551)
!3879 = !DILocation(line: 6221, column: 45, scope: !3825)
!3880 = !DILocalVariable(name: "nsets", arg: 2, scope: !3825, file: !3, line: 6221, type: !1053)
!3881 = !DILocation(line: 6221, column: 55, scope: !3825)
!3882 = !DILocalVariable(name: "f", arg: 3, scope: !3825, file: !3, line: 6221, type: !3828)
!3883 = !DILocation(line: 6221, column: 68, scope: !3825)
!3884 = !DILocalVariable(name: "path_entry", scope: !3825, file: !3, line: 6223, type: !1053)
!3885 = !DILocation(line: 6223, column: 7, scope: !3825)
!3886 = !DILocation(line: 6225, column: 12, scope: !3825)
!3887 = !DILocation(line: 6225, column: 51, scope: !3825)
!3888 = !DILocation(line: 6225, column: 3, scope: !3825)
!3889 = !DILocation(line: 6226, column: 19, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3825, file: !3, line: 6226, column: 3)
!3891 = !DILocation(line: 6226, column: 8, scope: !3890)
!3892 = !DILocation(line: 6226, column: 24, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 6226, column: 3)
!3894 = !DILocation(line: 6226, column: 37, scope: !3893)
!3895 = !DILocation(line: 6226, column: 43, scope: !3893)
!3896 = !DILocation(line: 6226, column: 35, scope: !3893)
!3897 = !DILocation(line: 6226, column: 3, scope: !3890)
!3898 = !DILocation(line: 6227, column: 14, scope: !3893)
!3899 = !DILocation(line: 6227, column: 25, scope: !3893)
!3900 = !DILocation(line: 6227, column: 31, scope: !3893)
!3901 = !DILocation(line: 6227, column: 36, scope: !3893)
!3902 = !DILocation(line: 6227, column: 48, scope: !3893)
!3903 = !DILocation(line: 6227, column: 53, scope: !3893)
!3904 = !DILocation(line: 6227, column: 5, scope: !3893)
!3905 = !DILocation(line: 6226, column: 64, scope: !3893)
!3906 = !DILocation(line: 6226, column: 3, scope: !3893)
!3907 = distinct !{!3907, !3897, !3908}
!3908 = !DILocation(line: 6227, column: 58, scope: !3890)
!3909 = !DILocation(line: 6228, column: 16, scope: !3825)
!3910 = !DILocation(line: 6228, column: 3, scope: !3825)
!3911 = !DILocation(line: 6229, column: 11, scope: !3825)
!3912 = !DILocation(line: 6229, column: 3, scope: !3825)
!3913 = !DILocation(line: 6230, column: 1, scope: !3825)
!3914 = distinct !DISubprogram(name: "cse_extended_basic_block", scope: !3, file: !3, line: 6287, type: !3764, scopeLine: 6288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!3915 = !DILocalVariable(name: "ebb_data", arg: 1, scope: !3914, file: !3, line: 6287, type: !3551)
!3916 = !DILocation(line: 6287, column: 56, scope: !3914)
!3917 = !DILocalVariable(name: "path_size", scope: !3914, file: !3, line: 6289, type: !1053)
!3918 = !DILocation(line: 6289, column: 7, scope: !3914)
!3919 = !DILocation(line: 6289, column: 19, scope: !3914)
!3920 = !DILocation(line: 6289, column: 29, scope: !3914)
!3921 = !DILocalVariable(name: "path_entry", scope: !3914, file: !3, line: 6290, type: !1053)
!3922 = !DILocation(line: 6290, column: 7, scope: !3914)
!3923 = !DILocalVariable(name: "num_insns", scope: !3914, file: !3, line: 6291, type: !1053)
!3924 = !DILocation(line: 6291, column: 7, scope: !3914)
!3925 = !DILocation(line: 6294, column: 15, scope: !3914)
!3926 = !DILocation(line: 6294, column: 13, scope: !3914)
!3927 = !DILocation(line: 6296, column: 3, scope: !3914)
!3928 = !DILocation(line: 6297, column: 37, scope: !3914)
!3929 = !DILocation(line: 6297, column: 47, scope: !3914)
!3930 = !DILocation(line: 6297, column: 55, scope: !3914)
!3931 = !DILocation(line: 6297, column: 21, scope: !3914)
!3932 = !DILocation(line: 6297, column: 19, scope: !3914)
!3933 = !DILocation(line: 6298, column: 39, scope: !3914)
!3934 = !DILocation(line: 6298, column: 49, scope: !3914)
!3935 = !DILocation(line: 6298, column: 54, scope: !3914)
!3936 = !DILocation(line: 6298, column: 64, scope: !3914)
!3937 = !DILocation(line: 6298, column: 69, scope: !3914)
!3938 = !DILocation(line: 6298, column: 22, scope: !3914)
!3939 = !DILocation(line: 6298, column: 20, scope: !3914)
!3940 = !DILocation(line: 6299, column: 19, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3914, file: !3, line: 6299, column: 3)
!3942 = !DILocation(line: 6299, column: 8, scope: !3941)
!3943 = !DILocation(line: 6299, column: 24, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3941, file: !3, line: 6299, column: 3)
!3945 = !DILocation(line: 6299, column: 37, scope: !3944)
!3946 = !DILocation(line: 6299, column: 35, scope: !3944)
!3947 = !DILocation(line: 6299, column: 3, scope: !3941)
!3948 = !DILocalVariable(name: "bb", scope: !3949, file: !3, line: 6301, type: !1059)
!3949 = distinct !DILexicalBlock(scope: !3944, file: !3, line: 6300, column: 5)
!3950 = !DILocation(line: 6301, column: 19, scope: !3949)
!3951 = !DILocalVariable(name: "insn", scope: !3949, file: !3, line: 6302, type: !1091)
!3952 = !DILocation(line: 6302, column: 11, scope: !3949)
!3953 = !DILocation(line: 6304, column: 12, scope: !3949)
!3954 = !DILocation(line: 6304, column: 22, scope: !3949)
!3955 = !DILocation(line: 6304, column: 27, scope: !3949)
!3956 = !DILocation(line: 6304, column: 39, scope: !3949)
!3957 = !DILocation(line: 6304, column: 10, scope: !3949)
!3958 = !DILocation(line: 6308, column: 27, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3949, file: !3, line: 6308, column: 11)
!3960 = !DILocation(line: 6308, column: 11, scope: !3959)
!3961 = !DILocation(line: 6308, column: 11, scope: !3949)
!3962 = !DILocalVariable(name: "def_rec", scope: !3963, file: !3, line: 6310, type: !2233)
!3963 = distinct !DILexicalBlock(scope: !3959, file: !3, line: 6309, column: 2)
!3964 = !DILocation(line: 6310, column: 12, scope: !3963)
!3965 = !DILocation(line: 6312, column: 43, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3963, file: !3, line: 6312, column: 4)
!3967 = !DILocation(line: 6312, column: 47, scope: !3966)
!3968 = !DILocation(line: 6312, column: 19, scope: !3966)
!3969 = !DILocation(line: 6312, column: 17, scope: !3966)
!3970 = !DILocation(line: 6312, column: 9, scope: !3966)
!3971 = !DILocation(line: 6312, column: 56, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3966, file: !3, line: 6312, column: 4)
!3973 = !DILocation(line: 6312, column: 55, scope: !3972)
!3974 = !DILocation(line: 6312, column: 4, scope: !3966)
!3975 = !DILocalVariable(name: "def", scope: !3976, file: !3, line: 6314, type: !2234)
!3976 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 6313, column: 6)
!3977 = !DILocation(line: 6314, column: 15, scope: !3976)
!3978 = !DILocation(line: 6314, column: 22, scope: !3976)
!3979 = !DILocation(line: 6314, column: 21, scope: !3976)
!3980 = !DILocation(line: 6315, column: 12, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3976, file: !3, line: 6315, column: 12)
!3982 = !DILocation(line: 6315, column: 31, scope: !3981)
!3983 = !DILocation(line: 6315, column: 12, scope: !3976)
!3984 = !DILocation(line: 6316, column: 15, scope: !3981)
!3985 = !DILocation(line: 6316, column: 33, scope: !3981)
!3986 = !DILocation(line: 6316, column: 3, scope: !3981)
!3987 = !DILocation(line: 6317, column: 6, scope: !3976)
!3988 = !DILocation(line: 6312, column: 72, scope: !3972)
!3989 = !DILocation(line: 6312, column: 4, scope: !3972)
!3990 = distinct !{!3990, !3974, !3991}
!3991 = !DILocation(line: 6317, column: 6, scope: !3966)
!3992 = !DILocation(line: 6318, column: 2, scope: !3963)
!3993 = !DILocation(line: 6320, column: 7, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3949, file: !3, line: 6320, column: 7)
!3995 = !DILocation(line: 6320, column: 7, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3994, file: !3, line: 6320, column: 7)
!3997 = !DILocation(line: 0, scope: !3996)
!3998 = !DILocation(line: 6322, column: 57, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3996, file: !3, line: 6321, column: 2)
!4000 = !DILocation(line: 6322, column: 32, scope: !3999)
!4001 = !DILocation(line: 6322, column: 30, scope: !3999)
!4002 = !DILocation(line: 6332, column: 8, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !3999, file: !3, line: 6332, column: 8)
!4004 = !DILocation(line: 6333, column: 8, scope: !4003)
!4005 = !DILocation(line: 6333, column: 20, scope: !4003)
!4006 = !DILocation(line: 6333, column: 25, scope: !4003)
!4007 = !DILocation(line: 6333, column: 23, scope: !4003)
!4008 = !DILocation(line: 6332, column: 8, scope: !3999)
!4009 = !DILocation(line: 6335, column: 8, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !4003, file: !3, line: 6334, column: 6)
!4011 = !DILocation(line: 6336, column: 18, scope: !4010)
!4012 = !DILocation(line: 6337, column: 6, scope: !4010)
!4013 = !DILocation(line: 6339, column: 8, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !3999, file: !3, line: 6339, column: 8)
!4015 = !DILocation(line: 6339, column: 8, scope: !3999)
!4016 = !DILocation(line: 6343, column: 12, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !4018, file: !3, line: 6343, column: 12)
!4018 = distinct !DILexicalBlock(scope: !4014, file: !3, line: 6340, column: 6)
!4019 = !DILocation(line: 6343, column: 12, scope: !4018)
!4020 = !DILocalVariable(name: "changed", scope: !4021, file: !3, line: 6345, type: !1052)
!4021 = distinct !DILexicalBlock(scope: !4017, file: !3, line: 6344, column: 3)
!4022 = !DILocation(line: 6345, column: 10, scope: !4021)
!4023 = !DILocation(line: 6346, column: 43, scope: !4021)
!4024 = !DILocation(line: 6346, column: 24, scope: !4021)
!4025 = !DILocation(line: 6346, column: 5, scope: !4021)
!4026 = !DILocation(line: 6346, column: 22, scope: !4021)
!4027 = !DILocation(line: 6348, column: 9, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4021, file: !3, line: 6348, column: 9)
!4029 = !DILocation(line: 6348, column: 9, scope: !4021)
!4030 = !DILocation(line: 6349, column: 24, scope: !4028)
!4031 = !DILocation(line: 6349, column: 7, scope: !4028)
!4032 = !DILocation(line: 6350, column: 3, scope: !4021)
!4033 = !DILocation(line: 6352, column: 18, scope: !4018)
!4034 = !DILocation(line: 6352, column: 8, scope: !4018)
!4035 = !DILocation(line: 6356, column: 12, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4018, file: !3, line: 6356, column: 12)
!4037 = !DILocation(line: 6356, column: 26, scope: !4036)
!4038 = !DILocation(line: 6356, column: 30, scope: !4036)
!4039 = !DILocation(line: 6357, column: 5, scope: !4036)
!4040 = !DILocation(line: 6357, column: 23, scope: !4036)
!4041 = !DILocation(line: 6358, column: 17, scope: !4036)
!4042 = !DILocation(line: 6358, column: 8, scope: !4036)
!4043 = !DILocation(line: 6357, column: 8, scope: !4036)
!4044 = !DILocation(line: 6356, column: 12, scope: !4018)
!4045 = !DILocation(line: 6359, column: 22, scope: !4036)
!4046 = !DILocation(line: 6359, column: 3, scope: !4036)
!4047 = !DILocation(line: 6387, column: 6, scope: !4018)
!4048 = !DILocation(line: 6388, column: 2, scope: !3999)
!4049 = distinct !{!4049, !3993, !4050}
!4050 = !DILocation(line: 6388, column: 2, scope: !3994)
!4051 = !DILocation(line: 6393, column: 11, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !3949, file: !3, line: 6393, column: 11)
!4053 = !DILocation(line: 6393, column: 36, scope: !4052)
!4054 = !DILocation(line: 6393, column: 59, scope: !4052)
!4055 = !DILocation(line: 6393, column: 39, scope: !4052)
!4056 = !DILocation(line: 6393, column: 11, scope: !3949)
!4057 = !DILocation(line: 6394, column: 39, scope: !4052)
!4058 = !DILocation(line: 6394, column: 21, scope: !4052)
!4059 = !DILocation(line: 6394, column: 18, scope: !4052)
!4060 = !DILocation(line: 6394, column: 2, scope: !4052)
!4061 = !DILocation(line: 6401, column: 11, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !3949, file: !3, line: 6401, column: 11)
!4063 = !DILocation(line: 6401, column: 24, scope: !4062)
!4064 = !DILocation(line: 6401, column: 34, scope: !4062)
!4065 = !DILocation(line: 6401, column: 22, scope: !4062)
!4066 = !DILocation(line: 6401, column: 11, scope: !3949)
!4067 = !DILocalVariable(name: "next_bb", scope: !4068, file: !3, line: 6403, type: !1059)
!4068 = distinct !DILexicalBlock(scope: !4062, file: !3, line: 6402, column: 2)
!4069 = !DILocation(line: 6403, column: 16, scope: !4068)
!4070 = !DILocation(line: 6403, column: 26, scope: !4068)
!4071 = !DILocation(line: 6403, column: 36, scope: !4068)
!4072 = !DILocation(line: 6403, column: 41, scope: !4068)
!4073 = !DILocation(line: 6403, column: 52, scope: !4068)
!4074 = !DILocation(line: 6403, column: 57, scope: !4068)
!4075 = !DILocation(line: 6404, column: 20, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !4068, file: !3, line: 6404, column: 8)
!4077 = !DILocation(line: 6404, column: 24, scope: !4076)
!4078 = !DILocation(line: 6404, column: 9, scope: !4076)
!4079 = !DILocation(line: 6404, column: 8, scope: !4068)
!4080 = !DILocation(line: 6406, column: 8, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4076, file: !3, line: 6405, column: 6)
!4082 = !DILocation(line: 6408, column: 14, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 6407, column: 3)
!4084 = !DILocation(line: 6413, column: 16, scope: !4083)
!4085 = !DILocation(line: 6414, column: 9, scope: !4083)
!4086 = !DILocation(line: 6414, column: 19, scope: !4083)
!4087 = !DILocation(line: 6414, column: 24, scope: !4083)
!4088 = !DILocation(line: 6414, column: 35, scope: !4083)
!4089 = !DILocation(line: 6414, column: 39, scope: !4083)
!4090 = !DILocation(line: 6413, column: 5, scope: !4083)
!4091 = !DILocation(line: 6415, column: 5, scope: !4083)
!4092 = !DILocation(line: 6415, column: 15, scope: !4083)
!4093 = !DILocation(line: 6415, column: 20, scope: !4083)
!4094 = !DILocation(line: 6415, column: 31, scope: !4083)
!4095 = !DILocation(line: 6415, column: 34, scope: !4083)
!4096 = !DILocation(line: 6416, column: 3, scope: !4083)
!4097 = !DILocation(line: 6417, column: 15, scope: !4081)
!4098 = !DILocation(line: 6417, column: 25, scope: !4081)
!4099 = !DILocation(line: 6417, column: 32, scope: !4081)
!4100 = !DILocation(line: 6417, column: 29, scope: !4081)
!4101 = distinct !{!4101, !4080, !4102}
!4102 = !DILocation(line: 6417, column: 42, scope: !4081)
!4103 = !DILocation(line: 6418, column: 30, scope: !4081)
!4104 = !DILocation(line: 6418, column: 8, scope: !4081)
!4105 = !DILocation(line: 6418, column: 18, scope: !4081)
!4106 = !DILocation(line: 6418, column: 28, scope: !4081)
!4107 = !DILocation(line: 6419, column: 6, scope: !4081)
!4108 = !DILocation(line: 6420, column: 2, scope: !4068)
!4109 = !DILocation(line: 6424, column: 14, scope: !3949)
!4110 = !DILocation(line: 6424, column: 12, scope: !3949)
!4111 = !DILocation(line: 6425, column: 11, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !3949, file: !3, line: 6425, column: 11)
!4113 = !DILocation(line: 6425, column: 24, scope: !4112)
!4114 = !DILocation(line: 6425, column: 34, scope: !4112)
!4115 = !DILocation(line: 6425, column: 22, scope: !4112)
!4116 = !DILocation(line: 6426, column: 4, scope: !4112)
!4117 = !DILocation(line: 6426, column: 7, scope: !4112)
!4118 = !DILocation(line: 6427, column: 4, scope: !4112)
!4119 = !DILocation(line: 6427, column: 7, scope: !4112)
!4120 = !DILocation(line: 6428, column: 4, scope: !4112)
!4121 = !DILocation(line: 6428, column: 23, scope: !4112)
!4122 = !DILocation(line: 6428, column: 7, scope: !4112)
!4123 = !DILocation(line: 6425, column: 11, scope: !3949)
!4124 = !DILocalVariable(name: "next_bb", scope: !4125, file: !3, line: 6430, type: !1059)
!4125 = distinct !DILexicalBlock(scope: !4112, file: !3, line: 6429, column: 2)
!4126 = !DILocation(line: 6430, column: 16, scope: !4125)
!4127 = !DILocation(line: 6430, column: 26, scope: !4125)
!4128 = !DILocation(line: 6430, column: 36, scope: !4125)
!4129 = !DILocation(line: 6430, column: 41, scope: !4125)
!4130 = !DILocation(line: 6430, column: 52, scope: !4125)
!4131 = !DILocation(line: 6430, column: 57, scope: !4125)
!4132 = !DILocalVariable(name: "taken", scope: !4125, file: !3, line: 6431, type: !1052)
!4133 = !DILocation(line: 6431, column: 9, scope: !4125)
!4134 = !DILocation(line: 6431, column: 18, scope: !4125)
!4135 = !DILocation(line: 6431, column: 29, scope: !4125)
!4136 = !DILocation(line: 6431, column: 47, scope: !4125)
!4137 = !DILocation(line: 6431, column: 26, scope: !4125)
!4138 = !DILocation(line: 6431, column: 17, scope: !4125)
!4139 = !DILocation(line: 6432, column: 23, scope: !4125)
!4140 = !DILocation(line: 6432, column: 29, scope: !4125)
!4141 = !DILocation(line: 6432, column: 4, scope: !4125)
!4142 = !DILocation(line: 6433, column: 2, scope: !4125)
!4143 = !DILocation(line: 6440, column: 5, scope: !3949)
!4144 = !DILocation(line: 6299, column: 58, scope: !3944)
!4145 = !DILocation(line: 6299, column: 3, scope: !3944)
!4146 = distinct !{!4146, !3947, !4147}
!4147 = !DILocation(line: 6440, column: 5, scope: !3941)
!4148 = !DILocation(line: 6442, column: 3, scope: !3914)
!4149 = !DILocation(line: 6444, column: 9, scope: !3914)
!4150 = !DILocation(line: 6444, column: 3, scope: !3914)
!4151 = !DILocation(line: 6445, column: 1, scope: !3914)
!4152 = distinct !DISubprogram(name: "delete_trivially_dead_insns", scope: !3, file: !3, line: 6800, type: !3341, scopeLine: 6801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!4153 = !DILocalVariable(name: "insns", arg: 1, scope: !4152, file: !3, line: 6800, type: !1091)
!4154 = !DILocation(line: 6800, column: 34, scope: !4152)
!4155 = !DILocalVariable(name: "nreg", arg: 2, scope: !4152, file: !3, line: 6800, type: !1053)
!4156 = !DILocation(line: 6800, column: 45, scope: !4152)
!4157 = !DILocalVariable(name: "counts", scope: !4152, file: !3, line: 6802, type: !1054)
!4158 = !DILocation(line: 6802, column: 8, scope: !4152)
!4159 = !DILocalVariable(name: "insn", scope: !4152, file: !3, line: 6803, type: !1091)
!4160 = !DILocation(line: 6803, column: 7, scope: !4152)
!4161 = !DILocalVariable(name: "prev", scope: !4152, file: !3, line: 6803, type: !1091)
!4162 = !DILocation(line: 6803, column: 13, scope: !4152)
!4163 = !DILocalVariable(name: "ndead", scope: !4152, file: !3, line: 6804, type: !1053)
!4164 = !DILocation(line: 6804, column: 7, scope: !4152)
!4165 = !DILocation(line: 6806, column: 3, scope: !4152)
!4166 = !DILocation(line: 6806, column: 3, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4168, file: !3, line: 6806, column: 3)
!4168 = distinct !DILexicalBlock(scope: !4152, file: !3, line: 6806, column: 3)
!4169 = !DILocation(line: 6806, column: 3, scope: !4168)
!4170 = !DILocation(line: 6808, column: 12, scope: !4152)
!4171 = !DILocation(line: 6808, column: 10, scope: !4152)
!4172 = !DILocation(line: 6809, column: 15, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4152, file: !3, line: 6809, column: 3)
!4174 = !DILocation(line: 6809, column: 13, scope: !4173)
!4175 = !DILocation(line: 6809, column: 8, scope: !4173)
!4176 = !DILocation(line: 6809, column: 22, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4173, file: !3, line: 6809, column: 3)
!4178 = !DILocation(line: 6809, column: 3, scope: !4173)
!4179 = !DILocation(line: 6810, column: 9, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 6810, column: 9)
!4181 = !DILocation(line: 6810, column: 9, scope: !4177)
!4182 = !DILocation(line: 6811, column: 24, scope: !4180)
!4183 = !DILocation(line: 6811, column: 30, scope: !4180)
!4184 = !DILocation(line: 6811, column: 7, scope: !4180)
!4185 = !DILocation(line: 6809, column: 35, scope: !4177)
!4186 = !DILocation(line: 6809, column: 33, scope: !4177)
!4187 = !DILocation(line: 6809, column: 3, scope: !4177)
!4188 = distinct !{!4188, !4178, !4189}
!4189 = !DILocation(line: 6811, column: 49, scope: !4173)
!4190 = !DILocation(line: 6820, column: 15, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4152, file: !3, line: 6820, column: 3)
!4192 = !DILocation(line: 6820, column: 13, scope: !4191)
!4193 = !DILocation(line: 6820, column: 8, scope: !4191)
!4194 = !DILocation(line: 6820, column: 33, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4191, file: !3, line: 6820, column: 3)
!4196 = !DILocation(line: 6820, column: 3, scope: !4191)
!4197 = !DILocalVariable(name: "live_insn", scope: !4198, file: !3, line: 6822, type: !1053)
!4198 = distinct !DILexicalBlock(scope: !4195, file: !3, line: 6821, column: 5)
!4199 = !DILocation(line: 6822, column: 11, scope: !4198)
!4200 = !DILocation(line: 6824, column: 14, scope: !4198)
!4201 = !DILocation(line: 6824, column: 12, scope: !4198)
!4202 = !DILocation(line: 6825, column: 12, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4198, file: !3, line: 6825, column: 11)
!4204 = !DILocation(line: 6825, column: 11, scope: !4198)
!4205 = !DILocation(line: 6826, column: 2, scope: !4203)
!4206 = !DILocation(line: 6828, column: 32, scope: !4198)
!4207 = !DILocation(line: 6828, column: 38, scope: !4198)
!4208 = !DILocation(line: 6828, column: 19, scope: !4198)
!4209 = !DILocation(line: 6828, column: 17, scope: !4198)
!4210 = !DILocation(line: 6833, column: 13, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4198, file: !3, line: 6833, column: 11)
!4212 = !DILocation(line: 6833, column: 23, scope: !4211)
!4213 = !DILocation(line: 6833, column: 26, scope: !4211)
!4214 = !DILocation(line: 6833, column: 11, scope: !4198)
!4215 = !DILocation(line: 6835, column: 21, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4211, file: !3, line: 6834, column: 2)
!4217 = !DILocation(line: 6835, column: 27, scope: !4216)
!4218 = !DILocation(line: 6835, column: 4, scope: !4216)
!4219 = !DILocation(line: 6836, column: 27, scope: !4216)
!4220 = !DILocation(line: 6836, column: 4, scope: !4216)
!4221 = !DILocation(line: 6837, column: 9, scope: !4216)
!4222 = !DILocation(line: 6838, column: 2, scope: !4216)
!4223 = !DILocation(line: 6839, column: 5, scope: !4198)
!4224 = !DILocation(line: 6820, column: 46, scope: !4195)
!4225 = !DILocation(line: 6820, column: 44, scope: !4195)
!4226 = !DILocation(line: 6820, column: 3, scope: !4195)
!4227 = distinct !{!4227, !4196, !4228}
!4228 = !DILocation(line: 6839, column: 5, scope: !4191)
!4229 = !DILocation(line: 6841, column: 7, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4152, file: !3, line: 6841, column: 7)
!4231 = !DILocation(line: 6841, column: 17, scope: !4230)
!4232 = !DILocation(line: 6841, column: 20, scope: !4230)
!4233 = !DILocation(line: 6841, column: 7, scope: !4152)
!4234 = !DILocation(line: 6842, column: 14, scope: !4230)
!4235 = !DILocation(line: 6843, column: 7, scope: !4230)
!4236 = !DILocation(line: 6842, column: 5, scope: !4230)
!4237 = !DILocation(line: 6845, column: 9, scope: !4152)
!4238 = !DILocation(line: 6845, column: 3, scope: !4152)
!4239 = !DILocation(line: 6846, column: 3, scope: !4152)
!4240 = !DILocation(line: 6846, column: 3, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4242, file: !3, line: 6846, column: 3)
!4242 = distinct !DILexicalBlock(scope: !4152, file: !3, line: 6846, column: 3)
!4243 = !DILocation(line: 6846, column: 3, scope: !4242)
!4244 = !DILocation(line: 6847, column: 10, scope: !4152)
!4245 = !DILocation(line: 6847, column: 3, scope: !4152)
!4246 = distinct !DISubprogram(name: "count_reg_usage", scope: !3, file: !3, line: 6580, type: !4247, scopeLine: 6581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!4247 = !DISubroutineType(types: !4248)
!4248 = !{null, !1091, !1054, !1091, !1053}
!4249 = !DILocalVariable(name: "x", arg: 1, scope: !4246, file: !3, line: 6580, type: !1091)
!4250 = !DILocation(line: 6580, column: 22, scope: !4246)
!4251 = !DILocalVariable(name: "counts", arg: 2, scope: !4246, file: !3, line: 6580, type: !1054)
!4252 = !DILocation(line: 6580, column: 30, scope: !4246)
!4253 = !DILocalVariable(name: "dest", arg: 3, scope: !4246, file: !3, line: 6580, type: !1091)
!4254 = !DILocation(line: 6580, column: 42, scope: !4246)
!4255 = !DILocalVariable(name: "incr", arg: 4, scope: !4246, file: !3, line: 6580, type: !1053)
!4256 = !DILocation(line: 6580, column: 52, scope: !4246)
!4257 = !DILocalVariable(name: "code", scope: !4246, file: !3, line: 6582, type: !384)
!4258 = !DILocation(line: 6582, column: 17, scope: !4246)
!4259 = !DILocalVariable(name: "note", scope: !4246, file: !3, line: 6583, type: !1091)
!4260 = !DILocation(line: 6583, column: 7, scope: !4246)
!4261 = !DILocalVariable(name: "fmt", scope: !4246, file: !3, line: 6584, type: !1116)
!4262 = !DILocation(line: 6584, column: 15, scope: !4246)
!4263 = !DILocalVariable(name: "i", scope: !4246, file: !3, line: 6585, type: !1053)
!4264 = !DILocation(line: 6585, column: 7, scope: !4246)
!4265 = !DILocalVariable(name: "j", scope: !4246, file: !3, line: 6585, type: !1053)
!4266 = !DILocation(line: 6585, column: 10, scope: !4246)
!4267 = !DILocation(line: 6587, column: 7, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4246, file: !3, line: 6587, column: 7)
!4269 = !DILocation(line: 6587, column: 9, scope: !4268)
!4270 = !DILocation(line: 6587, column: 7, scope: !4246)
!4271 = !DILocation(line: 6588, column: 5, scope: !4268)
!4272 = !DILocation(line: 6590, column: 18, scope: !4246)
!4273 = !DILocation(line: 6590, column: 16, scope: !4246)
!4274 = !DILocation(line: 6590, column: 3, scope: !4246)
!4275 = !DILocation(line: 6593, column: 11, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4277, file: !3, line: 6593, column: 11)
!4277 = distinct !DILexicalBlock(scope: !4246, file: !3, line: 6591, column: 5)
!4278 = !DILocation(line: 6593, column: 16, scope: !4276)
!4279 = !DILocation(line: 6593, column: 13, scope: !4276)
!4280 = !DILocation(line: 6593, column: 11, scope: !4277)
!4281 = !DILocation(line: 6594, column: 23, scope: !4276)
!4282 = !DILocation(line: 6594, column: 2, scope: !4276)
!4283 = !DILocation(line: 6594, column: 9, scope: !4276)
!4284 = !DILocation(line: 6594, column: 20, scope: !4276)
!4285 = !DILocation(line: 6595, column: 7, scope: !4277)
!4286 = !DILocation(line: 6606, column: 7, scope: !4277)
!4287 = !DILocation(line: 6611, column: 11, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4277, file: !3, line: 6611, column: 11)
!4289 = !DILocation(line: 6611, column: 11, scope: !4277)
!4290 = !DILocation(line: 6612, column: 19, scope: !4288)
!4291 = !DILocation(line: 6612, column: 42, scope: !4288)
!4292 = !DILocation(line: 6612, column: 60, scope: !4288)
!4293 = !DILocation(line: 6612, column: 2, scope: !4288)
!4294 = !DILocation(line: 6613, column: 7, scope: !4277)
!4295 = !DILocation(line: 6617, column: 12, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4277, file: !3, line: 6617, column: 11)
!4297 = !DILocation(line: 6617, column: 11, scope: !4277)
!4298 = !DILocation(line: 6618, column: 19, scope: !4296)
!4299 = !DILocation(line: 6618, column: 33, scope: !4296)
!4300 = !DILocation(line: 6618, column: 51, scope: !4296)
!4301 = !DILocation(line: 6618, column: 2, scope: !4296)
!4302 = !DILocation(line: 6619, column: 24, scope: !4277)
!4303 = !DILocation(line: 6619, column: 37, scope: !4277)
!4304 = !DILocation(line: 6620, column: 10, scope: !4277)
!4305 = !DILocation(line: 6620, column: 17, scope: !4277)
!4306 = !DILocation(line: 6620, column: 24, scope: !4277)
!4307 = !DILocation(line: 6621, column: 10, scope: !4277)
!4308 = !DILocation(line: 6619, column: 7, scope: !4277)
!4309 = !DILocation(line: 6622, column: 7, scope: !4277)
!4310 = !DILocation(line: 6625, column: 7, scope: !4277)
!4311 = !DILocation(line: 6632, column: 31, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4277, file: !3, line: 6632, column: 11)
!4313 = !DILocation(line: 6632, column: 11, scope: !4312)
!4314 = !DILocation(line: 6632, column: 11, scope: !4277)
!4315 = !DILocation(line: 6633, column: 9, scope: !4312)
!4316 = !DILocation(line: 6633, column: 7, scope: !4312)
!4317 = !DILocation(line: 6633, column: 2, scope: !4312)
!4318 = !DILocation(line: 6634, column: 11, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !4277, file: !3, line: 6634, column: 11)
!4320 = !DILocation(line: 6634, column: 16, scope: !4319)
!4321 = !DILocation(line: 6634, column: 11, scope: !4277)
!4322 = !DILocation(line: 6635, column: 19, scope: !4319)
!4323 = !DILocation(line: 6635, column: 49, scope: !4319)
!4324 = !DILocation(line: 6635, column: 57, scope: !4319)
!4325 = !DILocation(line: 6635, column: 63, scope: !4319)
!4326 = !DILocation(line: 6635, column: 2, scope: !4319)
!4327 = !DILocation(line: 6636, column: 24, scope: !4277)
!4328 = !DILocation(line: 6636, column: 37, scope: !4277)
!4329 = !DILocation(line: 6636, column: 45, scope: !4277)
!4330 = !DILocation(line: 6636, column: 51, scope: !4277)
!4331 = !DILocation(line: 6636, column: 7, scope: !4277)
!4332 = !DILocation(line: 6641, column: 41, scope: !4277)
!4333 = !DILocation(line: 6641, column: 14, scope: !4277)
!4334 = !DILocation(line: 6641, column: 12, scope: !4277)
!4335 = !DILocation(line: 6642, column: 11, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4277, file: !3, line: 6642, column: 11)
!4337 = !DILocation(line: 6642, column: 11, scope: !4277)
!4338 = !DILocalVariable(name: "eqv", scope: !4339, file: !3, line: 6644, type: !1091)
!4339 = distinct !DILexicalBlock(scope: !4336, file: !3, line: 6643, column: 2)
!4340 = !DILocation(line: 6644, column: 8, scope: !4339)
!4341 = !DILocation(line: 6644, column: 14, scope: !4339)
!4342 = !DILocation(line: 6646, column: 8, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4339, file: !3, line: 6646, column: 8)
!4344 = !DILocation(line: 6646, column: 23, scope: !4343)
!4345 = !DILocation(line: 6646, column: 8, scope: !4339)
!4346 = !DILocation(line: 6649, column: 6, scope: !4343)
!4347 = !DILocation(line: 6651, column: 20, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 6650, column: 8)
!4349 = !DILocation(line: 6651, column: 35, scope: !4348)
!4350 = !DILocation(line: 6651, column: 43, scope: !4348)
!4351 = !DILocation(line: 6651, column: 49, scope: !4348)
!4352 = !DILocation(line: 6651, column: 3, scope: !4348)
!4353 = !DILocation(line: 6652, column: 9, scope: !4348)
!4354 = !DILocation(line: 6652, column: 7, scope: !4348)
!4355 = !DILocation(line: 6653, column: 8, scope: !4348)
!4356 = !DILocation(line: 6654, column: 13, scope: !4343)
!4357 = !DILocation(line: 6654, column: 17, scope: !4343)
!4358 = !DILocation(line: 6654, column: 20, scope: !4343)
!4359 = !DILocation(line: 6654, column: 35, scope: !4343)
!4360 = !DILocation(line: 0, scope: !4343)
!4361 = distinct !{!4361, !4346, !4362}
!4362 = !DILocation(line: 6654, column: 47, scope: !4343)
!4363 = !DILocation(line: 6656, column: 23, scope: !4343)
!4364 = !DILocation(line: 6656, column: 28, scope: !4343)
!4365 = !DILocation(line: 6656, column: 36, scope: !4343)
!4366 = !DILocation(line: 6656, column: 42, scope: !4343)
!4367 = !DILocation(line: 6656, column: 6, scope: !4343)
!4368 = !DILocation(line: 6657, column: 2, scope: !4339)
!4369 = !DILocation(line: 6658, column: 7, scope: !4277)
!4370 = !DILocation(line: 6661, column: 11, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4277, file: !3, line: 6661, column: 11)
!4372 = !DILocation(line: 6661, column: 29, scope: !4371)
!4373 = !DILocation(line: 6662, column: 4, scope: !4371)
!4374 = !DILocation(line: 6662, column: 8, scope: !4371)
!4375 = !DILocation(line: 6662, column: 26, scope: !4371)
!4376 = !DILocation(line: 6662, column: 40, scope: !4371)
!4377 = !DILocation(line: 6662, column: 43, scope: !4371)
!4378 = !DILocation(line: 6662, column: 65, scope: !4371)
!4379 = !DILocation(line: 6665, column: 4, scope: !4371)
!4380 = !DILocation(line: 6665, column: 7, scope: !4371)
!4381 = !DILocation(line: 6665, column: 30, scope: !4371)
!4382 = !DILocation(line: 6661, column: 11, scope: !4277)
!4383 = !DILocation(line: 6666, column: 19, scope: !4371)
!4384 = !DILocation(line: 6666, column: 32, scope: !4371)
!4385 = !DILocation(line: 6666, column: 50, scope: !4371)
!4386 = !DILocation(line: 6666, column: 2, scope: !4371)
!4387 = !DILocation(line: 6668, column: 24, scope: !4277)
!4388 = !DILocation(line: 6668, column: 37, scope: !4277)
!4389 = !DILocation(line: 6668, column: 55, scope: !4277)
!4390 = !DILocation(line: 6668, column: 7, scope: !4277)
!4391 = !DILocation(line: 6669, column: 7, scope: !4277)
!4392 = !DILocation(line: 6674, column: 11, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4277, file: !3, line: 6674, column: 11)
!4394 = !DILocation(line: 6674, column: 11, scope: !4277)
!4395 = !DILocation(line: 6675, column: 7, scope: !4393)
!4396 = !DILocation(line: 6675, column: 2, scope: !4393)
!4397 = !DILocation(line: 6677, column: 16, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4277, file: !3, line: 6677, column: 7)
!4399 = !DILocation(line: 6677, column: 46, scope: !4398)
!4400 = !DILocation(line: 6677, column: 14, scope: !4398)
!4401 = !DILocation(line: 6677, column: 12, scope: !4398)
!4402 = !DILocation(line: 6677, column: 51, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4398, file: !3, line: 6677, column: 7)
!4404 = !DILocation(line: 6677, column: 53, scope: !4403)
!4405 = !DILocation(line: 6677, column: 7, scope: !4398)
!4406 = !DILocation(line: 6678, column: 19, scope: !4403)
!4407 = !DILocation(line: 6678, column: 46, scope: !4403)
!4408 = !DILocation(line: 6678, column: 54, scope: !4403)
!4409 = !DILocation(line: 6678, column: 60, scope: !4403)
!4410 = !DILocation(line: 6678, column: 2, scope: !4403)
!4411 = !DILocation(line: 6677, column: 60, scope: !4403)
!4412 = !DILocation(line: 6677, column: 7, scope: !4403)
!4413 = distinct !{!4413, !4405, !4414}
!4414 = !DILocation(line: 6678, column: 64, scope: !4398)
!4415 = !DILocation(line: 6679, column: 7, scope: !4277)
!4416 = !DILocation(line: 6682, column: 7, scope: !4277)
!4417 = !DILocation(line: 6685, column: 7, scope: !4277)
!4418 = !DILocation(line: 6688, column: 9, scope: !4246)
!4419 = !DILocation(line: 6688, column: 7, scope: !4246)
!4420 = !DILocation(line: 6689, column: 12, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4246, file: !3, line: 6689, column: 3)
!4422 = !DILocation(line: 6689, column: 34, scope: !4421)
!4423 = !DILocation(line: 6689, column: 10, scope: !4421)
!4424 = !DILocation(line: 6689, column: 8, scope: !4421)
!4425 = !DILocation(line: 6689, column: 39, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4421, file: !3, line: 6689, column: 3)
!4427 = !DILocation(line: 6689, column: 41, scope: !4426)
!4428 = !DILocation(line: 6689, column: 3, scope: !4421)
!4429 = !DILocation(line: 6691, column: 11, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !4431, file: !3, line: 6691, column: 11)
!4431 = distinct !DILexicalBlock(scope: !4426, file: !3, line: 6690, column: 5)
!4432 = !DILocation(line: 6691, column: 15, scope: !4430)
!4433 = !DILocation(line: 6691, column: 18, scope: !4430)
!4434 = !DILocation(line: 6691, column: 11, scope: !4431)
!4435 = !DILocation(line: 6692, column: 19, scope: !4430)
!4436 = !DILocation(line: 6692, column: 32, scope: !4430)
!4437 = !DILocation(line: 6692, column: 40, scope: !4430)
!4438 = !DILocation(line: 6692, column: 46, scope: !4430)
!4439 = !DILocation(line: 6692, column: 2, scope: !4430)
!4440 = !DILocation(line: 6693, column: 16, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4430, file: !3, line: 6693, column: 16)
!4442 = !DILocation(line: 6693, column: 20, scope: !4441)
!4443 = !DILocation(line: 6693, column: 23, scope: !4441)
!4444 = !DILocation(line: 6693, column: 16, scope: !4430)
!4445 = !DILocation(line: 6694, column: 11, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4441, file: !3, line: 6694, column: 2)
!4447 = !DILocation(line: 6694, column: 26, scope: !4446)
!4448 = !DILocation(line: 6694, column: 9, scope: !4446)
!4449 = !DILocation(line: 6694, column: 7, scope: !4446)
!4450 = !DILocation(line: 6694, column: 31, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4446, file: !3, line: 6694, column: 2)
!4452 = !DILocation(line: 6694, column: 33, scope: !4451)
!4453 = !DILocation(line: 6694, column: 2, scope: !4446)
!4454 = !DILocation(line: 6695, column: 21, scope: !4451)
!4455 = !DILocation(line: 6695, column: 40, scope: !4451)
!4456 = !DILocation(line: 6695, column: 48, scope: !4451)
!4457 = !DILocation(line: 6695, column: 54, scope: !4451)
!4458 = !DILocation(line: 6695, column: 4, scope: !4451)
!4459 = !DILocation(line: 6694, column: 40, scope: !4451)
!4460 = !DILocation(line: 6694, column: 2, scope: !4451)
!4461 = distinct !{!4461, !4453, !4462}
!4462 = !DILocation(line: 6695, column: 58, scope: !4446)
!4463 = !DILocation(line: 6696, column: 5, scope: !4431)
!4464 = !DILocation(line: 6689, column: 48, scope: !4426)
!4465 = !DILocation(line: 6689, column: 3, scope: !4426)
!4466 = distinct !{!4466, !4428, !4467}
!4467 = !DILocation(line: 6696, column: 5, scope: !4421)
!4468 = !DILocation(line: 6697, column: 1, scope: !4246)
!4469 = distinct !DISubprogram(name: "insn_live_p", scope: !3, file: !3, line: 6741, type: !4470, scopeLine: 6742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!4470 = !DISubroutineType(types: !4471)
!4471 = !{!1052, !1091, !1054}
!4472 = !DILocalVariable(name: "insn", arg: 1, scope: !4469, file: !3, line: 6741, type: !1091)
!4473 = !DILocation(line: 6741, column: 18, scope: !4469)
!4474 = !DILocalVariable(name: "counts", arg: 2, scope: !4469, file: !3, line: 6741, type: !1054)
!4475 = !DILocation(line: 6741, column: 29, scope: !4469)
!4476 = !DILocalVariable(name: "i", scope: !4469, file: !3, line: 6743, type: !1053)
!4477 = !DILocation(line: 6743, column: 7, scope: !4469)
!4478 = !DILocation(line: 6744, column: 27, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4469, file: !3, line: 6744, column: 7)
!4480 = !DILocation(line: 6744, column: 7, scope: !4479)
!4481 = !DILocation(line: 6744, column: 7, scope: !4469)
!4482 = !DILocation(line: 6745, column: 5, scope: !4479)
!4483 = !DILocation(line: 6746, column: 12, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4479, file: !3, line: 6746, column: 12)
!4485 = !DILocation(line: 6746, column: 38, scope: !4484)
!4486 = !DILocation(line: 6746, column: 12, scope: !4479)
!4487 = !DILocation(line: 6747, column: 24, scope: !4484)
!4488 = !DILocation(line: 6747, column: 40, scope: !4484)
!4489 = !DILocation(line: 6747, column: 46, scope: !4484)
!4490 = !DILocation(line: 6747, column: 12, scope: !4484)
!4491 = !DILocation(line: 6747, column: 5, scope: !4484)
!4492 = !DILocation(line: 6748, column: 12, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4484, file: !3, line: 6748, column: 12)
!4494 = !DILocation(line: 6748, column: 38, scope: !4493)
!4495 = !DILocation(line: 6748, column: 12, scope: !4484)
!4496 = !DILocation(line: 6750, column: 16, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4498, file: !3, line: 6750, column: 7)
!4498 = distinct !DILexicalBlock(scope: !4493, file: !3, line: 6749, column: 5)
!4499 = !DILocation(line: 6750, column: 44, scope: !4497)
!4500 = !DILocation(line: 6750, column: 14, scope: !4497)
!4501 = !DILocation(line: 6750, column: 12, scope: !4497)
!4502 = !DILocation(line: 6750, column: 49, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4497, file: !3, line: 6750, column: 7)
!4504 = !DILocation(line: 6750, column: 51, scope: !4503)
!4505 = !DILocation(line: 6750, column: 7, scope: !4497)
!4506 = !DILocalVariable(name: "elt", scope: !4507, file: !3, line: 6752, type: !1091)
!4507 = distinct !DILexicalBlock(scope: !4503, file: !3, line: 6751, column: 2)
!4508 = !DILocation(line: 6752, column: 8, scope: !4507)
!4509 = !DILocation(line: 6752, column: 14, scope: !4507)
!4510 = !DILocation(line: 6754, column: 8, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4507, file: !3, line: 6754, column: 8)
!4512 = !DILocation(line: 6754, column: 23, scope: !4511)
!4513 = !DILocation(line: 6754, column: 8, scope: !4507)
!4514 = !DILocation(line: 6756, column: 24, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 6756, column: 12)
!4516 = distinct !DILexicalBlock(scope: !4511, file: !3, line: 6755, column: 6)
!4517 = !DILocation(line: 6756, column: 29, scope: !4515)
!4518 = !DILocation(line: 6756, column: 35, scope: !4515)
!4519 = !DILocation(line: 6756, column: 12, scope: !4515)
!4520 = !DILocation(line: 6756, column: 12, scope: !4516)
!4521 = !DILocation(line: 6757, column: 3, scope: !4515)
!4522 = !DILocation(line: 6758, column: 6, scope: !4516)
!4523 = !DILocation(line: 6759, column: 13, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4511, file: !3, line: 6759, column: 13)
!4525 = !DILocation(line: 6759, column: 28, scope: !4524)
!4526 = !DILocation(line: 6759, column: 39, scope: !4524)
!4527 = !DILocation(line: 6759, column: 42, scope: !4524)
!4528 = !DILocation(line: 6759, column: 57, scope: !4524)
!4529 = !DILocation(line: 6759, column: 13, scope: !4511)
!4530 = !DILocation(line: 6760, column: 6, scope: !4524)
!4531 = !DILocation(line: 6761, column: 2, scope: !4507)
!4532 = !DILocation(line: 6750, column: 58, scope: !4503)
!4533 = !DILocation(line: 6750, column: 7, scope: !4503)
!4534 = distinct !{!4534, !4505, !4535}
!4535 = !DILocation(line: 6761, column: 2, scope: !4497)
!4536 = !DILocation(line: 6762, column: 7, scope: !4498)
!4537 = !DILocation(line: 6764, column: 12, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4493, file: !3, line: 6764, column: 12)
!4539 = !DILocation(line: 6764, column: 12, scope: !4493)
!4540 = !DILocalVariable(name: "next", scope: !4541, file: !3, line: 6766, type: !1091)
!4541 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 6765, column: 5)
!4542 = !DILocation(line: 6766, column: 11, scope: !4541)
!4543 = !DILocation(line: 6768, column: 19, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4541, file: !3, line: 6768, column: 7)
!4545 = !DILocation(line: 6768, column: 17, scope: !4544)
!4546 = !DILocation(line: 6768, column: 12, scope: !4544)
!4547 = !DILocation(line: 6768, column: 37, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4544, file: !3, line: 6768, column: 7)
!4549 = !DILocation(line: 6768, column: 7, scope: !4544)
!4550 = !DILocation(line: 6769, column: 6, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4548, file: !3, line: 6769, column: 6)
!4552 = !DILocation(line: 6769, column: 6, scope: !4548)
!4553 = !DILocation(line: 6770, column: 4, scope: !4551)
!4554 = !DILocation(line: 6771, column: 12, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4551, file: !3, line: 6771, column: 11)
!4556 = !DILocation(line: 6771, column: 11, scope: !4551)
!4557 = !DILocation(line: 6772, column: 4, scope: !4555)
!4558 = !DILocation(line: 6773, column: 11, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 6773, column: 11)
!4560 = !DILocation(line: 6773, column: 44, scope: !4559)
!4561 = !DILocation(line: 6773, column: 41, scope: !4559)
!4562 = !DILocation(line: 6773, column: 11, scope: !4555)
!4563 = !DILocation(line: 6774, column: 4, scope: !4559)
!4564 = !DILocation(line: 6768, column: 50, scope: !4548)
!4565 = !DILocation(line: 6768, column: 48, scope: !4548)
!4566 = !DILocation(line: 6768, column: 7, scope: !4548)
!4567 = distinct !{!4567, !4549, !4568}
!4568 = !DILocation(line: 6774, column: 11, scope: !4544)
!4569 = !DILocation(line: 6779, column: 26, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4541, file: !3, line: 6779, column: 11)
!4571 = !DILocation(line: 6779, column: 69, scope: !4570)
!4572 = !DILocation(line: 6779, column: 11, scope: !4570)
!4573 = !DILocation(line: 6779, column: 11, scope: !4541)
!4574 = !DILocation(line: 6781, column: 35, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4570, file: !3, line: 6780, column: 2)
!4576 = !DILocation(line: 6781, column: 4, scope: !4575)
!4577 = !DILocation(line: 6781, column: 33, scope: !4575)
!4578 = !DILocation(line: 6782, column: 20, scope: !4575)
!4579 = !DILocation(line: 6782, column: 4, scope: !4575)
!4580 = !DILocation(line: 6783, column: 2, scope: !4575)
!4581 = !DILocation(line: 6785, column: 7, scope: !4541)
!4582 = !DILocation(line: 6788, column: 5, scope: !4538)
!4583 = !DILocation(line: 6789, column: 1, scope: !4469)
!4584 = distinct !DISubprogram(name: "gate_handle_cse", scope: !3, file: !3, line: 7228, type: !2352, scopeLine: 7229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!4585 = !DILocation(line: 7230, column: 10, scope: !4584)
!4586 = !DILocation(line: 7230, column: 19, scope: !4584)
!4587 = !DILocation(line: 7230, column: 3, scope: !4584)
!4588 = distinct !DISubprogram(name: "rest_of_handle_cse", scope: !3, file: !3, line: 7234, type: !2356, scopeLine: 7235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!4589 = !DILocalVariable(name: "tem", scope: !4588, file: !3, line: 7236, type: !1053)
!4590 = !DILocation(line: 7236, column: 7, scope: !4588)
!4591 = !DILocation(line: 7238, column: 7, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4588, file: !3, line: 7238, column: 7)
!4593 = !DILocation(line: 7238, column: 7, scope: !4588)
!4594 = !DILocation(line: 7239, column: 21, scope: !4592)
!4595 = !DILocation(line: 7239, column: 32, scope: !4592)
!4596 = !DILocation(line: 7239, column: 5, scope: !4592)
!4597 = !DILocation(line: 7241, column: 19, scope: !4588)
!4598 = !DILocation(line: 7241, column: 33, scope: !4588)
!4599 = !DILocation(line: 7241, column: 9, scope: !4588)
!4600 = !DILocation(line: 7241, column: 7, scope: !4588)
!4601 = !DILocation(line: 7245, column: 23, scope: !4588)
!4602 = !DILocation(line: 7245, column: 49, scope: !4588)
!4603 = !DILocation(line: 7245, column: 53, scope: !4588)
!4604 = !DILocation(line: 7245, column: 52, scope: !4588)
!4605 = !DILocation(line: 0, scope: !4588)
!4606 = !DILocation(line: 7245, column: 20, scope: !4588)
!4607 = !DILocation(line: 7247, column: 7, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4588, file: !3, line: 7247, column: 7)
!4609 = !DILocation(line: 7247, column: 11, scope: !4608)
!4610 = !DILocation(line: 7247, column: 7, scope: !4588)
!4611 = !DILocation(line: 7249, column: 7, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 7248, column: 5)
!4613 = !DILocation(line: 7249, column: 7, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4615, file: !3, line: 7249, column: 7)
!4615 = distinct !DILexicalBlock(scope: !4612, file: !3, line: 7249, column: 7)
!4616 = !DILocation(line: 7249, column: 7, scope: !4615)
!4617 = !DILocation(line: 7250, column: 28, scope: !4612)
!4618 = !DILocation(line: 7250, column: 7, scope: !4612)
!4619 = !DILocation(line: 7251, column: 7, scope: !4612)
!4620 = !DILocation(line: 7252, column: 7, scope: !4612)
!4621 = !DILocation(line: 7252, column: 7, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 7252, column: 7)
!4623 = distinct !DILexicalBlock(scope: !4612, file: !3, line: 7252, column: 7)
!4624 = !DILocation(line: 7252, column: 7, scope: !4623)
!4625 = !DILocation(line: 7253, column: 5, scope: !4612)
!4626 = !DILocation(line: 7254, column: 12, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 7254, column: 12)
!4628 = !DILocation(line: 7254, column: 16, scope: !4627)
!4629 = !DILocation(line: 7254, column: 21, scope: !4627)
!4630 = !DILocation(line: 7254, column: 24, scope: !4627)
!4631 = !DILocation(line: 7254, column: 33, scope: !4627)
!4632 = !DILocation(line: 7254, column: 12, scope: !4608)
!4633 = !DILocation(line: 7255, column: 5, scope: !4627)
!4634 = !DILocation(line: 7257, column: 3, scope: !4588)
!4635 = distinct !DISubprogram(name: "gate_handle_cse2", scope: !3, file: !3, line: 7284, type: !2352, scopeLine: 7285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!4636 = !DILocation(line: 7286, column: 10, scope: !4635)
!4637 = !DILocation(line: 7286, column: 19, scope: !4635)
!4638 = !DILocation(line: 7286, column: 23, scope: !4635)
!4639 = !DILocation(line: 7286, column: 26, scope: !4635)
!4640 = !DILocation(line: 0, scope: !4635)
!4641 = !DILocation(line: 7286, column: 3, scope: !4635)
!4642 = distinct !DISubprogram(name: "rest_of_handle_cse2", scope: !3, file: !3, line: 7291, type: !2356, scopeLine: 7292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!4643 = !DILocalVariable(name: "tem", scope: !4642, file: !3, line: 7293, type: !1053)
!4644 = !DILocation(line: 7293, column: 7, scope: !4642)
!4645 = !DILocation(line: 7295, column: 7, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4642, file: !3, line: 7295, column: 7)
!4647 = !DILocation(line: 7295, column: 7, scope: !4642)
!4648 = !DILocation(line: 7296, column: 21, scope: !4646)
!4649 = !DILocation(line: 7296, column: 32, scope: !4646)
!4650 = !DILocation(line: 7296, column: 5, scope: !4646)
!4651 = !DILocation(line: 7298, column: 19, scope: !4642)
!4652 = !DILocation(line: 7298, column: 33, scope: !4642)
!4653 = !DILocation(line: 7298, column: 9, scope: !4642)
!4654 = !DILocation(line: 7298, column: 7, scope: !4642)
!4655 = !DILocation(line: 7304, column: 3, scope: !4642)
!4656 = !DILocation(line: 7306, column: 32, scope: !4642)
!4657 = !DILocation(line: 7306, column: 46, scope: !4642)
!4658 = !DILocation(line: 7306, column: 3, scope: !4642)
!4659 = !DILocation(line: 7308, column: 7, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4642, file: !3, line: 7308, column: 7)
!4661 = !DILocation(line: 7308, column: 11, scope: !4660)
!4662 = !DILocation(line: 7308, column: 7, scope: !4642)
!4663 = !DILocation(line: 7310, column: 7, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 7309, column: 5)
!4665 = !DILocation(line: 7310, column: 7, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4667, file: !3, line: 7310, column: 7)
!4667 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 7310, column: 7)
!4668 = !DILocation(line: 7310, column: 7, scope: !4667)
!4669 = !DILocation(line: 7311, column: 28, scope: !4664)
!4670 = !DILocation(line: 7311, column: 7, scope: !4664)
!4671 = !DILocation(line: 7312, column: 7, scope: !4664)
!4672 = !DILocation(line: 7313, column: 7, scope: !4664)
!4673 = !DILocation(line: 7313, column: 7, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 7313, column: 7)
!4675 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 7313, column: 7)
!4676 = !DILocation(line: 7313, column: 7, scope: !4675)
!4677 = !DILocation(line: 7314, column: 5, scope: !4664)
!4678 = !DILocation(line: 7315, column: 12, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 7315, column: 12)
!4680 = !DILocation(line: 7315, column: 16, scope: !4679)
!4681 = !DILocation(line: 7315, column: 12, scope: !4660)
!4682 = !DILocation(line: 7316, column: 5, scope: !4679)
!4683 = !DILocation(line: 7318, column: 20, scope: !4642)
!4684 = !DILocation(line: 7319, column: 3, scope: !4642)
!4685 = distinct !DISubprogram(name: "gate_handle_cse_after_global_opts", scope: !3, file: !3, line: 7346, type: !2352, scopeLine: 7347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!4686 = !DILocation(line: 7348, column: 10, scope: !4685)
!4687 = !DILocation(line: 7348, column: 19, scope: !4685)
!4688 = !DILocation(line: 7348, column: 23, scope: !4685)
!4689 = !DILocation(line: 7348, column: 26, scope: !4685)
!4690 = !DILocation(line: 0, scope: !4685)
!4691 = !DILocation(line: 7348, column: 3, scope: !4685)
!4692 = distinct !DISubprogram(name: "rest_of_handle_cse_after_global_opts", scope: !3, file: !3, line: 7353, type: !2356, scopeLine: 7354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!4693 = !DILocalVariable(name: "save_cfj", scope: !4692, file: !3, line: 7355, type: !1053)
!4694 = !DILocation(line: 7355, column: 7, scope: !4692)
!4695 = !DILocalVariable(name: "tem", scope: !4692, file: !3, line: 7356, type: !1053)
!4696 = !DILocation(line: 7356, column: 7, scope: !4692)
!4697 = !DILocation(line: 7359, column: 14, scope: !4692)
!4698 = !DILocation(line: 7359, column: 12, scope: !4692)
!4699 = !DILocation(line: 7360, column: 25, scope: !4692)
!4700 = !DILocation(line: 7362, column: 24, scope: !4692)
!4701 = !DILocation(line: 7362, column: 3, scope: !4692)
!4702 = !DILocation(line: 7363, column: 19, scope: !4692)
!4703 = !DILocation(line: 7363, column: 33, scope: !4692)
!4704 = !DILocation(line: 7363, column: 9, scope: !4692)
!4705 = !DILocation(line: 7363, column: 7, scope: !4692)
!4706 = !DILocation(line: 7364, column: 3, scope: !4692)
!4707 = !DILocation(line: 7365, column: 32, scope: !4692)
!4708 = !DILocation(line: 7365, column: 46, scope: !4692)
!4709 = !DILocation(line: 7365, column: 3, scope: !4692)
!4710 = !DILocation(line: 7367, column: 23, scope: !4692)
!4711 = !DILocation(line: 7367, column: 22, scope: !4692)
!4712 = !DILocation(line: 7367, column: 20, scope: !4692)
!4713 = !DILocation(line: 7370, column: 7, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4692, file: !3, line: 7370, column: 7)
!4715 = !DILocation(line: 7370, column: 11, scope: !4714)
!4716 = !DILocation(line: 7370, column: 7, scope: !4692)
!4717 = !DILocation(line: 7372, column: 7, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4714, file: !3, line: 7371, column: 5)
!4719 = !DILocation(line: 7372, column: 7, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4721, file: !3, line: 7372, column: 7)
!4721 = distinct !DILexicalBlock(scope: !4718, file: !3, line: 7372, column: 7)
!4722 = !DILocation(line: 7372, column: 7, scope: !4721)
!4723 = !DILocation(line: 7373, column: 28, scope: !4718)
!4724 = !DILocation(line: 7373, column: 7, scope: !4718)
!4725 = !DILocation(line: 7374, column: 7, scope: !4718)
!4726 = !DILocation(line: 7375, column: 7, scope: !4718)
!4727 = !DILocation(line: 7375, column: 7, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4729, file: !3, line: 7375, column: 7)
!4729 = distinct !DILexicalBlock(scope: !4718, file: !3, line: 7375, column: 7)
!4730 = !DILocation(line: 7375, column: 7, scope: !4729)
!4731 = !DILocation(line: 7376, column: 5, scope: !4718)
!4732 = !DILocation(line: 7377, column: 12, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4714, file: !3, line: 7377, column: 12)
!4734 = !DILocation(line: 7377, column: 16, scope: !4733)
!4735 = !DILocation(line: 7377, column: 12, scope: !4714)
!4736 = !DILocation(line: 7378, column: 5, scope: !4733)
!4737 = !DILocation(line: 7380, column: 27, scope: !4692)
!4738 = !DILocation(line: 7380, column: 25, scope: !4692)
!4739 = !DILocation(line: 7381, column: 3, scope: !4692)
!4740 = distinct !DISubprogram(name: "get_cse_reg_info_1", scope: !3, file: !3, line: 827, type: !3463, scopeLine: 828, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!4741 = !DILocalVariable(name: "regno", arg: 1, scope: !4740, file: !3, line: 827, type: !7)
!4742 = !DILocation(line: 827, column: 34, scope: !4740)
!4743 = !DILocation(line: 831, column: 41, scope: !4740)
!4744 = !DILocation(line: 831, column: 3, scope: !4740)
!4745 = !DILocation(line: 831, column: 22, scope: !4740)
!4746 = !DILocation(line: 831, column: 29, scope: !4740)
!4747 = !DILocation(line: 831, column: 39, scope: !4740)
!4748 = !DILocation(line: 834, column: 3, scope: !4740)
!4749 = !DILocation(line: 834, column: 22, scope: !4740)
!4750 = !DILocation(line: 834, column: 29, scope: !4740)
!4751 = !DILocation(line: 834, column: 38, scope: !4740)
!4752 = !DILocation(line: 835, column: 3, scope: !4740)
!4753 = !DILocation(line: 835, column: 22, scope: !4740)
!4754 = !DILocation(line: 835, column: 29, scope: !4740)
!4755 = !DILocation(line: 835, column: 42, scope: !4740)
!4756 = !DILocation(line: 836, column: 3, scope: !4740)
!4757 = !DILocation(line: 836, column: 22, scope: !4740)
!4758 = !DILocation(line: 836, column: 29, scope: !4740)
!4759 = !DILocation(line: 836, column: 43, scope: !4740)
!4760 = !DILocation(line: 837, column: 40, scope: !4740)
!4761 = !DILocation(line: 837, column: 39, scope: !4740)
!4762 = !DILocation(line: 837, column: 46, scope: !4740)
!4763 = !DILocation(line: 837, column: 3, scope: !4740)
!4764 = !DILocation(line: 837, column: 22, scope: !4740)
!4765 = !DILocation(line: 837, column: 29, scope: !4740)
!4766 = !DILocation(line: 837, column: 37, scope: !4740)
!4767 = !DILocation(line: 838, column: 1, scope: !4740)
!4768 = distinct !DISubprogram(name: "SET_BIT", scope: !2388, file: !2388, line: 63, type: !4769, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!4769 = !DISubroutineType(types: !4770)
!4770 = !{null, !2387, !7}
!4771 = !DILocalVariable(name: "map", arg: 1, scope: !4768, file: !2388, line: 63, type: !2387)
!4772 = !DILocation(line: 63, column: 18, scope: !4768)
!4773 = !DILocalVariable(name: "bitno", arg: 2, scope: !4768, file: !2388, line: 63, type: !7)
!4774 = !DILocation(line: 63, column: 36, scope: !4768)
!4775 = !DILocation(line: 65, column: 7, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4768, file: !2388, line: 65, column: 7)
!4777 = !DILocation(line: 65, column: 12, scope: !4776)
!4778 = !DILocation(line: 65, column: 7, scope: !4768)
!4779 = !DILocalVariable(name: "oldbit", scope: !4780, file: !2388, line: 67, type: !1052)
!4780 = distinct !DILexicalBlock(scope: !4776, file: !2388, line: 66, column: 5)
!4781 = !DILocation(line: 67, column: 12, scope: !4780)
!4782 = !DILocation(line: 68, column: 16, scope: !4780)
!4783 = !DILocation(line: 68, column: 14, scope: !4780)
!4784 = !DILocation(line: 69, column: 12, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4780, file: !2388, line: 69, column: 11)
!4786 = !DILocation(line: 69, column: 11, scope: !4780)
!4787 = !DILocation(line: 70, column: 2, scope: !4785)
!4788 = !DILocation(line: 70, column: 7, scope: !4785)
!4789 = !DILocation(line: 70, column: 16, scope: !4785)
!4790 = !DILocation(line: 70, column: 22, scope: !4785)
!4791 = !DILocation(line: 70, column: 41, scope: !4785)
!4792 = !DILocation(line: 71, column: 5, scope: !4780)
!4793 = !DILocation(line: 73, column: 33, scope: !4768)
!4794 = !DILocation(line: 73, column: 40, scope: !4768)
!4795 = !DILocation(line: 73, column: 29, scope: !4768)
!4796 = !DILocation(line: 72, column: 3, scope: !4768)
!4797 = !DILocation(line: 72, column: 8, scope: !4768)
!4798 = !DILocation(line: 72, column: 13, scope: !4768)
!4799 = !DILocation(line: 72, column: 19, scope: !4768)
!4800 = !DILocation(line: 73, column: 5, scope: !4768)
!4801 = !DILocation(line: 74, column: 1, scope: !4768)
!4802 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !142, file: !142, line: 150, type: !4803, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!4803 = !DISubroutineType(types: !4804)
!4804 = !{!7, !4805}
!4805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4806, size: 64)
!4806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1070)
!4807 = !DILocalVariable(name: "vec_", arg: 1, scope: !4802, file: !142, line: 150, type: !4805)
!4808 = !DILocation(line: 150, column: 1, scope: !4802)
!4809 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !142, file: !142, line: 150, type: !4810, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!4810 = !DISubroutineType(types: !4811)
!4811 = !{!1077, !4805, !7}
!4812 = !DILocalVariable(name: "vec_", arg: 1, scope: !4809, file: !142, line: 150, type: !4805)
!4813 = !DILocation(line: 150, column: 1, scope: !4809)
!4814 = !DILocalVariable(name: "ix_", arg: 2, scope: !4809, file: !142, line: 150, type: !7)
!4815 = !DILocation(line: 0, scope: !4809)
!4816 = distinct !DISubprogram(name: "single_pred_p", scope: !142, file: !142, line: 634, type: !4817, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!4817 = !DISubroutineType(types: !4818)
!4818 = !{!1052, !4819}
!4819 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !1060, line: 112, baseType: !4820)
!4820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4821, size: 64)
!4821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1062)
!4822 = !DILocalVariable(name: "bb", arg: 1, scope: !4816, file: !142, line: 634, type: !4819)
!4823 = !DILocation(line: 634, column: 34, scope: !4816)
!4824 = !DILocation(line: 636, column: 10, scope: !4816)
!4825 = !DILocation(line: 636, column: 33, scope: !4816)
!4826 = !DILocation(line: 636, column: 3, scope: !4816)
!4827 = distinct !DISubprogram(name: "single_succ_p", scope: !142, file: !142, line: 626, type: !4817, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!4828 = !DILocalVariable(name: "bb", arg: 1, scope: !4827, file: !142, line: 626, type: !4819)
!4829 = !DILocation(line: 626, column: 34, scope: !4827)
!4830 = !DILocation(line: 628, column: 10, scope: !4827)
!4831 = !DILocation(line: 628, column: 33, scope: !4827)
!4832 = !DILocation(line: 628, column: 3, scope: !4827)
!4833 = distinct !DISubprogram(name: "single_succ_edge", scope: !142, file: !142, line: 643, type: !4834, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!4834 = !DISubroutineType(types: !4835)
!4835 = !{!1077, !4819}
!4836 = !DILocalVariable(name: "bb", arg: 1, scope: !4833, file: !142, line: 643, type: !4819)
!4837 = !DILocation(line: 643, column: 37, scope: !4833)
!4838 = !DILocation(line: 645, column: 3, scope: !4833)
!4839 = !DILocation(line: 646, column: 10, scope: !4833)
!4840 = !DILocation(line: 646, column: 3, scope: !4833)
!4841 = distinct !DISubprogram(name: "new_basic_block", scope: !3, file: !3, line: 859, type: !4842, scopeLine: 860, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!4842 = !DISubroutineType(types: !4843)
!4843 = !{null}
!4844 = !DILocalVariable(name: "i", scope: !4841, file: !3, line: 861, type: !1053)
!4845 = !DILocation(line: 861, column: 7, scope: !4841)
!4846 = !DILocation(line: 863, column: 12, scope: !4841)
!4847 = !DILocation(line: 866, column: 25, scope: !4841)
!4848 = !DILocation(line: 869, column: 3, scope: !4841)
!4849 = !DILocation(line: 874, column: 10, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4841, file: !3, line: 874, column: 3)
!4851 = !DILocation(line: 874, column: 8, scope: !4850)
!4852 = !DILocation(line: 874, column: 15, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 874, column: 3)
!4854 = !DILocation(line: 874, column: 17, scope: !4853)
!4855 = !DILocation(line: 874, column: 3, scope: !4850)
!4856 = !DILocalVariable(name: "first", scope: !4857, file: !3, line: 876, type: !2307)
!4857 = distinct !DILexicalBlock(scope: !4853, file: !3, line: 875, column: 5)
!4858 = !DILocation(line: 876, column: 25, scope: !4857)
!4859 = !DILocation(line: 878, column: 21, scope: !4857)
!4860 = !DILocation(line: 878, column: 15, scope: !4857)
!4861 = !DILocation(line: 878, column: 13, scope: !4857)
!4862 = !DILocation(line: 879, column: 11, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4857, file: !3, line: 879, column: 11)
!4864 = !DILocation(line: 879, column: 17, scope: !4863)
!4865 = !DILocation(line: 879, column: 11, scope: !4857)
!4866 = !DILocalVariable(name: "last", scope: !4867, file: !3, line: 881, type: !2307)
!4867 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 880, column: 2)
!4868 = !DILocation(line: 881, column: 22, scope: !4867)
!4869 = !DILocation(line: 881, column: 29, scope: !4867)
!4870 = !DILocation(line: 883, column: 10, scope: !4867)
!4871 = !DILocation(line: 883, column: 4, scope: !4867)
!4872 = !DILocation(line: 883, column: 13, scope: !4867)
!4873 = !DILocation(line: 885, column: 4, scope: !4867)
!4874 = !DILocation(line: 885, column: 11, scope: !4867)
!4875 = !DILocation(line: 885, column: 17, scope: !4867)
!4876 = !DILocation(line: 885, column: 32, scope: !4867)
!4877 = !DILocation(line: 886, column: 13, scope: !4867)
!4878 = !DILocation(line: 886, column: 19, scope: !4867)
!4879 = !DILocation(line: 886, column: 11, scope: !4867)
!4880 = distinct !{!4880, !4873, !4878}
!4881 = !DILocation(line: 891, column: 27, scope: !4867)
!4882 = !DILocation(line: 891, column: 4, scope: !4867)
!4883 = !DILocation(line: 891, column: 10, scope: !4867)
!4884 = !DILocation(line: 891, column: 25, scope: !4867)
!4885 = !DILocation(line: 892, column: 25, scope: !4867)
!4886 = !DILocation(line: 892, column: 23, scope: !4867)
!4887 = !DILocation(line: 893, column: 2, scope: !4867)
!4888 = !DILocation(line: 894, column: 5, scope: !4857)
!4889 = !DILocation(line: 874, column: 31, scope: !4853)
!4890 = !DILocation(line: 874, column: 3, scope: !4853)
!4891 = distinct !{!4891, !4855, !4892}
!4892 = !DILocation(line: 894, column: 5, scope: !4850)
!4893 = !DILocation(line: 899, column: 1, scope: !4841)
!4894 = distinct !DISubprogram(name: "bb_has_eh_pred", scope: !142, file: !142, line: 973, type: !4895, scopeLine: 974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!4895 = !DISubroutineType(types: !4896)
!4896 = !{!1052, !1059}
!4897 = !DILocalVariable(name: "bb", arg: 1, scope: !4894, file: !142, line: 973, type: !1059)
!4898 = !DILocation(line: 973, column: 29, scope: !4894)
!4899 = !DILocalVariable(name: "e", scope: !4894, file: !142, line: 975, type: !1077)
!4900 = !DILocation(line: 975, column: 8, scope: !4894)
!4901 = !DILocalVariable(name: "ei", scope: !4894, file: !142, line: 976, type: !4902)
!4902 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !142, line: 682, baseType: !4903)
!4903 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 679, size: 128, elements: !4904)
!4904 = !{!4905, !4906}
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4903, file: !142, line: 680, baseType: !7, size: 32)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !4903, file: !142, line: 681, baseType: !4907, size: 64, offset: 64)
!4907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!4908 = !DILocation(line: 976, column: 17, scope: !4894)
!4909 = !DILocation(line: 978, column: 3, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4894, file: !142, line: 978, column: 3)
!4911 = !DILocation(line: 978, column: 3, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4910, file: !142, line: 978, column: 3)
!4913 = !DILocation(line: 980, column: 11, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4915, file: !142, line: 980, column: 11)
!4915 = distinct !DILexicalBlock(scope: !4912, file: !142, line: 979, column: 5)
!4916 = !DILocation(line: 980, column: 14, scope: !4914)
!4917 = !DILocation(line: 980, column: 20, scope: !4914)
!4918 = !DILocation(line: 980, column: 11, scope: !4915)
!4919 = !DILocation(line: 981, column: 2, scope: !4914)
!4920 = !DILocation(line: 982, column: 5, scope: !4915)
!4921 = distinct !{!4921, !4909, !4922}
!4922 = !DILocation(line: 982, column: 5, scope: !4910)
!4923 = !DILocation(line: 983, column: 3, scope: !4894)
!4924 = !DILocation(line: 984, column: 1, scope: !4894)
!4925 = distinct !DISubprogram(name: "df_get_artificial_defs", scope: !564, file: !564, line: 1090, type: !4926, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!4926 = !DISubroutineType(types: !4927)
!4927 = !{!2233, !7}
!4928 = !DILocalVariable(name: "bb_index", arg: 1, scope: !4925, file: !564, line: 1090, type: !7)
!4929 = !DILocation(line: 1090, column: 38, scope: !4925)
!4930 = !DILocation(line: 1092, column: 31, scope: !4925)
!4931 = !DILocation(line: 1092, column: 10, scope: !4925)
!4932 = !DILocation(line: 1092, column: 42, scope: !4925)
!4933 = !DILocation(line: 1092, column: 3, scope: !4925)
!4934 = distinct !DISubprogram(name: "invalidate", scope: !3, file: !3, line: 1868, type: !4935, scopeLine: 1869, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!4935 = !DISubroutineType(types: !4936)
!4936 = !{null, !1091, !5}
!4937 = !DILocalVariable(name: "x", arg: 1, scope: !4934, file: !3, line: 1868, type: !1091)
!4938 = !DILocation(line: 1868, column: 17, scope: !4934)
!4939 = !DILocalVariable(name: "full_mode", arg: 2, scope: !4934, file: !3, line: 1868, type: !5)
!4940 = !DILocation(line: 1868, column: 38, scope: !4934)
!4941 = !DILocalVariable(name: "i", scope: !4934, file: !3, line: 1870, type: !1053)
!4942 = !DILocation(line: 1870, column: 7, scope: !4934)
!4943 = !DILocalVariable(name: "p", scope: !4934, file: !3, line: 1871, type: !2307)
!4944 = !DILocation(line: 1871, column: 21, scope: !4934)
!4945 = !DILocalVariable(name: "addr", scope: !4934, file: !3, line: 1872, type: !1091)
!4946 = !DILocation(line: 1872, column: 7, scope: !4934)
!4947 = !DILocation(line: 1874, column: 11, scope: !4934)
!4948 = !DILocation(line: 1874, column: 3, scope: !4934)
!4949 = !DILocalVariable(name: "regno", scope: !4950, file: !3, line: 1882, type: !7)
!4950 = distinct !DILexicalBlock(scope: !4951, file: !3, line: 1877, column: 7)
!4951 = distinct !DILexicalBlock(scope: !4934, file: !3, line: 1875, column: 5)
!4952 = !DILocation(line: 1882, column: 15, scope: !4950)
!4953 = !DILocation(line: 1882, column: 23, scope: !4950)
!4954 = !DILocalVariable(name: "hash", scope: !4950, file: !3, line: 1883, type: !7)
!4955 = !DILocation(line: 1883, column: 15, scope: !4950)
!4956 = !DILocation(line: 1883, column: 22, scope: !4950)
!4957 = !DILocation(line: 1894, column: 20, scope: !4950)
!4958 = !DILocation(line: 1894, column: 2, scope: !4950)
!4959 = !DILocation(line: 1895, column: 2, scope: !4950)
!4960 = !DILocation(line: 1895, column: 18, scope: !4950)
!4961 = !DILocation(line: 1896, column: 2, scope: !4950)
!4962 = !DILocation(line: 1896, column: 24, scope: !4950)
!4963 = !DILocation(line: 1898, column: 6, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4950, file: !3, line: 1898, column: 6)
!4965 = !DILocation(line: 1898, column: 12, scope: !4964)
!4966 = !DILocation(line: 1898, column: 6, scope: !4950)
!4967 = !DILocation(line: 1899, column: 30, scope: !4964)
!4968 = !DILocation(line: 1899, column: 33, scope: !4964)
!4969 = !DILocation(line: 1899, column: 4, scope: !4964)
!4970 = !DILocalVariable(name: "in_table", scope: !4971, file: !3, line: 1902, type: !1048)
!4971 = distinct !DILexicalBlock(scope: !4964, file: !3, line: 1901, column: 4)
!4972 = !DILocation(line: 1902, column: 20, scope: !4971)
!4973 = !DILocation(line: 1903, column: 10, scope: !4971)
!4974 = !DILocalVariable(name: "endregno", scope: !4971, file: !3, line: 1904, type: !7)
!4975 = !DILocation(line: 1904, column: 19, scope: !4971)
!4976 = !DILocation(line: 1904, column: 30, scope: !4971)
!4977 = !DILocalVariable(name: "tregno", scope: !4971, file: !3, line: 1905, type: !7)
!4978 = !DILocation(line: 1905, column: 19, scope: !4971)
!4979 = !DILocalVariable(name: "tendregno", scope: !4971, file: !3, line: 1905, type: !7)
!4980 = !DILocation(line: 1905, column: 27, scope: !4971)
!4981 = !DILocalVariable(name: "rn", scope: !4971, file: !3, line: 1905, type: !7)
!4982 = !DILocation(line: 1905, column: 38, scope: !4971)
!4983 = !DILocalVariable(name: "p", scope: !4971, file: !3, line: 1906, type: !2307)
!4984 = !DILocation(line: 1906, column: 24, scope: !4971)
!4985 = !DILocalVariable(name: "next", scope: !4971, file: !3, line: 1906, type: !2307)
!4986 = !DILocation(line: 1906, column: 28, scope: !4971)
!4987 = !DILocation(line: 1908, column: 6, scope: !4971)
!4988 = !DILocation(line: 1910, column: 16, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4971, file: !3, line: 1910, column: 6)
!4990 = !DILocation(line: 1910, column: 22, scope: !4989)
!4991 = !DILocation(line: 1910, column: 14, scope: !4989)
!4992 = !DILocation(line: 1910, column: 11, scope: !4989)
!4993 = !DILocation(line: 1910, column: 27, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4989, file: !3, line: 1910, column: 6)
!4995 = !DILocation(line: 1910, column: 32, scope: !4994)
!4996 = !DILocation(line: 1910, column: 30, scope: !4994)
!4997 = !DILocation(line: 1910, column: 6, scope: !4989)
!4998 = !DILocation(line: 1912, column: 15, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4994, file: !3, line: 1911, column: 8)
!5000 = !DILocation(line: 1912, column: 12, scope: !4999)
!5001 = !DILocation(line: 1913, column: 3, scope: !4999)
!5002 = !DILocation(line: 1914, column: 21, scope: !4999)
!5003 = !DILocation(line: 1914, column: 3, scope: !4999)
!5004 = !DILocation(line: 1915, column: 3, scope: !4999)
!5005 = !DILocation(line: 1915, column: 16, scope: !4999)
!5006 = !DILocation(line: 1916, column: 3, scope: !4999)
!5007 = !DILocation(line: 1916, column: 22, scope: !4999)
!5008 = !DILocation(line: 1917, column: 8, scope: !4999)
!5009 = !DILocation(line: 1910, column: 44, scope: !4994)
!5010 = !DILocation(line: 1910, column: 6, scope: !4994)
!5011 = distinct !{!5011, !4997, !5012}
!5012 = !DILocation(line: 1917, column: 8, scope: !4989)
!5013 = !DILocation(line: 1919, column: 10, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !4971, file: !3, line: 1919, column: 10)
!5015 = !DILocation(line: 1919, column: 10, scope: !4971)
!5016 = !DILocation(line: 1920, column: 18, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5014, file: !3, line: 1920, column: 8)
!5018 = !DILocation(line: 1920, column: 13, scope: !5017)
!5019 = !DILocation(line: 1920, column: 23, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 1920, column: 8)
!5021 = !DILocation(line: 1920, column: 28, scope: !5020)
!5022 = !DILocation(line: 1920, column: 8, scope: !5017)
!5023 = !DILocation(line: 1921, column: 18, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5020, file: !3, line: 1921, column: 3)
!5025 = !DILocation(line: 1921, column: 12, scope: !5024)
!5026 = !DILocation(line: 1921, column: 10, scope: !5024)
!5027 = !DILocation(line: 1921, column: 8, scope: !5024)
!5028 = !DILocation(line: 1921, column: 25, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5024, file: !3, line: 1921, column: 3)
!5030 = !DILocation(line: 1921, column: 3, scope: !5024)
!5031 = !DILocation(line: 1923, column: 14, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5029, file: !3, line: 1922, column: 5)
!5033 = !DILocation(line: 1923, column: 17, scope: !5032)
!5034 = !DILocation(line: 1923, column: 12, scope: !5032)
!5035 = !DILocation(line: 1925, column: 12, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5032, file: !3, line: 1925, column: 11)
!5037 = !DILocation(line: 1926, column: 4, scope: !5036)
!5038 = !DILocation(line: 1926, column: 7, scope: !5036)
!5039 = !DILocation(line: 1926, column: 22, scope: !5036)
!5040 = !DILocation(line: 1925, column: 11, scope: !5032)
!5041 = !DILocation(line: 1927, column: 9, scope: !5036)
!5042 = !DILocation(line: 1929, column: 16, scope: !5032)
!5043 = !DILocation(line: 1929, column: 14, scope: !5032)
!5044 = !DILocation(line: 1930, column: 19, scope: !5032)
!5045 = !DILocation(line: 1930, column: 17, scope: !5032)
!5046 = !DILocation(line: 1931, column: 11, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5032, file: !3, line: 1931, column: 11)
!5048 = !DILocation(line: 1931, column: 23, scope: !5047)
!5049 = !DILocation(line: 1931, column: 21, scope: !5047)
!5050 = !DILocation(line: 1931, column: 29, scope: !5047)
!5051 = !DILocation(line: 1931, column: 32, scope: !5047)
!5052 = !DILocation(line: 1931, column: 41, scope: !5047)
!5053 = !DILocation(line: 1931, column: 39, scope: !5047)
!5054 = !DILocation(line: 1931, column: 11, scope: !5032)
!5055 = !DILocation(line: 1932, column: 28, scope: !5047)
!5056 = !DILocation(line: 1932, column: 31, scope: !5047)
!5057 = !DILocation(line: 1932, column: 9, scope: !5047)
!5058 = !DILocation(line: 1933, column: 5, scope: !5032)
!5059 = !DILocation(line: 1921, column: 32, scope: !5029)
!5060 = !DILocation(line: 1921, column: 30, scope: !5029)
!5061 = !DILocation(line: 1921, column: 3, scope: !5029)
!5062 = distinct !{!5062, !5030, !5063}
!5063 = !DILocation(line: 1933, column: 5, scope: !5024)
!5064 = !DILocation(line: 1920, column: 45, scope: !5020)
!5065 = !DILocation(line: 1920, column: 8, scope: !5020)
!5066 = distinct !{!5066, !5022, !5067}
!5067 = !DILocation(line: 1933, column: 5, scope: !5017)
!5068 = !DILocation(line: 1936, column: 7, scope: !4951)
!5069 = !DILocation(line: 1939, column: 19, scope: !4951)
!5070 = !DILocation(line: 1939, column: 7, scope: !4951)
!5071 = !DILocation(line: 1940, column: 7, scope: !4951)
!5072 = !DILocation(line: 1943, column: 16, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !4951, file: !3, line: 1943, column: 7)
!5074 = !DILocation(line: 1943, column: 31, scope: !5073)
!5075 = !DILocation(line: 1943, column: 14, scope: !5073)
!5076 = !DILocation(line: 1943, column: 12, scope: !5073)
!5077 = !DILocation(line: 1943, column: 36, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5073, file: !3, line: 1943, column: 7)
!5079 = !DILocation(line: 1943, column: 38, scope: !5078)
!5080 = !DILocation(line: 1943, column: 7, scope: !5073)
!5081 = !DILocation(line: 1944, column: 14, scope: !5078)
!5082 = !DILocation(line: 1944, column: 2, scope: !5078)
!5083 = !DILocation(line: 1943, column: 44, scope: !5078)
!5084 = !DILocation(line: 1943, column: 7, scope: !5078)
!5085 = distinct !{!5085, !5080, !5086}
!5086 = !DILocation(line: 1944, column: 41, scope: !5073)
!5087 = !DILocation(line: 1945, column: 7, scope: !4951)
!5088 = !DILocation(line: 1950, column: 19, scope: !4951)
!5089 = !DILocation(line: 1950, column: 7, scope: !4951)
!5090 = !DILocation(line: 1951, column: 7, scope: !4951)
!5091 = !DILocation(line: 1954, column: 35, scope: !4951)
!5092 = !DILocation(line: 1954, column: 25, scope: !4951)
!5093 = !DILocation(line: 1954, column: 14, scope: !4951)
!5094 = !DILocation(line: 1954, column: 12, scope: !4951)
!5095 = !DILocation(line: 1957, column: 22, scope: !4951)
!5096 = !DILocation(line: 1957, column: 11, scope: !4951)
!5097 = !DILocation(line: 1957, column: 9, scope: !4951)
!5098 = !DILocation(line: 1961, column: 11, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !4951, file: !3, line: 1961, column: 11)
!5100 = !DILocation(line: 1961, column: 21, scope: !5099)
!5101 = !DILocation(line: 1961, column: 11, scope: !4951)
!5102 = !DILocation(line: 1962, column: 14, scope: !5099)
!5103 = !DILocation(line: 1962, column: 12, scope: !5099)
!5104 = !DILocation(line: 1962, column: 2, scope: !5099)
!5105 = !DILocation(line: 1964, column: 14, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !4951, file: !3, line: 1964, column: 7)
!5107 = !DILocation(line: 1964, column: 12, scope: !5106)
!5108 = !DILocation(line: 1964, column: 19, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5106, file: !3, line: 1964, column: 7)
!5110 = !DILocation(line: 1964, column: 21, scope: !5109)
!5111 = !DILocation(line: 1964, column: 7, scope: !5106)
!5112 = !DILocalVariable(name: "next", scope: !5113, file: !3, line: 1966, type: !2307)
!5113 = distinct !DILexicalBlock(scope: !5109, file: !3, line: 1965, column: 2)
!5114 = !DILocation(line: 1966, column: 22, scope: !5113)
!5115 = !DILocation(line: 1968, column: 19, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5113, file: !3, line: 1968, column: 4)
!5117 = !DILocation(line: 1968, column: 13, scope: !5116)
!5118 = !DILocation(line: 1968, column: 11, scope: !5116)
!5119 = !DILocation(line: 1968, column: 9, scope: !5116)
!5120 = !DILocation(line: 1968, column: 23, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5116, file: !3, line: 1968, column: 4)
!5122 = !DILocation(line: 1968, column: 4, scope: !5116)
!5123 = !DILocation(line: 1970, column: 15, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5121, file: !3, line: 1969, column: 6)
!5125 = !DILocation(line: 1970, column: 18, scope: !5124)
!5126 = !DILocation(line: 1970, column: 13, scope: !5124)
!5127 = !DILocation(line: 1971, column: 12, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5124, file: !3, line: 1971, column: 12)
!5129 = !DILocation(line: 1971, column: 15, scope: !5128)
!5130 = !DILocation(line: 1971, column: 12, scope: !5124)
!5131 = !DILocalVariable(name: "d", scope: !5132, file: !3, line: 1973, type: !2296)
!5132 = distinct !DILexicalBlock(scope: !5128, file: !3, line: 1972, column: 3)
!5133 = !DILocation(line: 1973, column: 34, scope: !5132)
!5134 = !DILocation(line: 1979, column: 10, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 1979, column: 9)
!5136 = !DILocation(line: 1979, column: 13, scope: !5135)
!5137 = !DILocation(line: 1979, column: 9, scope: !5132)
!5138 = !DILocation(line: 1980, column: 33, scope: !5135)
!5139 = !DILocation(line: 1980, column: 36, scope: !5135)
!5140 = !DILocation(line: 1980, column: 22, scope: !5135)
!5141 = !DILocation(line: 1980, column: 7, scope: !5135)
!5142 = !DILocation(line: 1980, column: 10, scope: !5135)
!5143 = !DILocation(line: 1980, column: 20, scope: !5135)
!5144 = !DILocation(line: 1981, column: 13, scope: !5132)
!5145 = !DILocation(line: 1981, column: 7, scope: !5132)
!5146 = !DILocation(line: 1981, column: 11, scope: !5132)
!5147 = !DILocation(line: 1982, column: 14, scope: !5132)
!5148 = !DILocation(line: 1982, column: 7, scope: !5132)
!5149 = !DILocation(line: 1982, column: 12, scope: !5132)
!5150 = !DILocation(line: 1983, column: 14, scope: !5132)
!5151 = !DILocation(line: 1983, column: 7, scope: !5132)
!5152 = !DILocation(line: 1983, column: 12, scope: !5132)
!5153 = !DILocation(line: 1984, column: 24, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 1984, column: 9)
!5155 = !DILocation(line: 1984, column: 27, scope: !5154)
!5156 = !DILocation(line: 1984, column: 56, scope: !5154)
!5157 = !DILocation(line: 1984, column: 9, scope: !5154)
!5158 = !DILocation(line: 1984, column: 9, scope: !5132)
!5159 = !DILocation(line: 1985, column: 26, scope: !5154)
!5160 = !DILocation(line: 1985, column: 29, scope: !5154)
!5161 = !DILocation(line: 1985, column: 7, scope: !5154)
!5162 = !DILocation(line: 1986, column: 3, scope: !5132)
!5163 = !DILocation(line: 1987, column: 6, scope: !5124)
!5164 = !DILocation(line: 1968, column: 30, scope: !5121)
!5165 = !DILocation(line: 1968, column: 28, scope: !5121)
!5166 = !DILocation(line: 1968, column: 4, scope: !5121)
!5167 = distinct !{!5167, !5122, !5168}
!5168 = !DILocation(line: 1987, column: 6, scope: !5116)
!5169 = !DILocation(line: 1988, column: 2, scope: !5113)
!5170 = !DILocation(line: 1964, column: 35, scope: !5109)
!5171 = !DILocation(line: 1964, column: 7, scope: !5109)
!5172 = distinct !{!5172, !5111, !5173}
!5173 = !DILocation(line: 1988, column: 2, scope: !5106)
!5174 = !DILocation(line: 1989, column: 7, scope: !4951)
!5175 = !DILocation(line: 1992, column: 7, scope: !4951)
!5176 = !DILocation(line: 1993, column: 5, scope: !4951)
!5177 = !DILocation(line: 1994, column: 1, scope: !4934)
!5178 = distinct !DISubprogram(name: "flush_hash_table", scope: !3, file: !3, line: 1819, type: !4842, scopeLine: 1820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!5179 = !DILocalVariable(name: "i", scope: !5178, file: !3, line: 1821, type: !1053)
!5180 = !DILocation(line: 1821, column: 7, scope: !5178)
!5181 = !DILocalVariable(name: "p", scope: !5178, file: !3, line: 1822, type: !2307)
!5182 = !DILocation(line: 1822, column: 21, scope: !5178)
!5183 = !DILocation(line: 1824, column: 10, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5178, file: !3, line: 1824, column: 3)
!5185 = !DILocation(line: 1824, column: 8, scope: !5184)
!5186 = !DILocation(line: 1824, column: 15, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5184, file: !3, line: 1824, column: 3)
!5188 = !DILocation(line: 1824, column: 17, scope: !5187)
!5189 = !DILocation(line: 1824, column: 3, scope: !5184)
!5190 = !DILocation(line: 1825, column: 20, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5187, file: !3, line: 1825, column: 5)
!5192 = !DILocation(line: 1825, column: 14, scope: !5191)
!5193 = !DILocation(line: 1825, column: 12, scope: !5191)
!5194 = !DILocation(line: 1825, column: 10, scope: !5191)
!5195 = !DILocation(line: 1825, column: 24, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5191, file: !3, line: 1825, column: 5)
!5197 = !DILocation(line: 1825, column: 5, scope: !5191)
!5198 = !DILocation(line: 1829, column: 6, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5200, file: !3, line: 1829, column: 6)
!5200 = distinct !DILexicalBlock(scope: !5196, file: !3, line: 1826, column: 7)
!5201 = !DILocation(line: 1829, column: 6, scope: !5200)
!5202 = !DILocation(line: 1830, column: 16, scope: !5199)
!5203 = !DILocation(line: 1830, column: 19, scope: !5199)
!5204 = !DILocation(line: 1830, column: 4, scope: !5199)
!5205 = !DILocation(line: 1832, column: 23, scope: !5199)
!5206 = !DILocation(line: 1832, column: 26, scope: !5199)
!5207 = !DILocation(line: 1832, column: 4, scope: !5199)
!5208 = !DILocation(line: 1833, column: 7, scope: !5200)
!5209 = !DILocation(line: 1825, column: 37, scope: !5196)
!5210 = !DILocation(line: 1825, column: 31, scope: !5196)
!5211 = !DILocation(line: 1825, column: 29, scope: !5196)
!5212 = !DILocation(line: 1825, column: 5, scope: !5196)
!5213 = distinct !{!5213, !5197, !5214}
!5214 = !DILocation(line: 1833, column: 7, scope: !5191)
!5215 = !DILocation(line: 1824, column: 31, scope: !5187)
!5216 = !DILocation(line: 1824, column: 3, scope: !5187)
!5217 = distinct !{!5217, !5189, !5218}
!5218 = !DILocation(line: 1833, column: 7, scope: !5184)
!5219 = !DILocation(line: 1834, column: 1, scope: !5178)
!5220 = distinct !DISubprogram(name: "cse_process_notes", scope: !3, file: !3, line: 6068, type: !5221, scopeLine: 6069, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!5221 = !DISubroutineType(types: !5222)
!5222 = !{!1091, !1091, !1091, !2393}
!5223 = !DILocalVariable(name: "x", arg: 1, scope: !5220, file: !3, line: 6068, type: !1091)
!5224 = !DILocation(line: 6068, column: 24, scope: !5220)
!5225 = !DILocalVariable(name: "object", arg: 2, scope: !5220, file: !3, line: 6068, type: !1091)
!5226 = !DILocation(line: 6068, column: 31, scope: !5220)
!5227 = !DILocalVariable(name: "changed", arg: 3, scope: !5220, file: !3, line: 6068, type: !2393)
!5228 = !DILocation(line: 6068, column: 45, scope: !5220)
!5229 = !DILocalVariable(name: "new_rtx", scope: !5220, file: !3, line: 6070, type: !1091)
!5230 = !DILocation(line: 6070, column: 7, scope: !5220)
!5231 = !DILocation(line: 6070, column: 38, scope: !5220)
!5232 = !DILocation(line: 6070, column: 41, scope: !5220)
!5233 = !DILocation(line: 6070, column: 49, scope: !5220)
!5234 = !DILocation(line: 6070, column: 17, scope: !5220)
!5235 = !DILocation(line: 6071, column: 7, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5220, file: !3, line: 6071, column: 7)
!5237 = !DILocation(line: 6071, column: 18, scope: !5236)
!5238 = !DILocation(line: 6071, column: 15, scope: !5236)
!5239 = !DILocation(line: 6071, column: 7, scope: !5220)
!5240 = !DILocation(line: 6072, column: 6, scope: !5236)
!5241 = !DILocation(line: 6072, column: 14, scope: !5236)
!5242 = !DILocation(line: 6072, column: 5, scope: !5236)
!5243 = !DILocation(line: 6073, column: 10, scope: !5220)
!5244 = !DILocation(line: 6073, column: 3, scope: !5220)
!5245 = distinct !DISubprogram(name: "cse_insn", scope: !3, file: !3, line: 4202, type: !5246, scopeLine: 4203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!5246 = !DISubroutineType(types: !5247)
!5247 = !{null, !1091}
!5248 = !DILocalVariable(name: "insn", arg: 1, scope: !5245, file: !3, line: 4202, type: !1091)
!5249 = !DILocation(line: 4202, column: 15, scope: !5245)
!5250 = !DILocalVariable(name: "x", scope: !5245, file: !3, line: 4204, type: !1091)
!5251 = !DILocation(line: 4204, column: 7, scope: !5245)
!5252 = !DILocation(line: 4204, column: 11, scope: !5245)
!5253 = !DILocalVariable(name: "i", scope: !5245, file: !3, line: 4205, type: !1053)
!5254 = !DILocation(line: 4205, column: 7, scope: !5245)
!5255 = !DILocalVariable(name: "tem", scope: !5245, file: !3, line: 4206, type: !1091)
!5256 = !DILocation(line: 4206, column: 7, scope: !5245)
!5257 = !DILocalVariable(name: "n_sets", scope: !5245, file: !3, line: 4207, type: !1053)
!5258 = !DILocation(line: 4207, column: 7, scope: !5245)
!5259 = !DILocalVariable(name: "src_eqv", scope: !5245, file: !3, line: 4209, type: !1091)
!5260 = !DILocation(line: 4209, column: 7, scope: !5245)
!5261 = !DILocalVariable(name: "src_eqv_elt", scope: !5245, file: !3, line: 4210, type: !2307)
!5262 = !DILocation(line: 4210, column: 21, scope: !5245)
!5263 = !DILocalVariable(name: "src_eqv_volatile", scope: !5245, file: !3, line: 4211, type: !1053)
!5264 = !DILocation(line: 4211, column: 7, scope: !5245)
!5265 = !DILocalVariable(name: "src_eqv_in_memory", scope: !5245, file: !3, line: 4212, type: !1053)
!5266 = !DILocation(line: 4212, column: 7, scope: !5245)
!5267 = !DILocalVariable(name: "src_eqv_hash", scope: !5245, file: !3, line: 4213, type: !7)
!5268 = !DILocation(line: 4213, column: 12, scope: !5245)
!5269 = !DILocalVariable(name: "sets", scope: !5245, file: !3, line: 4215, type: !2301)
!5270 = !DILocation(line: 4215, column: 15, scope: !5245)
!5271 = !DILocation(line: 4217, column: 15, scope: !5245)
!5272 = !DILocation(line: 4217, column: 13, scope: !5245)
!5273 = !DILocation(line: 4229, column: 7, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 4229, column: 7)
!5275 = !DILocation(line: 4229, column: 7, scope: !5245)
!5276 = !DILocation(line: 4231, column: 18, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5278, file: !3, line: 4231, column: 7)
!5278 = distinct !DILexicalBlock(scope: !5274, file: !3, line: 4230, column: 5)
!5279 = !DILocation(line: 4231, column: 16, scope: !5277)
!5280 = !DILocation(line: 4231, column: 12, scope: !5277)
!5281 = !DILocation(line: 4231, column: 51, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5277, file: !3, line: 4231, column: 7)
!5283 = !DILocation(line: 4231, column: 7, scope: !5277)
!5284 = !DILocation(line: 4233, column: 8, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5286, file: !3, line: 4233, column: 8)
!5286 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 4232, column: 2)
!5287 = !DILocation(line: 4233, column: 33, scope: !5285)
!5288 = !DILocation(line: 4233, column: 8, scope: !5286)
!5289 = !DILocation(line: 4234, column: 18, scope: !5285)
!5290 = !DILocation(line: 4234, column: 6, scope: !5285)
!5291 = !DILocation(line: 4235, column: 31, scope: !5286)
!5292 = !DILocation(line: 4235, column: 46, scope: !5286)
!5293 = !DILocation(line: 4235, column: 20, scope: !5286)
!5294 = !DILocation(line: 4235, column: 4, scope: !5286)
!5295 = !DILocation(line: 4235, column: 18, scope: !5286)
!5296 = !DILocation(line: 4236, column: 2, scope: !5286)
!5297 = !DILocation(line: 4231, column: 62, scope: !5282)
!5298 = !DILocation(line: 4231, column: 60, scope: !5282)
!5299 = !DILocation(line: 4231, column: 7, scope: !5282)
!5300 = distinct !{!5300, !5283, !5301}
!5301 = !DILocation(line: 4236, column: 2, scope: !5277)
!5302 = !DILocation(line: 4237, column: 5, scope: !5278)
!5303 = !DILocation(line: 4239, column: 7, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 4239, column: 7)
!5305 = !DILocation(line: 4239, column: 20, scope: !5304)
!5306 = !DILocation(line: 4239, column: 7, scope: !5245)
!5307 = !DILocation(line: 4241, column: 14, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5304, file: !3, line: 4240, column: 5)
!5309 = !DILocation(line: 4241, column: 12, scope: !5308)
!5310 = !DILocation(line: 4242, column: 21, scope: !5308)
!5311 = !DILocation(line: 4242, column: 7, scope: !5308)
!5312 = !DILocation(line: 4242, column: 15, scope: !5308)
!5313 = !DILocation(line: 4242, column: 19, scope: !5308)
!5314 = !DILocation(line: 4251, column: 11, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5308, file: !3, line: 4251, column: 11)
!5316 = !DILocation(line: 4251, column: 27, scope: !5315)
!5317 = !DILocation(line: 4251, column: 24, scope: !5315)
!5318 = !DILocation(line: 4252, column: 4, scope: !5315)
!5319 = !DILocation(line: 4252, column: 7, scope: !5315)
!5320 = !DILocation(line: 4252, column: 30, scope: !5315)
!5321 = !DILocation(line: 4251, column: 11, scope: !5308)
!5322 = !DILocation(line: 4262, column: 16, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5315, file: !3, line: 4262, column: 16)
!5324 = !DILocation(line: 4262, column: 39, scope: !5323)
!5325 = !DILocation(line: 4262, column: 16, scope: !5315)
!5326 = !DILocation(line: 4264, column: 15, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5323, file: !3, line: 4263, column: 2)
!5328 = !DILocation(line: 4264, column: 28, scope: !5327)
!5329 = !DILocation(line: 4264, column: 4, scope: !5327)
!5330 = !DILocation(line: 4265, column: 4, scope: !5327)
!5331 = !DILocation(line: 4266, column: 14, scope: !5327)
!5332 = !DILocation(line: 4266, column: 27, scope: !5327)
!5333 = !DILocation(line: 4266, column: 4, scope: !5327)
!5334 = !DILocation(line: 4267, column: 16, scope: !5327)
!5335 = !DILocation(line: 4267, column: 4, scope: !5327)
!5336 = !DILocation(line: 4268, column: 2, scope: !5327)
!5337 = !DILocation(line: 4270, column: 9, scope: !5323)
!5338 = !DILocation(line: 4271, column: 5, scope: !5308)
!5339 = !DILocation(line: 4272, column: 12, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5304, file: !3, line: 4272, column: 12)
!5341 = !DILocation(line: 4272, column: 25, scope: !5340)
!5342 = !DILocation(line: 4272, column: 12, scope: !5304)
!5343 = !DILocalVariable(name: "lim", scope: !5344, file: !3, line: 4274, type: !1053)
!5344 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 4273, column: 5)
!5345 = !DILocation(line: 4274, column: 11, scope: !5344)
!5346 = !DILocation(line: 4274, column: 17, scope: !5344)
!5347 = !DILocation(line: 4276, column: 14, scope: !5344)
!5348 = !DILocation(line: 4276, column: 12, scope: !5344)
!5349 = !DILocation(line: 4289, column: 14, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 4289, column: 7)
!5351 = !DILocation(line: 4289, column: 12, scope: !5350)
!5352 = !DILocation(line: 4289, column: 19, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5350, file: !3, line: 4289, column: 7)
!5354 = !DILocation(line: 4289, column: 23, scope: !5353)
!5355 = !DILocation(line: 4289, column: 21, scope: !5353)
!5356 = !DILocation(line: 4289, column: 7, scope: !5350)
!5357 = !DILocalVariable(name: "y", scope: !5358, file: !3, line: 4291, type: !1091)
!5358 = distinct !DILexicalBlock(scope: !5353, file: !3, line: 4290, column: 2)
!5359 = !DILocation(line: 4291, column: 8, scope: !5358)
!5360 = !DILocation(line: 4291, column: 12, scope: !5358)
!5361 = !DILocation(line: 4292, column: 8, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5358, file: !3, line: 4292, column: 8)
!5363 = !DILocation(line: 4292, column: 21, scope: !5362)
!5364 = !DILocation(line: 4292, column: 8, scope: !5358)
!5365 = !DILocalVariable(name: "clobbered", scope: !5366, file: !3, line: 4294, type: !1091)
!5366 = distinct !DILexicalBlock(scope: !5362, file: !3, line: 4293, column: 6)
!5367 = !DILocation(line: 4294, column: 12, scope: !5366)
!5368 = !DILocation(line: 4294, column: 24, scope: !5366)
!5369 = !DILocation(line: 4296, column: 12, scope: !5370)
!5370 = distinct !DILexicalBlock(scope: !5366, file: !3, line: 4296, column: 12)
!5371 = !DILocation(line: 4297, column: 5, scope: !5370)
!5372 = !DILocation(line: 4297, column: 8, scope: !5370)
!5373 = !DILocation(line: 4297, column: 29, scope: !5370)
!5374 = !DILocation(line: 4296, column: 12, scope: !5366)
!5375 = !DILocation(line: 4298, column: 15, scope: !5370)
!5376 = !DILocation(line: 4298, column: 3, scope: !5370)
!5377 = !DILocation(line: 4299, column: 17, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5370, file: !3, line: 4299, column: 17)
!5379 = !DILocation(line: 4299, column: 38, scope: !5378)
!5380 = !DILocation(line: 4300, column: 10, scope: !5378)
!5381 = !DILocation(line: 4300, column: 13, scope: !5378)
!5382 = !DILocation(line: 4300, column: 34, scope: !5378)
!5383 = !DILocation(line: 4299, column: 17, scope: !5370)
!5384 = !DILocation(line: 4301, column: 15, scope: !5378)
!5385 = !DILocation(line: 4301, column: 36, scope: !5378)
!5386 = !DILocation(line: 4301, column: 3, scope: !5378)
!5387 = !DILocation(line: 4302, column: 6, scope: !5366)
!5388 = !DILocation(line: 4303, column: 2, scope: !5358)
!5389 = !DILocation(line: 4289, column: 29, scope: !5353)
!5390 = !DILocation(line: 4289, column: 7, scope: !5353)
!5391 = distinct !{!5391, !5356, !5392}
!5392 = !DILocation(line: 4303, column: 2, scope: !5350)
!5393 = !DILocation(line: 4305, column: 14, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5344, file: !3, line: 4305, column: 7)
!5395 = !DILocation(line: 4305, column: 12, scope: !5394)
!5396 = !DILocation(line: 4305, column: 19, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5394, file: !3, line: 4305, column: 7)
!5398 = !DILocation(line: 4305, column: 23, scope: !5397)
!5399 = !DILocation(line: 4305, column: 21, scope: !5397)
!5400 = !DILocation(line: 4305, column: 7, scope: !5394)
!5401 = !DILocalVariable(name: "y", scope: !5402, file: !3, line: 4307, type: !1091)
!5402 = distinct !DILexicalBlock(scope: !5397, file: !3, line: 4306, column: 2)
!5403 = !DILocation(line: 4307, column: 8, scope: !5402)
!5404 = !DILocation(line: 4307, column: 12, scope: !5402)
!5405 = !DILocation(line: 4308, column: 8, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5402, file: !3, line: 4308, column: 8)
!5407 = !DILocation(line: 4308, column: 21, scope: !5406)
!5408 = !DILocation(line: 4308, column: 8, scope: !5402)
!5409 = !DILocation(line: 4312, column: 12, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5411, file: !3, line: 4312, column: 12)
!5411 = distinct !DILexicalBlock(scope: !5406, file: !3, line: 4309, column: 6)
!5412 = !DILocation(line: 4312, column: 35, scope: !5410)
!5413 = !DILocation(line: 4312, column: 12, scope: !5411)
!5414 = !DILocation(line: 4314, column: 16, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 4313, column: 3)
!5416 = !DILocation(line: 4314, column: 29, scope: !5415)
!5417 = !DILocation(line: 4314, column: 5, scope: !5415)
!5418 = !DILocation(line: 4315, column: 5, scope: !5415)
!5419 = !DILocation(line: 4316, column: 15, scope: !5415)
!5420 = !DILocation(line: 4316, column: 28, scope: !5415)
!5421 = !DILocation(line: 4316, column: 5, scope: !5415)
!5422 = !DILocation(line: 4317, column: 17, scope: !5415)
!5423 = !DILocation(line: 4317, column: 5, scope: !5415)
!5424 = !DILocation(line: 4318, column: 3, scope: !5415)
!5425 = !DILocation(line: 4319, column: 17, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 4319, column: 17)
!5427 = !DILocation(line: 4319, column: 33, scope: !5426)
!5428 = !DILocation(line: 4319, column: 30, scope: !5426)
!5429 = !DILocation(line: 4320, column: 10, scope: !5426)
!5430 = !DILocation(line: 4320, column: 13, scope: !5426)
!5431 = !DILocation(line: 4320, column: 36, scope: !5426)
!5432 = !DILocation(line: 4319, column: 17, scope: !5410)
!5433 = !DILocation(line: 4323, column: 24, scope: !5426)
!5434 = !DILocation(line: 4323, column: 3, scope: !5426)
!5435 = !DILocation(line: 4323, column: 14, scope: !5426)
!5436 = !DILocation(line: 4323, column: 18, scope: !5426)
!5437 = !DILocation(line: 4323, column: 22, scope: !5426)
!5438 = !DILocation(line: 4324, column: 6, scope: !5411)
!5439 = !DILocation(line: 4325, column: 13, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5406, file: !3, line: 4325, column: 13)
!5441 = !DILocation(line: 4325, column: 26, scope: !5440)
!5442 = !DILocation(line: 4325, column: 13, scope: !5406)
!5443 = !DILocation(line: 4330, column: 12, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5445, file: !3, line: 4330, column: 12)
!5445 = distinct !DILexicalBlock(scope: !5440, file: !3, line: 4326, column: 6)
!5446 = !DILocation(line: 4330, column: 12, scope: !5445)
!5447 = !DILocation(line: 4331, column: 14, scope: !5444)
!5448 = !DILocation(line: 4331, column: 27, scope: !5444)
!5449 = !DILocation(line: 4331, column: 3, scope: !5444)
!5450 = !DILocation(line: 4332, column: 6, scope: !5445)
!5451 = !DILocation(line: 4333, column: 13, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5440, file: !3, line: 4333, column: 13)
!5453 = !DILocation(line: 4333, column: 26, scope: !5452)
!5454 = !DILocation(line: 4334, column: 6, scope: !5452)
!5455 = !DILocation(line: 4334, column: 12, scope: !5452)
!5456 = !DILocation(line: 4335, column: 5, scope: !5452)
!5457 = !DILocation(line: 4335, column: 8, scope: !5452)
!5458 = !DILocation(line: 4335, column: 28, scope: !5452)
!5459 = !DILocation(line: 4333, column: 13, scope: !5440)
!5460 = !DILocation(line: 4336, column: 17, scope: !5452)
!5461 = !DILocation(line: 4336, column: 20, scope: !5452)
!5462 = !DILocation(line: 4336, column: 6, scope: !5452)
!5463 = !DILocation(line: 4337, column: 13, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5452, file: !3, line: 4337, column: 13)
!5465 = !DILocation(line: 4337, column: 26, scope: !5464)
!5466 = !DILocation(line: 4337, column: 13, scope: !5452)
!5467 = !DILocation(line: 4341, column: 19, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5464, file: !3, line: 4338, column: 6)
!5469 = !DILocation(line: 4341, column: 22, scope: !5468)
!5470 = !DILocation(line: 4341, column: 8, scope: !5468)
!5471 = !DILocation(line: 4342, column: 8, scope: !5468)
!5472 = !DILocation(line: 4343, column: 18, scope: !5468)
!5473 = !DILocation(line: 4343, column: 21, scope: !5468)
!5474 = !DILocation(line: 4343, column: 8, scope: !5468)
!5475 = !DILocation(line: 4344, column: 6, scope: !5468)
!5476 = !DILocation(line: 4345, column: 2, scope: !5402)
!5477 = !DILocation(line: 4305, column: 29, scope: !5397)
!5478 = !DILocation(line: 4305, column: 7, scope: !5397)
!5479 = distinct !{!5479, !5400, !5480}
!5480 = !DILocation(line: 4345, column: 2, scope: !5394)
!5481 = !DILocation(line: 4346, column: 5, scope: !5344)
!5482 = !DILocation(line: 4347, column: 12, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 4347, column: 12)
!5484 = !DILocation(line: 4347, column: 25, scope: !5483)
!5485 = !DILocation(line: 4347, column: 12, scope: !5340)
!5486 = !DILocation(line: 4349, column: 11, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 4349, column: 11)
!5488 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 4348, column: 5)
!5489 = !DILocation(line: 4349, column: 11, scope: !5488)
!5490 = !DILocation(line: 4350, column: 13, scope: !5487)
!5491 = !DILocation(line: 4350, column: 26, scope: !5487)
!5492 = !DILocation(line: 4350, column: 2, scope: !5487)
!5493 = !DILocation(line: 4351, column: 5, scope: !5488)
!5494 = !DILocation(line: 4354, column: 12, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 4354, column: 12)
!5496 = !DILocation(line: 4354, column: 25, scope: !5495)
!5497 = !DILocation(line: 4355, column: 5, scope: !5495)
!5498 = !DILocation(line: 4355, column: 11, scope: !5495)
!5499 = !DILocation(line: 4356, column: 4, scope: !5495)
!5500 = !DILocation(line: 4356, column: 7, scope: !5495)
!5501 = !DILocation(line: 4356, column: 27, scope: !5495)
!5502 = !DILocation(line: 4354, column: 12, scope: !5483)
!5503 = !DILocation(line: 4357, column: 16, scope: !5495)
!5504 = !DILocation(line: 4357, column: 29, scope: !5495)
!5505 = !DILocation(line: 4357, column: 5, scope: !5495)
!5506 = !DILocation(line: 4358, column: 12, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5495, file: !3, line: 4358, column: 12)
!5508 = !DILocation(line: 4358, column: 25, scope: !5507)
!5509 = !DILocation(line: 4358, column: 12, scope: !5495)
!5510 = !DILocation(line: 4361, column: 18, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5507, file: !3, line: 4359, column: 5)
!5512 = !DILocation(line: 4361, column: 21, scope: !5511)
!5513 = !DILocation(line: 4361, column: 7, scope: !5511)
!5514 = !DILocation(line: 4362, column: 7, scope: !5511)
!5515 = !DILocation(line: 4363, column: 17, scope: !5511)
!5516 = !DILocation(line: 4363, column: 20, scope: !5511)
!5517 = !DILocation(line: 4363, column: 7, scope: !5511)
!5518 = !DILocation(line: 4364, column: 5, scope: !5511)
!5519 = !DILocation(line: 4365, column: 12, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5507, file: !3, line: 4365, column: 12)
!5521 = !DILocation(line: 4365, column: 12, scope: !5507)
!5522 = !DILocation(line: 4366, column: 16, scope: !5520)
!5523 = !DILocation(line: 4366, column: 32, scope: !5520)
!5524 = !DILocation(line: 4366, column: 5, scope: !5520)
!5525 = !DILocation(line: 4372, column: 7, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 4372, column: 7)
!5527 = !DILocation(line: 4372, column: 14, scope: !5526)
!5528 = !DILocation(line: 4372, column: 19, scope: !5526)
!5529 = !DILocation(line: 4372, column: 22, scope: !5526)
!5530 = !DILocation(line: 4372, column: 39, scope: !5526)
!5531 = !DILocation(line: 4373, column: 7, scope: !5526)
!5532 = !DILocation(line: 4373, column: 32, scope: !5526)
!5533 = !DILocation(line: 4373, column: 17, scope: !5526)
!5534 = !DILocation(line: 4373, column: 15, scope: !5526)
!5535 = !DILocation(line: 4373, column: 60, scope: !5526)
!5536 = !DILocation(line: 4374, column: 7, scope: !5526)
!5537 = !DILocation(line: 4374, column: 26, scope: !5526)
!5538 = !DILocation(line: 4374, column: 41, scope: !5526)
!5539 = !DILocation(line: 4374, column: 13, scope: !5526)
!5540 = !DILocation(line: 4375, column: 4, scope: !5526)
!5541 = !DILocation(line: 4375, column: 7, scope: !5526)
!5542 = !DILocation(line: 4375, column: 41, scope: !5526)
!5543 = !DILocation(line: 4372, column: 7, scope: !5245)
!5544 = !DILocation(line: 4378, column: 18, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 4376, column: 5)
!5546 = !DILocation(line: 4378, column: 33, scope: !5545)
!5547 = !DILocation(line: 4378, column: 7, scope: !5545)
!5548 = !DILocation(line: 4379, column: 7, scope: !5545)
!5549 = !DILocation(line: 4380, column: 27, scope: !5545)
!5550 = !DILocation(line: 4380, column: 42, scope: !5545)
!5551 = !DILocation(line: 4380, column: 17, scope: !5545)
!5552 = !DILocation(line: 4380, column: 15, scope: !5545)
!5553 = !DILocation(line: 4381, column: 33, scope: !5545)
!5554 = !DILocation(line: 4381, column: 23, scope: !5545)
!5555 = !DILocation(line: 4381, column: 7, scope: !5545)
!5556 = !DILocation(line: 4381, column: 21, scope: !5545)
!5557 = !DILocation(line: 4382, column: 24, scope: !5545)
!5558 = !DILocation(line: 4382, column: 7, scope: !5545)
!5559 = !DILocation(line: 4383, column: 5, scope: !5545)
!5560 = !DILocation(line: 4395, column: 10, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 4395, column: 3)
!5562 = !DILocation(line: 4395, column: 8, scope: !5561)
!5563 = !DILocation(line: 4395, column: 15, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5561, file: !3, line: 4395, column: 3)
!5565 = !DILocation(line: 4395, column: 19, scope: !5564)
!5566 = !DILocation(line: 4395, column: 17, scope: !5564)
!5567 = !DILocation(line: 4395, column: 3, scope: !5561)
!5568 = !DILocalVariable(name: "dest", scope: !5569, file: !3, line: 4397, type: !1091)
!5569 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 4396, column: 5)
!5570 = !DILocation(line: 4397, column: 11, scope: !5569)
!5571 = !DILocation(line: 4397, column: 18, scope: !5569)
!5572 = !DILocalVariable(name: "src", scope: !5569, file: !3, line: 4398, type: !1091)
!5573 = !DILocation(line: 4398, column: 11, scope: !5569)
!5574 = !DILocation(line: 4398, column: 17, scope: !5569)
!5575 = !DILocalVariable(name: "new_rtx", scope: !5569, file: !3, line: 4399, type: !1091)
!5576 = !DILocation(line: 4399, column: 11, scope: !5569)
!5577 = !DILocation(line: 4399, column: 32, scope: !5569)
!5578 = !DILocation(line: 4399, column: 37, scope: !5569)
!5579 = !DILocation(line: 4399, column: 21, scope: !5569)
!5580 = !DILocation(line: 4401, column: 24, scope: !5569)
!5581 = !DILocation(line: 4401, column: 31, scope: !5569)
!5582 = !DILocation(line: 4401, column: 54, scope: !5569)
!5583 = !DILocation(line: 4401, column: 7, scope: !5569)
!5584 = !DILocation(line: 4403, column: 11, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5569, file: !3, line: 4403, column: 11)
!5586 = !DILocation(line: 4403, column: 27, scope: !5585)
!5587 = !DILocation(line: 4403, column: 11, scope: !5569)
!5588 = !DILocation(line: 4405, column: 21, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5585, file: !3, line: 4404, column: 2)
!5590 = !DILocation(line: 4405, column: 28, scope: !5589)
!5591 = !DILocation(line: 4406, column: 18, scope: !5589)
!5592 = !DILocation(line: 4406, column: 34, scope: !5589)
!5593 = !DILocation(line: 4406, column: 7, scope: !5589)
!5594 = !DILocation(line: 4405, column: 4, scope: !5589)
!5595 = !DILocation(line: 4407, column: 21, scope: !5589)
!5596 = !DILocation(line: 4407, column: 28, scope: !5589)
!5597 = !DILocation(line: 4408, column: 18, scope: !5589)
!5598 = !DILocation(line: 4408, column: 34, scope: !5589)
!5599 = !DILocation(line: 4408, column: 7, scope: !5589)
!5600 = !DILocation(line: 4407, column: 4, scope: !5589)
!5601 = !DILocation(line: 4409, column: 2, scope: !5589)
!5602 = !DILocation(line: 4411, column: 7, scope: !5569)
!5603 = !DILocation(line: 4411, column: 14, scope: !5569)
!5604 = !DILocation(line: 4411, column: 30, scope: !5569)
!5605 = !DILocation(line: 4412, column: 7, scope: !5569)
!5606 = !DILocation(line: 4412, column: 10, scope: !5569)
!5607 = !DILocation(line: 4412, column: 26, scope: !5569)
!5608 = !DILocation(line: 4413, column: 7, scope: !5569)
!5609 = !DILocation(line: 4413, column: 10, scope: !5569)
!5610 = !DILocation(line: 4413, column: 26, scope: !5569)
!5611 = !DILocation(line: 4414, column: 9, scope: !5569)
!5612 = !DILocation(line: 4414, column: 7, scope: !5569)
!5613 = distinct !{!5613, !5602, !5611}
!5614 = !DILocation(line: 4416, column: 11, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5569, file: !3, line: 4416, column: 11)
!5616 = !DILocation(line: 4416, column: 11, scope: !5569)
!5617 = !DILocation(line: 4417, column: 13, scope: !5615)
!5618 = !DILocation(line: 4417, column: 19, scope: !5615)
!5619 = !DILocation(line: 4417, column: 2, scope: !5615)
!5620 = !DILocation(line: 4418, column: 5, scope: !5569)
!5621 = !DILocation(line: 4395, column: 28, scope: !5564)
!5622 = !DILocation(line: 4395, column: 3, scope: !5564)
!5623 = distinct !{!5623, !5567, !5624}
!5624 = !DILocation(line: 4418, column: 5, scope: !5561)
!5625 = !DILocation(line: 4428, column: 3, scope: !5245)
!5626 = !DILocation(line: 4437, column: 10, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 4437, column: 3)
!5628 = !DILocation(line: 4437, column: 8, scope: !5627)
!5629 = !DILocation(line: 4437, column: 15, scope: !5630)
!5630 = distinct !DILexicalBlock(scope: !5627, file: !3, line: 4437, column: 3)
!5631 = !DILocation(line: 4437, column: 19, scope: !5630)
!5632 = !DILocation(line: 4437, column: 17, scope: !5630)
!5633 = !DILocation(line: 4437, column: 3, scope: !5627)
!5634 = !DILocalVariable(name: "repeat", scope: !5635, file: !3, line: 4439, type: !1052)
!5635 = distinct !DILexicalBlock(scope: !5630, file: !3, line: 4438, column: 5)
!5636 = !DILocation(line: 4439, column: 12, scope: !5635)
!5637 = !DILocalVariable(name: "src", scope: !5635, file: !3, line: 4440, type: !1091)
!5638 = !DILocation(line: 4440, column: 11, scope: !5635)
!5639 = !DILocalVariable(name: "dest", scope: !5635, file: !3, line: 4440, type: !1091)
!5640 = !DILocation(line: 4440, column: 16, scope: !5635)
!5641 = !DILocalVariable(name: "src_folded", scope: !5635, file: !3, line: 4441, type: !1091)
!5642 = !DILocation(line: 4441, column: 11, scope: !5635)
!5643 = !DILocalVariable(name: "elt", scope: !5635, file: !3, line: 4442, type: !2307)
!5644 = !DILocation(line: 4442, column: 25, scope: !5635)
!5645 = !DILocalVariable(name: "p", scope: !5635, file: !3, line: 4442, type: !2307)
!5646 = !DILocation(line: 4442, column: 35, scope: !5635)
!5647 = !DILocalVariable(name: "mode", scope: !5635, file: !3, line: 4443, type: !5)
!5648 = !DILocation(line: 4443, column: 25, scope: !5635)
!5649 = !DILocalVariable(name: "src_eqv_here", scope: !5635, file: !3, line: 4444, type: !1091)
!5650 = !DILocation(line: 4444, column: 11, scope: !5635)
!5651 = !DILocalVariable(name: "src_const", scope: !5635, file: !3, line: 4445, type: !1091)
!5652 = !DILocation(line: 4445, column: 11, scope: !5635)
!5653 = !DILocalVariable(name: "src_related", scope: !5635, file: !3, line: 4446, type: !1091)
!5654 = !DILocation(line: 4446, column: 11, scope: !5635)
!5655 = !DILocalVariable(name: "src_related_is_const_anchor", scope: !5635, file: !3, line: 4447, type: !1052)
!5656 = !DILocation(line: 4447, column: 12, scope: !5635)
!5657 = !DILocalVariable(name: "src_const_elt", scope: !5635, file: !3, line: 4448, type: !2307)
!5658 = !DILocation(line: 4448, column: 25, scope: !5635)
!5659 = !DILocalVariable(name: "src_cost", scope: !5635, file: !3, line: 4449, type: !1053)
!5660 = !DILocation(line: 4449, column: 11, scope: !5635)
!5661 = !DILocalVariable(name: "src_eqv_cost", scope: !5635, file: !3, line: 4450, type: !1053)
!5662 = !DILocation(line: 4450, column: 11, scope: !5635)
!5663 = !DILocalVariable(name: "src_folded_cost", scope: !5635, file: !3, line: 4451, type: !1053)
!5664 = !DILocation(line: 4451, column: 11, scope: !5635)
!5665 = !DILocalVariable(name: "src_related_cost", scope: !5635, file: !3, line: 4452, type: !1053)
!5666 = !DILocation(line: 4452, column: 11, scope: !5635)
!5667 = !DILocalVariable(name: "src_elt_cost", scope: !5635, file: !3, line: 4453, type: !1053)
!5668 = !DILocation(line: 4453, column: 11, scope: !5635)
!5669 = !DILocalVariable(name: "src_regcost", scope: !5635, file: !3, line: 4454, type: !1053)
!5670 = !DILocation(line: 4454, column: 11, scope: !5635)
!5671 = !DILocalVariable(name: "src_eqv_regcost", scope: !5635, file: !3, line: 4455, type: !1053)
!5672 = !DILocation(line: 4455, column: 11, scope: !5635)
!5673 = !DILocalVariable(name: "src_folded_regcost", scope: !5635, file: !3, line: 4456, type: !1053)
!5674 = !DILocation(line: 4456, column: 11, scope: !5635)
!5675 = !DILocalVariable(name: "src_related_regcost", scope: !5635, file: !3, line: 4457, type: !1053)
!5676 = !DILocation(line: 4457, column: 11, scope: !5635)
!5677 = !DILocalVariable(name: "src_elt_regcost", scope: !5635, file: !3, line: 4458, type: !1053)
!5678 = !DILocation(line: 4458, column: 11, scope: !5635)
!5679 = !DILocalVariable(name: "src_folded_force_flag", scope: !5635, file: !3, line: 4461, type: !1053)
!5680 = !DILocation(line: 4461, column: 11, scope: !5635)
!5681 = !DILocation(line: 4463, column: 14, scope: !5635)
!5682 = !DILocation(line: 4463, column: 12, scope: !5635)
!5683 = !DILocation(line: 4464, column: 13, scope: !5635)
!5684 = !DILocation(line: 4464, column: 11, scope: !5635)
!5685 = !DILocation(line: 4470, column: 14, scope: !5635)
!5686 = !DILocation(line: 4470, column: 29, scope: !5635)
!5687 = !DILocation(line: 4470, column: 43, scope: !5635)
!5688 = !DILocation(line: 4470, column: 61, scope: !5635)
!5689 = !DILocation(line: 4470, column: 12, scope: !5635)
!5690 = !DILocation(line: 4471, column: 22, scope: !5635)
!5691 = !DILocation(line: 4471, column: 7, scope: !5635)
!5692 = !DILocation(line: 4471, column: 12, scope: !5635)
!5693 = !DILocation(line: 4471, column: 15, scope: !5635)
!5694 = !DILocation(line: 4471, column: 20, scope: !5635)
!5695 = !DILocation(line: 4473, column: 11, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 4473, column: 11)
!5697 = !DILocation(line: 4473, column: 11, scope: !5635)
!5698 = !DILocalVariable(name: "eqvmode", scope: !5699, file: !3, line: 4475, type: !5)
!5699 = distinct !DILexicalBlock(scope: !5696, file: !3, line: 4474, column: 2)
!5700 = !DILocation(line: 4475, column: 22, scope: !5699)
!5701 = !DILocation(line: 4475, column: 32, scope: !5699)
!5702 = !DILocation(line: 4476, column: 8, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 4476, column: 8)
!5704 = !DILocation(line: 4476, column: 24, scope: !5703)
!5705 = !DILocation(line: 4476, column: 8, scope: !5699)
!5706 = !DILocation(line: 4477, column: 16, scope: !5703)
!5707 = !DILocation(line: 4477, column: 14, scope: !5703)
!5708 = !DILocation(line: 4477, column: 6, scope: !5703)
!5709 = !DILocation(line: 4478, column: 18, scope: !5699)
!5710 = !DILocation(line: 4479, column: 23, scope: !5699)
!5711 = !DILocation(line: 4480, column: 19, scope: !5699)
!5712 = !DILocation(line: 4480, column: 17, scope: !5699)
!5713 = !DILocation(line: 4484, column: 9, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 4484, column: 8)
!5715 = !DILocation(line: 4484, column: 8, scope: !5699)
!5716 = !DILocation(line: 4485, column: 28, scope: !5714)
!5717 = !DILocation(line: 4485, column: 37, scope: !5714)
!5718 = !DILocation(line: 4485, column: 51, scope: !5714)
!5719 = !DILocation(line: 4485, column: 20, scope: !5714)
!5720 = !DILocation(line: 4485, column: 18, scope: !5714)
!5721 = !DILocation(line: 4485, column: 6, scope: !5714)
!5722 = !DILocation(line: 4487, column: 23, scope: !5699)
!5723 = !DILocation(line: 4487, column: 21, scope: !5699)
!5724 = !DILocation(line: 4488, column: 24, scope: !5699)
!5725 = !DILocation(line: 4488, column: 22, scope: !5699)
!5726 = !DILocation(line: 4489, column: 2, scope: !5699)
!5727 = !DILocation(line: 4494, column: 11, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 4494, column: 11)
!5729 = !DILocation(line: 4494, column: 27, scope: !5728)
!5730 = !DILocation(line: 4494, column: 11, scope: !5635)
!5731 = !DILocation(line: 4495, column: 15, scope: !5728)
!5732 = !DILocation(line: 4495, column: 2, scope: !5728)
!5733 = !DILocation(line: 4497, column: 17, scope: !5728)
!5734 = !DILocation(line: 4497, column: 15, scope: !5728)
!5735 = !DILocation(line: 4501, column: 30, scope: !5635)
!5736 = !DILocation(line: 4501, column: 35, scope: !5635)
!5737 = !DILocation(line: 4501, column: 20, scope: !5635)
!5738 = !DILocation(line: 4501, column: 18, scope: !5635)
!5739 = !DILocation(line: 4529, column: 21, scope: !5635)
!5740 = !DILocation(line: 4530, column: 26, scope: !5635)
!5741 = !DILocation(line: 4532, column: 21, scope: !5635)
!5742 = !DILocation(line: 4532, column: 7, scope: !5635)
!5743 = !DILocation(line: 4532, column: 12, scope: !5635)
!5744 = !DILocation(line: 4532, column: 15, scope: !5635)
!5745 = !DILocation(line: 4532, column: 19, scope: !5635)
!5746 = !DILocation(line: 4533, column: 26, scope: !5635)
!5747 = !DILocation(line: 4533, column: 7, scope: !5635)
!5748 = !DILocation(line: 4533, column: 12, scope: !5635)
!5749 = !DILocation(line: 4533, column: 15, scope: !5635)
!5750 = !DILocation(line: 4533, column: 24, scope: !5635)
!5751 = !DILocation(line: 4534, column: 30, scope: !5635)
!5752 = !DILocation(line: 4534, column: 7, scope: !5635)
!5753 = !DILocation(line: 4534, column: 12, scope: !5635)
!5754 = !DILocation(line: 4534, column: 15, scope: !5635)
!5755 = !DILocation(line: 4534, column: 28, scope: !5635)
!5756 = !DILocation(line: 4535, column: 31, scope: !5635)
!5757 = !DILocation(line: 4535, column: 7, scope: !5635)
!5758 = !DILocation(line: 4535, column: 12, scope: !5635)
!5759 = !DILocation(line: 4535, column: 15, scope: !5635)
!5760 = !DILocation(line: 4535, column: 29, scope: !5635)
!5761 = !DILocation(line: 4544, column: 11, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 4544, column: 11)
!5763 = !DILocation(line: 4545, column: 4, scope: !5762)
!5764 = !DILocation(line: 4545, column: 22, scope: !5762)
!5765 = !DILocation(line: 4545, column: 7, scope: !5762)
!5766 = !DILocation(line: 4545, column: 49, scope: !5762)
!5767 = !DILocation(line: 4546, column: 4, scope: !5762)
!5768 = !DILocation(line: 4546, column: 7, scope: !5762)
!5769 = !DILocation(line: 4547, column: 4, scope: !5762)
!5770 = !DILocation(line: 4547, column: 7, scope: !5762)
!5771 = !DILocation(line: 4547, column: 20, scope: !5762)
!5772 = !DILocation(line: 4544, column: 11, scope: !5635)
!5773 = !DILocation(line: 4548, column: 2, scope: !5762)
!5774 = !DILocation(line: 4548, column: 7, scope: !5762)
!5775 = !DILocation(line: 4548, column: 10, scope: !5762)
!5776 = !DILocation(line: 4548, column: 23, scope: !5762)
!5777 = !DILocation(line: 4580, column: 12, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 4580, column: 11)
!5779 = !DILocation(line: 4580, column: 17, scope: !5778)
!5780 = !DILocation(line: 4580, column: 20, scope: !5778)
!5781 = !DILocation(line: 4580, column: 11, scope: !5635)
!5782 = !DILocation(line: 4581, column: 16, scope: !5778)
!5783 = !DILocation(line: 4581, column: 21, scope: !5778)
!5784 = !DILocation(line: 4581, column: 26, scope: !5778)
!5785 = !DILocation(line: 4581, column: 29, scope: !5778)
!5786 = !DILocation(line: 4581, column: 39, scope: !5778)
!5787 = !DILocation(line: 4581, column: 8, scope: !5778)
!5788 = !DILocation(line: 4581, column: 6, scope: !5778)
!5789 = !DILocation(line: 4581, column: 2, scope: !5778)
!5790 = !DILocation(line: 4583, column: 25, scope: !5635)
!5791 = !DILocation(line: 4583, column: 7, scope: !5635)
!5792 = !DILocation(line: 4583, column: 12, scope: !5635)
!5793 = !DILocation(line: 4583, column: 15, scope: !5635)
!5794 = !DILocation(line: 4583, column: 23, scope: !5635)
!5795 = !DILocation(line: 4585, column: 11, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 4585, column: 11)
!5797 = !DILocation(line: 4585, column: 15, scope: !5796)
!5798 = !DILocation(line: 4585, column: 18, scope: !5796)
!5799 = !DILocation(line: 4585, column: 31, scope: !5796)
!5800 = !DILocation(line: 4585, column: 34, scope: !5796)
!5801 = !DILocation(line: 4585, column: 11, scope: !5635)
!5802 = !DILocation(line: 4587, column: 8, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5804, file: !3, line: 4587, column: 8)
!5804 = distinct !DILexicalBlock(scope: !5796, file: !3, line: 4586, column: 2)
!5805 = !DILocation(line: 4587, column: 13, scope: !5803)
!5806 = !DILocation(line: 4587, column: 33, scope: !5803)
!5807 = !DILocation(line: 4587, column: 46, scope: !5803)
!5808 = !DILocation(line: 4587, column: 30, scope: !5803)
!5809 = !DILocation(line: 4587, column: 8, scope: !5804)
!5810 = !DILocation(line: 4591, column: 29, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5803, file: !3, line: 4588, column: 6)
!5812 = !DILocation(line: 4591, column: 34, scope: !5811)
!5813 = !DILocation(line: 4591, column: 8, scope: !5811)
!5814 = !DILocation(line: 4592, column: 23, scope: !5811)
!5815 = !DILocation(line: 4592, column: 21, scope: !5811)
!5816 = !DILocation(line: 4593, column: 30, scope: !5811)
!5817 = !DILocation(line: 4593, column: 39, scope: !5811)
!5818 = !DILocation(line: 4593, column: 53, scope: !5811)
!5819 = !DILocation(line: 4593, column: 58, scope: !5811)
!5820 = !DILocation(line: 4593, column: 22, scope: !5811)
!5821 = !DILocation(line: 4593, column: 20, scope: !5811)
!5822 = !DILocation(line: 4594, column: 6, scope: !5811)
!5823 = !DILocation(line: 4596, column: 17, scope: !5804)
!5824 = !DILocation(line: 4597, column: 2, scope: !5804)
!5825 = !DILocation(line: 4599, column: 16, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5796, file: !3, line: 4599, column: 16)
!5827 = !DILocation(line: 4599, column: 16, scope: !5796)
!5828 = !DILocation(line: 4600, column: 8, scope: !5826)
!5829 = !DILocation(line: 4600, column: 6, scope: !5826)
!5830 = !DILocation(line: 4600, column: 2, scope: !5826)
!5831 = !DILocation(line: 4606, column: 11, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 4606, column: 11)
!5833 = !DILocation(line: 4606, column: 11, scope: !5635)
!5834 = !DILocation(line: 4607, column: 11, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5832, file: !3, line: 4607, column: 2)
!5836 = !DILocation(line: 4607, column: 16, scope: !5835)
!5837 = !DILocation(line: 4607, column: 9, scope: !5835)
!5838 = !DILocation(line: 4607, column: 7, scope: !5835)
!5839 = !DILocation(line: 4607, column: 34, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 4607, column: 2)
!5841 = !DILocation(line: 4607, column: 2, scope: !5835)
!5842 = !DILocation(line: 4608, column: 8, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 4608, column: 8)
!5844 = !DILocation(line: 4608, column: 11, scope: !5843)
!5845 = !DILocation(line: 4608, column: 8, scope: !5840)
!5846 = !DILocation(line: 4610, column: 20, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5843, file: !3, line: 4609, column: 6)
!5848 = !DILocation(line: 4610, column: 23, scope: !5847)
!5849 = !DILocation(line: 4610, column: 18, scope: !5847)
!5850 = !DILocation(line: 4611, column: 24, scope: !5847)
!5851 = !DILocation(line: 4611, column: 22, scope: !5847)
!5852 = !DILocation(line: 4612, column: 8, scope: !5847)
!5853 = !DILocation(line: 4607, column: 41, scope: !5840)
!5854 = !DILocation(line: 4607, column: 44, scope: !5840)
!5855 = !DILocation(line: 4607, column: 39, scope: !5840)
!5856 = !DILocation(line: 4607, column: 2, scope: !5840)
!5857 = distinct !{!5857, !5841, !5858}
!5858 = !DILocation(line: 4613, column: 6, scope: !5835)
!5859 = !DILocation(line: 4615, column: 11, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 4615, column: 11)
!5861 = !DILocation(line: 4615, column: 21, scope: !5860)
!5862 = !DILocation(line: 4616, column: 4, scope: !5860)
!5863 = !DILocation(line: 4616, column: 8, scope: !5860)
!5864 = !DILocation(line: 4620, column: 8, scope: !5860)
!5865 = !DILocation(line: 4620, column: 12, scope: !5860)
!5866 = !DILocation(line: 4620, column: 34, scope: !5860)
!5867 = !DILocation(line: 4621, column: 5, scope: !5860)
!5868 = !DILocation(line: 4621, column: 8, scope: !5860)
!5869 = !DILocation(line: 4621, column: 40, scope: !5860)
!5870 = !DILocation(line: 4622, column: 5, scope: !5860)
!5871 = !DILocation(line: 4622, column: 8, scope: !5860)
!5872 = !DILocation(line: 4622, column: 40, scope: !5860)
!5873 = !DILocation(line: 4615, column: 11, scope: !5635)
!5874 = !DILocation(line: 4623, column: 14, scope: !5860)
!5875 = !DILocation(line: 4623, column: 12, scope: !5860)
!5876 = !DILocation(line: 4623, column: 42, scope: !5860)
!5877 = !DILocation(line: 4623, column: 40, scope: !5860)
!5878 = !DILocation(line: 4623, column: 2, scope: !5860)
!5879 = !DILocation(line: 4624, column: 16, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5860, file: !3, line: 4624, column: 16)
!5881 = !DILocation(line: 4624, column: 26, scope: !5880)
!5882 = !DILocation(line: 4624, column: 31, scope: !5880)
!5883 = !DILocation(line: 4624, column: 34, scope: !5880)
!5884 = !DILocation(line: 4624, column: 47, scope: !5880)
!5885 = !DILocation(line: 4624, column: 50, scope: !5880)
!5886 = !DILocation(line: 4624, column: 16, scope: !5860)
!5887 = !DILocation(line: 4625, column: 14, scope: !5880)
!5888 = !DILocation(line: 4625, column: 12, scope: !5880)
!5889 = !DILocation(line: 4625, column: 44, scope: !5880)
!5890 = !DILocation(line: 4625, column: 42, scope: !5880)
!5891 = !DILocation(line: 4625, column: 2, scope: !5880)
!5892 = !DILocation(line: 4629, column: 11, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 4629, column: 11)
!5894 = !DILocation(line: 4629, column: 21, scope: !5893)
!5895 = !DILocation(line: 4629, column: 24, scope: !5893)
!5896 = !DILocation(line: 4629, column: 38, scope: !5893)
!5897 = !DILocation(line: 4629, column: 11, scope: !5635)
!5898 = !DILocation(line: 4631, column: 29, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5893, file: !3, line: 4630, column: 2)
!5900 = !DILocation(line: 4631, column: 4, scope: !5899)
!5901 = !DILocation(line: 4631, column: 9, scope: !5899)
!5902 = !DILocation(line: 4631, column: 12, scope: !5899)
!5903 = !DILocation(line: 4631, column: 27, scope: !5899)
!5904 = !DILocation(line: 4632, column: 28, scope: !5899)
!5905 = !DILocation(line: 4632, column: 39, scope: !5899)
!5906 = !DILocation(line: 4632, column: 44, scope: !5899)
!5907 = !DILocation(line: 4632, column: 47, scope: !5899)
!5908 = !DILocation(line: 4632, column: 63, scope: !5899)
!5909 = !DILocation(line: 4632, column: 20, scope: !5899)
!5910 = !DILocation(line: 4632, column: 18, scope: !5899)
!5911 = !DILocation(line: 4633, column: 2, scope: !5899)
!5912 = !DILocation(line: 4635, column: 27, scope: !5635)
!5913 = !DILocation(line: 4635, column: 7, scope: !5635)
!5914 = !DILocation(line: 4635, column: 12, scope: !5635)
!5915 = !DILocation(line: 4635, column: 15, scope: !5635)
!5916 = !DILocation(line: 4635, column: 25, scope: !5635)
!5917 = !DILocation(line: 4636, column: 31, scope: !5635)
!5918 = !DILocation(line: 4636, column: 7, scope: !5635)
!5919 = !DILocation(line: 4636, column: 12, scope: !5635)
!5920 = !DILocation(line: 4636, column: 15, scope: !5635)
!5921 = !DILocation(line: 4636, column: 29, scope: !5635)
!5922 = !DILocation(line: 4641, column: 11, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 4641, column: 11)
!5924 = !DILocation(line: 4641, column: 25, scope: !5923)
!5925 = !DILocation(line: 4641, column: 28, scope: !5923)
!5926 = !DILocation(line: 4642, column: 4, scope: !5923)
!5927 = !DILocation(line: 4642, column: 7, scope: !5923)
!5928 = !DILocation(line: 4642, column: 22, scope: !5923)
!5929 = !DILocation(line: 4642, column: 42, scope: !5923)
!5930 = !DILocation(line: 4642, column: 47, scope: !5923)
!5931 = !DILocation(line: 4642, column: 39, scope: !5923)
!5932 = !DILocation(line: 4641, column: 11, scope: !5635)
!5933 = !DILocation(line: 4643, column: 23, scope: !5923)
!5934 = !DILocation(line: 4643, column: 28, scope: !5923)
!5935 = !DILocation(line: 4643, column: 2, scope: !5923)
!5936 = !DILocation(line: 4644, column: 16, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 4644, column: 16)
!5938 = !DILocation(line: 4644, column: 30, scope: !5937)
!5939 = !DILocation(line: 4644, column: 33, scope: !5937)
!5940 = !DILocation(line: 4644, column: 37, scope: !5937)
!5941 = !DILocation(line: 4644, column: 16, scope: !5923)
!5942 = !DILocation(line: 4645, column: 8, scope: !5937)
!5943 = !DILocation(line: 4645, column: 6, scope: !5937)
!5944 = !DILocation(line: 4645, column: 2, scope: !5937)
!5945 = !DILocation(line: 4649, column: 11, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 4649, column: 11)
!5947 = !DILocation(line: 4650, column: 4, scope: !5946)
!5948 = !DILocation(line: 4650, column: 8, scope: !5946)
!5949 = !DILocation(line: 4650, column: 29, scope: !5946)
!5950 = !DILocation(line: 4651, column: 8, scope: !5946)
!5951 = !DILocation(line: 4651, column: 12, scope: !5946)
!5952 = !DILocation(line: 4651, column: 26, scope: !5946)
!5953 = !DILocation(line: 4651, column: 29, scope: !5946)
!5954 = !DILocation(line: 4651, column: 44, scope: !5946)
!5955 = !DILocation(line: 4651, column: 58, scope: !5946)
!5956 = !DILocation(line: 4649, column: 11, scope: !5635)
!5957 = !DILocation(line: 4653, column: 37, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5946, file: !3, line: 4652, column: 2)
!5959 = !DILocation(line: 4653, column: 48, scope: !5958)
!5960 = !DILocation(line: 4653, column: 18, scope: !5958)
!5961 = !DILocation(line: 4653, column: 16, scope: !5958)
!5962 = !DILocation(line: 4654, column: 8, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5958, file: !3, line: 4654, column: 8)
!5964 = !DILocation(line: 4654, column: 8, scope: !5958)
!5965 = !DILocalVariable(name: "src_related_elt", scope: !5966, file: !3, line: 4656, type: !2307)
!5966 = distinct !DILexicalBlock(scope: !5963, file: !3, line: 4655, column: 6)
!5967 = !DILocation(line: 4656, column: 26, scope: !5966)
!5968 = !DILocation(line: 4657, column: 13, scope: !5966)
!5969 = !DILocation(line: 4657, column: 26, scope: !5966)
!5970 = !DILocation(line: 4657, column: 52, scope: !5966)
!5971 = !DILocation(line: 4657, column: 5, scope: !5966)
!5972 = !DILocation(line: 4658, column: 12, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5966, file: !3, line: 4658, column: 12)
!5974 = !DILocation(line: 4658, column: 28, scope: !5973)
!5975 = !DILocation(line: 4658, column: 31, scope: !5973)
!5976 = !DILocation(line: 4658, column: 12, scope: !5966)
!5977 = !DILocation(line: 4660, column: 9, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5979, file: !3, line: 4660, column: 9)
!5979 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 4659, column: 3)
!5980 = !DILocation(line: 4660, column: 14, scope: !5978)
!5981 = !DILocation(line: 4661, column: 12, scope: !5978)
!5982 = !DILocation(line: 4661, column: 29, scope: !5978)
!5983 = !DILocation(line: 4661, column: 9, scope: !5978)
!5984 = !DILocation(line: 4660, column: 9, scope: !5979)
!5985 = !DILocation(line: 4665, column: 28, scope: !5978)
!5986 = !DILocation(line: 4665, column: 33, scope: !5978)
!5987 = !DILocation(line: 4665, column: 7, scope: !5978)
!5988 = !DILocation(line: 4667, column: 17, scope: !5979)
!5989 = !DILocation(line: 4668, column: 21, scope: !5979)
!5990 = !DILocation(line: 4669, column: 3, scope: !5979)
!5991 = !DILocation(line: 4670, column: 17, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 4670, column: 17)
!5993 = !DILocation(line: 4670, column: 33, scope: !5992)
!5994 = !DILocation(line: 4670, column: 36, scope: !5992)
!5995 = !DILocation(line: 4670, column: 40, scope: !5992)
!5996 = !DILocation(line: 4670, column: 17, scope: !5973)
!5997 = !DILocation(line: 4671, column: 9, scope: !5992)
!5998 = !DILocation(line: 4671, column: 7, scope: !5992)
!5999 = !DILocation(line: 4671, column: 3, scope: !5992)
!6000 = !DILocation(line: 4672, column: 6, scope: !5966)
!6001 = !DILocation(line: 4673, column: 2, scope: !5958)
!6002 = !DILocation(line: 4678, column: 11, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 4678, column: 11)
!6004 = !DILocation(line: 4678, column: 21, scope: !6003)
!6005 = !DILocation(line: 4678, column: 24, scope: !6003)
!6006 = !DILocation(line: 4678, column: 36, scope: !6003)
!6007 = !DILocation(line: 4678, column: 41, scope: !6003)
!6008 = !DILocation(line: 4678, column: 44, scope: !6003)
!6009 = !DILocation(line: 4679, column: 4, scope: !6003)
!6010 = !DILocation(line: 4679, column: 7, scope: !6003)
!6011 = !DILocation(line: 4679, column: 29, scope: !6003)
!6012 = !DILocation(line: 4680, column: 4, scope: !6003)
!6013 = !DILocation(line: 4680, column: 7, scope: !6003)
!6014 = !DILocation(line: 4680, column: 31, scope: !6003)
!6015 = !DILocation(line: 4678, column: 11, scope: !5635)
!6016 = !DILocalVariable(name: "wider_mode", scope: !6017, file: !3, line: 4682, type: !5)
!6017 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 4681, column: 2)
!6018 = !DILocation(line: 4682, column: 22, scope: !6017)
!6019 = !DILocation(line: 4684, column: 22, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !6017, file: !3, line: 4684, column: 4)
!6021 = !DILocation(line: 4684, column: 20, scope: !6020)
!6022 = !DILocation(line: 4684, column: 9, scope: !6020)
!6023 = !DILocation(line: 4685, column: 9, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6020, file: !3, line: 4684, column: 4)
!6025 = !DILocation(line: 4685, column: 20, scope: !6024)
!6026 = !DILocation(line: 4686, column: 9, scope: !6024)
!6027 = !DILocation(line: 4686, column: 12, scope: !6024)
!6028 = !DILocation(line: 4686, column: 42, scope: !6024)
!6029 = !DILocation(line: 4687, column: 9, scope: !6024)
!6030 = !DILocation(line: 4687, column: 12, scope: !6024)
!6031 = !DILocation(line: 4687, column: 24, scope: !6024)
!6032 = !DILocation(line: 0, scope: !6024)
!6033 = !DILocation(line: 4684, column: 4, scope: !6020)
!6034 = !DILocalVariable(name: "const_elt", scope: !6035, file: !3, line: 4690, type: !2307)
!6035 = distinct !DILexicalBlock(scope: !6024, file: !3, line: 4689, column: 6)
!6036 = !DILocation(line: 4690, column: 26, scope: !6035)
!6037 = !DILocation(line: 4691, column: 13, scope: !6035)
!6038 = !DILocation(line: 4691, column: 24, scope: !6035)
!6039 = !DILocation(line: 4691, column: 54, scope: !6035)
!6040 = !DILocation(line: 4691, column: 5, scope: !6035)
!6041 = !DILocation(line: 4693, column: 12, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !6035, file: !3, line: 4693, column: 12)
!6043 = !DILocation(line: 4693, column: 22, scope: !6042)
!6044 = !DILocation(line: 4693, column: 12, scope: !6035)
!6045 = !DILocation(line: 4694, column: 3, scope: !6042)
!6046 = !DILocation(line: 4696, column: 25, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6035, file: !3, line: 4696, column: 8)
!6048 = !DILocation(line: 4696, column: 36, scope: !6047)
!6049 = !DILocation(line: 4696, column: 23, scope: !6047)
!6050 = !DILocation(line: 4696, column: 13, scope: !6047)
!6051 = !DILocation(line: 4697, column: 6, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 4696, column: 8)
!6053 = !DILocation(line: 4696, column: 8, scope: !6047)
!6054 = !DILocation(line: 4698, column: 7, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 4698, column: 7)
!6056 = !DILocation(line: 4698, column: 7, scope: !6052)
!6057 = !DILocation(line: 4700, column: 21, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6055, file: !3, line: 4699, column: 5)
!6059 = !DILocation(line: 4700, column: 34, scope: !6058)
!6060 = !DILocation(line: 4700, column: 40, scope: !6058)
!6061 = !DILocation(line: 4700, column: 51, scope: !6058)
!6062 = !DILocation(line: 4700, column: 19, scope: !6058)
!6063 = !DILocation(line: 4701, column: 7, scope: !6058)
!6064 = !DILocation(line: 4697, column: 29, scope: !6052)
!6065 = !DILocation(line: 4697, column: 40, scope: !6052)
!6066 = !DILocation(line: 4697, column: 27, scope: !6052)
!6067 = !DILocation(line: 4696, column: 8, scope: !6052)
!6068 = distinct !{!6068, !6053, !6069}
!6069 = !DILocation(line: 4702, column: 5, scope: !6047)
!6070 = !DILocation(line: 4703, column: 6, scope: !6035)
!6071 = !DILocation(line: 4688, column: 22, scope: !6024)
!6072 = !DILocation(line: 4688, column: 20, scope: !6024)
!6073 = !DILocation(line: 4684, column: 4, scope: !6024)
!6074 = distinct !{!6074, !6033, !6075}
!6075 = !DILocation(line: 4703, column: 6, scope: !6020)
!6076 = !DILocation(line: 4704, column: 2, scope: !6017)
!6077 = !DILocation(line: 4712, column: 11, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 4712, column: 11)
!6079 = !DILocation(line: 4712, column: 40, scope: !6078)
!6080 = !DILocation(line: 4712, column: 45, scope: !6078)
!6081 = !DILocation(line: 4713, column: 4, scope: !6078)
!6082 = !DILocation(line: 4713, column: 7, scope: !6078)
!6083 = !DILocation(line: 4713, column: 22, scope: !6078)
!6084 = !DILocation(line: 4713, column: 29, scope: !6078)
!6085 = !DILocation(line: 4713, column: 32, scope: !6078)
!6086 = !DILocation(line: 4714, column: 4, scope: !6078)
!6087 = !DILocation(line: 4714, column: 7, scope: !6078)
!6088 = !DILocation(line: 4714, column: 28, scope: !6078)
!6089 = !DILocation(line: 4712, column: 11, scope: !5635)
!6090 = !DILocalVariable(name: "tmode", scope: !6091, file: !3, line: 4716, type: !5)
!6091 = distinct !DILexicalBlock(scope: !6078, file: !3, line: 4715, column: 2)
!6092 = !DILocation(line: 4716, column: 22, scope: !6091)
!6093 = !DILocalVariable(name: "new_and", scope: !6091, file: !3, line: 4717, type: !1091)
!6094 = !DILocation(line: 4717, column: 8, scope: !6091)
!6095 = !DILocation(line: 4717, column: 18, scope: !6091)
!6096 = !DILocation(line: 4719, column: 17, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6091, file: !3, line: 4719, column: 4)
!6098 = !DILocation(line: 4719, column: 15, scope: !6097)
!6099 = !DILocation(line: 4719, column: 9, scope: !6097)
!6100 = !DILocation(line: 4720, column: 9, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6097, file: !3, line: 4719, column: 4)
!6102 = !DILocation(line: 4720, column: 31, scope: !6101)
!6103 = !DILocation(line: 4719, column: 4, scope: !6097)
!6104 = !DILocalVariable(name: "inner", scope: !6105, file: !3, line: 4723, type: !1091)
!6105 = distinct !DILexicalBlock(scope: !6101, file: !3, line: 4722, column: 6)
!6106 = !DILocation(line: 4723, column: 12, scope: !6105)
!6107 = !DILocation(line: 4723, column: 20, scope: !6105)
!6108 = !DILocation(line: 4723, column: 33, scope: !6105)
!6109 = !DILocation(line: 4723, column: 40, scope: !6105)
!6110 = !DILocalVariable(name: "larger_elt", scope: !6105, file: !3, line: 4724, type: !2307)
!6111 = !DILocation(line: 4724, column: 26, scope: !6105)
!6112 = !DILocation(line: 4726, column: 12, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6105, file: !3, line: 4726, column: 12)
!6114 = !DILocation(line: 4726, column: 12, scope: !6105)
!6115 = !DILocation(line: 4728, column: 5, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6113, file: !3, line: 4727, column: 3)
!6117 = !DILocation(line: 4729, column: 25, scope: !6116)
!6118 = !DILocation(line: 4729, column: 5, scope: !6116)
!6119 = !DILocation(line: 4729, column: 23, scope: !6116)
!6120 = !DILocation(line: 4730, column: 26, scope: !6116)
!6121 = !DILocation(line: 4730, column: 35, scope: !6116)
!6122 = !DILocation(line: 4730, column: 58, scope: !6116)
!6123 = !DILocation(line: 4730, column: 18, scope: !6116)
!6124 = !DILocation(line: 4730, column: 16, scope: !6116)
!6125 = !DILocation(line: 4731, column: 9, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4731, column: 9)
!6127 = !DILocation(line: 4731, column: 20, scope: !6126)
!6128 = !DILocation(line: 4731, column: 9, scope: !6116)
!6129 = !DILocation(line: 4732, column: 7, scope: !6126)
!6130 = !DILocation(line: 4734, column: 23, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4734, column: 5)
!6132 = !DILocation(line: 4734, column: 35, scope: !6131)
!6133 = !DILocation(line: 4734, column: 21, scope: !6131)
!6134 = !DILocation(line: 4734, column: 10, scope: !6131)
!6135 = !DILocation(line: 4735, column: 10, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6131, file: !3, line: 4734, column: 5)
!6137 = !DILocation(line: 4734, column: 5, scope: !6131)
!6138 = !DILocation(line: 4736, column: 11, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6136, file: !3, line: 4736, column: 11)
!6140 = !DILocation(line: 4736, column: 11, scope: !6136)
!6141 = !DILocation(line: 4739, column: 8, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 4737, column: 9)
!6143 = !DILocation(line: 4739, column: 21, scope: !6142)
!6144 = !DILocation(line: 4739, column: 27, scope: !6142)
!6145 = !DILocation(line: 4739, column: 39, scope: !6142)
!6146 = !DILocation(line: 4739, column: 6, scope: !6142)
!6147 = !DILocation(line: 4740, column: 4, scope: !6142)
!6148 = !DILocation(line: 4735, column: 35, scope: !6136)
!6149 = !DILocation(line: 4735, column: 47, scope: !6136)
!6150 = !DILocation(line: 4735, column: 33, scope: !6136)
!6151 = !DILocation(line: 4734, column: 5, scope: !6136)
!6152 = distinct !{!6152, !6137, !6153}
!6153 = !DILocation(line: 4741, column: 9, scope: !6131)
!6154 = !DILocation(line: 4743, column: 9, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 4743, column: 9)
!6156 = !DILocation(line: 4743, column: 9, scope: !6116)
!6157 = !DILocation(line: 4744, column: 7, scope: !6155)
!6158 = !DILocation(line: 4745, column: 3, scope: !6116)
!6159 = !DILocation(line: 4746, column: 6, scope: !6105)
!6160 = !DILocation(line: 4721, column: 17, scope: !6101)
!6161 = !DILocation(line: 4721, column: 15, scope: !6101)
!6162 = !DILocation(line: 4719, column: 4, scope: !6101)
!6163 = distinct !{!6163, !6103, !6164}
!6164 = !DILocation(line: 4746, column: 6, scope: !6097)
!6165 = !DILocation(line: 4747, column: 2, scope: !6091)
!6166 = !DILocation(line: 4800, column: 19, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 4800, column: 11)
!6168 = !DILocation(line: 4800, column: 11, scope: !6167)
!6169 = !DILocation(line: 4801, column: 4, scope: !6167)
!6170 = !DILocation(line: 4801, column: 8, scope: !6167)
!6171 = !DILocation(line: 4802, column: 4, scope: !6167)
!6172 = !DILocation(line: 4802, column: 7, scope: !6167)
!6173 = !DILocation(line: 4803, column: 4, scope: !6167)
!6174 = !DILocation(line: 4803, column: 7, scope: !6167)
!6175 = !DILocation(line: 4803, column: 28, scope: !6167)
!6176 = !DILocation(line: 4800, column: 11, scope: !5635)
!6177 = !DILocation(line: 4805, column: 37, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6167, file: !3, line: 4804, column: 2)
!6179 = !DILocation(line: 4805, column: 48, scope: !6178)
!6180 = !DILocation(line: 4805, column: 18, scope: !6178)
!6181 = !DILocation(line: 4805, column: 16, scope: !6178)
!6182 = !DILocation(line: 4806, column: 34, scope: !6178)
!6183 = !DILocation(line: 4806, column: 46, scope: !6178)
!6184 = !DILocation(line: 4806, column: 32, scope: !6178)
!6185 = !DILocation(line: 4807, column: 2, scope: !6178)
!6186 = !DILocation(line: 4810, column: 11, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 4810, column: 11)
!6188 = !DILocation(line: 4810, column: 18, scope: !6187)
!6189 = !DILocation(line: 4810, column: 15, scope: !6187)
!6190 = !DILocation(line: 4810, column: 11, scope: !5635)
!6191 = !DILocation(line: 4811, column: 13, scope: !6187)
!6192 = !DILocation(line: 4811, column: 2, scope: !6187)
!6193 = !DILocation(line: 4824, column: 11, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 4824, column: 11)
!6195 = !DILocation(line: 4824, column: 11, scope: !5635)
!6196 = !DILocation(line: 4825, column: 8, scope: !6194)
!6197 = !DILocation(line: 4825, column: 13, scope: !6194)
!6198 = !DILocation(line: 4825, column: 6, scope: !6194)
!6199 = !DILocation(line: 4825, column: 2, scope: !6194)
!6200 = !DILocation(line: 4826, column: 16, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 4826, column: 7)
!6202 = !DILocation(line: 4826, column: 14, scope: !6201)
!6203 = !DILocation(line: 4826, column: 12, scope: !6201)
!6204 = !DILocation(line: 4826, column: 21, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6201, file: !3, line: 4826, column: 7)
!6206 = !DILocation(line: 4826, column: 7, scope: !6201)
!6207 = !DILocalVariable(name: "code", scope: !6208, file: !3, line: 4828, type: !384)
!6208 = distinct !DILexicalBlock(scope: !6205, file: !3, line: 4827, column: 2)
!6209 = !DILocation(line: 4828, column: 18, scope: !6208)
!6210 = !DILocation(line: 4828, column: 25, scope: !6208)
!6211 = !DILocation(line: 4833, column: 8, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 4833, column: 8)
!6213 = !DILocation(line: 4833, column: 13, scope: !6212)
!6214 = !DILocation(line: 4833, column: 20, scope: !6212)
!6215 = !DILocation(line: 4833, column: 38, scope: !6212)
!6216 = !DILocation(line: 4833, column: 41, scope: !6212)
!6217 = !DILocation(line: 4833, column: 46, scope: !6212)
!6218 = !DILocation(line: 4833, column: 49, scope: !6212)
!6219 = !DILocation(line: 4833, column: 25, scope: !6212)
!6220 = !DILocation(line: 4833, column: 8, scope: !6208)
!6221 = !DILocation(line: 4834, column: 6, scope: !6212)
!6222 = !DILocation(line: 4838, column: 8, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 4838, column: 8)
!6224 = !DILocation(line: 4838, column: 13, scope: !6223)
!6225 = !DILocation(line: 4839, column: 8, scope: !6223)
!6226 = !DILocation(line: 4839, column: 12, scope: !6223)
!6227 = !DILocation(line: 4840, column: 7, scope: !6223)
!6228 = !DILocation(line: 4840, column: 5, scope: !6223)
!6229 = !DILocation(line: 4841, column: 8, scope: !6223)
!6230 = !DILocation(line: 4841, column: 14, scope: !6223)
!6231 = !DILocation(line: 4841, column: 18, scope: !6223)
!6232 = !DILocation(line: 4842, column: 7, scope: !6223)
!6233 = !DILocation(line: 4842, column: 10, scope: !6223)
!6234 = !DILocation(line: 4842, column: 25, scope: !6223)
!6235 = !DILocation(line: 4843, column: 7, scope: !6223)
!6236 = !DILocation(line: 4843, column: 10, scope: !6223)
!6237 = !DILocation(line: 4843, column: 28, scope: !6223)
!6238 = !DILocation(line: 4843, column: 25, scope: !6223)
!6239 = !DILocation(line: 4844, column: 7, scope: !6223)
!6240 = !DILocation(line: 4844, column: 11, scope: !6223)
!6241 = !DILocation(line: 4845, column: 6, scope: !6223)
!6242 = !DILocation(line: 4845, column: 4, scope: !6223)
!6243 = !DILocation(line: 4838, column: 8, scope: !6208)
!6244 = !DILocation(line: 4846, column: 6, scope: !6223)
!6245 = !DILocation(line: 4848, column: 8, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 4848, column: 8)
!6247 = !DILocation(line: 4848, column: 12, scope: !6246)
!6248 = !DILocation(line: 4848, column: 15, scope: !6246)
!6249 = !DILocation(line: 4848, column: 33, scope: !6246)
!6250 = !DILocation(line: 4848, column: 30, scope: !6246)
!6251 = !DILocation(line: 4848, column: 38, scope: !6246)
!6252 = !DILocation(line: 4848, column: 54, scope: !6246)
!6253 = !DILocation(line: 4848, column: 59, scope: !6246)
!6254 = !DILocation(line: 4848, column: 62, scope: !6246)
!6255 = !DILocation(line: 4848, column: 41, scope: !6246)
!6256 = !DILocation(line: 4848, column: 8, scope: !6208)
!6257 = !DILocation(line: 4849, column: 10, scope: !6246)
!6258 = !DILocation(line: 4849, column: 6, scope: !6246)
!6259 = !DILocation(line: 4850, column: 13, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 4850, column: 13)
!6261 = !DILocation(line: 4850, column: 24, scope: !6260)
!6262 = !DILocation(line: 4850, column: 27, scope: !6260)
!6263 = !DILocation(line: 4850, column: 52, scope: !6260)
!6264 = !DILocation(line: 4850, column: 49, scope: !6260)
!6265 = !DILocation(line: 4851, column: 6, scope: !6260)
!6266 = !DILocation(line: 4851, column: 22, scope: !6260)
!6267 = !DILocation(line: 4851, column: 34, scope: !6260)
!6268 = !DILocation(line: 4851, column: 37, scope: !6260)
!6269 = !DILocation(line: 4851, column: 9, scope: !6260)
!6270 = !DILocation(line: 4850, column: 13, scope: !6246)
!6271 = !DILocation(line: 4852, column: 17, scope: !6260)
!6272 = !DILocation(line: 4852, column: 6, scope: !6260)
!6273 = !DILocation(line: 4853, column: 13, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6260, file: !3, line: 4853, column: 13)
!6275 = !DILocation(line: 4853, column: 26, scope: !6274)
!6276 = !DILocation(line: 4853, column: 29, scope: !6274)
!6277 = !DILocation(line: 4853, column: 56, scope: !6274)
!6278 = !DILocation(line: 4853, column: 53, scope: !6274)
!6279 = !DILocation(line: 4854, column: 6, scope: !6274)
!6280 = !DILocation(line: 4854, column: 22, scope: !6274)
!6281 = !DILocation(line: 4854, column: 36, scope: !6274)
!6282 = !DILocation(line: 4854, column: 39, scope: !6274)
!6283 = !DILocation(line: 4854, column: 9, scope: !6274)
!6284 = !DILocation(line: 4853, column: 13, scope: !6260)
!6285 = !DILocation(line: 4855, column: 19, scope: !6274)
!6286 = !DILocation(line: 4855, column: 6, scope: !6274)
!6287 = !DILocation(line: 4856, column: 13, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6274, file: !3, line: 4856, column: 13)
!6289 = !DILocation(line: 4856, column: 25, scope: !6288)
!6290 = !DILocation(line: 4856, column: 28, scope: !6288)
!6291 = !DILocation(line: 4856, column: 54, scope: !6288)
!6292 = !DILocation(line: 4856, column: 51, scope: !6288)
!6293 = !DILocation(line: 4857, column: 6, scope: !6288)
!6294 = !DILocation(line: 4857, column: 22, scope: !6288)
!6295 = !DILocation(line: 4857, column: 35, scope: !6288)
!6296 = !DILocation(line: 4857, column: 38, scope: !6288)
!6297 = !DILocation(line: 4857, column: 9, scope: !6288)
!6298 = !DILocation(line: 4856, column: 13, scope: !6274)
!6299 = !DILocation(line: 4858, column: 18, scope: !6288)
!6300 = !DILocation(line: 4858, column: 6, scope: !6288)
!6301 = !DILocation(line: 4863, column: 8, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 4863, column: 8)
!6303 = !DILocation(line: 4863, column: 27, scope: !6302)
!6304 = !DILocation(line: 4863, column: 24, scope: !6302)
!6305 = !DILocation(line: 4863, column: 32, scope: !6302)
!6306 = !DILocation(line: 4863, column: 48, scope: !6302)
!6307 = !DILocation(line: 4863, column: 51, scope: !6302)
!6308 = !DILocation(line: 4863, column: 56, scope: !6302)
!6309 = !DILocation(line: 4863, column: 35, scope: !6302)
!6310 = !DILocation(line: 4863, column: 8, scope: !6208)
!6311 = !DILocation(line: 4864, column: 20, scope: !6302)
!6312 = !DILocation(line: 4864, column: 18, scope: !6302)
!6313 = !DILocation(line: 4864, column: 6, scope: !6302)
!6314 = !DILocation(line: 4865, column: 2, scope: !6208)
!6315 = !DILocation(line: 4826, column: 28, scope: !6205)
!6316 = !DILocation(line: 4826, column: 31, scope: !6205)
!6317 = !DILocation(line: 4826, column: 26, scope: !6205)
!6318 = !DILocation(line: 4826, column: 7, scope: !6205)
!6319 = distinct !{!6319, !6206, !6320}
!6320 = !DILocation(line: 4865, column: 2, scope: !6201)
!6321 = !DILocation(line: 4873, column: 11, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 4873, column: 11)
!6323 = !DILocation(line: 4873, column: 11, scope: !5635)
!6324 = !DILocation(line: 4875, column: 21, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6326, file: !3, line: 4875, column: 8)
!6326 = distinct !DILexicalBlock(scope: !6322, file: !3, line: 4874, column: 2)
!6327 = !DILocation(line: 4875, column: 26, scope: !6325)
!6328 = !DILocation(line: 4875, column: 8, scope: !6325)
!6329 = !DILocation(line: 4875, column: 8, scope: !6326)
!6330 = !DILocation(line: 4876, column: 29, scope: !6325)
!6331 = !DILocation(line: 4876, column: 15, scope: !6325)
!6332 = !DILocation(line: 4876, column: 6, scope: !6325)
!6333 = !DILocation(line: 4879, column: 19, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6325, file: !3, line: 4878, column: 6)
!6335 = !DILocation(line: 4879, column: 17, scope: !6334)
!6336 = !DILocation(line: 4880, column: 39, scope: !6334)
!6337 = !DILocation(line: 4880, column: 22, scope: !6334)
!6338 = !DILocation(line: 4880, column: 20, scope: !6334)
!6339 = !DILocation(line: 4882, column: 2, scope: !6326)
!6340 = !DILocation(line: 4884, column: 11, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 4884, column: 11)
!6342 = !DILocation(line: 4884, column: 11, scope: !5635)
!6343 = !DILocation(line: 4886, column: 21, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6345, file: !3, line: 4886, column: 8)
!6345 = distinct !DILexicalBlock(scope: !6341, file: !3, line: 4885, column: 2)
!6346 = !DILocation(line: 4886, column: 35, scope: !6344)
!6347 = !DILocation(line: 4886, column: 8, scope: !6344)
!6348 = !DILocation(line: 4886, column: 8, scope: !6345)
!6349 = !DILocation(line: 4887, column: 37, scope: !6344)
!6350 = !DILocation(line: 4887, column: 19, scope: !6344)
!6351 = !DILocation(line: 4887, column: 6, scope: !6344)
!6352 = !DILocation(line: 4890, column: 23, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 4889, column: 6)
!6354 = !DILocation(line: 4890, column: 21, scope: !6353)
!6355 = !DILocation(line: 4891, column: 43, scope: !6353)
!6356 = !DILocation(line: 4891, column: 26, scope: !6353)
!6357 = !DILocation(line: 4891, column: 24, scope: !6353)
!6358 = !DILocation(line: 4893, column: 2, scope: !6345)
!6359 = !DILocation(line: 4895, column: 11, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 4895, column: 11)
!6361 = !DILocation(line: 4895, column: 11, scope: !5635)
!6362 = !DILocation(line: 4897, column: 21, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 4897, column: 8)
!6364 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 4896, column: 2)
!6365 = !DILocation(line: 4897, column: 33, scope: !6363)
!6366 = !DILocation(line: 4897, column: 8, scope: !6363)
!6367 = !DILocation(line: 4897, column: 8, scope: !6364)
!6368 = !DILocation(line: 4898, column: 43, scope: !6363)
!6369 = !DILocation(line: 4898, column: 22, scope: !6363)
!6370 = !DILocation(line: 4898, column: 6, scope: !6363)
!6371 = !DILocation(line: 4901, column: 26, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6363, file: !3, line: 4900, column: 6)
!6373 = !DILocation(line: 4901, column: 24, scope: !6372)
!6374 = !DILocation(line: 4902, column: 46, scope: !6372)
!6375 = !DILocation(line: 4902, column: 29, scope: !6372)
!6376 = !DILocation(line: 4902, column: 27, scope: !6372)
!6377 = !DILocation(line: 4904, column: 2, scope: !6364)
!6378 = !DILocation(line: 4906, column: 11, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 4906, column: 11)
!6380 = !DILocation(line: 4906, column: 11, scope: !5635)
!6381 = !DILocation(line: 4908, column: 21, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 4908, column: 8)
!6383 = distinct !DILexicalBlock(scope: !6379, file: !3, line: 4907, column: 2)
!6384 = !DILocation(line: 4908, column: 34, scope: !6382)
!6385 = !DILocation(line: 4908, column: 8, scope: !6382)
!6386 = !DILocation(line: 4908, column: 8, scope: !6383)
!6387 = !DILocation(line: 4909, column: 45, scope: !6382)
!6388 = !DILocation(line: 4909, column: 23, scope: !6382)
!6389 = !DILocation(line: 4909, column: 6, scope: !6382)
!6390 = !DILocation(line: 4912, column: 27, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6382, file: !3, line: 4911, column: 6)
!6392 = !DILocation(line: 4912, column: 25, scope: !6391)
!6393 = !DILocation(line: 4913, column: 47, scope: !6391)
!6394 = !DILocation(line: 4913, column: 30, scope: !6391)
!6395 = !DILocation(line: 4913, column: 28, scope: !6391)
!6396 = !DILocation(line: 4922, column: 12, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 4922, column: 12)
!6398 = !DILocation(line: 4923, column: 5, scope: !6397)
!6399 = !DILocation(line: 4923, column: 8, scope: !6397)
!6400 = !DILocation(line: 4923, column: 28, scope: !6397)
!6401 = !DILocation(line: 4923, column: 25, scope: !6397)
!6402 = !DILocation(line: 4924, column: 5, scope: !6397)
!6403 = !DILocation(line: 4924, column: 8, scope: !6397)
!6404 = !DILocation(line: 4922, column: 12, scope: !6391)
!6405 = !DILocation(line: 4925, column: 19, scope: !6397)
!6406 = !DILocation(line: 4925, column: 3, scope: !6397)
!6407 = !DILocation(line: 4927, column: 2, scope: !6383)
!6408 = !DILocation(line: 4931, column: 11, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 4931, column: 11)
!6410 = !DILocation(line: 4931, column: 19, scope: !6409)
!6411 = !DILocation(line: 4931, column: 16, scope: !6409)
!6412 = !DILocation(line: 4931, column: 26, scope: !6409)
!6413 = !DILocation(line: 4931, column: 29, scope: !6409)
!6414 = !DILocation(line: 4931, column: 39, scope: !6409)
!6415 = !DILocation(line: 4931, column: 42, scope: !6409)
!6416 = !DILocation(line: 4931, column: 63, scope: !6409)
!6417 = !DILocation(line: 4931, column: 11, scope: !5635)
!6418 = !DILocation(line: 4932, column: 15, scope: !6409)
!6419 = !DILocation(line: 4932, column: 13, scope: !6409)
!6420 = !DILocation(line: 4932, column: 63, scope: !6409)
!6421 = !DILocation(line: 4932, column: 42, scope: !6409)
!6422 = !DILocation(line: 4932, column: 2, scope: !6409)
!6423 = !DILocation(line: 4936, column: 7, scope: !5635)
!6424 = !DILocalVariable(name: "trial", scope: !6425, file: !3, line: 4938, type: !1091)
!6425 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 4937, column: 2)
!6426 = !DILocation(line: 4938, column: 8, scope: !6425)
!6427 = !DILocation(line: 4941, column: 4, scope: !6425)
!6428 = !DILocation(line: 4941, column: 11, scope: !6425)
!6429 = !DILocation(line: 4941, column: 15, scope: !6425)
!6430 = !DILocation(line: 4941, column: 19, scope: !6425)
!6431 = !DILocation(line: 4942, column: 4, scope: !6425)
!6432 = !DILocation(line: 4942, column: 22, scope: !6425)
!6433 = !DILocation(line: 4942, column: 27, scope: !6425)
!6434 = !DILocation(line: 4942, column: 32, scope: !6425)
!6435 = !DILocation(line: 4942, column: 37, scope: !6425)
!6436 = !DILocation(line: 4942, column: 9, scope: !6425)
!6437 = !DILocation(line: 4942, column: 7, scope: !6425)
!6438 = !DILocation(line: 0, scope: !6425)
!6439 = !DILocation(line: 4943, column: 12, scope: !6425)
!6440 = !DILocation(line: 4943, column: 17, scope: !6425)
!6441 = !DILocation(line: 4943, column: 10, scope: !6425)
!6442 = distinct !{!6442, !6427, !6440}
!6443 = !DILocation(line: 4948, column: 8, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 4948, column: 8)
!6445 = !DILocation(line: 4948, column: 12, scope: !6444)
!6446 = !DILocation(line: 4949, column: 8, scope: !6444)
!6447 = !DILocation(line: 4949, column: 11, scope: !6444)
!6448 = !DILocation(line: 4949, column: 31, scope: !6444)
!6449 = !DILocation(line: 4950, column: 8, scope: !6444)
!6450 = !DILocation(line: 4950, column: 12, scope: !6444)
!6451 = !DILocation(line: 4951, column: 7, scope: !6444)
!6452 = !DILocation(line: 4951, column: 5, scope: !6444)
!6453 = !DILocation(line: 4954, column: 8, scope: !6444)
!6454 = !DILocation(line: 4954, column: 14, scope: !6444)
!6455 = !DILocation(line: 4954, column: 18, scope: !6444)
!6456 = !DILocation(line: 4955, column: 7, scope: !6444)
!6457 = !DILocation(line: 4955, column: 10, scope: !6444)
!6458 = !DILocation(line: 4955, column: 25, scope: !6444)
!6459 = !DILocation(line: 4956, column: 7, scope: !6444)
!6460 = !DILocation(line: 4956, column: 10, scope: !6444)
!6461 = !DILocation(line: 4956, column: 28, scope: !6444)
!6462 = !DILocation(line: 4956, column: 25, scope: !6444)
!6463 = !DILocation(line: 4957, column: 7, scope: !6444)
!6464 = !DILocation(line: 4957, column: 11, scope: !6444)
!6465 = !DILocation(line: 4958, column: 6, scope: !6444)
!6466 = !DILocation(line: 4958, column: 4, scope: !6444)
!6467 = !DILocation(line: 4948, column: 8, scope: !6425)
!6468 = !DILocation(line: 4960, column: 14, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 4959, column: 6)
!6470 = !DILocation(line: 4960, column: 19, scope: !6469)
!6471 = !DILocation(line: 4960, column: 12, scope: !6469)
!6472 = !DILocation(line: 4961, column: 8, scope: !6469)
!6473 = distinct !{!6473, !6423, !6474}
!6474 = !DILocation(line: 5177, column: 2, scope: !5635)
!6475 = !DILocation(line: 4964, column: 8, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 4964, column: 8)
!6477 = !DILocation(line: 4964, column: 8, scope: !6425)
!6478 = !DILocation(line: 4966, column: 23, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6476, file: !3, line: 4965, column: 6)
!6480 = !DILocation(line: 4966, column: 28, scope: !6479)
!6481 = !DILocation(line: 4966, column: 21, scope: !6479)
!6482 = !DILocation(line: 4967, column: 26, scope: !6479)
!6483 = !DILocation(line: 4967, column: 31, scope: !6479)
!6484 = !DILocation(line: 4967, column: 24, scope: !6479)
!6485 = !DILocation(line: 4968, column: 6, scope: !6479)
!6486 = !DILocation(line: 4973, column: 8, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 4973, column: 8)
!6488 = !DILocation(line: 4974, column: 8, scope: !6487)
!6489 = !DILocation(line: 4974, column: 23, scope: !6487)
!6490 = !DILocation(line: 4974, column: 40, scope: !6487)
!6491 = !DILocation(line: 4975, column: 9, scope: !6487)
!6492 = !DILocation(line: 4975, column: 19, scope: !6487)
!6493 = !DILocation(line: 4974, column: 11, scope: !6487)
!6494 = !DILocation(line: 4975, column: 32, scope: !6487)
!6495 = !DILocation(line: 4976, column: 8, scope: !6487)
!6496 = !DILocation(line: 4976, column: 23, scope: !6487)
!6497 = !DILocation(line: 4976, column: 40, scope: !6487)
!6498 = !DILocation(line: 4977, column: 9, scope: !6487)
!6499 = !DILocation(line: 4977, column: 23, scope: !6487)
!6500 = !DILocation(line: 4976, column: 11, scope: !6487)
!6501 = !DILocation(line: 4977, column: 40, scope: !6487)
!6502 = !DILocation(line: 4978, column: 8, scope: !6487)
!6503 = !DILocation(line: 4978, column: 23, scope: !6487)
!6504 = !DILocation(line: 4978, column: 40, scope: !6487)
!6505 = !DILocation(line: 4979, column: 9, scope: !6487)
!6506 = !DILocation(line: 4979, column: 27, scope: !6487)
!6507 = !DILocation(line: 4978, column: 11, scope: !6487)
!6508 = !DILocation(line: 4979, column: 48, scope: !6487)
!6509 = !DILocation(line: 4980, column: 8, scope: !6487)
!6510 = !DILocation(line: 4980, column: 23, scope: !6487)
!6511 = !DILocation(line: 4980, column: 40, scope: !6487)
!6512 = !DILocation(line: 4981, column: 9, scope: !6487)
!6513 = !DILocation(line: 4981, column: 23, scope: !6487)
!6514 = !DILocation(line: 4980, column: 11, scope: !6487)
!6515 = !DILocation(line: 4981, column: 40, scope: !6487)
!6516 = !DILocation(line: 4973, column: 8, scope: !6425)
!6517 = !DILocation(line: 4983, column: 16, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6487, file: !3, line: 4982, column: 6)
!6519 = !DILocation(line: 4983, column: 14, scope: !6518)
!6520 = !DILocation(line: 4983, column: 44, scope: !6518)
!6521 = !DILocation(line: 4984, column: 12, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6518, file: !3, line: 4984, column: 12)
!6523 = !DILocation(line: 4984, column: 12, scope: !6518)
!6524 = !DILocalVariable(name: "forced", scope: !6525, file: !3, line: 4986, type: !1091)
!6525 = distinct !DILexicalBlock(scope: !6522, file: !3, line: 4985, column: 3)
!6526 = !DILocation(line: 4986, column: 9, scope: !6525)
!6527 = !DILocation(line: 4986, column: 35, scope: !6525)
!6528 = !DILocation(line: 4986, column: 41, scope: !6525)
!6529 = !DILocation(line: 4986, column: 18, scope: !6525)
!6530 = !DILocation(line: 4987, column: 9, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 4987, column: 9)
!6532 = !DILocation(line: 4987, column: 9, scope: !6525)
!6533 = !DILocation(line: 4988, column: 15, scope: !6531)
!6534 = !DILocation(line: 4988, column: 13, scope: !6531)
!6535 = !DILocation(line: 4988, column: 7, scope: !6531)
!6536 = !DILocation(line: 4989, column: 3, scope: !6525)
!6537 = !DILocation(line: 4990, column: 6, scope: !6518)
!6538 = !DILocation(line: 4991, column: 13, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6487, file: !3, line: 4991, column: 13)
!6540 = !DILocation(line: 4992, column: 6, scope: !6539)
!6541 = !DILocation(line: 4992, column: 21, scope: !6539)
!6542 = !DILocation(line: 4992, column: 31, scope: !6539)
!6543 = !DILocation(line: 4993, column: 7, scope: !6539)
!6544 = !DILocation(line: 4993, column: 21, scope: !6539)
!6545 = !DILocation(line: 4992, column: 9, scope: !6539)
!6546 = !DILocation(line: 4993, column: 38, scope: !6539)
!6547 = !DILocation(line: 4994, column: 6, scope: !6539)
!6548 = !DILocation(line: 4994, column: 21, scope: !6539)
!6549 = !DILocation(line: 4994, column: 31, scope: !6539)
!6550 = !DILocation(line: 4995, column: 7, scope: !6539)
!6551 = !DILocation(line: 4995, column: 25, scope: !6539)
!6552 = !DILocation(line: 4994, column: 9, scope: !6539)
!6553 = !DILocation(line: 4995, column: 46, scope: !6539)
!6554 = !DILocation(line: 4996, column: 6, scope: !6539)
!6555 = !DILocation(line: 4996, column: 21, scope: !6539)
!6556 = !DILocation(line: 4996, column: 31, scope: !6539)
!6557 = !DILocation(line: 4997, column: 7, scope: !6539)
!6558 = !DILocation(line: 4997, column: 21, scope: !6539)
!6559 = !DILocation(line: 4996, column: 9, scope: !6539)
!6560 = !DILocation(line: 4997, column: 38, scope: !6539)
!6561 = !DILocation(line: 4991, column: 13, scope: !6487)
!6562 = !DILocation(line: 4998, column: 14, scope: !6539)
!6563 = !DILocation(line: 4998, column: 12, scope: !6539)
!6564 = !DILocation(line: 4998, column: 28, scope: !6539)
!6565 = !DILocation(line: 4998, column: 6, scope: !6539)
!6566 = !DILocation(line: 4999, column: 13, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6539, file: !3, line: 4999, column: 13)
!6568 = !DILocation(line: 5000, column: 6, scope: !6567)
!6569 = !DILocation(line: 5000, column: 21, scope: !6567)
!6570 = !DILocation(line: 5000, column: 35, scope: !6567)
!6571 = !DILocation(line: 5001, column: 7, scope: !6567)
!6572 = !DILocation(line: 5001, column: 25, scope: !6567)
!6573 = !DILocation(line: 5000, column: 9, scope: !6567)
!6574 = !DILocation(line: 5001, column: 46, scope: !6567)
!6575 = !DILocation(line: 5002, column: 6, scope: !6567)
!6576 = !DILocation(line: 5002, column: 21, scope: !6567)
!6577 = !DILocation(line: 5002, column: 35, scope: !6567)
!6578 = !DILocation(line: 5003, column: 7, scope: !6567)
!6579 = !DILocation(line: 5003, column: 21, scope: !6567)
!6580 = !DILocation(line: 5002, column: 9, scope: !6567)
!6581 = !DILocation(line: 5003, column: 38, scope: !6567)
!6582 = !DILocation(line: 4999, column: 13, scope: !6539)
!6583 = !DILocation(line: 5004, column: 14, scope: !6567)
!6584 = !DILocation(line: 5004, column: 12, scope: !6567)
!6585 = !DILocation(line: 5004, column: 41, scope: !6567)
!6586 = !DILocation(line: 5004, column: 6, scope: !6567)
!6587 = !DILocation(line: 5005, column: 13, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6567, file: !3, line: 5005, column: 13)
!6589 = !DILocation(line: 5006, column: 6, scope: !6588)
!6590 = !DILocation(line: 5006, column: 21, scope: !6588)
!6591 = !DILocation(line: 5006, column: 39, scope: !6588)
!6592 = !DILocation(line: 5007, column: 7, scope: !6588)
!6593 = !DILocation(line: 5007, column: 21, scope: !6588)
!6594 = !DILocation(line: 5006, column: 9, scope: !6588)
!6595 = !DILocation(line: 5007, column: 38, scope: !6588)
!6596 = !DILocation(line: 5005, column: 13, scope: !6567)
!6597 = !DILocation(line: 5008, column: 14, scope: !6588)
!6598 = !DILocation(line: 5008, column: 12, scope: !6588)
!6599 = !DILocation(line: 5008, column: 44, scope: !6588)
!6600 = !DILocation(line: 5008, column: 6, scope: !6588)
!6601 = !DILocation(line: 5011, column: 16, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6588, file: !3, line: 5010, column: 6)
!6603 = !DILocation(line: 5011, column: 21, scope: !6602)
!6604 = !DILocation(line: 5011, column: 14, scope: !6602)
!6605 = !DILocation(line: 5012, column: 14, scope: !6602)
!6606 = !DILocation(line: 5012, column: 19, scope: !6602)
!6607 = !DILocation(line: 5012, column: 12, scope: !6602)
!6608 = !DILocation(line: 5013, column: 21, scope: !6602)
!6609 = !DILocation(line: 5017, column: 8, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 5017, column: 8)
!6611 = !DILocation(line: 5017, column: 22, scope: !6610)
!6612 = !DILocation(line: 5017, column: 25, scope: !6610)
!6613 = !DILocation(line: 5017, column: 8, scope: !6425)
!6614 = !DILocalVariable(name: "src", scope: !6615, file: !3, line: 5019, type: !1091)
!6615 = distinct !DILexicalBlock(scope: !6610, file: !3, line: 5018, column: 6)
!6616 = !DILocation(line: 5019, column: 12, scope: !6615)
!6617 = !DILocalVariable(name: "dest", scope: !6615, file: !3, line: 5019, type: !1091)
!6618 = !DILocation(line: 5019, column: 17, scope: !6615)
!6619 = !DILocation(line: 5022, column: 12, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6615, file: !3, line: 5022, column: 12)
!6621 = !DILocation(line: 5022, column: 29, scope: !6620)
!6622 = !DILocation(line: 5022, column: 12, scope: !6615)
!6623 = !DILocation(line: 5023, column: 3, scope: !6620)
!6624 = !DILocation(line: 5025, column: 25, scope: !6615)
!6625 = !DILocation(line: 5025, column: 14, scope: !6615)
!6626 = !DILocation(line: 5025, column: 12, scope: !6615)
!6627 = !DILocation(line: 5026, column: 26, scope: !6615)
!6628 = !DILocation(line: 5026, column: 15, scope: !6615)
!6629 = !DILocation(line: 5026, column: 13, scope: !6615)
!6630 = !DILocation(line: 5028, column: 13, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6615, file: !3, line: 5028, column: 12)
!6632 = !DILocation(line: 5028, column: 25, scope: !6631)
!6633 = !DILocation(line: 5028, column: 29, scope: !6631)
!6634 = !DILocation(line: 5029, column: 5, scope: !6631)
!6635 = !DILocation(line: 5029, column: 35, scope: !6631)
!6636 = !DILocation(line: 5029, column: 40, scope: !6631)
!6637 = !DILocation(line: 5029, column: 9, scope: !6631)
!6638 = !DILocation(line: 5028, column: 12, scope: !6615)
!6639 = !DILocation(line: 5030, column: 3, scope: !6631)
!6640 = !DILocation(line: 5031, column: 6, scope: !6615)
!6641 = !DILocation(line: 5038, column: 8, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 5038, column: 8)
!6643 = !DILocation(line: 5038, column: 42, scope: !6642)
!6644 = !DILocation(line: 5039, column: 8, scope: !6642)
!6645 = !DILocation(line: 5039, column: 11, scope: !6642)
!6646 = !DILocation(line: 5040, column: 8, scope: !6642)
!6647 = !DILocation(line: 5040, column: 11, scope: !6642)
!6648 = !DILocation(line: 5041, column: 8, scope: !6642)
!6649 = !DILocation(line: 5041, column: 11, scope: !6642)
!6650 = !DILocation(line: 5042, column: 8, scope: !6642)
!6651 = !DILocation(line: 5042, column: 11, scope: !6642)
!6652 = !DILocation(line: 5043, column: 8, scope: !6642)
!6653 = !DILocation(line: 5043, column: 12, scope: !6642)
!6654 = !DILocation(line: 5044, column: 8, scope: !6642)
!6655 = !DILocation(line: 5044, column: 5, scope: !6642)
!6656 = !DILocation(line: 5045, column: 8, scope: !6642)
!6657 = !DILocation(line: 5045, column: 23, scope: !6642)
!6658 = !DILocation(line: 5045, column: 12, scope: !6642)
!6659 = !DILocation(line: 5046, column: 18, scope: !6642)
!6660 = !DILocation(line: 5046, column: 7, scope: !6642)
!6661 = !DILocation(line: 5046, column: 5, scope: !6642)
!6662 = !DILocation(line: 5047, column: 5, scope: !6642)
!6663 = !DILocation(line: 5038, column: 8, scope: !6425)
!6664 = !DILocalVariable(name: "dest_reg", scope: !6665, file: !3, line: 5049, type: !1091)
!6665 = distinct !DILexicalBlock(scope: !6642, file: !3, line: 5048, column: 6)
!6666 = !DILocation(line: 5049, column: 12, scope: !6665)
!6667 = !DILocation(line: 5049, column: 23, scope: !6665)
!6668 = !DILocalVariable(name: "width", scope: !6665, file: !3, line: 5050, type: !1091)
!6669 = !DILocation(line: 5050, column: 12, scope: !6665)
!6670 = !DILocation(line: 5050, column: 20, scope: !6665)
!6671 = !DILocalVariable(name: "pos", scope: !6665, file: !3, line: 5051, type: !1091)
!6672 = !DILocation(line: 5051, column: 12, scope: !6665)
!6673 = !DILocation(line: 5051, column: 18, scope: !6665)
!6674 = !DILocalVariable(name: "dest_hash", scope: !6665, file: !3, line: 5052, type: !7)
!6675 = !DILocation(line: 5052, column: 21, scope: !6665)
!6676 = !DILocation(line: 5052, column: 33, scope: !6665)
!6677 = !DILocalVariable(name: "dest_elt", scope: !6665, file: !3, line: 5053, type: !2307)
!6678 = !DILocation(line: 5053, column: 26, scope: !6665)
!6679 = !DILocation(line: 5054, column: 13, scope: !6665)
!6680 = !DILocation(line: 5054, column: 23, scope: !6665)
!6681 = !DILocation(line: 5054, column: 34, scope: !6665)
!6682 = !DILocation(line: 5054, column: 5, scope: !6665)
!6683 = !DILocalVariable(name: "dest_cst", scope: !6665, file: !3, line: 5055, type: !1091)
!6684 = !DILocation(line: 5055, column: 12, scope: !6665)
!6685 = !DILocation(line: 5057, column: 12, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6665, file: !3, line: 5057, column: 12)
!6687 = !DILocation(line: 5057, column: 12, scope: !6665)
!6688 = !DILocation(line: 5058, column: 12, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 5058, column: 3)
!6690 = !DILocation(line: 5058, column: 22, scope: !6689)
!6691 = !DILocation(line: 5058, column: 10, scope: !6689)
!6692 = !DILocation(line: 5058, column: 8, scope: !6689)
!6693 = !DILocation(line: 5058, column: 40, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 5058, column: 3)
!6695 = !DILocation(line: 5058, column: 3, scope: !6689)
!6696 = !DILocation(line: 5059, column: 9, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6694, file: !3, line: 5059, column: 9)
!6698 = !DILocation(line: 5059, column: 12, scope: !6697)
!6699 = !DILocation(line: 5059, column: 21, scope: !6697)
!6700 = !DILocation(line: 5059, column: 24, scope: !6697)
!6701 = !DILocation(line: 5059, column: 9, scope: !6694)
!6702 = !DILocation(line: 5061, column: 20, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6697, file: !3, line: 5060, column: 7)
!6704 = !DILocation(line: 5061, column: 23, scope: !6703)
!6705 = !DILocation(line: 5061, column: 18, scope: !6703)
!6706 = !DILocation(line: 5062, column: 9, scope: !6703)
!6707 = !DILocation(line: 5058, column: 47, scope: !6694)
!6708 = !DILocation(line: 5058, column: 50, scope: !6694)
!6709 = !DILocation(line: 5058, column: 45, scope: !6694)
!6710 = !DILocation(line: 5058, column: 3, scope: !6694)
!6711 = distinct !{!6711, !6695, !6712}
!6712 = !DILocation(line: 5063, column: 7, scope: !6689)
!6713 = !DILocation(line: 5064, column: 12, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6665, file: !3, line: 5064, column: 12)
!6715 = !DILocation(line: 5064, column: 12, scope: !6665)
!6716 = !DILocalVariable(name: "val", scope: !6717, file: !3, line: 5066, type: !1048)
!6717 = distinct !DILexicalBlock(scope: !6714, file: !3, line: 5065, column: 3)
!6718 = !DILocation(line: 5066, column: 19, scope: !6717)
!6719 = !DILocation(line: 5066, column: 25, scope: !6717)
!6720 = !DILocalVariable(name: "mask", scope: !6717, file: !3, line: 5067, type: !1048)
!6721 = !DILocation(line: 5067, column: 19, scope: !6717)
!6722 = !DILocalVariable(name: "shift", scope: !6717, file: !3, line: 5068, type: !7)
!6723 = !DILocation(line: 5068, column: 18, scope: !6717)
!6724 = !DILocation(line: 5073, column: 15, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6717, file: !3, line: 5069, column: 9)
!6726 = !DILocation(line: 5073, column: 13, scope: !6725)
!6727 = !DILocation(line: 5074, column: 9, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6717, file: !3, line: 5074, column: 9)
!6729 = !DILocation(line: 5074, column: 24, scope: !6728)
!6730 = !DILocation(line: 5074, column: 9, scope: !6717)
!6731 = !DILocation(line: 5075, column: 12, scope: !6728)
!6732 = !DILocation(line: 5075, column: 7, scope: !6728)
!6733 = !DILocation(line: 5077, column: 36, scope: !6728)
!6734 = !DILocation(line: 5077, column: 33, scope: !6728)
!6735 = !DILocation(line: 5077, column: 52, scope: !6728)
!6736 = !DILocation(line: 5077, column: 12, scope: !6728)
!6737 = !DILocation(line: 5078, column: 14, scope: !6717)
!6738 = !DILocation(line: 5078, column: 22, scope: !6717)
!6739 = !DILocation(line: 5078, column: 19, scope: !6717)
!6740 = !DILocation(line: 5078, column: 12, scope: !6717)
!6741 = !DILocation(line: 5078, column: 9, scope: !6717)
!6742 = !DILocation(line: 5079, column: 13, scope: !6717)
!6743 = !DILocation(line: 5079, column: 30, scope: !6717)
!6744 = !DILocation(line: 5079, column: 28, scope: !6717)
!6745 = !DILocation(line: 5079, column: 39, scope: !6717)
!6746 = !DILocation(line: 5079, column: 36, scope: !6717)
!6747 = !DILocation(line: 5079, column: 9, scope: !6717)
!6748 = !DILocation(line: 5080, column: 31, scope: !6717)
!6749 = !DILocation(line: 5080, column: 36, scope: !6717)
!6750 = !DILocation(line: 5080, column: 11, scope: !6717)
!6751 = !DILocation(line: 5080, column: 9, scope: !6717)
!6752 = !DILocation(line: 5081, column: 30, scope: !6717)
!6753 = !DILocation(line: 5081, column: 37, scope: !6717)
!6754 = !DILocation(line: 5082, column: 9, scope: !6717)
!6755 = !DILocation(line: 5081, column: 5, scope: !6717)
!6756 = !DILocation(line: 5083, column: 30, scope: !6717)
!6757 = !DILocation(line: 5083, column: 37, scope: !6717)
!6758 = !DILocation(line: 5084, column: 9, scope: !6717)
!6759 = !DILocation(line: 5083, column: 5, scope: !6717)
!6760 = !DILocation(line: 5085, column: 9, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6717, file: !3, line: 5085, column: 9)
!6762 = !DILocation(line: 5085, column: 9, scope: !6717)
!6763 = !DILocalVariable(name: "note", scope: !6764, file: !3, line: 5087, type: !1091)
!6764 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 5086, column: 7)
!6765 = !DILocation(line: 5087, column: 13, scope: !6764)
!6766 = !DILocation(line: 5087, column: 35, scope: !6764)
!6767 = !DILocation(line: 5087, column: 20, scope: !6764)
!6768 = !DILocation(line: 5088, column: 13, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6764, file: !3, line: 5088, column: 13)
!6770 = !DILocation(line: 5088, column: 13, scope: !6764)
!6771 = !DILocation(line: 5090, column: 19, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6769, file: !3, line: 5089, column: 4)
!6773 = !DILocation(line: 5090, column: 25, scope: !6772)
!6774 = !DILocation(line: 5090, column: 6, scope: !6772)
!6775 = !DILocation(line: 5091, column: 23, scope: !6772)
!6776 = !DILocation(line: 5091, column: 6, scope: !6772)
!6777 = !DILocation(line: 5092, column: 4, scope: !6772)
!6778 = !DILocation(line: 5093, column: 17, scope: !6764)
!6779 = !DILocation(line: 5094, column: 21, scope: !6764)
!6780 = !DILocation(line: 5095, column: 26, scope: !6764)
!6781 = !DILocation(line: 5096, column: 27, scope: !6764)
!6782 = !DILocation(line: 5097, column: 22, scope: !6764)
!6783 = !DILocation(line: 5098, column: 16, scope: !6764)
!6784 = !DILocation(line: 5099, column: 9, scope: !6764)
!6785 = !DILocation(line: 5101, column: 3, scope: !6717)
!6786 = !DILocation(line: 5102, column: 6, scope: !6665)
!6787 = !DILocation(line: 5113, column: 8, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 5113, column: 8)
!6789 = !DILocation(line: 5113, column: 15, scope: !6788)
!6790 = !DILocation(line: 5113, column: 20, scope: !6788)
!6791 = !DILocation(line: 5113, column: 23, scope: !6788)
!6792 = !DILocation(line: 5113, column: 31, scope: !6788)
!6793 = !DILocation(line: 5113, column: 28, scope: !6788)
!6794 = !DILocation(line: 5114, column: 8, scope: !6788)
!6795 = !DILocation(line: 5114, column: 12, scope: !6788)
!6796 = !DILocation(line: 5114, column: 21, scope: !6788)
!6797 = !DILocation(line: 5114, column: 18, scope: !6788)
!6798 = !DILocation(line: 5115, column: 5, scope: !6788)
!6799 = !DILocation(line: 5115, column: 9, scope: !6788)
!6800 = !DILocation(line: 5115, column: 26, scope: !6788)
!6801 = !DILocation(line: 5116, column: 9, scope: !6788)
!6802 = !DILocation(line: 5116, column: 26, scope: !6788)
!6803 = !DILocation(line: 5116, column: 14, scope: !6788)
!6804 = !DILocation(line: 5113, column: 8, scope: !6425)
!6805 = !DILocation(line: 5119, column: 12, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6807, file: !3, line: 5119, column: 12)
!6807 = distinct !DILexicalBlock(scope: !6788, file: !3, line: 5117, column: 6)
!6808 = !DILocation(line: 5119, column: 29, scope: !6806)
!6809 = !DILocation(line: 5120, column: 5, scope: !6806)
!6810 = !DILocation(line: 5120, column: 8, scope: !6806)
!6811 = !DILocation(line: 5119, column: 12, scope: !6807)
!6812 = !DILocation(line: 5121, column: 3, scope: !6806)
!6813 = !DILocation(line: 5123, column: 32, scope: !6807)
!6814 = !DILocation(line: 5123, column: 8, scope: !6807)
!6815 = !DILocation(line: 5123, column: 30, scope: !6807)
!6816 = !DILocation(line: 5124, column: 26, scope: !6807)
!6817 = !DILocation(line: 5125, column: 8, scope: !6807)
!6818 = !DILocation(line: 5129, column: 13, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6788, file: !3, line: 5129, column: 13)
!6820 = !DILocation(line: 5130, column: 6, scope: !6819)
!6821 = !DILocation(line: 5130, column: 9, scope: !6819)
!6822 = !DILocation(line: 5130, column: 26, scope: !6819)
!6823 = !DILocation(line: 5135, column: 6, scope: !6819)
!6824 = !DILocation(line: 5135, column: 10, scope: !6819)
!6825 = !DILocation(line: 5135, column: 37, scope: !6819)
!6826 = !DILocation(line: 5138, column: 10, scope: !6819)
!6827 = !DILocation(line: 5138, column: 14, scope: !6819)
!6828 = !DILocation(line: 5138, column: 41, scope: !6819)
!6829 = !DILocation(line: 5139, column: 7, scope: !6819)
!6830 = !DILocation(line: 5139, column: 10, scope: !6819)
!6831 = !DILocation(line: 5139, column: 47, scope: !6819)
!6832 = !DILocation(line: 5140, column: 7, scope: !6819)
!6833 = !DILocation(line: 5140, column: 10, scope: !6819)
!6834 = !DILocation(line: 5140, column: 47, scope: !6819)
!6835 = !DILocation(line: 5129, column: 13, scope: !6788)
!6836 = !DILocation(line: 5146, column: 9, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6819, file: !3, line: 5145, column: 13)
!6838 = !DILocation(line: 5146, column: 16, scope: !6837)
!6839 = !DILocation(line: 5146, column: 39, scope: !6837)
!6840 = !DILocation(line: 5145, column: 13, scope: !6837)
!6841 = !DILocation(line: 5145, column: 13, scope: !6819)
!6842 = !DILocalVariable(name: "new_rtx", scope: !6843, file: !3, line: 5148, type: !1091)
!6843 = distinct !DILexicalBlock(scope: !6837, file: !3, line: 5147, column: 6)
!6844 = !DILocation(line: 5148, column: 12, scope: !6843)
!6845 = !DILocation(line: 5148, column: 33, scope: !6843)
!6846 = !DILocation(line: 5148, column: 56, scope: !6843)
!6847 = !DILocation(line: 5148, column: 22, scope: !6843)
!6848 = !DILocation(line: 5153, column: 25, scope: !6843)
!6849 = !DILocation(line: 5153, column: 32, scope: !6843)
!6850 = !DILocation(line: 5153, column: 55, scope: !6843)
!6851 = !DILocation(line: 5153, column: 8, scope: !6843)
!6852 = !DILocation(line: 5154, column: 8, scope: !6843)
!6853 = !DILocation(line: 5156, column: 8, scope: !6843)
!6854 = !DILocation(line: 5164, column: 13, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6837, file: !3, line: 5164, column: 13)
!6856 = !DILocation(line: 5165, column: 6, scope: !6855)
!6857 = !DILocation(line: 5165, column: 9, scope: !6855)
!6858 = !DILocation(line: 5166, column: 6, scope: !6855)
!6859 = !DILocation(line: 5166, column: 10, scope: !6855)
!6860 = !DILocation(line: 5166, column: 21, scope: !6855)
!6861 = !DILocation(line: 5167, column: 10, scope: !6855)
!6862 = !DILocation(line: 5167, column: 15, scope: !6855)
!6863 = !DILocation(line: 5168, column: 7, scope: !6855)
!6864 = !DILocation(line: 5168, column: 12, scope: !6855)
!6865 = !DILocation(line: 5169, column: 6, scope: !6855)
!6866 = !DILocation(line: 5169, column: 9, scope: !6855)
!6867 = !DILocation(line: 5169, column: 31, scope: !6855)
!6868 = !DILocation(line: 5170, column: 6, scope: !6855)
!6869 = !DILocation(line: 5170, column: 9, scope: !6855)
!6870 = !DILocation(line: 5170, column: 14, scope: !6855)
!6871 = !DILocation(line: 5164, column: 13, scope: !6837)
!6872 = !DILocation(line: 5172, column: 30, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6855, file: !3, line: 5171, column: 6)
!6874 = !DILocation(line: 5173, column: 21, scope: !6873)
!6875 = !DILocation(line: 5173, column: 19, scope: !6873)
!6876 = !DILocation(line: 5174, column: 26, scope: !6873)
!6877 = !DILocation(line: 5174, column: 24, scope: !6873)
!6878 = !DILocation(line: 5175, column: 29, scope: !6873)
!6879 = !DILocation(line: 5175, column: 27, scope: !6873)
!6880 = !DILocation(line: 5176, column: 6, scope: !6873)
!6881 = !DILocation(line: 5180, column: 11, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 5180, column: 11)
!6883 = !DILocation(line: 5180, column: 11, scope: !5635)
!6884 = !DILocation(line: 5182, column: 5, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6882, file: !3, line: 5181, column: 2)
!6886 = !DILocation(line: 5183, column: 4, scope: !6885)
!6887 = !DILocation(line: 5186, column: 13, scope: !5635)
!6888 = !DILocation(line: 5186, column: 11, scope: !5635)
!6889 = !DILocation(line: 5194, column: 11, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 5194, column: 11)
!6891 = !DILocation(line: 5195, column: 4, scope: !6890)
!6892 = !DILocation(line: 5195, column: 7, scope: !6890)
!6893 = !DILocation(line: 5194, column: 11, scope: !5635)
!6894 = !DILocalVariable(name: "dest_q", scope: !6895, file: !3, line: 5197, type: !1053)
!6895 = distinct !DILexicalBlock(scope: !6890, file: !3, line: 5196, column: 2)
!6896 = !DILocation(line: 5197, column: 8, scope: !6895)
!6897 = !DILocation(line: 5197, column: 17, scope: !6895)
!6898 = !DILocalVariable(name: "dest_ent", scope: !6895, file: !3, line: 5198, type: !2216)
!6899 = !DILocation(line: 5198, column: 27, scope: !6895)
!6900 = !DILocation(line: 5198, column: 39, scope: !6895)
!6901 = !DILocation(line: 5198, column: 49, scope: !6895)
!6902 = !DILocation(line: 5200, column: 8, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6895, file: !3, line: 5200, column: 8)
!6904 = !DILocation(line: 5200, column: 18, scope: !6903)
!6905 = !DILocation(line: 5200, column: 26, scope: !6903)
!6906 = !DILocation(line: 5200, column: 23, scope: !6903)
!6907 = !DILocation(line: 5201, column: 8, scope: !6903)
!6908 = !DILocation(line: 5201, column: 11, scope: !6903)
!6909 = !DILocation(line: 5201, column: 21, scope: !6903)
!6910 = !DILocation(line: 5201, column: 34, scope: !6903)
!6911 = !DILocation(line: 5201, column: 31, scope: !6903)
!6912 = !DILocation(line: 5202, column: 8, scope: !6903)
!6913 = !DILocation(line: 5202, column: 11, scope: !6903)
!6914 = !DILocation(line: 5202, column: 23, scope: !6903)
!6915 = !DILocation(line: 5202, column: 26, scope: !6903)
!6916 = !DILocation(line: 5202, column: 41, scope: !6903)
!6917 = !DILocation(line: 5202, column: 38, scope: !6903)
!6918 = !DILocation(line: 5205, column: 8, scope: !6903)
!6919 = !DILocation(line: 5205, column: 13, scope: !6903)
!6920 = !DILocation(line: 5206, column: 5, scope: !6903)
!6921 = !DILocation(line: 5206, column: 8, scope: !6903)
!6922 = !DILocation(line: 5206, column: 28, scope: !6903)
!6923 = !DILocation(line: 5207, column: 8, scope: !6903)
!6924 = !DILocation(line: 5207, column: 13, scope: !6903)
!6925 = !DILocation(line: 5207, column: 26, scope: !6903)
!6926 = !DILocation(line: 5207, column: 29, scope: !6903)
!6927 = !DILocation(line: 5207, column: 42, scope: !6903)
!6928 = !DILocation(line: 5200, column: 8, scope: !6895)
!6929 = !DILocalVariable(name: "src_q", scope: !6930, file: !3, line: 5211, type: !1053)
!6930 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 5210, column: 6)
!6931 = !DILocation(line: 5211, column: 12, scope: !6930)
!6932 = !DILocation(line: 5211, column: 20, scope: !6930)
!6933 = !DILocalVariable(name: "src_ent", scope: !6930, file: !3, line: 5212, type: !2216)
!6934 = !DILocation(line: 5212, column: 31, scope: !6930)
!6935 = !DILocation(line: 5212, column: 42, scope: !6930)
!6936 = !DILocation(line: 5212, column: 52, scope: !6930)
!6937 = !DILocalVariable(name: "first", scope: !6930, file: !3, line: 5213, type: !1053)
!6938 = !DILocation(line: 5213, column: 12, scope: !6930)
!6939 = !DILocation(line: 5213, column: 20, scope: !6930)
!6940 = !DILocation(line: 5213, column: 29, scope: !6930)
!6941 = !DILocalVariable(name: "new_src", scope: !6930, file: !3, line: 5214, type: !1091)
!6942 = !DILocation(line: 5214, column: 12, scope: !6930)
!6943 = !DILocation(line: 5215, column: 6, scope: !6930)
!6944 = !DILocation(line: 5215, column: 12, scope: !6930)
!6945 = !DILocation(line: 5216, column: 8, scope: !6930)
!6946 = !DILocation(line: 5216, column: 22, scope: !6930)
!6947 = !DILocation(line: 5216, column: 44, scope: !6930)
!6948 = !DILocation(line: 5216, column: 60, scope: !6930)
!6949 = !DILocation(line: 5216, column: 31, scope: !6930)
!6950 = !DILocation(line: 5221, column: 29, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 5221, column: 12)
!6952 = !DILocation(line: 5221, column: 36, scope: !6951)
!6953 = !DILocation(line: 5221, column: 59, scope: !6951)
!6954 = !DILocation(line: 5221, column: 12, scope: !6951)
!6955 = !DILocation(line: 5221, column: 12, scope: !6930)
!6956 = !DILocation(line: 5223, column: 11, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6951, file: !3, line: 5222, column: 3)
!6958 = !DILocation(line: 5223, column: 9, scope: !6957)
!6959 = !DILocation(line: 5227, column: 9, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6957, file: !3, line: 5227, column: 9)
!6961 = !DILocation(line: 5227, column: 19, scope: !6960)
!6962 = !DILocation(line: 5227, column: 22, scope: !6960)
!6963 = !DILocation(line: 5227, column: 41, scope: !6960)
!6964 = !DILocation(line: 5227, column: 39, scope: !6960)
!6965 = !DILocation(line: 5228, column: 9, scope: !6960)
!6966 = !DILocation(line: 5228, column: 29, scope: !6960)
!6967 = !DILocation(line: 5228, column: 36, scope: !6960)
!6968 = !DILocation(line: 5229, column: 8, scope: !6960)
!6969 = !DILocation(line: 5228, column: 12, scope: !6960)
!6970 = !DILocation(line: 5227, column: 9, scope: !6957)
!6971 = !DILocation(line: 5230, column: 13, scope: !6960)
!6972 = !DILocation(line: 5230, column: 11, scope: !6960)
!6973 = !DILocation(line: 5230, column: 7, scope: !6960)
!6974 = !DILocation(line: 5231, column: 3, scope: !6957)
!6975 = !DILocation(line: 5232, column: 6, scope: !6930)
!6976 = !DILocation(line: 5233, column: 2, scope: !6895)
!6977 = !DILocation(line: 5236, column: 11, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 5236, column: 11)
!6979 = !DILocation(line: 5236, column: 18, scope: !6978)
!6980 = !DILocation(line: 5236, column: 23, scope: !6978)
!6981 = !DILocation(line: 5236, column: 26, scope: !6978)
!6982 = !DILocation(line: 5236, column: 15, scope: !6978)
!6983 = !DILocation(line: 5236, column: 11, scope: !5635)
!6984 = !DILocation(line: 5238, column: 18, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 5237, column: 2)
!6986 = !DILocation(line: 5239, column: 23, scope: !6985)
!6987 = !DILocation(line: 5240, column: 18, scope: !6985)
!6988 = !DILocation(line: 5240, column: 4, scope: !6985)
!6989 = !DILocation(line: 5240, column: 9, scope: !6985)
!6990 = !DILocation(line: 5240, column: 12, scope: !6985)
!6991 = !DILocation(line: 5240, column: 16, scope: !6985)
!6992 = !DILocation(line: 5241, column: 23, scope: !6985)
!6993 = !DILocation(line: 5241, column: 4, scope: !6985)
!6994 = !DILocation(line: 5241, column: 9, scope: !6985)
!6995 = !DILocation(line: 5241, column: 12, scope: !6985)
!6996 = !DILocation(line: 5241, column: 21, scope: !6985)
!6997 = !DILocation(line: 5242, column: 27, scope: !6985)
!6998 = !DILocation(line: 5242, column: 4, scope: !6985)
!6999 = !DILocation(line: 5242, column: 9, scope: !6985)
!7000 = !DILocation(line: 5242, column: 12, scope: !6985)
!7001 = !DILocation(line: 5242, column: 25, scope: !6985)
!7002 = !DILocation(line: 5243, column: 28, scope: !6985)
!7003 = !DILocation(line: 5243, column: 4, scope: !6985)
!7004 = !DILocation(line: 5243, column: 9, scope: !6985)
!7005 = !DILocation(line: 5243, column: 12, scope: !6985)
!7006 = !DILocation(line: 5243, column: 26, scope: !6985)
!7007 = !DILocation(line: 5244, column: 30, scope: !6985)
!7008 = !DILocation(line: 5244, column: 35, scope: !6985)
!7009 = !DILocation(line: 5244, column: 40, scope: !6985)
!7010 = !DILocation(line: 5244, column: 43, scope: !6985)
!7011 = !DILocation(line: 5244, column: 53, scope: !6985)
!7012 = !DILocation(line: 5244, column: 22, scope: !6985)
!7013 = !DILocation(line: 5244, column: 4, scope: !6985)
!7014 = !DILocation(line: 5244, column: 9, scope: !6985)
!7015 = !DILocation(line: 5244, column: 12, scope: !6985)
!7016 = !DILocation(line: 5244, column: 20, scope: !6985)
!7017 = !DILocation(line: 5245, column: 2, scope: !6985)
!7018 = !DILocation(line: 5257, column: 11, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 5257, column: 11)
!7020 = !DILocation(line: 5257, column: 18, scope: !7019)
!7021 = !DILocation(line: 5257, column: 23, scope: !7019)
!7022 = !DILocation(line: 5257, column: 26, scope: !7019)
!7023 = !DILocation(line: 5257, column: 36, scope: !7019)
!7024 = !DILocation(line: 5257, column: 39, scope: !7019)
!7025 = !DILocation(line: 5258, column: 4, scope: !7019)
!7026 = !DILocation(line: 5258, column: 8, scope: !7019)
!7027 = !DILocation(line: 5259, column: 4, scope: !7019)
!7028 = !DILocation(line: 5259, column: 10, scope: !7019)
!7029 = !DILocation(line: 5259, column: 31, scope: !7019)
!7030 = !DILocation(line: 5260, column: 3, scope: !7019)
!7031 = !DILocation(line: 5260, column: 6, scope: !7019)
!7032 = !DILocation(line: 5260, column: 37, scope: !7019)
!7033 = !DILocation(line: 5261, column: 3, scope: !7019)
!7034 = !DILocation(line: 5261, column: 6, scope: !7019)
!7035 = !DILocation(line: 5261, column: 47, scope: !7019)
!7036 = !DILocation(line: 5262, column: 3, scope: !7019)
!7037 = !DILocation(line: 5262, column: 6, scope: !7019)
!7038 = !DILocation(line: 5262, column: 47, scope: !7019)
!7039 = !DILocation(line: 5257, column: 11, scope: !5635)
!7040 = !DILocation(line: 5265, column: 23, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7042, file: !3, line: 5265, column: 8)
!7042 = distinct !DILexicalBlock(scope: !7019, file: !3, line: 5263, column: 2)
!7043 = !DILocation(line: 5265, column: 28, scope: !7041)
!7044 = !DILocation(line: 5265, column: 10, scope: !7041)
!7045 = !DILocation(line: 5265, column: 8, scope: !7042)
!7046 = !DILocation(line: 5268, column: 30, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7041, file: !3, line: 5266, column: 6)
!7048 = !DILocation(line: 5268, column: 20, scope: !7047)
!7049 = !DILocation(line: 5268, column: 18, scope: !7047)
!7050 = !DILocation(line: 5272, column: 29, scope: !7047)
!7051 = !DILocation(line: 5272, column: 46, scope: !7047)
!7052 = !DILocation(line: 5272, column: 8, scope: !7047)
!7053 = !DILocation(line: 5273, column: 25, scope: !7047)
!7054 = !DILocation(line: 5273, column: 8, scope: !7047)
!7055 = !DILocation(line: 5274, column: 6, scope: !7047)
!7056 = !DILocation(line: 5275, column: 2, scope: !7042)
!7057 = !DILocation(line: 5278, column: 21, scope: !5635)
!7058 = !DILocation(line: 5281, column: 7, scope: !5635)
!7059 = !DILocation(line: 5281, column: 14, scope: !5635)
!7060 = !DILocation(line: 5281, column: 30, scope: !5635)
!7061 = !DILocation(line: 5282, column: 7, scope: !5635)
!7062 = !DILocation(line: 5282, column: 10, scope: !5635)
!7063 = !DILocation(line: 5282, column: 26, scope: !5635)
!7064 = !DILocation(line: 5283, column: 7, scope: !5635)
!7065 = !DILocation(line: 5283, column: 10, scope: !5635)
!7066 = !DILocation(line: 5283, column: 26, scope: !5635)
!7067 = !DILocation(line: 5284, column: 9, scope: !5635)
!7068 = !DILocation(line: 5284, column: 7, scope: !5635)
!7069 = distinct !{!7069, !7058, !7067}
!7070 = !DILocation(line: 5286, column: 28, scope: !5635)
!7071 = !DILocation(line: 5286, column: 7, scope: !5635)
!7072 = !DILocation(line: 5286, column: 12, scope: !5635)
!7073 = !DILocation(line: 5286, column: 15, scope: !5635)
!7074 = !DILocation(line: 5286, column: 26, scope: !5635)
!7075 = !DILocation(line: 5288, column: 11, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 5288, column: 11)
!7077 = !DILocation(line: 5288, column: 11, scope: !5635)
!7078 = !DILocalVariable(name: "addr", scope: !7079, file: !3, line: 5292, type: !1091)
!7079 = distinct !DILexicalBlock(scope: !7076, file: !3, line: 5289, column: 2)
!7080 = !DILocation(line: 5292, column: 8, scope: !7079)
!7081 = !DILocation(line: 5292, column: 15, scope: !7079)
!7082 = !DILocation(line: 5293, column: 8, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7079, file: !3, line: 5293, column: 8)
!7084 = !DILocation(line: 5293, column: 40, scope: !7083)
!7085 = !DILocation(line: 5294, column: 8, scope: !7083)
!7086 = !DILocation(line: 5294, column: 11, scope: !7083)
!7087 = !DILocation(line: 5294, column: 29, scope: !7083)
!7088 = !DILocation(line: 5294, column: 26, scope: !7083)
!7089 = !DILocation(line: 5293, column: 8, scope: !7079)
!7090 = !DILocation(line: 5295, column: 18, scope: !7083)
!7091 = !DILocation(line: 5295, column: 6, scope: !7083)
!7092 = !DILocation(line: 5297, column: 21, scope: !7079)
!7093 = !DILocation(line: 5297, column: 27, scope: !7079)
!7094 = !DILocation(line: 5297, column: 11, scope: !7079)
!7095 = !DILocation(line: 5297, column: 9, scope: !7079)
!7096 = !DILocation(line: 5298, column: 2, scope: !7079)
!7097 = !DILocation(line: 5304, column: 27, scope: !5635)
!7098 = !DILocation(line: 5304, column: 7, scope: !5635)
!7099 = !DILocation(line: 5304, column: 12, scope: !5635)
!7100 = !DILocation(line: 5304, column: 15, scope: !5635)
!7101 = !DILocation(line: 5304, column: 25, scope: !5635)
!7102 = !DILocation(line: 5310, column: 11, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 5310, column: 11)
!7104 = !DILocation(line: 5310, column: 45, scope: !7103)
!7105 = !DILocation(line: 5310, column: 11, scope: !5635)
!7106 = !DILocalVariable(name: "width", scope: !7107, file: !3, line: 5312, type: !1091)
!7107 = distinct !DILexicalBlock(scope: !7103, file: !3, line: 5311, column: 2)
!7108 = !DILocation(line: 5312, column: 8, scope: !7107)
!7109 = !DILocation(line: 5312, column: 16, scope: !7107)
!7110 = !DILocation(line: 5314, column: 8, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7107, file: !3, line: 5314, column: 8)
!7112 = !DILocation(line: 5314, column: 18, scope: !7111)
!7113 = !DILocation(line: 5314, column: 23, scope: !7111)
!7114 = !DILocation(line: 5314, column: 26, scope: !7111)
!7115 = !DILocation(line: 5315, column: 8, scope: !7111)
!7116 = !DILocation(line: 5315, column: 11, scope: !7111)
!7117 = !DILocation(line: 5316, column: 8, scope: !7111)
!7118 = !DILocation(line: 5316, column: 11, scope: !7111)
!7119 = !DILocation(line: 5316, column: 26, scope: !7111)
!7120 = !DILocation(line: 5317, column: 8, scope: !7111)
!7121 = !DILocation(line: 5317, column: 14, scope: !7111)
!7122 = !DILocation(line: 5318, column: 34, scope: !7111)
!7123 = !DILocation(line: 5318, column: 31, scope: !7111)
!7124 = !DILocation(line: 5318, column: 7, scope: !7111)
!7125 = !DILocation(line: 5314, column: 8, scope: !7107)
!7126 = !DILocation(line: 5328, column: 8, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7111, file: !3, line: 5323, column: 6)
!7128 = !DILocation(line: 5328, column: 13, scope: !7127)
!7129 = !DILocation(line: 5328, column: 16, scope: !7127)
!7130 = !DILocation(line: 5328, column: 24, scope: !7127)
!7131 = !DILocation(line: 5329, column: 8, scope: !7127)
!7132 = !DILocation(line: 5329, column: 13, scope: !7127)
!7133 = !DILocation(line: 5329, column: 16, scope: !7127)
!7134 = !DILocation(line: 5329, column: 29, scope: !7127)
!7135 = !DILocation(line: 5330, column: 16, scope: !7127)
!7136 = !DILocation(line: 5331, column: 20, scope: !7127)
!7137 = !DILocation(line: 5333, column: 2, scope: !7107)
!7138 = !DILocation(line: 5337, column: 16, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7103, file: !3, line: 5337, column: 16)
!7140 = !DILocation(line: 5337, column: 23, scope: !7139)
!7141 = !DILocation(line: 5337, column: 28, scope: !7139)
!7142 = !DILocation(line: 5337, column: 31, scope: !7139)
!7143 = !DILocation(line: 5337, column: 39, scope: !7139)
!7144 = !DILocation(line: 5337, column: 36, scope: !7139)
!7145 = !DILocation(line: 5337, column: 46, scope: !7139)
!7146 = !DILocation(line: 5337, column: 49, scope: !7139)
!7147 = !DILocation(line: 5337, column: 56, scope: !7139)
!7148 = !DILocation(line: 5337, column: 53, scope: !7139)
!7149 = !DILocation(line: 5337, column: 16, scope: !7103)
!7150 = !DILocation(line: 5340, column: 27, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 5338, column: 2)
!7152 = !DILocation(line: 5340, column: 4, scope: !7151)
!7153 = !DILocation(line: 5341, column: 22, scope: !7151)
!7154 = !DILocation(line: 5343, column: 4, scope: !7151)
!7155 = !DILocation(line: 5343, column: 9, scope: !7151)
!7156 = !DILocation(line: 5343, column: 12, scope: !7151)
!7157 = !DILocation(line: 5343, column: 16, scope: !7151)
!7158 = !DILocation(line: 5344, column: 2, scope: !7151)
!7159 = !DILocation(line: 5348, column: 16, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 5348, column: 16)
!7161 = !DILocation(line: 5348, column: 24, scope: !7160)
!7162 = !DILocation(line: 5348, column: 21, scope: !7160)
!7163 = !DILocation(line: 5348, column: 31, scope: !7160)
!7164 = !DILocation(line: 5348, column: 34, scope: !7160)
!7165 = !DILocation(line: 5348, column: 49, scope: !7160)
!7166 = !DILocation(line: 5349, column: 9, scope: !7160)
!7167 = !DILocation(line: 5349, column: 13, scope: !7160)
!7168 = !DILocation(line: 5348, column: 16, scope: !7139)
!7169 = !DILocation(line: 5358, column: 8, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7171, file: !3, line: 5358, column: 8)
!7171 = distinct !DILexicalBlock(scope: !7160, file: !3, line: 5350, column: 2)
!7172 = !DILocation(line: 5358, column: 15, scope: !7170)
!7173 = !DILocation(line: 5358, column: 8, scope: !7171)
!7174 = !DILocalVariable(name: "new_rtx", scope: !7175, file: !3, line: 5360, type: !1091)
!7175 = distinct !DILexicalBlock(scope: !7170, file: !3, line: 5359, column: 6)
!7176 = !DILocation(line: 5360, column: 12, scope: !7175)
!7177 = !DILocalVariable(name: "note", scope: !7175, file: !3, line: 5360, type: !1091)
!7178 = !DILocation(line: 5360, column: 21, scope: !7175)
!7179 = !DILocation(line: 5362, column: 51, scope: !7175)
!7180 = !DILocation(line: 5362, column: 41, scope: !7175)
!7181 = !DILocation(line: 5362, column: 67, scope: !7175)
!7182 = !DILocation(line: 5362, column: 18, scope: !7175)
!7183 = !DILocation(line: 5362, column: 16, scope: !7175)
!7184 = !DILocation(line: 5363, column: 31, scope: !7175)
!7185 = !DILocation(line: 5363, column: 8, scope: !7175)
!7186 = !DILocation(line: 5363, column: 29, scope: !7175)
!7187 = !DILocation(line: 5364, column: 8, scope: !7175)
!7188 = !DILocation(line: 5364, column: 35, scope: !7175)
!7189 = !DILocation(line: 5367, column: 30, scope: !7175)
!7190 = !DILocation(line: 5367, column: 15, scope: !7175)
!7191 = !DILocation(line: 5367, column: 13, scope: !7175)
!7192 = !DILocation(line: 5368, column: 12, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7175, file: !3, line: 5368, column: 12)
!7194 = !DILocation(line: 5368, column: 12, scope: !7175)
!7195 = !DILocation(line: 5370, column: 5, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7193, file: !3, line: 5369, column: 3)
!7197 = !DILocation(line: 5370, column: 20, scope: !7196)
!7198 = !DILocation(line: 5371, column: 27, scope: !7196)
!7199 = !DILocation(line: 5371, column: 5, scope: !7196)
!7200 = !DILocation(line: 5371, column: 25, scope: !7196)
!7201 = !DILocation(line: 5372, column: 3, scope: !7196)
!7202 = !DILocation(line: 5374, column: 31, scope: !7175)
!7203 = !DILocation(line: 5374, column: 8, scope: !7175)
!7204 = !DILocation(line: 5375, column: 15, scope: !7175)
!7205 = !DILocation(line: 5375, column: 13, scope: !7175)
!7206 = !DILocation(line: 5376, column: 6, scope: !7175)
!7207 = !DILocation(line: 5378, column: 6, scope: !7170)
!7208 = !DILocation(line: 5378, column: 23, scope: !7170)
!7209 = !DILocation(line: 5381, column: 22, scope: !7171)
!7210 = !DILocation(line: 5382, column: 4, scope: !7171)
!7211 = !DILocation(line: 5382, column: 9, scope: !7171)
!7212 = !DILocation(line: 5382, column: 12, scope: !7171)
!7213 = !DILocation(line: 5382, column: 16, scope: !7171)
!7214 = !DILocation(line: 5383, column: 2, scope: !7171)
!7215 = !DILocation(line: 5388, column: 16, scope: !7216)
!7216 = distinct !DILexicalBlock(scope: !7160, file: !3, line: 5388, column: 16)
!7217 = !DILocation(line: 5388, column: 16, scope: !7160)
!7218 = !DILocation(line: 5390, column: 8, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !7220, file: !3, line: 5390, column: 8)
!7220 = distinct !DILexicalBlock(scope: !7216, file: !3, line: 5389, column: 2)
!7221 = !DILocation(line: 5390, column: 21, scope: !7219)
!7222 = !DILocation(line: 5390, column: 24, scope: !7219)
!7223 = !DILocation(line: 5390, column: 40, scope: !7219)
!7224 = !DILocation(line: 5390, column: 8, scope: !7220)
!7225 = !DILocation(line: 5391, column: 18, scope: !7219)
!7226 = !DILocation(line: 5391, column: 6, scope: !7219)
!7227 = !DILocation(line: 5392, column: 13, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7219, file: !3, line: 5392, column: 13)
!7229 = !DILocation(line: 5392, column: 13, scope: !7219)
!7230 = !DILocation(line: 5393, column: 18, scope: !7228)
!7231 = !DILocation(line: 5393, column: 6, scope: !7228)
!7232 = !DILocation(line: 5394, column: 13, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7228, file: !3, line: 5394, column: 13)
!7234 = !DILocation(line: 5394, column: 29, scope: !7233)
!7235 = !DILocation(line: 5395, column: 6, scope: !7233)
!7236 = !DILocation(line: 5395, column: 9, scope: !7233)
!7237 = !DILocation(line: 5395, column: 25, scope: !7233)
!7238 = !DILocation(line: 5394, column: 13, scope: !7228)
!7239 = !DILocation(line: 5396, column: 18, scope: !7233)
!7240 = !DILocation(line: 5396, column: 34, scope: !7233)
!7241 = !DILocation(line: 5396, column: 6, scope: !7233)
!7242 = !DILocation(line: 5397, column: 4, scope: !7220)
!7243 = !DILocation(line: 5397, column: 9, scope: !7220)
!7244 = !DILocation(line: 5397, column: 12, scope: !7220)
!7245 = !DILocation(line: 5397, column: 16, scope: !7220)
!7246 = !DILocation(line: 5398, column: 2, scope: !7220)
!7247 = !DILocation(line: 5400, column: 11, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 5400, column: 11)
!7249 = !DILocation(line: 5400, column: 16, scope: !7248)
!7250 = !DILocation(line: 5400, column: 19, scope: !7248)
!7251 = !DILocation(line: 5400, column: 23, scope: !7248)
!7252 = !DILocation(line: 5400, column: 28, scope: !7248)
!7253 = !DILocation(line: 5400, column: 31, scope: !7248)
!7254 = !DILocation(line: 5400, column: 39, scope: !7248)
!7255 = !DILocation(line: 5400, column: 36, scope: !7248)
!7256 = !DILocation(line: 5400, column: 11, scope: !5635)
!7257 = !DILocation(line: 5401, column: 22, scope: !7248)
!7258 = !DILocation(line: 5401, column: 2, scope: !7248)
!7259 = !DILocation(line: 5401, column: 7, scope: !7248)
!7260 = !DILocation(line: 5401, column: 10, scope: !7248)
!7261 = !DILocation(line: 5401, column: 20, scope: !7248)
!7262 = !DILocation(line: 5419, column: 5, scope: !5635)
!7263 = !DILocation(line: 4437, column: 28, scope: !5630)
!7264 = !DILocation(line: 4437, column: 3, scope: !5630)
!7265 = distinct !{!7265, !5633, !7266}
!7266 = !DILocation(line: 5419, column: 5, scope: !5627)
!7267 = !DILocation(line: 5428, column: 7, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 5428, column: 7)
!7269 = !DILocation(line: 5428, column: 15, scope: !7268)
!7270 = !DILocation(line: 5428, column: 18, scope: !7268)
!7271 = !DILocation(line: 5428, column: 30, scope: !7268)
!7272 = !DILocation(line: 5428, column: 35, scope: !7268)
!7273 = !DILocation(line: 5428, column: 38, scope: !7268)
!7274 = !DILocation(line: 5428, column: 46, scope: !7268)
!7275 = !DILocation(line: 5428, column: 50, scope: !7268)
!7276 = !DILocation(line: 5428, column: 55, scope: !7268)
!7277 = !DILocation(line: 5428, column: 60, scope: !7268)
!7278 = !DILocation(line: 5429, column: 7, scope: !7268)
!7279 = !DILocation(line: 5429, column: 25, scope: !7268)
!7280 = !DILocation(line: 5429, column: 34, scope: !7268)
!7281 = !DILocation(line: 5429, column: 12, scope: !7268)
!7282 = !DILocation(line: 5428, column: 7, scope: !5245)
!7283 = !DILocalVariable(name: "elt", scope: !7284, file: !3, line: 5431, type: !2307)
!7284 = distinct !DILexicalBlock(scope: !7268, file: !3, line: 5430, column: 5)
!7285 = !DILocation(line: 5431, column: 25, scope: !7284)
!7286 = !DILocalVariable(name: "classp", scope: !7284, file: !3, line: 5432, type: !2307)
!7287 = !DILocation(line: 5432, column: 25, scope: !7284)
!7288 = !DILocation(line: 5432, column: 34, scope: !7284)
!7289 = !DILocation(line: 5432, column: 42, scope: !7284)
!7290 = !DILocalVariable(name: "dest", scope: !7284, file: !3, line: 5433, type: !1091)
!7291 = !DILocation(line: 5433, column: 11, scope: !7284)
!7292 = !DILocation(line: 5433, column: 18, scope: !7284)
!7293 = !DILocalVariable(name: "eqvmode", scope: !7284, file: !3, line: 5434, type: !5)
!7294 = !DILocation(line: 5434, column: 25, scope: !7284)
!7295 = !DILocation(line: 5434, column: 35, scope: !7284)
!7296 = !DILocation(line: 5436, column: 11, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7284, file: !3, line: 5436, column: 11)
!7298 = !DILocation(line: 5436, column: 27, scope: !7297)
!7299 = !DILocation(line: 5436, column: 11, scope: !7284)
!7300 = !DILocation(line: 5438, column: 14, scope: !7301)
!7301 = distinct !DILexicalBlock(scope: !7297, file: !3, line: 5437, column: 2)
!7302 = !DILocation(line: 5438, column: 12, scope: !7301)
!7303 = !DILocation(line: 5439, column: 11, scope: !7301)
!7304 = !DILocation(line: 5440, column: 2, scope: !7301)
!7305 = !DILocation(line: 5441, column: 24, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !7284, file: !3, line: 5441, column: 11)
!7307 = !DILocation(line: 5441, column: 33, scope: !7306)
!7308 = !DILocation(line: 5441, column: 11, scope: !7306)
!7309 = !DILocation(line: 5441, column: 11, scope: !7284)
!7310 = !DILocation(line: 5443, column: 22, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 5442, column: 2)
!7312 = !DILocation(line: 5443, column: 4, scope: !7311)
!7313 = !DILocation(line: 5444, column: 19, scope: !7311)
!7314 = !DILocation(line: 5444, column: 17, scope: !7311)
!7315 = !DILocation(line: 5445, column: 2, scope: !7311)
!7316 = !DILocation(line: 5446, column: 21, scope: !7284)
!7317 = !DILocation(line: 5446, column: 30, scope: !7284)
!7318 = !DILocation(line: 5446, column: 38, scope: !7284)
!7319 = !DILocation(line: 5446, column: 52, scope: !7284)
!7320 = !DILocation(line: 5446, column: 13, scope: !7284)
!7321 = !DILocation(line: 5446, column: 11, scope: !7284)
!7322 = !DILocation(line: 5447, column: 24, scope: !7284)
!7323 = !DILocation(line: 5447, column: 7, scope: !7284)
!7324 = !DILocation(line: 5447, column: 12, scope: !7284)
!7325 = !DILocation(line: 5447, column: 22, scope: !7284)
!7326 = !DILocation(line: 5448, column: 21, scope: !7284)
!7327 = !DILocation(line: 5448, column: 19, scope: !7284)
!7328 = !DILocation(line: 5453, column: 14, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7284, file: !3, line: 5453, column: 7)
!7330 = !DILocation(line: 5453, column: 12, scope: !7329)
!7331 = !DILocation(line: 5453, column: 19, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7329, file: !3, line: 5453, column: 7)
!7333 = !DILocation(line: 5453, column: 23, scope: !7332)
!7334 = !DILocation(line: 5453, column: 21, scope: !7332)
!7335 = !DILocation(line: 5453, column: 7, scope: !7329)
!7336 = !DILocation(line: 5454, column: 6, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 5454, column: 6)
!7338 = !DILocation(line: 5454, column: 11, scope: !7337)
!7339 = !DILocation(line: 5454, column: 14, scope: !7337)
!7340 = !DILocation(line: 5454, column: 18, scope: !7337)
!7341 = !DILocation(line: 5454, column: 21, scope: !7337)
!7342 = !DILocation(line: 5454, column: 26, scope: !7337)
!7343 = !DILocation(line: 5454, column: 29, scope: !7337)
!7344 = !DILocation(line: 5454, column: 37, scope: !7337)
!7345 = !DILocation(line: 5455, column: 6, scope: !7337)
!7346 = !DILocation(line: 5455, column: 22, scope: !7337)
!7347 = !DILocation(line: 5455, column: 45, scope: !7337)
!7348 = !DILocation(line: 5455, column: 9, scope: !7337)
!7349 = !DILocation(line: 5454, column: 6, scope: !7332)
!7350 = !DILocation(line: 5456, column: 22, scope: !7337)
!7351 = !DILocation(line: 5456, column: 4, scope: !7337)
!7352 = !DILocation(line: 5456, column: 9, scope: !7337)
!7353 = !DILocation(line: 5456, column: 12, scope: !7337)
!7354 = !DILocation(line: 5456, column: 20, scope: !7337)
!7355 = !DILocation(line: 5455, column: 52, scope: !7337)
!7356 = !DILocation(line: 5453, column: 32, scope: !7332)
!7357 = !DILocation(line: 5453, column: 7, scope: !7332)
!7358 = distinct !{!7358, !7335, !7359}
!7359 = !DILocation(line: 5456, column: 22, scope: !7329)
!7360 = !DILocation(line: 5457, column: 5, scope: !7284)
!7361 = !DILocation(line: 5459, column: 10, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 5459, column: 3)
!7363 = !DILocation(line: 5459, column: 8, scope: !7362)
!7364 = !DILocation(line: 5459, column: 15, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7362, file: !3, line: 5459, column: 3)
!7366 = !DILocation(line: 5459, column: 19, scope: !7365)
!7367 = !DILocation(line: 5459, column: 17, scope: !7365)
!7368 = !DILocation(line: 5459, column: 3, scope: !7362)
!7369 = !DILocation(line: 5460, column: 9, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7365, file: !3, line: 5460, column: 9)
!7371 = !DILocation(line: 5460, column: 14, scope: !7370)
!7372 = !DILocation(line: 5460, column: 17, scope: !7370)
!7373 = !DILocation(line: 5460, column: 21, scope: !7370)
!7374 = !DILocation(line: 5460, column: 26, scope: !7370)
!7375 = !DILocation(line: 5460, column: 31, scope: !7370)
!7376 = !DILocation(line: 5460, column: 34, scope: !7370)
!7377 = !DILocation(line: 5461, column: 2, scope: !7370)
!7378 = !DILocation(line: 5461, column: 20, scope: !7370)
!7379 = !DILocation(line: 5461, column: 43, scope: !7370)
!7380 = !DILocation(line: 5461, column: 7, scope: !7370)
!7381 = !DILocation(line: 5460, column: 9, scope: !7365)
!7382 = !DILocation(line: 5463, column: 6, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7384, file: !3, line: 5463, column: 6)
!7384 = distinct !DILexicalBlock(scope: !7370, file: !3, line: 5462, column: 7)
!7385 = !DILocation(line: 5463, column: 40, scope: !7383)
!7386 = !DILocation(line: 5463, column: 6, scope: !7384)
!7387 = !DILocation(line: 5470, column: 24, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7383, file: !3, line: 5464, column: 4)
!7389 = !DILocation(line: 5470, column: 6, scope: !7388)
!7390 = !DILocation(line: 5470, column: 11, scope: !7388)
!7391 = !DILocation(line: 5470, column: 14, scope: !7388)
!7392 = !DILocation(line: 5470, column: 22, scope: !7388)
!7393 = !DILocation(line: 5471, column: 25, scope: !7388)
!7394 = !DILocation(line: 5471, column: 6, scope: !7388)
!7395 = !DILocation(line: 5471, column: 11, scope: !7388)
!7396 = !DILocation(line: 5471, column: 14, scope: !7388)
!7397 = !DILocation(line: 5471, column: 23, scope: !7388)
!7398 = !DILocation(line: 5472, column: 4, scope: !7388)
!7399 = !DILocalVariable(name: "classp", scope: !7400, file: !3, line: 5477, type: !2307)
!7400 = distinct !DILexicalBlock(scope: !7383, file: !3, line: 5474, column: 4)
!7401 = !DILocation(line: 5477, column: 24, scope: !7400)
!7402 = !DILocation(line: 5477, column: 33, scope: !7400)
!7403 = !DILocalVariable(name: "src", scope: !7400, file: !3, line: 5478, type: !1091)
!7404 = !DILocation(line: 5478, column: 10, scope: !7400)
!7405 = !DILocation(line: 5478, column: 16, scope: !7400)
!7406 = !DILocation(line: 5478, column: 21, scope: !7400)
!7407 = !DILocation(line: 5478, column: 24, scope: !7400)
!7408 = !DILocalVariable(name: "dest", scope: !7400, file: !3, line: 5479, type: !1091)
!7409 = !DILocation(line: 5479, column: 10, scope: !7400)
!7410 = !DILocation(line: 5479, column: 17, scope: !7400)
!7411 = !DILocalVariable(name: "mode", scope: !7400, file: !3, line: 5480, type: !5)
!7412 = !DILocation(line: 5480, column: 24, scope: !7400)
!7413 = !DILocation(line: 5481, column: 10, scope: !7400)
!7414 = !DILocation(line: 5481, column: 25, scope: !7400)
!7415 = !DILocation(line: 5481, column: 39, scope: !7400)
!7416 = !DILocation(line: 5481, column: 57, scope: !7400)
!7417 = !DILocation(line: 5490, column: 11, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7400, file: !3, line: 5490, column: 10)
!7419 = !DILocation(line: 5490, column: 10, scope: !7400)
!7420 = !DILocation(line: 5491, column: 17, scope: !7418)
!7421 = !DILocation(line: 5491, column: 22, scope: !7418)
!7422 = !DILocation(line: 5491, column: 25, scope: !7418)
!7423 = !DILocation(line: 5491, column: 15, scope: !7418)
!7424 = !DILocation(line: 5491, column: 8, scope: !7418)
!7425 = !DILocation(line: 5493, column: 10, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7400, file: !3, line: 5493, column: 10)
!7427 = !DILocation(line: 5493, column: 15, scope: !7426)
!7428 = !DILocation(line: 5493, column: 18, scope: !7426)
!7429 = !DILocation(line: 5493, column: 26, scope: !7426)
!7430 = !DILocation(line: 5493, column: 10, scope: !7400)
!7431 = !DILocalVariable(name: "elt", scope: !7432, file: !3, line: 5495, type: !2307)
!7432 = distinct !DILexicalBlock(scope: !7426, file: !3, line: 5494, column: 8)
!7433 = !DILocation(line: 5495, column: 21, scope: !7432)
!7434 = !DILocation(line: 5500, column: 20, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7432, file: !3, line: 5500, column: 7)
!7436 = !DILocation(line: 5500, column: 25, scope: !7435)
!7437 = !DILocation(line: 5500, column: 7, scope: !7435)
!7438 = !DILocation(line: 5500, column: 7, scope: !7432)
!7439 = !DILocation(line: 5502, column: 25, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7435, file: !3, line: 5501, column: 5)
!7441 = !DILocation(line: 5502, column: 7, scope: !7440)
!7442 = !DILocation(line: 5503, column: 26, scope: !7440)
!7443 = !DILocation(line: 5503, column: 7, scope: !7440)
!7444 = !DILocation(line: 5503, column: 12, scope: !7440)
!7445 = !DILocation(line: 5503, column: 15, scope: !7440)
!7446 = !DILocation(line: 5503, column: 24, scope: !7440)
!7447 = !DILocation(line: 5504, column: 5, scope: !7440)
!7448 = !DILocation(line: 5505, column: 17, scope: !7432)
!7449 = !DILocation(line: 5505, column: 22, scope: !7432)
!7450 = !DILocation(line: 5505, column: 30, scope: !7432)
!7451 = !DILocation(line: 5505, column: 35, scope: !7432)
!7452 = !DILocation(line: 5505, column: 38, scope: !7432)
!7453 = !DILocation(line: 5505, column: 48, scope: !7432)
!7454 = !DILocation(line: 5505, column: 9, scope: !7432)
!7455 = !DILocation(line: 5505, column: 7, scope: !7432)
!7456 = !DILocation(line: 5506, column: 20, scope: !7432)
!7457 = !DILocation(line: 5506, column: 25, scope: !7432)
!7458 = !DILocation(line: 5506, column: 28, scope: !7432)
!7459 = !DILocation(line: 5506, column: 3, scope: !7432)
!7460 = !DILocation(line: 5506, column: 8, scope: !7432)
!7461 = !DILocation(line: 5506, column: 18, scope: !7432)
!7462 = !DILocation(line: 5507, column: 30, scope: !7432)
!7463 = !DILocation(line: 5507, column: 28, scope: !7432)
!7464 = !DILocation(line: 5507, column: 3, scope: !7432)
!7465 = !DILocation(line: 5507, column: 8, scope: !7432)
!7466 = !DILocation(line: 5507, column: 11, scope: !7432)
!7467 = !DILocation(line: 5507, column: 19, scope: !7432)
!7468 = !DILocation(line: 5508, column: 8, scope: !7432)
!7469 = !DILocation(line: 5509, column: 10, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7400, file: !3, line: 5509, column: 10)
!7471 = !DILocation(line: 5509, column: 15, scope: !7470)
!7472 = !DILocation(line: 5509, column: 18, scope: !7470)
!7473 = !DILocation(line: 5509, column: 28, scope: !7470)
!7474 = !DILocation(line: 5509, column: 31, scope: !7470)
!7475 = !DILocation(line: 5509, column: 36, scope: !7470)
!7476 = !DILocation(line: 5509, column: 39, scope: !7470)
!7477 = !DILocation(line: 5509, column: 53, scope: !7470)
!7478 = !DILocation(line: 5510, column: 3, scope: !7470)
!7479 = !DILocation(line: 5510, column: 6, scope: !7470)
!7480 = !DILocation(line: 5510, column: 13, scope: !7470)
!7481 = !DILocation(line: 5510, column: 18, scope: !7470)
!7482 = !DILocation(line: 5510, column: 21, scope: !7470)
!7483 = !DILocation(line: 5510, column: 10, scope: !7470)
!7484 = !DILocation(line: 5511, column: 3, scope: !7470)
!7485 = !DILocation(line: 5511, column: 21, scope: !7470)
!7486 = !DILocation(line: 5511, column: 26, scope: !7470)
!7487 = !DILocation(line: 5511, column: 29, scope: !7470)
!7488 = !DILocation(line: 5511, column: 40, scope: !7470)
!7489 = !DILocation(line: 5511, column: 8, scope: !7470)
!7490 = !DILocation(line: 5509, column: 10, scope: !7400)
!7491 = !DILocation(line: 5512, column: 34, scope: !7470)
!7492 = !DILocation(line: 5512, column: 39, scope: !7470)
!7493 = !DILocation(line: 5512, column: 42, scope: !7470)
!7494 = !DILocation(line: 5512, column: 53, scope: !7470)
!7495 = !DILocation(line: 5513, column: 6, scope: !7470)
!7496 = !DILocation(line: 5513, column: 11, scope: !7470)
!7497 = !DILocation(line: 5513, column: 14, scope: !7470)
!7498 = !DILocation(line: 5513, column: 30, scope: !7470)
!7499 = !DILocation(line: 5512, column: 26, scope: !7470)
!7500 = !DILocation(line: 5512, column: 8, scope: !7470)
!7501 = !DILocation(line: 5512, column: 13, scope: !7470)
!7502 = !DILocation(line: 5512, column: 16, scope: !7470)
!7503 = !DILocation(line: 5512, column: 24, scope: !7470)
!7504 = !DILocation(line: 5515, column: 7, scope: !7384)
!7505 = !DILocation(line: 5516, column: 14, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7370, file: !3, line: 5516, column: 14)
!7507 = !DILocation(line: 5516, column: 19, scope: !7506)
!7508 = !DILocation(line: 5516, column: 22, scope: !7506)
!7509 = !DILocation(line: 5516, column: 30, scope: !7506)
!7510 = !DILocation(line: 5516, column: 14, scope: !7370)
!7511 = !DILocation(line: 5520, column: 25, scope: !7506)
!7512 = !DILocation(line: 5520, column: 7, scope: !7506)
!7513 = !DILocation(line: 5520, column: 12, scope: !7506)
!7514 = !DILocation(line: 5520, column: 15, scope: !7506)
!7515 = !DILocation(line: 5520, column: 23, scope: !7506)
!7516 = !DILocation(line: 5461, column: 65, scope: !7370)
!7517 = !DILocation(line: 5459, column: 28, scope: !7365)
!7518 = !DILocation(line: 5459, column: 3, scope: !7365)
!7519 = distinct !{!7519, !7368, !7520}
!7520 = !DILocation(line: 5520, column: 25, scope: !7362)
!7521 = !DILocation(line: 5524, column: 10, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 5524, column: 3)
!7523 = !DILocation(line: 5524, column: 8, scope: !7522)
!7524 = !DILocation(line: 5524, column: 15, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7522, file: !3, line: 5524, column: 3)
!7526 = !DILocation(line: 5524, column: 19, scope: !7525)
!7527 = !DILocation(line: 5524, column: 17, scope: !7525)
!7528 = !DILocation(line: 5524, column: 3, scope: !7522)
!7529 = !DILocation(line: 5526, column: 11, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7531, file: !3, line: 5526, column: 11)
!7531 = distinct !DILexicalBlock(scope: !7525, file: !3, line: 5525, column: 5)
!7532 = !DILocation(line: 5526, column: 16, scope: !7530)
!7533 = !DILocation(line: 5526, column: 19, scope: !7530)
!7534 = !DILocation(line: 5526, column: 11, scope: !7531)
!7535 = !DILocalVariable(name: "x", scope: !7536, file: !3, line: 5528, type: !1091)
!7536 = distinct !DILexicalBlock(scope: !7530, file: !3, line: 5527, column: 2)
!7537 = !DILocation(line: 5528, column: 8, scope: !7536)
!7538 = !DILocation(line: 5528, column: 12, scope: !7536)
!7539 = !DILocation(line: 5528, column: 17, scope: !7536)
!7540 = !DILocation(line: 5528, column: 20, scope: !7536)
!7541 = !DILocalVariable(name: "elt", scope: !7536, file: !3, line: 5529, type: !2307)
!7542 = !DILocation(line: 5529, column: 22, scope: !7536)
!7543 = !DILocalVariable(name: "mode", scope: !7536, file: !3, line: 5530, type: !5)
!7544 = !DILocation(line: 5530, column: 22, scope: !7536)
!7545 = !DILocalVariable(name: "hash", scope: !7536, file: !3, line: 5531, type: !7)
!7546 = !DILocation(line: 5531, column: 13, scope: !7536)
!7547 = !DILocation(line: 5533, column: 8, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !7536, file: !3, line: 5533, column: 8)
!7549 = !DILocation(line: 5533, column: 8, scope: !7536)
!7550 = !DILocation(line: 5535, column: 12, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7548, file: !3, line: 5534, column: 6)
!7552 = !DILocation(line: 5535, column: 10, scope: !7551)
!7553 = !DILocation(line: 5536, column: 15, scope: !7551)
!7554 = !DILocation(line: 5536, column: 13, scope: !7551)
!7555 = !DILocation(line: 5537, column: 15, scope: !7551)
!7556 = !DILocation(line: 5537, column: 13, scope: !7551)
!7557 = !DILocation(line: 5538, column: 22, scope: !7551)
!7558 = !DILocation(line: 5538, column: 25, scope: !7551)
!7559 = !DILocation(line: 5538, column: 31, scope: !7551)
!7560 = !DILocation(line: 5538, column: 14, scope: !7551)
!7561 = !DILocation(line: 5538, column: 12, scope: !7551)
!7562 = !DILocation(line: 5539, column: 13, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7551, file: !3, line: 5539, column: 12)
!7564 = !DILocation(line: 5539, column: 12, scope: !7551)
!7565 = !DILocation(line: 5541, column: 22, scope: !7566)
!7566 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 5541, column: 9)
!7567 = distinct !DILexicalBlock(scope: !7563, file: !3, line: 5540, column: 3)
!7568 = !DILocation(line: 5541, column: 9, scope: !7566)
!7569 = !DILocation(line: 5541, column: 9, scope: !7567)
!7570 = !DILocalVariable(name: "dest", scope: !7571, file: !3, line: 5543, type: !1091)
!7571 = distinct !DILexicalBlock(scope: !7566, file: !3, line: 5542, column: 7)
!7572 = !DILocation(line: 5543, column: 13, scope: !7571)
!7573 = !DILocation(line: 5543, column: 20, scope: !7571)
!7574 = !DILocation(line: 5545, column: 27, scope: !7571)
!7575 = !DILocation(line: 5545, column: 9, scope: !7571)
!7576 = !DILocation(line: 5546, column: 16, scope: !7571)
!7577 = !DILocation(line: 5546, column: 14, scope: !7571)
!7578 = !DILocation(line: 5547, column: 29, scope: !7571)
!7579 = !DILocation(line: 5547, column: 9, scope: !7571)
!7580 = !DILocation(line: 5547, column: 14, scope: !7571)
!7581 = !DILocation(line: 5547, column: 17, scope: !7571)
!7582 = !DILocation(line: 5547, column: 27, scope: !7571)
!7583 = !DILocation(line: 5548, column: 7, scope: !7571)
!7584 = !DILocation(line: 5549, column: 19, scope: !7567)
!7585 = !DILocation(line: 5549, column: 28, scope: !7567)
!7586 = !DILocation(line: 5549, column: 34, scope: !7567)
!7587 = !DILocation(line: 5549, column: 11, scope: !7567)
!7588 = !DILocation(line: 5549, column: 9, scope: !7567)
!7589 = !DILocation(line: 5550, column: 3, scope: !7567)
!7590 = !DILocation(line: 5552, column: 32, scope: !7551)
!7591 = !DILocation(line: 5552, column: 8, scope: !7551)
!7592 = !DILocation(line: 5552, column: 13, scope: !7551)
!7593 = !DILocation(line: 5552, column: 16, scope: !7551)
!7594 = !DILocation(line: 5552, column: 30, scope: !7551)
!7595 = !DILocation(line: 5553, column: 6, scope: !7551)
!7596 = !DILocation(line: 5555, column: 6, scope: !7548)
!7597 = !DILocation(line: 5555, column: 11, scope: !7548)
!7598 = !DILocation(line: 5555, column: 14, scope: !7548)
!7599 = !DILocation(line: 5555, column: 28, scope: !7548)
!7600 = !DILocation(line: 5556, column: 2, scope: !7536)
!7601 = !DILocation(line: 5557, column: 5, scope: !7531)
!7602 = !DILocation(line: 5524, column: 28, scope: !7525)
!7603 = !DILocation(line: 5524, column: 3, scope: !7525)
!7604 = distinct !{!7604, !7528, !7605}
!7605 = !DILocation(line: 5557, column: 5, scope: !7522)
!7606 = !DILocation(line: 5559, column: 29, scope: !5245)
!7607 = !DILocation(line: 5559, column: 3, scope: !5245)
!7608 = !DILocation(line: 5564, column: 7, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 5564, column: 7)
!7610 = !DILocation(line: 5564, column: 7, scope: !5245)
!7611 = !DILocation(line: 5566, column: 13, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 5566, column: 11)
!7613 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 5565, column: 5)
!7614 = !DILocation(line: 5566, column: 11, scope: !7613)
!7615 = !DILocation(line: 5567, column: 2, scope: !7612)
!7616 = !DILocation(line: 5568, column: 7, scope: !7613)
!7617 = !DILocation(line: 5569, column: 5, scope: !7613)
!7618 = !DILocation(line: 5576, column: 10, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 5576, column: 3)
!7620 = !DILocation(line: 5576, column: 8, scope: !7619)
!7621 = !DILocation(line: 5576, column: 15, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7619, file: !3, line: 5576, column: 3)
!7623 = !DILocation(line: 5576, column: 19, scope: !7622)
!7624 = !DILocation(line: 5576, column: 17, scope: !7622)
!7625 = !DILocation(line: 5576, column: 3, scope: !7619)
!7626 = !DILocation(line: 5577, column: 9, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7622, file: !3, line: 5577, column: 9)
!7628 = !DILocation(line: 5577, column: 14, scope: !7627)
!7629 = !DILocation(line: 5577, column: 17, scope: !7627)
!7630 = !DILocation(line: 5577, column: 9, scope: !7622)
!7631 = !DILocalVariable(name: "dest", scope: !7632, file: !3, line: 5581, type: !1091)
!7632 = distinct !DILexicalBlock(scope: !7627, file: !3, line: 5578, column: 7)
!7633 = !DILocation(line: 5581, column: 6, scope: !7632)
!7634 = !DILocation(line: 5581, column: 13, scope: !7632)
!7635 = !DILocation(line: 5587, column: 6, scope: !7636)
!7636 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 5587, column: 6)
!7637 = !DILocation(line: 5587, column: 19, scope: !7636)
!7638 = !DILocation(line: 5587, column: 22, scope: !7636)
!7639 = !DILocation(line: 5587, column: 38, scope: !7636)
!7640 = !DILocation(line: 5587, column: 6, scope: !7632)
!7641 = !DILocation(line: 5588, column: 16, scope: !7636)
!7642 = !DILocation(line: 5588, column: 4, scope: !7636)
!7643 = !DILocation(line: 5589, column: 11, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7636, file: !3, line: 5589, column: 11)
!7645 = !DILocation(line: 5589, column: 11, scope: !7636)
!7646 = !DILocation(line: 5590, column: 16, scope: !7644)
!7647 = !DILocation(line: 5590, column: 4, scope: !7644)
!7648 = !DILocation(line: 5591, column: 11, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 5591, column: 11)
!7650 = !DILocation(line: 5591, column: 27, scope: !7649)
!7651 = !DILocation(line: 5592, column: 4, scope: !7649)
!7652 = !DILocation(line: 5592, column: 7, scope: !7649)
!7653 = !DILocation(line: 5592, column: 23, scope: !7649)
!7654 = !DILocation(line: 5591, column: 11, scope: !7644)
!7655 = !DILocation(line: 5593, column: 16, scope: !7649)
!7656 = !DILocation(line: 5593, column: 32, scope: !7649)
!7657 = !DILocation(line: 5593, column: 4, scope: !7649)
!7658 = !DILocation(line: 5594, column: 7, scope: !7632)
!7659 = !DILocation(line: 5576, column: 28, scope: !7622)
!7660 = !DILocation(line: 5576, column: 3, scope: !7622)
!7661 = distinct !{!7661, !7625, !7662}
!7662 = !DILocation(line: 5594, column: 7, scope: !7619)
!7663 = !DILocation(line: 5597, column: 7, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 5597, column: 7)
!7665 = !DILocation(line: 5598, column: 7, scope: !7664)
!7666 = !DILocation(line: 5598, column: 10, scope: !7664)
!7667 = !DILocation(line: 5598, column: 36, scope: !7664)
!7668 = !DILocation(line: 5599, column: 7, scope: !7664)
!7669 = !DILocation(line: 5599, column: 10, scope: !7664)
!7670 = !DILocation(line: 5597, column: 7, scope: !5245)
!7671 = !DILocation(line: 5600, column: 5, scope: !7664)
!7672 = !DILocation(line: 5605, column: 7, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 5605, column: 7)
!7674 = !DILocation(line: 5605, column: 21, scope: !7673)
!7675 = !DILocation(line: 5605, column: 39, scope: !7673)
!7676 = !DILocation(line: 5605, column: 24, scope: !7673)
!7677 = !DILocation(line: 5605, column: 7, scope: !5245)
!7678 = !DILocation(line: 5607, column: 7, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7673, file: !3, line: 5606, column: 5)
!7680 = !DILocation(line: 5608, column: 7, scope: !7679)
!7681 = !DILocation(line: 5619, column: 10, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 5619, column: 3)
!7683 = !DILocation(line: 5619, column: 8, scope: !7682)
!7684 = !DILocation(line: 5619, column: 15, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7682, file: !3, line: 5619, column: 3)
!7686 = !DILocation(line: 5619, column: 19, scope: !7685)
!7687 = !DILocation(line: 5619, column: 17, scope: !7685)
!7688 = !DILocation(line: 5619, column: 3, scope: !7682)
!7689 = !DILocation(line: 5621, column: 11, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7691, file: !3, line: 5621, column: 11)
!7691 = distinct !DILexicalBlock(scope: !7685, file: !3, line: 5620, column: 5)
!7692 = !DILocation(line: 5621, column: 16, scope: !7690)
!7693 = !DILocation(line: 5621, column: 19, scope: !7690)
!7694 = !DILocation(line: 5621, column: 11, scope: !7691)
!7695 = !DILocalVariable(name: "x", scope: !7696, file: !3, line: 5623, type: !1091)
!7696 = distinct !DILexicalBlock(scope: !7690, file: !3, line: 5622, column: 2)
!7697 = !DILocation(line: 5623, column: 8, scope: !7696)
!7698 = !DILocation(line: 5623, column: 12, scope: !7696)
!7699 = !DILocation(line: 5625, column: 9, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7696, file: !3, line: 5625, column: 8)
!7701 = !DILocation(line: 5625, column: 8, scope: !7696)
!7702 = !DILocation(line: 5626, column: 20, scope: !7700)
!7703 = !DILocation(line: 5626, column: 6, scope: !7700)
!7704 = !DILocalVariable(name: "regno", scope: !7705, file: !3, line: 5641, type: !7)
!7705 = distinct !DILexicalBlock(scope: !7700, file: !3, line: 5628, column: 6)
!7706 = !DILocation(line: 5641, column: 21, scope: !7705)
!7707 = !DILocation(line: 5641, column: 29, scope: !7705)
!7708 = !DILocalVariable(name: "endregno", scope: !7705, file: !3, line: 5642, type: !7)
!7709 = !DILocation(line: 5642, column: 21, scope: !7705)
!7710 = !DILocation(line: 5642, column: 32, scope: !7705)
!7711 = !DILocalVariable(name: "i", scope: !7705, file: !3, line: 5643, type: !7)
!7712 = !DILocation(line: 5643, column: 21, scope: !7705)
!7713 = !DILocation(line: 5645, column: 17, scope: !7714)
!7714 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 5645, column: 8)
!7715 = !DILocation(line: 5645, column: 15, scope: !7714)
!7716 = !DILocation(line: 5645, column: 13, scope: !7714)
!7717 = !DILocation(line: 5645, column: 24, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7714, file: !3, line: 5645, column: 8)
!7719 = !DILocation(line: 5645, column: 28, scope: !7718)
!7720 = !DILocation(line: 5645, column: 26, scope: !7718)
!7721 = !DILocation(line: 5645, column: 8, scope: !7714)
!7722 = !DILocation(line: 5647, column: 9, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7724, file: !3, line: 5647, column: 9)
!7724 = distinct !DILexicalBlock(scope: !7718, file: !3, line: 5646, column: 3)
!7725 = !DILocation(line: 5647, column: 26, scope: !7723)
!7726 = !DILocation(line: 5647, column: 9, scope: !7724)
!7727 = !DILocation(line: 5649, column: 30, scope: !7728)
!7728 = distinct !DILexicalBlock(scope: !7723, file: !3, line: 5648, column: 7)
!7729 = !DILocation(line: 5649, column: 9, scope: !7728)
!7730 = !DILocation(line: 5650, column: 9, scope: !7728)
!7731 = !DILocation(line: 5650, column: 26, scope: !7728)
!7732 = !DILocation(line: 5651, column: 7, scope: !7728)
!7733 = !DILocation(line: 5652, column: 3, scope: !7724)
!7734 = !DILocation(line: 5645, column: 39, scope: !7718)
!7735 = !DILocation(line: 5645, column: 8, scope: !7718)
!7736 = distinct !{!7736, !7721, !7737}
!7737 = !DILocation(line: 5652, column: 3, scope: !7714)
!7738 = !DILocation(line: 5654, column: 2, scope: !7696)
!7739 = !DILocation(line: 5655, column: 5, scope: !7691)
!7740 = !DILocation(line: 5619, column: 28, scope: !7685)
!7741 = !DILocation(line: 5619, column: 3, scope: !7685)
!7742 = distinct !{!7742, !7688, !7743}
!7743 = !DILocation(line: 5655, column: 5, scope: !7682)
!7744 = !DILocation(line: 5661, column: 10, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 5661, column: 3)
!7746 = !DILocation(line: 5661, column: 8, scope: !7745)
!7747 = !DILocation(line: 5661, column: 15, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7745, file: !3, line: 5661, column: 3)
!7749 = !DILocation(line: 5661, column: 19, scope: !7748)
!7750 = !DILocation(line: 5661, column: 17, scope: !7748)
!7751 = !DILocation(line: 5661, column: 3, scope: !7745)
!7752 = !DILocation(line: 5662, column: 9, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7748, file: !3, line: 5662, column: 9)
!7754 = !DILocation(line: 5662, column: 14, scope: !7753)
!7755 = !DILocation(line: 5662, column: 17, scope: !7753)
!7756 = !DILocation(line: 5662, column: 9, scope: !7748)
!7757 = !DILocation(line: 5664, column: 6, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 5664, column: 6)
!7759 = distinct !DILexicalBlock(scope: !7753, file: !3, line: 5663, column: 7)
!7760 = !DILocation(line: 5664, column: 11, scope: !7758)
!7761 = !DILocation(line: 5664, column: 14, scope: !7758)
!7762 = !DILocation(line: 5665, column: 6, scope: !7758)
!7763 = !DILocation(line: 5665, column: 9, scope: !7758)
!7764 = !DILocation(line: 5665, column: 14, scope: !7758)
!7765 = !DILocation(line: 5665, column: 17, scope: !7758)
!7766 = !DILocation(line: 5665, column: 32, scope: !7758)
!7767 = !DILocation(line: 5665, column: 49, scope: !7758)
!7768 = !DILocation(line: 5664, column: 6, scope: !7759)
!7769 = !DILocation(line: 5669, column: 6, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7758, file: !3, line: 5666, column: 4)
!7771 = !DILocation(line: 5669, column: 11, scope: !7770)
!7772 = !DILocation(line: 5669, column: 14, scope: !7770)
!7773 = !DILocation(line: 5669, column: 18, scope: !7770)
!7774 = !DILocation(line: 5670, column: 4, scope: !7770)
!7775 = !DILocation(line: 5671, column: 11, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7758, file: !3, line: 5671, column: 11)
!7777 = !DILocation(line: 5671, column: 16, scope: !7776)
!7778 = !DILocation(line: 5671, column: 19, scope: !7776)
!7779 = !DILocation(line: 5671, column: 27, scope: !7776)
!7780 = !DILocation(line: 5671, column: 30, scope: !7776)
!7781 = !DILocation(line: 5671, column: 35, scope: !7776)
!7782 = !DILocation(line: 5671, column: 38, scope: !7776)
!7783 = !DILocation(line: 5671, column: 47, scope: !7776)
!7784 = !DILocation(line: 5671, column: 64, scope: !7776)
!7785 = !DILocation(line: 5671, column: 11, scope: !7758)
!7786 = !DILocalVariable(name: "elt", scope: !7787, file: !3, line: 5675, type: !2307)
!7787 = distinct !DILexicalBlock(scope: !7776, file: !3, line: 5674, column: 4)
!7788 = !DILocation(line: 5675, column: 24, scope: !7787)
!7789 = !DILocation(line: 5675, column: 30, scope: !7787)
!7790 = !DILocation(line: 5675, column: 35, scope: !7787)
!7791 = !DILocation(line: 5675, column: 38, scope: !7787)
!7792 = !DILocation(line: 5677, column: 6, scope: !7787)
!7793 = !DILocation(line: 5677, column: 13, scope: !7787)
!7794 = !DILocation(line: 5677, column: 17, scope: !7787)
!7795 = !DILocation(line: 5677, column: 20, scope: !7787)
!7796 = !DILocation(line: 5677, column: 25, scope: !7787)
!7797 = !DILocation(line: 0, scope: !7787)
!7798 = !DILocation(line: 5678, column: 14, scope: !7787)
!7799 = !DILocation(line: 5678, column: 19, scope: !7787)
!7800 = !DILocation(line: 5678, column: 12, scope: !7787)
!7801 = distinct !{!7801, !7792, !7799}
!7802 = !DILocation(line: 5680, column: 6, scope: !7787)
!7803 = !DILocation(line: 5680, column: 13, scope: !7787)
!7804 = !DILocation(line: 5680, column: 17, scope: !7787)
!7805 = !DILocation(line: 5680, column: 20, scope: !7787)
!7806 = !DILocation(line: 5680, column: 25, scope: !7787)
!7807 = !DILocation(line: 5680, column: 42, scope: !7787)
!7808 = !DILocation(line: 5681, column: 14, scope: !7787)
!7809 = !DILocation(line: 5681, column: 19, scope: !7787)
!7810 = !DILocation(line: 5681, column: 12, scope: !7787)
!7811 = distinct !{!7811, !7802, !7809}
!7812 = !DILocation(line: 5682, column: 24, scope: !7787)
!7813 = !DILocation(line: 5682, column: 30, scope: !7787)
!7814 = !DILocation(line: 5682, column: 35, scope: !7787)
!7815 = !DILocation(line: 5682, column: 6, scope: !7787)
!7816 = !DILocation(line: 5682, column: 11, scope: !7787)
!7817 = !DILocation(line: 5682, column: 14, scope: !7787)
!7818 = !DILocation(line: 5682, column: 22, scope: !7787)
!7819 = !DILocation(line: 5683, column: 4, scope: !7787)
!7820 = !DILocation(line: 5684, column: 7, scope: !7759)
!7821 = !DILocation(line: 5661, column: 28, scope: !7748)
!7822 = !DILocation(line: 5661, column: 3, scope: !7748)
!7823 = distinct !{!7823, !7751, !7824}
!7824 = !DILocation(line: 5684, column: 7, scope: !7745)
!7825 = !DILocation(line: 5688, column: 10, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 5688, column: 3)
!7827 = !DILocation(line: 5688, column: 8, scope: !7826)
!7828 = !DILocation(line: 5688, column: 15, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7826, file: !3, line: 5688, column: 3)
!7830 = !DILocation(line: 5688, column: 19, scope: !7829)
!7831 = !DILocation(line: 5688, column: 17, scope: !7829)
!7832 = !DILocation(line: 5688, column: 3, scope: !7826)
!7833 = !DILocation(line: 5689, column: 9, scope: !7834)
!7834 = distinct !DILexicalBlock(scope: !7829, file: !3, line: 5689, column: 9)
!7835 = !DILocation(line: 5689, column: 14, scope: !7834)
!7836 = !DILocation(line: 5689, column: 17, scope: !7834)
!7837 = !DILocation(line: 5689, column: 9, scope: !7829)
!7838 = !DILocalVariable(name: "dest", scope: !7839, file: !3, line: 5691, type: !1091)
!7839 = distinct !DILexicalBlock(scope: !7834, file: !3, line: 5690, column: 7)
!7840 = !DILocation(line: 5691, column: 6, scope: !7839)
!7841 = !DILocation(line: 5691, column: 13, scope: !7839)
!7842 = !DILocalVariable(name: "elt", scope: !7839, file: !3, line: 5692, type: !2307)
!7843 = !DILocation(line: 5692, column: 20, scope: !7839)
!7844 = !DILocation(line: 5697, column: 7, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 5697, column: 6)
!7846 = !DILocation(line: 5698, column: 7, scope: !7845)
!7847 = !DILocation(line: 5698, column: 10, scope: !7845)
!7848 = !DILocation(line: 5699, column: 7, scope: !7845)
!7849 = !DILocation(line: 5699, column: 10, scope: !7845)
!7850 = !DILocation(line: 5703, column: 6, scope: !7845)
!7851 = !DILocation(line: 5703, column: 9, scope: !7845)
!7852 = !DILocation(line: 5703, column: 25, scope: !7845)
!7853 = !DILocation(line: 5706, column: 6, scope: !7845)
!7854 = !DILocation(line: 5706, column: 9, scope: !7845)
!7855 = !DILocation(line: 5706, column: 14, scope: !7845)
!7856 = !DILocation(line: 5706, column: 17, scope: !7845)
!7857 = !DILocation(line: 5706, column: 25, scope: !7845)
!7858 = !DILocation(line: 5712, column: 6, scope: !7845)
!7859 = !DILocation(line: 5712, column: 10, scope: !7845)
!7860 = !DILocation(line: 5712, column: 26, scope: !7845)
!7861 = !DILocation(line: 5713, column: 3, scope: !7845)
!7862 = !DILocation(line: 5713, column: 7, scope: !7845)
!7863 = !DILocation(line: 5714, column: 9, scope: !7845)
!7864 = !DILocation(line: 5714, column: 7, scope: !7845)
!7865 = !DILocation(line: 5715, column: 3, scope: !7845)
!7866 = !DILocation(line: 5715, column: 7, scope: !7845)
!7867 = !DILocation(line: 5715, column: 30, scope: !7845)
!7868 = !DILocation(line: 5716, column: 7, scope: !7845)
!7869 = !DILocation(line: 5716, column: 10, scope: !7845)
!7870 = !DILocation(line: 5716, column: 33, scope: !7845)
!7871 = !DILocation(line: 5697, column: 6, scope: !7839)
!7872 = !DILocation(line: 5717, column: 4, scope: !7845)
!7873 = !DILocation(line: 5722, column: 6, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 5722, column: 6)
!7875 = !DILocation(line: 5722, column: 22, scope: !7874)
!7876 = !DILocation(line: 5722, column: 6, scope: !7839)
!7877 = !DILocation(line: 5723, column: 11, scope: !7874)
!7878 = !DILocation(line: 5723, column: 9, scope: !7874)
!7879 = !DILocation(line: 5723, column: 4, scope: !7874)
!7880 = !DILocation(line: 5725, column: 6, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 5725, column: 6)
!7882 = !DILocation(line: 5725, column: 19, scope: !7881)
!7883 = !DILocation(line: 5725, column: 22, scope: !7881)
!7884 = !DILocation(line: 5725, column: 38, scope: !7881)
!7885 = !DILocation(line: 5725, column: 6, scope: !7839)
!7886 = !DILocation(line: 5727, column: 21, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7881, file: !3, line: 5727, column: 8)
!7888 = !DILocation(line: 5727, column: 27, scope: !7887)
!7889 = !DILocation(line: 5727, column: 32, scope: !7887)
!7890 = !DILocation(line: 5727, column: 35, scope: !7887)
!7891 = !DILocation(line: 5727, column: 8, scope: !7887)
!7892 = !DILocation(line: 5727, column: 8, scope: !7881)
!7893 = !DILocation(line: 5731, column: 26, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7887, file: !3, line: 5728, column: 6)
!7895 = !DILocation(line: 5731, column: 8, scope: !7894)
!7896 = !DILocation(line: 5732, column: 28, scope: !7894)
!7897 = !DILocation(line: 5732, column: 8, scope: !7894)
!7898 = !DILocation(line: 5732, column: 13, scope: !7894)
!7899 = !DILocation(line: 5732, column: 16, scope: !7894)
!7900 = !DILocation(line: 5732, column: 26, scope: !7894)
!7901 = !DILocation(line: 5733, column: 6, scope: !7894)
!7902 = !DILocation(line: 5727, column: 45, scope: !7887)
!7903 = !DILocation(line: 5735, column: 16, scope: !7839)
!7904 = !DILocation(line: 5735, column: 22, scope: !7839)
!7905 = !DILocation(line: 5735, column: 27, scope: !7839)
!7906 = !DILocation(line: 5735, column: 30, scope: !7839)
!7907 = !DILocation(line: 5736, column: 9, scope: !7839)
!7908 = !DILocation(line: 5736, column: 14, scope: !7839)
!7909 = !DILocation(line: 5736, column: 17, scope: !7839)
!7910 = !DILocation(line: 5736, column: 28, scope: !7839)
!7911 = !DILocation(line: 5735, column: 8, scope: !7839)
!7912 = !DILocation(line: 5735, column: 6, scope: !7839)
!7913 = !DILocation(line: 5740, column: 14, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 5740, column: 6)
!7915 = !DILocation(line: 5740, column: 6, scope: !7914)
!7916 = !DILocation(line: 5741, column: 6, scope: !7914)
!7917 = !DILocation(line: 5741, column: 9, scope: !7914)
!7918 = !DILocation(line: 5742, column: 6, scope: !7914)
!7919 = !DILocation(line: 5742, column: 9, scope: !7914)
!7920 = !DILocation(line: 5743, column: 6, scope: !7914)
!7921 = !DILocation(line: 5743, column: 9, scope: !7914)
!7922 = !DILocation(line: 5743, column: 41, scope: !7914)
!7923 = !DILocation(line: 5740, column: 6, scope: !7839)
!7924 = !DILocation(line: 5744, column: 26, scope: !7914)
!7925 = !DILocation(line: 5744, column: 32, scope: !7914)
!7926 = !DILocation(line: 5744, column: 37, scope: !7914)
!7927 = !DILocation(line: 5744, column: 40, scope: !7914)
!7928 = !DILocation(line: 5744, column: 49, scope: !7914)
!7929 = !DILocation(line: 5744, column: 54, scope: !7914)
!7930 = !DILocation(line: 5744, column: 4, scope: !7914)
!7931 = !DILocation(line: 5746, column: 20, scope: !7839)
!7932 = !DILocation(line: 5747, column: 6, scope: !7839)
!7933 = !DILocation(line: 5747, column: 10, scope: !7839)
!7934 = !DILocation(line: 5747, column: 9, scope: !7839)
!7935 = !DILocation(line: 0, scope: !7839)
!7936 = !DILocation(line: 5746, column: 19, scope: !7839)
!7937 = !DILocation(line: 5746, column: 2, scope: !7839)
!7938 = !DILocation(line: 5746, column: 7, scope: !7839)
!7939 = !DILocation(line: 5746, column: 17, scope: !7839)
!7940 = !DILocation(line: 5764, column: 6, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 5764, column: 6)
!7942 = !DILocation(line: 5764, column: 22, scope: !7941)
!7943 = !DILocation(line: 5765, column: 6, scope: !7941)
!7944 = !DILocation(line: 5765, column: 12, scope: !7941)
!7945 = !DILocation(line: 5765, column: 57, scope: !7941)
!7946 = !DILocation(line: 5766, column: 4, scope: !7941)
!7947 = !DILocation(line: 5767, column: 7, scope: !7941)
!7948 = !DILocation(line: 5767, column: 39, scope: !7941)
!7949 = !DILocation(line: 5767, column: 44, scope: !7941)
!7950 = !DILocation(line: 5767, column: 3, scope: !7941)
!7951 = !DILocation(line: 5768, column: 6, scope: !7941)
!7952 = !DILocation(line: 5768, column: 10, scope: !7941)
!7953 = !DILocation(line: 5769, column: 6, scope: !7941)
!7954 = !DILocation(line: 5769, column: 3, scope: !7941)
!7955 = !DILocation(line: 5770, column: 6, scope: !7941)
!7956 = !DILocation(line: 5770, column: 9, scope: !7941)
!7957 = !DILocation(line: 5770, column: 14, scope: !7941)
!7958 = !DILocation(line: 5770, column: 17, scope: !7941)
!7959 = !DILocation(line: 5770, column: 25, scope: !7941)
!7960 = !DILocation(line: 5764, column: 6, scope: !7839)
!7961 = !DILocalVariable(name: "new_mode", scope: !7962, file: !3, line: 5772, type: !5)
!7962 = distinct !DILexicalBlock(scope: !7941, file: !3, line: 5771, column: 4)
!7963 = !DILocation(line: 5772, column: 24, scope: !7962)
!7964 = !DILocation(line: 5772, column: 35, scope: !7962)
!7965 = !DILocalVariable(name: "elt", scope: !7962, file: !3, line: 5773, type: !2307)
!7966 = !DILocation(line: 5773, column: 24, scope: !7962)
!7967 = !DILocalVariable(name: "classp", scope: !7962, file: !3, line: 5773, type: !2307)
!7968 = !DILocation(line: 5773, column: 30, scope: !7962)
!7969 = !DILocation(line: 5775, column: 17, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7962, file: !3, line: 5775, column: 6)
!7971 = !DILocation(line: 5775, column: 22, scope: !7970)
!7972 = !DILocation(line: 5775, column: 25, scope: !7970)
!7973 = !DILocation(line: 5775, column: 34, scope: !7970)
!7974 = !DILocation(line: 5775, column: 15, scope: !7970)
!7975 = !DILocation(line: 5775, column: 11, scope: !7970)
!7976 = !DILocation(line: 5775, column: 52, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7970, file: !3, line: 5775, column: 6)
!7978 = !DILocation(line: 5775, column: 6, scope: !7970)
!7979 = !DILocalVariable(name: "new_src", scope: !7980, file: !3, line: 5778, type: !1091)
!7980 = distinct !DILexicalBlock(scope: !7977, file: !3, line: 5777, column: 8)
!7981 = !DILocation(line: 5778, column: 7, scope: !7980)
!7982 = !DILocalVariable(name: "src_hash", scope: !7980, file: !3, line: 5779, type: !7)
!7983 = !DILocation(line: 5779, column: 12, scope: !7980)
!7984 = !DILocalVariable(name: "src_elt", scope: !7980, file: !3, line: 5780, type: !2307)
!7985 = !DILocation(line: 5780, column: 21, scope: !7980)
!7986 = !DILocalVariable(name: "byte", scope: !7980, file: !3, line: 5781, type: !1053)
!7987 = !DILocation(line: 5781, column: 7, scope: !7980)
!7988 = !DILocation(line: 5784, column: 8, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7980, file: !3, line: 5784, column: 7)
!7990 = !DILocation(line: 5785, column: 7, scope: !7989)
!7991 = !DILocation(line: 5785, column: 25, scope: !7989)
!7992 = !DILocation(line: 5785, column: 30, scope: !7989)
!7993 = !DILocation(line: 5785, column: 35, scope: !7989)
!7994 = !DILocation(line: 5785, column: 40, scope: !7989)
!7995 = !DILocation(line: 5785, column: 12, scope: !7989)
!7996 = !DILocation(line: 5784, column: 7, scope: !7980)
!7997 = !DILocation(line: 5786, column: 5, scope: !7989)
!7998 = !DILocation(line: 5790, column: 7, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !7980, file: !3, line: 5790, column: 7)
!8000 = !DILocation(line: 5790, column: 30, scope: !7999)
!8001 = !DILocation(line: 5790, column: 27, scope: !7999)
!8002 = !DILocation(line: 5790, column: 7, scope: !7980)
!8003 = !DILocation(line: 5791, column: 15, scope: !7999)
!8004 = !DILocation(line: 5791, column: 20, scope: !7999)
!8005 = !DILocation(line: 5791, column: 13, scope: !7999)
!8006 = !DILocation(line: 5791, column: 5, scope: !7999)
!8007 = !DILocation(line: 5801, column: 38, scope: !8008)
!8008 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 5793, column: 5)
!8009 = !DILocation(line: 5801, column: 48, scope: !8008)
!8010 = !DILocation(line: 5801, column: 53, scope: !8008)
!8011 = !DILocation(line: 5802, column: 17, scope: !8008)
!8012 = !DILocation(line: 5802, column: 34, scope: !8008)
!8013 = !DILocation(line: 5801, column: 17, scope: !8008)
!8014 = !DILocation(line: 5801, column: 15, scope: !8008)
!8015 = !DILocation(line: 5811, column: 9, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !7980, file: !3, line: 5811, column: 7)
!8017 = !DILocation(line: 5811, column: 7, scope: !7980)
!8018 = !DILocation(line: 5812, column: 5, scope: !8016)
!8019 = !DILocation(line: 5814, column: 14, scope: !7980)
!8020 = !DILocation(line: 5814, column: 12, scope: !7980)
!8021 = !DILocation(line: 5815, column: 21, scope: !7980)
!8022 = !DILocation(line: 5815, column: 30, scope: !7980)
!8023 = !DILocation(line: 5815, column: 40, scope: !7980)
!8024 = !DILocation(line: 5815, column: 13, scope: !7980)
!8025 = !DILocation(line: 5815, column: 11, scope: !7980)
!8026 = !DILocation(line: 5819, column: 7, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !7980, file: !3, line: 5819, column: 7)
!8028 = !DILocation(line: 5819, column: 15, scope: !8027)
!8029 = !DILocation(line: 5819, column: 7, scope: !7980)
!8030 = !DILocation(line: 5821, column: 24, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !8032, file: !3, line: 5821, column: 11)
!8032 = distinct !DILexicalBlock(scope: !8027, file: !3, line: 5820, column: 5)
!8033 = !DILocation(line: 5821, column: 33, scope: !8031)
!8034 = !DILocation(line: 5821, column: 11, scope: !8031)
!8035 = !DILocation(line: 5821, column: 11, scope: !8032)
!8036 = !DILocation(line: 5823, column: 22, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8031, file: !3, line: 5822, column: 9)
!8038 = !DILocation(line: 5823, column: 4, scope: !8037)
!8039 = !DILocation(line: 5824, column: 15, scope: !8037)
!8040 = !DILocation(line: 5824, column: 13, scope: !8037)
!8041 = !DILocation(line: 5825, column: 9, scope: !8037)
!8042 = !DILocation(line: 5826, column: 25, scope: !8032)
!8043 = !DILocation(line: 5826, column: 34, scope: !8032)
!8044 = !DILocation(line: 5826, column: 42, scope: !8032)
!8045 = !DILocation(line: 5826, column: 52, scope: !8032)
!8046 = !DILocation(line: 5826, column: 17, scope: !8032)
!8047 = !DILocation(line: 5826, column: 15, scope: !8032)
!8048 = !DILocation(line: 5827, column: 28, scope: !8032)
!8049 = !DILocation(line: 5827, column: 33, scope: !8032)
!8050 = !DILocation(line: 5827, column: 7, scope: !8032)
!8051 = !DILocation(line: 5827, column: 16, scope: !8032)
!8052 = !DILocation(line: 5827, column: 26, scope: !8032)
!8053 = !DILocation(line: 5828, column: 5, scope: !8032)
!8054 = !DILocation(line: 5829, column: 12, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8027, file: !3, line: 5829, column: 12)
!8056 = !DILocation(line: 5829, column: 19, scope: !8055)
!8057 = !DILocation(line: 5829, column: 22, scope: !8055)
!8058 = !DILocation(line: 5829, column: 32, scope: !8055)
!8059 = !DILocation(line: 5829, column: 41, scope: !8055)
!8060 = !DILocation(line: 5829, column: 29, scope: !8055)
!8061 = !DILocation(line: 5829, column: 12, scope: !8027)
!8062 = !DILocation(line: 5832, column: 26, scope: !8055)
!8063 = !DILocation(line: 5832, column: 35, scope: !8055)
!8064 = !DILocation(line: 5832, column: 5, scope: !8055)
!8065 = !DILocation(line: 5834, column: 12, scope: !7980)
!8066 = !DILocation(line: 5834, column: 21, scope: !7980)
!8067 = !DILocation(line: 5834, column: 10, scope: !7980)
!8068 = !DILocation(line: 5836, column: 3, scope: !7980)
!8069 = !DILocation(line: 5836, column: 10, scope: !7980)
!8070 = !DILocation(line: 5837, column: 10, scope: !7980)
!8071 = !DILocation(line: 5837, column: 14, scope: !7980)
!8072 = !DILocation(line: 5838, column: 10, scope: !7980)
!8073 = !DILocation(line: 5838, column: 28, scope: !7980)
!8074 = !DILocation(line: 5838, column: 36, scope: !7980)
!8075 = !DILocation(line: 5838, column: 41, scope: !7980)
!8076 = !DILocation(line: 5838, column: 49, scope: !7980)
!8077 = !DILocation(line: 5838, column: 15, scope: !7980)
!8078 = !DILocation(line: 5838, column: 13, scope: !7980)
!8079 = !DILocation(line: 0, scope: !7980)
!8080 = !DILocation(line: 5839, column: 14, scope: !7980)
!8081 = !DILocation(line: 5839, column: 22, scope: !7980)
!8082 = !DILocation(line: 5839, column: 12, scope: !7980)
!8083 = distinct !{!8083, !8068, !8081}
!8084 = !DILocation(line: 5840, column: 8, scope: !7980)
!8085 = !DILocation(line: 5776, column: 10, scope: !7977)
!8086 = !DILocation(line: 5776, column: 15, scope: !7977)
!8087 = !DILocation(line: 5776, column: 8, scope: !7977)
!8088 = !DILocation(line: 5775, column: 6, scope: !7977)
!8089 = distinct !{!8089, !7978, !8090}
!8090 = !DILocation(line: 5840, column: 8, scope: !7970)
!8091 = !DILocation(line: 5841, column: 4, scope: !7962)
!8092 = !DILocation(line: 5842, column: 7, scope: !7839)
!8093 = !DILocation(line: 5688, column: 28, scope: !7829)
!8094 = !DILocation(line: 5688, column: 3, scope: !7829)
!8095 = distinct !{!8095, !7832, !8096}
!8096 = !DILocation(line: 5842, column: 7, scope: !7826)
!8097 = !DILocation(line: 5857, column: 7, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 5857, column: 7)
!8099 = !DILocation(line: 5857, column: 14, scope: !8098)
!8100 = !DILocation(line: 5857, column: 19, scope: !8098)
!8101 = !DILocation(line: 5857, column: 22, scope: !8098)
!8102 = !DILocation(line: 5857, column: 30, scope: !8098)
!8103 = !DILocation(line: 5857, column: 34, scope: !8098)
!8104 = !DILocation(line: 5857, column: 37, scope: !8098)
!8105 = !DILocation(line: 5858, column: 7, scope: !8098)
!8106 = !DILocation(line: 5858, column: 10, scope: !8098)
!8107 = !DILocation(line: 5858, column: 42, scope: !8098)
!8108 = !DILocation(line: 5858, column: 39, scope: !8098)
!8109 = !DILocation(line: 5859, column: 7, scope: !8098)
!8110 = !DILocation(line: 5859, column: 10, scope: !8098)
!8111 = !DILocation(line: 5860, column: 7, scope: !8098)
!8112 = !DILocation(line: 5860, column: 10, scope: !8098)
!8113 = !DILocation(line: 5860, column: 40, scope: !8098)
!8114 = !DILocation(line: 5861, column: 7, scope: !8098)
!8115 = !DILocation(line: 5861, column: 10, scope: !8098)
!8116 = !DILocation(line: 5857, column: 7, scope: !5245)
!8117 = !DILocalVariable(name: "src_q", scope: !8118, file: !3, line: 5863, type: !1053)
!8118 = distinct !DILexicalBlock(scope: !8098, file: !3, line: 5862, column: 5)
!8119 = !DILocation(line: 5863, column: 11, scope: !8118)
!8120 = !DILocation(line: 5863, column: 19, scope: !8118)
!8121 = !DILocalVariable(name: "src_ent", scope: !8118, file: !3, line: 5864, type: !2216)
!8122 = !DILocation(line: 5864, column: 30, scope: !8118)
!8123 = !DILocation(line: 5864, column: 41, scope: !8118)
!8124 = !DILocation(line: 5864, column: 51, scope: !8118)
!8125 = !DILocation(line: 5866, column: 11, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !8118, file: !3, line: 5866, column: 11)
!8127 = !DILocation(line: 5866, column: 20, scope: !8126)
!8128 = !DILocation(line: 5866, column: 33, scope: !8126)
!8129 = !DILocation(line: 5866, column: 30, scope: !8126)
!8130 = !DILocation(line: 5866, column: 11, scope: !8118)
!8131 = !DILocalVariable(name: "prev", scope: !8132, file: !3, line: 5870, type: !1091)
!8132 = distinct !DILexicalBlock(scope: !8126, file: !3, line: 5867, column: 2)
!8133 = !DILocation(line: 5870, column: 8, scope: !8132)
!8134 = !DILocation(line: 5870, column: 15, scope: !8132)
!8135 = !DILocalVariable(name: "bb_head", scope: !8132, file: !3, line: 5871, type: !1091)
!8136 = !DILocation(line: 5871, column: 8, scope: !8132)
!8137 = !DILocation(line: 5871, column: 18, scope: !8132)
!8138 = !DILocation(line: 5872, column: 4, scope: !8132)
!8139 = !DILocation(line: 5874, column: 15, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 5873, column: 6)
!8141 = !DILocation(line: 5874, column: 13, scope: !8140)
!8142 = !DILocation(line: 5875, column: 6, scope: !8140)
!8143 = !DILocation(line: 5876, column: 11, scope: !8132)
!8144 = !DILocation(line: 5876, column: 19, scope: !8132)
!8145 = !DILocation(line: 5876, column: 16, scope: !8132)
!8146 = !DILocation(line: 5876, column: 27, scope: !8132)
!8147 = !DILocation(line: 5876, column: 31, scope: !8132)
!8148 = !DILocation(line: 5876, column: 45, scope: !8132)
!8149 = !DILocation(line: 5876, column: 48, scope: !8132)
!8150 = !DILocation(line: 0, scope: !8132)
!8151 = distinct !{!8151, !8138, !8152}
!8152 = !DILocation(line: 5876, column: 68, scope: !8132)
!8153 = !DILocation(line: 5889, column: 8, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 5889, column: 8)
!8155 = !DILocation(line: 5890, column: 8, scope: !8154)
!8156 = !DILocation(line: 5890, column: 11, scope: !8154)
!8157 = !DILocation(line: 5890, column: 37, scope: !8154)
!8158 = !DILocation(line: 5891, column: 8, scope: !8154)
!8159 = !DILocation(line: 5891, column: 11, scope: !8154)
!8160 = !DILocation(line: 5891, column: 40, scope: !8154)
!8161 = !DILocation(line: 5891, column: 37, scope: !8154)
!8162 = !DILocation(line: 5892, column: 8, scope: !8154)
!8163 = !DILocation(line: 5892, column: 28, scope: !8154)
!8164 = !DILocation(line: 5892, column: 13, scope: !8154)
!8165 = !DILocation(line: 5889, column: 8, scope: !8132)
!8166 = !DILocalVariable(name: "dest", scope: !8167, file: !3, line: 5894, type: !1091)
!8167 = distinct !DILexicalBlock(scope: !8154, file: !3, line: 5893, column: 6)
!8168 = !DILocation(line: 5894, column: 12, scope: !8167)
!8169 = !DILocation(line: 5894, column: 19, scope: !8167)
!8170 = !DILocalVariable(name: "src", scope: !8167, file: !3, line: 5895, type: !1091)
!8171 = !DILocation(line: 5895, column: 12, scope: !8167)
!8172 = !DILocation(line: 5895, column: 18, scope: !8167)
!8173 = !DILocalVariable(name: "note", scope: !8167, file: !3, line: 5896, type: !1091)
!8174 = !DILocation(line: 5896, column: 12, scope: !8167)
!8175 = !DILocation(line: 5898, column: 25, scope: !8167)
!8176 = !DILocation(line: 5898, column: 32, scope: !8167)
!8177 = !DILocation(line: 5898, column: 59, scope: !8167)
!8178 = !DILocation(line: 5898, column: 8, scope: !8167)
!8179 = !DILocation(line: 5899, column: 25, scope: !8167)
!8180 = !DILocation(line: 5899, column: 32, scope: !8167)
!8181 = !DILocation(line: 5899, column: 56, scope: !8167)
!8182 = !DILocation(line: 5899, column: 8, scope: !8167)
!8183 = !DILocation(line: 5900, column: 25, scope: !8167)
!8184 = !DILocation(line: 5900, column: 32, scope: !8167)
!8185 = !DILocation(line: 5900, column: 55, scope: !8167)
!8186 = !DILocation(line: 5900, column: 8, scope: !8167)
!8187 = !DILocation(line: 5901, column: 8, scope: !8167)
!8188 = !DILocation(line: 5907, column: 30, scope: !8167)
!8189 = !DILocation(line: 5907, column: 15, scope: !8167)
!8190 = !DILocation(line: 5907, column: 13, scope: !8167)
!8191 = !DILocation(line: 5908, column: 12, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8167, file: !3, line: 5908, column: 12)
!8193 = !DILocation(line: 5908, column: 17, scope: !8192)
!8194 = !DILocation(line: 5909, column: 5, scope: !8192)
!8195 = !DILocation(line: 5909, column: 26, scope: !8192)
!8196 = !DILocation(line: 5909, column: 32, scope: !8192)
!8197 = !DILocation(line: 5909, column: 9, scope: !8192)
!8198 = !DILocation(line: 5910, column: 9, scope: !8192)
!8199 = !DILocation(line: 5910, column: 25, scope: !8192)
!8200 = !DILocation(line: 5910, column: 30, scope: !8192)
!8201 = !DILocation(line: 5910, column: 12, scope: !8192)
!8202 = !DILocation(line: 5908, column: 12, scope: !8167)
!8203 = !DILocation(line: 5911, column: 16, scope: !8192)
!8204 = !DILocation(line: 5911, column: 22, scope: !8192)
!8205 = !DILocation(line: 5911, column: 3, scope: !8192)
!8206 = !DILocation(line: 5912, column: 6, scope: !8167)
!8207 = !DILocation(line: 5913, column: 2, scope: !8132)
!8208 = !DILocation(line: 5914, column: 5, scope: !8118)
!8209 = !DILabel(scope: !5245, name: "done", file: !3, line: 5916)
!8210 = !DILocation(line: 5916, column: 1, scope: !5245)
!8211 = !DILocation(line: 5917, column: 1, scope: !5245)
!8212 = distinct !DISubprogram(name: "check_for_label_ref", scope: !3, file: !3, line: 6552, type: !8213, scopeLine: 6553, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!8213 = !DISubroutineType(types: !8214)
!8214 = !{!1053, !2281, !1019}
!8215 = !DILocalVariable(name: "rtl", arg: 1, scope: !8212, file: !3, line: 6552, type: !2281)
!8216 = !DILocation(line: 6552, column: 27, scope: !8212)
!8217 = !DILocalVariable(name: "data", arg: 2, scope: !8212, file: !3, line: 6552, type: !1019)
!8218 = !DILocation(line: 6552, column: 38, scope: !8212)
!8219 = !DILocalVariable(name: "insn", scope: !8212, file: !3, line: 6554, type: !1091)
!8220 = !DILocation(line: 6554, column: 7, scope: !8212)
!8221 = !DILocation(line: 6554, column: 20, scope: !8212)
!8222 = !DILocation(line: 6554, column: 14, scope: !8212)
!8223 = !DILocation(line: 6560, column: 11, scope: !8212)
!8224 = !DILocation(line: 6560, column: 27, scope: !8212)
!8225 = !DILocation(line: 6561, column: 4, scope: !8212)
!8226 = !DILocation(line: 6561, column: 9, scope: !8212)
!8227 = !DILocation(line: 6562, column: 4, scope: !8212)
!8228 = !DILocation(line: 6562, column: 9, scope: !8212)
!8229 = !DILocation(line: 6563, column: 8, scope: !8212)
!8230 = !DILocation(line: 6563, column: 36, scope: !8212)
!8231 = !DILocation(line: 6563, column: 52, scope: !8212)
!8232 = !DILocation(line: 6563, column: 12, scope: !8212)
!8233 = !DILocation(line: 6564, column: 4, scope: !8212)
!8234 = !DILocation(line: 6564, column: 7, scope: !8212)
!8235 = !DILocation(line: 6565, column: 4, scope: !8212)
!8236 = !DILocation(line: 6565, column: 7, scope: !8212)
!8237 = !DILocation(line: 6565, column: 33, scope: !8212)
!8238 = !DILocation(line: 6566, column: 4, scope: !8212)
!8239 = !DILocation(line: 6566, column: 24, scope: !8212)
!8240 = !DILocation(line: 6566, column: 49, scope: !8212)
!8241 = !DILocation(line: 6566, column: 9, scope: !8212)
!8242 = !DILocation(line: 6566, column: 7, scope: !8212)
!8243 = !DILocation(line: 0, scope: !8212)
!8244 = !DILocation(line: 6560, column: 3, scope: !8212)
!8245 = distinct !DISubprogram(name: "have_eh_succ_edges", scope: !3, file: !3, line: 6236, type: !4895, scopeLine: 6237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!8246 = !DILocalVariable(name: "bb", arg: 1, scope: !8245, file: !3, line: 6236, type: !1059)
!8247 = !DILocation(line: 6236, column: 33, scope: !8245)
!8248 = !DILocalVariable(name: "e", scope: !8245, file: !3, line: 6238, type: !1077)
!8249 = !DILocation(line: 6238, column: 8, scope: !8245)
!8250 = !DILocalVariable(name: "ei", scope: !8245, file: !3, line: 6239, type: !4902)
!8251 = !DILocation(line: 6239, column: 17, scope: !8245)
!8252 = !DILocation(line: 6241, column: 3, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8245, file: !3, line: 6241, column: 3)
!8254 = !DILocation(line: 6241, column: 3, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8253, file: !3, line: 6241, column: 3)
!8256 = !DILocation(line: 6242, column: 9, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8255, file: !3, line: 6242, column: 9)
!8258 = !DILocation(line: 6242, column: 12, scope: !8257)
!8259 = !DILocation(line: 6242, column: 18, scope: !8257)
!8260 = !DILocation(line: 6242, column: 9, scope: !8255)
!8261 = !DILocation(line: 6243, column: 7, scope: !8257)
!8262 = !DILocation(line: 6242, column: 20, scope: !8257)
!8263 = distinct !{!8263, !8252, !8264}
!8264 = !DILocation(line: 6243, column: 14, scope: !8253)
!8265 = !DILocation(line: 6245, column: 3, scope: !8245)
!8266 = !DILocation(line: 6246, column: 1, scope: !8245)
!8267 = distinct !DISubprogram(name: "RESET_BIT", scope: !2388, file: !2388, line: 82, type: !4769, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!8268 = !DILocalVariable(name: "map", arg: 1, scope: !8267, file: !2388, line: 82, type: !2387)
!8269 = !DILocation(line: 82, column: 20, scope: !8267)
!8270 = !DILocalVariable(name: "bitno", arg: 2, scope: !8267, file: !2388, line: 82, type: !7)
!8271 = !DILocation(line: 82, column: 39, scope: !8267)
!8272 = !DILocation(line: 84, column: 7, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8267, file: !2388, line: 84, column: 7)
!8274 = !DILocation(line: 84, column: 12, scope: !8273)
!8275 = !DILocation(line: 84, column: 7, scope: !8267)
!8276 = !DILocalVariable(name: "oldbit", scope: !8277, file: !2388, line: 86, type: !1052)
!8277 = distinct !DILexicalBlock(scope: !8273, file: !2388, line: 85, column: 5)
!8278 = !DILocation(line: 86, column: 12, scope: !8277)
!8279 = !DILocation(line: 87, column: 16, scope: !8277)
!8280 = !DILocation(line: 87, column: 14, scope: !8277)
!8281 = !DILocation(line: 88, column: 11, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8277, file: !2388, line: 88, column: 11)
!8283 = !DILocation(line: 88, column: 11, scope: !8277)
!8284 = !DILocation(line: 89, column: 2, scope: !8282)
!8285 = !DILocation(line: 89, column: 7, scope: !8282)
!8286 = !DILocation(line: 89, column: 16, scope: !8282)
!8287 = !DILocation(line: 89, column: 22, scope: !8282)
!8288 = !DILocation(line: 89, column: 41, scope: !8282)
!8289 = !DILocation(line: 90, column: 5, scope: !8277)
!8290 = !DILocation(line: 92, column: 35, scope: !8267)
!8291 = !DILocation(line: 92, column: 42, scope: !8267)
!8292 = !DILocation(line: 92, column: 31, scope: !8267)
!8293 = !DILocation(line: 92, column: 8, scope: !8267)
!8294 = !DILocation(line: 91, column: 3, scope: !8267)
!8295 = !DILocation(line: 91, column: 8, scope: !8267)
!8296 = !DILocation(line: 91, column: 13, scope: !8267)
!8297 = !DILocation(line: 91, column: 19, scope: !8267)
!8298 = !DILocation(line: 92, column: 5, scope: !8267)
!8299 = !DILocation(line: 93, column: 1, scope: !8267)
!8300 = distinct !DISubprogram(name: "record_jump_equiv", scope: !3, file: !3, line: 3896, type: !8301, scopeLine: 3897, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!8301 = !DISubroutineType(types: !8302)
!8302 = !{null, !1091, !1052}
!8303 = !DILocalVariable(name: "insn", arg: 1, scope: !8300, file: !3, line: 3896, type: !1091)
!8304 = !DILocation(line: 3896, column: 24, scope: !8300)
!8305 = !DILocalVariable(name: "taken", arg: 2, scope: !8300, file: !3, line: 3896, type: !1052)
!8306 = !DILocation(line: 3896, column: 35, scope: !8300)
!8307 = !DILocalVariable(name: "cond_known_true", scope: !8300, file: !3, line: 3898, type: !1053)
!8308 = !DILocation(line: 3898, column: 7, scope: !8300)
!8309 = !DILocalVariable(name: "op0", scope: !8300, file: !3, line: 3899, type: !1091)
!8310 = !DILocation(line: 3899, column: 7, scope: !8300)
!8311 = !DILocalVariable(name: "op1", scope: !8300, file: !3, line: 3899, type: !1091)
!8312 = !DILocation(line: 3899, column: 12, scope: !8300)
!8313 = !DILocalVariable(name: "set", scope: !8300, file: !3, line: 3900, type: !1091)
!8314 = !DILocation(line: 3900, column: 7, scope: !8300)
!8315 = !DILocalVariable(name: "mode", scope: !8300, file: !3, line: 3901, type: !5)
!8316 = !DILocation(line: 3901, column: 21, scope: !8300)
!8317 = !DILocalVariable(name: "mode0", scope: !8300, file: !3, line: 3901, type: !5)
!8318 = !DILocation(line: 3901, column: 27, scope: !8300)
!8319 = !DILocalVariable(name: "mode1", scope: !8300, file: !3, line: 3901, type: !5)
!8320 = !DILocation(line: 3901, column: 34, scope: !8300)
!8321 = !DILocalVariable(name: "reversed_nonequality", scope: !8300, file: !3, line: 3902, type: !1053)
!8322 = !DILocation(line: 3902, column: 7, scope: !8300)
!8323 = !DILocalVariable(name: "code", scope: !8300, file: !3, line: 3903, type: !384)
!8324 = !DILocation(line: 3903, column: 17, scope: !8300)
!8325 = !DILocation(line: 3906, column: 3, scope: !8300)
!8326 = !DILocation(line: 3908, column: 17, scope: !8300)
!8327 = !DILocation(line: 3908, column: 9, scope: !8300)
!8328 = !DILocation(line: 3908, column: 7, scope: !8300)
!8329 = !DILocation(line: 3911, column: 7, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8300, file: !3, line: 3911, column: 7)
!8331 = !DILocation(line: 3911, column: 7, scope: !8300)
!8332 = !DILocation(line: 3912, column: 24, scope: !8330)
!8333 = !DILocation(line: 3912, column: 51, scope: !8330)
!8334 = !DILocation(line: 3912, column: 48, scope: !8330)
!8335 = !DILocation(line: 3912, column: 21, scope: !8330)
!8336 = !DILocation(line: 3912, column: 5, scope: !8330)
!8337 = !DILocation(line: 3914, column: 24, scope: !8330)
!8338 = !DILocation(line: 3914, column: 51, scope: !8330)
!8339 = !DILocation(line: 3914, column: 48, scope: !8330)
!8340 = !DILocation(line: 3914, column: 21, scope: !8330)
!8341 = !DILocation(line: 3919, column: 10, scope: !8300)
!8342 = !DILocation(line: 3919, column: 8, scope: !8300)
!8343 = !DILocation(line: 3920, column: 19, scope: !8300)
!8344 = !DILocation(line: 3920, column: 54, scope: !8300)
!8345 = !DILocation(line: 3920, column: 9, scope: !8300)
!8346 = !DILocation(line: 3920, column: 7, scope: !8300)
!8347 = !DILocation(line: 3921, column: 19, scope: !8300)
!8348 = !DILocation(line: 3921, column: 54, scope: !8300)
!8349 = !DILocation(line: 3921, column: 9, scope: !8300)
!8350 = !DILocation(line: 3921, column: 7, scope: !8300)
!8351 = !DILocation(line: 3923, column: 32, scope: !8300)
!8352 = !DILocation(line: 3923, column: 10, scope: !8300)
!8353 = !DILocation(line: 3923, column: 8, scope: !8300)
!8354 = !DILocation(line: 3924, column: 9, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8300, file: !3, line: 3924, column: 7)
!8356 = !DILocation(line: 3924, column: 7, scope: !8300)
!8357 = !DILocation(line: 3926, column: 46, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !8355, file: !3, line: 3925, column: 5)
!8359 = !DILocation(line: 3926, column: 52, scope: !8358)
!8360 = !DILocation(line: 3926, column: 57, scope: !8358)
!8361 = !DILocation(line: 3926, column: 62, scope: !8358)
!8362 = !DILocation(line: 3926, column: 14, scope: !8358)
!8363 = !DILocation(line: 3926, column: 12, scope: !8358)
!8364 = !DILocation(line: 3929, column: 11, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8358, file: !3, line: 3929, column: 11)
!8366 = !DILocation(line: 3929, column: 16, scope: !8365)
!8367 = !DILocation(line: 3929, column: 11, scope: !8358)
!8368 = !DILocation(line: 3930, column: 2, scope: !8365)
!8369 = !DILocation(line: 3931, column: 5, scope: !8358)
!8370 = !DILocation(line: 3934, column: 10, scope: !8300)
!8371 = !DILocation(line: 3934, column: 8, scope: !8300)
!8372 = !DILocation(line: 3935, column: 7, scope: !8373)
!8373 = distinct !DILexicalBlock(scope: !8300, file: !3, line: 3935, column: 7)
!8374 = !DILocation(line: 3935, column: 13, scope: !8373)
!8375 = !DILocation(line: 3935, column: 7, scope: !8300)
!8376 = !DILocation(line: 3936, column: 12, scope: !8373)
!8377 = !DILocation(line: 3936, column: 10, scope: !8373)
!8378 = !DILocation(line: 3936, column: 5, scope: !8373)
!8379 = !DILocation(line: 3938, column: 21, scope: !8300)
!8380 = !DILocation(line: 3938, column: 27, scope: !8300)
!8381 = !DILocation(line: 3938, column: 33, scope: !8300)
!8382 = !DILocation(line: 3938, column: 38, scope: !8300)
!8383 = !DILocation(line: 3938, column: 43, scope: !8300)
!8384 = !DILocation(line: 3938, column: 3, scope: !8300)
!8385 = !DILocation(line: 3939, column: 1, scope: !8300)
!8386 = distinct !DISubprogram(name: "ei_start_1", scope: !142, file: !142, line: 696, type: !8387, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!8387 = !DISubroutineType(types: !8388)
!8388 = !{!4902, !4907}
!8389 = !DILocalVariable(name: "ev", arg: 1, scope: !8386, file: !142, line: 696, type: !4907)
!8390 = !DILocation(line: 696, column: 28, scope: !8386)
!8391 = !DILocalVariable(name: "i", scope: !8386, file: !142, line: 698, type: !4902)
!8392 = !DILocation(line: 698, column: 17, scope: !8386)
!8393 = !DILocation(line: 700, column: 5, scope: !8386)
!8394 = !DILocation(line: 700, column: 11, scope: !8386)
!8395 = !DILocation(line: 701, column: 17, scope: !8386)
!8396 = !DILocation(line: 701, column: 5, scope: !8386)
!8397 = !DILocation(line: 701, column: 15, scope: !8386)
!8398 = !DILocation(line: 703, column: 3, scope: !8386)
!8399 = distinct !DISubprogram(name: "ei_cond", scope: !142, file: !142, line: 771, type: !8400, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!8400 = !DISubroutineType(types: !8401)
!8401 = !{!1052, !4902, !8402}
!8402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64)
!8403 = !DILocalVariable(name: "ei", arg: 1, scope: !8399, file: !142, line: 771, type: !4902)
!8404 = !DILocation(line: 771, column: 24, scope: !8399)
!8405 = !DILocalVariable(name: "p", arg: 2, scope: !8399, file: !142, line: 771, type: !8402)
!8406 = !DILocation(line: 771, column: 34, scope: !8399)
!8407 = !DILocation(line: 773, column: 8, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !8399, file: !142, line: 773, column: 7)
!8409 = !DILocation(line: 773, column: 7, scope: !8399)
!8410 = !DILocation(line: 775, column: 12, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8408, file: !142, line: 774, column: 5)
!8412 = !DILocation(line: 775, column: 8, scope: !8411)
!8413 = !DILocation(line: 775, column: 10, scope: !8411)
!8414 = !DILocation(line: 776, column: 7, scope: !8411)
!8415 = !DILocation(line: 780, column: 8, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8408, file: !142, line: 779, column: 5)
!8417 = !DILocation(line: 780, column: 10, scope: !8416)
!8418 = !DILocation(line: 781, column: 7, scope: !8416)
!8419 = !DILocation(line: 783, column: 1, scope: !8399)
!8420 = distinct !DISubprogram(name: "ei_next", scope: !142, file: !142, line: 736, type: !8421, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!8421 = !DISubroutineType(types: !8422)
!8422 = !{null, !8423}
!8423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4902, size: 64)
!8424 = !DILocalVariable(name: "i", arg: 1, scope: !8420, file: !142, line: 736, type: !8423)
!8425 = !DILocation(line: 736, column: 25, scope: !8420)
!8426 = !DILocation(line: 738, column: 3, scope: !8420)
!8427 = !DILocation(line: 739, column: 3, scope: !8420)
!8428 = !DILocation(line: 739, column: 6, scope: !8420)
!8429 = !DILocation(line: 739, column: 11, scope: !8420)
!8430 = !DILocation(line: 740, column: 1, scope: !8420)
!8431 = distinct !DISubprogram(name: "ei_end_p", scope: !142, file: !142, line: 721, type: !8432, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!8432 = !DISubroutineType(types: !8433)
!8433 = !{!1052, !4902}
!8434 = !DILocalVariable(name: "i", arg: 1, scope: !8431, file: !142, line: 721, type: !4902)
!8435 = !DILocation(line: 721, column: 25, scope: !8431)
!8436 = !DILocation(line: 723, column: 13, scope: !8431)
!8437 = !DILocation(line: 723, column: 22, scope: !8431)
!8438 = !DILocation(line: 723, column: 19, scope: !8431)
!8439 = !DILocation(line: 723, column: 10, scope: !8431)
!8440 = !DILocation(line: 723, column: 3, scope: !8431)
!8441 = distinct !DISubprogram(name: "ei_edge", scope: !142, file: !142, line: 752, type: !8442, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!8442 = !DISubroutineType(types: !8443)
!8443 = !{!1077, !4902}
!8444 = !DILocalVariable(name: "i", arg: 1, scope: !8441, file: !142, line: 752, type: !4902)
!8445 = !DILocation(line: 752, column: 24, scope: !8441)
!8446 = !DILocation(line: 754, column: 10, scope: !8441)
!8447 = !DILocation(line: 754, column: 3, scope: !8441)
!8448 = distinct !DISubprogram(name: "ei_container", scope: !142, file: !142, line: 685, type: !8449, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!8449 = !DISubroutineType(types: !8450)
!8450 = !{!1065, !4902}
!8451 = !DILocalVariable(name: "i", arg: 1, scope: !8448, file: !142, line: 685, type: !4902)
!8452 = !DILocation(line: 685, column: 29, scope: !8448)
!8453 = !DILocation(line: 687, column: 3, scope: !8448)
!8454 = !DILocation(line: 688, column: 13, scope: !8448)
!8455 = !DILocation(line: 688, column: 10, scope: !8448)
!8456 = !DILocation(line: 688, column: 3, scope: !8448)
!8457 = distinct !DISubprogram(name: "df_scan_get_bb_info", scope: !564, file: !564, line: 1034, type: !8458, scopeLine: 1035, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!8458 = !DISubroutineType(types: !8459)
!8459 = !{!2229, !7}
!8460 = !DILocalVariable(name: "index", arg: 1, scope: !8457, file: !564, line: 1034, type: !7)
!8461 = !DILocation(line: 1034, column: 35, scope: !8457)
!8462 = !DILocation(line: 1036, column: 7, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8457, file: !564, line: 1036, column: 7)
!8464 = !DILocation(line: 1036, column: 15, scope: !8463)
!8465 = !DILocation(line: 1036, column: 24, scope: !8463)
!8466 = !DILocation(line: 1036, column: 13, scope: !8463)
!8467 = !DILocation(line: 1036, column: 7, scope: !8457)
!8468 = !DILocation(line: 1037, column: 39, scope: !8463)
!8469 = !DILocation(line: 1037, column: 48, scope: !8463)
!8470 = !DILocation(line: 1037, column: 59, scope: !8463)
!8471 = !DILocation(line: 1037, column: 12, scope: !8463)
!8472 = !DILocation(line: 1037, column: 5, scope: !8463)
!8473 = !DILocation(line: 1039, column: 5, scope: !8463)
!8474 = !DILocation(line: 1040, column: 1, scope: !8457)
!8475 = distinct !DISubprogram(name: "canon_hash", scope: !3, file: !3, line: 2579, type: !8476, scopeLine: 2580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!8476 = !DISubroutineType(types: !8477)
!8477 = !{!7, !1091, !5}
!8478 = !DILocalVariable(name: "x", arg: 1, scope: !8475, file: !3, line: 2579, type: !1091)
!8479 = !DILocation(line: 2579, column: 17, scope: !8475)
!8480 = !DILocalVariable(name: "mode", arg: 2, scope: !8475, file: !3, line: 2579, type: !5)
!8481 = !DILocation(line: 2579, column: 38, scope: !8475)
!8482 = !DILocation(line: 2581, column: 20, scope: !8475)
!8483 = !DILocation(line: 2581, column: 23, scope: !8475)
!8484 = !DILocation(line: 2581, column: 10, scope: !8475)
!8485 = !DILocation(line: 2581, column: 3, scope: !8475)
!8486 = distinct !DISubprogram(name: "delete_reg_equiv", scope: !3, file: !3, line: 990, type: !3463, scopeLine: 991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!8487 = !DILocalVariable(name: "reg", arg: 1, scope: !8486, file: !3, line: 990, type: !7)
!8488 = !DILocation(line: 990, column: 32, scope: !8486)
!8489 = !DILocalVariable(name: "ent", scope: !8486, file: !3, line: 992, type: !2216)
!8490 = !DILocation(line: 992, column: 26, scope: !8486)
!8491 = !DILocalVariable(name: "q", scope: !8486, file: !3, line: 993, type: !1053)
!8492 = !DILocation(line: 993, column: 7, scope: !8486)
!8493 = !DILocation(line: 993, column: 11, scope: !8486)
!8494 = !DILocalVariable(name: "p", scope: !8486, file: !3, line: 994, type: !1053)
!8495 = !DILocation(line: 994, column: 7, scope: !8486)
!8496 = !DILocalVariable(name: "n", scope: !8486, file: !3, line: 994, type: !1053)
!8497 = !DILocation(line: 994, column: 10, scope: !8486)
!8498 = !DILocation(line: 997, column: 9, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8486, file: !3, line: 997, column: 7)
!8500 = !DILocation(line: 997, column: 7, scope: !8486)
!8501 = !DILocation(line: 998, column: 5, scope: !8499)
!8502 = !DILocation(line: 1000, column: 10, scope: !8486)
!8503 = !DILocation(line: 1000, column: 20, scope: !8486)
!8504 = !DILocation(line: 1000, column: 7, scope: !8486)
!8505 = !DILocation(line: 1002, column: 7, scope: !8486)
!8506 = !DILocation(line: 1002, column: 21, scope: !8486)
!8507 = !DILocation(line: 1002, column: 26, scope: !8486)
!8508 = !DILocation(line: 1002, column: 5, scope: !8486)
!8509 = !DILocation(line: 1003, column: 7, scope: !8486)
!8510 = !DILocation(line: 1003, column: 21, scope: !8486)
!8511 = !DILocation(line: 1003, column: 26, scope: !8486)
!8512 = !DILocation(line: 1003, column: 5, scope: !8486)
!8513 = !DILocation(line: 1005, column: 7, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8486, file: !3, line: 1005, column: 7)
!8515 = !DILocation(line: 1005, column: 9, scope: !8514)
!8516 = !DILocation(line: 1005, column: 7, scope: !8486)
!8517 = !DILocation(line: 1006, column: 29, scope: !8514)
!8518 = !DILocation(line: 1006, column: 5, scope: !8514)
!8519 = !DILocation(line: 1006, column: 19, scope: !8514)
!8520 = !DILocation(line: 1006, column: 22, scope: !8514)
!8521 = !DILocation(line: 1006, column: 27, scope: !8514)
!8522 = !DILocation(line: 1008, column: 21, scope: !8514)
!8523 = !DILocation(line: 1008, column: 5, scope: !8514)
!8524 = !DILocation(line: 1008, column: 10, scope: !8514)
!8525 = !DILocation(line: 1008, column: 19, scope: !8514)
!8526 = !DILocation(line: 1009, column: 7, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8486, file: !3, line: 1009, column: 7)
!8528 = !DILocation(line: 1009, column: 9, scope: !8527)
!8529 = !DILocation(line: 1009, column: 7, scope: !8486)
!8530 = !DILocation(line: 1010, column: 29, scope: !8527)
!8531 = !DILocation(line: 1010, column: 5, scope: !8527)
!8532 = !DILocation(line: 1010, column: 19, scope: !8527)
!8533 = !DILocation(line: 1010, column: 22, scope: !8527)
!8534 = !DILocation(line: 1010, column: 27, scope: !8527)
!8535 = !DILocation(line: 1012, column: 22, scope: !8527)
!8536 = !DILocation(line: 1012, column: 5, scope: !8527)
!8537 = !DILocation(line: 1012, column: 10, scope: !8527)
!8538 = !DILocation(line: 1012, column: 20, scope: !8527)
!8539 = !DILocation(line: 1014, column: 20, scope: !8486)
!8540 = !DILocation(line: 1014, column: 19, scope: !8486)
!8541 = !DILocation(line: 1014, column: 24, scope: !8486)
!8542 = !DILocation(line: 1014, column: 3, scope: !8486)
!8543 = !DILocation(line: 1014, column: 17, scope: !8486)
!8544 = !DILocation(line: 1015, column: 1, scope: !8486)
!8545 = distinct !DISubprogram(name: "remove_pseudo_from_table", scope: !3, file: !3, line: 1475, type: !8546, scopeLine: 1476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!8546 = !DISubroutineType(types: !8547)
!8547 = !{null, !1091, !7}
!8548 = !DILocalVariable(name: "x", arg: 1, scope: !8545, file: !3, line: 1475, type: !1091)
!8549 = !DILocation(line: 1475, column: 31, scope: !8545)
!8550 = !DILocalVariable(name: "hash", arg: 2, scope: !8545, file: !3, line: 1475, type: !7)
!8551 = !DILocation(line: 1475, column: 47, scope: !8545)
!8552 = !DILocalVariable(name: "elt", scope: !8545, file: !3, line: 1477, type: !2307)
!8553 = !DILocation(line: 1477, column: 21, scope: !8545)
!8554 = !DILocation(line: 1481, column: 3, scope: !8545)
!8555 = !DILocation(line: 1481, column: 36, scope: !8545)
!8556 = !DILocation(line: 1481, column: 39, scope: !8545)
!8557 = !DILocation(line: 1481, column: 17, scope: !8545)
!8558 = !DILocation(line: 1481, column: 15, scope: !8545)
!8559 = !DILocation(line: 1482, column: 24, scope: !8545)
!8560 = !DILocation(line: 1482, column: 29, scope: !8545)
!8561 = !DILocation(line: 1482, column: 5, scope: !8545)
!8562 = distinct !{!8562, !8554, !8563}
!8563 = !DILocation(line: 1482, column: 33, scope: !8545)
!8564 = !DILocation(line: 1483, column: 1, scope: !8545)
!8565 = distinct !DISubprogram(name: "remove_from_table", scope: !3, file: !3, line: 1399, type: !8566, scopeLine: 1400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!8566 = !DISubroutineType(types: !8567)
!8567 = !{null, !2307, !7}
!8568 = !DILocalVariable(name: "elt", arg: 1, scope: !8565, file: !3, line: 1399, type: !2307)
!8569 = !DILocation(line: 1399, column: 38, scope: !8565)
!8570 = !DILocalVariable(name: "hash", arg: 2, scope: !8565, file: !3, line: 1399, type: !7)
!8571 = !DILocation(line: 1399, column: 56, scope: !8565)
!8572 = !DILocation(line: 1401, column: 7, scope: !8573)
!8573 = distinct !DILexicalBlock(scope: !8565, file: !3, line: 1401, column: 7)
!8574 = !DILocation(line: 1401, column: 11, scope: !8573)
!8575 = !DILocation(line: 1401, column: 7, scope: !8565)
!8576 = !DILocation(line: 1402, column: 5, scope: !8573)
!8577 = !DILocation(line: 1405, column: 3, scope: !8565)
!8578 = !DILocation(line: 1405, column: 8, scope: !8565)
!8579 = !DILocation(line: 1405, column: 25, scope: !8565)
!8580 = !DILocalVariable(name: "prev", scope: !8581, file: !3, line: 1410, type: !2307)
!8581 = distinct !DILexicalBlock(scope: !8565, file: !3, line: 1409, column: 3)
!8582 = !DILocation(line: 1410, column: 23, scope: !8581)
!8583 = !DILocation(line: 1410, column: 30, scope: !8581)
!8584 = !DILocation(line: 1410, column: 35, scope: !8581)
!8585 = !DILocalVariable(name: "next", scope: !8581, file: !3, line: 1411, type: !2307)
!8586 = !DILocation(line: 1411, column: 23, scope: !8581)
!8587 = !DILocation(line: 1411, column: 30, scope: !8581)
!8588 = !DILocation(line: 1411, column: 35, scope: !8581)
!8589 = !DILocation(line: 1413, column: 9, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 1413, column: 9)
!8591 = !DILocation(line: 1413, column: 9, scope: !8581)
!8592 = !DILocation(line: 1414, column: 31, scope: !8590)
!8593 = !DILocation(line: 1414, column: 7, scope: !8590)
!8594 = !DILocation(line: 1414, column: 13, scope: !8590)
!8595 = !DILocation(line: 1414, column: 29, scope: !8590)
!8596 = !DILocation(line: 1416, column: 9, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 1416, column: 9)
!8598 = !DILocation(line: 1416, column: 9, scope: !8581)
!8599 = !DILocation(line: 1417, column: 31, scope: !8597)
!8600 = !DILocation(line: 1417, column: 7, scope: !8597)
!8601 = !DILocation(line: 1417, column: 13, scope: !8597)
!8602 = !DILocation(line: 1417, column: 29, scope: !8597)
!8603 = !DILocalVariable(name: "newfirst", scope: !8604, file: !3, line: 1420, type: !2307)
!8604 = distinct !DILexicalBlock(scope: !8597, file: !3, line: 1419, column: 7)
!8605 = !DILocation(line: 1420, column: 20, scope: !8604)
!8606 = !DILocation(line: 1420, column: 31, scope: !8604)
!8607 = !DILocation(line: 1421, column: 2, scope: !8604)
!8608 = !DILocation(line: 1421, column: 9, scope: !8604)
!8609 = !DILocation(line: 1423, column: 31, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8604, file: !3, line: 1422, column: 4)
!8611 = !DILocation(line: 1423, column: 6, scope: !8610)
!8612 = !DILocation(line: 1423, column: 12, scope: !8610)
!8613 = !DILocation(line: 1423, column: 29, scope: !8610)
!8614 = !DILocation(line: 1424, column: 13, scope: !8610)
!8615 = !DILocation(line: 1424, column: 19, scope: !8610)
!8616 = !DILocation(line: 1424, column: 11, scope: !8610)
!8617 = distinct !{!8617, !8607, !8618}
!8618 = !DILocation(line: 1425, column: 4, scope: !8604)
!8619 = !DILocalVariable(name: "prev", scope: !8620, file: !3, line: 1432, type: !2307)
!8620 = distinct !DILexicalBlock(scope: !8565, file: !3, line: 1431, column: 3)
!8621 = !DILocation(line: 1432, column: 23, scope: !8620)
!8622 = !DILocation(line: 1432, column: 30, scope: !8620)
!8623 = !DILocation(line: 1432, column: 35, scope: !8620)
!8624 = !DILocalVariable(name: "next", scope: !8620, file: !3, line: 1433, type: !2307)
!8625 = !DILocation(line: 1433, column: 23, scope: !8620)
!8626 = !DILocation(line: 1433, column: 30, scope: !8620)
!8627 = !DILocation(line: 1433, column: 35, scope: !8620)
!8628 = !DILocation(line: 1435, column: 9, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8620, file: !3, line: 1435, column: 9)
!8630 = !DILocation(line: 1435, column: 9, scope: !8620)
!8631 = !DILocation(line: 1436, column: 30, scope: !8629)
!8632 = !DILocation(line: 1436, column: 7, scope: !8629)
!8633 = !DILocation(line: 1436, column: 13, scope: !8629)
!8634 = !DILocation(line: 1436, column: 28, scope: !8629)
!8635 = !DILocation(line: 1438, column: 9, scope: !8636)
!8636 = distinct !DILexicalBlock(scope: !8620, file: !3, line: 1438, column: 9)
!8637 = !DILocation(line: 1438, column: 9, scope: !8620)
!8638 = !DILocation(line: 1439, column: 30, scope: !8636)
!8639 = !DILocation(line: 1439, column: 7, scope: !8636)
!8640 = !DILocation(line: 1439, column: 13, scope: !8636)
!8641 = !DILocation(line: 1439, column: 28, scope: !8636)
!8642 = !DILocation(line: 1440, column: 20, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8636, file: !3, line: 1440, column: 14)
!8644 = !DILocation(line: 1440, column: 14, scope: !8643)
!8645 = !DILocation(line: 1440, column: 29, scope: !8643)
!8646 = !DILocation(line: 1440, column: 26, scope: !8643)
!8647 = !DILocation(line: 1440, column: 14, scope: !8636)
!8648 = !DILocation(line: 1441, column: 21, scope: !8643)
!8649 = !DILocation(line: 1441, column: 13, scope: !8643)
!8650 = !DILocation(line: 1441, column: 7, scope: !8643)
!8651 = !DILocation(line: 1441, column: 19, scope: !8643)
!8652 = !DILocation(line: 1448, column: 12, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8654, file: !3, line: 1448, column: 2)
!8654 = distinct !DILexicalBlock(scope: !8643, file: !3, line: 1443, column: 7)
!8655 = !DILocation(line: 1448, column: 7, scope: !8653)
!8656 = !DILocation(line: 1448, column: 17, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !8653, file: !3, line: 1448, column: 2)
!8658 = !DILocation(line: 1448, column: 22, scope: !8657)
!8659 = !DILocation(line: 1448, column: 2, scope: !8653)
!8660 = !DILocation(line: 1449, column: 14, scope: !8661)
!8661 = distinct !DILexicalBlock(scope: !8657, file: !3, line: 1449, column: 8)
!8662 = !DILocation(line: 1449, column: 8, scope: !8661)
!8663 = !DILocation(line: 1449, column: 23, scope: !8661)
!8664 = !DILocation(line: 1449, column: 20, scope: !8661)
!8665 = !DILocation(line: 1449, column: 8, scope: !8657)
!8666 = !DILocation(line: 1450, column: 20, scope: !8661)
!8667 = !DILocation(line: 1450, column: 12, scope: !8661)
!8668 = !DILocation(line: 1450, column: 6, scope: !8661)
!8669 = !DILocation(line: 1450, column: 18, scope: !8661)
!8670 = !DILocation(line: 1448, column: 39, scope: !8657)
!8671 = !DILocation(line: 1448, column: 2, scope: !8657)
!8672 = distinct !{!8672, !8659, !8673}
!8673 = !DILocation(line: 1450, column: 20, scope: !8653)
!8674 = !DILocation(line: 1456, column: 7, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8565, file: !3, line: 1456, column: 7)
!8676 = !DILocation(line: 1456, column: 12, scope: !8675)
!8677 = !DILocation(line: 1456, column: 26, scope: !8675)
!8678 = !DILocation(line: 1456, column: 31, scope: !8675)
!8679 = !DILocation(line: 1456, column: 34, scope: !8675)
!8680 = !DILocation(line: 1456, column: 39, scope: !8675)
!8681 = !DILocation(line: 1456, column: 56, scope: !8675)
!8682 = !DILocation(line: 1456, column: 53, scope: !8675)
!8683 = !DILocation(line: 1456, column: 7, scope: !8565)
!8684 = !DILocalVariable(name: "p", scope: !8685, file: !3, line: 1458, type: !2307)
!8685 = distinct !DILexicalBlock(scope: !8675, file: !3, line: 1457, column: 5)
!8686 = !DILocation(line: 1458, column: 25, scope: !8685)
!8687 = !DILocation(line: 1458, column: 29, scope: !8685)
!8688 = !DILocation(line: 1458, column: 34, scope: !8685)
!8689 = !DILocation(line: 1460, column: 7, scope: !8685)
!8690 = !DILocation(line: 1460, column: 14, scope: !8685)
!8691 = !DILocation(line: 1460, column: 17, scope: !8685)
!8692 = !DILocation(line: 1460, column: 34, scope: !8685)
!8693 = !DILocation(line: 1460, column: 31, scope: !8685)
!8694 = !DILocation(line: 1461, column: 6, scope: !8685)
!8695 = !DILocation(line: 1461, column: 9, scope: !8685)
!8696 = !DILocation(line: 1461, column: 4, scope: !8685)
!8697 = distinct !{!8697, !8689, !8695}
!8698 = !DILocation(line: 1462, column: 26, scope: !8685)
!8699 = !DILocation(line: 1462, column: 31, scope: !8685)
!8700 = !DILocation(line: 1462, column: 7, scope: !8685)
!8701 = !DILocation(line: 1462, column: 10, scope: !8685)
!8702 = !DILocation(line: 1462, column: 24, scope: !8685)
!8703 = !DILocation(line: 1463, column: 11, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8685, file: !3, line: 1463, column: 11)
!8705 = !DILocation(line: 1463, column: 14, scope: !8704)
!8706 = !DILocation(line: 1463, column: 31, scope: !8704)
!8707 = !DILocation(line: 1463, column: 28, scope: !8704)
!8708 = !DILocation(line: 1463, column: 11, scope: !8685)
!8709 = !DILocation(line: 1464, column: 2, scope: !8704)
!8710 = !DILocation(line: 1464, column: 5, scope: !8704)
!8711 = !DILocation(line: 1464, column: 19, scope: !8704)
!8712 = !DILocation(line: 1465, column: 5, scope: !8685)
!8713 = !DILocation(line: 1468, column: 25, scope: !8565)
!8714 = !DILocation(line: 1468, column: 3, scope: !8565)
!8715 = !DILocation(line: 1468, column: 8, scope: !8565)
!8716 = !DILocation(line: 1468, column: 23, scope: !8565)
!8717 = !DILocation(line: 1469, column: 24, scope: !8565)
!8718 = !DILocation(line: 1469, column: 22, scope: !8565)
!8719 = !DILocation(line: 1470, column: 1, scope: !8565)
!8720 = distinct !DISubprogram(name: "check_dependence", scope: !3, file: !3, line: 1845, type: !8213, scopeLine: 1846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!8721 = !DILocalVariable(name: "x", arg: 1, scope: !8720, file: !3, line: 1845, type: !2281)
!8722 = !DILocation(line: 1845, column: 24, scope: !8720)
!8723 = !DILocalVariable(name: "data", arg: 2, scope: !8720, file: !3, line: 1845, type: !1019)
!8724 = !DILocation(line: 1845, column: 33, scope: !8720)
!8725 = !DILocalVariable(name: "d", scope: !8720, file: !3, line: 1847, type: !2295)
!8726 = !DILocation(line: 1847, column: 33, scope: !8720)
!8727 = !DILocation(line: 1847, column: 70, scope: !8720)
!8728 = !DILocation(line: 1847, column: 37, scope: !8720)
!8729 = !DILocation(line: 1848, column: 8, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8720, file: !3, line: 1848, column: 7)
!8731 = !DILocation(line: 1848, column: 7, scope: !8730)
!8732 = !DILocation(line: 1848, column: 10, scope: !8730)
!8733 = !DILocation(line: 1848, column: 13, scope: !8730)
!8734 = !DILocation(line: 1848, column: 7, scope: !8720)
!8735 = !DILocation(line: 1849, column: 35, scope: !8730)
!8736 = !DILocation(line: 1849, column: 38, scope: !8730)
!8737 = !DILocation(line: 1849, column: 43, scope: !8730)
!8738 = !DILocation(line: 1849, column: 46, scope: !8730)
!8739 = !DILocation(line: 1849, column: 52, scope: !8730)
!8740 = !DILocation(line: 1849, column: 55, scope: !8730)
!8741 = !DILocation(line: 1849, column: 62, scope: !8730)
!8742 = !DILocation(line: 1849, column: 61, scope: !8730)
!8743 = !DILocation(line: 1849, column: 12, scope: !8730)
!8744 = !DILocation(line: 1849, column: 5, scope: !8730)
!8745 = !DILocation(line: 1852, column: 5, scope: !8730)
!8746 = !DILocation(line: 1853, column: 1, scope: !8720)
!8747 = distinct !DISubprogram(name: "lookup_for_remove", scope: !3, file: !3, line: 1511, type: !8748, scopeLine: 1512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!8748 = !DISubroutineType(types: !8749)
!8749 = !{!2307, !1091, !7, !5}
!8750 = !DILocalVariable(name: "x", arg: 1, scope: !8747, file: !3, line: 1511, type: !1091)
!8751 = !DILocation(line: 1511, column: 24, scope: !8747)
!8752 = !DILocalVariable(name: "hash", arg: 2, scope: !8747, file: !3, line: 1511, type: !7)
!8753 = !DILocation(line: 1511, column: 40, scope: !8747)
!8754 = !DILocalVariable(name: "mode", arg: 3, scope: !8747, file: !3, line: 1511, type: !5)
!8755 = !DILocation(line: 1511, column: 64, scope: !8747)
!8756 = !DILocalVariable(name: "p", scope: !8747, file: !3, line: 1513, type: !2307)
!8757 = !DILocation(line: 1513, column: 21, scope: !8747)
!8758 = !DILocation(line: 1515, column: 7, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8747, file: !3, line: 1515, column: 7)
!8760 = !DILocation(line: 1515, column: 7, scope: !8747)
!8761 = !DILocalVariable(name: "regno", scope: !8762, file: !3, line: 1517, type: !7)
!8762 = distinct !DILexicalBlock(scope: !8759, file: !3, line: 1516, column: 5)
!8763 = !DILocation(line: 1517, column: 20, scope: !8762)
!8764 = !DILocation(line: 1517, column: 28, scope: !8762)
!8765 = !DILocation(line: 1521, column: 22, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8762, file: !3, line: 1521, column: 7)
!8767 = !DILocation(line: 1521, column: 16, scope: !8766)
!8768 = !DILocation(line: 1521, column: 14, scope: !8766)
!8769 = !DILocation(line: 1521, column: 12, scope: !8766)
!8770 = !DILocation(line: 1521, column: 29, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8766, file: !3, line: 1521, column: 7)
!8772 = !DILocation(line: 1521, column: 7, scope: !8766)
!8773 = !DILocation(line: 1522, column: 6, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8771, file: !3, line: 1522, column: 6)
!8775 = !DILocation(line: 1523, column: 6, scope: !8774)
!8776 = !DILocation(line: 1523, column: 9, scope: !8774)
!8777 = !DILocation(line: 1523, column: 27, scope: !8774)
!8778 = !DILocation(line: 1523, column: 24, scope: !8774)
!8779 = !DILocation(line: 1522, column: 6, scope: !8771)
!8780 = !DILocation(line: 1524, column: 11, scope: !8774)
!8781 = !DILocation(line: 1524, column: 4, scope: !8774)
!8782 = !DILocation(line: 1521, column: 36, scope: !8771)
!8783 = !DILocation(line: 1521, column: 39, scope: !8771)
!8784 = !DILocation(line: 1521, column: 34, scope: !8771)
!8785 = !DILocation(line: 1521, column: 7, scope: !8771)
!8786 = distinct !{!8786, !8772, !8787}
!8787 = !DILocation(line: 1524, column: 11, scope: !8766)
!8788 = !DILocation(line: 1525, column: 5, scope: !8762)
!8789 = !DILocation(line: 1528, column: 22, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8791, file: !3, line: 1528, column: 7)
!8791 = distinct !DILexicalBlock(scope: !8759, file: !3, line: 1527, column: 5)
!8792 = !DILocation(line: 1528, column: 16, scope: !8790)
!8793 = !DILocation(line: 1528, column: 14, scope: !8790)
!8794 = !DILocation(line: 1528, column: 12, scope: !8790)
!8795 = !DILocation(line: 1528, column: 29, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8790, file: !3, line: 1528, column: 7)
!8797 = !DILocation(line: 1528, column: 7, scope: !8790)
!8798 = !DILocation(line: 1529, column: 6, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8796, file: !3, line: 1529, column: 6)
!8800 = !DILocation(line: 1529, column: 14, scope: !8799)
!8801 = !DILocation(line: 1529, column: 17, scope: !8799)
!8802 = !DILocation(line: 1529, column: 11, scope: !8799)
!8803 = !DILocation(line: 1530, column: 6, scope: !8799)
!8804 = !DILocation(line: 1530, column: 10, scope: !8799)
!8805 = !DILocation(line: 1530, column: 15, scope: !8799)
!8806 = !DILocation(line: 1530, column: 18, scope: !8799)
!8807 = !DILocation(line: 1530, column: 12, scope: !8799)
!8808 = !DILocation(line: 1530, column: 22, scope: !8799)
!8809 = !DILocation(line: 1530, column: 38, scope: !8799)
!8810 = !DILocation(line: 1530, column: 41, scope: !8799)
!8811 = !DILocation(line: 1530, column: 44, scope: !8799)
!8812 = !DILocation(line: 1530, column: 25, scope: !8799)
!8813 = !DILocation(line: 1529, column: 6, scope: !8796)
!8814 = !DILocation(line: 1531, column: 11, scope: !8799)
!8815 = !DILocation(line: 1531, column: 4, scope: !8799)
!8816 = !DILocation(line: 1530, column: 58, scope: !8799)
!8817 = !DILocation(line: 1528, column: 36, scope: !8796)
!8818 = !DILocation(line: 1528, column: 39, scope: !8796)
!8819 = !DILocation(line: 1528, column: 34, scope: !8796)
!8820 = !DILocation(line: 1528, column: 7, scope: !8796)
!8821 = distinct !{!8821, !8797, !8822}
!8822 = !DILocation(line: 1531, column: 11, scope: !8790)
!8823 = !DILocation(line: 1534, column: 3, scope: !8747)
!8824 = !DILocation(line: 1535, column: 1, scope: !8747)
!8825 = distinct !DISubprogram(name: "cse_rtx_varies_p", scope: !3, file: !3, line: 2802, type: !8826, scopeLine: 2803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!8826 = !DISubroutineType(types: !8827)
!8827 = !{!1052, !2420, !1052}
!8828 = !DILocalVariable(name: "x", arg: 1, scope: !8825, file: !3, line: 2802, type: !2420)
!8829 = !DILocation(line: 2802, column: 29, scope: !8825)
!8830 = !DILocalVariable(name: "from_alias", arg: 2, scope: !8825, file: !3, line: 2802, type: !1052)
!8831 = !DILocation(line: 2802, column: 37, scope: !8825)
!8832 = !DILocation(line: 2808, column: 7, scope: !8833)
!8833 = distinct !DILexicalBlock(scope: !8825, file: !3, line: 2808, column: 7)
!8834 = !DILocation(line: 2809, column: 7, scope: !8833)
!8835 = !DILocation(line: 2809, column: 10, scope: !8833)
!8836 = !DILocation(line: 2808, column: 7, scope: !8825)
!8837 = !DILocalVariable(name: "x_q", scope: !8838, file: !3, line: 2811, type: !1053)
!8838 = distinct !DILexicalBlock(scope: !8833, file: !3, line: 2810, column: 5)
!8839 = !DILocation(line: 2811, column: 11, scope: !8838)
!8840 = !DILocation(line: 2811, column: 17, scope: !8838)
!8841 = !DILocalVariable(name: "x_ent", scope: !8838, file: !3, line: 2812, type: !2216)
!8842 = !DILocation(line: 2812, column: 30, scope: !8838)
!8843 = !DILocation(line: 2812, column: 39, scope: !8838)
!8844 = !DILocation(line: 2812, column: 49, scope: !8838)
!8845 = !DILocation(line: 2814, column: 11, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8838, file: !3, line: 2814, column: 11)
!8847 = !DILocation(line: 2814, column: 27, scope: !8846)
!8848 = !DILocation(line: 2814, column: 34, scope: !8846)
!8849 = !DILocation(line: 2814, column: 24, scope: !8846)
!8850 = !DILocation(line: 2815, column: 4, scope: !8846)
!8851 = !DILocation(line: 2815, column: 7, scope: !8846)
!8852 = !DILocation(line: 2815, column: 14, scope: !8846)
!8853 = !DILocation(line: 2815, column: 24, scope: !8846)
!8854 = !DILocation(line: 2814, column: 11, scope: !8838)
!8855 = !DILocation(line: 2816, column: 2, scope: !8846)
!8856 = !DILocation(line: 2817, column: 5, scope: !8838)
!8857 = !DILocation(line: 2819, column: 7, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8825, file: !3, line: 2819, column: 7)
!8859 = !DILocation(line: 2819, column: 20, scope: !8858)
!8860 = !DILocation(line: 2820, column: 7, scope: !8858)
!8861 = !DILocation(line: 2820, column: 10, scope: !8858)
!8862 = !DILocation(line: 2821, column: 7, scope: !8858)
!8863 = !DILocation(line: 2821, column: 10, scope: !8858)
!8864 = !DILocation(line: 2822, column: 7, scope: !8858)
!8865 = !DILocation(line: 2822, column: 10, scope: !8858)
!8866 = !DILocation(line: 2819, column: 7, scope: !8825)
!8867 = !DILocalVariable(name: "x0_q", scope: !8868, file: !3, line: 2824, type: !1053)
!8868 = distinct !DILexicalBlock(scope: !8858, file: !3, line: 2823, column: 5)
!8869 = !DILocation(line: 2824, column: 11, scope: !8868)
!8870 = !DILocation(line: 2824, column: 18, scope: !8868)
!8871 = !DILocalVariable(name: "x0_ent", scope: !8868, file: !3, line: 2825, type: !2216)
!8872 = !DILocation(line: 2825, column: 30, scope: !8868)
!8873 = !DILocation(line: 2825, column: 40, scope: !8868)
!8874 = !DILocation(line: 2825, column: 50, scope: !8868)
!8875 = !DILocation(line: 2827, column: 12, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8868, file: !3, line: 2827, column: 11)
!8877 = !DILocation(line: 2827, column: 38, scope: !8876)
!8878 = !DILocation(line: 2827, column: 46, scope: !8876)
!8879 = !DILocation(line: 2827, column: 35, scope: !8876)
!8880 = !DILocation(line: 2828, column: 4, scope: !8876)
!8881 = !DILocation(line: 2828, column: 7, scope: !8876)
!8882 = !DILocation(line: 2828, column: 15, scope: !8876)
!8883 = !DILocation(line: 2828, column: 25, scope: !8876)
!8884 = !DILocation(line: 2827, column: 11, scope: !8868)
!8885 = !DILocation(line: 2829, column: 2, scope: !8876)
!8886 = !DILocation(line: 2830, column: 5, scope: !8868)
!8887 = !DILocation(line: 2837, column: 7, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8825, file: !3, line: 2837, column: 7)
!8889 = !DILocation(line: 2837, column: 20, scope: !8888)
!8890 = !DILocation(line: 2838, column: 7, scope: !8888)
!8891 = !DILocation(line: 2838, column: 10, scope: !8888)
!8892 = !DILocation(line: 2839, column: 7, scope: !8888)
!8893 = !DILocation(line: 2839, column: 10, scope: !8888)
!8894 = !DILocation(line: 2840, column: 7, scope: !8888)
!8895 = !DILocation(line: 2840, column: 10, scope: !8888)
!8896 = !DILocation(line: 2841, column: 7, scope: !8888)
!8897 = !DILocation(line: 2841, column: 10, scope: !8888)
!8898 = !DILocation(line: 2837, column: 7, scope: !8825)
!8899 = !DILocalVariable(name: "x0_q", scope: !8900, file: !3, line: 2843, type: !1053)
!8900 = distinct !DILexicalBlock(scope: !8888, file: !3, line: 2842, column: 5)
!8901 = !DILocation(line: 2843, column: 11, scope: !8900)
!8902 = !DILocation(line: 2843, column: 18, scope: !8900)
!8903 = !DILocalVariable(name: "x1_q", scope: !8900, file: !3, line: 2844, type: !1053)
!8904 = !DILocation(line: 2844, column: 11, scope: !8900)
!8905 = !DILocation(line: 2844, column: 18, scope: !8900)
!8906 = !DILocalVariable(name: "x0_ent", scope: !8900, file: !3, line: 2845, type: !2216)
!8907 = !DILocation(line: 2845, column: 30, scope: !8900)
!8908 = !DILocation(line: 2845, column: 40, scope: !8900)
!8909 = !DILocation(line: 2845, column: 50, scope: !8900)
!8910 = !DILocalVariable(name: "x1_ent", scope: !8900, file: !3, line: 2846, type: !2216)
!8911 = !DILocation(line: 2846, column: 30, scope: !8900)
!8912 = !DILocation(line: 2846, column: 40, scope: !8900)
!8913 = !DILocation(line: 2846, column: 50, scope: !8900)
!8914 = !DILocation(line: 2848, column: 12, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8900, file: !3, line: 2848, column: 11)
!8916 = !DILocation(line: 2848, column: 38, scope: !8915)
!8917 = !DILocation(line: 2848, column: 46, scope: !8915)
!8918 = !DILocation(line: 2848, column: 35, scope: !8915)
!8919 = !DILocation(line: 2849, column: 4, scope: !8915)
!8920 = !DILocation(line: 2849, column: 7, scope: !8915)
!8921 = !DILocation(line: 2849, column: 15, scope: !8915)
!8922 = !DILocation(line: 2849, column: 25, scope: !8915)
!8923 = !DILocation(line: 2850, column: 4, scope: !8915)
!8924 = !DILocation(line: 2850, column: 8, scope: !8915)
!8925 = !DILocation(line: 2850, column: 34, scope: !8915)
!8926 = !DILocation(line: 2850, column: 42, scope: !8915)
!8927 = !DILocation(line: 2850, column: 31, scope: !8915)
!8928 = !DILocation(line: 2851, column: 4, scope: !8915)
!8929 = !DILocation(line: 2851, column: 7, scope: !8915)
!8930 = !DILocation(line: 2851, column: 15, scope: !8915)
!8931 = !DILocation(line: 2851, column: 25, scope: !8915)
!8932 = !DILocation(line: 2848, column: 11, scope: !8900)
!8933 = !DILocation(line: 2852, column: 2, scope: !8915)
!8934 = !DILocation(line: 2853, column: 5, scope: !8900)
!8935 = !DILocation(line: 2855, column: 24, scope: !8825)
!8936 = !DILocation(line: 2855, column: 27, scope: !8825)
!8937 = !DILocation(line: 2855, column: 10, scope: !8825)
!8938 = !DILocation(line: 2855, column: 3, scope: !8825)
!8939 = !DILocation(line: 2856, column: 1, scope: !8825)
!8940 = distinct !DISubprogram(name: "cse_process_notes_1", scope: !3, file: !3, line: 5989, type: !5221, scopeLine: 5990, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!8941 = !DILocalVariable(name: "x", arg: 1, scope: !8940, file: !3, line: 5989, type: !1091)
!8942 = !DILocation(line: 5989, column: 26, scope: !8940)
!8943 = !DILocalVariable(name: "object", arg: 2, scope: !8940, file: !3, line: 5989, type: !1091)
!8944 = !DILocation(line: 5989, column: 33, scope: !8940)
!8945 = !DILocalVariable(name: "changed", arg: 3, scope: !8940, file: !3, line: 5989, type: !2393)
!8946 = !DILocation(line: 5989, column: 47, scope: !8940)
!8947 = !DILocalVariable(name: "code", scope: !8940, file: !3, line: 5991, type: !384)
!8948 = !DILocation(line: 5991, column: 17, scope: !8940)
!8949 = !DILocation(line: 5991, column: 24, scope: !8940)
!8950 = !DILocalVariable(name: "fmt", scope: !8940, file: !3, line: 5992, type: !1116)
!8951 = !DILocation(line: 5992, column: 15, scope: !8940)
!8952 = !DILocation(line: 5992, column: 21, scope: !8940)
!8953 = !DILocalVariable(name: "i", scope: !8940, file: !3, line: 5993, type: !1053)
!8954 = !DILocation(line: 5993, column: 7, scope: !8940)
!8955 = !DILocation(line: 5995, column: 11, scope: !8940)
!8956 = !DILocation(line: 5995, column: 3, scope: !8940)
!8957 = !DILocation(line: 6007, column: 14, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8940, file: !3, line: 5996, column: 5)
!8959 = !DILocation(line: 6007, column: 7, scope: !8958)
!8960 = !DILocation(line: 6010, column: 24, scope: !8958)
!8961 = !DILocation(line: 6010, column: 28, scope: !8958)
!8962 = !DILocation(line: 6011, column: 29, scope: !8958)
!8963 = !DILocation(line: 6011, column: 42, scope: !8958)
!8964 = !DILocation(line: 6011, column: 45, scope: !8958)
!8965 = !DILocation(line: 6011, column: 10, scope: !8958)
!8966 = !DILocation(line: 6010, column: 7, scope: !8958)
!8967 = !DILocation(line: 6012, column: 14, scope: !8958)
!8968 = !DILocation(line: 6012, column: 7, scope: !8958)
!8969 = !DILocation(line: 6016, column: 11, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8958, file: !3, line: 6016, column: 11)
!8971 = !DILocation(line: 6016, column: 29, scope: !8970)
!8972 = !DILocation(line: 6016, column: 11, scope: !8958)
!8973 = !DILocation(line: 6017, column: 35, scope: !8970)
!8974 = !DILocation(line: 6017, column: 58, scope: !8970)
!8975 = !DILocation(line: 6017, column: 16, scope: !8970)
!8976 = !DILocation(line: 6017, column: 2, scope: !8970)
!8977 = !DILocation(line: 6017, column: 14, scope: !8970)
!8978 = !DILocation(line: 6018, column: 11, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8958, file: !3, line: 6018, column: 11)
!8980 = !DILocation(line: 6018, column: 11, scope: !8958)
!8981 = !DILocation(line: 6019, column: 35, scope: !8979)
!8982 = !DILocation(line: 6019, column: 58, scope: !8979)
!8983 = !DILocation(line: 6019, column: 16, scope: !8979)
!8984 = !DILocation(line: 6019, column: 2, scope: !8979)
!8985 = !DILocation(line: 6019, column: 14, scope: !8979)
!8986 = !DILocation(line: 6020, column: 14, scope: !8958)
!8987 = !DILocation(line: 6020, column: 7, scope: !8958)
!8988 = !DILocalVariable(name: "new_rtx", scope: !8989, file: !3, line: 6026, type: !1091)
!8989 = distinct !DILexicalBlock(scope: !8958, file: !3, line: 6025, column: 7)
!8990 = !DILocation(line: 6026, column: 6, scope: !8989)
!8991 = !DILocation(line: 6026, column: 35, scope: !8989)
!8992 = !DILocation(line: 6026, column: 48, scope: !8989)
!8993 = !DILocation(line: 6026, column: 56, scope: !8989)
!8994 = !DILocation(line: 6026, column: 16, scope: !8989)
!8995 = !DILocation(line: 6029, column: 6, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8989, file: !3, line: 6029, column: 6)
!8997 = !DILocation(line: 6029, column: 25, scope: !8996)
!8998 = !DILocation(line: 6029, column: 6, scope: !8989)
!8999 = !DILocation(line: 6030, column: 21, scope: !8996)
!9000 = !DILocation(line: 6030, column: 30, scope: !8996)
!9001 = !DILocation(line: 6030, column: 43, scope: !8996)
!9002 = !DILocation(line: 6030, column: 4, scope: !8996)
!9003 = !DILocation(line: 6031, column: 9, scope: !8989)
!9004 = !DILocation(line: 6031, column: 2, scope: !8989)
!9005 = !DILocation(line: 6035, column: 11, scope: !8958)
!9006 = !DILocation(line: 6035, column: 9, scope: !8958)
!9007 = !DILocation(line: 6038, column: 11, scope: !9008)
!9008 = distinct !DILexicalBlock(scope: !8958, file: !3, line: 6038, column: 11)
!9009 = !DILocation(line: 6038, column: 11, scope: !8958)
!9010 = !DILocalVariable(name: "ent", scope: !9011, file: !3, line: 6040, type: !2216)
!9011 = distinct !DILexicalBlock(scope: !9008, file: !3, line: 6039, column: 2)
!9012 = !DILocation(line: 6040, column: 27, scope: !9011)
!9013 = !DILocation(line: 6040, column: 34, scope: !9011)
!9014 = !DILocation(line: 6040, column: 44, scope: !9011)
!9015 = !DILocation(line: 6042, column: 8, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !9011, file: !3, line: 6042, column: 8)
!9017 = !DILocation(line: 6042, column: 13, scope: !9016)
!9018 = !DILocation(line: 6042, column: 23, scope: !9016)
!9019 = !DILocation(line: 6043, column: 8, scope: !9016)
!9020 = !DILocation(line: 6043, column: 12, scope: !9016)
!9021 = !DILocation(line: 6044, column: 5, scope: !9016)
!9022 = !DILocation(line: 6044, column: 8, scope: !9016)
!9023 = !DILocation(line: 6042, column: 8, scope: !9011)
!9024 = !DILocalVariable(name: "new_rtx", scope: !9025, file: !3, line: 6046, type: !1091)
!9025 = distinct !DILexicalBlock(scope: !9016, file: !3, line: 6045, column: 6)
!9026 = !DILocation(line: 6046, column: 12, scope: !9025)
!9027 = !DILocation(line: 6046, column: 22, scope: !9025)
!9028 = !DILocation(line: 6046, column: 35, scope: !9025)
!9029 = !DILocation(line: 6046, column: 49, scope: !9025)
!9030 = !DILocation(line: 6046, column: 54, scope: !9025)
!9031 = !DILocation(line: 6047, column: 12, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !9025, file: !3, line: 6047, column: 12)
!9033 = !DILocation(line: 6047, column: 12, scope: !9025)
!9034 = !DILocation(line: 6048, column: 20, scope: !9032)
!9035 = !DILocation(line: 6048, column: 10, scope: !9032)
!9036 = !DILocation(line: 6048, column: 3, scope: !9032)
!9037 = !DILocation(line: 6049, column: 6, scope: !9025)
!9038 = !DILocation(line: 6050, column: 2, scope: !9011)
!9039 = !DILocation(line: 6053, column: 25, scope: !8958)
!9040 = !DILocation(line: 6053, column: 14, scope: !8958)
!9041 = !DILocation(line: 6053, column: 7, scope: !8958)
!9042 = !DILocation(line: 6056, column: 7, scope: !8958)
!9043 = !DILocation(line: 6059, column: 10, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !8940, file: !3, line: 6059, column: 3)
!9045 = !DILocation(line: 6059, column: 8, scope: !9044)
!9046 = !DILocation(line: 6059, column: 15, scope: !9047)
!9047 = distinct !DILexicalBlock(scope: !9044, file: !3, line: 6059, column: 3)
!9048 = !DILocation(line: 6059, column: 19, scope: !9047)
!9049 = !DILocation(line: 6059, column: 17, scope: !9047)
!9050 = !DILocation(line: 6059, column: 3, scope: !9044)
!9051 = !DILocation(line: 6060, column: 9, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !9047, file: !3, line: 6060, column: 9)
!9053 = !DILocation(line: 6060, column: 13, scope: !9052)
!9054 = !DILocation(line: 6060, column: 16, scope: !9052)
!9055 = !DILocation(line: 6060, column: 9, scope: !9047)
!9056 = !DILocation(line: 6061, column: 24, scope: !9052)
!9057 = !DILocation(line: 6061, column: 33, scope: !9052)
!9058 = !DILocation(line: 6062, column: 29, scope: !9052)
!9059 = !DILocation(line: 6062, column: 42, scope: !9052)
!9060 = !DILocation(line: 6062, column: 50, scope: !9052)
!9061 = !DILocation(line: 6062, column: 10, scope: !9052)
!9062 = !DILocation(line: 6061, column: 7, scope: !9052)
!9063 = !DILocation(line: 6060, column: 19, scope: !9052)
!9064 = !DILocation(line: 6059, column: 43, scope: !9047)
!9065 = !DILocation(line: 6059, column: 3, scope: !9047)
!9066 = distinct !{!9066, !9050, !9067}
!9067 = !DILocation(line: 6062, column: 61, scope: !9044)
!9068 = !DILocation(line: 6064, column: 10, scope: !8940)
!9069 = !DILocation(line: 6064, column: 3, scope: !8940)
!9070 = !DILocation(line: 6065, column: 1, scope: !8940)
!9071 = distinct !DISubprogram(name: "canon_reg", scope: !3, file: !3, line: 2886, type: !9072, scopeLine: 2887, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!9072 = !DISubroutineType(types: !9073)
!9073 = !{!1091, !1091, !1091}
!9074 = !DILocalVariable(name: "x", arg: 1, scope: !9071, file: !3, line: 2886, type: !1091)
!9075 = !DILocation(line: 2886, column: 16, scope: !9071)
!9076 = !DILocalVariable(name: "insn", arg: 2, scope: !9071, file: !3, line: 2886, type: !1091)
!9077 = !DILocation(line: 2886, column: 23, scope: !9071)
!9078 = !DILocalVariable(name: "i", scope: !9071, file: !3, line: 2888, type: !1053)
!9079 = !DILocation(line: 2888, column: 7, scope: !9071)
!9080 = !DILocalVariable(name: "code", scope: !9071, file: !3, line: 2889, type: !384)
!9081 = !DILocation(line: 2889, column: 17, scope: !9071)
!9082 = !DILocalVariable(name: "fmt", scope: !9071, file: !3, line: 2890, type: !1116)
!9083 = !DILocation(line: 2890, column: 15, scope: !9071)
!9084 = !DILocation(line: 2892, column: 7, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9071, file: !3, line: 2892, column: 7)
!9086 = !DILocation(line: 2892, column: 9, scope: !9085)
!9087 = !DILocation(line: 2892, column: 7, scope: !9071)
!9088 = !DILocation(line: 2893, column: 12, scope: !9085)
!9089 = !DILocation(line: 2893, column: 5, scope: !9085)
!9090 = !DILocation(line: 2895, column: 10, scope: !9071)
!9091 = !DILocation(line: 2895, column: 8, scope: !9071)
!9092 = !DILocation(line: 2896, column: 11, scope: !9071)
!9093 = !DILocation(line: 2896, column: 3, scope: !9071)
!9094 = !DILocation(line: 2909, column: 14, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9071, file: !3, line: 2897, column: 5)
!9096 = !DILocation(line: 2909, column: 7, scope: !9095)
!9097 = !DILocalVariable(name: "first", scope: !9098, file: !3, line: 2913, type: !1053)
!9098 = distinct !DILexicalBlock(scope: !9095, file: !3, line: 2912, column: 7)
!9099 = !DILocation(line: 2913, column: 6, scope: !9098)
!9100 = !DILocalVariable(name: "q", scope: !9098, file: !3, line: 2914, type: !1053)
!9101 = !DILocation(line: 2914, column: 6, scope: !9098)
!9102 = !DILocalVariable(name: "ent", scope: !9098, file: !3, line: 2915, type: !2216)
!9103 = !DILocation(line: 2915, column: 25, scope: !9098)
!9104 = !DILocation(line: 2922, column: 6, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9098, file: !3, line: 2922, column: 6)
!9106 = !DILocation(line: 2922, column: 16, scope: !9105)
!9107 = !DILocation(line: 2923, column: 6, scope: !9105)
!9108 = !DILocation(line: 2923, column: 11, scope: !9105)
!9109 = !DILocation(line: 2922, column: 6, scope: !9098)
!9110 = !DILocation(line: 2924, column: 11, scope: !9105)
!9111 = !DILocation(line: 2924, column: 4, scope: !9105)
!9112 = !DILocation(line: 2926, column: 6, scope: !9098)
!9113 = !DILocation(line: 2926, column: 4, scope: !9098)
!9114 = !DILocation(line: 2927, column: 9, scope: !9098)
!9115 = !DILocation(line: 2927, column: 19, scope: !9098)
!9116 = !DILocation(line: 2927, column: 6, scope: !9098)
!9117 = !DILocation(line: 2928, column: 10, scope: !9098)
!9118 = !DILocation(line: 2928, column: 15, scope: !9098)
!9119 = !DILocation(line: 2928, column: 8, scope: !9098)
!9120 = !DILocation(line: 2929, column: 10, scope: !9098)
!9121 = !DILocation(line: 2929, column: 16, scope: !9098)
!9122 = !DILocation(line: 2929, column: 43, scope: !9098)
!9123 = !DILocation(line: 2929, column: 57, scope: !9098)
!9124 = !DILocation(line: 2930, column: 5, scope: !9098)
!9125 = !DILocation(line: 2930, column: 29, scope: !9098)
!9126 = !DILocation(line: 2930, column: 42, scope: !9098)
!9127 = !DILocation(line: 2931, column: 18, scope: !9098)
!9128 = !DILocation(line: 2931, column: 23, scope: !9098)
!9129 = !DILocation(line: 2931, column: 29, scope: !9098)
!9130 = !DILocation(line: 2931, column: 5, scope: !9098)
!9131 = !DILocation(line: 2929, column: 2, scope: !9098)
!9132 = !DILocation(line: 2935, column: 7, scope: !9095)
!9133 = !DILocation(line: 2938, column: 9, scope: !9071)
!9134 = !DILocation(line: 2938, column: 7, scope: !9071)
!9135 = !DILocation(line: 2939, column: 12, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !9071, file: !3, line: 2939, column: 3)
!9137 = !DILocation(line: 2939, column: 34, scope: !9136)
!9138 = !DILocation(line: 2939, column: 10, scope: !9136)
!9139 = !DILocation(line: 2939, column: 8, scope: !9136)
!9140 = !DILocation(line: 2939, column: 39, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9136, file: !3, line: 2939, column: 3)
!9142 = !DILocation(line: 2939, column: 41, scope: !9141)
!9143 = !DILocation(line: 2939, column: 3, scope: !9136)
!9144 = !DILocalVariable(name: "j", scope: !9145, file: !3, line: 2941, type: !1053)
!9145 = distinct !DILexicalBlock(scope: !9141, file: !3, line: 2940, column: 5)
!9146 = !DILocation(line: 2941, column: 11, scope: !9145)
!9147 = !DILocation(line: 2943, column: 11, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !9145, file: !3, line: 2943, column: 11)
!9149 = !DILocation(line: 2943, column: 15, scope: !9148)
!9150 = !DILocation(line: 2943, column: 18, scope: !9148)
!9151 = !DILocation(line: 2943, column: 11, scope: !9145)
!9152 = !DILocation(line: 2944, column: 23, scope: !9148)
!9153 = !DILocation(line: 2944, column: 36, scope: !9148)
!9154 = !DILocation(line: 2944, column: 2, scope: !9148)
!9155 = !DILocation(line: 2945, column: 16, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9148, file: !3, line: 2945, column: 16)
!9157 = !DILocation(line: 2945, column: 20, scope: !9156)
!9158 = !DILocation(line: 2945, column: 23, scope: !9156)
!9159 = !DILocation(line: 2945, column: 16, scope: !9148)
!9160 = !DILocation(line: 2946, column: 9, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9156, file: !3, line: 2946, column: 2)
!9162 = !DILocation(line: 2946, column: 7, scope: !9161)
!9163 = !DILocation(line: 2946, column: 14, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9161, file: !3, line: 2946, column: 2)
!9165 = !DILocation(line: 2946, column: 18, scope: !9164)
!9166 = !DILocation(line: 2946, column: 16, scope: !9164)
!9167 = !DILocation(line: 2946, column: 2, scope: !9161)
!9168 = !DILocation(line: 2947, column: 25, scope: !9164)
!9169 = !DILocation(line: 2947, column: 44, scope: !9164)
!9170 = !DILocation(line: 2947, column: 4, scope: !9164)
!9171 = !DILocation(line: 2946, column: 35, scope: !9164)
!9172 = !DILocation(line: 2946, column: 2, scope: !9164)
!9173 = distinct !{!9173, !9167, !9174}
!9174 = !DILocation(line: 2947, column: 48, scope: !9161)
!9175 = !DILocation(line: 2948, column: 5, scope: !9145)
!9176 = !DILocation(line: 2939, column: 48, scope: !9141)
!9177 = !DILocation(line: 2939, column: 3, scope: !9141)
!9178 = distinct !{!9178, !9143, !9179}
!9179 = !DILocation(line: 2948, column: 5, scope: !9136)
!9180 = !DILocation(line: 2950, column: 10, scope: !9071)
!9181 = !DILocation(line: 2950, column: 3, scope: !9071)
!9182 = !DILocation(line: 2951, column: 1, scope: !9071)
!9183 = distinct !DISubprogram(name: "validate_canon_reg", scope: !3, file: !3, line: 2862, type: !9184, scopeLine: 2863, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!9184 = !DISubroutineType(types: !9185)
!9185 = !{null, !2281, !1091}
!9186 = !DILocalVariable(name: "xloc", arg: 1, scope: !9183, file: !3, line: 2862, type: !2281)
!9187 = !DILocation(line: 2862, column: 26, scope: !9183)
!9188 = !DILocalVariable(name: "insn", arg: 2, scope: !9183, file: !3, line: 2862, type: !1091)
!9189 = !DILocation(line: 2862, column: 36, scope: !9183)
!9190 = !DILocation(line: 2864, column: 8, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9183, file: !3, line: 2864, column: 7)
!9192 = !DILocation(line: 2864, column: 7, scope: !9191)
!9193 = !DILocation(line: 2864, column: 7, scope: !9183)
!9194 = !DILocalVariable(name: "new_rtx", scope: !9195, file: !3, line: 2866, type: !1091)
!9195 = distinct !DILexicalBlock(scope: !9191, file: !3, line: 2865, column: 5)
!9196 = !DILocation(line: 2866, column: 11, scope: !9195)
!9197 = !DILocation(line: 2866, column: 33, scope: !9195)
!9198 = !DILocation(line: 2866, column: 32, scope: !9195)
!9199 = !DILocation(line: 2866, column: 39, scope: !9195)
!9200 = !DILocation(line: 2866, column: 21, scope: !9195)
!9201 = !DILocation(line: 2870, column: 7, scope: !9195)
!9202 = !DILocation(line: 2871, column: 24, scope: !9195)
!9203 = !DILocation(line: 2871, column: 30, scope: !9195)
!9204 = !DILocation(line: 2871, column: 36, scope: !9195)
!9205 = !DILocation(line: 2871, column: 7, scope: !9195)
!9206 = !DILocation(line: 2872, column: 5, scope: !9195)
!9207 = !DILocation(line: 2873, column: 1, scope: !9183)
!9208 = distinct !DISubprogram(name: "fold_rtx", scope: !3, file: !3, line: 3160, type: !9072, scopeLine: 3161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!9209 = !DILocalVariable(name: "x", arg: 1, scope: !9208, file: !3, line: 3160, type: !1091)
!9210 = !DILocation(line: 3160, column: 15, scope: !9208)
!9211 = !DILocalVariable(name: "insn", arg: 2, scope: !9208, file: !3, line: 3160, type: !1091)
!9212 = !DILocation(line: 3160, column: 22, scope: !9208)
!9213 = !DILocalVariable(name: "code", scope: !9208, file: !3, line: 3162, type: !384)
!9214 = !DILocation(line: 3162, column: 17, scope: !9208)
!9215 = !DILocalVariable(name: "mode", scope: !9208, file: !3, line: 3163, type: !5)
!9216 = !DILocation(line: 3163, column: 21, scope: !9208)
!9217 = !DILocalVariable(name: "fmt", scope: !9208, file: !3, line: 3164, type: !1116)
!9218 = !DILocation(line: 3164, column: 15, scope: !9208)
!9219 = !DILocalVariable(name: "i", scope: !9208, file: !3, line: 3165, type: !1053)
!9220 = !DILocation(line: 3165, column: 7, scope: !9208)
!9221 = !DILocalVariable(name: "new_rtx", scope: !9208, file: !3, line: 3166, type: !1091)
!9222 = !DILocation(line: 3166, column: 7, scope: !9208)
!9223 = !DILocalVariable(name: "changed", scope: !9208, file: !3, line: 3167, type: !1053)
!9224 = !DILocation(line: 3167, column: 7, scope: !9208)
!9225 = !DILocalVariable(name: "folded_arg0", scope: !9208, file: !3, line: 3170, type: !1091)
!9226 = !DILocation(line: 3170, column: 7, scope: !9208)
!9227 = !DILocalVariable(name: "folded_arg1", scope: !9208, file: !3, line: 3171, type: !1091)
!9228 = !DILocation(line: 3171, column: 7, scope: !9208)
!9229 = !DILocalVariable(name: "const_arg0", scope: !9208, file: !3, line: 3175, type: !1091)
!9230 = !DILocation(line: 3175, column: 7, scope: !9208)
!9231 = !DILocalVariable(name: "const_arg1", scope: !9208, file: !3, line: 3176, type: !1091)
!9232 = !DILocation(line: 3176, column: 7, scope: !9208)
!9233 = !DILocalVariable(name: "const_arg2", scope: !9208, file: !3, line: 3177, type: !1091)
!9234 = !DILocation(line: 3177, column: 7, scope: !9208)
!9235 = !DILocalVariable(name: "mode_arg0", scope: !9208, file: !3, line: 3181, type: !5)
!9236 = !DILocation(line: 3181, column: 21, scope: !9208)
!9237 = !DILocation(line: 3183, column: 7, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9208, file: !3, line: 3183, column: 7)
!9239 = !DILocation(line: 3183, column: 9, scope: !9238)
!9240 = !DILocation(line: 3183, column: 7, scope: !9208)
!9241 = !DILocation(line: 3184, column: 12, scope: !9238)
!9242 = !DILocation(line: 3184, column: 5, scope: !9238)
!9243 = !DILocation(line: 3187, column: 10, scope: !9208)
!9244 = !DILocation(line: 3187, column: 8, scope: !9208)
!9245 = !DILocation(line: 3188, column: 11, scope: !9208)
!9246 = !DILocation(line: 3188, column: 3, scope: !9208)
!9247 = !DILocation(line: 3192, column: 38, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9249, file: !3, line: 3192, column: 11)
!9249 = distinct !DILexicalBlock(scope: !9208, file: !3, line: 3189, column: 5)
!9250 = !DILocation(line: 3192, column: 22, scope: !9248)
!9251 = !DILocation(line: 3192, column: 20, scope: !9248)
!9252 = !DILocation(line: 3192, column: 42, scope: !9248)
!9253 = !DILocation(line: 3192, column: 11, scope: !9249)
!9254 = !DILocation(line: 3193, column: 16, scope: !9248)
!9255 = !DILocation(line: 3193, column: 9, scope: !9248)
!9256 = !DILocation(line: 3194, column: 14, scope: !9249)
!9257 = !DILocation(line: 3194, column: 7, scope: !9249)
!9258 = !DILocation(line: 3209, column: 14, scope: !9249)
!9259 = !DILocation(line: 3209, column: 7, scope: !9249)
!9260 = !DILocation(line: 3217, column: 11, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9249, file: !3, line: 3217, column: 11)
!9262 = !DILocation(line: 3217, column: 11, scope: !9249)
!9263 = !DILocation(line: 3219, column: 13, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !9265, file: !3, line: 3219, column: 4)
!9265 = distinct !DILexicalBlock(scope: !9261, file: !3, line: 3218, column: 2)
!9266 = !DILocation(line: 3219, column: 43, scope: !9264)
!9267 = !DILocation(line: 3219, column: 11, scope: !9264)
!9268 = !DILocation(line: 3219, column: 9, scope: !9264)
!9269 = !DILocation(line: 3219, column: 48, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9264, file: !3, line: 3219, column: 4)
!9271 = !DILocation(line: 3219, column: 50, scope: !9270)
!9272 = !DILocation(line: 3219, column: 4, scope: !9264)
!9273 = !DILocation(line: 3220, column: 23, scope: !9270)
!9274 = !DILocation(line: 3220, column: 30, scope: !9270)
!9275 = !DILocation(line: 3221, column: 19, scope: !9270)
!9276 = !DILocation(line: 3221, column: 46, scope: !9270)
!9277 = !DILocation(line: 3221, column: 9, scope: !9270)
!9278 = !DILocation(line: 3220, column: 6, scope: !9270)
!9279 = !DILocation(line: 3219, column: 57, scope: !9270)
!9280 = !DILocation(line: 3219, column: 4, scope: !9270)
!9281 = distinct !{!9281, !9272, !9282}
!9282 = !DILocation(line: 3221, column: 54, scope: !9264)
!9283 = !DILocation(line: 3222, column: 2, scope: !9265)
!9284 = !DILocation(line: 3223, column: 14, scope: !9249)
!9285 = !DILocation(line: 3223, column: 7, scope: !9249)
!9286 = !DILocation(line: 3227, column: 11, scope: !9287)
!9287 = distinct !DILexicalBlock(scope: !9249, file: !3, line: 3227, column: 11)
!9288 = !DILocation(line: 3227, column: 11, scope: !9249)
!9289 = !DILocation(line: 3228, column: 9, scope: !9287)
!9290 = !DILocation(line: 3228, column: 2, scope: !9287)
!9291 = !DILocation(line: 3229, column: 7, scope: !9249)
!9292 = !DILocation(line: 3234, column: 7, scope: !9249)
!9293 = !DILocation(line: 3237, column: 10, scope: !9208)
!9294 = !DILocation(line: 3237, column: 8, scope: !9208)
!9295 = !DILocation(line: 3238, column: 14, scope: !9208)
!9296 = !DILocation(line: 3239, column: 14, scope: !9208)
!9297 = !DILocation(line: 3240, column: 14, scope: !9208)
!9298 = !DILocation(line: 3241, column: 13, scope: !9208)
!9299 = !DILocation(line: 3246, column: 9, scope: !9208)
!9300 = !DILocation(line: 3246, column: 7, scope: !9208)
!9301 = !DILocation(line: 3247, column: 12, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9208, file: !3, line: 3247, column: 3)
!9303 = !DILocation(line: 3247, column: 34, scope: !9302)
!9304 = !DILocation(line: 3247, column: 10, scope: !9302)
!9305 = !DILocation(line: 3247, column: 8, scope: !9302)
!9306 = !DILocation(line: 3247, column: 39, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9302, file: !3, line: 3247, column: 3)
!9308 = !DILocation(line: 3247, column: 41, scope: !9307)
!9309 = !DILocation(line: 3247, column: 3, scope: !9302)
!9310 = !DILocation(line: 3248, column: 9, scope: !9311)
!9311 = distinct !DILexicalBlock(scope: !9307, file: !3, line: 3248, column: 9)
!9312 = !DILocation(line: 3248, column: 13, scope: !9311)
!9313 = !DILocation(line: 3248, column: 16, scope: !9311)
!9314 = !DILocation(line: 3248, column: 9, scope: !9307)
!9315 = !DILocalVariable(name: "folded_arg", scope: !9316, file: !3, line: 3250, type: !1091)
!9316 = distinct !DILexicalBlock(scope: !9311, file: !3, line: 3249, column: 7)
!9317 = !DILocation(line: 3250, column: 6, scope: !9316)
!9318 = !DILocation(line: 3250, column: 19, scope: !9316)
!9319 = !DILocalVariable(name: "const_arg", scope: !9316, file: !3, line: 3250, type: !1091)
!9320 = !DILocation(line: 3250, column: 32, scope: !9316)
!9321 = !DILocalVariable(name: "mode_arg", scope: !9316, file: !3, line: 3251, type: !5)
!9322 = !DILocation(line: 3251, column: 20, scope: !9316)
!9323 = !DILocation(line: 3251, column: 31, scope: !9316)
!9324 = !DILocation(line: 3253, column: 10, scope: !9316)
!9325 = !DILocation(line: 3253, column: 2, scope: !9316)
!9326 = !DILocation(line: 3258, column: 34, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9316, file: !3, line: 3254, column: 4)
!9328 = !DILocation(line: 3258, column: 18, scope: !9327)
!9329 = !DILocation(line: 3258, column: 16, scope: !9327)
!9330 = !DILocation(line: 3259, column: 6, scope: !9327)
!9331 = !DILocation(line: 3268, column: 18, scope: !9327)
!9332 = !DILocation(line: 3268, column: 16, scope: !9327)
!9333 = !DILocation(line: 3269, column: 6, scope: !9327)
!9334 = !DILocation(line: 3280, column: 29, scope: !9327)
!9335 = !DILocation(line: 3280, column: 41, scope: !9327)
!9336 = !DILocation(line: 3280, column: 19, scope: !9327)
!9337 = !DILocation(line: 3280, column: 17, scope: !9327)
!9338 = !DILocation(line: 3281, column: 34, scope: !9327)
!9339 = !DILocation(line: 3281, column: 18, scope: !9327)
!9340 = !DILocation(line: 3281, column: 16, scope: !9327)
!9341 = !DILocation(line: 3282, column: 6, scope: !9327)
!9342 = !DILocation(line: 3287, column: 10, scope: !9316)
!9343 = !DILocation(line: 3287, column: 2, scope: !9316)
!9344 = !DILocation(line: 3290, column: 20, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9316, file: !3, line: 3288, column: 4)
!9346 = !DILocation(line: 3290, column: 18, scope: !9345)
!9347 = !DILocation(line: 3291, column: 19, scope: !9345)
!9348 = !DILocation(line: 3291, column: 17, scope: !9345)
!9349 = !DILocation(line: 3292, column: 18, scope: !9345)
!9350 = !DILocation(line: 3292, column: 16, scope: !9345)
!9351 = !DILocation(line: 3293, column: 6, scope: !9345)
!9352 = !DILocation(line: 3295, column: 20, scope: !9345)
!9353 = !DILocation(line: 3295, column: 18, scope: !9345)
!9354 = !DILocation(line: 3296, column: 19, scope: !9345)
!9355 = !DILocation(line: 3296, column: 17, scope: !9345)
!9356 = !DILocation(line: 3297, column: 6, scope: !9345)
!9357 = !DILocation(line: 3299, column: 19, scope: !9345)
!9358 = !DILocation(line: 3299, column: 17, scope: !9345)
!9359 = !DILocation(line: 3300, column: 6, scope: !9345)
!9360 = !DILocation(line: 3305, column: 6, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9316, file: !3, line: 3305, column: 6)
!9362 = !DILocation(line: 3305, column: 16, scope: !9361)
!9363 = !DILocation(line: 3306, column: 6, scope: !9361)
!9364 = !DILocation(line: 3306, column: 9, scope: !9361)
!9365 = !DILocation(line: 3306, column: 22, scope: !9361)
!9366 = !DILocation(line: 3306, column: 19, scope: !9361)
!9367 = !DILocation(line: 3307, column: 6, scope: !9361)
!9368 = !DILocation(line: 3307, column: 9, scope: !9361)
!9369 = !DILocation(line: 3307, column: 38, scope: !9361)
!9370 = !DILocation(line: 3307, column: 35, scope: !9361)
!9371 = !DILocation(line: 3313, column: 6, scope: !9361)
!9372 = !DILocation(line: 3313, column: 10, scope: !9361)
!9373 = !DILocation(line: 3313, column: 31, scope: !9361)
!9374 = !DILocation(line: 3314, column: 3, scope: !9361)
!9375 = !DILocation(line: 3314, column: 6, scope: !9361)
!9376 = !DILocation(line: 3314, column: 30, scope: !9361)
!9377 = !DILocation(line: 3314, column: 27, scope: !9361)
!9378 = !DILocation(line: 3315, column: 3, scope: !9361)
!9379 = !DILocation(line: 3315, column: 7, scope: !9361)
!9380 = !DILocation(line: 3315, column: 12, scope: !9361)
!9381 = !DILocation(line: 3316, column: 7, scope: !9361)
!9382 = !DILocation(line: 3316, column: 10, scope: !9361)
!9383 = !DILocation(line: 3316, column: 15, scope: !9361)
!9384 = !DILocation(line: 3317, column: 7, scope: !9361)
!9385 = !DILocation(line: 3317, column: 10, scope: !9361)
!9386 = !DILocation(line: 3317, column: 15, scope: !9361)
!9387 = !DILocation(line: 3318, column: 7, scope: !9361)
!9388 = !DILocation(line: 3318, column: 10, scope: !9361)
!9389 = !DILocation(line: 3318, column: 15, scope: !9361)
!9390 = !DILocation(line: 3319, column: 7, scope: !9361)
!9391 = !DILocation(line: 3319, column: 10, scope: !9361)
!9392 = !DILocation(line: 3319, column: 15, scope: !9361)
!9393 = !DILocation(line: 3320, column: 7, scope: !9361)
!9394 = !DILocation(line: 3320, column: 10, scope: !9361)
!9395 = !DILocation(line: 3320, column: 15, scope: !9361)
!9396 = !DILocation(line: 3321, column: 7, scope: !9361)
!9397 = !DILocation(line: 3321, column: 10, scope: !9361)
!9398 = !DILocation(line: 3321, column: 15, scope: !9361)
!9399 = !DILocation(line: 3322, column: 7, scope: !9361)
!9400 = !DILocation(line: 3322, column: 10, scope: !9361)
!9401 = !DILocation(line: 3322, column: 15, scope: !9361)
!9402 = !DILocation(line: 3323, column: 7, scope: !9361)
!9403 = !DILocation(line: 3323, column: 10, scope: !9361)
!9404 = !DILocation(line: 3323, column: 15, scope: !9361)
!9405 = !DILocation(line: 3305, column: 6, scope: !9316)
!9406 = !DILocation(line: 3324, column: 17, scope: !9361)
!9407 = !DILocation(line: 3324, column: 15, scope: !9361)
!9408 = !DILocation(line: 3324, column: 4, scope: !9361)
!9409 = !DILocation(line: 3326, column: 6, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9316, file: !3, line: 3326, column: 6)
!9411 = !DILocation(line: 3326, column: 20, scope: !9410)
!9412 = !DILocation(line: 3326, column: 17, scope: !9410)
!9413 = !DILocation(line: 3326, column: 6, scope: !9316)
!9414 = !DILocation(line: 3327, column: 4, scope: !9410)
!9415 = !DILocation(line: 3329, column: 6, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9316, file: !3, line: 3329, column: 6)
!9417 = !DILocation(line: 3329, column: 11, scope: !9416)
!9418 = !DILocation(line: 3329, column: 23, scope: !9416)
!9419 = !DILocation(line: 3329, column: 27, scope: !9416)
!9420 = !DILocation(line: 3329, column: 6, scope: !9316)
!9421 = !DILocation(line: 3330, column: 18, scope: !9416)
!9422 = !DILocation(line: 3330, column: 8, scope: !9416)
!9423 = !DILocation(line: 3330, column: 6, scope: !9416)
!9424 = !DILocation(line: 3330, column: 4, scope: !9416)
!9425 = !DILocation(line: 3331, column: 10, scope: !9316)
!9426 = !DILocation(line: 3332, column: 27, scope: !9316)
!9427 = !DILocation(line: 3332, column: 34, scope: !9316)
!9428 = !DILocation(line: 3332, column: 47, scope: !9316)
!9429 = !DILocation(line: 3332, column: 2, scope: !9316)
!9430 = !DILocation(line: 3333, column: 7, scope: !9316)
!9431 = !DILocation(line: 3248, column: 19, scope: !9311)
!9432 = !DILocation(line: 3247, column: 48, scope: !9307)
!9433 = !DILocation(line: 3247, column: 3, scope: !9307)
!9434 = distinct !{!9434, !9309, !9435}
!9435 = !DILocation(line: 3333, column: 7, scope: !9302)
!9436 = !DILocation(line: 3335, column: 7, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9208, file: !3, line: 3335, column: 7)
!9438 = !DILocation(line: 3335, column: 7, scope: !9208)
!9439 = !DILocation(line: 3339, column: 38, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9441, file: !3, line: 3339, column: 11)
!9441 = distinct !DILexicalBlock(scope: !9437, file: !3, line: 3336, column: 5)
!9442 = !DILocation(line: 3339, column: 44, scope: !9440)
!9443 = !DILocation(line: 3339, column: 11, scope: !9440)
!9444 = !DILocation(line: 3339, column: 11, scope: !9441)
!9445 = !DILocalVariable(name: "tem", scope: !9446, file: !3, line: 3341, type: !1091)
!9446 = distinct !DILexicalBlock(scope: !9440, file: !3, line: 3340, column: 2)
!9447 = !DILocation(line: 3341, column: 8, scope: !9446)
!9448 = !DILocation(line: 3342, column: 10, scope: !9446)
!9449 = !DILocation(line: 3342, column: 8, scope: !9446)
!9450 = !DILocation(line: 3342, column: 35, scope: !9446)
!9451 = !DILocation(line: 3342, column: 33, scope: !9446)
!9452 = !DILocation(line: 3342, column: 60, scope: !9446)
!9453 = !DILocation(line: 3342, column: 58, scope: !9446)
!9454 = !DILocation(line: 3343, column: 10, scope: !9446)
!9455 = !DILocation(line: 3343, column: 8, scope: !9446)
!9456 = !DILocation(line: 3343, column: 37, scope: !9446)
!9457 = !DILocation(line: 3343, column: 35, scope: !9446)
!9458 = !DILocation(line: 3343, column: 64, scope: !9446)
!9459 = !DILocation(line: 3343, column: 62, scope: !9446)
!9460 = !DILocation(line: 3344, column: 2, scope: !9446)
!9461 = !DILocation(line: 3346, column: 7, scope: !9441)
!9462 = !DILocation(line: 3347, column: 5, scope: !9441)
!9463 = !DILocation(line: 3351, column: 11, scope: !9208)
!9464 = !DILocation(line: 3351, column: 3, scope: !9208)
!9465 = !DILocation(line: 3357, column: 7, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9467, file: !3, line: 3357, column: 6)
!9467 = distinct !DILexicalBlock(scope: !9468, file: !3, line: 3354, column: 7)
!9468 = distinct !DILexicalBlock(scope: !9208, file: !3, line: 3352, column: 5)
!9469 = !DILocation(line: 3357, column: 12, scope: !9466)
!9470 = !DILocation(line: 3357, column: 27, scope: !9466)
!9471 = !DILocation(line: 3357, column: 30, scope: !9466)
!9472 = !DILocation(line: 3357, column: 35, scope: !9466)
!9473 = !DILocation(line: 3358, column: 6, scope: !9466)
!9474 = !DILocation(line: 3358, column: 9, scope: !9466)
!9475 = !DILocation(line: 3358, column: 19, scope: !9466)
!9476 = !DILocation(line: 3357, column: 6, scope: !9467)
!9477 = !DILocation(line: 3359, column: 4, scope: !9466)
!9478 = !DILocation(line: 3361, column: 38, scope: !9467)
!9479 = !DILocation(line: 3361, column: 44, scope: !9467)
!9480 = !DILocation(line: 3362, column: 6, scope: !9467)
!9481 = !DILocation(line: 3362, column: 19, scope: !9467)
!9482 = !DILocation(line: 3362, column: 32, scope: !9467)
!9483 = !DILocation(line: 3363, column: 6, scope: !9467)
!9484 = !DILocation(line: 3361, column: 12, scope: !9467)
!9485 = !DILocation(line: 3361, column: 10, scope: !9467)
!9486 = !DILocation(line: 3365, column: 7, scope: !9468)
!9487 = !DILocation(line: 3375, column: 11, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9468, file: !3, line: 3375, column: 11)
!9489 = !DILocation(line: 3375, column: 11, scope: !9468)
!9490 = !DILocation(line: 3376, column: 2, scope: !9488)
!9491 = !DILocation(line: 3378, column: 11, scope: !9492)
!9492 = distinct !DILexicalBlock(scope: !9468, file: !3, line: 3378, column: 11)
!9493 = !DILocation(line: 3378, column: 22, scope: !9492)
!9494 = !DILocation(line: 3378, column: 27, scope: !9492)
!9495 = !DILocation(line: 3378, column: 30, scope: !9492)
!9496 = !DILocation(line: 3378, column: 41, scope: !9492)
!9497 = !DILocation(line: 3378, column: 11, scope: !9468)
!9498 = !DILocalVariable(name: "p0", scope: !9499, file: !3, line: 3380, type: !2307)
!9499 = distinct !DILexicalBlock(scope: !9492, file: !3, line: 3379, column: 2)
!9500 = !DILocation(line: 3380, column: 22, scope: !9499)
!9501 = !DILocalVariable(name: "p1", scope: !9499, file: !3, line: 3380, type: !2307)
!9502 = !DILocation(line: 3380, column: 27, scope: !9499)
!9503 = !DILocalVariable(name: "true_rtx", scope: !9499, file: !3, line: 3381, type: !1091)
!9504 = !DILocation(line: 3381, column: 8, scope: !9499)
!9505 = !DILocalVariable(name: "false_rtx", scope: !9499, file: !3, line: 3381, type: !1091)
!9506 = !DILocation(line: 3381, column: 18, scope: !9499)
!9507 = !DILocalVariable(name: "mode_arg1", scope: !9499, file: !3, line: 3382, type: !5)
!9508 = !DILocation(line: 3382, column: 22, scope: !9499)
!9509 = !DILocation(line: 3384, column: 8, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9499, file: !3, line: 3384, column: 8)
!9511 = !DILocation(line: 3384, column: 8, scope: !9499)
!9512 = !DILocation(line: 3390, column: 17, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9510, file: !3, line: 3385, column: 6)
!9514 = !DILocation(line: 3392, column: 20, scope: !9513)
!9515 = !DILocation(line: 3392, column: 18, scope: !9513)
!9516 = !DILocation(line: 3393, column: 6, scope: !9513)
!9517 = !DILocation(line: 3396, column: 19, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9510, file: !3, line: 3395, column: 6)
!9519 = !DILocation(line: 3396, column: 17, scope: !9518)
!9520 = !DILocation(line: 3397, column: 20, scope: !9518)
!9521 = !DILocation(line: 3397, column: 18, scope: !9518)
!9522 = !DILocation(line: 3400, column: 33, scope: !9499)
!9523 = !DILocation(line: 3400, column: 11, scope: !9499)
!9524 = !DILocation(line: 3400, column: 9, scope: !9499)
!9525 = !DILocation(line: 3407, column: 8, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9499, file: !3, line: 3407, column: 8)
!9527 = !DILocation(line: 3407, column: 18, scope: !9526)
!9528 = !DILocation(line: 3407, column: 30, scope: !9526)
!9529 = !DILocation(line: 3407, column: 33, scope: !9526)
!9530 = !DILocation(line: 3407, column: 60, scope: !9526)
!9531 = !DILocation(line: 3407, column: 8, scope: !9499)
!9532 = !DILocation(line: 3408, column: 6, scope: !9526)
!9533 = !DILocation(line: 3410, column: 33, scope: !9499)
!9534 = !DILocation(line: 3410, column: 17, scope: !9499)
!9535 = !DILocation(line: 3410, column: 15, scope: !9499)
!9536 = !DILocation(line: 3411, column: 33, scope: !9499)
!9537 = !DILocation(line: 3411, column: 17, scope: !9499)
!9538 = !DILocation(line: 3411, column: 15, scope: !9499)
!9539 = !DILocation(line: 3416, column: 8, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9499, file: !3, line: 3416, column: 8)
!9541 = !DILocation(line: 3416, column: 19, scope: !9540)
!9542 = !DILocation(line: 3416, column: 24, scope: !9540)
!9543 = !DILocation(line: 3416, column: 27, scope: !9540)
!9544 = !DILocation(line: 3416, column: 38, scope: !9540)
!9545 = !DILocation(line: 3416, column: 8, scope: !9499)
!9546 = !DILocation(line: 3418, column: 12, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9548, file: !3, line: 3418, column: 12)
!9548 = distinct !DILexicalBlock(scope: !9540, file: !3, line: 3417, column: 6)
!9549 = !DILocation(line: 3418, column: 23, scope: !9547)
!9550 = !DILocation(line: 3418, column: 12, scope: !9548)
!9551 = !DILocalVariable(name: "cheapest_simplification", scope: !9552, file: !3, line: 3420, type: !1091)
!9552 = distinct !DILexicalBlock(scope: !9547, file: !3, line: 3419, column: 3)
!9553 = !DILocation(line: 3420, column: 9, scope: !9552)
!9554 = !DILocalVariable(name: "cheapest_cost", scope: !9552, file: !3, line: 3421, type: !1053)
!9555 = !DILocation(line: 3421, column: 9, scope: !9552)
!9556 = !DILocalVariable(name: "simp_result", scope: !9552, file: !3, line: 3422, type: !1091)
!9557 = !DILocation(line: 3422, column: 9, scope: !9552)
!9558 = !DILocalVariable(name: "p", scope: !9552, file: !3, line: 3423, type: !2307)
!9559 = !DILocation(line: 3423, column: 23, scope: !9552)
!9560 = !DILocation(line: 3428, column: 17, scope: !9552)
!9561 = !DILocation(line: 3428, column: 30, scope: !9552)
!9562 = !DILocation(line: 3429, column: 10, scope: !9552)
!9563 = !DILocation(line: 3428, column: 9, scope: !9552)
!9564 = !DILocation(line: 3428, column: 7, scope: !9552)
!9565 = !DILocation(line: 3431, column: 9, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9552, file: !3, line: 3431, column: 9)
!9567 = !DILocation(line: 3431, column: 11, scope: !9566)
!9568 = !DILocation(line: 3431, column: 9, scope: !9552)
!9569 = !DILocation(line: 3433, column: 35, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9566, file: !3, line: 3432, column: 7)
!9571 = !DILocation(line: 3433, column: 33, scope: !9570)
!9572 = !DILocation(line: 3434, column: 25, scope: !9570)
!9573 = !DILocation(line: 3434, column: 23, scope: !9570)
!9574 = !DILocation(line: 3436, column: 18, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9570, file: !3, line: 3436, column: 9)
!9576 = !DILocation(line: 3436, column: 21, scope: !9575)
!9577 = !DILocation(line: 3436, column: 16, scope: !9575)
!9578 = !DILocation(line: 3436, column: 14, scope: !9575)
!9579 = !DILocation(line: 3436, column: 39, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9575, file: !3, line: 3436, column: 9)
!9581 = !DILocation(line: 3436, column: 41, scope: !9580)
!9582 = !DILocation(line: 3436, column: 9, scope: !9575)
!9583 = !DILocalVariable(name: "cost", scope: !9584, file: !3, line: 3438, type: !1053)
!9584 = distinct !DILexicalBlock(scope: !9580, file: !3, line: 3437, column: 4)
!9585 = !DILocation(line: 3438, column: 10, scope: !9584)
!9586 = !DILocation(line: 3441, column: 25, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !9584, file: !3, line: 3441, column: 10)
!9588 = !DILocation(line: 3441, column: 28, scope: !9587)
!9589 = !DILocation(line: 3441, column: 33, scope: !9587)
!9590 = !DILocation(line: 3441, column: 36, scope: !9587)
!9591 = !DILocation(line: 3441, column: 12, scope: !9587)
!9592 = !DILocation(line: 3441, column: 10, scope: !9584)
!9593 = !DILocation(line: 3442, column: 8, scope: !9587)
!9594 = !DILocation(line: 3446, column: 41, scope: !9584)
!9595 = !DILocation(line: 3446, column: 47, scope: !9584)
!9596 = !DILocation(line: 3447, column: 13, scope: !9584)
!9597 = !DILocation(line: 3448, column: 13, scope: !9584)
!9598 = !DILocation(line: 3448, column: 16, scope: !9584)
!9599 = !DILocation(line: 3449, column: 13, scope: !9584)
!9600 = !DILocation(line: 3446, column: 10, scope: !9584)
!9601 = !DILocation(line: 3446, column: 8, scope: !9584)
!9602 = !DILocation(line: 3451, column: 10, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9584, file: !3, line: 3451, column: 10)
!9604 = !DILocation(line: 3451, column: 22, scope: !9603)
!9605 = !DILocation(line: 3451, column: 10, scope: !9584)
!9606 = !DILocation(line: 3452, column: 8, scope: !9603)
!9607 = !DILocation(line: 3454, column: 13, scope: !9584)
!9608 = !DILocation(line: 3454, column: 11, scope: !9584)
!9609 = !DILocation(line: 3455, column: 10, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9584, file: !3, line: 3455, column: 10)
!9611 = !DILocation(line: 3455, column: 17, scope: !9610)
!9612 = !DILocation(line: 3455, column: 15, scope: !9610)
!9613 = !DILocation(line: 3455, column: 10, scope: !9584)
!9614 = !DILocation(line: 3457, column: 26, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !9610, file: !3, line: 3456, column: 8)
!9616 = !DILocation(line: 3457, column: 24, scope: !9615)
!9617 = !DILocation(line: 3458, column: 36, scope: !9615)
!9618 = !DILocation(line: 3458, column: 34, scope: !9615)
!9619 = !DILocation(line: 3459, column: 8, scope: !9615)
!9620 = !DILocation(line: 3460, column: 4, scope: !9584)
!9621 = !DILocation(line: 3436, column: 54, scope: !9580)
!9622 = !DILocation(line: 3436, column: 57, scope: !9580)
!9623 = !DILocation(line: 3436, column: 52, scope: !9580)
!9624 = !DILocation(line: 3436, column: 9, scope: !9580)
!9625 = distinct !{!9625, !9582, !9626}
!9626 = !DILocation(line: 3460, column: 4, scope: !9575)
!9627 = !DILocation(line: 3464, column: 13, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9570, file: !3, line: 3464, column: 13)
!9629 = !DILocation(line: 3464, column: 40, scope: !9628)
!9630 = !DILocation(line: 3464, column: 37, scope: !9628)
!9631 = !DILocation(line: 3464, column: 13, scope: !9570)
!9632 = !DILocation(line: 3465, column: 31, scope: !9628)
!9633 = !DILocation(line: 3465, column: 21, scope: !9628)
!9634 = !DILocation(line: 3466, column: 7, scope: !9628)
!9635 = !DILocation(line: 3465, column: 11, scope: !9628)
!9636 = !DILocation(line: 3465, column: 4, scope: !9628)
!9637 = !DILocation(line: 3467, column: 7, scope: !9570)
!9638 = !DILocation(line: 3468, column: 3, scope: !9552)
!9639 = !DILocation(line: 3472, column: 13, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9548, file: !3, line: 3472, column: 12)
!9641 = !DILocation(line: 3473, column: 6, scope: !9640)
!9642 = !DILocation(line: 3473, column: 9, scope: !9640)
!9643 = !DILocation(line: 3474, column: 6, scope: !9640)
!9644 = !DILocation(line: 3474, column: 10, scope: !9640)
!9645 = !DILocation(line: 3475, column: 13, scope: !9640)
!9646 = !DILocation(line: 3475, column: 10, scope: !9640)
!9647 = !DILocation(line: 3476, column: 5, scope: !9640)
!9648 = !DILocation(line: 3476, column: 23, scope: !9640)
!9649 = !DILocation(line: 3477, column: 9, scope: !9640)
!9650 = !DILocation(line: 3478, column: 9, scope: !9640)
!9651 = !DILocation(line: 3476, column: 15, scope: !9640)
!9652 = !DILocation(line: 3476, column: 13, scope: !9640)
!9653 = !DILocation(line: 3479, column: 9, scope: !9640)
!9654 = !DILocation(line: 3479, column: 26, scope: !9640)
!9655 = !DILocation(line: 3480, column: 12, scope: !9640)
!9656 = !DILocation(line: 3481, column: 12, scope: !9640)
!9657 = !DILocation(line: 3479, column: 18, scope: !9640)
!9658 = !DILocation(line: 3479, column: 16, scope: !9640)
!9659 = !DILocation(line: 3482, column: 9, scope: !9640)
!9660 = !DILocation(line: 3482, column: 12, scope: !9640)
!9661 = !DILocation(line: 3482, column: 16, scope: !9640)
!9662 = !DILocation(line: 3482, column: 36, scope: !9640)
!9663 = !DILocation(line: 3482, column: 40, scope: !9640)
!9664 = !DILocation(line: 3482, column: 33, scope: !9640)
!9665 = !DILocation(line: 3472, column: 12, scope: !9548)
!9666 = !DILocation(line: 3483, column: 17, scope: !9640)
!9667 = !DILocation(line: 3483, column: 15, scope: !9640)
!9668 = !DILocation(line: 3483, column: 3, scope: !9640)
!9669 = !DILocation(line: 3488, column: 17, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !9640, file: !3, line: 3488, column: 17)
!9671 = !DILocation(line: 3488, column: 17, scope: !9640)
!9672 = !DILocalVariable(name: "qty", scope: !9673, file: !3, line: 3490, type: !1053)
!9673 = distinct !DILexicalBlock(scope: !9670, file: !3, line: 3489, column: 3)
!9674 = !DILocation(line: 3490, column: 9, scope: !9673)
!9675 = !DILocation(line: 3490, column: 15, scope: !9673)
!9676 = !DILocation(line: 3492, column: 9, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !9673, file: !3, line: 3492, column: 9)
!9678 = !DILocation(line: 3492, column: 9, scope: !9673)
!9679 = !DILocalVariable(name: "ent", scope: !9680, file: !3, line: 3494, type: !2216)
!9680 = distinct !DILexicalBlock(scope: !9677, file: !3, line: 3493, column: 7)
!9681 = !DILocation(line: 3494, column: 32, scope: !9680)
!9682 = !DILocation(line: 3494, column: 39, scope: !9680)
!9683 = !DILocation(line: 3494, column: 49, scope: !9680)
!9684 = !DILocation(line: 3496, column: 38, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !9680, file: !3, line: 3496, column: 13)
!9686 = !DILocation(line: 3496, column: 43, scope: !9685)
!9687 = !DILocation(line: 3496, column: 60, scope: !9685)
!9688 = !DILocation(line: 3496, column: 14, scope: !9685)
!9689 = !DILocation(line: 3497, column: 7, scope: !9685)
!9690 = !DILocation(line: 3497, column: 13, scope: !9685)
!9691 = !DILocation(line: 3498, column: 11, scope: !9685)
!9692 = !DILocation(line: 3498, column: 38, scope: !9685)
!9693 = !DILocation(line: 3498, column: 43, scope: !9685)
!9694 = !DILocation(line: 3499, column: 36, scope: !9685)
!9695 = !DILocation(line: 3499, column: 17, scope: !9685)
!9696 = !DILocation(line: 3498, column: 14, scope: !9685)
!9697 = !DILocation(line: 3500, column: 6, scope: !9685)
!9698 = !DILocation(line: 3500, column: 23, scope: !9685)
!9699 = !DILocation(line: 3500, column: 28, scope: !9685)
!9700 = !DILocation(line: 3500, column: 46, scope: !9685)
!9701 = !DILocation(line: 3500, column: 10, scope: !9685)
!9702 = !DILocation(line: 3501, column: 10, scope: !9685)
!9703 = !DILocation(line: 3501, column: 14, scope: !9685)
!9704 = !DILocation(line: 3502, column: 7, scope: !9685)
!9705 = !DILocation(line: 3502, column: 23, scope: !9685)
!9706 = !DILocation(line: 3502, column: 28, scope: !9685)
!9707 = !DILocation(line: 3503, column: 9, scope: !9685)
!9708 = !DILocation(line: 3502, column: 10, scope: !9685)
!9709 = !DILocation(line: 3504, column: 10, scope: !9685)
!9710 = !DILocation(line: 3504, column: 14, scope: !9685)
!9711 = !DILocation(line: 3505, column: 7, scope: !9685)
!9712 = !DILocation(line: 3505, column: 11, scope: !9685)
!9713 = !DILocation(line: 3505, column: 44, scope: !9685)
!9714 = !DILocation(line: 3505, column: 49, scope: !9685)
!9715 = !DILocation(line: 3505, column: 41, scope: !9685)
!9716 = !DILocation(line: 3496, column: 13, scope: !9680)
!9717 = !DILocation(line: 3507, column: 34, scope: !9718)
!9718 = distinct !DILexicalBlock(scope: !9719, file: !3, line: 3507, column: 10)
!9719 = distinct !DILexicalBlock(scope: !9685, file: !3, line: 3506, column: 4)
!9720 = !DILocation(line: 3507, column: 39, scope: !9718)
!9721 = !DILocation(line: 3507, column: 56, scope: !9718)
!9722 = !DILocation(line: 3507, column: 10, scope: !9718)
!9723 = !DILocation(line: 3507, column: 10, scope: !9719)
!9724 = !DILocation(line: 3509, column: 14, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9726, file: !3, line: 3509, column: 14)
!9726 = distinct !DILexicalBlock(scope: !9718, file: !3, line: 3508, column: 8)
!9727 = !DILocation(line: 3509, column: 14, scope: !9726)
!9728 = !DILocation(line: 3510, column: 12, scope: !9725)
!9729 = !DILocation(line: 3510, column: 5, scope: !9725)
!9730 = !DILocation(line: 3512, column: 5, scope: !9725)
!9731 = !DILocation(line: 3515, column: 15, scope: !9718)
!9732 = !DILocation(line: 3515, column: 8, scope: !9718)
!9733 = !DILocation(line: 3517, column: 7, scope: !9680)
!9734 = !DILocation(line: 3518, column: 3, scope: !9673)
!9735 = !DILocation(line: 3519, column: 6, scope: !9548)
!9736 = !DILocation(line: 3520, column: 2, scope: !9499)
!9737 = !DILocation(line: 3525, column: 11, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9468, file: !3, line: 3525, column: 11)
!9739 = !DILocation(line: 3525, column: 25, scope: !9738)
!9740 = !DILocation(line: 3525, column: 22, scope: !9738)
!9741 = !DILocation(line: 3525, column: 36, scope: !9738)
!9742 = !DILocation(line: 3525, column: 40, scope: !9738)
!9743 = !DILocation(line: 3525, column: 11, scope: !9468)
!9744 = !DILocalVariable(name: "y", scope: !9745, file: !3, line: 3527, type: !1091)
!9745 = distinct !DILexicalBlock(scope: !9738, file: !3, line: 3526, column: 2)
!9746 = !DILocation(line: 3527, column: 8, scope: !9745)
!9747 = !DILocation(line: 3527, column: 32, scope: !9745)
!9748 = !DILocation(line: 3527, column: 12, scope: !9745)
!9749 = !DILocalVariable(name: "inner_const", scope: !9745, file: !3, line: 3528, type: !1091)
!9750 = !DILocation(line: 3528, column: 8, scope: !9745)
!9751 = !DILocation(line: 3530, column: 8, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9745, file: !3, line: 3530, column: 8)
!9753 = !DILocation(line: 3530, column: 10, scope: !9752)
!9754 = !DILocation(line: 3531, column: 8, scope: !9752)
!9755 = !DILocation(line: 3531, column: 42, scope: !9752)
!9756 = !DILocation(line: 3531, column: 26, scope: !9752)
!9757 = !DILocation(line: 3531, column: 24, scope: !9752)
!9758 = !DILocation(line: 3531, column: 56, scope: !9752)
!9759 = !DILocation(line: 3532, column: 8, scope: !9752)
!9760 = !DILocation(line: 3532, column: 11, scope: !9752)
!9761 = !DILocation(line: 3533, column: 8, scope: !9752)
!9762 = !DILocation(line: 3533, column: 11, scope: !9752)
!9763 = !DILocation(line: 3533, column: 32, scope: !9752)
!9764 = !DILocation(line: 3530, column: 8, scope: !9745)
!9765 = !DILocation(line: 3534, column: 20, scope: !9752)
!9766 = !DILocation(line: 3534, column: 18, scope: !9752)
!9767 = !DILocation(line: 3534, column: 6, scope: !9752)
!9768 = !DILocation(line: 3535, column: 2, scope: !9745)
!9769 = !DILocalVariable(name: "op0", scope: !9770, file: !3, line: 3538, type: !1091)
!9770 = distinct !DILexicalBlock(scope: !9468, file: !3, line: 3537, column: 7)
!9771 = !DILocation(line: 3538, column: 6, scope: !9770)
!9772 = !DILocation(line: 3538, column: 12, scope: !9770)
!9773 = !DILocation(line: 3538, column: 25, scope: !9770)
!9774 = !DILocation(line: 3538, column: 38, scope: !9770)
!9775 = !DILocalVariable(name: "op1", scope: !9770, file: !3, line: 3539, type: !1091)
!9776 = !DILocation(line: 3539, column: 6, scope: !9770)
!9777 = !DILocation(line: 3539, column: 12, scope: !9770)
!9778 = !DILocation(line: 3539, column: 25, scope: !9770)
!9779 = !DILocation(line: 3539, column: 38, scope: !9770)
!9780 = !DILocation(line: 3540, column: 50, scope: !9770)
!9781 = !DILocation(line: 3540, column: 56, scope: !9770)
!9782 = !DILocation(line: 3540, column: 62, scope: !9770)
!9783 = !DILocation(line: 3540, column: 73, scope: !9770)
!9784 = !DILocation(line: 3540, column: 78, scope: !9770)
!9785 = !DILocation(line: 3540, column: 19, scope: !9770)
!9786 = !DILocation(line: 3540, column: 17, scope: !9770)
!9787 = !DILocation(line: 3542, column: 7, scope: !9468)
!9788 = !DILocation(line: 3546, column: 15, scope: !9468)
!9789 = !DILocation(line: 3546, column: 7, scope: !9468)
!9790 = !DILocation(line: 3553, column: 8, scope: !9791)
!9791 = distinct !DILexicalBlock(scope: !9792, file: !3, line: 3553, column: 8)
!9792 = distinct !DILexicalBlock(scope: !9468, file: !3, line: 3547, column: 2)
!9793 = !DILocation(line: 3553, column: 19, scope: !9791)
!9794 = !DILocation(line: 3553, column: 22, scope: !9791)
!9795 = !DILocation(line: 3553, column: 44, scope: !9791)
!9796 = !DILocation(line: 3553, column: 8, scope: !9792)
!9797 = !DILocalVariable(name: "y", scope: !9798, file: !3, line: 3555, type: !1091)
!9798 = distinct !DILexicalBlock(scope: !9791, file: !3, line: 3554, column: 6)
!9799 = !DILocation(line: 3555, column: 12, scope: !9798)
!9800 = !DILocation(line: 3556, column: 5, scope: !9798)
!9801 = !DILocation(line: 3556, column: 28, scope: !9798)
!9802 = !DILocation(line: 3556, column: 39, scope: !9798)
!9803 = !DILocation(line: 3557, column: 25, scope: !9798)
!9804 = !DILocation(line: 3557, column: 5, scope: !9798)
!9805 = !DILocation(line: 3559, column: 12, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9798, file: !3, line: 3559, column: 12)
!9807 = !DILocation(line: 3559, column: 14, scope: !9806)
!9808 = !DILocation(line: 3559, column: 19, scope: !9806)
!9809 = !DILocation(line: 3559, column: 22, scope: !9806)
!9810 = !DILocation(line: 3559, column: 45, scope: !9806)
!9811 = !DILocation(line: 3560, column: 5, scope: !9806)
!9812 = !DILocation(line: 3560, column: 8, scope: !9806)
!9813 = !DILocation(line: 3560, column: 33, scope: !9806)
!9814 = !DILocation(line: 3560, column: 30, scope: !9806)
!9815 = !DILocation(line: 3559, column: 12, scope: !9798)
!9816 = !DILocation(line: 3561, column: 10, scope: !9806)
!9817 = !DILocation(line: 3561, column: 3, scope: !9806)
!9818 = !DILocation(line: 3564, column: 18, scope: !9819)
!9819 = distinct !DILexicalBlock(scope: !9798, file: !3, line: 3564, column: 12)
!9820 = !DILocation(line: 3564, column: 41, scope: !9819)
!9821 = !DILocation(line: 3564, column: 52, scope: !9819)
!9822 = !DILocation(line: 3565, column: 26, scope: !9819)
!9823 = !DILocation(line: 3565, column: 6, scope: !9819)
!9824 = !DILocation(line: 3564, column: 15, scope: !9819)
!9825 = !DILocation(line: 3565, column: 48, scope: !9819)
!9826 = !DILocation(line: 3566, column: 5, scope: !9819)
!9827 = !DILocation(line: 3566, column: 8, scope: !9819)
!9828 = !DILocation(line: 3566, column: 31, scope: !9819)
!9829 = !DILocation(line: 3567, column: 5, scope: !9819)
!9830 = !DILocation(line: 3567, column: 8, scope: !9819)
!9831 = !DILocation(line: 3567, column: 41, scope: !9819)
!9832 = !DILocation(line: 3568, column: 5, scope: !9819)
!9833 = !DILocation(line: 3568, column: 8, scope: !9819)
!9834 = !DILocation(line: 3568, column: 43, scope: !9819)
!9835 = !DILocation(line: 3568, column: 40, scope: !9819)
!9836 = !DILocation(line: 3564, column: 12, scope: !9798)
!9837 = !DILocation(line: 3569, column: 10, scope: !9819)
!9838 = !DILocation(line: 3569, column: 3, scope: !9819)
!9839 = !DILocation(line: 3570, column: 6, scope: !9798)
!9840 = !DILocation(line: 3573, column: 8, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9792, file: !3, line: 3573, column: 8)
!9842 = !DILocation(line: 3573, column: 19, scope: !9841)
!9843 = !DILocation(line: 3573, column: 22, scope: !9841)
!9844 = !DILocation(line: 3573, column: 44, scope: !9841)
!9845 = !DILocation(line: 3573, column: 8, scope: !9792)
!9846 = !DILocalVariable(name: "y", scope: !9847, file: !3, line: 3575, type: !1091)
!9847 = distinct !DILexicalBlock(scope: !9841, file: !3, line: 3574, column: 6)
!9848 = !DILocation(line: 3575, column: 12, scope: !9847)
!9849 = !DILocation(line: 3576, column: 5, scope: !9847)
!9850 = !DILocation(line: 3576, column: 28, scope: !9847)
!9851 = !DILocation(line: 3576, column: 39, scope: !9847)
!9852 = !DILocation(line: 3577, column: 25, scope: !9847)
!9853 = !DILocation(line: 3577, column: 5, scope: !9847)
!9854 = !DILocation(line: 3579, column: 12, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 3579, column: 12)
!9856 = !DILocation(line: 3579, column: 14, scope: !9855)
!9857 = !DILocation(line: 3579, column: 19, scope: !9855)
!9858 = !DILocation(line: 3579, column: 22, scope: !9855)
!9859 = !DILocation(line: 3579, column: 45, scope: !9855)
!9860 = !DILocation(line: 3580, column: 5, scope: !9855)
!9861 = !DILocation(line: 3580, column: 8, scope: !9855)
!9862 = !DILocation(line: 3580, column: 33, scope: !9855)
!9863 = !DILocation(line: 3580, column: 30, scope: !9855)
!9864 = !DILocation(line: 3579, column: 12, scope: !9847)
!9865 = !DILocation(line: 3581, column: 10, scope: !9855)
!9866 = !DILocation(line: 3581, column: 3, scope: !9855)
!9867 = !DILocation(line: 3584, column: 18, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 3584, column: 12)
!9869 = !DILocation(line: 3584, column: 41, scope: !9868)
!9870 = !DILocation(line: 3584, column: 52, scope: !9868)
!9871 = !DILocation(line: 3585, column: 26, scope: !9868)
!9872 = !DILocation(line: 3585, column: 6, scope: !9868)
!9873 = !DILocation(line: 3584, column: 15, scope: !9868)
!9874 = !DILocation(line: 3585, column: 48, scope: !9868)
!9875 = !DILocation(line: 3586, column: 5, scope: !9868)
!9876 = !DILocation(line: 3586, column: 8, scope: !9868)
!9877 = !DILocation(line: 3586, column: 31, scope: !9868)
!9878 = !DILocation(line: 3587, column: 5, scope: !9868)
!9879 = !DILocation(line: 3587, column: 8, scope: !9868)
!9880 = !DILocation(line: 3587, column: 41, scope: !9868)
!9881 = !DILocation(line: 3588, column: 5, scope: !9868)
!9882 = !DILocation(line: 3588, column: 8, scope: !9868)
!9883 = !DILocation(line: 3588, column: 43, scope: !9868)
!9884 = !DILocation(line: 3588, column: 40, scope: !9868)
!9885 = !DILocation(line: 3584, column: 12, scope: !9847)
!9886 = !DILocation(line: 3589, column: 10, scope: !9868)
!9887 = !DILocation(line: 3589, column: 3, scope: !9868)
!9888 = !DILocation(line: 3590, column: 6, scope: !9847)
!9889 = !DILocation(line: 3602, column: 8, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !9792, file: !3, line: 3602, column: 8)
!9891 = !DILocation(line: 3602, column: 19, scope: !9890)
!9892 = !DILocation(line: 3602, column: 24, scope: !9890)
!9893 = !DILocation(line: 3602, column: 27, scope: !9890)
!9894 = !DILocation(line: 3603, column: 8, scope: !9890)
!9895 = !DILocation(line: 3603, column: 11, scope: !9890)
!9896 = !DILocation(line: 3603, column: 31, scope: !9890)
!9897 = !DILocation(line: 3611, column: 8, scope: !9890)
!9898 = !DILocation(line: 3611, column: 11, scope: !9890)
!9899 = !DILocation(line: 3611, column: 31, scope: !9890)
!9900 = !DILocation(line: 3613, column: 8, scope: !9890)
!9901 = !DILocation(line: 3613, column: 11, scope: !9890)
!9902 = !DILocation(line: 3602, column: 8, scope: !9792)
!9903 = !DILocalVariable(name: "new_const", scope: !9904, file: !3, line: 3615, type: !1091)
!9904 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 3614, column: 6)
!9905 = !DILocation(line: 3615, column: 12, scope: !9904)
!9906 = !DILocation(line: 3615, column: 24, scope: !9904)
!9907 = !DILocalVariable(name: "p", scope: !9904, file: !3, line: 3616, type: !2307)
!9908 = !DILocation(line: 3616, column: 26, scope: !9904)
!9909 = !DILocation(line: 3617, column: 13, scope: !9904)
!9910 = !DILocation(line: 3617, column: 24, scope: !9904)
!9911 = !DILocation(line: 3617, column: 53, scope: !9904)
!9912 = !DILocation(line: 3617, column: 5, scope: !9904)
!9913 = !DILocation(line: 3619, column: 12, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9904, file: !3, line: 3619, column: 12)
!9915 = !DILocation(line: 3619, column: 12, scope: !9904)
!9916 = !DILocation(line: 3620, column: 12, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9914, file: !3, line: 3620, column: 3)
!9918 = !DILocation(line: 3620, column: 15, scope: !9917)
!9919 = !DILocation(line: 3620, column: 10, scope: !9917)
!9920 = !DILocation(line: 3620, column: 8, scope: !9917)
!9921 = !DILocation(line: 3620, column: 33, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9917, file: !3, line: 3620, column: 3)
!9923 = !DILocation(line: 3620, column: 3, scope: !9917)
!9924 = !DILocation(line: 3621, column: 9, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9922, file: !3, line: 3621, column: 9)
!9926 = !DILocation(line: 3621, column: 9, scope: !9922)
!9927 = !DILocation(line: 3622, column: 42, scope: !9925)
!9928 = !DILocation(line: 3622, column: 48, scope: !9925)
!9929 = !DILocation(line: 3623, column: 18, scope: !9925)
!9930 = !DILocation(line: 3623, column: 21, scope: !9925)
!9931 = !DILocation(line: 3623, column: 7, scope: !9925)
!9932 = !DILocation(line: 3622, column: 14, scope: !9925)
!9933 = !DILocation(line: 3622, column: 7, scope: !9925)
!9934 = !DILocation(line: 3620, column: 40, scope: !9922)
!9935 = !DILocation(line: 3620, column: 43, scope: !9922)
!9936 = !DILocation(line: 3620, column: 38, scope: !9922)
!9937 = !DILocation(line: 3620, column: 3, scope: !9922)
!9938 = distinct !{!9938, !9923, !9939}
!9939 = !DILocation(line: 3623, column: 35, scope: !9917)
!9940 = !DILocation(line: 3624, column: 6, scope: !9904)
!9941 = !DILocation(line: 3625, column: 4, scope: !9792)
!9942 = !DILocation(line: 3630, column: 8, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !9792, file: !3, line: 3630, column: 8)
!9944 = !DILocation(line: 3630, column: 19, scope: !9943)
!9945 = !DILocation(line: 3630, column: 24, scope: !9943)
!9946 = !DILocation(line: 3630, column: 27, scope: !9943)
!9947 = !DILocation(line: 3630, column: 8, scope: !9792)
!9948 = !DILocalVariable(name: "y", scope: !9949, file: !3, line: 3632, type: !1091)
!9949 = distinct !DILexicalBlock(scope: !9943, file: !3, line: 3631, column: 6)
!9950 = !DILocation(line: 3632, column: 12, scope: !9949)
!9951 = !DILocation(line: 3632, column: 36, scope: !9949)
!9952 = !DILocation(line: 3632, column: 16, scope: !9949)
!9953 = !DILocation(line: 3633, column: 12, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9949, file: !3, line: 3633, column: 12)
!9955 = !DILocation(line: 3633, column: 14, scope: !9954)
!9956 = !DILocation(line: 3633, column: 17, scope: !9954)
!9957 = !DILocation(line: 3633, column: 12, scope: !9949)
!9958 = !DILocation(line: 3634, column: 45, scope: !9954)
!9959 = !DILocation(line: 3634, column: 35, scope: !9954)
!9960 = !DILocation(line: 3635, column: 8, scope: !9954)
!9961 = !DILocation(line: 3635, column: 7, scope: !9954)
!9962 = !DILocation(line: 3634, column: 20, scope: !9954)
!9963 = !DILocation(line: 3634, column: 10, scope: !9954)
!9964 = !DILocation(line: 3634, column: 3, scope: !9954)
!9965 = !DILocation(line: 3637, column: 6, scope: !9949)
!9966 = !DILabel(scope: !9792, name: "from_plus", file: !3, line: 3641)
!9967 = !DILocation(line: 3641, column: 2, scope: !9792)
!9968 = !DILocation(line: 3653, column: 8, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9792, file: !3, line: 3653, column: 8)
!9970 = !DILocation(line: 3654, column: 8, scope: !9969)
!9971 = !DILocation(line: 3654, column: 11, scope: !9969)
!9972 = !DILocation(line: 3654, column: 22, scope: !9969)
!9973 = !DILocation(line: 3654, column: 25, scope: !9969)
!9974 = !DILocation(line: 3653, column: 8, scope: !9792)
!9975 = !DILocalVariable(name: "is_shift", scope: !9976, file: !3, line: 3656, type: !1053)
!9976 = distinct !DILexicalBlock(scope: !9969, file: !3, line: 3655, column: 6)
!9977 = !DILocation(line: 3656, column: 12, scope: !9976)
!9978 = !DILocation(line: 3657, column: 6, scope: !9976)
!9979 = !DILocation(line: 3657, column: 11, scope: !9976)
!9980 = !DILocation(line: 3657, column: 21, scope: !9976)
!9981 = !DILocation(line: 3657, column: 24, scope: !9976)
!9982 = !DILocation(line: 3657, column: 29, scope: !9976)
!9983 = !DILocation(line: 3657, column: 41, scope: !9976)
!9984 = !DILocation(line: 3657, column: 44, scope: !9976)
!9985 = !DILocation(line: 3657, column: 49, scope: !9976)
!9986 = !DILocalVariable(name: "y", scope: !9976, file: !3, line: 3658, type: !1091)
!9987 = !DILocation(line: 3658, column: 12, scope: !9976)
!9988 = !DILocalVariable(name: "inner_const", scope: !9976, file: !3, line: 3658, type: !1091)
!9989 = !DILocation(line: 3658, column: 15, scope: !9976)
!9990 = !DILocalVariable(name: "new_const", scope: !9976, file: !3, line: 3658, type: !1091)
!9991 = !DILocation(line: 3658, column: 28, scope: !9976)
!9992 = !DILocalVariable(name: "canon_const_arg1", scope: !9976, file: !3, line: 3659, type: !1091)
!9993 = !DILocation(line: 3659, column: 12, scope: !9976)
!9994 = !DILocation(line: 3659, column: 31, scope: !9976)
!9995 = !DILocalVariable(name: "associate_code", scope: !9976, file: !3, line: 3660, type: !384)
!9996 = !DILocation(line: 3660, column: 22, scope: !9976)
!9997 = !DILocation(line: 3662, column: 12, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 3662, column: 12)
!9999 = !DILocation(line: 3663, column: 5, scope: !9998)
!10000 = !DILocation(line: 3663, column: 9, scope: !9998)
!10001 = !DILocation(line: 3663, column: 32, scope: !9998)
!10002 = !DILocation(line: 3663, column: 29, scope: !9998)
!10003 = !DILocation(line: 3664, column: 9, scope: !9998)
!10004 = !DILocation(line: 3664, column: 12, scope: !9998)
!10005 = !DILocation(line: 3664, column: 32, scope: !9998)
!10006 = !DILocation(line: 3662, column: 12, scope: !9976)
!10007 = !DILocation(line: 3671, column: 7, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !10009, file: !3, line: 3666, column: 9)
!10009 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 3665, column: 3)
!10010 = !DILocation(line: 3674, column: 32, scope: !9976)
!10011 = !DILocation(line: 3674, column: 45, scope: !9976)
!10012 = !DILocation(line: 3674, column: 12, scope: !9976)
!10013 = !DILocation(line: 3674, column: 10, scope: !9976)
!10014 = !DILocation(line: 3675, column: 12, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 3675, column: 12)
!10016 = !DILocation(line: 3675, column: 14, scope: !10015)
!10017 = !DILocation(line: 3675, column: 12, scope: !9976)
!10018 = !DILocation(line: 3676, column: 3, scope: !10015)
!10019 = !DILocation(line: 3683, column: 12, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 3683, column: 12)
!10021 = !DILocation(line: 3683, column: 27, scope: !10020)
!10022 = !DILocation(line: 3683, column: 24, scope: !10020)
!10023 = !DILocation(line: 3683, column: 12, scope: !9976)
!10024 = !DILocation(line: 3684, column: 3, scope: !10020)
!10025 = !DILocation(line: 3686, column: 48, scope: !9976)
!10026 = !DILocation(line: 3686, column: 38, scope: !9976)
!10027 = !DILocation(line: 3686, column: 22, scope: !9976)
!10028 = !DILocation(line: 3686, column: 20, scope: !9976)
!10029 = !DILocation(line: 3687, column: 13, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 3687, column: 12)
!10031 = !DILocation(line: 3687, column: 25, scope: !10030)
!10032 = !DILocation(line: 3687, column: 29, scope: !10030)
!10033 = !DILocation(line: 3687, column: 12, scope: !9976)
!10034 = !DILocation(line: 3688, column: 3, scope: !10030)
!10035 = !DILocation(line: 3695, column: 12, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 3695, column: 12)
!10037 = !DILocation(line: 3695, column: 17, scope: !10036)
!10038 = !DILocation(line: 3695, column: 25, scope: !10036)
!10039 = !DILocation(line: 3695, column: 28, scope: !10036)
!10040 = !DILocation(line: 3695, column: 42, scope: !10036)
!10041 = !DILocation(line: 3695, column: 39, scope: !10036)
!10042 = !DILocation(line: 3696, column: 5, scope: !10036)
!10043 = !DILocation(line: 3703, column: 6, scope: !10036)
!10044 = !DILocation(line: 3703, column: 23, scope: !10036)
!10045 = !DILocation(line: 3703, column: 21, scope: !10036)
!10046 = !DILocation(line: 3703, column: 9, scope: !10036)
!10047 = !DILocation(line: 3703, column: 44, scope: !10036)
!10048 = !DILocation(line: 3695, column: 12, scope: !9976)
!10049 = !DILocation(line: 3704, column: 3, scope: !10036)
!10050 = !DILocation(line: 3708, column: 12, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 3708, column: 12)
!10052 = !DILocation(line: 3708, column: 21, scope: !10051)
!10053 = !DILocation(line: 3708, column: 24, scope: !10051)
!10054 = !DILocation(line: 3708, column: 12, scope: !9976)
!10055 = !DILocation(line: 3709, column: 17, scope: !10051)
!10056 = !DILocation(line: 3711, column: 12, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 3711, column: 12)
!10058 = !DILocation(line: 3712, column: 5, scope: !10057)
!10059 = !DILocation(line: 3712, column: 9, scope: !10057)
!10060 = !DILocation(line: 3712, column: 33, scope: !10057)
!10061 = !DILocation(line: 3712, column: 30, scope: !10057)
!10062 = !DILocation(line: 3713, column: 9, scope: !10057)
!10063 = !DILocation(line: 3713, column: 12, scope: !10057)
!10064 = !DILocation(line: 3713, column: 33, scope: !10057)
!10065 = !DILocation(line: 3711, column: 12, scope: !9976)
!10066 = !DILocation(line: 3719, column: 7, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !10068, file: !3, line: 3715, column: 9)
!10068 = distinct !DILexicalBlock(scope: !10057, file: !3, line: 3714, column: 3)
!10069 = !DILocation(line: 3725, column: 26, scope: !9976)
!10070 = !DILocation(line: 3725, column: 35, scope: !9976)
!10071 = !DILocation(line: 3725, column: 38, scope: !9976)
!10072 = !DILocation(line: 3725, column: 43, scope: !9976)
!10073 = !DILocation(line: 3725, column: 61, scope: !9976)
!10074 = !DILocation(line: 3725, column: 23, scope: !9976)
!10075 = !DILocation(line: 3727, column: 47, scope: !9976)
!10076 = !DILocation(line: 3727, column: 63, scope: !9976)
!10077 = !DILocation(line: 3728, column: 12, scope: !9976)
!10078 = !DILocation(line: 3729, column: 12, scope: !9976)
!10079 = !DILocation(line: 3727, column: 20, scope: !9976)
!10080 = !DILocation(line: 3727, column: 18, scope: !9976)
!10081 = !DILocation(line: 3731, column: 12, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 3731, column: 12)
!10083 = !DILocation(line: 3731, column: 22, scope: !10082)
!10084 = !DILocation(line: 3731, column: 12, scope: !9976)
!10085 = !DILocation(line: 3732, column: 3, scope: !10082)
!10086 = !DILocation(line: 3740, column: 12, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 3740, column: 12)
!10088 = !DILocation(line: 3741, column: 5, scope: !10087)
!10089 = !DILocation(line: 3741, column: 8, scope: !10087)
!10090 = !DILocation(line: 3742, column: 5, scope: !10087)
!10091 = !DILocation(line: 3742, column: 8, scope: !10087)
!10092 = !DILocation(line: 3742, column: 30, scope: !10087)
!10093 = !DILocation(line: 3742, column: 27, scope: !10087)
!10094 = !DILocation(line: 3740, column: 12, scope: !9976)
!10095 = !DILocation(line: 3746, column: 9, scope: !10096)
!10096 = distinct !DILexicalBlock(scope: !10097, file: !3, line: 3746, column: 9)
!10097 = distinct !DILexicalBlock(scope: !10087, file: !3, line: 3743, column: 3)
!10098 = !DILocation(line: 3746, column: 14, scope: !10096)
!10099 = !DILocation(line: 3746, column: 9, scope: !10097)
!10100 = !DILocation(line: 3747, column: 19, scope: !10096)
!10101 = !DILocation(line: 3747, column: 17, scope: !10096)
!10102 = !DILocation(line: 3747, column: 7, scope: !10096)
!10103 = !DILocation(line: 3748, column: 31, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10096, file: !3, line: 3748, column: 14)
!10105 = !DILocation(line: 3748, column: 15, scope: !10104)
!10106 = !DILocation(line: 3748, column: 14, scope: !10096)
!10107 = !DILocation(line: 3749, column: 14, scope: !10104)
!10108 = !DILocation(line: 3749, column: 7, scope: !10104)
!10109 = !DILocation(line: 3751, column: 7, scope: !10104)
!10110 = !DILocation(line: 3752, column: 3, scope: !10097)
!10111 = !DILocation(line: 3754, column: 22, scope: !9976)
!10112 = !DILocation(line: 3754, column: 12, scope: !9976)
!10113 = !DILocation(line: 3754, column: 10, scope: !9976)
!10114 = !DILocation(line: 3760, column: 31, scope: !10115)
!10115 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 3760, column: 12)
!10116 = !DILocation(line: 3760, column: 44, scope: !10115)
!10117 = !DILocation(line: 3760, column: 14, scope: !10115)
!10118 = !DILocation(line: 3760, column: 12, scope: !9976)
!10119 = !DILocation(line: 3761, column: 17, scope: !10115)
!10120 = !DILocation(line: 3761, column: 20, scope: !10115)
!10121 = !DILocation(line: 3761, column: 7, scope: !10115)
!10122 = !DILocation(line: 3761, column: 5, scope: !10115)
!10123 = !DILocation(line: 3761, column: 3, scope: !10115)
!10124 = !DILocation(line: 3763, column: 36, scope: !9976)
!10125 = !DILocation(line: 3763, column: 42, scope: !9976)
!10126 = !DILocation(line: 3763, column: 48, scope: !9976)
!10127 = !DILocation(line: 3763, column: 51, scope: !9976)
!10128 = !DILocation(line: 3763, column: 15, scope: !9976)
!10129 = !DILocation(line: 3763, column: 8, scope: !9976)
!10130 = !DILocation(line: 3765, column: 4, scope: !9792)
!10131 = !DILocation(line: 3773, column: 4, scope: !9792)
!10132 = !DILocation(line: 3776, column: 4, scope: !9792)
!10133 = !DILocation(line: 3779, column: 44, scope: !9468)
!10134 = !DILocation(line: 3779, column: 50, scope: !9468)
!10135 = !DILocation(line: 3780, column: 12, scope: !9468)
!10136 = !DILocation(line: 3780, column: 25, scope: !9468)
!10137 = !DILocation(line: 3780, column: 38, scope: !9468)
!10138 = !DILocation(line: 3781, column: 12, scope: !9468)
!10139 = !DILocation(line: 3781, column: 25, scope: !9468)
!10140 = !DILocation(line: 3781, column: 38, scope: !9468)
!10141 = !DILocation(line: 3779, column: 17, scope: !9468)
!10142 = !DILocation(line: 3779, column: 15, scope: !9468)
!10143 = !DILocation(line: 3782, column: 7, scope: !9468)
!10144 = !DILocation(line: 3786, column: 11, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !9468, file: !3, line: 3786, column: 11)
!10146 = !DILocation(line: 3786, column: 16, scope: !10145)
!10147 = !DILocation(line: 3786, column: 26, scope: !10145)
!10148 = !DILocation(line: 3786, column: 29, scope: !10145)
!10149 = !DILocation(line: 3786, column: 40, scope: !10145)
!10150 = !DILocation(line: 3787, column: 4, scope: !10145)
!10151 = !DILocation(line: 3787, column: 7, scope: !10145)
!10152 = !DILocation(line: 3787, column: 29, scope: !10145)
!10153 = !DILocation(line: 3788, column: 4, scope: !10145)
!10154 = !DILocation(line: 3788, column: 20, scope: !10145)
!10155 = !DILocation(line: 3788, column: 42, scope: !10145)
!10156 = !DILocation(line: 3788, column: 7, scope: !10145)
!10157 = !DILocation(line: 3786, column: 11, scope: !9468)
!10158 = !DILocation(line: 3789, column: 9, scope: !10145)
!10159 = !DILocation(line: 3789, column: 2, scope: !10145)
!10160 = !DILocation(line: 3790, column: 7, scope: !9468)
!10161 = !DILocation(line: 3794, column: 45, scope: !9468)
!10162 = !DILocation(line: 3794, column: 51, scope: !9468)
!10163 = !DILocation(line: 3794, column: 57, scope: !9468)
!10164 = !DILocation(line: 3795, column: 6, scope: !9468)
!10165 = !DILocation(line: 3795, column: 19, scope: !9468)
!10166 = !DILocation(line: 3795, column: 32, scope: !9468)
!10167 = !DILocation(line: 3796, column: 6, scope: !9468)
!10168 = !DILocation(line: 3796, column: 19, scope: !9468)
!10169 = !DILocation(line: 3796, column: 32, scope: !9468)
!10170 = !DILocation(line: 3797, column: 6, scope: !9468)
!10171 = !DILocation(line: 3797, column: 19, scope: !9468)
!10172 = !DILocation(line: 3797, column: 32, scope: !9468)
!10173 = !DILocation(line: 3794, column: 17, scope: !9468)
!10174 = !DILocation(line: 3794, column: 15, scope: !9468)
!10175 = !DILocation(line: 3798, column: 7, scope: !9468)
!10176 = !DILocation(line: 3801, column: 7, scope: !9468)
!10177 = !DILocation(line: 3804, column: 10, scope: !9208)
!10178 = !DILocation(line: 3804, column: 20, scope: !9208)
!10179 = !DILocation(line: 3804, column: 30, scope: !9208)
!10180 = !DILocation(line: 3804, column: 3, scope: !9208)
!10181 = !DILocation(line: 3805, column: 1, scope: !9208)
!10182 = distinct !DISubprogram(name: "lookup", scope: !3, file: !3, line: 1495, type: !8748, scopeLine: 1496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!10183 = !DILocalVariable(name: "x", arg: 1, scope: !10182, file: !3, line: 1495, type: !1091)
!10184 = !DILocation(line: 1495, column: 13, scope: !10182)
!10185 = !DILocalVariable(name: "hash", arg: 2, scope: !10182, file: !3, line: 1495, type: !7)
!10186 = !DILocation(line: 1495, column: 29, scope: !10182)
!10187 = !DILocalVariable(name: "mode", arg: 3, scope: !10182, file: !3, line: 1495, type: !5)
!10188 = !DILocation(line: 1495, column: 53, scope: !10182)
!10189 = !DILocalVariable(name: "p", scope: !10182, file: !3, line: 1497, type: !2307)
!10190 = !DILocation(line: 1497, column: 21, scope: !10182)
!10191 = !DILocation(line: 1499, column: 18, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10182, file: !3, line: 1499, column: 3)
!10193 = !DILocation(line: 1499, column: 12, scope: !10192)
!10194 = !DILocation(line: 1499, column: 10, scope: !10192)
!10195 = !DILocation(line: 1499, column: 8, scope: !10192)
!10196 = !DILocation(line: 1499, column: 25, scope: !10197)
!10197 = distinct !DILexicalBlock(scope: !10192, file: !3, line: 1499, column: 3)
!10198 = !DILocation(line: 1499, column: 3, scope: !10192)
!10199 = !DILocation(line: 1500, column: 9, scope: !10200)
!10200 = distinct !DILexicalBlock(scope: !10197, file: !3, line: 1500, column: 9)
!10201 = !DILocation(line: 1500, column: 17, scope: !10200)
!10202 = !DILocation(line: 1500, column: 20, scope: !10200)
!10203 = !DILocation(line: 1500, column: 14, scope: !10200)
!10204 = !DILocation(line: 1500, column: 25, scope: !10200)
!10205 = !DILocation(line: 1500, column: 30, scope: !10200)
!10206 = !DILocation(line: 1500, column: 35, scope: !10200)
!10207 = !DILocation(line: 1500, column: 38, scope: !10200)
!10208 = !DILocation(line: 1500, column: 32, scope: !10200)
!10209 = !DILocation(line: 1500, column: 42, scope: !10200)
!10210 = !DILocation(line: 1500, column: 45, scope: !10200)
!10211 = !DILocation(line: 1501, column: 8, scope: !10200)
!10212 = !DILocation(line: 1501, column: 24, scope: !10200)
!10213 = !DILocation(line: 1501, column: 27, scope: !10200)
!10214 = !DILocation(line: 1501, column: 30, scope: !10200)
!10215 = !DILocation(line: 1501, column: 36, scope: !10200)
!10216 = !DILocation(line: 1501, column: 35, scope: !10200)
!10217 = !DILocation(line: 1501, column: 11, scope: !10200)
!10218 = !DILocation(line: 1500, column: 9, scope: !10197)
!10219 = !DILocation(line: 1502, column: 14, scope: !10200)
!10220 = !DILocation(line: 1502, column: 7, scope: !10200)
!10221 = !DILocation(line: 1501, column: 53, scope: !10200)
!10222 = !DILocation(line: 1499, column: 32, scope: !10197)
!10223 = !DILocation(line: 1499, column: 35, scope: !10197)
!10224 = !DILocation(line: 1499, column: 30, scope: !10197)
!10225 = !DILocation(line: 1499, column: 3, scope: !10197)
!10226 = distinct !{!10226, !10198, !10227}
!10227 = !DILocation(line: 1502, column: 14, scope: !10192)
!10228 = !DILocation(line: 1504, column: 3, scope: !10182)
!10229 = !DILocation(line: 1505, column: 1, scope: !10182)
!10230 = distinct !DISubprogram(name: "merge_equiv_classes", scope: !3, file: !3, line: 1764, type: !10231, scopeLine: 1765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!10231 = !DISubroutineType(types: !10232)
!10232 = !{null, !2307, !2307}
!10233 = !DILocalVariable(name: "class1", arg: 1, scope: !10230, file: !3, line: 1764, type: !2307)
!10234 = !DILocation(line: 1764, column: 40, scope: !10230)
!10235 = !DILocalVariable(name: "class2", arg: 2, scope: !10230, file: !3, line: 1764, type: !2307)
!10236 = !DILocation(line: 1764, column: 66, scope: !10230)
!10237 = !DILocalVariable(name: "elt", scope: !10230, file: !3, line: 1766, type: !2307)
!10238 = !DILocation(line: 1766, column: 21, scope: !10230)
!10239 = !DILocalVariable(name: "next", scope: !10230, file: !3, line: 1766, type: !2307)
!10240 = !DILocation(line: 1766, column: 27, scope: !10230)
!10241 = !DILocalVariable(name: "new_elt", scope: !10230, file: !3, line: 1766, type: !2307)
!10242 = !DILocation(line: 1766, column: 34, scope: !10230)
!10243 = !DILocation(line: 1769, column: 12, scope: !10230)
!10244 = !DILocation(line: 1769, column: 20, scope: !10230)
!10245 = !DILocation(line: 1769, column: 10, scope: !10230)
!10246 = !DILocation(line: 1770, column: 12, scope: !10230)
!10247 = !DILocation(line: 1770, column: 20, scope: !10230)
!10248 = !DILocation(line: 1770, column: 10, scope: !10230)
!10249 = !DILocation(line: 1773, column: 7, scope: !10250)
!10250 = distinct !DILexicalBlock(scope: !10230, file: !3, line: 1773, column: 7)
!10251 = !DILocation(line: 1773, column: 17, scope: !10250)
!10252 = !DILocation(line: 1773, column: 14, scope: !10250)
!10253 = !DILocation(line: 1773, column: 7, scope: !10230)
!10254 = !DILocation(line: 1774, column: 5, scope: !10250)
!10255 = !DILocation(line: 1776, column: 14, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10230, file: !3, line: 1776, column: 3)
!10257 = !DILocation(line: 1776, column: 12, scope: !10256)
!10258 = !DILocation(line: 1776, column: 8, scope: !10256)
!10259 = !DILocation(line: 1776, column: 22, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !10256, file: !3, line: 1776, column: 3)
!10261 = !DILocation(line: 1776, column: 3, scope: !10256)
!10262 = !DILocalVariable(name: "hash", scope: !10263, file: !3, line: 1778, type: !7)
!10263 = distinct !DILexicalBlock(scope: !10260, file: !3, line: 1777, column: 5)
!10264 = !DILocation(line: 1778, column: 20, scope: !10263)
!10265 = !DILocalVariable(name: "exp", scope: !10263, file: !3, line: 1779, type: !1091)
!10266 = !DILocation(line: 1779, column: 11, scope: !10263)
!10267 = !DILocation(line: 1779, column: 17, scope: !10263)
!10268 = !DILocation(line: 1779, column: 22, scope: !10263)
!10269 = !DILocalVariable(name: "mode", scope: !10263, file: !3, line: 1780, type: !5)
!10270 = !DILocation(line: 1780, column: 25, scope: !10263)
!10271 = !DILocation(line: 1780, column: 32, scope: !10263)
!10272 = !DILocation(line: 1780, column: 37, scope: !10263)
!10273 = !DILocation(line: 1782, column: 14, scope: !10263)
!10274 = !DILocation(line: 1782, column: 19, scope: !10263)
!10275 = !DILocation(line: 1782, column: 12, scope: !10263)
!10276 = !DILocation(line: 1787, column: 11, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !10263, file: !3, line: 1787, column: 11)
!10278 = !DILocation(line: 1787, column: 23, scope: !10277)
!10279 = !DILocation(line: 1787, column: 39, scope: !10277)
!10280 = !DILocation(line: 1787, column: 44, scope: !10277)
!10281 = !DILocation(line: 1787, column: 26, scope: !10277)
!10282 = !DILocation(line: 1787, column: 11, scope: !10263)
!10283 = !DILocalVariable(name: "need_rehash", scope: !10284, file: !3, line: 1789, type: !1052)
!10284 = distinct !DILexicalBlock(scope: !10277, file: !3, line: 1788, column: 2)
!10285 = !DILocation(line: 1789, column: 9, scope: !10284)
!10286 = !DILocation(line: 1791, column: 23, scope: !10284)
!10287 = !DILocation(line: 1792, column: 11, scope: !10284)
!10288 = !DILocation(line: 1792, column: 9, scope: !10284)
!10289 = !DILocation(line: 1794, column: 8, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10284, file: !3, line: 1794, column: 8)
!10291 = !DILocation(line: 1794, column: 8, scope: !10284)
!10292 = !DILocation(line: 1796, column: 22, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10290, file: !3, line: 1795, column: 6)
!10294 = !DILocation(line: 1796, column: 20, scope: !10293)
!10295 = !DILocation(line: 1797, column: 26, scope: !10293)
!10296 = !DILocation(line: 1797, column: 8, scope: !10293)
!10297 = !DILocation(line: 1798, column: 6, scope: !10293)
!10298 = !DILocation(line: 1800, column: 8, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !10284, file: !3, line: 1800, column: 8)
!10300 = !DILocation(line: 1800, column: 20, scope: !10299)
!10301 = !DILocation(line: 1800, column: 23, scope: !10299)
!10302 = !DILocation(line: 1800, column: 35, scope: !10299)
!10303 = !DILocation(line: 1800, column: 8, scope: !10284)
!10304 = !DILocation(line: 1801, column: 32, scope: !10299)
!10305 = !DILocation(line: 1801, column: 37, scope: !10299)
!10306 = !DILocation(line: 1801, column: 6, scope: !10299)
!10307 = !DILocation(line: 1803, column: 25, scope: !10299)
!10308 = !DILocation(line: 1803, column: 30, scope: !10299)
!10309 = !DILocation(line: 1803, column: 6, scope: !10299)
!10310 = !DILocation(line: 1805, column: 21, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !10284, file: !3, line: 1805, column: 8)
!10312 = !DILocation(line: 1805, column: 26, scope: !10311)
!10313 = !DILocation(line: 1805, column: 8, scope: !10311)
!10314 = !DILocation(line: 1805, column: 37, scope: !10311)
!10315 = !DILocation(line: 1805, column: 40, scope: !10311)
!10316 = !DILocation(line: 1805, column: 8, scope: !10284)
!10317 = !DILocation(line: 1807, column: 26, scope: !10318)
!10318 = distinct !DILexicalBlock(scope: !10311, file: !3, line: 1806, column: 6)
!10319 = !DILocation(line: 1807, column: 8, scope: !10318)
!10320 = !DILocation(line: 1808, column: 15, scope: !10318)
!10321 = !DILocation(line: 1808, column: 13, scope: !10318)
!10322 = !DILocation(line: 1809, column: 6, scope: !10318)
!10323 = !DILocation(line: 1810, column: 22, scope: !10284)
!10324 = !DILocation(line: 1810, column: 27, scope: !10284)
!10325 = !DILocation(line: 1810, column: 35, scope: !10284)
!10326 = !DILocation(line: 1810, column: 41, scope: !10284)
!10327 = !DILocation(line: 1810, column: 14, scope: !10284)
!10328 = !DILocation(line: 1810, column: 12, scope: !10284)
!10329 = !DILocation(line: 1811, column: 25, scope: !10284)
!10330 = !DILocation(line: 1811, column: 4, scope: !10284)
!10331 = !DILocation(line: 1811, column: 13, scope: !10284)
!10332 = !DILocation(line: 1811, column: 23, scope: !10284)
!10333 = !DILocation(line: 1812, column: 2, scope: !10284)
!10334 = !DILocation(line: 1813, column: 5, scope: !10263)
!10335 = !DILocation(line: 1776, column: 33, scope: !10260)
!10336 = !DILocation(line: 1776, column: 31, scope: !10260)
!10337 = !DILocation(line: 1776, column: 3, scope: !10260)
!10338 = distinct !{!10338, !10261, !10339}
!10339 = !DILocation(line: 1813, column: 5, scope: !10256)
!10340 = !DILocation(line: 1814, column: 1, scope: !10230)
!10341 = distinct !DISubprogram(name: "use_related_value", scope: !3, file: !3, line: 2159, type: !10342, scopeLine: 2160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!10342 = !DISubroutineType(types: !10343)
!10343 = !{!1091, !1091, !2307}
!10344 = !DILocalVariable(name: "x", arg: 1, scope: !10341, file: !3, line: 2159, type: !1091)
!10345 = !DILocation(line: 2159, column: 24, scope: !10341)
!10346 = !DILocalVariable(name: "elt", arg: 2, scope: !10341, file: !3, line: 2159, type: !2307)
!10347 = !DILocation(line: 2159, column: 45, scope: !10341)
!10348 = !DILocalVariable(name: "relt", scope: !10341, file: !3, line: 2161, type: !2307)
!10349 = !DILocation(line: 2161, column: 21, scope: !10341)
!10350 = !DILocalVariable(name: "p", scope: !10341, file: !3, line: 2162, type: !2307)
!10351 = !DILocation(line: 2162, column: 21, scope: !10341)
!10352 = !DILocalVariable(name: "q", scope: !10341, file: !3, line: 2162, type: !2307)
!10353 = !DILocation(line: 2162, column: 25, scope: !10341)
!10354 = !DILocalVariable(name: "offset", scope: !10341, file: !3, line: 2163, type: !1048)
!10355 = !DILocation(line: 2163, column: 17, scope: !10341)
!10356 = !DILocation(line: 2169, column: 7, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !10341, file: !3, line: 2169, column: 7)
!10358 = !DILocation(line: 2169, column: 11, scope: !10357)
!10359 = !DILocation(line: 2169, column: 16, scope: !10357)
!10360 = !DILocation(line: 2169, column: 19, scope: !10357)
!10361 = !DILocation(line: 2169, column: 24, scope: !10357)
!10362 = !DILocation(line: 2169, column: 38, scope: !10357)
!10363 = !DILocation(line: 2169, column: 7, scope: !10341)
!10364 = !DILocation(line: 2170, column: 12, scope: !10357)
!10365 = !DILocation(line: 2170, column: 10, scope: !10357)
!10366 = !DILocation(line: 2170, column: 5, scope: !10357)
!10367 = !DILocation(line: 2171, column: 12, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10357, file: !3, line: 2171, column: 12)
!10369 = !DILocation(line: 2171, column: 16, scope: !10368)
!10370 = !DILocation(line: 2171, column: 21, scope: !10368)
!10371 = !DILocation(line: 2171, column: 24, scope: !10368)
!10372 = !DILocation(line: 2171, column: 37, scope: !10368)
!10373 = !DILocation(line: 2171, column: 12, scope: !10357)
!10374 = !DILocalVariable(name: "subexp", scope: !10375, file: !3, line: 2173, type: !1091)
!10375 = distinct !DILexicalBlock(scope: !10368, file: !3, line: 2172, column: 5)
!10376 = !DILocation(line: 2173, column: 11, scope: !10375)
!10377 = !DILocation(line: 2173, column: 39, scope: !10375)
!10378 = !DILocation(line: 2173, column: 20, scope: !10375)
!10379 = !DILocation(line: 2174, column: 11, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !10375, file: !3, line: 2174, column: 11)
!10381 = !DILocation(line: 2174, column: 18, scope: !10380)
!10382 = !DILocation(line: 2174, column: 11, scope: !10375)
!10383 = !DILocation(line: 2175, column: 17, scope: !10380)
!10384 = !DILocation(line: 2176, column: 10, scope: !10380)
!10385 = !DILocation(line: 2177, column: 10, scope: !10380)
!10386 = !DILocation(line: 2175, column: 9, scope: !10380)
!10387 = !DILocation(line: 2175, column: 7, scope: !10380)
!10388 = !DILocation(line: 2175, column: 2, scope: !10380)
!10389 = !DILocation(line: 2178, column: 5, scope: !10375)
!10390 = !DILocation(line: 2180, column: 7, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10341, file: !3, line: 2180, column: 7)
!10392 = !DILocation(line: 2180, column: 12, scope: !10391)
!10393 = !DILocation(line: 2180, column: 7, scope: !10341)
!10394 = !DILocation(line: 2181, column: 5, scope: !10391)
!10395 = !DILocation(line: 2186, column: 7, scope: !10341)
!10396 = !DILocation(line: 2186, column: 5, scope: !10341)
!10397 = !DILocation(line: 2187, column: 3, scope: !10341)
!10398 = !DILocation(line: 2198, column: 24, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10400, file: !3, line: 2198, column: 11)
!10400 = distinct !DILexicalBlock(scope: !10341, file: !3, line: 2188, column: 5)
!10401 = !DILocation(line: 2198, column: 27, scope: !10399)
!10402 = !DILocation(line: 2198, column: 30, scope: !10399)
!10403 = !DILocation(line: 2198, column: 11, scope: !10399)
!10404 = !DILocation(line: 2198, column: 11, scope: !10400)
!10405 = !DILocation(line: 2199, column: 4, scope: !10399)
!10406 = !DILocation(line: 2199, column: 2, scope: !10399)
!10407 = !DILocation(line: 2201, column: 11, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !10399, file: !3, line: 2201, column: 2)
!10409 = !DILocation(line: 2201, column: 14, scope: !10408)
!10410 = !DILocation(line: 2201, column: 9, scope: !10408)
!10411 = !DILocation(line: 2201, column: 7, scope: !10408)
!10412 = !DILocation(line: 2201, column: 32, scope: !10413)
!10413 = distinct !DILexicalBlock(scope: !10408, file: !3, line: 2201, column: 2)
!10414 = !DILocation(line: 2201, column: 2, scope: !10408)
!10415 = !DILocation(line: 2202, column: 8, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10413, file: !3, line: 2202, column: 8)
!10417 = !DILocation(line: 2202, column: 8, scope: !10413)
!10418 = !DILocation(line: 2203, column: 6, scope: !10416)
!10419 = !DILocation(line: 2201, column: 39, scope: !10413)
!10420 = !DILocation(line: 2201, column: 42, scope: !10413)
!10421 = !DILocation(line: 2201, column: 37, scope: !10413)
!10422 = !DILocation(line: 2201, column: 2, scope: !10413)
!10423 = distinct !{!10423, !10414, !10424}
!10424 = !DILocation(line: 2203, column: 6, scope: !10408)
!10425 = !DILocation(line: 2205, column: 11, scope: !10426)
!10426 = distinct !DILexicalBlock(scope: !10400, file: !3, line: 2205, column: 11)
!10427 = !DILocation(line: 2205, column: 11, scope: !10400)
!10428 = !DILocation(line: 2206, column: 2, scope: !10426)
!10429 = !DILocation(line: 2208, column: 11, scope: !10400)
!10430 = !DILocation(line: 2208, column: 14, scope: !10400)
!10431 = !DILocation(line: 2208, column: 9, scope: !10400)
!10432 = !DILocation(line: 2213, column: 11, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10400, file: !3, line: 2213, column: 11)
!10434 = !DILocation(line: 2213, column: 16, scope: !10433)
!10435 = !DILocation(line: 2213, column: 13, scope: !10433)
!10436 = !DILocation(line: 2213, column: 21, scope: !10433)
!10437 = !DILocation(line: 2213, column: 24, scope: !10433)
!10438 = !DILocation(line: 2213, column: 26, scope: !10433)
!10439 = !DILocation(line: 2213, column: 11, scope: !10400)
!10440 = !DILocation(line: 2214, column: 2, scope: !10433)
!10441 = distinct !{!10441, !10397, !10442}
!10442 = !DILocation(line: 2215, column: 5, scope: !10341)
!10443 = !DILocation(line: 2217, column: 7, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10341, file: !3, line: 2217, column: 7)
!10445 = !DILocation(line: 2217, column: 9, scope: !10444)
!10446 = !DILocation(line: 2217, column: 7, scope: !10341)
!10447 = !DILocation(line: 2218, column: 5, scope: !10444)
!10448 = !DILocation(line: 2220, column: 31, scope: !10341)
!10449 = !DILocation(line: 2220, column: 13, scope: !10341)
!10450 = !DILocation(line: 2220, column: 54, scope: !10341)
!10451 = !DILocation(line: 2220, column: 57, scope: !10341)
!10452 = !DILocation(line: 2220, column: 36, scope: !10341)
!10453 = !DILocation(line: 2220, column: 34, scope: !10341)
!10454 = !DILocation(line: 2220, column: 10, scope: !10341)
!10455 = !DILocation(line: 2222, column: 25, scope: !10341)
!10456 = !DILocation(line: 2222, column: 28, scope: !10341)
!10457 = !DILocation(line: 2222, column: 33, scope: !10341)
!10458 = !DILocation(line: 2222, column: 10, scope: !10341)
!10459 = !DILocation(line: 2222, column: 3, scope: !10341)
!10460 = !DILocation(line: 2223, column: 1, scope: !10341)
!10461 = distinct !DISubprogram(name: "try_const_anchors", scope: !3, file: !3, line: 1360, type: !10462, scopeLine: 1361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!10462 = !DISubroutineType(types: !10463)
!10463 = !{!1091, !1091, !5}
!10464 = !DILocalVariable(name: "src_const", arg: 1, scope: !10461, file: !3, line: 1360, type: !1091)
!10465 = !DILocation(line: 1360, column: 24, scope: !10461)
!10466 = !DILocalVariable(name: "mode", arg: 2, scope: !10461, file: !3, line: 1360, type: !5)
!10467 = !DILocation(line: 1360, column: 53, scope: !10461)
!10468 = !DILocalVariable(name: "lower_elt", scope: !10461, file: !3, line: 1362, type: !2307)
!10469 = !DILocation(line: 1362, column: 21, scope: !10461)
!10470 = !DILocalVariable(name: "upper_elt", scope: !10461, file: !3, line: 1362, type: !2307)
!10471 = !DILocation(line: 1362, column: 33, scope: !10461)
!10472 = !DILocalVariable(name: "lower_base", scope: !10461, file: !3, line: 1363, type: !1048)
!10473 = !DILocation(line: 1363, column: 17, scope: !10461)
!10474 = !DILocalVariable(name: "lower_offs", scope: !10461, file: !3, line: 1363, type: !1048)
!10475 = !DILocation(line: 1363, column: 29, scope: !10461)
!10476 = !DILocalVariable(name: "upper_base", scope: !10461, file: !3, line: 1363, type: !1048)
!10477 = !DILocation(line: 1363, column: 41, scope: !10461)
!10478 = !DILocalVariable(name: "upper_offs", scope: !10461, file: !3, line: 1363, type: !1048)
!10479 = !DILocation(line: 1363, column: 53, scope: !10461)
!10480 = !DILocalVariable(name: "lower_anchor_rtx", scope: !10461, file: !3, line: 1364, type: !1091)
!10481 = !DILocation(line: 1364, column: 7, scope: !10461)
!10482 = !DILocalVariable(name: "upper_anchor_rtx", scope: !10461, file: !3, line: 1364, type: !1091)
!10483 = !DILocation(line: 1364, column: 25, scope: !10461)
!10484 = !DILocalVariable(name: "lower_exp", scope: !10461, file: !3, line: 1365, type: !1091)
!10485 = !DILocation(line: 1365, column: 7, scope: !10461)
!10486 = !DILocalVariable(name: "upper_exp", scope: !10461, file: !3, line: 1365, type: !1091)
!10487 = !DILocation(line: 1365, column: 29, scope: !10461)
!10488 = !DILocalVariable(name: "lower_old", scope: !10461, file: !3, line: 1366, type: !7)
!10489 = !DILocation(line: 1366, column: 12, scope: !10461)
!10490 = !DILocalVariable(name: "upper_old", scope: !10461, file: !3, line: 1366, type: !7)
!10491 = !DILocation(line: 1366, column: 23, scope: !10461)
!10492 = !DILocation(line: 1368, column: 31, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10461, file: !3, line: 1368, column: 7)
!10494 = !DILocation(line: 1368, column: 8, scope: !10493)
!10495 = !DILocation(line: 1368, column: 7, scope: !10461)
!10496 = !DILocation(line: 1370, column: 5, scope: !10493)
!10497 = !DILocation(line: 1372, column: 22, scope: !10461)
!10498 = !DILocation(line: 1372, column: 20, scope: !10461)
!10499 = !DILocation(line: 1373, column: 22, scope: !10461)
!10500 = !DILocation(line: 1373, column: 20, scope: !10461)
!10501 = !DILocation(line: 1374, column: 23, scope: !10461)
!10502 = !DILocation(line: 1374, column: 41, scope: !10461)
!10503 = !DILocation(line: 1374, column: 72, scope: !10461)
!10504 = !DILocation(line: 1374, column: 15, scope: !10461)
!10505 = !DILocation(line: 1374, column: 13, scope: !10461)
!10506 = !DILocation(line: 1375, column: 23, scope: !10461)
!10507 = !DILocation(line: 1375, column: 41, scope: !10461)
!10508 = !DILocation(line: 1375, column: 72, scope: !10461)
!10509 = !DILocation(line: 1375, column: 15, scope: !10461)
!10510 = !DILocation(line: 1375, column: 13, scope: !10461)
!10511 = !DILocation(line: 1377, column: 7, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10461, file: !3, line: 1377, column: 7)
!10513 = !DILocation(line: 1377, column: 7, scope: !10461)
!10514 = !DILocation(line: 1378, column: 44, scope: !10512)
!10515 = !DILocation(line: 1378, column: 55, scope: !10512)
!10516 = !DILocation(line: 1378, column: 17, scope: !10512)
!10517 = !DILocation(line: 1378, column: 15, scope: !10512)
!10518 = !DILocation(line: 1378, column: 5, scope: !10512)
!10519 = !DILocation(line: 1379, column: 7, scope: !10520)
!10520 = distinct !DILexicalBlock(scope: !10461, file: !3, line: 1379, column: 7)
!10521 = !DILocation(line: 1379, column: 7, scope: !10461)
!10522 = !DILocation(line: 1380, column: 44, scope: !10520)
!10523 = !DILocation(line: 1380, column: 55, scope: !10520)
!10524 = !DILocation(line: 1380, column: 17, scope: !10520)
!10525 = !DILocation(line: 1380, column: 15, scope: !10520)
!10526 = !DILocation(line: 1380, column: 5, scope: !10520)
!10527 = !DILocation(line: 1382, column: 8, scope: !10528)
!10528 = distinct !DILexicalBlock(scope: !10461, file: !3, line: 1382, column: 7)
!10529 = !DILocation(line: 1382, column: 7, scope: !10461)
!10530 = !DILocation(line: 1383, column: 12, scope: !10528)
!10531 = !DILocation(line: 1383, column: 5, scope: !10528)
!10532 = !DILocation(line: 1384, column: 8, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10461, file: !3, line: 1384, column: 7)
!10534 = !DILocation(line: 1384, column: 7, scope: !10461)
!10535 = !DILocation(line: 1385, column: 12, scope: !10533)
!10536 = !DILocation(line: 1385, column: 5, scope: !10533)
!10537 = !DILocation(line: 1388, column: 11, scope: !10461)
!10538 = !DILocation(line: 1388, column: 23, scope: !10461)
!10539 = !DILocation(line: 1388, column: 21, scope: !10461)
!10540 = !DILocation(line: 1388, column: 35, scope: !10461)
!10541 = !DILocation(line: 1388, column: 47, scope: !10461)
!10542 = !DILocation(line: 1388, column: 3, scope: !10461)
!10543 = !DILocation(line: 1389, column: 1, scope: !10461)
!10544 = distinct !DISubprogram(name: "notreg_cost", scope: !3, file: !3, line: 756, type: !10545, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!10545 = !DISubroutineType(types: !10546)
!10546 = !{!1053, !1091, !384}
!10547 = !DILocalVariable(name: "x", arg: 1, scope: !10544, file: !3, line: 756, type: !1091)
!10548 = !DILocation(line: 756, column: 18, scope: !10544)
!10549 = !DILocalVariable(name: "outer", arg: 2, scope: !10544, file: !3, line: 756, type: !384)
!10550 = !DILocation(line: 756, column: 35, scope: !10544)
!10551 = !DILocation(line: 758, column: 12, scope: !10544)
!10552 = !DILocation(line: 758, column: 25, scope: !10544)
!10553 = !DILocation(line: 759, column: 5, scope: !10544)
!10554 = !DILocation(line: 759, column: 8, scope: !10544)
!10555 = !DILocation(line: 760, column: 5, scope: !10544)
!10556 = !DILocation(line: 760, column: 8, scope: !10544)
!10557 = !DILocation(line: 760, column: 38, scope: !10544)
!10558 = !DILocation(line: 761, column: 5, scope: !10544)
!10559 = !DILocation(line: 761, column: 8, scope: !10544)
!10560 = !DILocation(line: 761, column: 51, scope: !10544)
!10561 = !DILocation(line: 762, column: 5, scope: !10544)
!10562 = !DILocation(line: 762, column: 9, scope: !10544)
!10563 = !DILocation(line: 763, column: 11, scope: !10544)
!10564 = !DILocation(line: 763, column: 9, scope: !10544)
!10565 = !DILocation(line: 764, column: 5, scope: !10544)
!10566 = !DILocation(line: 764, column: 26, scope: !10544)
!10567 = !DILocation(line: 764, column: 8, scope: !10544)
!10568 = !DILocation(line: 758, column: 11, scope: !10544)
!10569 = !DILocation(line: 768, column: 16, scope: !10544)
!10570 = !DILocation(line: 768, column: 19, scope: !10544)
!10571 = !DILocation(line: 768, column: 26, scope: !10544)
!10572 = !DILocation(line: 768, column: 6, scope: !10544)
!10573 = !DILocation(line: 768, column: 53, scope: !10544)
!10574 = !DILocation(line: 758, column: 3, scope: !10544)
!10575 = distinct !DISubprogram(name: "approx_reg_cost", scope: !3, file: !3, line: 707, type: !10576, scopeLine: 708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!10576 = !DISubroutineType(types: !10577)
!10577 = !{!1053, !1091}
!10578 = !DILocalVariable(name: "x", arg: 1, scope: !10575, file: !3, line: 707, type: !1091)
!10579 = !DILocation(line: 707, column: 22, scope: !10575)
!10580 = !DILocalVariable(name: "cost", scope: !10575, file: !3, line: 709, type: !1053)
!10581 = !DILocation(line: 709, column: 7, scope: !10575)
!10582 = !DILocation(line: 711, column: 44, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10575, file: !3, line: 711, column: 7)
!10584 = !DILocation(line: 711, column: 7, scope: !10583)
!10585 = !DILocation(line: 711, column: 7, scope: !10575)
!10586 = !DILocation(line: 712, column: 5, scope: !10583)
!10587 = !DILocation(line: 714, column: 10, scope: !10575)
!10588 = !DILocation(line: 714, column: 3, scope: !10575)
!10589 = !DILocation(line: 715, column: 1, scope: !10575)
!10590 = distinct !DISubprogram(name: "preferable", scope: !3, file: !3, line: 722, type: !10591, scopeLine: 723, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!10591 = !DISubroutineType(types: !10592)
!10592 = !{!1053, !1053, !1053, !1053, !1053}
!10593 = !DILocalVariable(name: "cost_a", arg: 1, scope: !10590, file: !3, line: 722, type: !1053)
!10594 = !DILocation(line: 722, column: 17, scope: !10590)
!10595 = !DILocalVariable(name: "regcost_a", arg: 2, scope: !10590, file: !3, line: 722, type: !1053)
!10596 = !DILocation(line: 722, column: 29, scope: !10590)
!10597 = !DILocalVariable(name: "cost_b", arg: 3, scope: !10590, file: !3, line: 722, type: !1053)
!10598 = !DILocation(line: 722, column: 44, scope: !10590)
!10599 = !DILocalVariable(name: "regcost_b", arg: 4, scope: !10590, file: !3, line: 722, type: !1053)
!10600 = !DILocation(line: 722, column: 56, scope: !10590)
!10601 = !DILocation(line: 726, column: 7, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10590, file: !3, line: 726, column: 7)
!10603 = !DILocation(line: 726, column: 17, scope: !10602)
!10604 = !DILocation(line: 726, column: 14, scope: !10602)
!10605 = !DILocation(line: 726, column: 7, scope: !10590)
!10606 = !DILocation(line: 728, column: 11, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10608, file: !3, line: 728, column: 11)
!10608 = distinct !DILexicalBlock(scope: !10602, file: !3, line: 727, column: 5)
!10609 = !DILocation(line: 728, column: 18, scope: !10607)
!10610 = !DILocation(line: 728, column: 11, scope: !10608)
!10611 = !DILocation(line: 729, column: 2, scope: !10607)
!10612 = !DILocation(line: 730, column: 11, scope: !10613)
!10613 = distinct !DILexicalBlock(scope: !10608, file: !3, line: 730, column: 11)
!10614 = !DILocation(line: 730, column: 18, scope: !10613)
!10615 = !DILocation(line: 730, column: 11, scope: !10608)
!10616 = !DILocation(line: 731, column: 2, scope: !10613)
!10617 = !DILocation(line: 732, column: 5, scope: !10608)
!10618 = !DILocation(line: 735, column: 7, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10590, file: !3, line: 735, column: 7)
!10620 = !DILocation(line: 735, column: 20, scope: !10619)
!10621 = !DILocation(line: 735, column: 17, scope: !10619)
!10622 = !DILocation(line: 735, column: 7, scope: !10590)
!10623 = !DILocation(line: 737, column: 11, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !10625, file: !3, line: 737, column: 11)
!10625 = distinct !DILexicalBlock(scope: !10619, file: !3, line: 736, column: 5)
!10626 = !DILocation(line: 737, column: 21, scope: !10624)
!10627 = !DILocation(line: 737, column: 11, scope: !10625)
!10628 = !DILocation(line: 738, column: 2, scope: !10624)
!10629 = !DILocation(line: 739, column: 11, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10625, file: !3, line: 739, column: 11)
!10631 = !DILocation(line: 739, column: 21, scope: !10630)
!10632 = !DILocation(line: 739, column: 11, scope: !10625)
!10633 = !DILocation(line: 740, column: 2, scope: !10630)
!10634 = !DILocation(line: 741, column: 5, scope: !10625)
!10635 = !DILocation(line: 744, column: 7, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10590, file: !3, line: 744, column: 7)
!10637 = !DILocation(line: 744, column: 17, scope: !10636)
!10638 = !DILocation(line: 744, column: 14, scope: !10636)
!10639 = !DILocation(line: 744, column: 7, scope: !10590)
!10640 = !DILocation(line: 745, column: 12, scope: !10636)
!10641 = !DILocation(line: 745, column: 21, scope: !10636)
!10642 = !DILocation(line: 745, column: 19, scope: !10636)
!10643 = !DILocation(line: 745, column: 5, scope: !10636)
!10644 = !DILocation(line: 747, column: 7, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10590, file: !3, line: 747, column: 7)
!10646 = !DILocation(line: 747, column: 20, scope: !10645)
!10647 = !DILocation(line: 747, column: 17, scope: !10645)
!10648 = !DILocation(line: 747, column: 7, scope: !10590)
!10649 = !DILocation(line: 748, column: 12, scope: !10645)
!10650 = !DILocation(line: 748, column: 24, scope: !10645)
!10651 = !DILocation(line: 748, column: 22, scope: !10645)
!10652 = !DILocation(line: 748, column: 5, scope: !10645)
!10653 = !DILocation(line: 749, column: 3, scope: !10590)
!10654 = !DILocation(line: 750, column: 1, scope: !10590)
!10655 = distinct !DISubprogram(name: "insert_regs", scope: !3, file: !3, line: 1137, type: !10656, scopeLine: 1138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!10656 = !DISubroutineType(types: !10657)
!10657 = !{!1053, !1091, !2307, !1053}
!10658 = !DILocalVariable(name: "x", arg: 1, scope: !10655, file: !3, line: 1137, type: !1091)
!10659 = !DILocation(line: 1137, column: 18, scope: !10655)
!10660 = !DILocalVariable(name: "classp", arg: 2, scope: !10655, file: !3, line: 1137, type: !2307)
!10661 = !DILocation(line: 1137, column: 39, scope: !10655)
!10662 = !DILocalVariable(name: "modified", arg: 3, scope: !10655, file: !3, line: 1137, type: !1053)
!10663 = !DILocation(line: 1137, column: 51, scope: !10655)
!10664 = !DILocation(line: 1139, column: 7, scope: !10665)
!10665 = distinct !DILexicalBlock(scope: !10655, file: !3, line: 1139, column: 7)
!10666 = !DILocation(line: 1139, column: 7, scope: !10655)
!10667 = !DILocalVariable(name: "regno", scope: !10668, file: !3, line: 1141, type: !7)
!10668 = distinct !DILexicalBlock(scope: !10665, file: !3, line: 1140, column: 5)
!10669 = !DILocation(line: 1141, column: 20, scope: !10668)
!10670 = !DILocation(line: 1141, column: 28, scope: !10668)
!10671 = !DILocalVariable(name: "qty_valid", scope: !10668, file: !3, line: 1142, type: !1053)
!10672 = !DILocation(line: 1142, column: 11, scope: !10668)
!10673 = !DILocation(line: 1147, column: 19, scope: !10668)
!10674 = !DILocation(line: 1147, column: 17, scope: !10668)
!10675 = !DILocation(line: 1148, column: 11, scope: !10676)
!10676 = distinct !DILexicalBlock(scope: !10668, file: !3, line: 1148, column: 11)
!10677 = !DILocation(line: 1148, column: 11, scope: !10668)
!10678 = !DILocalVariable(name: "ent", scope: !10679, file: !3, line: 1150, type: !2216)
!10679 = distinct !DILexicalBlock(scope: !10676, file: !3, line: 1149, column: 2)
!10680 = !DILocation(line: 1150, column: 27, scope: !10679)
!10681 = !DILocation(line: 1150, column: 34, scope: !10679)
!10682 = !DILocation(line: 1150, column: 44, scope: !10679)
!10683 = !DILocation(line: 1152, column: 8, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10679, file: !3, line: 1152, column: 8)
!10685 = !DILocation(line: 1152, column: 13, scope: !10684)
!10686 = !DILocation(line: 1152, column: 21, scope: !10684)
!10687 = !DILocation(line: 1152, column: 18, scope: !10684)
!10688 = !DILocation(line: 1152, column: 8, scope: !10679)
!10689 = !DILocation(line: 1153, column: 6, scope: !10684)
!10690 = !DILocation(line: 1154, column: 2, scope: !10679)
!10691 = !DILocation(line: 1156, column: 11, scope: !10692)
!10692 = distinct !DILexicalBlock(scope: !10668, file: !3, line: 1156, column: 11)
!10693 = !DILocation(line: 1156, column: 20, scope: !10692)
!10694 = !DILocation(line: 1156, column: 25, scope: !10692)
!10695 = !DILocation(line: 1156, column: 11, scope: !10668)
!10696 = !DILocation(line: 1158, column: 8, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10698, file: !3, line: 1158, column: 8)
!10698 = distinct !DILexicalBlock(scope: !10692, file: !3, line: 1157, column: 2)
!10699 = !DILocation(line: 1158, column: 8, scope: !10698)
!10700 = !DILocation(line: 1159, column: 20, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10697, file: !3, line: 1159, column: 6)
!10702 = !DILocation(line: 1159, column: 28, scope: !10701)
!10703 = !DILocation(line: 1159, column: 18, scope: !10701)
!10704 = !DILocation(line: 1159, column: 11, scope: !10701)
!10705 = !DILocation(line: 1160, column: 4, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10701, file: !3, line: 1159, column: 6)
!10707 = !DILocation(line: 1160, column: 11, scope: !10706)
!10708 = !DILocation(line: 1159, column: 6, scope: !10701)
!10709 = !DILocation(line: 1162, column: 12, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10706, file: !3, line: 1162, column: 12)
!10711 = !DILocation(line: 1163, column: 5, scope: !10710)
!10712 = !DILocation(line: 1163, column: 8, scope: !10710)
!10713 = !DILocation(line: 1163, column: 34, scope: !10710)
!10714 = !DILocation(line: 1163, column: 31, scope: !10710)
!10715 = !DILocation(line: 1162, column: 12, scope: !10706)
!10716 = !DILocalVariable(name: "c_regno", scope: !10717, file: !3, line: 1165, type: !7)
!10717 = distinct !DILexicalBlock(scope: !10710, file: !3, line: 1164, column: 3)
!10718 = !DILocation(line: 1165, column: 14, scope: !10717)
!10719 = !DILocation(line: 1165, column: 24, scope: !10717)
!10720 = !DILocation(line: 1167, column: 5, scope: !10717)
!10721 = !DILocation(line: 1179, column: 9, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10717, file: !3, line: 1179, column: 9)
!10723 = !DILocation(line: 1179, column: 19, scope: !10722)
!10724 = !DILocation(line: 1179, column: 38, scope: !10722)
!10725 = !DILocation(line: 1179, column: 46, scope: !10722)
!10726 = !DILocation(line: 1179, column: 43, scope: !10722)
!10727 = !DILocation(line: 1179, column: 9, scope: !10717)
!10728 = !DILocation(line: 1180, column: 7, scope: !10722)
!10729 = !DILocation(line: 1182, column: 20, scope: !10717)
!10730 = !DILocation(line: 1182, column: 27, scope: !10717)
!10731 = !DILocation(line: 1182, column: 5, scope: !10717)
!10732 = !DILocation(line: 1183, column: 5, scope: !10717)
!10733 = !DILocation(line: 1161, column: 13, scope: !10706)
!10734 = !DILocation(line: 1161, column: 21, scope: !10706)
!10735 = !DILocation(line: 1161, column: 11, scope: !10706)
!10736 = !DILocation(line: 1159, column: 6, scope: !10706)
!10737 = distinct !{!10737, !10708, !10738}
!10738 = !DILocation(line: 1184, column: 3, scope: !10701)
!10739 = !DILocation(line: 1195, column: 10, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10698, file: !3, line: 1195, column: 8)
!10741 = !DILocation(line: 1196, column: 8, scope: !10740)
!10742 = !DILocation(line: 1196, column: 11, scope: !10740)
!10743 = !DILocation(line: 1196, column: 32, scope: !10740)
!10744 = !DILocation(line: 1197, column: 8, scope: !10740)
!10745 = !DILocation(line: 1197, column: 11, scope: !10740)
!10746 = !DILocation(line: 1197, column: 31, scope: !10740)
!10747 = !DILocation(line: 1197, column: 52, scope: !10740)
!10748 = !DILocation(line: 1197, column: 28, scope: !10740)
!10749 = !DILocation(line: 1195, column: 8, scope: !10698)
!10750 = !DILocation(line: 1198, column: 6, scope: !10740)
!10751 = !DILocation(line: 1198, column: 22, scope: !10740)
!10752 = !DILocation(line: 1199, column: 18, scope: !10698)
!10753 = !DILocation(line: 1199, column: 25, scope: !10698)
!10754 = !DILocation(line: 1199, column: 4, scope: !10698)
!10755 = !DILocation(line: 1200, column: 4, scope: !10698)
!10756 = !DILocation(line: 1203, column: 7, scope: !10668)
!10757 = !DILocation(line: 1212, column: 12, scope: !10758)
!10758 = distinct !DILexicalBlock(scope: !10665, file: !3, line: 1212, column: 12)
!10759 = !DILocation(line: 1212, column: 25, scope: !10758)
!10760 = !DILocation(line: 1212, column: 35, scope: !10758)
!10761 = !DILocation(line: 1212, column: 38, scope: !10758)
!10762 = !DILocation(line: 1213, column: 5, scope: !10758)
!10763 = !DILocation(line: 1213, column: 10, scope: !10758)
!10764 = !DILocation(line: 1212, column: 12, scope: !10665)
!10765 = !DILocation(line: 1215, column: 20, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 1214, column: 5)
!10767 = !DILocation(line: 1215, column: 7, scope: !10766)
!10768 = !DILocation(line: 1216, column: 21, scope: !10766)
!10769 = !DILocation(line: 1216, column: 7, scope: !10766)
!10770 = !DILocation(line: 1217, column: 7, scope: !10766)
!10771 = !DILocation(line: 1220, column: 26, scope: !10758)
!10772 = !DILocation(line: 1220, column: 12, scope: !10758)
!10773 = !DILocation(line: 1220, column: 5, scope: !10758)
!10774 = !DILocation(line: 1221, column: 1, scope: !10655)
!10775 = distinct !DISubprogram(name: "rehash_using_reg", scope: !3, file: !3, line: 2051, type: !5246, scopeLine: 2052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!10776 = !DILocalVariable(name: "x", arg: 1, scope: !10775, file: !3, line: 2051, type: !1091)
!10777 = !DILocation(line: 2051, column: 23, scope: !10775)
!10778 = !DILocalVariable(name: "i", scope: !10775, file: !3, line: 2053, type: !7)
!10779 = !DILocation(line: 2053, column: 16, scope: !10775)
!10780 = !DILocalVariable(name: "p", scope: !10775, file: !3, line: 2054, type: !2307)
!10781 = !DILocation(line: 2054, column: 21, scope: !10775)
!10782 = !DILocalVariable(name: "next", scope: !10775, file: !3, line: 2054, type: !2307)
!10783 = !DILocation(line: 2054, column: 25, scope: !10775)
!10784 = !DILocalVariable(name: "hash", scope: !10775, file: !3, line: 2055, type: !7)
!10785 = !DILocation(line: 2055, column: 12, scope: !10775)
!10786 = !DILocation(line: 2057, column: 7, scope: !10787)
!10787 = distinct !DILexicalBlock(scope: !10775, file: !3, line: 2057, column: 7)
!10788 = !DILocation(line: 2057, column: 20, scope: !10787)
!10789 = !DILocation(line: 2057, column: 7, scope: !10775)
!10790 = !DILocation(line: 2058, column: 9, scope: !10787)
!10791 = !DILocation(line: 2058, column: 7, scope: !10787)
!10792 = !DILocation(line: 2058, column: 5, scope: !10787)
!10793 = !DILocation(line: 2063, column: 8, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10775, file: !3, line: 2063, column: 7)
!10795 = !DILocation(line: 2064, column: 7, scope: !10794)
!10796 = !DILocation(line: 2064, column: 10, scope: !10794)
!10797 = !DILocation(line: 2064, column: 35, scope: !10794)
!10798 = !DILocation(line: 2065, column: 7, scope: !10794)
!10799 = !DILocation(line: 2065, column: 10, scope: !10794)
!10800 = !DILocation(line: 2065, column: 38, scope: !10794)
!10801 = !DILocation(line: 2065, column: 35, scope: !10794)
!10802 = !DILocation(line: 2063, column: 7, scope: !10775)
!10803 = !DILocation(line: 2066, column: 5, scope: !10794)
!10804 = !DILocation(line: 2071, column: 10, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10775, file: !3, line: 2071, column: 3)
!10806 = !DILocation(line: 2071, column: 8, scope: !10805)
!10807 = !DILocation(line: 2071, column: 15, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10805, file: !3, line: 2071, column: 3)
!10809 = !DILocation(line: 2071, column: 17, scope: !10808)
!10810 = !DILocation(line: 2071, column: 3, scope: !10805)
!10811 = !DILocation(line: 2072, column: 20, scope: !10812)
!10812 = distinct !DILexicalBlock(scope: !10808, file: !3, line: 2072, column: 5)
!10813 = !DILocation(line: 2072, column: 14, scope: !10812)
!10814 = !DILocation(line: 2072, column: 12, scope: !10812)
!10815 = !DILocation(line: 2072, column: 10, scope: !10812)
!10816 = !DILocation(line: 2072, column: 24, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10812, file: !3, line: 2072, column: 5)
!10818 = !DILocation(line: 2072, column: 5, scope: !10812)
!10819 = !DILocation(line: 2074, column: 9, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10817, file: !3, line: 2073, column: 7)
!10821 = !DILocation(line: 2074, column: 12, scope: !10820)
!10822 = !DILocation(line: 2074, column: 7, scope: !10820)
!10823 = !DILocation(line: 2075, column: 23, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10820, file: !3, line: 2075, column: 6)
!10825 = !DILocation(line: 2075, column: 26, scope: !10824)
!10826 = !DILocation(line: 2075, column: 29, scope: !10824)
!10827 = !DILocation(line: 2075, column: 6, scope: !10824)
!10828 = !DILocation(line: 2076, column: 6, scope: !10824)
!10829 = !DILocation(line: 2076, column: 22, scope: !10824)
!10830 = !DILocation(line: 2076, column: 25, scope: !10824)
!10831 = !DILocation(line: 2076, column: 30, scope: !10824)
!10832 = !DILocation(line: 2076, column: 33, scope: !10824)
!10833 = !DILocation(line: 2076, column: 9, scope: !10824)
!10834 = !DILocation(line: 2077, column: 6, scope: !10824)
!10835 = !DILocation(line: 2077, column: 9, scope: !10824)
!10836 = !DILocation(line: 2077, column: 22, scope: !10824)
!10837 = !DILocation(line: 2077, column: 20, scope: !10824)
!10838 = !DILocation(line: 2077, column: 11, scope: !10824)
!10839 = !DILocation(line: 2075, column: 6, scope: !10820)
!10840 = !DILocation(line: 2079, column: 10, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10842, file: !3, line: 2079, column: 10)
!10842 = distinct !DILexicalBlock(scope: !10824, file: !3, line: 2078, column: 4)
!10843 = !DILocation(line: 2079, column: 13, scope: !10841)
!10844 = !DILocation(line: 2079, column: 10, scope: !10842)
!10845 = !DILocation(line: 2080, column: 44, scope: !10841)
!10846 = !DILocation(line: 2080, column: 47, scope: !10841)
!10847 = !DILocation(line: 2080, column: 8, scope: !10841)
!10848 = !DILocation(line: 2080, column: 11, scope: !10841)
!10849 = !DILocation(line: 2080, column: 27, scope: !10841)
!10850 = !DILocation(line: 2080, column: 42, scope: !10841)
!10851 = !DILocation(line: 2082, column: 10, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10842, file: !3, line: 2082, column: 10)
!10853 = !DILocation(line: 2082, column: 13, scope: !10852)
!10854 = !DILocation(line: 2082, column: 10, scope: !10842)
!10855 = !DILocation(line: 2083, column: 44, scope: !10852)
!10856 = !DILocation(line: 2083, column: 47, scope: !10852)
!10857 = !DILocation(line: 2083, column: 8, scope: !10852)
!10858 = !DILocation(line: 2083, column: 11, scope: !10852)
!10859 = !DILocation(line: 2083, column: 27, scope: !10852)
!10860 = !DILocation(line: 2083, column: 42, scope: !10852)
!10861 = !DILocation(line: 2085, column: 19, scope: !10852)
!10862 = !DILocation(line: 2085, column: 22, scope: !10852)
!10863 = !DILocation(line: 2085, column: 14, scope: !10852)
!10864 = !DILocation(line: 2085, column: 8, scope: !10852)
!10865 = !DILocation(line: 2085, column: 17, scope: !10852)
!10866 = !DILocation(line: 2087, column: 32, scope: !10842)
!10867 = !DILocation(line: 2087, column: 26, scope: !10842)
!10868 = !DILocation(line: 2087, column: 6, scope: !10842)
!10869 = !DILocation(line: 2087, column: 9, scope: !10842)
!10870 = !DILocation(line: 2087, column: 24, scope: !10842)
!10871 = !DILocation(line: 2088, column: 6, scope: !10842)
!10872 = !DILocation(line: 2088, column: 9, scope: !10842)
!10873 = !DILocation(line: 2088, column: 24, scope: !10842)
!10874 = !DILocation(line: 2089, column: 16, scope: !10875)
!10875 = distinct !DILexicalBlock(scope: !10842, file: !3, line: 2089, column: 10)
!10876 = !DILocation(line: 2089, column: 10, scope: !10875)
!10877 = !DILocation(line: 2089, column: 10, scope: !10842)
!10878 = !DILocation(line: 2090, column: 38, scope: !10875)
!10879 = !DILocation(line: 2090, column: 14, scope: !10875)
!10880 = !DILocation(line: 2090, column: 8, scope: !10875)
!10881 = !DILocation(line: 2090, column: 21, scope: !10875)
!10882 = !DILocation(line: 2090, column: 36, scope: !10875)
!10883 = !DILocation(line: 2091, column: 20, scope: !10842)
!10884 = !DILocation(line: 2091, column: 12, scope: !10842)
!10885 = !DILocation(line: 2091, column: 6, scope: !10842)
!10886 = !DILocation(line: 2091, column: 18, scope: !10842)
!10887 = !DILocation(line: 2092, column: 4, scope: !10842)
!10888 = !DILocation(line: 2093, column: 7, scope: !10820)
!10889 = !DILocation(line: 2072, column: 31, scope: !10817)
!10890 = !DILocation(line: 2072, column: 29, scope: !10817)
!10891 = !DILocation(line: 2072, column: 5, scope: !10817)
!10892 = distinct !{!10892, !10818, !10893}
!10893 = !DILocation(line: 2093, column: 7, scope: !10812)
!10894 = !DILocation(line: 2071, column: 31, scope: !10808)
!10895 = !DILocation(line: 2071, column: 3, scope: !10808)
!10896 = distinct !{!10896, !10810, !10897}
!10897 = !DILocation(line: 2093, column: 7, scope: !10805)
!10898 = !DILocation(line: 2094, column: 1, scope: !10775)
!10899 = distinct !DISubprogram(name: "insert", scope: !3, file: !3, line: 1746, type: !10900, scopeLine: 1748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!10900 = !DISubroutineType(types: !10901)
!10901 = !{!2307, !1091, !2307, !7, !5}
!10902 = !DILocalVariable(name: "x", arg: 1, scope: !10899, file: !3, line: 1746, type: !1091)
!10903 = !DILocation(line: 1746, column: 13, scope: !10899)
!10904 = !DILocalVariable(name: "classp", arg: 2, scope: !10899, file: !3, line: 1746, type: !2307)
!10905 = !DILocation(line: 1746, column: 34, scope: !10899)
!10906 = !DILocalVariable(name: "hash", arg: 3, scope: !10899, file: !3, line: 1746, type: !7)
!10907 = !DILocation(line: 1746, column: 55, scope: !10899)
!10908 = !DILocalVariable(name: "mode", arg: 4, scope: !10899, file: !3, line: 1747, type: !5)
!10909 = !DILocation(line: 1747, column: 20, scope: !10899)
!10910 = !DILocation(line: 1750, column: 24, scope: !10899)
!10911 = !DILocation(line: 1750, column: 27, scope: !10899)
!10912 = !DILocation(line: 1750, column: 35, scope: !10899)
!10913 = !DILocation(line: 1750, column: 41, scope: !10899)
!10914 = !DILocation(line: 1750, column: 47, scope: !10899)
!10915 = !DILocation(line: 1750, column: 74, scope: !10899)
!10916 = !DILocation(line: 1750, column: 57, scope: !10899)
!10917 = !DILocation(line: 1750, column: 5, scope: !10899)
!10918 = !DILocation(line: 1749, column: 3, scope: !10899)
!10919 = distinct !DISubprogram(name: "invalidate_from_clobbers", scope: !3, file: !3, line: 5944, type: !5246, scopeLine: 5945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!10920 = !DILocalVariable(name: "x", arg: 1, scope: !10919, file: !3, line: 5944, type: !1091)
!10921 = !DILocation(line: 5944, column: 31, scope: !10919)
!10922 = !DILocation(line: 5946, column: 7, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10919, file: !3, line: 5946, column: 7)
!10924 = !DILocation(line: 5946, column: 20, scope: !10923)
!10925 = !DILocation(line: 5946, column: 7, scope: !10919)
!10926 = !DILocalVariable(name: "ref", scope: !10927, file: !3, line: 5948, type: !1091)
!10927 = distinct !DILexicalBlock(scope: !10923, file: !3, line: 5947, column: 5)
!10928 = !DILocation(line: 5948, column: 11, scope: !10927)
!10929 = !DILocation(line: 5948, column: 17, scope: !10927)
!10930 = !DILocation(line: 5949, column: 11, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10927, file: !3, line: 5949, column: 11)
!10932 = !DILocation(line: 5949, column: 11, scope: !10927)
!10933 = !DILocation(line: 5951, column: 8, scope: !10934)
!10934 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 5951, column: 8)
!10935 = distinct !DILexicalBlock(scope: !10931, file: !3, line: 5950, column: 2)
!10936 = !DILocation(line: 5951, column: 20, scope: !10934)
!10937 = !DILocation(line: 5951, column: 23, scope: !10934)
!10938 = !DILocation(line: 5951, column: 38, scope: !10934)
!10939 = !DILocation(line: 5952, column: 8, scope: !10934)
!10940 = !DILocation(line: 5952, column: 11, scope: !10934)
!10941 = !DILocation(line: 5951, column: 8, scope: !10935)
!10942 = !DILocation(line: 5953, column: 18, scope: !10934)
!10943 = !DILocation(line: 5953, column: 6, scope: !10934)
!10944 = !DILocation(line: 5954, column: 13, scope: !10945)
!10945 = distinct !DILexicalBlock(scope: !10934, file: !3, line: 5954, column: 13)
!10946 = !DILocation(line: 5954, column: 28, scope: !10945)
!10947 = !DILocation(line: 5955, column: 6, scope: !10945)
!10948 = !DILocation(line: 5955, column: 9, scope: !10945)
!10949 = !DILocation(line: 5955, column: 24, scope: !10945)
!10950 = !DILocation(line: 5954, column: 13, scope: !10934)
!10951 = !DILocation(line: 5956, column: 18, scope: !10945)
!10952 = !DILocation(line: 5956, column: 33, scope: !10945)
!10953 = !DILocation(line: 5956, column: 6, scope: !10945)
!10954 = !DILocation(line: 5957, column: 2, scope: !10935)
!10955 = !DILocation(line: 5958, column: 5, scope: !10927)
!10956 = !DILocation(line: 5959, column: 12, scope: !10957)
!10957 = distinct !DILexicalBlock(scope: !10923, file: !3, line: 5959, column: 12)
!10958 = !DILocation(line: 5959, column: 25, scope: !10957)
!10959 = !DILocation(line: 5959, column: 12, scope: !10923)
!10960 = !DILocalVariable(name: "i", scope: !10961, file: !3, line: 5961, type: !1053)
!10961 = distinct !DILexicalBlock(scope: !10957, file: !3, line: 5960, column: 5)
!10962 = !DILocation(line: 5961, column: 11, scope: !10961)
!10963 = !DILocation(line: 5962, column: 16, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10961, file: !3, line: 5962, column: 7)
!10965 = !DILocation(line: 5962, column: 31, scope: !10964)
!10966 = !DILocation(line: 5962, column: 14, scope: !10964)
!10967 = !DILocation(line: 5962, column: 12, scope: !10964)
!10968 = !DILocation(line: 5962, column: 36, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10964, file: !3, line: 5962, column: 7)
!10970 = !DILocation(line: 5962, column: 38, scope: !10969)
!10971 = !DILocation(line: 5962, column: 7, scope: !10964)
!10972 = !DILocalVariable(name: "y", scope: !10973, file: !3, line: 5964, type: !1091)
!10973 = distinct !DILexicalBlock(scope: !10969, file: !3, line: 5963, column: 2)
!10974 = !DILocation(line: 5964, column: 8, scope: !10973)
!10975 = !DILocation(line: 5964, column: 12, scope: !10973)
!10976 = !DILocation(line: 5965, column: 8, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !10973, file: !3, line: 5965, column: 8)
!10978 = !DILocation(line: 5965, column: 21, scope: !10977)
!10979 = !DILocation(line: 5965, column: 8, scope: !10973)
!10980 = !DILocalVariable(name: "ref", scope: !10981, file: !3, line: 5967, type: !1091)
!10981 = distinct !DILexicalBlock(scope: !10977, file: !3, line: 5966, column: 6)
!10982 = !DILocation(line: 5967, column: 12, scope: !10981)
!10983 = !DILocation(line: 5967, column: 18, scope: !10981)
!10984 = !DILocation(line: 5968, column: 12, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10981, file: !3, line: 5968, column: 12)
!10986 = !DILocation(line: 5968, column: 24, scope: !10985)
!10987 = !DILocation(line: 5968, column: 27, scope: !10985)
!10988 = !DILocation(line: 5968, column: 42, scope: !10985)
!10989 = !DILocation(line: 5969, column: 5, scope: !10985)
!10990 = !DILocation(line: 5969, column: 8, scope: !10985)
!10991 = !DILocation(line: 5968, column: 12, scope: !10981)
!10992 = !DILocation(line: 5970, column: 15, scope: !10985)
!10993 = !DILocation(line: 5970, column: 3, scope: !10985)
!10994 = !DILocation(line: 5971, column: 17, scope: !10995)
!10995 = distinct !DILexicalBlock(scope: !10985, file: !3, line: 5971, column: 17)
!10996 = !DILocation(line: 5971, column: 32, scope: !10995)
!10997 = !DILocation(line: 5972, column: 10, scope: !10995)
!10998 = !DILocation(line: 5972, column: 13, scope: !10995)
!10999 = !DILocation(line: 5972, column: 28, scope: !10995)
!11000 = !DILocation(line: 5971, column: 17, scope: !10985)
!11001 = !DILocation(line: 5973, column: 15, scope: !10995)
!11002 = !DILocation(line: 5973, column: 30, scope: !10995)
!11003 = !DILocation(line: 5973, column: 3, scope: !10995)
!11004 = !DILocation(line: 5974, column: 6, scope: !10981)
!11005 = !DILocation(line: 5975, column: 2, scope: !10973)
!11006 = !DILocation(line: 5962, column: 45, scope: !10969)
!11007 = !DILocation(line: 5962, column: 7, scope: !10969)
!11008 = distinct !{!11008, !10971, !11009}
!11009 = !DILocation(line: 5975, column: 2, scope: !10964)
!11010 = !DILocation(line: 5976, column: 5, scope: !10961)
!11011 = !DILocation(line: 5977, column: 1, scope: !10919)
!11012 = distinct !DISubprogram(name: "invalidate_memory", scope: !3, file: !3, line: 5922, type: !4842, scopeLine: 5923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!11013 = !DILocalVariable(name: "i", scope: !11012, file: !3, line: 5924, type: !1053)
!11014 = !DILocation(line: 5924, column: 7, scope: !11012)
!11015 = !DILocalVariable(name: "p", scope: !11012, file: !3, line: 5925, type: !2307)
!11016 = !DILocation(line: 5925, column: 21, scope: !11012)
!11017 = !DILocalVariable(name: "next", scope: !11012, file: !3, line: 5925, type: !2307)
!11018 = !DILocation(line: 5925, column: 25, scope: !11012)
!11019 = !DILocation(line: 5927, column: 10, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !11012, file: !3, line: 5927, column: 3)
!11021 = !DILocation(line: 5927, column: 8, scope: !11020)
!11022 = !DILocation(line: 5927, column: 15, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !11020, file: !3, line: 5927, column: 3)
!11024 = !DILocation(line: 5927, column: 17, scope: !11023)
!11025 = !DILocation(line: 5927, column: 3, scope: !11020)
!11026 = !DILocation(line: 5928, column: 20, scope: !11027)
!11027 = distinct !DILexicalBlock(scope: !11023, file: !3, line: 5928, column: 5)
!11028 = !DILocation(line: 5928, column: 14, scope: !11027)
!11029 = !DILocation(line: 5928, column: 12, scope: !11027)
!11030 = !DILocation(line: 5928, column: 10, scope: !11027)
!11031 = !DILocation(line: 5928, column: 24, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11027, file: !3, line: 5928, column: 5)
!11033 = !DILocation(line: 5928, column: 5, scope: !11027)
!11034 = !DILocation(line: 5930, column: 9, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11032, file: !3, line: 5929, column: 7)
!11036 = !DILocation(line: 5930, column: 12, scope: !11035)
!11037 = !DILocation(line: 5930, column: 7, scope: !11035)
!11038 = !DILocation(line: 5931, column: 6, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !11035, file: !3, line: 5931, column: 6)
!11040 = !DILocation(line: 5931, column: 9, scope: !11039)
!11041 = !DILocation(line: 5931, column: 6, scope: !11035)
!11042 = !DILocation(line: 5932, column: 23, scope: !11039)
!11043 = !DILocation(line: 5932, column: 26, scope: !11039)
!11044 = !DILocation(line: 5932, column: 4, scope: !11039)
!11045 = !DILocation(line: 5933, column: 7, scope: !11035)
!11046 = !DILocation(line: 5928, column: 31, scope: !11032)
!11047 = !DILocation(line: 5928, column: 29, scope: !11032)
!11048 = !DILocation(line: 5928, column: 5, scope: !11032)
!11049 = distinct !{!11049, !11033, !11050}
!11050 = !DILocation(line: 5933, column: 7, scope: !11027)
!11051 = !DILocation(line: 5927, column: 31, scope: !11023)
!11052 = !DILocation(line: 5927, column: 3, scope: !11023)
!11053 = distinct !{!11053, !11025, !11054}
!11054 = !DILocation(line: 5933, column: 7, scope: !11020)
!11055 = !DILocation(line: 5934, column: 1, scope: !11012)
!11056 = distinct !DISubprogram(name: "invalidate_for_call", scope: !3, file: !3, line: 2100, type: !4842, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!11057 = !DILocalVariable(name: "regno", scope: !11056, file: !3, line: 2102, type: !7)
!11058 = !DILocation(line: 2102, column: 16, scope: !11056)
!11059 = !DILocalVariable(name: "endregno", scope: !11056, file: !3, line: 2102, type: !7)
!11060 = !DILocation(line: 2102, column: 23, scope: !11056)
!11061 = !DILocalVariable(name: "i", scope: !11056, file: !3, line: 2103, type: !7)
!11062 = !DILocation(line: 2103, column: 16, scope: !11056)
!11063 = !DILocalVariable(name: "hash", scope: !11056, file: !3, line: 2104, type: !7)
!11064 = !DILocation(line: 2104, column: 12, scope: !11056)
!11065 = !DILocalVariable(name: "p", scope: !11056, file: !3, line: 2105, type: !2307)
!11066 = !DILocation(line: 2105, column: 21, scope: !11056)
!11067 = !DILocalVariable(name: "next", scope: !11056, file: !3, line: 2105, type: !2307)
!11068 = !DILocation(line: 2105, column: 25, scope: !11056)
!11069 = !DILocalVariable(name: "in_table", scope: !11056, file: !3, line: 2106, type: !1053)
!11070 = !DILocation(line: 2106, column: 7, scope: !11056)
!11071 = !DILocation(line: 2113, column: 14, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !11056, file: !3, line: 2113, column: 3)
!11073 = !DILocation(line: 2113, column: 8, scope: !11072)
!11074 = !DILocation(line: 2113, column: 19, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11072, file: !3, line: 2113, column: 3)
!11076 = !DILocation(line: 2113, column: 25, scope: !11075)
!11077 = !DILocation(line: 2113, column: 3, scope: !11072)
!11078 = !DILocation(line: 2114, column: 9, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !11075, file: !3, line: 2114, column: 9)
!11080 = !DILocation(line: 2114, column: 9, scope: !11075)
!11081 = !DILocation(line: 2116, column: 20, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !11079, file: !3, line: 2115, column: 7)
!11083 = !DILocation(line: 2116, column: 2, scope: !11082)
!11084 = !DILocation(line: 2117, column: 6, scope: !11085)
!11085 = distinct !DILexicalBlock(scope: !11082, file: !3, line: 2117, column: 6)
!11086 = !DILocation(line: 2117, column: 23, scope: !11085)
!11087 = !DILocation(line: 2117, column: 6, scope: !11082)
!11088 = !DILocation(line: 2119, column: 6, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !11085, file: !3, line: 2118, column: 4)
!11090 = !DILocation(line: 2119, column: 22, scope: !11089)
!11091 = !DILocation(line: 2120, column: 6, scope: !11089)
!11092 = !DILocation(line: 2120, column: 28, scope: !11089)
!11093 = !DILocation(line: 2121, column: 4, scope: !11089)
!11094 = !DILocation(line: 2123, column: 15, scope: !11082)
!11095 = !DILocation(line: 2123, column: 61, scope: !11082)
!11096 = !DILocation(line: 2123, column: 11, scope: !11082)
!11097 = !DILocation(line: 2124, column: 7, scope: !11082)
!11098 = !DILocation(line: 2113, column: 55, scope: !11075)
!11099 = !DILocation(line: 2113, column: 3, scope: !11075)
!11100 = distinct !{!11100, !11077, !11101}
!11101 = !DILocation(line: 2124, column: 7, scope: !11072)
!11102 = !DILocation(line: 2130, column: 7, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !11056, file: !3, line: 2130, column: 7)
!11104 = !DILocation(line: 2130, column: 7, scope: !11056)
!11105 = !DILocation(line: 2131, column: 15, scope: !11106)
!11106 = distinct !DILexicalBlock(scope: !11103, file: !3, line: 2131, column: 5)
!11107 = !DILocation(line: 2131, column: 10, scope: !11106)
!11108 = !DILocation(line: 2131, column: 20, scope: !11109)
!11109 = distinct !DILexicalBlock(scope: !11106, file: !3, line: 2131, column: 5)
!11110 = !DILocation(line: 2131, column: 25, scope: !11109)
!11111 = !DILocation(line: 2131, column: 5, scope: !11106)
!11112 = !DILocation(line: 2132, column: 22, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11109, file: !3, line: 2132, column: 7)
!11114 = !DILocation(line: 2132, column: 16, scope: !11113)
!11115 = !DILocation(line: 2132, column: 14, scope: !11113)
!11116 = !DILocation(line: 2132, column: 12, scope: !11113)
!11117 = !DILocation(line: 2132, column: 29, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !11113, file: !3, line: 2132, column: 7)
!11119 = !DILocation(line: 2132, column: 7, scope: !11113)
!11120 = !DILocation(line: 2134, column: 11, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !11118, file: !3, line: 2133, column: 2)
!11122 = !DILocation(line: 2134, column: 14, scope: !11121)
!11123 = !DILocation(line: 2134, column: 9, scope: !11121)
!11124 = !DILocation(line: 2136, column: 9, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11121, file: !3, line: 2136, column: 8)
!11126 = !DILocation(line: 2137, column: 8, scope: !11125)
!11127 = !DILocation(line: 2137, column: 11, scope: !11125)
!11128 = !DILocation(line: 2137, column: 26, scope: !11125)
!11129 = !DILocation(line: 2136, column: 8, scope: !11121)
!11130 = !DILocation(line: 2138, column: 6, scope: !11125)
!11131 = !DILocation(line: 2140, column: 12, scope: !11121)
!11132 = !DILocation(line: 2140, column: 10, scope: !11121)
!11133 = !DILocation(line: 2141, column: 15, scope: !11121)
!11134 = !DILocation(line: 2141, column: 13, scope: !11121)
!11135 = !DILocation(line: 2143, column: 13, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11121, file: !3, line: 2143, column: 4)
!11137 = !DILocation(line: 2143, column: 11, scope: !11136)
!11138 = !DILocation(line: 2143, column: 9, scope: !11136)
!11139 = !DILocation(line: 2143, column: 20, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !11136, file: !3, line: 2143, column: 4)
!11141 = !DILocation(line: 2143, column: 24, scope: !11140)
!11142 = !DILocation(line: 2143, column: 22, scope: !11140)
!11143 = !DILocation(line: 2143, column: 4, scope: !11136)
!11144 = !DILocation(line: 2144, column: 10, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11140, file: !3, line: 2144, column: 10)
!11146 = !DILocation(line: 2144, column: 10, scope: !11140)
!11147 = !DILocation(line: 2146, column: 22, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11145, file: !3, line: 2145, column: 8)
!11149 = !DILocation(line: 2146, column: 25, scope: !11148)
!11150 = !DILocation(line: 2146, column: 3, scope: !11148)
!11151 = !DILocation(line: 2147, column: 3, scope: !11148)
!11152 = !DILocation(line: 2143, column: 35, scope: !11140)
!11153 = !DILocation(line: 2143, column: 4, scope: !11140)
!11154 = distinct !{!11154, !11143, !11155}
!11155 = !DILocation(line: 2148, column: 8, scope: !11136)
!11156 = !DILocation(line: 2149, column: 2, scope: !11121)
!11157 = !DILocation(line: 2132, column: 36, scope: !11118)
!11158 = !DILocation(line: 2132, column: 34, scope: !11118)
!11159 = !DILocation(line: 2132, column: 7, scope: !11118)
!11160 = distinct !{!11160, !11119, !11161}
!11161 = !DILocation(line: 2149, column: 2, scope: !11113)
!11162 = !DILocation(line: 2131, column: 42, scope: !11109)
!11163 = !DILocation(line: 2131, column: 5, scope: !11109)
!11164 = distinct !{!11164, !11111, !11165}
!11165 = !DILocation(line: 2149, column: 2, scope: !11106)
!11166 = !DILocation(line: 2150, column: 1, scope: !11056)
!11167 = distinct !DISubprogram(name: "mention_regs", scope: !3, file: !3, line: 1030, type: !10576, scopeLine: 1031, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!11168 = !DILocalVariable(name: "x", arg: 1, scope: !11167, file: !3, line: 1030, type: !1091)
!11169 = !DILocation(line: 1030, column: 19, scope: !11167)
!11170 = !DILocalVariable(name: "code", scope: !11167, file: !3, line: 1032, type: !384)
!11171 = !DILocation(line: 1032, column: 17, scope: !11167)
!11172 = !DILocalVariable(name: "i", scope: !11167, file: !3, line: 1033, type: !1053)
!11173 = !DILocation(line: 1033, column: 7, scope: !11167)
!11174 = !DILocalVariable(name: "j", scope: !11167, file: !3, line: 1033, type: !1053)
!11175 = !DILocation(line: 1033, column: 10, scope: !11167)
!11176 = !DILocalVariable(name: "fmt", scope: !11167, file: !3, line: 1034, type: !1116)
!11177 = !DILocation(line: 1034, column: 15, scope: !11167)
!11178 = !DILocalVariable(name: "changed", scope: !11167, file: !3, line: 1035, type: !1053)
!11179 = !DILocation(line: 1035, column: 7, scope: !11167)
!11180 = !DILocation(line: 1037, column: 7, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11167, file: !3, line: 1037, column: 7)
!11182 = !DILocation(line: 1037, column: 9, scope: !11181)
!11183 = !DILocation(line: 1037, column: 7, scope: !11167)
!11184 = !DILocation(line: 1038, column: 5, scope: !11181)
!11185 = !DILocation(line: 1040, column: 10, scope: !11167)
!11186 = !DILocation(line: 1040, column: 8, scope: !11167)
!11187 = !DILocation(line: 1041, column: 7, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11167, file: !3, line: 1041, column: 7)
!11189 = !DILocation(line: 1041, column: 12, scope: !11188)
!11190 = !DILocation(line: 1041, column: 7, scope: !11167)
!11191 = !DILocalVariable(name: "regno", scope: !11192, file: !3, line: 1043, type: !7)
!11192 = distinct !DILexicalBlock(scope: !11188, file: !3, line: 1042, column: 5)
!11193 = !DILocation(line: 1043, column: 20, scope: !11192)
!11194 = !DILocation(line: 1043, column: 28, scope: !11192)
!11195 = !DILocalVariable(name: "endregno", scope: !11192, file: !3, line: 1044, type: !7)
!11196 = !DILocation(line: 1044, column: 20, scope: !11192)
!11197 = !DILocation(line: 1044, column: 31, scope: !11192)
!11198 = !DILocalVariable(name: "i", scope: !11192, file: !3, line: 1045, type: !7)
!11199 = !DILocation(line: 1045, column: 20, scope: !11192)
!11200 = !DILocation(line: 1047, column: 16, scope: !11201)
!11201 = distinct !DILexicalBlock(scope: !11192, file: !3, line: 1047, column: 7)
!11202 = !DILocation(line: 1047, column: 14, scope: !11201)
!11203 = !DILocation(line: 1047, column: 12, scope: !11201)
!11204 = !DILocation(line: 1047, column: 23, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11201, file: !3, line: 1047, column: 7)
!11206 = !DILocation(line: 1047, column: 27, scope: !11205)
!11207 = !DILocation(line: 1047, column: 25, scope: !11205)
!11208 = !DILocation(line: 1047, column: 7, scope: !11201)
!11209 = !DILocation(line: 1049, column: 8, scope: !11210)
!11210 = distinct !DILexicalBlock(scope: !11211, file: !3, line: 1049, column: 8)
!11211 = distinct !DILexicalBlock(scope: !11205, file: !3, line: 1048, column: 2)
!11212 = !DILocation(line: 1049, column: 25, scope: !11210)
!11213 = !DILocation(line: 1049, column: 30, scope: !11210)
!11214 = !DILocation(line: 1049, column: 33, scope: !11210)
!11215 = !DILocation(line: 1049, column: 53, scope: !11210)
!11216 = !DILocation(line: 1049, column: 50, scope: !11210)
!11217 = !DILocation(line: 1049, column: 8, scope: !11211)
!11218 = !DILocation(line: 1050, column: 27, scope: !11210)
!11219 = !DILocation(line: 1050, column: 6, scope: !11210)
!11220 = !DILocation(line: 1052, column: 23, scope: !11211)
!11221 = !DILocation(line: 1052, column: 4, scope: !11211)
!11222 = !DILocation(line: 1052, column: 21, scope: !11211)
!11223 = !DILocation(line: 1053, column: 4, scope: !11211)
!11224 = !DILocation(line: 1053, column: 22, scope: !11211)
!11225 = !DILocation(line: 1054, column: 2, scope: !11211)
!11226 = !DILocation(line: 1047, column: 38, scope: !11205)
!11227 = !DILocation(line: 1047, column: 7, scope: !11205)
!11228 = distinct !{!11228, !11208, !11229}
!11229 = !DILocation(line: 1054, column: 2, scope: !11201)
!11230 = !DILocation(line: 1056, column: 7, scope: !11192)
!11231 = !DILocation(line: 1062, column: 7, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11167, file: !3, line: 1062, column: 7)
!11233 = !DILocation(line: 1062, column: 12, scope: !11232)
!11234 = !DILocation(line: 1062, column: 22, scope: !11232)
!11235 = !DILocation(line: 1062, column: 25, scope: !11232)
!11236 = !DILocation(line: 1063, column: 7, scope: !11232)
!11237 = !DILocation(line: 1063, column: 10, scope: !11232)
!11238 = !DILocation(line: 1063, column: 33, scope: !11232)
!11239 = !DILocation(line: 1062, column: 7, scope: !11167)
!11240 = !DILocalVariable(name: "i", scope: !11241, file: !3, line: 1065, type: !7)
!11241 = distinct !DILexicalBlock(scope: !11232, file: !3, line: 1064, column: 5)
!11242 = !DILocation(line: 1065, column: 20, scope: !11241)
!11243 = !DILocation(line: 1065, column: 24, scope: !11241)
!11244 = !DILocation(line: 1067, column: 11, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11241, file: !3, line: 1067, column: 11)
!11246 = !DILocation(line: 1067, column: 28, scope: !11245)
!11247 = !DILocation(line: 1067, column: 33, scope: !11245)
!11248 = !DILocation(line: 1067, column: 36, scope: !11245)
!11249 = !DILocation(line: 1067, column: 56, scope: !11245)
!11250 = !DILocation(line: 1067, column: 53, scope: !11245)
!11251 = !DILocation(line: 1067, column: 11, scope: !11241)
!11252 = !DILocation(line: 1074, column: 8, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11254, file: !3, line: 1074, column: 8)
!11254 = distinct !DILexicalBlock(scope: !11245, file: !3, line: 1068, column: 2)
!11255 = !DILocation(line: 1074, column: 23, scope: !11253)
!11256 = !DILocation(line: 1074, column: 21, scope: !11253)
!11257 = !DILocation(line: 1074, column: 40, scope: !11253)
!11258 = !DILocation(line: 1075, column: 8, scope: !11253)
!11259 = !DILocation(line: 1075, column: 11, scope: !11253)
!11260 = !DILocation(line: 1075, column: 32, scope: !11253)
!11261 = !DILocation(line: 1075, column: 29, scope: !11253)
!11262 = !DILocation(line: 1074, column: 8, scope: !11254)
!11263 = !DILocation(line: 1076, column: 27, scope: !11253)
!11264 = !DILocation(line: 1076, column: 6, scope: !11253)
!11265 = !DILocation(line: 1078, column: 34, scope: !11253)
!11266 = !DILocation(line: 1078, column: 37, scope: !11253)
!11267 = !DILocation(line: 1078, column: 54, scope: !11253)
!11268 = !DILocation(line: 1078, column: 6, scope: !11253)
!11269 = !DILocation(line: 1079, column: 2, scope: !11254)
!11270 = !DILocation(line: 1081, column: 26, scope: !11241)
!11271 = !DILocation(line: 1081, column: 7, scope: !11241)
!11272 = !DILocation(line: 1081, column: 24, scope: !11241)
!11273 = !DILocation(line: 1082, column: 27, scope: !11241)
!11274 = !DILocation(line: 1082, column: 7, scope: !11241)
!11275 = !DILocation(line: 1082, column: 25, scope: !11241)
!11276 = !DILocation(line: 1083, column: 7, scope: !11241)
!11277 = !DILocation(line: 1096, column: 7, scope: !11278)
!11278 = distinct !DILexicalBlock(scope: !11167, file: !3, line: 1096, column: 7)
!11279 = !DILocation(line: 1096, column: 12, scope: !11278)
!11280 = !DILocation(line: 1096, column: 23, scope: !11278)
!11281 = !DILocation(line: 1096, column: 26, scope: !11278)
!11282 = !DILocation(line: 1096, column: 7, scope: !11167)
!11283 = !DILocation(line: 1098, column: 11, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11285, file: !3, line: 1098, column: 11)
!11285 = distinct !DILexicalBlock(scope: !11278, file: !3, line: 1097, column: 5)
!11286 = !DILocation(line: 1099, column: 4, scope: !11284)
!11287 = !DILocation(line: 1099, column: 9, scope: !11284)
!11288 = !DILocation(line: 1098, column: 11, scope: !11285)
!11289 = !DILocation(line: 1100, column: 19, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11284, file: !3, line: 1100, column: 6)
!11291 = !DILocation(line: 1100, column: 6, scope: !11290)
!11292 = !DILocation(line: 1100, column: 6, scope: !11284)
!11293 = !DILocation(line: 1102, column: 24, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11290, file: !3, line: 1101, column: 4)
!11295 = !DILocation(line: 1102, column: 6, scope: !11294)
!11296 = !DILocation(line: 1103, column: 14, scope: !11294)
!11297 = !DILocation(line: 1104, column: 4, scope: !11294)
!11298 = !DILocation(line: 1100, column: 39, scope: !11290)
!11299 = !DILocation(line: 1106, column: 11, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11285, file: !3, line: 1106, column: 11)
!11301 = !DILocation(line: 1107, column: 4, scope: !11300)
!11302 = !DILocation(line: 1107, column: 9, scope: !11300)
!11303 = !DILocation(line: 1106, column: 11, scope: !11285)
!11304 = !DILocation(line: 1108, column: 19, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11300, file: !3, line: 1108, column: 6)
!11306 = !DILocation(line: 1108, column: 6, scope: !11305)
!11307 = !DILocation(line: 1108, column: 6, scope: !11300)
!11308 = !DILocation(line: 1110, column: 24, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11305, file: !3, line: 1109, column: 4)
!11310 = !DILocation(line: 1110, column: 6, scope: !11309)
!11311 = !DILocation(line: 1111, column: 14, scope: !11309)
!11312 = !DILocation(line: 1112, column: 4, scope: !11309)
!11313 = !DILocation(line: 1108, column: 39, scope: !11305)
!11314 = !DILocation(line: 1113, column: 5, scope: !11285)
!11315 = !DILocation(line: 1115, column: 9, scope: !11167)
!11316 = !DILocation(line: 1115, column: 7, scope: !11167)
!11317 = !DILocation(line: 1116, column: 12, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11167, file: !3, line: 1116, column: 3)
!11319 = !DILocation(line: 1116, column: 34, scope: !11318)
!11320 = !DILocation(line: 1116, column: 10, scope: !11318)
!11321 = !DILocation(line: 1116, column: 8, scope: !11318)
!11322 = !DILocation(line: 1116, column: 39, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11318, file: !3, line: 1116, column: 3)
!11324 = !DILocation(line: 1116, column: 41, scope: !11323)
!11325 = !DILocation(line: 1116, column: 3, scope: !11318)
!11326 = !DILocation(line: 1117, column: 9, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11323, file: !3, line: 1117, column: 9)
!11328 = !DILocation(line: 1117, column: 13, scope: !11327)
!11329 = !DILocation(line: 1117, column: 16, scope: !11327)
!11330 = !DILocation(line: 1117, column: 9, scope: !11323)
!11331 = !DILocation(line: 1118, column: 32, scope: !11327)
!11332 = !DILocation(line: 1118, column: 18, scope: !11327)
!11333 = !DILocation(line: 1118, column: 15, scope: !11327)
!11334 = !DILocation(line: 1118, column: 7, scope: !11327)
!11335 = !DILocation(line: 1119, column: 14, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11327, file: !3, line: 1119, column: 14)
!11337 = !DILocation(line: 1119, column: 18, scope: !11336)
!11338 = !DILocation(line: 1119, column: 21, scope: !11336)
!11339 = !DILocation(line: 1119, column: 14, scope: !11327)
!11340 = !DILocation(line: 1120, column: 14, scope: !11341)
!11341 = distinct !DILexicalBlock(scope: !11336, file: !3, line: 1120, column: 7)
!11342 = !DILocation(line: 1120, column: 12, scope: !11341)
!11343 = !DILocation(line: 1120, column: 19, scope: !11344)
!11344 = distinct !DILexicalBlock(scope: !11341, file: !3, line: 1120, column: 7)
!11345 = !DILocation(line: 1120, column: 23, scope: !11344)
!11346 = !DILocation(line: 1120, column: 21, scope: !11344)
!11347 = !DILocation(line: 1120, column: 7, scope: !11341)
!11348 = !DILocation(line: 1121, column: 27, scope: !11344)
!11349 = !DILocation(line: 1121, column: 13, scope: !11344)
!11350 = !DILocation(line: 1121, column: 10, scope: !11344)
!11351 = !DILocation(line: 1121, column: 2, scope: !11344)
!11352 = !DILocation(line: 1120, column: 40, scope: !11344)
!11353 = !DILocation(line: 1120, column: 7, scope: !11344)
!11354 = distinct !{!11354, !11347, !11355}
!11355 = !DILocation(line: 1121, column: 44, scope: !11341)
!11356 = !DILocation(line: 1117, column: 19, scope: !11327)
!11357 = !DILocation(line: 1116, column: 48, scope: !11323)
!11358 = !DILocation(line: 1116, column: 3, scope: !11323)
!11359 = distinct !{!11359, !11325, !11360}
!11360 = !DILocation(line: 1121, column: 44, scope: !11318)
!11361 = !DILocation(line: 1123, column: 10, scope: !11167)
!11362 = !DILocation(line: 1123, column: 3, scope: !11167)
!11363 = !DILocation(line: 1124, column: 1, scope: !11167)
!11364 = distinct !DISubprogram(name: "remove_invalid_refs", scope: !3, file: !3, line: 2002, type: !3463, scopeLine: 2003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!11365 = !DILocalVariable(name: "regno", arg: 1, scope: !11364, file: !3, line: 2002, type: !7)
!11366 = !DILocation(line: 2002, column: 35, scope: !11364)
!11367 = !DILocalVariable(name: "i", scope: !11364, file: !3, line: 2004, type: !7)
!11368 = !DILocation(line: 2004, column: 16, scope: !11364)
!11369 = !DILocalVariable(name: "p", scope: !11364, file: !3, line: 2005, type: !2307)
!11370 = !DILocation(line: 2005, column: 21, scope: !11364)
!11371 = !DILocalVariable(name: "next", scope: !11364, file: !3, line: 2005, type: !2307)
!11372 = !DILocation(line: 2005, column: 25, scope: !11364)
!11373 = !DILocation(line: 2007, column: 10, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !11364, file: !3, line: 2007, column: 3)
!11375 = !DILocation(line: 2007, column: 8, scope: !11374)
!11376 = !DILocation(line: 2007, column: 15, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11374, file: !3, line: 2007, column: 3)
!11378 = !DILocation(line: 2007, column: 17, scope: !11377)
!11379 = !DILocation(line: 2007, column: 3, scope: !11374)
!11380 = !DILocation(line: 2008, column: 20, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11377, file: !3, line: 2008, column: 5)
!11382 = !DILocation(line: 2008, column: 14, scope: !11381)
!11383 = !DILocation(line: 2008, column: 12, scope: !11381)
!11384 = !DILocation(line: 2008, column: 10, scope: !11381)
!11385 = !DILocation(line: 2008, column: 24, scope: !11386)
!11386 = distinct !DILexicalBlock(scope: !11381, file: !3, line: 2008, column: 5)
!11387 = !DILocation(line: 2008, column: 5, scope: !11381)
!11388 = !DILocation(line: 2010, column: 9, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11386, file: !3, line: 2009, column: 7)
!11390 = !DILocation(line: 2010, column: 12, scope: !11389)
!11391 = !DILocation(line: 2010, column: 7, scope: !11389)
!11392 = !DILocation(line: 2011, column: 7, scope: !11393)
!11393 = distinct !DILexicalBlock(scope: !11389, file: !3, line: 2011, column: 6)
!11394 = !DILocation(line: 2012, column: 6, scope: !11393)
!11395 = !DILocation(line: 2012, column: 28, scope: !11393)
!11396 = !DILocation(line: 2012, column: 35, scope: !11393)
!11397 = !DILocation(line: 2012, column: 41, scope: !11393)
!11398 = !DILocation(line: 2012, column: 46, scope: !11393)
!11399 = !DILocation(line: 2012, column: 49, scope: !11393)
!11400 = !DILocation(line: 2012, column: 9, scope: !11393)
!11401 = !DILocation(line: 2011, column: 6, scope: !11389)
!11402 = !DILocation(line: 2013, column: 23, scope: !11393)
!11403 = !DILocation(line: 2013, column: 26, scope: !11393)
!11404 = !DILocation(line: 2013, column: 4, scope: !11393)
!11405 = !DILocation(line: 2014, column: 7, scope: !11389)
!11406 = !DILocation(line: 2008, column: 31, scope: !11386)
!11407 = !DILocation(line: 2008, column: 29, scope: !11386)
!11408 = !DILocation(line: 2008, column: 5, scope: !11386)
!11409 = distinct !{!11409, !11387, !11410}
!11410 = !DILocation(line: 2014, column: 7, scope: !11381)
!11411 = !DILocation(line: 2007, column: 31, scope: !11377)
!11412 = !DILocation(line: 2007, column: 3, scope: !11377)
!11413 = distinct !{!11413, !11379, !11414}
!11414 = !DILocation(line: 2014, column: 7, scope: !11374)
!11415 = !DILocation(line: 2015, column: 1, scope: !11364)
!11416 = distinct !DISubprogram(name: "insert_const_anchors", scope: !3, file: !3, line: 1283, type: !11417, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!11417 = !DISubroutineType(types: !11418)
!11418 = !{null, !1091, !1091, !5}
!11419 = !DILocalVariable(name: "reg", arg: 1, scope: !11416, file: !3, line: 1283, type: !1091)
!11420 = !DILocation(line: 1283, column: 27, scope: !11416)
!11421 = !DILocalVariable(name: "cst", arg: 2, scope: !11416, file: !3, line: 1283, type: !1091)
!11422 = !DILocation(line: 1283, column: 36, scope: !11416)
!11423 = !DILocalVariable(name: "mode", arg: 3, scope: !11416, file: !3, line: 1283, type: !5)
!11424 = !DILocation(line: 1283, column: 59, scope: !11416)
!11425 = !DILocalVariable(name: "lower_base", scope: !11416, file: !3, line: 1285, type: !1048)
!11426 = !DILocation(line: 1285, column: 17, scope: !11416)
!11427 = !DILocalVariable(name: "lower_offs", scope: !11416, file: !3, line: 1285, type: !1048)
!11428 = !DILocation(line: 1285, column: 29, scope: !11416)
!11429 = !DILocalVariable(name: "upper_base", scope: !11416, file: !3, line: 1285, type: !1048)
!11430 = !DILocation(line: 1285, column: 41, scope: !11416)
!11431 = !DILocalVariable(name: "upper_offs", scope: !11416, file: !3, line: 1285, type: !1048)
!11432 = !DILocation(line: 1285, column: 53, scope: !11416)
!11433 = !DILocation(line: 1287, column: 31, scope: !11434)
!11434 = distinct !DILexicalBlock(scope: !11416, file: !3, line: 1287, column: 7)
!11435 = !DILocation(line: 1287, column: 8, scope: !11434)
!11436 = !DILocation(line: 1287, column: 7, scope: !11416)
!11437 = !DILocation(line: 1289, column: 7, scope: !11434)
!11438 = !DILocation(line: 1293, column: 7, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11416, file: !3, line: 1293, column: 7)
!11440 = !DILocation(line: 1293, column: 18, scope: !11439)
!11441 = !DILocation(line: 1293, column: 7, scope: !11416)
!11442 = !DILocation(line: 1294, column: 26, scope: !11439)
!11443 = !DILocation(line: 1294, column: 38, scope: !11439)
!11444 = !DILocation(line: 1294, column: 44, scope: !11439)
!11445 = !DILocation(line: 1294, column: 43, scope: !11439)
!11446 = !DILocation(line: 1294, column: 56, scope: !11439)
!11447 = !DILocation(line: 1294, column: 5, scope: !11439)
!11448 = !DILocation(line: 1296, column: 7, scope: !11449)
!11449 = distinct !DILexicalBlock(scope: !11416, file: !3, line: 1296, column: 7)
!11450 = !DILocation(line: 1296, column: 18, scope: !11449)
!11451 = !DILocation(line: 1296, column: 7, scope: !11416)
!11452 = !DILocation(line: 1297, column: 26, scope: !11449)
!11453 = !DILocation(line: 1297, column: 38, scope: !11449)
!11454 = !DILocation(line: 1297, column: 44, scope: !11449)
!11455 = !DILocation(line: 1297, column: 43, scope: !11449)
!11456 = !DILocation(line: 1297, column: 56, scope: !11449)
!11457 = !DILocation(line: 1297, column: 5, scope: !11449)
!11458 = !DILocation(line: 1298, column: 1, scope: !11416)
!11459 = distinct !DISubprogram(name: "equiv_constant", scope: !3, file: !3, line: 3811, type: !11460, scopeLine: 3812, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!11460 = !DISubroutineType(types: !11461)
!11461 = !{!1091, !1091}
!11462 = !DILocalVariable(name: "x", arg: 1, scope: !11459, file: !3, line: 3811, type: !1091)
!11463 = !DILocation(line: 3811, column: 21, scope: !11459)
!11464 = !DILocation(line: 3813, column: 7, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11459, file: !3, line: 3813, column: 7)
!11466 = !DILocation(line: 3814, column: 7, scope: !11465)
!11467 = !DILocation(line: 3814, column: 10, scope: !11465)
!11468 = !DILocation(line: 3813, column: 7, scope: !11459)
!11469 = !DILocalVariable(name: "x_q", scope: !11470, file: !3, line: 3816, type: !1053)
!11470 = distinct !DILexicalBlock(scope: !11465, file: !3, line: 3815, column: 5)
!11471 = !DILocation(line: 3816, column: 11, scope: !11470)
!11472 = !DILocation(line: 3816, column: 17, scope: !11470)
!11473 = !DILocalVariable(name: "x_ent", scope: !11470, file: !3, line: 3817, type: !2216)
!11474 = !DILocation(line: 3817, column: 30, scope: !11470)
!11475 = !DILocation(line: 3817, column: 39, scope: !11470)
!11476 = !DILocation(line: 3817, column: 49, scope: !11470)
!11477 = !DILocation(line: 3819, column: 11, scope: !11478)
!11478 = distinct !DILexicalBlock(scope: !11470, file: !3, line: 3819, column: 11)
!11479 = !DILocation(line: 3819, column: 18, scope: !11478)
!11480 = !DILocation(line: 3819, column: 11, scope: !11470)
!11481 = !DILocation(line: 3820, column: 6, scope: !11478)
!11482 = !DILocation(line: 3820, column: 19, scope: !11478)
!11483 = !DILocation(line: 3820, column: 33, scope: !11478)
!11484 = !DILocation(line: 3820, column: 40, scope: !11478)
!11485 = !DILocation(line: 3820, column: 4, scope: !11478)
!11486 = !DILocation(line: 3820, column: 2, scope: !11478)
!11487 = !DILocation(line: 3821, column: 5, scope: !11470)
!11488 = !DILocation(line: 3823, column: 7, scope: !11489)
!11489 = distinct !DILexicalBlock(scope: !11459, file: !3, line: 3823, column: 7)
!11490 = !DILocation(line: 3823, column: 9, scope: !11489)
!11491 = !DILocation(line: 3823, column: 14, scope: !11489)
!11492 = !DILocation(line: 3823, column: 17, scope: !11489)
!11493 = !DILocation(line: 3823, column: 7, scope: !11459)
!11494 = !DILocation(line: 3824, column: 12, scope: !11489)
!11495 = !DILocation(line: 3824, column: 5, scope: !11489)
!11496 = !DILocation(line: 3826, column: 7, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11459, file: !3, line: 3826, column: 7)
!11498 = !DILocation(line: 3826, column: 20, scope: !11497)
!11499 = !DILocation(line: 3826, column: 7, scope: !11459)
!11500 = !DILocalVariable(name: "mode", scope: !11501, file: !3, line: 3828, type: !5)
!11501 = distinct !DILexicalBlock(scope: !11497, file: !3, line: 3827, column: 5)
!11502 = !DILocation(line: 3828, column: 25, scope: !11501)
!11503 = !DILocation(line: 3828, column: 32, scope: !11501)
!11504 = !DILocalVariable(name: "imode", scope: !11501, file: !3, line: 3829, type: !5)
!11505 = !DILocation(line: 3829, column: 25, scope: !11501)
!11506 = !DILocation(line: 3829, column: 33, scope: !11501)
!11507 = !DILocalVariable(name: "new_rtx", scope: !11501, file: !3, line: 3830, type: !1091)
!11508 = !DILocation(line: 3830, column: 11, scope: !11501)
!11509 = !DILocation(line: 3833, column: 42, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11501, file: !3, line: 3833, column: 11)
!11511 = !DILocation(line: 3833, column: 22, scope: !11510)
!11512 = !DILocation(line: 3833, column: 20, scope: !11510)
!11513 = !DILocation(line: 3833, column: 57, scope: !11510)
!11514 = !DILocation(line: 3834, column: 11, scope: !11510)
!11515 = !DILocation(line: 3834, column: 45, scope: !11510)
!11516 = !DILocation(line: 3834, column: 25, scope: !11510)
!11517 = !DILocation(line: 3834, column: 23, scope: !11510)
!11518 = !DILocation(line: 3834, column: 63, scope: !11510)
!11519 = !DILocation(line: 3835, column: 11, scope: !11510)
!11520 = !DILocation(line: 3835, column: 45, scope: !11510)
!11521 = !DILocation(line: 3835, column: 25, scope: !11510)
!11522 = !DILocation(line: 3835, column: 23, scope: !11510)
!11523 = !DILocation(line: 3835, column: 62, scope: !11510)
!11524 = !DILocation(line: 3833, column: 11, scope: !11501)
!11525 = !DILocation(line: 3836, column: 16, scope: !11510)
!11526 = !DILocation(line: 3836, column: 9, scope: !11510)
!11527 = !DILocation(line: 3840, column: 11, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11501, file: !3, line: 3840, column: 11)
!11529 = !DILocation(line: 3840, column: 34, scope: !11528)
!11530 = !DILocation(line: 3840, column: 32, scope: !11528)
!11531 = !DILocation(line: 3841, column: 4, scope: !11528)
!11532 = !DILocation(line: 3841, column: 7, scope: !11528)
!11533 = !DILocation(line: 3841, column: 35, scope: !11528)
!11534 = !DILocation(line: 3841, column: 33, scope: !11528)
!11535 = !DILocation(line: 3840, column: 11, scope: !11501)
!11536 = !DILocalVariable(name: "byte", scope: !11537, file: !3, line: 3843, type: !1053)
!11537 = distinct !DILexicalBlock(scope: !11528, file: !3, line: 3842, column: 2)
!11538 = !DILocation(line: 3843, column: 8, scope: !11537)
!11539 = !DILocation(line: 3843, column: 15, scope: !11537)
!11540 = !DILocation(line: 3843, column: 56, scope: !11537)
!11541 = !DILocation(line: 3843, column: 62, scope: !11537)
!11542 = !DILocation(line: 3843, column: 33, scope: !11537)
!11543 = !DILocation(line: 3843, column: 31, scope: !11537)
!11544 = !DILocation(line: 3844, column: 8, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11537, file: !3, line: 3844, column: 8)
!11546 = !DILocation(line: 3844, column: 13, scope: !11545)
!11547 = !DILocation(line: 3844, column: 18, scope: !11545)
!11548 = !DILocation(line: 3844, column: 22, scope: !11545)
!11549 = !DILocation(line: 3844, column: 27, scope: !11545)
!11550 = !DILocation(line: 3844, column: 45, scope: !11545)
!11551 = !DILocation(line: 3844, column: 8, scope: !11537)
!11552 = !DILocalVariable(name: "y", scope: !11553, file: !3, line: 3846, type: !1091)
!11553 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 3845, column: 6)
!11554 = !DILocation(line: 3846, column: 12, scope: !11553)
!11555 = !DILocation(line: 3846, column: 32, scope: !11553)
!11556 = !DILocation(line: 3846, column: 43, scope: !11553)
!11557 = !DILocation(line: 3846, column: 59, scope: !11553)
!11558 = !DILocation(line: 3846, column: 16, scope: !11553)
!11559 = !DILocation(line: 3847, column: 38, scope: !11553)
!11560 = !DILocation(line: 3847, column: 18, scope: !11553)
!11561 = !DILocation(line: 3847, column: 16, scope: !11553)
!11562 = !DILocation(line: 3848, column: 12, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !11553, file: !3, line: 3848, column: 12)
!11564 = !DILocation(line: 3848, column: 12, scope: !11553)
!11565 = !DILocation(line: 3849, column: 10, scope: !11563)
!11566 = !DILocation(line: 3849, column: 23, scope: !11563)
!11567 = !DILocation(line: 3849, column: 29, scope: !11563)
!11568 = !DILocation(line: 3849, column: 3, scope: !11563)
!11569 = !DILocation(line: 3850, column: 6, scope: !11553)
!11570 = !DILocation(line: 3851, column: 2, scope: !11537)
!11571 = !DILocation(line: 3854, column: 11, scope: !11572)
!11572 = distinct !DILexicalBlock(scope: !11501, file: !3, line: 3854, column: 11)
!11573 = !DILocation(line: 3855, column: 4, scope: !11572)
!11574 = !DILocation(line: 3855, column: 34, scope: !11572)
!11575 = !DILocation(line: 3855, column: 18, scope: !11572)
!11576 = !DILocation(line: 3855, column: 16, scope: !11572)
!11577 = !DILocation(line: 3855, column: 51, scope: !11572)
!11578 = !DILocation(line: 3854, column: 11, scope: !11501)
!11579 = !DILocation(line: 3856, column: 33, scope: !11572)
!11580 = !DILocation(line: 3856, column: 39, scope: !11572)
!11581 = !DILocation(line: 3856, column: 48, scope: !11572)
!11582 = !DILocation(line: 3856, column: 55, scope: !11572)
!11583 = !DILocation(line: 3856, column: 16, scope: !11572)
!11584 = !DILocation(line: 3856, column: 9, scope: !11572)
!11585 = !DILocation(line: 3858, column: 7, scope: !11501)
!11586 = !DILocation(line: 3864, column: 7, scope: !11587)
!11587 = distinct !DILexicalBlock(scope: !11459, file: !3, line: 3864, column: 7)
!11588 = !DILocation(line: 3864, column: 7, scope: !11459)
!11589 = !DILocalVariable(name: "elt", scope: !11590, file: !3, line: 3866, type: !2307)
!11590 = distinct !DILexicalBlock(scope: !11587, file: !3, line: 3865, column: 5)
!11591 = !DILocation(line: 3866, column: 25, scope: !11590)
!11592 = !DILocation(line: 3868, column: 42, scope: !11590)
!11593 = !DILocation(line: 3868, column: 11, scope: !11590)
!11594 = !DILocation(line: 3868, column: 9, scope: !11590)
!11595 = !DILocation(line: 3869, column: 11, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !11590, file: !3, line: 3869, column: 11)
!11597 = !DILocation(line: 3869, column: 11, scope: !11590)
!11598 = !DILocation(line: 3870, column: 9, scope: !11596)
!11599 = !DILocation(line: 3870, column: 2, scope: !11596)
!11600 = !DILocation(line: 3872, column: 21, scope: !11590)
!11601 = !DILocation(line: 3872, column: 24, scope: !11590)
!11602 = !DILocation(line: 3872, column: 53, scope: !11590)
!11603 = !DILocation(line: 3872, column: 13, scope: !11590)
!11604 = !DILocation(line: 3872, column: 11, scope: !11590)
!11605 = !DILocation(line: 3873, column: 11, scope: !11606)
!11606 = distinct !DILexicalBlock(scope: !11590, file: !3, line: 3873, column: 11)
!11607 = !DILocation(line: 3873, column: 15, scope: !11606)
!11608 = !DILocation(line: 3873, column: 11, scope: !11590)
!11609 = !DILocation(line: 3874, column: 2, scope: !11606)
!11610 = !DILocation(line: 3876, column: 18, scope: !11611)
!11611 = distinct !DILexicalBlock(scope: !11590, file: !3, line: 3876, column: 7)
!11612 = !DILocation(line: 3876, column: 23, scope: !11611)
!11613 = !DILocation(line: 3876, column: 16, scope: !11611)
!11614 = !DILocation(line: 3876, column: 12, scope: !11611)
!11615 = !DILocation(line: 3876, column: 41, scope: !11616)
!11616 = distinct !DILexicalBlock(scope: !11611, file: !3, line: 3876, column: 7)
!11617 = !DILocation(line: 3876, column: 7, scope: !11611)
!11618 = !DILocation(line: 3877, column: 6, scope: !11619)
!11619 = distinct !DILexicalBlock(scope: !11616, file: !3, line: 3877, column: 6)
!11620 = !DILocation(line: 3877, column: 11, scope: !11619)
!11621 = !DILocation(line: 3877, column: 20, scope: !11619)
!11622 = !DILocation(line: 3877, column: 23, scope: !11619)
!11623 = !DILocation(line: 3877, column: 6, scope: !11616)
!11624 = !DILocation(line: 3878, column: 11, scope: !11619)
!11625 = !DILocation(line: 3878, column: 16, scope: !11619)
!11626 = !DILocation(line: 3878, column: 4, scope: !11619)
!11627 = !DILocation(line: 3876, column: 52, scope: !11616)
!11628 = !DILocation(line: 3876, column: 57, scope: !11616)
!11629 = !DILocation(line: 3876, column: 50, scope: !11616)
!11630 = !DILocation(line: 3876, column: 7, scope: !11616)
!11631 = distinct !{!11631, !11617, !11632}
!11632 = !DILocation(line: 3878, column: 16, scope: !11611)
!11633 = !DILocation(line: 3879, column: 5, scope: !11590)
!11634 = !DILocation(line: 3881, column: 3, scope: !11459)
!11635 = !DILocation(line: 3882, column: 1, scope: !11459)
!11636 = distinct !DISubprogram(name: "find_comparison_args", scope: !3, file: !3, line: 2966, type: !11637, scopeLine: 2968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!11637 = !DISubroutineType(types: !11638)
!11638 = !{!384, !384, !2281, !2281, !2509, !2509}
!11639 = !DILocalVariable(name: "code", arg: 1, scope: !11636, file: !3, line: 2966, type: !384)
!11640 = !DILocation(line: 2966, column: 37, scope: !11636)
!11641 = !DILocalVariable(name: "parg1", arg: 2, scope: !11636, file: !3, line: 2966, type: !2281)
!11642 = !DILocation(line: 2966, column: 48, scope: !11636)
!11643 = !DILocalVariable(name: "parg2", arg: 3, scope: !11636, file: !3, line: 2966, type: !2281)
!11644 = !DILocation(line: 2966, column: 60, scope: !11636)
!11645 = !DILocalVariable(name: "pmode1", arg: 4, scope: !11636, file: !3, line: 2967, type: !2509)
!11646 = !DILocation(line: 2967, column: 28, scope: !11636)
!11647 = !DILocalVariable(name: "pmode2", arg: 5, scope: !11636, file: !3, line: 2967, type: !2509)
!11648 = !DILocation(line: 2967, column: 55, scope: !11636)
!11649 = !DILocalVariable(name: "arg1", scope: !11636, file: !3, line: 2969, type: !1091)
!11650 = !DILocation(line: 2969, column: 7, scope: !11636)
!11651 = !DILocalVariable(name: "arg2", scope: !11636, file: !3, line: 2969, type: !1091)
!11652 = !DILocation(line: 2969, column: 13, scope: !11636)
!11653 = !DILocation(line: 2971, column: 11, scope: !11636)
!11654 = !DILocation(line: 2971, column: 10, scope: !11636)
!11655 = !DILocation(line: 2971, column: 8, scope: !11636)
!11656 = !DILocation(line: 2971, column: 26, scope: !11636)
!11657 = !DILocation(line: 2971, column: 25, scope: !11636)
!11658 = !DILocation(line: 2971, column: 23, scope: !11636)
!11659 = !DILocation(line: 2975, column: 3, scope: !11636)
!11660 = !DILocation(line: 2975, column: 10, scope: !11636)
!11661 = !DILocation(line: 2975, column: 18, scope: !11636)
!11662 = !DILocation(line: 2975, column: 15, scope: !11636)
!11663 = !DILocalVariable(name: "x", scope: !11664, file: !3, line: 2978, type: !1091)
!11664 = distinct !DILexicalBlock(scope: !11636, file: !3, line: 2976, column: 5)
!11665 = !DILocation(line: 2978, column: 11, scope: !11664)
!11666 = !DILocalVariable(name: "reverse_code", scope: !11664, file: !3, line: 2979, type: !1053)
!11667 = !DILocation(line: 2979, column: 11, scope: !11664)
!11668 = !DILocalVariable(name: "p", scope: !11664, file: !3, line: 2980, type: !2307)
!11669 = !DILocation(line: 2980, column: 25, scope: !11664)
!11670 = !DILocation(line: 2987, column: 11, scope: !11671)
!11671 = distinct !DILexicalBlock(scope: !11664, file: !3, line: 2987, column: 11)
!11672 = !DILocation(line: 2987, column: 27, scope: !11671)
!11673 = !DILocation(line: 2987, column: 38, scope: !11671)
!11674 = !DILocation(line: 2987, column: 41, scope: !11671)
!11675 = !DILocation(line: 2987, column: 49, scope: !11671)
!11676 = !DILocation(line: 2987, column: 46, scope: !11671)
!11677 = !DILocation(line: 2987, column: 11, scope: !11664)
!11678 = !DILocation(line: 2988, column: 6, scope: !11671)
!11679 = !DILocation(line: 2988, column: 4, scope: !11671)
!11680 = !DILocation(line: 2988, column: 2, scope: !11671)
!11681 = !DILocation(line: 2993, column: 16, scope: !11682)
!11682 = distinct !DILexicalBlock(scope: !11671, file: !3, line: 2993, column: 16)
!11683 = !DILocation(line: 2993, column: 16, scope: !11671)
!11684 = !DILocation(line: 2999, column: 8, scope: !11685)
!11685 = distinct !DILexicalBlock(scope: !11686, file: !3, line: 2999, column: 8)
!11686 = distinct !DILexicalBlock(scope: !11682, file: !3, line: 2994, column: 2)
!11687 = !DILocation(line: 2999, column: 13, scope: !11685)
!11688 = !DILocation(line: 3000, column: 8, scope: !11685)
!11689 = !DILocation(line: 3000, column: 12, scope: !11685)
!11690 = !DILocation(line: 3000, column: 45, scope: !11685)
!11691 = !DILocation(line: 3001, column: 5, scope: !11685)
!11692 = !DILocation(line: 3001, column: 8, scope: !11685)
!11693 = !DILocation(line: 3001, column: 13, scope: !11685)
!11694 = !DILocation(line: 3001, column: 19, scope: !11685)
!11695 = !DILocation(line: 2999, column: 8, scope: !11686)
!11696 = !DILocation(line: 3008, column: 10, scope: !11685)
!11697 = !DILocation(line: 3008, column: 8, scope: !11685)
!11698 = !DILocation(line: 3008, column: 6, scope: !11685)
!11699 = !DILocation(line: 3009, column: 13, scope: !11700)
!11700 = distinct !DILexicalBlock(scope: !11685, file: !3, line: 3009, column: 13)
!11701 = !DILocation(line: 3009, column: 18, scope: !11700)
!11702 = !DILocation(line: 3010, column: 6, scope: !11700)
!11703 = !DILocation(line: 3010, column: 10, scope: !11700)
!11704 = !DILocation(line: 3010, column: 43, scope: !11700)
!11705 = !DILocation(line: 3011, column: 10, scope: !11700)
!11706 = !DILocation(line: 3011, column: 13, scope: !11700)
!11707 = !DILocation(line: 3011, column: 18, scope: !11700)
!11708 = !DILocation(line: 3011, column: 24, scope: !11700)
!11709 = !DILocation(line: 3009, column: 13, scope: !11685)
!11710 = !DILocation(line: 3018, column: 10, scope: !11700)
!11711 = !DILocation(line: 3018, column: 8, scope: !11700)
!11712 = !DILocation(line: 3018, column: 29, scope: !11700)
!11713 = !DILocation(line: 3018, column: 6, scope: !11700)
!11714 = !DILocation(line: 3019, column: 2, scope: !11686)
!11715 = !DILocation(line: 3027, column: 11, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11664, file: !3, line: 3027, column: 11)
!11717 = !DILocation(line: 3027, column: 13, scope: !11716)
!11718 = !DILocation(line: 3027, column: 11, scope: !11664)
!11719 = !DILocation(line: 3030, column: 14, scope: !11716)
!11720 = !DILocation(line: 3030, column: 20, scope: !11716)
!11721 = !DILocation(line: 3030, column: 55, scope: !11716)
!11722 = !DILocation(line: 3030, column: 6, scope: !11716)
!11723 = !DILocation(line: 3030, column: 4, scope: !11716)
!11724 = !DILocation(line: 3030, column: 2, scope: !11716)
!11725 = !DILocation(line: 3031, column: 11, scope: !11726)
!11726 = distinct !DILexicalBlock(scope: !11664, file: !3, line: 3031, column: 11)
!11727 = !DILocation(line: 3031, column: 11, scope: !11664)
!11728 = !DILocation(line: 3033, column: 8, scope: !11729)
!11729 = distinct !DILexicalBlock(scope: !11726, file: !3, line: 3032, column: 2)
!11730 = !DILocation(line: 3033, column: 11, scope: !11729)
!11731 = !DILocation(line: 3033, column: 6, scope: !11729)
!11732 = !DILocation(line: 3043, column: 8, scope: !11733)
!11733 = distinct !DILexicalBlock(scope: !11729, file: !3, line: 3043, column: 8)
!11734 = !DILocation(line: 3043, column: 11, scope: !11733)
!11735 = !DILocation(line: 3043, column: 8, scope: !11729)
!11736 = !DILocation(line: 3044, column: 6, scope: !11733)
!11737 = !DILocation(line: 3045, column: 2, scope: !11729)
!11738 = !DILocation(line: 3047, column: 7, scope: !11664)
!11739 = !DILocation(line: 3047, column: 14, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11741, file: !3, line: 3047, column: 7)
!11741 = distinct !DILexicalBlock(scope: !11664, file: !3, line: 3047, column: 7)
!11742 = !DILocation(line: 3047, column: 7, scope: !11741)
!11743 = !DILocalVariable(name: "inner_mode", scope: !11744, file: !3, line: 3049, type: !5)
!11744 = distinct !DILexicalBlock(scope: !11740, file: !3, line: 3048, column: 2)
!11745 = !DILocation(line: 3049, column: 22, scope: !11744)
!11746 = !DILocation(line: 3049, column: 35, scope: !11744)
!11747 = !DILocation(line: 3055, column: 23, scope: !11748)
!11748 = distinct !DILexicalBlock(scope: !11744, file: !3, line: 3055, column: 8)
!11749 = !DILocation(line: 3055, column: 26, scope: !11748)
!11750 = !DILocation(line: 3055, column: 31, scope: !11748)
!11751 = !DILocation(line: 3055, column: 34, scope: !11748)
!11752 = !DILocation(line: 3055, column: 10, scope: !11748)
!11753 = !DILocation(line: 3055, column: 8, scope: !11744)
!11754 = !DILocation(line: 3056, column: 6, scope: !11748)
!11755 = !DILocation(line: 3058, column: 8, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11744, file: !3, line: 3058, column: 8)
!11757 = !DILocation(line: 3058, column: 26, scope: !11756)
!11758 = !DILocation(line: 3066, column: 8, scope: !11756)
!11759 = !DILocation(line: 3066, column: 13, scope: !11756)
!11760 = !DILocation(line: 3066, column: 18, scope: !11756)
!11761 = !DILocation(line: 3067, column: 6, scope: !11756)
!11762 = !DILocation(line: 3067, column: 10, scope: !11756)
!11763 = !DILocation(line: 3067, column: 15, scope: !11756)
!11764 = !DILocation(line: 3068, column: 10, scope: !11756)
!11765 = !DILocation(line: 3068, column: 13, scope: !11756)
!11766 = !DILocation(line: 3068, column: 41, scope: !11756)
!11767 = !DILocation(line: 3069, column: 10, scope: !11756)
!11768 = !DILocation(line: 3069, column: 14, scope: !11756)
!11769 = !DILocation(line: 3070, column: 7, scope: !11756)
!11770 = !DILocation(line: 3071, column: 10, scope: !11756)
!11771 = !DILocation(line: 3073, column: 14, scope: !11756)
!11772 = !DILocation(line: 3073, column: 44, scope: !11756)
!11773 = !DILocation(line: 3073, column: 10, scope: !11756)
!11774 = !DILocation(line: 3072, column: 7, scope: !11756)
!11775 = !DILocation(line: 3081, column: 5, scope: !11756)
!11776 = !DILocation(line: 3081, column: 8, scope: !11756)
!11777 = !DILocation(line: 3058, column: 8, scope: !11744)
!11778 = !DILocation(line: 3083, column: 12, scope: !11779)
!11779 = distinct !DILexicalBlock(scope: !11756, file: !3, line: 3082, column: 6)
!11780 = !DILocation(line: 3083, column: 15, scope: !11779)
!11781 = !DILocation(line: 3083, column: 10, scope: !11779)
!11782 = !DILocation(line: 3084, column: 8, scope: !11779)
!11783 = !DILocation(line: 3086, column: 14, scope: !11784)
!11784 = distinct !DILexicalBlock(scope: !11756, file: !3, line: 3086, column: 13)
!11785 = !DILocation(line: 3086, column: 19, scope: !11784)
!11786 = !DILocation(line: 3087, column: 7, scope: !11784)
!11787 = !DILocation(line: 3087, column: 11, scope: !11784)
!11788 = !DILocation(line: 3087, column: 16, scope: !11784)
!11789 = !DILocation(line: 3088, column: 4, scope: !11784)
!11790 = !DILocation(line: 3088, column: 7, scope: !11784)
!11791 = !DILocation(line: 3088, column: 35, scope: !11784)
!11792 = !DILocation(line: 3089, column: 4, scope: !11784)
!11793 = !DILocation(line: 3089, column: 8, scope: !11784)
!11794 = !DILocation(line: 3090, column: 8, scope: !11784)
!11795 = !DILocation(line: 3091, column: 4, scope: !11784)
!11796 = !DILocation(line: 3093, column: 15, scope: !11784)
!11797 = !DILocation(line: 3093, column: 45, scope: !11784)
!11798 = !DILocation(line: 3093, column: 11, scope: !11784)
!11799 = !DILocation(line: 3092, column: 8, scope: !11784)
!11800 = !DILocation(line: 3101, column: 6, scope: !11784)
!11801 = !DILocation(line: 3101, column: 9, scope: !11784)
!11802 = !DILocation(line: 3086, column: 13, scope: !11756)
!11803 = !DILocation(line: 3103, column: 21, scope: !11804)
!11804 = distinct !DILexicalBlock(scope: !11784, file: !3, line: 3102, column: 6)
!11805 = !DILocation(line: 3104, column: 12, scope: !11804)
!11806 = !DILocation(line: 3104, column: 15, scope: !11804)
!11807 = !DILocation(line: 3104, column: 10, scope: !11804)
!11808 = !DILocation(line: 3105, column: 8, scope: !11804)
!11809 = !DILocation(line: 3111, column: 35, scope: !11810)
!11810 = distinct !DILexicalBlock(scope: !11784, file: !3, line: 3111, column: 13)
!11811 = !DILocation(line: 3111, column: 38, scope: !11810)
!11812 = !DILocation(line: 3111, column: 14, scope: !11810)
!11813 = !DILocation(line: 3111, column: 13, scope: !11784)
!11814 = !DILocation(line: 3113, column: 15, scope: !11815)
!11815 = distinct !DILexicalBlock(scope: !11810, file: !3, line: 3112, column: 6)
!11816 = !DILocation(line: 3113, column: 18, scope: !11815)
!11817 = !DILocation(line: 3113, column: 13, scope: !11815)
!11818 = !DILocation(line: 3114, column: 8, scope: !11815)
!11819 = !DILocation(line: 3116, column: 2, scope: !11744)
!11820 = !DILocation(line: 3047, column: 21, scope: !11740)
!11821 = !DILocation(line: 3047, column: 24, scope: !11740)
!11822 = !DILocation(line: 3047, column: 19, scope: !11740)
!11823 = !DILocation(line: 3047, column: 7, scope: !11740)
!11824 = distinct !{!11824, !11742, !11825}
!11825 = !DILocation(line: 3116, column: 2, scope: !11741)
!11826 = !DILocation(line: 3120, column: 11, scope: !11827)
!11827 = distinct !DILexicalBlock(scope: !11664, file: !3, line: 3120, column: 11)
!11828 = !DILocation(line: 3120, column: 13, scope: !11827)
!11829 = !DILocation(line: 3120, column: 11, scope: !11664)
!11830 = !DILocation(line: 3121, column: 2, scope: !11827)
!11831 = !DILocation(line: 3126, column: 11, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !11664, file: !3, line: 3126, column: 11)
!11833 = !DILocation(line: 3126, column: 11, scope: !11664)
!11834 = !DILocalVariable(name: "reversed", scope: !11835, file: !3, line: 3128, type: !384)
!11835 = distinct !DILexicalBlock(scope: !11832, file: !3, line: 3127, column: 2)
!11836 = !DILocation(line: 3128, column: 18, scope: !11835)
!11837 = !DILocation(line: 3128, column: 55, scope: !11835)
!11838 = !DILocation(line: 3128, column: 29, scope: !11835)
!11839 = !DILocation(line: 3129, column: 8, scope: !11840)
!11840 = distinct !DILexicalBlock(scope: !11835, file: !3, line: 3129, column: 8)
!11841 = !DILocation(line: 3129, column: 17, scope: !11840)
!11842 = !DILocation(line: 3129, column: 8, scope: !11835)
!11843 = !DILocation(line: 3130, column: 6, scope: !11840)
!11844 = !DILocation(line: 3132, column: 13, scope: !11840)
!11845 = !DILocation(line: 3132, column: 11, scope: !11840)
!11846 = !DILocation(line: 3133, column: 2, scope: !11835)
!11847 = !DILocation(line: 3134, column: 16, scope: !11848)
!11848 = distinct !DILexicalBlock(scope: !11832, file: !3, line: 3134, column: 16)
!11849 = !DILocation(line: 3134, column: 16, scope: !11832)
!11850 = !DILocation(line: 3135, column: 9, scope: !11848)
!11851 = !DILocation(line: 3135, column: 7, scope: !11848)
!11852 = !DILocation(line: 3135, column: 2, scope: !11848)
!11853 = !DILocation(line: 3136, column: 14, scope: !11664)
!11854 = !DILocation(line: 3136, column: 12, scope: !11664)
!11855 = !DILocation(line: 3136, column: 34, scope: !11664)
!11856 = !DILocation(line: 3136, column: 32, scope: !11664)
!11857 = distinct !{!11857, !11659, !11858}
!11858 = !DILocation(line: 3137, column: 5, scope: !11636)
!11859 = !DILocation(line: 3141, column: 13, scope: !11636)
!11860 = !DILocation(line: 3141, column: 4, scope: !11636)
!11861 = !DILocation(line: 3141, column: 11, scope: !11636)
!11862 = !DILocation(line: 3141, column: 40, scope: !11636)
!11863 = !DILocation(line: 3141, column: 31, scope: !11636)
!11864 = !DILocation(line: 3141, column: 38, scope: !11636)
!11865 = !DILocation(line: 3142, column: 22, scope: !11636)
!11866 = !DILocation(line: 3142, column: 12, scope: !11636)
!11867 = !DILocation(line: 3142, column: 4, scope: !11636)
!11868 = !DILocation(line: 3142, column: 10, scope: !11636)
!11869 = !DILocation(line: 3142, column: 51, scope: !11636)
!11870 = !DILocation(line: 3142, column: 41, scope: !11636)
!11871 = !DILocation(line: 3142, column: 33, scope: !11636)
!11872 = !DILocation(line: 3142, column: 39, scope: !11636)
!11873 = !DILocation(line: 3144, column: 10, scope: !11636)
!11874 = !DILocation(line: 3144, column: 3, scope: !11636)
!11875 = distinct !DISubprogram(name: "safe_hash", scope: !3, file: !3, line: 2588, type: !8476, scopeLine: 2589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!11876 = !DILocalVariable(name: "x", arg: 1, scope: !11875, file: !3, line: 2588, type: !1091)
!11877 = !DILocation(line: 2588, column: 16, scope: !11875)
!11878 = !DILocalVariable(name: "mode", arg: 2, scope: !11875, file: !3, line: 2588, type: !5)
!11879 = !DILocation(line: 2588, column: 37, scope: !11875)
!11880 = !DILocalVariable(name: "dummy_do_not_record", scope: !11875, file: !3, line: 2590, type: !1053)
!11881 = !DILocation(line: 2590, column: 7, scope: !11875)
!11882 = !DILocation(line: 2591, column: 20, scope: !11875)
!11883 = !DILocation(line: 2591, column: 23, scope: !11875)
!11884 = !DILocation(line: 2591, column: 10, scope: !11875)
!11885 = !DILocation(line: 2591, column: 3, scope: !11875)
!11886 = distinct !DISubprogram(name: "lookup_as_function", scope: !3, file: !3, line: 1541, type: !11887, scopeLine: 1542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!11887 = !DISubroutineType(types: !11888)
!11888 = !{!1091, !1091, !384}
!11889 = !DILocalVariable(name: "x", arg: 1, scope: !11886, file: !3, line: 1541, type: !1091)
!11890 = !DILocation(line: 1541, column: 25, scope: !11886)
!11891 = !DILocalVariable(name: "code", arg: 2, scope: !11886, file: !3, line: 1541, type: !384)
!11892 = !DILocation(line: 1541, column: 42, scope: !11886)
!11893 = !DILocalVariable(name: "p", scope: !11886, file: !3, line: 1543, type: !2307)
!11894 = !DILocation(line: 1543, column: 21, scope: !11886)
!11895 = !DILocation(line: 1544, column: 15, scope: !11886)
!11896 = !DILocation(line: 1544, column: 18, scope: !11886)
!11897 = !DILocation(line: 1544, column: 43, scope: !11886)
!11898 = !DILocation(line: 1544, column: 7, scope: !11886)
!11899 = !DILocation(line: 1546, column: 7, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11886, file: !3, line: 1546, column: 7)
!11901 = !DILocation(line: 1546, column: 9, scope: !11900)
!11902 = !DILocation(line: 1546, column: 7, scope: !11886)
!11903 = !DILocation(line: 1547, column: 5, scope: !11900)
!11904 = !DILocation(line: 1549, column: 12, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11886, file: !3, line: 1549, column: 3)
!11906 = !DILocation(line: 1549, column: 15, scope: !11905)
!11907 = !DILocation(line: 1549, column: 10, scope: !11905)
!11908 = !DILocation(line: 1549, column: 8, scope: !11905)
!11909 = !DILocation(line: 1549, column: 33, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11905, file: !3, line: 1549, column: 3)
!11911 = !DILocation(line: 1549, column: 3, scope: !11905)
!11912 = !DILocation(line: 1550, column: 9, scope: !11913)
!11913 = distinct !DILexicalBlock(scope: !11910, file: !3, line: 1550, column: 9)
!11914 = !DILocation(line: 1550, column: 30, scope: !11913)
!11915 = !DILocation(line: 1550, column: 27, scope: !11913)
!11916 = !DILocation(line: 1552, column: 2, scope: !11913)
!11917 = !DILocation(line: 1552, column: 18, scope: !11913)
!11918 = !DILocation(line: 1552, column: 21, scope: !11913)
!11919 = !DILocation(line: 1552, column: 26, scope: !11913)
!11920 = !DILocation(line: 1552, column: 29, scope: !11913)
!11921 = !DILocation(line: 1552, column: 5, scope: !11913)
!11922 = !DILocation(line: 1550, column: 9, scope: !11910)
!11923 = !DILocation(line: 1553, column: 14, scope: !11913)
!11924 = !DILocation(line: 1553, column: 17, scope: !11913)
!11925 = !DILocation(line: 1553, column: 7, scope: !11913)
!11926 = !DILocation(line: 1552, column: 42, scope: !11913)
!11927 = !DILocation(line: 1549, column: 40, scope: !11910)
!11928 = !DILocation(line: 1549, column: 43, scope: !11910)
!11929 = !DILocation(line: 1549, column: 38, scope: !11910)
!11930 = !DILocation(line: 1549, column: 3, scope: !11910)
!11931 = distinct !{!11931, !11911, !11932}
!11932 = !DILocation(line: 1553, column: 17, scope: !11905)
!11933 = !DILocation(line: 1555, column: 3, scope: !11886)
!11934 = !DILocation(line: 1556, column: 1, scope: !11886)
!11935 = distinct !DISubprogram(name: "compute_const_anchors", scope: !3, file: !3, line: 1229, type: !11936, scopeLine: 1232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!11936 = !DISubroutineType(types: !11937)
!11937 = !{!1052, !1091, !11938, !11938, !11938, !11938}
!11938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!11939 = !DILocalVariable(name: "cst", arg: 1, scope: !11935, file: !3, line: 1229, type: !1091)
!11940 = !DILocation(line: 1229, column: 28, scope: !11935)
!11941 = !DILocalVariable(name: "lower_base", arg: 2, scope: !11935, file: !3, line: 1230, type: !11938)
!11942 = !DILocation(line: 1230, column: 25, scope: !11935)
!11943 = !DILocalVariable(name: "lower_offs", arg: 3, scope: !11935, file: !3, line: 1230, type: !11938)
!11944 = !DILocation(line: 1230, column: 52, scope: !11935)
!11945 = !DILocalVariable(name: "upper_base", arg: 4, scope: !11935, file: !3, line: 1231, type: !11938)
!11946 = !DILocation(line: 1231, column: 25, scope: !11935)
!11947 = !DILocalVariable(name: "upper_offs", arg: 5, scope: !11935, file: !3, line: 1231, type: !11938)
!11948 = !DILocation(line: 1231, column: 52, scope: !11935)
!11949 = !DILocalVariable(name: "n", scope: !11935, file: !3, line: 1233, type: !1048)
!11950 = !DILocation(line: 1233, column: 17, scope: !11935)
!11951 = !DILocation(line: 1233, column: 21, scope: !11935)
!11952 = !DILocation(line: 1235, column: 17, scope: !11935)
!11953 = !DILocation(line: 1235, column: 31, scope: !11935)
!11954 = !DILocation(line: 1235, column: 44, scope: !11935)
!11955 = !DILocation(line: 1235, column: 21, scope: !11935)
!11956 = !DILocation(line: 1235, column: 19, scope: !11935)
!11957 = !DILocation(line: 1235, column: 4, scope: !11935)
!11958 = !DILocation(line: 1235, column: 15, scope: !11935)
!11959 = !DILocation(line: 1236, column: 8, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11935, file: !3, line: 1236, column: 7)
!11961 = !DILocation(line: 1236, column: 7, scope: !11960)
!11962 = !DILocation(line: 1236, column: 22, scope: !11960)
!11963 = !DILocation(line: 1236, column: 19, scope: !11960)
!11964 = !DILocation(line: 1236, column: 7, scope: !11935)
!11965 = !DILocation(line: 1237, column: 5, scope: !11960)
!11966 = !DILocation(line: 1240, column: 6, scope: !11935)
!11967 = !DILocation(line: 1240, column: 19, scope: !11935)
!11968 = !DILocation(line: 1240, column: 32, scope: !11935)
!11969 = !DILocation(line: 1240, column: 8, scope: !11935)
!11970 = !DILocation(line: 1240, column: 50, scope: !11935)
!11971 = !DILocation(line: 1240, column: 63, scope: !11935)
!11972 = !DILocation(line: 1240, column: 40, scope: !11935)
!11973 = !DILocation(line: 1240, column: 38, scope: !11935)
!11974 = !DILocation(line: 1239, column: 4, scope: !11935)
!11975 = !DILocation(line: 1239, column: 15, scope: !11935)
!11976 = !DILocation(line: 1241, column: 17, scope: !11935)
!11977 = !DILocation(line: 1241, column: 22, scope: !11935)
!11978 = !DILocation(line: 1241, column: 21, scope: !11935)
!11979 = !DILocation(line: 1241, column: 19, scope: !11935)
!11980 = !DILocation(line: 1241, column: 4, scope: !11935)
!11981 = !DILocation(line: 1241, column: 15, scope: !11935)
!11982 = !DILocation(line: 1242, column: 17, scope: !11935)
!11983 = !DILocation(line: 1242, column: 22, scope: !11935)
!11984 = !DILocation(line: 1242, column: 21, scope: !11935)
!11985 = !DILocation(line: 1242, column: 19, scope: !11935)
!11986 = !DILocation(line: 1242, column: 4, scope: !11935)
!11987 = !DILocation(line: 1242, column: 15, scope: !11935)
!11988 = !DILocation(line: 1243, column: 3, scope: !11935)
!11989 = !DILocation(line: 1244, column: 1, scope: !11935)
!11990 = distinct !DISubprogram(name: "find_reg_offset_for_const", scope: !3, file: !3, line: 1307, type: !11991, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!11991 = !DISubroutineType(types: !11992)
!11992 = !{!1091, !2307, !1048, !2428}
!11993 = !DILocalVariable(name: "anchor_elt", arg: 1, scope: !11990, file: !3, line: 1307, type: !2307)
!11994 = !DILocation(line: 1307, column: 46, scope: !11990)
!11995 = !DILocalVariable(name: "offs", arg: 2, scope: !11990, file: !3, line: 1307, type: !1048)
!11996 = !DILocation(line: 1307, column: 72, scope: !11990)
!11997 = !DILocalVariable(name: "old", arg: 3, scope: !11990, file: !3, line: 1308, type: !2428)
!11998 = !DILocation(line: 1308, column: 17, scope: !11990)
!11999 = !DILocalVariable(name: "elt", scope: !11990, file: !3, line: 1310, type: !2307)
!12000 = !DILocation(line: 1310, column: 21, scope: !11990)
!12001 = !DILocalVariable(name: "idx", scope: !11990, file: !3, line: 1311, type: !7)
!12002 = !DILocation(line: 1311, column: 12, scope: !11990)
!12003 = !DILocalVariable(name: "match_elt", scope: !11990, file: !3, line: 1312, type: !2307)
!12004 = !DILocation(line: 1312, column: 21, scope: !11990)
!12005 = !DILocalVariable(name: "match", scope: !11990, file: !3, line: 1313, type: !1091)
!12006 = !DILocation(line: 1313, column: 7, scope: !11990)
!12007 = !DILocation(line: 1318, column: 13, scope: !11990)
!12008 = !DILocation(line: 1319, column: 9, scope: !11990)
!12009 = !DILocation(line: 1320, column: 14, scope: !12010)
!12010 = distinct !DILexicalBlock(scope: !11990, file: !3, line: 1320, column: 3)
!12011 = !DILocation(line: 1320, column: 26, scope: !12010)
!12012 = !DILocation(line: 1320, column: 12, scope: !12010)
!12013 = !DILocation(line: 1320, column: 48, scope: !12010)
!12014 = !DILocation(line: 1320, column: 8, scope: !12010)
!12015 = !DILocation(line: 1321, column: 8, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !12010, file: !3, line: 1320, column: 3)
!12017 = !DILocation(line: 1320, column: 3, scope: !12010)
!12018 = !DILocation(line: 1324, column: 11, scope: !12019)
!12019 = distinct !DILexicalBlock(scope: !12020, file: !3, line: 1324, column: 11)
!12020 = distinct !DILexicalBlock(scope: !12016, file: !3, line: 1323, column: 5)
!12021 = !DILocation(line: 1324, column: 21, scope: !12019)
!12022 = !DILocation(line: 1324, column: 24, scope: !12019)
!12023 = !DILocation(line: 1324, column: 11, scope: !12020)
!12024 = !DILocation(line: 1325, column: 9, scope: !12019)
!12025 = !DILocation(line: 1325, column: 2, scope: !12019)
!12026 = !DILocation(line: 1327, column: 11, scope: !12027)
!12027 = distinct !DILexicalBlock(scope: !12020, file: !3, line: 1327, column: 11)
!12028 = !DILocation(line: 1328, column: 4, scope: !12027)
!12029 = !DILocation(line: 1328, column: 8, scope: !12027)
!12030 = !DILocation(line: 1328, column: 28, scope: !12027)
!12031 = !DILocation(line: 1329, column: 8, scope: !12027)
!12032 = !DILocation(line: 1329, column: 11, scope: !12027)
!12033 = !DILocation(line: 1330, column: 8, scope: !12027)
!12034 = !DILocation(line: 1330, column: 11, scope: !12027)
!12035 = !DILocation(line: 1330, column: 41, scope: !12027)
!12036 = !DILocation(line: 1327, column: 11, scope: !12020)
!12037 = !DILocalVariable(name: "x", scope: !12038, file: !3, line: 1332, type: !1091)
!12038 = distinct !DILexicalBlock(scope: !12027, file: !3, line: 1331, column: 2)
!12039 = !DILocation(line: 1332, column: 8, scope: !12038)
!12040 = !DILocation(line: 1335, column: 9, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !12038, file: !3, line: 1335, column: 8)
!12042 = !DILocation(line: 1335, column: 26, scope: !12041)
!12043 = !DILocation(line: 1335, column: 43, scope: !12041)
!12044 = !DILocation(line: 1335, column: 48, scope: !12041)
!12045 = !DILocation(line: 1335, column: 53, scope: !12041)
!12046 = !DILocation(line: 1335, column: 58, scope: !12041)
!12047 = !DILocation(line: 1335, column: 30, scope: !12041)
!12048 = !DILocation(line: 1335, column: 8, scope: !12038)
!12049 = !DILocation(line: 1336, column: 6, scope: !12041)
!12050 = !DILocation(line: 1338, column: 23, scope: !12038)
!12051 = !DILocation(line: 1338, column: 28, scope: !12038)
!12052 = !DILocation(line: 1338, column: 33, scope: !12038)
!12053 = !DILocation(line: 1338, column: 8, scope: !12038)
!12054 = !DILocation(line: 1338, column: 6, scope: !12038)
!12055 = !DILocation(line: 1339, column: 8, scope: !12056)
!12056 = distinct !DILexicalBlock(scope: !12038, file: !3, line: 1339, column: 8)
!12057 = !DILocation(line: 1340, column: 8, scope: !12056)
!12058 = !DILocation(line: 1340, column: 12, scope: !12056)
!12059 = !DILocation(line: 1340, column: 25, scope: !12056)
!12060 = !DILocation(line: 1341, column: 5, scope: !12056)
!12061 = !DILocation(line: 1341, column: 8, scope: !12056)
!12062 = !DILocation(line: 1339, column: 8, scope: !12038)
!12063 = !DILocation(line: 1345, column: 16, scope: !12064)
!12064 = distinct !DILexicalBlock(scope: !12056, file: !3, line: 1344, column: 6)
!12065 = !DILocation(line: 1345, column: 14, scope: !12064)
!12066 = !DILocation(line: 1346, column: 20, scope: !12064)
!12067 = !DILocation(line: 1346, column: 18, scope: !12064)
!12068 = !DILocation(line: 1347, column: 15, scope: !12064)
!12069 = !DILocation(line: 1347, column: 9, scope: !12064)
!12070 = !DILocation(line: 1347, column: 13, scope: !12064)
!12071 = !DILocation(line: 1348, column: 6, scope: !12064)
!12072 = !DILocation(line: 1349, column: 2, scope: !12038)
!12073 = !DILocation(line: 1350, column: 5, scope: !12020)
!12074 = !DILocation(line: 1322, column: 14, scope: !12016)
!12075 = !DILocation(line: 1322, column: 19, scope: !12016)
!12076 = !DILocation(line: 1322, column: 12, scope: !12016)
!12077 = !DILocation(line: 1322, column: 39, scope: !12016)
!12078 = !DILocation(line: 1320, column: 3, scope: !12016)
!12079 = distinct !{!12079, !12017, !12080}
!12080 = !DILocation(line: 1350, column: 5, scope: !12010)
!12081 = !DILocation(line: 1352, column: 10, scope: !11990)
!12082 = !DILocation(line: 1352, column: 3, scope: !11990)
!12083 = !DILocation(line: 1353, column: 1, scope: !11990)
!12084 = distinct !DISubprogram(name: "approx_reg_cost_1", scope: !3, file: !3, line: 676, type: !8213, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!12085 = !DILocalVariable(name: "xp", arg: 1, scope: !12084, file: !3, line: 676, type: !2281)
!12086 = !DILocation(line: 676, column: 25, scope: !12084)
!12087 = !DILocalVariable(name: "data", arg: 2, scope: !12084, file: !3, line: 676, type: !1019)
!12088 = !DILocation(line: 676, column: 35, scope: !12084)
!12089 = !DILocalVariable(name: "x", scope: !12084, file: !3, line: 678, type: !1091)
!12090 = !DILocation(line: 678, column: 7, scope: !12084)
!12091 = !DILocation(line: 678, column: 12, scope: !12084)
!12092 = !DILocation(line: 678, column: 11, scope: !12084)
!12093 = !DILocalVariable(name: "cost_p", scope: !12084, file: !3, line: 679, type: !1054)
!12094 = !DILocation(line: 679, column: 8, scope: !12084)
!12095 = !DILocation(line: 679, column: 25, scope: !12084)
!12096 = !DILocation(line: 679, column: 17, scope: !12084)
!12097 = !DILocation(line: 681, column: 7, scope: !12098)
!12098 = distinct !DILexicalBlock(scope: !12084, file: !3, line: 681, column: 7)
!12099 = !DILocation(line: 681, column: 9, scope: !12098)
!12100 = !DILocation(line: 681, column: 12, scope: !12098)
!12101 = !DILocation(line: 681, column: 7, scope: !12084)
!12102 = !DILocalVariable(name: "regno", scope: !12103, file: !3, line: 683, type: !7)
!12103 = distinct !DILexicalBlock(scope: !12098, file: !3, line: 682, column: 5)
!12104 = !DILocation(line: 683, column: 20, scope: !12103)
!12105 = !DILocation(line: 683, column: 28, scope: !12103)
!12106 = !DILocation(line: 685, column: 13, scope: !12107)
!12107 = distinct !DILexicalBlock(scope: !12103, file: !3, line: 685, column: 11)
!12108 = !DILocation(line: 685, column: 11, scope: !12103)
!12109 = !DILocation(line: 687, column: 8, scope: !12110)
!12110 = distinct !DILexicalBlock(scope: !12111, file: !3, line: 687, column: 8)
!12111 = distinct !DILexicalBlock(scope: !12107, file: !3, line: 686, column: 2)
!12112 = !DILocation(line: 687, column: 14, scope: !12110)
!12113 = !DILocation(line: 687, column: 8, scope: !12111)
!12114 = !DILocation(line: 690, column: 3, scope: !12115)
!12115 = distinct !DILexicalBlock(scope: !12116, file: !3, line: 689, column: 12)
!12116 = distinct !DILexicalBlock(scope: !12110, file: !3, line: 688, column: 6)
!12117 = !DILocation(line: 694, column: 7, scope: !12110)
!12118 = !DILocation(line: 694, column: 14, scope: !12110)
!12119 = !DILocation(line: 695, column: 2, scope: !12111)
!12120 = !DILocation(line: 696, column: 5, scope: !12103)
!12121 = !DILocation(line: 698, column: 3, scope: !12084)
!12122 = !DILocation(line: 699, column: 1, scope: !12084)
!12123 = distinct !DISubprogram(name: "make_regs_eqv", scope: !3, file: !3, line: 929, type: !12124, scopeLine: 930, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!12124 = !DISubroutineType(types: !12125)
!12125 = !{null, !7, !7}
!12126 = !DILocalVariable(name: "new_reg", arg: 1, scope: !12123, file: !3, line: 929, type: !7)
!12127 = !DILocation(line: 929, column: 29, scope: !12123)
!12128 = !DILocalVariable(name: "old_reg", arg: 2, scope: !12123, file: !3, line: 929, type: !7)
!12129 = !DILocation(line: 929, column: 51, scope: !12123)
!12130 = !DILocalVariable(name: "lastr", scope: !12123, file: !3, line: 931, type: !7)
!12131 = !DILocation(line: 931, column: 16, scope: !12123)
!12132 = !DILocalVariable(name: "firstr", scope: !12123, file: !3, line: 931, type: !7)
!12133 = !DILocation(line: 931, column: 23, scope: !12123)
!12134 = !DILocalVariable(name: "q", scope: !12123, file: !3, line: 932, type: !1053)
!12135 = !DILocation(line: 932, column: 7, scope: !12123)
!12136 = !DILocation(line: 932, column: 11, scope: !12123)
!12137 = !DILocalVariable(name: "ent", scope: !12123, file: !3, line: 933, type: !2216)
!12138 = !DILocation(line: 933, column: 26, scope: !12123)
!12139 = !DILocation(line: 935, column: 10, scope: !12123)
!12140 = !DILocation(line: 935, column: 20, scope: !12123)
!12141 = !DILocation(line: 935, column: 7, scope: !12123)
!12142 = !DILocation(line: 938, column: 3, scope: !12123)
!12143 = !DILocation(line: 940, column: 23, scope: !12123)
!12144 = !DILocation(line: 940, column: 3, scope: !12123)
!12145 = !DILocation(line: 940, column: 21, scope: !12123)
!12146 = !DILocation(line: 941, column: 12, scope: !12123)
!12147 = !DILocation(line: 941, column: 17, scope: !12123)
!12148 = !DILocation(line: 941, column: 10, scope: !12123)
!12149 = !DILocation(line: 942, column: 11, scope: !12123)
!12150 = !DILocation(line: 942, column: 16, scope: !12123)
!12151 = !DILocation(line: 942, column: 9, scope: !12123)
!12152 = !DILocation(line: 948, column: 10, scope: !12153)
!12153 = distinct !DILexicalBlock(scope: !12123, file: !3, line: 948, column: 7)
!12154 = !DILocation(line: 948, column: 17, scope: !12153)
!12155 = !DILocation(line: 948, column: 41, scope: !12153)
!12156 = !DILocation(line: 948, column: 44, scope: !12153)
!12157 = !DILocation(line: 953, column: 7, scope: !12153)
!12158 = !DILocation(line: 953, column: 11, scope: !12153)
!12159 = !DILocation(line: 953, column: 19, scope: !12153)
!12160 = !DILocation(line: 953, column: 44, scope: !12153)
!12161 = !DILocation(line: 953, column: 47, scope: !12153)
!12162 = !DILocation(line: 953, column: 73, scope: !12153)
!12163 = !DILocation(line: 954, column: 7, scope: !12153)
!12164 = !DILocation(line: 954, column: 12, scope: !12153)
!12165 = !DILocation(line: 954, column: 20, scope: !12153)
!12166 = !DILocation(line: 954, column: 44, scope: !12153)
!12167 = !DILocation(line: 954, column: 47, scope: !12153)
!12168 = !DILocation(line: 955, column: 4, scope: !12153)
!12169 = !DILocation(line: 955, column: 8, scope: !12153)
!12170 = !DILocation(line: 955, column: 16, scope: !12153)
!12171 = !DILocation(line: 956, column: 8, scope: !12153)
!12172 = !DILocation(line: 956, column: 12, scope: !12153)
!12173 = !DILocation(line: 956, column: 19, scope: !12153)
!12174 = !DILocation(line: 957, column: 5, scope: !12153)
!12175 = !DILocation(line: 957, column: 23, scope: !12153)
!12176 = !DILocation(line: 957, column: 41, scope: !12153)
!12177 = !DILocation(line: 957, column: 9, scope: !12153)
!12178 = !DILocation(line: 958, column: 9, scope: !12153)
!12179 = !DILocation(line: 958, column: 27, scope: !12153)
!12180 = !DILocation(line: 958, column: 45, scope: !12153)
!12181 = !DILocation(line: 958, column: 13, scope: !12153)
!12182 = !DILocation(line: 959, column: 5, scope: !12153)
!12183 = !DILocation(line: 959, column: 23, scope: !12153)
!12184 = !DILocation(line: 959, column: 40, scope: !12153)
!12185 = !DILocation(line: 959, column: 9, scope: !12153)
!12186 = !DILocation(line: 960, column: 9, scope: !12153)
!12187 = !DILocation(line: 960, column: 27, scope: !12153)
!12188 = !DILocation(line: 960, column: 44, scope: !12153)
!12189 = !DILocation(line: 960, column: 13, scope: !12153)
!12190 = !DILocation(line: 948, column: 7, scope: !12123)
!12191 = !DILocation(line: 962, column: 36, scope: !12192)
!12192 = distinct !DILexicalBlock(scope: !12153, file: !3, line: 961, column: 5)
!12193 = !DILocation(line: 962, column: 7, scope: !12192)
!12194 = !DILocation(line: 962, column: 21, scope: !12192)
!12195 = !DILocation(line: 962, column: 29, scope: !12192)
!12196 = !DILocation(line: 962, column: 34, scope: !12192)
!12197 = !DILocation(line: 963, column: 37, scope: !12192)
!12198 = !DILocation(line: 963, column: 7, scope: !12192)
!12199 = !DILocation(line: 963, column: 21, scope: !12192)
!12200 = !DILocation(line: 963, column: 30, scope: !12192)
!12201 = !DILocation(line: 963, column: 35, scope: !12192)
!12202 = !DILocation(line: 964, column: 7, scope: !12192)
!12203 = !DILocation(line: 964, column: 21, scope: !12192)
!12204 = !DILocation(line: 964, column: 30, scope: !12192)
!12205 = !DILocation(line: 964, column: 35, scope: !12192)
!12206 = !DILocation(line: 965, column: 24, scope: !12192)
!12207 = !DILocation(line: 965, column: 7, scope: !12192)
!12208 = !DILocation(line: 965, column: 12, scope: !12192)
!12209 = !DILocation(line: 965, column: 22, scope: !12192)
!12210 = !DILocation(line: 966, column: 5, scope: !12192)
!12211 = !DILocation(line: 973, column: 7, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12153, file: !3, line: 968, column: 5)
!12213 = !DILocation(line: 973, column: 14, scope: !12212)
!12214 = !DILocation(line: 973, column: 20, scope: !12212)
!12215 = !DILocation(line: 973, column: 44, scope: !12212)
!12216 = !DILocation(line: 973, column: 47, scope: !12212)
!12217 = !DILocation(line: 973, column: 61, scope: !12212)
!12218 = !DILocation(line: 973, column: 68, scope: !12212)
!12219 = !DILocation(line: 973, column: 73, scope: !12212)
!12220 = !DILocation(line: 974, column: 7, scope: !12212)
!12221 = !DILocation(line: 974, column: 11, scope: !12212)
!12222 = !DILocation(line: 974, column: 35, scope: !12212)
!12223 = !DILocation(line: 974, column: 46, scope: !12212)
!12224 = !DILocation(line: 974, column: 51, scope: !12212)
!12225 = !DILocation(line: 975, column: 7, scope: !12212)
!12226 = !DILocation(line: 975, column: 10, scope: !12212)
!12227 = !DILocation(line: 975, column: 18, scope: !12212)
!12228 = !DILocation(line: 0, scope: !12212)
!12229 = !DILocation(line: 976, column: 10, scope: !12212)
!12230 = !DILocation(line: 976, column: 24, scope: !12212)
!12231 = !DILocation(line: 976, column: 31, scope: !12212)
!12232 = !DILocation(line: 976, column: 8, scope: !12212)
!12233 = distinct !{!12233, !12211, !12231}
!12234 = !DILocation(line: 977, column: 37, scope: !12212)
!12235 = !DILocation(line: 977, column: 51, scope: !12212)
!12236 = !DILocation(line: 977, column: 58, scope: !12212)
!12237 = !DILocation(line: 977, column: 7, scope: !12212)
!12238 = !DILocation(line: 977, column: 21, scope: !12212)
!12239 = !DILocation(line: 977, column: 30, scope: !12212)
!12240 = !DILocation(line: 977, column: 35, scope: !12212)
!12241 = !DILocation(line: 978, column: 11, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !12212, file: !3, line: 978, column: 11)
!12243 = !DILocation(line: 978, column: 25, scope: !12242)
!12244 = !DILocation(line: 978, column: 32, scope: !12242)
!12245 = !DILocation(line: 978, column: 37, scope: !12242)
!12246 = !DILocation(line: 978, column: 11, scope: !12212)
!12247 = !DILocation(line: 979, column: 50, scope: !12242)
!12248 = !DILocation(line: 979, column: 2, scope: !12242)
!12249 = !DILocation(line: 979, column: 16, scope: !12242)
!12250 = !DILocation(line: 979, column: 30, scope: !12242)
!12251 = !DILocation(line: 979, column: 37, scope: !12242)
!12252 = !DILocation(line: 979, column: 43, scope: !12242)
!12253 = !DILocation(line: 979, column: 48, scope: !12242)
!12254 = !DILocation(line: 981, column: 26, scope: !12242)
!12255 = !DILocation(line: 981, column: 2, scope: !12242)
!12256 = !DILocation(line: 981, column: 12, scope: !12242)
!12257 = !DILocation(line: 981, column: 15, scope: !12242)
!12258 = !DILocation(line: 981, column: 24, scope: !12242)
!12259 = !DILocation(line: 982, column: 35, scope: !12212)
!12260 = !DILocation(line: 982, column: 7, scope: !12212)
!12261 = !DILocation(line: 982, column: 21, scope: !12212)
!12262 = !DILocation(line: 982, column: 28, scope: !12212)
!12263 = !DILocation(line: 982, column: 33, scope: !12212)
!12264 = !DILocation(line: 983, column: 37, scope: !12212)
!12265 = !DILocation(line: 983, column: 7, scope: !12212)
!12266 = !DILocation(line: 983, column: 21, scope: !12212)
!12267 = !DILocation(line: 983, column: 30, scope: !12212)
!12268 = !DILocation(line: 983, column: 35, scope: !12212)
!12269 = !DILocation(line: 985, column: 1, scope: !12123)
!12270 = distinct !DISubprogram(name: "make_new_qty", scope: !3, file: !3, line: 905, type: !12271, scopeLine: 906, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!12271 = !DISubroutineType(types: !12272)
!12272 = !{null, !7, !5}
!12273 = !DILocalVariable(name: "reg", arg: 1, scope: !12270, file: !3, line: 905, type: !7)
!12274 = !DILocation(line: 905, column: 28, scope: !12270)
!12275 = !DILocalVariable(name: "mode", arg: 2, scope: !12270, file: !3, line: 905, type: !5)
!12276 = !DILocation(line: 905, column: 51, scope: !12270)
!12277 = !DILocalVariable(name: "q", scope: !12270, file: !3, line: 907, type: !1053)
!12278 = !DILocation(line: 907, column: 7, scope: !12270)
!12279 = !DILocalVariable(name: "ent", scope: !12270, file: !3, line: 908, type: !2216)
!12280 = !DILocation(line: 908, column: 26, scope: !12270)
!12281 = !DILocalVariable(name: "eqv", scope: !12270, file: !3, line: 909, type: !2203)
!12282 = !DILocation(line: 909, column: 24, scope: !12270)
!12283 = !DILocation(line: 911, column: 3, scope: !12270)
!12284 = !DILocation(line: 913, column: 31, scope: !12270)
!12285 = !DILocation(line: 913, column: 7, scope: !12270)
!12286 = !DILocation(line: 913, column: 21, scope: !12270)
!12287 = !DILocation(line: 913, column: 5, scope: !12270)
!12288 = !DILocation(line: 914, column: 10, scope: !12270)
!12289 = !DILocation(line: 914, column: 20, scope: !12270)
!12290 = !DILocation(line: 914, column: 7, scope: !12270)
!12291 = !DILocation(line: 915, column: 20, scope: !12270)
!12292 = !DILocation(line: 915, column: 3, scope: !12270)
!12293 = !DILocation(line: 915, column: 8, scope: !12270)
!12294 = !DILocation(line: 915, column: 18, scope: !12270)
!12295 = !DILocation(line: 916, column: 19, scope: !12270)
!12296 = !DILocation(line: 916, column: 3, scope: !12270)
!12297 = !DILocation(line: 916, column: 8, scope: !12270)
!12298 = !DILocation(line: 916, column: 17, scope: !12270)
!12299 = !DILocation(line: 917, column: 15, scope: !12270)
!12300 = !DILocation(line: 917, column: 3, scope: !12270)
!12301 = !DILocation(line: 917, column: 8, scope: !12270)
!12302 = !DILocation(line: 917, column: 13, scope: !12270)
!12303 = !DILocation(line: 918, column: 20, scope: !12270)
!12304 = !DILocation(line: 918, column: 25, scope: !12270)
!12305 = !DILocation(line: 918, column: 36, scope: !12270)
!12306 = !DILocation(line: 918, column: 3, scope: !12270)
!12307 = !DILocation(line: 918, column: 8, scope: !12270)
!12308 = !DILocation(line: 918, column: 18, scope: !12270)
!12309 = !DILocation(line: 919, column: 3, scope: !12270)
!12310 = !DILocation(line: 919, column: 8, scope: !12270)
!12311 = !DILocation(line: 919, column: 24, scope: !12270)
!12312 = !DILocation(line: 921, column: 10, scope: !12270)
!12313 = !DILocation(line: 921, column: 24, scope: !12270)
!12314 = !DILocation(line: 921, column: 7, scope: !12270)
!12315 = !DILocation(line: 922, column: 15, scope: !12270)
!12316 = !DILocation(line: 922, column: 20, scope: !12270)
!12317 = !DILocation(line: 922, column: 25, scope: !12270)
!12318 = !DILocation(line: 922, column: 3, scope: !12270)
!12319 = !DILocation(line: 922, column: 8, scope: !12270)
!12320 = !DILocation(line: 922, column: 13, scope: !12270)
!12321 = !DILocation(line: 923, column: 1, scope: !12270)
!12322 = distinct !DISubprogram(name: "insert_with_costs", scope: !3, file: !3, line: 1583, type: !12323, scopeLine: 1585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!12323 = !DISubroutineType(types: !12324)
!12324 = !{!2307, !1091, !2307, !7, !5, !1053, !1053}
!12325 = !DILocalVariable(name: "x", arg: 1, scope: !12322, file: !3, line: 1583, type: !1091)
!12326 = !DILocation(line: 1583, column: 24, scope: !12322)
!12327 = !DILocalVariable(name: "classp", arg: 2, scope: !12322, file: !3, line: 1583, type: !2307)
!12328 = !DILocation(line: 1583, column: 45, scope: !12322)
!12329 = !DILocalVariable(name: "hash", arg: 3, scope: !12322, file: !3, line: 1583, type: !7)
!12330 = !DILocation(line: 1583, column: 66, scope: !12322)
!12331 = !DILocalVariable(name: "mode", arg: 4, scope: !12322, file: !3, line: 1584, type: !5)
!12332 = !DILocation(line: 1584, column: 24, scope: !12322)
!12333 = !DILocalVariable(name: "cost", arg: 5, scope: !12322, file: !3, line: 1584, type: !1053)
!12334 = !DILocation(line: 1584, column: 34, scope: !12322)
!12335 = !DILocalVariable(name: "reg_cost", arg: 6, scope: !12322, file: !3, line: 1584, type: !1053)
!12336 = !DILocation(line: 1584, column: 44, scope: !12322)
!12337 = !DILocalVariable(name: "elt", scope: !12322, file: !3, line: 1586, type: !2307)
!12338 = !DILocation(line: 1586, column: 21, scope: !12322)
!12339 = !DILocation(line: 1590, column: 3, scope: !12322)
!12340 = !DILocation(line: 1593, column: 7, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12322, file: !3, line: 1593, column: 7)
!12342 = !DILocation(line: 1593, column: 17, scope: !12341)
!12343 = !DILocation(line: 1593, column: 20, scope: !12341)
!12344 = !DILocation(line: 1593, column: 30, scope: !12341)
!12345 = !DILocation(line: 1593, column: 7, scope: !12322)
!12346 = !DILocation(line: 1594, column: 47, scope: !12341)
!12347 = !DILocation(line: 1594, column: 61, scope: !12341)
!12348 = !DILocation(line: 1594, column: 5, scope: !12341)
!12349 = !DILocation(line: 1598, column: 9, scope: !12322)
!12350 = !DILocation(line: 1598, column: 7, scope: !12322)
!12351 = !DILocation(line: 1599, column: 7, scope: !12352)
!12352 = distinct !DILexicalBlock(scope: !12322, file: !3, line: 1599, column: 7)
!12353 = !DILocation(line: 1599, column: 7, scope: !12322)
!12354 = !DILocation(line: 1600, column: 26, scope: !12352)
!12355 = !DILocation(line: 1600, column: 31, scope: !12352)
!12356 = !DILocation(line: 1600, column: 24, scope: !12352)
!12357 = !DILocation(line: 1600, column: 5, scope: !12352)
!12358 = !DILocation(line: 1602, column: 11, scope: !12352)
!12359 = !DILocation(line: 1602, column: 9, scope: !12352)
!12360 = !DILocation(line: 1604, column: 14, scope: !12322)
!12361 = !DILocation(line: 1604, column: 3, scope: !12322)
!12362 = !DILocation(line: 1604, column: 8, scope: !12322)
!12363 = !DILocation(line: 1604, column: 12, scope: !12322)
!12364 = !DILocation(line: 1605, column: 3, scope: !12322)
!12365 = !DILocation(line: 1605, column: 8, scope: !12322)
!12366 = !DILocation(line: 1605, column: 18, scope: !12322)
!12367 = !DILocation(line: 1606, column: 15, scope: !12322)
!12368 = !DILocation(line: 1606, column: 3, scope: !12322)
!12369 = !DILocation(line: 1606, column: 8, scope: !12322)
!12370 = !DILocation(line: 1606, column: 13, scope: !12322)
!12371 = !DILocation(line: 1607, column: 18, scope: !12322)
!12372 = !DILocation(line: 1607, column: 3, scope: !12322)
!12373 = !DILocation(line: 1607, column: 8, scope: !12322)
!12374 = !DILocation(line: 1607, column: 16, scope: !12322)
!12375 = !DILocation(line: 1608, column: 3, scope: !12322)
!12376 = !DILocation(line: 1608, column: 8, scope: !12322)
!12377 = !DILocation(line: 1608, column: 24, scope: !12322)
!12378 = !DILocation(line: 1609, column: 3, scope: !12322)
!12379 = !DILocation(line: 1609, column: 8, scope: !12322)
!12380 = !DILocation(line: 1609, column: 24, scope: !12322)
!12381 = !DILocation(line: 1610, column: 31, scope: !12322)
!12382 = !DILocation(line: 1610, column: 25, scope: !12322)
!12383 = !DILocation(line: 1610, column: 3, scope: !12322)
!12384 = !DILocation(line: 1610, column: 8, scope: !12322)
!12385 = !DILocation(line: 1610, column: 23, scope: !12322)
!12386 = !DILocation(line: 1611, column: 3, scope: !12322)
!12387 = !DILocation(line: 1611, column: 8, scope: !12322)
!12388 = !DILocation(line: 1611, column: 23, scope: !12322)
!12389 = !DILocation(line: 1612, column: 3, scope: !12322)
!12390 = !DILocation(line: 1612, column: 8, scope: !12322)
!12391 = !DILocation(line: 1612, column: 22, scope: !12322)
!12392 = !DILocation(line: 1613, column: 3, scope: !12322)
!12393 = !DILocation(line: 1613, column: 8, scope: !12322)
!12394 = !DILocation(line: 1613, column: 18, scope: !12322)
!12395 = !DILocation(line: 1614, column: 15, scope: !12322)
!12396 = !DILocation(line: 1614, column: 3, scope: !12322)
!12397 = !DILocation(line: 1614, column: 8, scope: !12322)
!12398 = !DILocation(line: 1614, column: 13, scope: !12322)
!12399 = !DILocation(line: 1615, column: 20, scope: !12322)
!12400 = !DILocation(line: 1615, column: 35, scope: !12322)
!12401 = !DILocation(line: 1615, column: 57, scope: !12322)
!12402 = !DILocation(line: 1615, column: 38, scope: !12322)
!12403 = !DILocation(line: 1615, column: 19, scope: !12322)
!12404 = !DILocation(line: 1615, column: 3, scope: !12322)
!12405 = !DILocation(line: 1615, column: 8, scope: !12322)
!12406 = !DILocation(line: 1615, column: 17, scope: !12322)
!12407 = !DILocation(line: 1617, column: 13, scope: !12408)
!12408 = distinct !DILexicalBlock(scope: !12322, file: !3, line: 1617, column: 7)
!12409 = !DILocation(line: 1617, column: 7, scope: !12408)
!12410 = !DILocation(line: 1617, column: 7, scope: !12322)
!12411 = !DILocation(line: 1618, column: 35, scope: !12408)
!12412 = !DILocation(line: 1618, column: 11, scope: !12408)
!12413 = !DILocation(line: 1618, column: 5, scope: !12408)
!12414 = !DILocation(line: 1618, column: 18, scope: !12408)
!12415 = !DILocation(line: 1618, column: 33, scope: !12408)
!12416 = !DILocation(line: 1619, column: 17, scope: !12322)
!12417 = !DILocation(line: 1619, column: 9, scope: !12322)
!12418 = !DILocation(line: 1619, column: 3, scope: !12322)
!12419 = !DILocation(line: 1619, column: 15, scope: !12322)
!12420 = !DILocation(line: 1622, column: 7, scope: !12421)
!12421 = distinct !DILexicalBlock(scope: !12322, file: !3, line: 1622, column: 7)
!12422 = !DILocation(line: 1622, column: 7, scope: !12322)
!12423 = !DILocation(line: 1624, column: 16, scope: !12424)
!12424 = distinct !DILexicalBlock(scope: !12421, file: !3, line: 1623, column: 5)
!12425 = !DILocation(line: 1624, column: 24, scope: !12424)
!12426 = !DILocation(line: 1624, column: 14, scope: !12424)
!12427 = !DILocation(line: 1625, column: 11, scope: !12428)
!12428 = distinct !DILexicalBlock(scope: !12424, file: !3, line: 1625, column: 11)
!12429 = !DILocation(line: 1625, column: 11, scope: !12424)
!12430 = !DILocalVariable(name: "p", scope: !12431, file: !3, line: 1628, type: !2307)
!12431 = distinct !DILexicalBlock(scope: !12428, file: !3, line: 1627, column: 2)
!12432 = !DILocation(line: 1628, column: 22, scope: !12431)
!12433 = !DILocation(line: 1629, column: 27, scope: !12431)
!12434 = !DILocation(line: 1629, column: 4, scope: !12431)
!12435 = !DILocation(line: 1629, column: 9, scope: !12431)
!12436 = !DILocation(line: 1629, column: 25, scope: !12431)
!12437 = !DILocation(line: 1630, column: 30, scope: !12431)
!12438 = !DILocation(line: 1630, column: 4, scope: !12431)
!12439 = !DILocation(line: 1630, column: 12, scope: !12431)
!12440 = !DILocation(line: 1630, column: 28, scope: !12431)
!12441 = !DILocation(line: 1631, column: 28, scope: !12431)
!12442 = !DILocation(line: 1631, column: 4, scope: !12431)
!12443 = !DILocation(line: 1631, column: 9, scope: !12431)
!12444 = !DILocation(line: 1631, column: 26, scope: !12431)
!12445 = !DILocation(line: 1633, column: 13, scope: !12446)
!12446 = distinct !DILexicalBlock(scope: !12431, file: !3, line: 1633, column: 4)
!12447 = !DILocation(line: 1633, column: 11, scope: !12446)
!12448 = !DILocation(line: 1633, column: 9, scope: !12446)
!12449 = !DILocation(line: 1633, column: 21, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !12446, file: !3, line: 1633, column: 4)
!12451 = !DILocation(line: 1633, column: 4, scope: !12446)
!12452 = !DILocation(line: 1634, column: 28, scope: !12450)
!12453 = !DILocation(line: 1634, column: 6, scope: !12450)
!12454 = !DILocation(line: 1634, column: 9, scope: !12450)
!12455 = !DILocation(line: 1634, column: 26, scope: !12450)
!12456 = !DILocation(line: 1633, column: 28, scope: !12450)
!12457 = !DILocation(line: 1633, column: 31, scope: !12450)
!12458 = !DILocation(line: 1633, column: 26, scope: !12450)
!12459 = !DILocation(line: 1633, column: 4, scope: !12450)
!12460 = distinct !{!12460, !12451, !12461}
!12461 = !DILocation(line: 1634, column: 28, scope: !12446)
!12462 = !DILocation(line: 1635, column: 2, scope: !12431)
!12463 = !DILocalVariable(name: "p", scope: !12464, file: !3, line: 1640, type: !2307)
!12464 = distinct !DILexicalBlock(scope: !12428, file: !3, line: 1637, column: 2)
!12465 = !DILocation(line: 1640, column: 22, scope: !12464)
!12466 = !DILocalVariable(name: "next", scope: !12464, file: !3, line: 1640, type: !2307)
!12467 = !DILocation(line: 1640, column: 26, scope: !12464)
!12468 = !DILocation(line: 1642, column: 13, scope: !12469)
!12469 = distinct !DILexicalBlock(scope: !12464, file: !3, line: 1642, column: 4)
!12470 = !DILocation(line: 1642, column: 11, scope: !12469)
!12471 = !DILocation(line: 1642, column: 9, scope: !12469)
!12472 = !DILocation(line: 1642, column: 29, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 1642, column: 4)
!12474 = !DILocation(line: 1642, column: 32, scope: !12473)
!12475 = !DILocation(line: 1642, column: 27, scope: !12473)
!12476 = !DILocation(line: 1642, column: 49, scope: !12473)
!12477 = !DILocation(line: 1642, column: 52, scope: !12473)
!12478 = !DILocation(line: 0, scope: !12473)
!12479 = !DILocation(line: 1642, column: 4, scope: !12469)
!12480 = !DILocation(line: 1643, column: 13, scope: !12473)
!12481 = !DILocation(line: 1643, column: 11, scope: !12473)
!12482 = !DILocation(line: 1642, column: 4, scope: !12473)
!12483 = distinct !{!12483, !12479, !12484}
!12484 = !DILocation(line: 1643, column: 18, scope: !12469)
!12485 = !DILocation(line: 1646, column: 27, scope: !12464)
!12486 = !DILocation(line: 1646, column: 4, scope: !12464)
!12487 = !DILocation(line: 1646, column: 9, scope: !12464)
!12488 = !DILocation(line: 1646, column: 25, scope: !12464)
!12489 = !DILocation(line: 1647, column: 8, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12464, file: !3, line: 1647, column: 8)
!12491 = !DILocation(line: 1647, column: 8, scope: !12464)
!12492 = !DILocation(line: 1648, column: 30, scope: !12490)
!12493 = !DILocation(line: 1648, column: 6, scope: !12490)
!12494 = !DILocation(line: 1648, column: 12, scope: !12490)
!12495 = !DILocation(line: 1648, column: 28, scope: !12490)
!12496 = !DILocation(line: 1650, column: 27, scope: !12464)
!12497 = !DILocation(line: 1650, column: 4, scope: !12464)
!12498 = !DILocation(line: 1650, column: 9, scope: !12464)
!12499 = !DILocation(line: 1650, column: 25, scope: !12464)
!12500 = !DILocation(line: 1651, column: 25, scope: !12464)
!12501 = !DILocation(line: 1651, column: 4, scope: !12464)
!12502 = !DILocation(line: 1651, column: 7, scope: !12464)
!12503 = !DILocation(line: 1651, column: 23, scope: !12464)
!12504 = !DILocation(line: 1652, column: 28, scope: !12464)
!12505 = !DILocation(line: 1652, column: 4, scope: !12464)
!12506 = !DILocation(line: 1652, column: 9, scope: !12464)
!12507 = !DILocation(line: 1652, column: 26, scope: !12464)
!12508 = !DILocation(line: 1654, column: 5, scope: !12424)
!12509 = !DILocation(line: 1656, column: 29, scope: !12421)
!12510 = !DILocation(line: 1656, column: 5, scope: !12421)
!12511 = !DILocation(line: 1656, column: 10, scope: !12421)
!12512 = !DILocation(line: 1656, column: 27, scope: !12421)
!12513 = !DILocation(line: 1673, column: 7, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12322, file: !3, line: 1673, column: 7)
!12515 = !DILocation(line: 1673, column: 12, scope: !12514)
!12516 = !DILocation(line: 1673, column: 21, scope: !12514)
!12517 = !DILocation(line: 1673, column: 24, scope: !12514)
!12518 = !DILocation(line: 1673, column: 31, scope: !12514)
!12519 = !DILocation(line: 1673, column: 34, scope: !12514)
!12520 = !DILocation(line: 1674, column: 7, scope: !12514)
!12521 = !DILocation(line: 1674, column: 11, scope: !12514)
!12522 = !DILocation(line: 1673, column: 7, scope: !12322)
!12523 = !DILocalVariable(name: "exp_q", scope: !12524, file: !3, line: 1676, type: !1053)
!12524 = distinct !DILexicalBlock(scope: !12514, file: !3, line: 1675, column: 5)
!12525 = !DILocation(line: 1676, column: 11, scope: !12524)
!12526 = !DILocation(line: 1676, column: 19, scope: !12524)
!12527 = !DILocalVariable(name: "exp_ent", scope: !12524, file: !3, line: 1677, type: !2216)
!12528 = !DILocation(line: 1677, column: 30, scope: !12524)
!12529 = !DILocation(line: 1677, column: 41, scope: !12524)
!12530 = !DILocation(line: 1677, column: 51, scope: !12524)
!12531 = !DILocation(line: 1679, column: 28, scope: !12524)
!12532 = !DILocation(line: 1679, column: 41, scope: !12524)
!12533 = !DILocation(line: 1679, column: 50, scope: !12524)
!12534 = !DILocation(line: 1679, column: 56, scope: !12524)
!12535 = !DILocation(line: 1679, column: 7, scope: !12524)
!12536 = !DILocation(line: 1679, column: 16, scope: !12524)
!12537 = !DILocation(line: 1679, column: 26, scope: !12524)
!12538 = !DILocation(line: 1680, column: 29, scope: !12524)
!12539 = !DILocation(line: 1680, column: 7, scope: !12524)
!12540 = !DILocation(line: 1680, column: 16, scope: !12524)
!12541 = !DILocation(line: 1680, column: 27, scope: !12524)
!12542 = !DILocation(line: 1681, column: 5, scope: !12524)
!12543 = !DILocation(line: 1683, column: 12, scope: !12544)
!12544 = distinct !DILexicalBlock(scope: !12514, file: !3, line: 1683, column: 12)
!12545 = !DILocation(line: 1684, column: 5, scope: !12544)
!12546 = !DILocation(line: 1684, column: 8, scope: !12544)
!12547 = !DILocation(line: 1685, column: 5, scope: !12544)
!12548 = !DILocation(line: 1685, column: 10, scope: !12544)
!12549 = !DILocation(line: 1685, column: 20, scope: !12544)
!12550 = !DILocation(line: 1685, column: 41, scope: !12544)
!12551 = !DILocation(line: 1686, column: 5, scope: !12544)
!12552 = !DILocation(line: 1686, column: 10, scope: !12544)
!12553 = !DILocation(line: 1686, column: 15, scope: !12544)
!12554 = !DILocation(line: 1683, column: 12, scope: !12514)
!12555 = !DILocalVariable(name: "p", scope: !12556, file: !3, line: 1688, type: !2307)
!12556 = distinct !DILexicalBlock(scope: !12544, file: !3, line: 1687, column: 5)
!12557 = !DILocation(line: 1688, column: 25, scope: !12556)
!12558 = !DILocation(line: 1690, column: 16, scope: !12559)
!12559 = distinct !DILexicalBlock(scope: !12556, file: !3, line: 1690, column: 7)
!12560 = !DILocation(line: 1690, column: 14, scope: !12559)
!12561 = !DILocation(line: 1690, column: 12, scope: !12559)
!12562 = !DILocation(line: 1690, column: 24, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12559, file: !3, line: 1690, column: 7)
!12564 = !DILocation(line: 1690, column: 26, scope: !12563)
!12565 = !DILocation(line: 1690, column: 7, scope: !12559)
!12566 = !DILocation(line: 1692, column: 8, scope: !12567)
!12567 = distinct !DILexicalBlock(scope: !12568, file: !3, line: 1692, column: 8)
!12568 = distinct !DILexicalBlock(scope: !12563, file: !3, line: 1691, column: 2)
!12569 = !DILocation(line: 1692, column: 11, scope: !12567)
!12570 = !DILocation(line: 1692, column: 20, scope: !12567)
!12571 = !DILocation(line: 1692, column: 24, scope: !12567)
!12572 = !DILocation(line: 1692, column: 8, scope: !12568)
!12573 = !DILocalVariable(name: "x_q", scope: !12574, file: !3, line: 1694, type: !1053)
!12574 = distinct !DILexicalBlock(scope: !12567, file: !3, line: 1693, column: 6)
!12575 = !DILocation(line: 1694, column: 12, scope: !12574)
!12576 = !DILocation(line: 1694, column: 18, scope: !12574)
!12577 = !DILocalVariable(name: "x_ent", scope: !12574, file: !3, line: 1695, type: !2216)
!12578 = !DILocation(line: 1695, column: 31, scope: !12574)
!12579 = !DILocation(line: 1695, column: 40, scope: !12574)
!12580 = !DILocation(line: 1695, column: 50, scope: !12574)
!12581 = !DILocation(line: 1698, column: 5, scope: !12574)
!12582 = !DILocation(line: 1698, column: 18, scope: !12574)
!12583 = !DILocation(line: 1698, column: 32, scope: !12574)
!12584 = !DILocation(line: 1698, column: 35, scope: !12574)
!12585 = !DILocation(line: 1697, column: 8, scope: !12574)
!12586 = !DILocation(line: 1697, column: 15, scope: !12574)
!12587 = !DILocation(line: 1698, column: 3, scope: !12574)
!12588 = !DILocation(line: 1699, column: 28, scope: !12574)
!12589 = !DILocation(line: 1699, column: 8, scope: !12574)
!12590 = !DILocation(line: 1699, column: 15, scope: !12574)
!12591 = !DILocation(line: 1699, column: 26, scope: !12574)
!12592 = !DILocation(line: 1700, column: 8, scope: !12574)
!12593 = !DILocation(line: 1702, column: 2, scope: !12568)
!12594 = !DILocation(line: 1690, column: 36, scope: !12563)
!12595 = !DILocation(line: 1690, column: 39, scope: !12563)
!12596 = !DILocation(line: 1690, column: 34, scope: !12563)
!12597 = !DILocation(line: 1690, column: 7, scope: !12563)
!12598 = distinct !{!12598, !12565, !12599}
!12599 = !DILocation(line: 1702, column: 2, scope: !12559)
!12600 = !DILocation(line: 1703, column: 5, scope: !12556)
!12601 = !DILocation(line: 1705, column: 12, scope: !12602)
!12602 = distinct !DILexicalBlock(scope: !12544, file: !3, line: 1705, column: 12)
!12603 = !DILocation(line: 1706, column: 5, scope: !12602)
!12604 = !DILocation(line: 1706, column: 8, scope: !12602)
!12605 = !DILocation(line: 1706, column: 18, scope: !12602)
!12606 = !DILocation(line: 1706, column: 39, scope: !12602)
!12607 = !DILocation(line: 1707, column: 5, scope: !12602)
!12608 = !DILocation(line: 1707, column: 8, scope: !12602)
!12609 = !DILocation(line: 1707, column: 24, scope: !12602)
!12610 = !DILocation(line: 1707, column: 34, scope: !12602)
!12611 = !DILocation(line: 1707, column: 55, scope: !12602)
!12612 = !DILocation(line: 1707, column: 21, scope: !12602)
!12613 = !DILocation(line: 1705, column: 12, scope: !12544)
!12614 = !DILocation(line: 1708, column: 49, scope: !12602)
!12615 = !DILocation(line: 1708, column: 5, scope: !12602)
!12616 = !DILocation(line: 1708, column: 15, scope: !12602)
!12617 = !DILocation(line: 1708, column: 36, scope: !12602)
!12618 = !DILocation(line: 1708, column: 47, scope: !12602)
!12619 = !DILocation(line: 1713, column: 7, scope: !12620)
!12620 = distinct !DILexicalBlock(scope: !12322, file: !3, line: 1713, column: 7)
!12621 = !DILocation(line: 1713, column: 20, scope: !12620)
!12622 = !DILocation(line: 1713, column: 7, scope: !12322)
!12623 = !DILocalVariable(name: "subexp", scope: !12624, file: !3, line: 1715, type: !1091)
!12624 = distinct !DILexicalBlock(scope: !12620, file: !3, line: 1714, column: 5)
!12625 = !DILocation(line: 1715, column: 11, scope: !12624)
!12626 = !DILocation(line: 1715, column: 39, scope: !12624)
!12627 = !DILocation(line: 1715, column: 20, scope: !12624)
!12628 = !DILocalVariable(name: "subhash", scope: !12624, file: !3, line: 1716, type: !7)
!12629 = !DILocation(line: 1716, column: 16, scope: !12624)
!12630 = !DILocalVariable(name: "subelt", scope: !12624, file: !3, line: 1717, type: !2307)
!12631 = !DILocation(line: 1717, column: 25, scope: !12624)
!12632 = !DILocalVariable(name: "subelt_prev", scope: !12624, file: !3, line: 1717, type: !2307)
!12633 = !DILocation(line: 1717, column: 34, scope: !12624)
!12634 = !DILocation(line: 1719, column: 11, scope: !12635)
!12635 = distinct !DILexicalBlock(scope: !12624, file: !3, line: 1719, column: 11)
!12636 = !DILocation(line: 1719, column: 18, scope: !12635)
!12637 = !DILocation(line: 1719, column: 11, scope: !12624)
!12638 = !DILocation(line: 1722, column: 14, scope: !12639)
!12639 = distinct !DILexicalBlock(scope: !12635, file: !3, line: 1720, column: 2)
!12640 = !DILocation(line: 1722, column: 12, scope: !12639)
!12641 = !DILocation(line: 1723, column: 21, scope: !12639)
!12642 = !DILocation(line: 1723, column: 29, scope: !12639)
!12643 = !DILocation(line: 1723, column: 38, scope: !12639)
!12644 = !DILocation(line: 1723, column: 13, scope: !12639)
!12645 = !DILocation(line: 1723, column: 11, scope: !12639)
!12646 = !DILocation(line: 1724, column: 8, scope: !12647)
!12647 = distinct !DILexicalBlock(scope: !12639, file: !3, line: 1724, column: 8)
!12648 = !DILocation(line: 1724, column: 15, scope: !12647)
!12649 = !DILocation(line: 1724, column: 8, scope: !12639)
!12650 = !DILocation(line: 1725, column: 23, scope: !12647)
!12651 = !DILocation(line: 1725, column: 37, scope: !12647)
!12652 = !DILocation(line: 1725, column: 46, scope: !12647)
!12653 = !DILocation(line: 1725, column: 15, scope: !12647)
!12654 = !DILocation(line: 1725, column: 13, scope: !12647)
!12655 = !DILocation(line: 1725, column: 6, scope: !12647)
!12656 = !DILocation(line: 1727, column: 8, scope: !12657)
!12657 = distinct !DILexicalBlock(scope: !12639, file: !3, line: 1727, column: 8)
!12658 = !DILocation(line: 1727, column: 16, scope: !12657)
!12659 = !DILocation(line: 1727, column: 30, scope: !12657)
!12660 = !DILocation(line: 1727, column: 8, scope: !12639)
!12661 = !DILocation(line: 1728, column: 30, scope: !12657)
!12662 = !DILocation(line: 1728, column: 6, scope: !12657)
!12663 = !DILocation(line: 1728, column: 14, scope: !12657)
!12664 = !DILocation(line: 1728, column: 28, scope: !12657)
!12665 = !DILocation(line: 1730, column: 18, scope: !12639)
!12666 = !DILocation(line: 1730, column: 16, scope: !12639)
!12667 = !DILocation(line: 1731, column: 4, scope: !12639)
!12668 = !DILocation(line: 1731, column: 11, scope: !12639)
!12669 = !DILocation(line: 1731, column: 24, scope: !12639)
!12670 = !DILocation(line: 1731, column: 41, scope: !12639)
!12671 = !DILocation(line: 1731, column: 38, scope: !12639)
!12672 = !DILocation(line: 1732, column: 20, scope: !12639)
!12673 = !DILocation(line: 1732, column: 33, scope: !12639)
!12674 = !DILocation(line: 1732, column: 18, scope: !12639)
!12675 = distinct !{!12675, !12667, !12673}
!12676 = !DILocation(line: 1735, column: 25, scope: !12639)
!12677 = !DILocation(line: 1735, column: 38, scope: !12639)
!12678 = !DILocation(line: 1735, column: 4, scope: !12639)
!12679 = !DILocation(line: 1735, column: 9, scope: !12639)
!12680 = !DILocation(line: 1735, column: 23, scope: !12639)
!12681 = !DILocation(line: 1736, column: 33, scope: !12639)
!12682 = !DILocation(line: 1736, column: 4, scope: !12639)
!12683 = !DILocation(line: 1736, column: 17, scope: !12639)
!12684 = !DILocation(line: 1736, column: 31, scope: !12639)
!12685 = !DILocation(line: 1737, column: 2, scope: !12639)
!12686 = !DILocation(line: 1738, column: 5, scope: !12624)
!12687 = !DILocation(line: 1740, column: 10, scope: !12322)
!12688 = !DILocation(line: 1740, column: 3, scope: !12322)
!12689 = distinct !DISubprogram(name: "add_to_hard_reg_set", scope: !3327, file: !3327, line: 307, type: !12690, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!12690 = !DISubroutineType(types: !12691)
!12691 = !{null, !12692, !5, !7}
!12692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 64)
!12693 = !DILocalVariable(name: "regs", arg: 1, scope: !12689, file: !3327, line: 307, type: !12692)
!12694 = !DILocation(line: 307, column: 36, scope: !12689)
!12695 = !DILocalVariable(name: "mode", arg: 2, scope: !12689, file: !3327, line: 307, type: !5)
!12696 = !DILocation(line: 307, column: 60, scope: !12689)
!12697 = !DILocalVariable(name: "regno", arg: 3, scope: !12689, file: !3327, line: 308, type: !7)
!12698 = !DILocation(line: 308, column: 21, scope: !12689)
!12699 = !DILocalVariable(name: "end_regno", scope: !12689, file: !3327, line: 310, type: !7)
!12700 = !DILocation(line: 310, column: 16, scope: !12689)
!12701 = !DILocation(line: 312, column: 31, scope: !12689)
!12702 = !DILocation(line: 312, column: 37, scope: !12689)
!12703 = !DILocation(line: 312, column: 15, scope: !12689)
!12704 = !DILocation(line: 312, column: 13, scope: !12689)
!12705 = !DILocation(line: 313, column: 3, scope: !12689)
!12706 = !DILocation(line: 314, column: 5, scope: !12689)
!12707 = !DILocation(line: 315, column: 10, scope: !12689)
!12708 = !DILocation(line: 315, column: 20, scope: !12689)
!12709 = !DILocation(line: 315, column: 18, scope: !12689)
!12710 = distinct !{!12710, !12705, !12711}
!12711 = !DILocation(line: 315, column: 29, scope: !12689)
!12712 = !DILocation(line: 316, column: 1, scope: !12689)
!12713 = distinct !DISubprogram(name: "fixed_base_plus_p", scope: !3, file: !3, line: 631, type: !12714, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!12714 = !DISubroutineType(types: !12715)
!12715 = !{!1052, !1091}
!12716 = !DILocalVariable(name: "x", arg: 1, scope: !12713, file: !3, line: 631, type: !1091)
!12717 = !DILocation(line: 631, column: 24, scope: !12713)
!12718 = !DILocation(line: 633, column: 11, scope: !12713)
!12719 = !DILocation(line: 633, column: 3, scope: !12713)
!12720 = !DILocation(line: 636, column: 11, scope: !12721)
!12721 = distinct !DILexicalBlock(scope: !12722, file: !3, line: 636, column: 11)
!12722 = distinct !DILexicalBlock(scope: !12713, file: !3, line: 634, column: 5)
!12723 = !DILocation(line: 636, column: 16, scope: !12721)
!12724 = !DILocation(line: 636, column: 13, scope: !12721)
!12725 = !DILocation(line: 636, column: 34, scope: !12721)
!12726 = !DILocation(line: 636, column: 37, scope: !12721)
!12727 = !DILocation(line: 636, column: 42, scope: !12721)
!12728 = !DILocation(line: 636, column: 39, scope: !12721)
!12729 = !DILocation(line: 636, column: 11, scope: !12722)
!12730 = !DILocation(line: 637, column: 2, scope: !12721)
!12731 = !DILocation(line: 638, column: 11, scope: !12732)
!12732 = distinct !DILexicalBlock(scope: !12722, file: !3, line: 638, column: 11)
!12733 = !DILocation(line: 638, column: 16, scope: !12732)
!12734 = !DILocation(line: 638, column: 13, scope: !12732)
!12735 = !DILocation(line: 638, column: 32, scope: !12732)
!12736 = !DILocation(line: 638, column: 35, scope: !12732)
!12737 = !DILocation(line: 638, column: 11, scope: !12722)
!12738 = !DILocation(line: 639, column: 2, scope: !12732)
!12739 = !DILocation(line: 640, column: 11, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12722, file: !3, line: 640, column: 11)
!12741 = !DILocation(line: 640, column: 21, scope: !12740)
!12742 = !DILocation(line: 641, column: 4, scope: !12740)
!12743 = !DILocation(line: 641, column: 7, scope: !12740)
!12744 = !DILocation(line: 641, column: 17, scope: !12740)
!12745 = !DILocation(line: 640, column: 11, scope: !12722)
!12746 = !DILocation(line: 642, column: 2, scope: !12740)
!12747 = !DILocation(line: 643, column: 7, scope: !12722)
!12748 = !DILocation(line: 646, column: 12, scope: !12749)
!12749 = distinct !DILexicalBlock(scope: !12722, file: !3, line: 646, column: 11)
!12750 = !DILocation(line: 646, column: 11, scope: !12722)
!12751 = !DILocation(line: 647, column: 2, scope: !12749)
!12752 = !DILocation(line: 648, column: 33, scope: !12722)
!12753 = !DILocation(line: 648, column: 14, scope: !12722)
!12754 = !DILocation(line: 648, column: 7, scope: !12722)
!12755 = !DILocation(line: 651, column: 7, scope: !12722)
!12756 = !DILocation(line: 653, column: 1, scope: !12713)
!12757 = distinct !DISubprogram(name: "remove_invalid_subreg_refs", scope: !3, file: !3, line: 2020, type: !12758, scopeLine: 2022, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!12758 = !DISubroutineType(types: !12759)
!12759 = !{null, !7, !7, !5}
!12760 = !DILocalVariable(name: "regno", arg: 1, scope: !12757, file: !3, line: 2020, type: !7)
!12761 = !DILocation(line: 2020, column: 42, scope: !12757)
!12762 = !DILocalVariable(name: "offset", arg: 2, scope: !12757, file: !3, line: 2020, type: !7)
!12763 = !DILocation(line: 2020, column: 62, scope: !12757)
!12764 = !DILocalVariable(name: "mode", arg: 3, scope: !12757, file: !3, line: 2021, type: !5)
!12765 = !DILocation(line: 2021, column: 26, scope: !12757)
!12766 = !DILocalVariable(name: "i", scope: !12757, file: !3, line: 2023, type: !7)
!12767 = !DILocation(line: 2023, column: 16, scope: !12757)
!12768 = !DILocalVariable(name: "p", scope: !12757, file: !3, line: 2024, type: !2307)
!12769 = !DILocation(line: 2024, column: 21, scope: !12757)
!12770 = !DILocalVariable(name: "next", scope: !12757, file: !3, line: 2024, type: !2307)
!12771 = !DILocation(line: 2024, column: 25, scope: !12757)
!12772 = !DILocalVariable(name: "end", scope: !12757, file: !3, line: 2025, type: !7)
!12773 = !DILocation(line: 2025, column: 16, scope: !12757)
!12774 = !DILocation(line: 2025, column: 22, scope: !12757)
!12775 = !DILocation(line: 2025, column: 32, scope: !12757)
!12776 = !DILocation(line: 2025, column: 53, scope: !12757)
!12777 = !DILocation(line: 2025, column: 29, scope: !12757)
!12778 = !DILocation(line: 2027, column: 10, scope: !12779)
!12779 = distinct !DILexicalBlock(scope: !12757, file: !3, line: 2027, column: 3)
!12780 = !DILocation(line: 2027, column: 8, scope: !12779)
!12781 = !DILocation(line: 2027, column: 15, scope: !12782)
!12782 = distinct !DILexicalBlock(scope: !12779, file: !3, line: 2027, column: 3)
!12783 = !DILocation(line: 2027, column: 17, scope: !12782)
!12784 = !DILocation(line: 2027, column: 3, scope: !12779)
!12785 = !DILocation(line: 2028, column: 20, scope: !12786)
!12786 = distinct !DILexicalBlock(scope: !12782, file: !3, line: 2028, column: 5)
!12787 = !DILocation(line: 2028, column: 14, scope: !12786)
!12788 = !DILocation(line: 2028, column: 12, scope: !12786)
!12789 = !DILocation(line: 2028, column: 10, scope: !12786)
!12790 = !DILocation(line: 2028, column: 24, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12786, file: !3, line: 2028, column: 5)
!12792 = !DILocation(line: 2028, column: 5, scope: !12786)
!12793 = !DILocalVariable(name: "exp", scope: !12794, file: !3, line: 2030, type: !1091)
!12794 = distinct !DILexicalBlock(scope: !12791, file: !3, line: 2029, column: 7)
!12795 = !DILocation(line: 2030, column: 6, scope: !12794)
!12796 = !DILocation(line: 2030, column: 12, scope: !12794)
!12797 = !DILocation(line: 2030, column: 15, scope: !12794)
!12798 = !DILocation(line: 2031, column: 9, scope: !12794)
!12799 = !DILocation(line: 2031, column: 12, scope: !12794)
!12800 = !DILocation(line: 2031, column: 7, scope: !12794)
!12801 = !DILocation(line: 2033, column: 7, scope: !12802)
!12802 = distinct !DILexicalBlock(scope: !12794, file: !3, line: 2033, column: 6)
!12803 = !DILocation(line: 2034, column: 6, scope: !12802)
!12804 = !DILocation(line: 2034, column: 10, scope: !12802)
!12805 = !DILocation(line: 2034, column: 25, scope: !12802)
!12806 = !DILocation(line: 2035, column: 3, scope: !12802)
!12807 = !DILocation(line: 2035, column: 7, scope: !12802)
!12808 = !DILocation(line: 2036, column: 3, scope: !12802)
!12809 = !DILocation(line: 2036, column: 6, scope: !12802)
!12810 = !DILocation(line: 2036, column: 34, scope: !12802)
!12811 = !DILocation(line: 2036, column: 31, scope: !12802)
!12812 = !DILocation(line: 2037, column: 3, scope: !12802)
!12813 = !DILocation(line: 2037, column: 9, scope: !12802)
!12814 = !DILocation(line: 2038, column: 12, scope: !12802)
!12815 = !DILocation(line: 2038, column: 43, scope: !12802)
!12816 = !DILocation(line: 2038, column: 9, scope: !12802)
!12817 = !DILocation(line: 2038, column: 52, scope: !12802)
!12818 = !DILocation(line: 2038, column: 49, scope: !12802)
!12819 = !DILocation(line: 2039, column: 7, scope: !12802)
!12820 = !DILocation(line: 2039, column: 10, scope: !12802)
!12821 = !DILocation(line: 2039, column: 31, scope: !12802)
!12822 = !DILocation(line: 2039, column: 28, scope: !12802)
!12823 = !DILocation(line: 2040, column: 6, scope: !12802)
!12824 = !DILocation(line: 2040, column: 28, scope: !12802)
!12825 = !DILocation(line: 2040, column: 35, scope: !12802)
!12826 = !DILocation(line: 2040, column: 41, scope: !12802)
!12827 = !DILocation(line: 2040, column: 46, scope: !12802)
!12828 = !DILocation(line: 2040, column: 49, scope: !12802)
!12829 = !DILocation(line: 2040, column: 9, scope: !12802)
!12830 = !DILocation(line: 2033, column: 6, scope: !12794)
!12831 = !DILocation(line: 2041, column: 23, scope: !12802)
!12832 = !DILocation(line: 2041, column: 26, scope: !12802)
!12833 = !DILocation(line: 2041, column: 4, scope: !12802)
!12834 = !DILocation(line: 2042, column: 7, scope: !12794)
!12835 = !DILocation(line: 2028, column: 31, scope: !12791)
!12836 = !DILocation(line: 2028, column: 29, scope: !12791)
!12837 = !DILocation(line: 2028, column: 5, scope: !12791)
!12838 = distinct !{!12838, !12792, !12839}
!12839 = !DILocation(line: 2042, column: 7, scope: !12786)
!12840 = !DILocation(line: 2027, column: 31, scope: !12782)
!12841 = !DILocation(line: 2027, column: 3, scope: !12782)
!12842 = distinct !{!12842, !12784, !12843}
!12843 = !DILocation(line: 2042, column: 7, scope: !12779)
!12844 = !DILocation(line: 2043, column: 1, scope: !12757)
!12845 = distinct !DISubprogram(name: "insert_const_anchor", scope: !3, file: !3, line: 1249, type: !12846, scopeLine: 1251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!12846 = !DISubroutineType(types: !12847)
!12847 = !{null, !1048, !1091, !1048, !5}
!12848 = !DILocalVariable(name: "anchor", arg: 1, scope: !12845, file: !3, line: 1249, type: !1048)
!12849 = !DILocation(line: 1249, column: 36, scope: !12845)
!12850 = !DILocalVariable(name: "reg", arg: 2, scope: !12845, file: !3, line: 1249, type: !1091)
!12851 = !DILocation(line: 1249, column: 48, scope: !12845)
!12852 = !DILocalVariable(name: "offs", arg: 3, scope: !12845, file: !3, line: 1249, type: !1048)
!12853 = !DILocation(line: 1249, column: 67, scope: !12845)
!12854 = !DILocalVariable(name: "mode", arg: 4, scope: !12845, file: !3, line: 1250, type: !5)
!12855 = !DILocation(line: 1250, column: 26, scope: !12845)
!12856 = !DILocalVariable(name: "elt", scope: !12845, file: !3, line: 1252, type: !2307)
!12857 = !DILocation(line: 1252, column: 21, scope: !12845)
!12858 = !DILocalVariable(name: "hash", scope: !12845, file: !3, line: 1253, type: !7)
!12859 = !DILocation(line: 1253, column: 12, scope: !12845)
!12860 = !DILocalVariable(name: "anchor_exp", scope: !12845, file: !3, line: 1254, type: !1091)
!12861 = !DILocation(line: 1254, column: 7, scope: !12845)
!12862 = !DILocalVariable(name: "exp", scope: !12845, file: !3, line: 1255, type: !1091)
!12863 = !DILocation(line: 1255, column: 7, scope: !12845)
!12864 = !DILocation(line: 1257, column: 16, scope: !12845)
!12865 = !DILocation(line: 1257, column: 14, scope: !12845)
!12866 = !DILocation(line: 1258, column: 10, scope: !12845)
!12867 = !DILocation(line: 1258, column: 8, scope: !12845)
!12868 = !DILocation(line: 1259, column: 17, scope: !12845)
!12869 = !DILocation(line: 1259, column: 29, scope: !12845)
!12870 = !DILocation(line: 1259, column: 35, scope: !12845)
!12871 = !DILocation(line: 1259, column: 9, scope: !12845)
!12872 = !DILocation(line: 1259, column: 7, scope: !12845)
!12873 = !DILocation(line: 1260, column: 8, scope: !12874)
!12874 = distinct !DILexicalBlock(scope: !12845, file: !3, line: 1260, column: 7)
!12875 = !DILocation(line: 1260, column: 7, scope: !12845)
!12876 = !DILocation(line: 1261, column: 19, scope: !12874)
!12877 = !DILocation(line: 1261, column: 37, scope: !12874)
!12878 = !DILocation(line: 1261, column: 43, scope: !12874)
!12879 = !DILocation(line: 1261, column: 11, scope: !12874)
!12880 = !DILocation(line: 1261, column: 9, scope: !12874)
!12881 = !DILocation(line: 1261, column: 5, scope: !12874)
!12882 = !DILocation(line: 1263, column: 24, scope: !12845)
!12883 = !DILocation(line: 1263, column: 29, scope: !12845)
!12884 = !DILocation(line: 1263, column: 9, scope: !12845)
!12885 = !DILocation(line: 1263, column: 7, scope: !12845)
!12886 = !DILocation(line: 1265, column: 17, scope: !12845)
!12887 = !DILocation(line: 1265, column: 3, scope: !12845)
!12888 = !DILocation(line: 1266, column: 10, scope: !12845)
!12889 = !DILocation(line: 1266, column: 8, scope: !12845)
!12890 = !DILocation(line: 1275, column: 22, scope: !12845)
!12891 = !DILocation(line: 1275, column: 27, scope: !12845)
!12892 = !DILocation(line: 1275, column: 32, scope: !12845)
!12893 = !DILocation(line: 1275, column: 38, scope: !12845)
!12894 = !DILocation(line: 1275, column: 44, scope: !12845)
!12895 = !DILocation(line: 1275, column: 3, scope: !12845)
!12896 = !DILocation(line: 1276, column: 1, scope: !12845)
!12897 = distinct !DISubprogram(name: "record_jump_cond", scope: !3, file: !3, line: 3959, type: !12898, scopeLine: 3961, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!12898 = !DISubroutineType(types: !12899)
!12899 = !{null, !384, !5, !1091, !1091, !1053}
!12900 = !DILocalVariable(name: "code", arg: 1, scope: !12897, file: !3, line: 3959, type: !384)
!12901 = !DILocation(line: 3959, column: 33, scope: !12897)
!12902 = !DILocalVariable(name: "mode", arg: 2, scope: !12897, file: !3, line: 3959, type: !5)
!12903 = !DILocation(line: 3959, column: 57, scope: !12897)
!12904 = !DILocalVariable(name: "op0", arg: 3, scope: !12897, file: !3, line: 3959, type: !1091)
!12905 = !DILocation(line: 3959, column: 67, scope: !12897)
!12906 = !DILocalVariable(name: "op1", arg: 4, scope: !12897, file: !3, line: 3960, type: !1091)
!12907 = !DILocation(line: 3960, column: 9, scope: !12897)
!12908 = !DILocalVariable(name: "reversed_nonequality", arg: 5, scope: !12897, file: !3, line: 3960, type: !1053)
!12909 = !DILocation(line: 3960, column: 18, scope: !12897)
!12910 = !DILocalVariable(name: "op0_hash", scope: !12897, file: !3, line: 3962, type: !7)
!12911 = !DILocation(line: 3962, column: 12, scope: !12897)
!12912 = !DILocalVariable(name: "op1_hash", scope: !12897, file: !3, line: 3962, type: !7)
!12913 = !DILocation(line: 3962, column: 22, scope: !12897)
!12914 = !DILocalVariable(name: "op0_in_memory", scope: !12897, file: !3, line: 3963, type: !1053)
!12915 = !DILocation(line: 3963, column: 7, scope: !12897)
!12916 = !DILocalVariable(name: "op1_in_memory", scope: !12897, file: !3, line: 3963, type: !1053)
!12917 = !DILocation(line: 3963, column: 22, scope: !12897)
!12918 = !DILocalVariable(name: "op0_elt", scope: !12897, file: !3, line: 3964, type: !2307)
!12919 = !DILocation(line: 3964, column: 21, scope: !12897)
!12920 = !DILocalVariable(name: "op1_elt", scope: !12897, file: !3, line: 3964, type: !2307)
!12921 = !DILocation(line: 3964, column: 31, scope: !12897)
!12922 = !DILocation(line: 3972, column: 7, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12897, file: !3, line: 3972, column: 7)
!12924 = !DILocation(line: 3972, column: 12, scope: !12923)
!12925 = !DILocation(line: 3972, column: 18, scope: !12923)
!12926 = !DILocation(line: 3972, column: 21, scope: !12923)
!12927 = !DILocation(line: 3972, column: 36, scope: !12923)
!12928 = !DILocation(line: 3973, column: 7, scope: !12923)
!12929 = !DILocation(line: 3973, column: 11, scope: !12923)
!12930 = !DILocation(line: 3974, column: 6, scope: !12923)
!12931 = !DILocation(line: 3974, column: 4, scope: !12923)
!12932 = !DILocation(line: 3972, column: 7, scope: !12897)
!12933 = !DILocalVariable(name: "inner_mode", scope: !12934, file: !3, line: 3976, type: !5)
!12934 = distinct !DILexicalBlock(scope: !12923, file: !3, line: 3975, column: 5)
!12935 = !DILocation(line: 3976, column: 25, scope: !12934)
!12936 = !DILocation(line: 3976, column: 38, scope: !12934)
!12937 = !DILocalVariable(name: "tem", scope: !12934, file: !3, line: 3977, type: !1091)
!12938 = !DILocation(line: 3977, column: 11, scope: !12934)
!12939 = !DILocation(line: 3977, column: 42, scope: !12934)
!12940 = !DILocation(line: 3977, column: 54, scope: !12934)
!12941 = !DILocation(line: 3977, column: 17, scope: !12934)
!12942 = !DILocation(line: 3978, column: 11, scope: !12943)
!12943 = distinct !DILexicalBlock(scope: !12934, file: !3, line: 3978, column: 11)
!12944 = !DILocation(line: 3978, column: 11, scope: !12934)
!12945 = !DILocation(line: 3979, column: 20, scope: !12943)
!12946 = !DILocation(line: 3979, column: 26, scope: !12943)
!12947 = !DILocation(line: 3979, column: 32, scope: !12943)
!12948 = !DILocation(line: 3979, column: 50, scope: !12943)
!12949 = !DILocation(line: 3980, column: 6, scope: !12943)
!12950 = !DILocation(line: 3979, column: 2, scope: !12943)
!12951 = !DILocation(line: 3981, column: 5, scope: !12934)
!12952 = !DILocation(line: 3983, column: 7, scope: !12953)
!12953 = distinct !DILexicalBlock(scope: !12897, file: !3, line: 3983, column: 7)
!12954 = !DILocation(line: 3983, column: 12, scope: !12953)
!12955 = !DILocation(line: 3983, column: 18, scope: !12953)
!12956 = !DILocation(line: 3983, column: 21, scope: !12953)
!12957 = !DILocation(line: 3983, column: 36, scope: !12953)
!12958 = !DILocation(line: 3984, column: 7, scope: !12953)
!12959 = !DILocation(line: 3984, column: 11, scope: !12953)
!12960 = !DILocation(line: 3985, column: 6, scope: !12953)
!12961 = !DILocation(line: 3985, column: 4, scope: !12953)
!12962 = !DILocation(line: 3983, column: 7, scope: !12897)
!12963 = !DILocalVariable(name: "inner_mode", scope: !12964, file: !3, line: 3987, type: !5)
!12964 = distinct !DILexicalBlock(scope: !12953, file: !3, line: 3986, column: 5)
!12965 = !DILocation(line: 3987, column: 25, scope: !12964)
!12966 = !DILocation(line: 3987, column: 38, scope: !12964)
!12967 = !DILocalVariable(name: "tem", scope: !12964, file: !3, line: 3988, type: !1091)
!12968 = !DILocation(line: 3988, column: 11, scope: !12964)
!12969 = !DILocation(line: 3988, column: 42, scope: !12964)
!12970 = !DILocation(line: 3988, column: 54, scope: !12964)
!12971 = !DILocation(line: 3988, column: 17, scope: !12964)
!12972 = !DILocation(line: 3989, column: 11, scope: !12973)
!12973 = distinct !DILexicalBlock(scope: !12964, file: !3, line: 3989, column: 11)
!12974 = !DILocation(line: 3989, column: 11, scope: !12964)
!12975 = !DILocation(line: 3990, column: 20, scope: !12973)
!12976 = !DILocation(line: 3990, column: 26, scope: !12973)
!12977 = !DILocation(line: 3990, column: 32, scope: !12973)
!12978 = !DILocation(line: 3990, column: 50, scope: !12973)
!12979 = !DILocation(line: 3991, column: 6, scope: !12973)
!12980 = !DILocation(line: 3990, column: 2, scope: !12973)
!12981 = !DILocation(line: 3992, column: 5, scope: !12964)
!12982 = !DILocation(line: 4001, column: 7, scope: !12983)
!12983 = distinct !DILexicalBlock(scope: !12897, file: !3, line: 4001, column: 7)
!12984 = !DILocation(line: 4001, column: 12, scope: !12983)
!12985 = !DILocation(line: 4001, column: 18, scope: !12983)
!12986 = !DILocation(line: 4001, column: 21, scope: !12983)
!12987 = !DILocation(line: 4001, column: 36, scope: !12983)
!12988 = !DILocation(line: 4002, column: 7, scope: !12983)
!12989 = !DILocation(line: 4002, column: 28, scope: !12983)
!12990 = !DILocation(line: 4002, column: 10, scope: !12983)
!12991 = !DILocation(line: 4003, column: 7, scope: !12983)
!12992 = !DILocation(line: 4003, column: 11, scope: !12983)
!12993 = !DILocation(line: 4004, column: 6, scope: !12983)
!12994 = !DILocation(line: 4004, column: 4, scope: !12983)
!12995 = !DILocation(line: 4001, column: 7, scope: !12897)
!12996 = !DILocalVariable(name: "inner_mode", scope: !12997, file: !3, line: 4006, type: !5)
!12997 = distinct !DILexicalBlock(scope: !12983, file: !3, line: 4005, column: 5)
!12998 = !DILocation(line: 4006, column: 25, scope: !12997)
!12999 = !DILocation(line: 4006, column: 38, scope: !12997)
!13000 = !DILocalVariable(name: "tem", scope: !12997, file: !3, line: 4007, type: !1091)
!13001 = !DILocation(line: 4007, column: 11, scope: !12997)
!13002 = !DILocation(line: 4007, column: 42, scope: !12997)
!13003 = !DILocation(line: 4007, column: 54, scope: !12997)
!13004 = !DILocation(line: 4007, column: 17, scope: !12997)
!13005 = !DILocation(line: 4008, column: 11, scope: !13006)
!13006 = distinct !DILexicalBlock(scope: !12997, file: !3, line: 4008, column: 11)
!13007 = !DILocation(line: 4008, column: 11, scope: !12997)
!13008 = !DILocation(line: 4009, column: 20, scope: !13006)
!13009 = !DILocation(line: 4009, column: 26, scope: !13006)
!13010 = !DILocation(line: 4009, column: 32, scope: !13006)
!13011 = !DILocation(line: 4009, column: 50, scope: !13006)
!13012 = !DILocation(line: 4010, column: 6, scope: !13006)
!13013 = !DILocation(line: 4009, column: 2, scope: !13006)
!13014 = !DILocation(line: 4011, column: 5, scope: !12997)
!13015 = !DILocation(line: 4013, column: 7, scope: !13016)
!13016 = distinct !DILexicalBlock(scope: !12897, file: !3, line: 4013, column: 7)
!13017 = !DILocation(line: 4013, column: 12, scope: !13016)
!13018 = !DILocation(line: 4013, column: 18, scope: !13016)
!13019 = !DILocation(line: 4013, column: 21, scope: !13016)
!13020 = !DILocation(line: 4013, column: 36, scope: !13016)
!13021 = !DILocation(line: 4014, column: 7, scope: !13016)
!13022 = !DILocation(line: 4014, column: 28, scope: !13016)
!13023 = !DILocation(line: 4014, column: 10, scope: !13016)
!13024 = !DILocation(line: 4015, column: 7, scope: !13016)
!13025 = !DILocation(line: 4015, column: 11, scope: !13016)
!13026 = !DILocation(line: 4016, column: 6, scope: !13016)
!13027 = !DILocation(line: 4016, column: 4, scope: !13016)
!13028 = !DILocation(line: 4013, column: 7, scope: !12897)
!13029 = !DILocalVariable(name: "inner_mode", scope: !13030, file: !3, line: 4018, type: !5)
!13030 = distinct !DILexicalBlock(scope: !13016, file: !3, line: 4017, column: 5)
!13031 = !DILocation(line: 4018, column: 25, scope: !13030)
!13032 = !DILocation(line: 4018, column: 38, scope: !13030)
!13033 = !DILocalVariable(name: "tem", scope: !13030, file: !3, line: 4019, type: !1091)
!13034 = !DILocation(line: 4019, column: 11, scope: !13030)
!13035 = !DILocation(line: 4019, column: 42, scope: !13030)
!13036 = !DILocation(line: 4019, column: 54, scope: !13030)
!13037 = !DILocation(line: 4019, column: 17, scope: !13030)
!13038 = !DILocation(line: 4020, column: 11, scope: !13039)
!13039 = distinct !DILexicalBlock(scope: !13030, file: !3, line: 4020, column: 11)
!13040 = !DILocation(line: 4020, column: 11, scope: !13030)
!13041 = !DILocation(line: 4021, column: 20, scope: !13039)
!13042 = !DILocation(line: 4021, column: 26, scope: !13039)
!13043 = !DILocation(line: 4021, column: 32, scope: !13039)
!13044 = !DILocation(line: 4021, column: 50, scope: !13039)
!13045 = !DILocation(line: 4022, column: 6, scope: !13039)
!13046 = !DILocation(line: 4021, column: 2, scope: !13039)
!13047 = !DILocation(line: 4023, column: 5, scope: !13030)
!13048 = !DILocation(line: 4027, column: 17, scope: !12897)
!13049 = !DILocation(line: 4028, column: 22, scope: !12897)
!13050 = !DILocation(line: 4029, column: 14, scope: !12897)
!13051 = !DILocation(line: 4029, column: 12, scope: !12897)
!13052 = !DILocation(line: 4030, column: 19, scope: !12897)
!13053 = !DILocation(line: 4030, column: 17, scope: !12897)
!13054 = !DILocation(line: 4032, column: 7, scope: !13055)
!13055 = distinct !DILexicalBlock(scope: !12897, file: !3, line: 4032, column: 7)
!13056 = !DILocation(line: 4032, column: 7, scope: !12897)
!13057 = !DILocation(line: 4033, column: 5, scope: !13055)
!13058 = !DILocation(line: 4035, column: 17, scope: !12897)
!13059 = !DILocation(line: 4036, column: 22, scope: !12897)
!13060 = !DILocation(line: 4037, column: 14, scope: !12897)
!13061 = !DILocation(line: 4037, column: 12, scope: !12897)
!13062 = !DILocation(line: 4038, column: 19, scope: !12897)
!13063 = !DILocation(line: 4038, column: 17, scope: !12897)
!13064 = !DILocation(line: 4040, column: 7, scope: !13065)
!13065 = distinct !DILexicalBlock(scope: !12897, file: !3, line: 4040, column: 7)
!13066 = !DILocation(line: 4040, column: 7, scope: !12897)
!13067 = !DILocation(line: 4041, column: 5, scope: !13065)
!13068 = !DILocation(line: 4044, column: 21, scope: !12897)
!13069 = !DILocation(line: 4044, column: 26, scope: !12897)
!13070 = !DILocation(line: 4044, column: 36, scope: !12897)
!13071 = !DILocation(line: 4044, column: 13, scope: !12897)
!13072 = !DILocation(line: 4044, column: 11, scope: !12897)
!13073 = !DILocation(line: 4045, column: 21, scope: !12897)
!13074 = !DILocation(line: 4045, column: 26, scope: !12897)
!13075 = !DILocation(line: 4045, column: 36, scope: !12897)
!13076 = !DILocation(line: 4045, column: 13, scope: !12897)
!13077 = !DILocation(line: 4045, column: 11, scope: !12897)
!13078 = !DILocation(line: 4049, column: 8, scope: !13079)
!13079 = distinct !DILexicalBlock(scope: !12897, file: !3, line: 4049, column: 7)
!13080 = !DILocation(line: 4049, column: 16, scope: !13079)
!13081 = !DILocation(line: 4049, column: 21, scope: !13079)
!13082 = !DILocation(line: 4049, column: 24, scope: !13079)
!13083 = !DILocation(line: 4049, column: 32, scope: !13079)
!13084 = !DILocation(line: 4050, column: 8, scope: !13079)
!13085 = !DILocation(line: 4050, column: 11, scope: !13079)
!13086 = !DILocation(line: 4050, column: 20, scope: !13079)
!13087 = !DILocation(line: 4050, column: 40, scope: !13079)
!13088 = !DILocation(line: 4050, column: 49, scope: !13079)
!13089 = !DILocation(line: 4050, column: 37, scope: !13079)
!13090 = !DILocation(line: 4051, column: 7, scope: !13079)
!13091 = !DILocation(line: 4051, column: 10, scope: !13079)
!13092 = !DILocation(line: 4051, column: 17, scope: !13079)
!13093 = !DILocation(line: 4051, column: 14, scope: !13079)
!13094 = !DILocation(line: 4051, column: 21, scope: !13079)
!13095 = !DILocation(line: 4051, column: 37, scope: !13079)
!13096 = !DILocation(line: 4051, column: 42, scope: !13079)
!13097 = !DILocation(line: 4051, column: 24, scope: !13079)
!13098 = !DILocation(line: 4049, column: 7, scope: !12897)
!13099 = !DILocation(line: 4052, column: 5, scope: !13079)
!13100 = !DILocation(line: 4060, column: 7, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !12897, file: !3, line: 4060, column: 7)
!13102 = !DILocation(line: 4060, column: 12, scope: !13101)
!13103 = !DILocation(line: 4060, column: 18, scope: !13101)
!13104 = !DILocation(line: 4060, column: 21, scope: !13101)
!13105 = !DILocation(line: 4060, column: 7, scope: !12897)
!13106 = !DILocalVariable(name: "ent", scope: !13107, file: !3, line: 4062, type: !2216)
!13107 = distinct !DILexicalBlock(scope: !13101, file: !3, line: 4061, column: 5)
!13108 = !DILocation(line: 4062, column: 30, scope: !13107)
!13109 = !DILocalVariable(name: "qty", scope: !13107, file: !3, line: 4063, type: !1053)
!13110 = !DILocation(line: 4063, column: 11, scope: !13107)
!13111 = !DILocation(line: 4069, column: 12, scope: !13112)
!13112 = distinct !DILexicalBlock(scope: !13107, file: !3, line: 4069, column: 11)
!13113 = !DILocation(line: 4069, column: 11, scope: !13107)
!13114 = !DILocation(line: 4070, column: 24, scope: !13112)
!13115 = !DILocation(line: 4070, column: 8, scope: !13112)
!13116 = !DILocation(line: 4070, column: 6, scope: !13112)
!13117 = !DILocation(line: 4070, column: 2, scope: !13112)
!13118 = !DILocation(line: 4072, column: 12, scope: !13119)
!13119 = distinct !DILexicalBlock(scope: !13107, file: !3, line: 4072, column: 11)
!13120 = !DILocation(line: 4072, column: 33, scope: !13119)
!13121 = !DILocation(line: 4072, column: 36, scope: !13119)
!13122 = !DILocation(line: 4073, column: 4, scope: !13119)
!13123 = !DILocation(line: 4073, column: 8, scope: !13119)
!13124 = !DILocation(line: 4073, column: 20, scope: !13119)
!13125 = !DILocation(line: 4073, column: 23, scope: !13119)
!13126 = !DILocation(line: 4073, column: 27, scope: !13119)
!13127 = !DILocation(line: 4072, column: 11, scope: !13107)
!13128 = !DILocation(line: 4074, column: 2, scope: !13119)
!13129 = !DILocation(line: 4078, column: 11, scope: !13130)
!13130 = distinct !DILexicalBlock(scope: !13107, file: !3, line: 4078, column: 11)
!13131 = !DILocation(line: 4078, column: 19, scope: !13130)
!13132 = !DILocation(line: 4078, column: 11, scope: !13107)
!13133 = !DILocation(line: 4080, column: 21, scope: !13134)
!13134 = distinct !DILexicalBlock(scope: !13135, file: !3, line: 4080, column: 8)
!13135 = distinct !DILexicalBlock(scope: !13130, file: !3, line: 4079, column: 2)
!13136 = !DILocation(line: 4080, column: 8, scope: !13134)
!13137 = !DILocation(line: 4080, column: 8, scope: !13135)
!13138 = !DILocation(line: 4082, column: 26, scope: !13139)
!13139 = distinct !DILexicalBlock(scope: !13134, file: !3, line: 4081, column: 6)
!13140 = !DILocation(line: 4082, column: 8, scope: !13139)
!13141 = !DILocation(line: 4083, column: 19, scope: !13139)
!13142 = !DILocation(line: 4083, column: 17, scope: !13139)
!13143 = !DILocation(line: 4088, column: 14, scope: !13144)
!13144 = distinct !DILexicalBlock(scope: !13139, file: !3, line: 4088, column: 12)
!13145 = !DILocation(line: 4088, column: 12, scope: !13139)
!13146 = !DILocation(line: 4089, column: 14, scope: !13144)
!13147 = !DILocation(line: 4089, column: 12, scope: !13144)
!13148 = !DILocation(line: 4089, column: 3, scope: !13144)
!13149 = !DILocation(line: 4090, column: 6, scope: !13139)
!13150 = !DILocation(line: 4092, column: 22, scope: !13135)
!13151 = !DILocation(line: 4092, column: 33, scope: !13135)
!13152 = !DILocation(line: 4092, column: 43, scope: !13135)
!13153 = !DILocation(line: 4092, column: 14, scope: !13135)
!13154 = !DILocation(line: 4092, column: 12, scope: !13135)
!13155 = !DILocation(line: 4093, column: 25, scope: !13135)
!13156 = !DILocation(line: 4093, column: 4, scope: !13135)
!13157 = !DILocation(line: 4093, column: 13, scope: !13135)
!13158 = !DILocation(line: 4093, column: 23, scope: !13135)
!13159 = !DILocation(line: 4094, column: 2, scope: !13135)
!13160 = !DILocation(line: 4096, column: 13, scope: !13107)
!13161 = !DILocation(line: 4096, column: 11, scope: !13107)
!13162 = !DILocation(line: 4097, column: 14, scope: !13107)
!13163 = !DILocation(line: 4097, column: 24, scope: !13107)
!13164 = !DILocation(line: 4097, column: 11, scope: !13107)
!13165 = !DILocation(line: 4099, column: 30, scope: !13107)
!13166 = !DILocation(line: 4099, column: 7, scope: !13107)
!13167 = !DILocation(line: 4099, column: 12, scope: !13107)
!13168 = !DILocation(line: 4099, column: 28, scope: !13107)
!13169 = !DILocation(line: 4100, column: 11, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13107, file: !3, line: 4100, column: 11)
!13171 = !DILocation(line: 4100, column: 11, scope: !13107)
!13172 = !DILocation(line: 4103, column: 22, scope: !13173)
!13173 = distinct !DILexicalBlock(scope: !13170, file: !3, line: 4101, column: 2)
!13174 = !DILocation(line: 4103, column: 27, scope: !13173)
!13175 = !DILocation(line: 4103, column: 37, scope: !13173)
!13176 = !DILocation(line: 4103, column: 14, scope: !13173)
!13177 = !DILocation(line: 4103, column: 12, scope: !13173)
!13178 = !DILocation(line: 4106, column: 8, scope: !13179)
!13179 = distinct !DILexicalBlock(scope: !13173, file: !3, line: 4106, column: 8)
!13180 = !DILocation(line: 4106, column: 16, scope: !13179)
!13181 = !DILocation(line: 4106, column: 8, scope: !13173)
!13182 = !DILocation(line: 4108, column: 25, scope: !13183)
!13183 = distinct !DILexicalBlock(scope: !13184, file: !3, line: 4108, column: 12)
!13184 = distinct !DILexicalBlock(scope: !13179, file: !3, line: 4107, column: 6)
!13185 = !DILocation(line: 4108, column: 12, scope: !13183)
!13186 = !DILocation(line: 4108, column: 12, scope: !13184)
!13187 = !DILocation(line: 4110, column: 23, scope: !13188)
!13188 = distinct !DILexicalBlock(scope: !13183, file: !3, line: 4109, column: 3)
!13189 = !DILocation(line: 4110, column: 5, scope: !13188)
!13190 = !DILocation(line: 4111, column: 16, scope: !13188)
!13191 = !DILocation(line: 4111, column: 14, scope: !13188)
!13192 = !DILocation(line: 4112, column: 3, scope: !13188)
!13193 = !DILocation(line: 4114, column: 26, scope: !13184)
!13194 = !DILocation(line: 4114, column: 37, scope: !13184)
!13195 = !DILocation(line: 4114, column: 47, scope: !13184)
!13196 = !DILocation(line: 4114, column: 18, scope: !13184)
!13197 = !DILocation(line: 4114, column: 16, scope: !13184)
!13198 = !DILocation(line: 4115, column: 29, scope: !13184)
!13199 = !DILocation(line: 4115, column: 8, scope: !13184)
!13200 = !DILocation(line: 4115, column: 17, scope: !13184)
!13201 = !DILocation(line: 4115, column: 27, scope: !13184)
!13202 = !DILocation(line: 4116, column: 6, scope: !13184)
!13203 = !DILocation(line: 4118, column: 4, scope: !13173)
!13204 = !DILocation(line: 4118, column: 9, scope: !13173)
!13205 = !DILocation(line: 4118, column: 26, scope: !13173)
!13206 = !DILocation(line: 4119, column: 26, scope: !13173)
!13207 = !DILocation(line: 4119, column: 4, scope: !13173)
!13208 = !DILocation(line: 4119, column: 9, scope: !13173)
!13209 = !DILocation(line: 4119, column: 24, scope: !13173)
!13210 = !DILocation(line: 4120, column: 2, scope: !13173)
!13211 = !DILocation(line: 4123, column: 28, scope: !13212)
!13212 = distinct !DILexicalBlock(scope: !13170, file: !3, line: 4122, column: 2)
!13213 = !DILocation(line: 4123, column: 4, scope: !13212)
!13214 = !DILocation(line: 4123, column: 9, scope: !13212)
!13215 = !DILocation(line: 4123, column: 26, scope: !13212)
!13216 = !DILocation(line: 4124, column: 4, scope: !13212)
!13217 = !DILocation(line: 4124, column: 9, scope: !13212)
!13218 = !DILocation(line: 4124, column: 24, scope: !13212)
!13219 = !DILocation(line: 4127, column: 7, scope: !13107)
!13220 = !DILocation(line: 4133, column: 7, scope: !13221)
!13221 = distinct !DILexicalBlock(scope: !12897, file: !3, line: 4133, column: 7)
!13222 = !DILocation(line: 4133, column: 15, scope: !13221)
!13223 = !DILocation(line: 4133, column: 7, scope: !12897)
!13224 = !DILocation(line: 4135, column: 24, scope: !13225)
!13225 = distinct !DILexicalBlock(scope: !13226, file: !3, line: 4135, column: 11)
!13226 = distinct !DILexicalBlock(scope: !13221, file: !3, line: 4134, column: 5)
!13227 = !DILocation(line: 4135, column: 11, scope: !13225)
!13228 = !DILocation(line: 4135, column: 11, scope: !13226)
!13229 = !DILocation(line: 4137, column: 22, scope: !13230)
!13230 = distinct !DILexicalBlock(scope: !13225, file: !3, line: 4136, column: 2)
!13231 = !DILocation(line: 4137, column: 4, scope: !13230)
!13232 = !DILocation(line: 4138, column: 15, scope: !13230)
!13233 = !DILocation(line: 4138, column: 13, scope: !13230)
!13234 = !DILocation(line: 4139, column: 2, scope: !13230)
!13235 = !DILocation(line: 4141, column: 25, scope: !13226)
!13236 = !DILocation(line: 4141, column: 36, scope: !13226)
!13237 = !DILocation(line: 4141, column: 46, scope: !13226)
!13238 = !DILocation(line: 4141, column: 17, scope: !13226)
!13239 = !DILocation(line: 4141, column: 15, scope: !13226)
!13240 = !DILocation(line: 4142, column: 28, scope: !13226)
!13241 = !DILocation(line: 4142, column: 7, scope: !13226)
!13242 = !DILocation(line: 4142, column: 16, scope: !13226)
!13243 = !DILocation(line: 4142, column: 26, scope: !13226)
!13244 = !DILocation(line: 4143, column: 5, scope: !13226)
!13245 = !DILocation(line: 4145, column: 7, scope: !13246)
!13246 = distinct !DILexicalBlock(scope: !12897, file: !3, line: 4145, column: 7)
!13247 = !DILocation(line: 4145, column: 15, scope: !13246)
!13248 = !DILocation(line: 4145, column: 7, scope: !12897)
!13249 = !DILocation(line: 4147, column: 24, scope: !13250)
!13250 = distinct !DILexicalBlock(scope: !13251, file: !3, line: 4147, column: 11)
!13251 = distinct !DILexicalBlock(scope: !13246, file: !3, line: 4146, column: 5)
!13252 = !DILocation(line: 4147, column: 11, scope: !13250)
!13253 = !DILocation(line: 4147, column: 11, scope: !13251)
!13254 = !DILocation(line: 4149, column: 22, scope: !13255)
!13255 = distinct !DILexicalBlock(scope: !13250, file: !3, line: 4148, column: 2)
!13256 = !DILocation(line: 4149, column: 4, scope: !13255)
!13257 = !DILocation(line: 4150, column: 15, scope: !13255)
!13258 = !DILocation(line: 4150, column: 13, scope: !13255)
!13259 = !DILocation(line: 4151, column: 2, scope: !13255)
!13260 = !DILocation(line: 4153, column: 25, scope: !13251)
!13261 = !DILocation(line: 4153, column: 36, scope: !13251)
!13262 = !DILocation(line: 4153, column: 46, scope: !13251)
!13263 = !DILocation(line: 4153, column: 17, scope: !13251)
!13264 = !DILocation(line: 4153, column: 15, scope: !13251)
!13265 = !DILocation(line: 4154, column: 28, scope: !13251)
!13266 = !DILocation(line: 4154, column: 7, scope: !13251)
!13267 = !DILocation(line: 4154, column: 16, scope: !13251)
!13268 = !DILocation(line: 4154, column: 26, scope: !13251)
!13269 = !DILocation(line: 4155, column: 5, scope: !13251)
!13270 = !DILocation(line: 4157, column: 24, scope: !12897)
!13271 = !DILocation(line: 4157, column: 33, scope: !12897)
!13272 = !DILocation(line: 4157, column: 3, scope: !12897)
!13273 = !DILocation(line: 4158, column: 1, scope: !12897)
!13274 = distinct !DISubprogram(name: "record_jump_cond_subreg", scope: !3, file: !3, line: 3945, type: !2413, scopeLine: 3946, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!13275 = !DILocalVariable(name: "mode", arg: 1, scope: !13274, file: !3, line: 3945, type: !5)
!13276 = !DILocation(line: 3945, column: 44, scope: !13274)
!13277 = !DILocalVariable(name: "op", arg: 2, scope: !13274, file: !3, line: 3945, type: !1091)
!13278 = !DILocation(line: 3945, column: 54, scope: !13274)
!13279 = !DILocalVariable(name: "op_mode", scope: !13274, file: !3, line: 3947, type: !5)
!13280 = !DILocation(line: 3947, column: 21, scope: !13274)
!13281 = !DILocation(line: 3947, column: 31, scope: !13274)
!13282 = !DILocation(line: 3948, column: 7, scope: !13283)
!13283 = distinct !DILexicalBlock(scope: !13274, file: !3, line: 3948, column: 7)
!13284 = !DILocation(line: 3948, column: 18, scope: !13283)
!13285 = !DILocation(line: 3948, column: 15, scope: !13283)
!13286 = !DILocation(line: 3948, column: 23, scope: !13283)
!13287 = !DILocation(line: 3948, column: 26, scope: !13283)
!13288 = !DILocation(line: 3948, column: 34, scope: !13283)
!13289 = !DILocation(line: 3948, column: 7, scope: !13274)
!13290 = !DILocation(line: 3949, column: 12, scope: !13283)
!13291 = !DILocation(line: 3949, column: 5, scope: !13283)
!13292 = !DILocation(line: 3950, column: 26, scope: !13274)
!13293 = !DILocation(line: 3950, column: 32, scope: !13274)
!13294 = !DILocation(line: 3950, column: 36, scope: !13274)
!13295 = !DILocation(line: 3950, column: 10, scope: !13274)
!13296 = !DILocation(line: 3950, column: 3, scope: !13274)
!13297 = !DILocation(line: 3951, column: 1, scope: !13274)
!13298 = distinct !DISubprogram(name: "set_live_p", scope: !3, file: !3, line: 6714, type: !13299, scopeLine: 6716, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!13299 = !DISubroutineType(types: !13300)
!13300 = !{!1052, !1091, !1091, !1054}
!13301 = !DILocalVariable(name: "set", arg: 1, scope: !13298, file: !3, line: 6714, type: !1091)
!13302 = !DILocation(line: 6714, column: 17, scope: !13298)
!13303 = !DILocalVariable(name: "insn", arg: 2, scope: !13298, file: !3, line: 6714, type: !1091)
!13304 = !DILocation(line: 6714, column: 26, scope: !13298)
!13305 = !DILocalVariable(name: "counts", arg: 3, scope: !13298, file: !3, line: 6715, type: !1054)
!13306 = !DILocation(line: 6715, column: 11, scope: !13298)
!13307 = !DILocation(line: 6721, column: 19, scope: !13308)
!13308 = distinct !DILexicalBlock(scope: !13298, file: !3, line: 6721, column: 7)
!13309 = !DILocation(line: 6721, column: 7, scope: !13308)
!13310 = !DILocation(line: 6721, column: 7, scope: !13298)
!13311 = !DILocation(line: 6732, column: 27, scope: !13312)
!13312 = distinct !DILexicalBlock(scope: !13308, file: !3, line: 6732, column: 12)
!13313 = !DILocation(line: 6732, column: 43, scope: !13312)
!13314 = !DILocation(line: 6732, column: 13, scope: !13312)
!13315 = !DILocation(line: 6733, column: 5, scope: !13312)
!13316 = !DILocation(line: 6733, column: 24, scope: !13312)
!13317 = !DILocation(line: 6733, column: 8, scope: !13312)
!13318 = !DILocation(line: 6732, column: 12, scope: !13308)
!13319 = !DILocation(line: 6734, column: 5, scope: !13312)
!13320 = !DILocation(line: 6735, column: 3, scope: !13298)
!13321 = !DILocation(line: 6736, column: 1, scope: !13298)
!13322 = distinct !DISubprogram(name: "is_dead_reg", scope: !3, file: !3, line: 6702, type: !8213, scopeLine: 6703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!13323 = !DILocalVariable(name: "loc", arg: 1, scope: !13322, file: !3, line: 6702, type: !2281)
!13324 = !DILocation(line: 6702, column: 19, scope: !13322)
!13325 = !DILocalVariable(name: "data", arg: 2, scope: !13322, file: !3, line: 6702, type: !1019)
!13326 = !DILocation(line: 6702, column: 30, scope: !13322)
!13327 = !DILocalVariable(name: "x", scope: !13322, file: !3, line: 6704, type: !1091)
!13328 = !DILocation(line: 6704, column: 7, scope: !13322)
!13329 = !DILocation(line: 6704, column: 12, scope: !13322)
!13330 = !DILocation(line: 6704, column: 11, scope: !13322)
!13331 = !DILocalVariable(name: "counts", scope: !13322, file: !3, line: 6705, type: !1054)
!13332 = !DILocation(line: 6705, column: 8, scope: !13322)
!13333 = !DILocation(line: 6705, column: 24, scope: !13322)
!13334 = !DILocation(line: 6705, column: 17, scope: !13322)
!13335 = !DILocation(line: 6707, column: 11, scope: !13322)
!13336 = !DILocation(line: 6708, column: 4, scope: !13322)
!13337 = !DILocation(line: 6708, column: 7, scope: !13322)
!13338 = !DILocation(line: 6708, column: 17, scope: !13322)
!13339 = !DILocation(line: 6709, column: 4, scope: !13322)
!13340 = !DILocation(line: 6709, column: 7, scope: !13322)
!13341 = !DILocation(line: 6709, column: 14, scope: !13322)
!13342 = !DILocation(line: 6709, column: 25, scope: !13322)
!13343 = !DILocation(line: 0, scope: !13322)
!13344 = !DILocation(line: 6707, column: 3, scope: !13322)
!13345 = distinct !DISubprogram(name: "cse_condition_code_reg", scope: !3, file: !3, line: 7120, type: !4842, scopeLine: 7121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!13346 = !DILocalVariable(name: "cc_regno_1", scope: !13345, file: !3, line: 7122, type: !7)
!13347 = !DILocation(line: 7122, column: 16, scope: !13345)
!13348 = !DILocalVariable(name: "cc_regno_2", scope: !13345, file: !3, line: 7123, type: !7)
!13349 = !DILocation(line: 7123, column: 16, scope: !13345)
!13350 = !DILocalVariable(name: "cc_reg_1", scope: !13345, file: !3, line: 7124, type: !1091)
!13351 = !DILocation(line: 7124, column: 7, scope: !13345)
!13352 = !DILocalVariable(name: "cc_reg_2", scope: !13345, file: !3, line: 7125, type: !1091)
!13353 = !DILocation(line: 7125, column: 7, scope: !13345)
!13354 = !DILocalVariable(name: "bb", scope: !13345, file: !3, line: 7126, type: !1059)
!13355 = !DILocation(line: 7126, column: 15, scope: !13345)
!13356 = !DILocation(line: 7128, column: 17, scope: !13357)
!13357 = distinct !DILexicalBlock(scope: !13345, file: !3, line: 7128, column: 7)
!13358 = !DILocation(line: 7128, column: 9, scope: !13357)
!13359 = !DILocation(line: 7128, column: 7, scope: !13345)
!13360 = !DILocation(line: 7129, column: 5, scope: !13357)
!13361 = !DILocation(line: 7131, column: 35, scope: !13345)
!13362 = !DILocation(line: 7131, column: 14, scope: !13345)
!13363 = !DILocation(line: 7131, column: 12, scope: !13345)
!13364 = !DILocation(line: 7132, column: 7, scope: !13365)
!13365 = distinct !DILexicalBlock(scope: !13345, file: !3, line: 7132, column: 7)
!13366 = !DILocation(line: 7132, column: 18, scope: !13365)
!13367 = !DILocation(line: 7132, column: 7, scope: !13345)
!13368 = !DILocation(line: 7133, column: 37, scope: !13365)
!13369 = !DILocation(line: 7133, column: 16, scope: !13365)
!13370 = !DILocation(line: 7133, column: 14, scope: !13365)
!13371 = !DILocation(line: 7133, column: 5, scope: !13365)
!13372 = !DILocation(line: 7135, column: 14, scope: !13365)
!13373 = !DILocation(line: 7137, column: 3, scope: !13374)
!13374 = distinct !DILexicalBlock(scope: !13345, file: !3, line: 7137, column: 3)
!13375 = !DILocation(line: 7137, column: 3, scope: !13376)
!13376 = distinct !DILexicalBlock(scope: !13374, file: !3, line: 7137, column: 3)
!13377 = !DILocalVariable(name: "last_insn", scope: !13378, file: !3, line: 7139, type: !1091)
!13378 = distinct !DILexicalBlock(scope: !13376, file: !3, line: 7138, column: 5)
!13379 = !DILocation(line: 7139, column: 11, scope: !13378)
!13380 = !DILocalVariable(name: "cc_reg", scope: !13378, file: !3, line: 7140, type: !1091)
!13381 = !DILocation(line: 7140, column: 11, scope: !13378)
!13382 = !DILocalVariable(name: "insn", scope: !13378, file: !3, line: 7141, type: !1091)
!13383 = !DILocation(line: 7141, column: 11, scope: !13378)
!13384 = !DILocalVariable(name: "cc_src_insn", scope: !13378, file: !3, line: 7142, type: !1091)
!13385 = !DILocation(line: 7142, column: 11, scope: !13378)
!13386 = !DILocalVariable(name: "cc_src", scope: !13378, file: !3, line: 7143, type: !1091)
!13387 = !DILocation(line: 7143, column: 11, scope: !13378)
!13388 = !DILocalVariable(name: "mode", scope: !13378, file: !3, line: 7144, type: !5)
!13389 = !DILocation(line: 7144, column: 25, scope: !13378)
!13390 = !DILocalVariable(name: "orig_mode", scope: !13378, file: !3, line: 7145, type: !5)
!13391 = !DILocation(line: 7145, column: 25, scope: !13378)
!13392 = !DILocation(line: 7156, column: 19, scope: !13378)
!13393 = !DILocation(line: 7156, column: 17, scope: !13378)
!13394 = !DILocation(line: 7157, column: 12, scope: !13395)
!13395 = distinct !DILexicalBlock(scope: !13378, file: !3, line: 7157, column: 11)
!13396 = !DILocation(line: 7157, column: 11, scope: !13378)
!13397 = !DILocation(line: 7158, column: 2, scope: !13395)
!13398 = !DILocation(line: 7160, column: 29, scope: !13399)
!13399 = distinct !DILexicalBlock(scope: !13378, file: !3, line: 7160, column: 11)
!13400 = !DILocation(line: 7160, column: 39, scope: !13399)
!13401 = !DILocation(line: 7160, column: 11, scope: !13399)
!13402 = !DILocation(line: 7160, column: 11, scope: !13378)
!13403 = !DILocation(line: 7161, column: 11, scope: !13399)
!13404 = !DILocation(line: 7161, column: 9, scope: !13399)
!13405 = !DILocation(line: 7161, column: 2, scope: !13399)
!13406 = !DILocation(line: 7162, column: 16, scope: !13407)
!13407 = distinct !DILexicalBlock(scope: !13399, file: !3, line: 7162, column: 16)
!13408 = !DILocation(line: 7162, column: 25, scope: !13407)
!13409 = !DILocation(line: 7162, column: 46, scope: !13407)
!13410 = !DILocation(line: 7162, column: 56, scope: !13407)
!13411 = !DILocation(line: 7162, column: 28, scope: !13407)
!13412 = !DILocation(line: 7162, column: 16, scope: !13399)
!13413 = !DILocation(line: 7163, column: 11, scope: !13407)
!13414 = !DILocation(line: 7163, column: 9, scope: !13407)
!13415 = !DILocation(line: 7163, column: 2, scope: !13407)
!13416 = !DILocation(line: 7165, column: 2, scope: !13407)
!13417 = !DILocation(line: 7167, column: 19, scope: !13378)
!13418 = !DILocation(line: 7168, column: 14, scope: !13378)
!13419 = !DILocation(line: 7169, column: 19, scope: !13420)
!13420 = distinct !DILexicalBlock(scope: !13378, file: !3, line: 7169, column: 7)
!13421 = !DILocation(line: 7169, column: 17, scope: !13420)
!13422 = !DILocation(line: 7169, column: 12, scope: !13420)
!13423 = !DILocation(line: 7170, column: 5, scope: !13424)
!13424 = distinct !DILexicalBlock(scope: !13420, file: !3, line: 7169, column: 7)
!13425 = !DILocation(line: 7170, column: 10, scope: !13424)
!13426 = !DILocation(line: 7170, column: 13, scope: !13424)
!13427 = !DILocation(line: 7170, column: 21, scope: !13424)
!13428 = !DILocation(line: 7170, column: 18, scope: !13424)
!13429 = !DILocation(line: 0, scope: !13424)
!13430 = !DILocation(line: 7169, column: 7, scope: !13420)
!13431 = !DILocalVariable(name: "set", scope: !13432, file: !3, line: 7173, type: !1091)
!13432 = distinct !DILexicalBlock(scope: !13424, file: !3, line: 7172, column: 2)
!13433 = !DILocation(line: 7173, column: 8, scope: !13432)
!13434 = !DILocation(line: 7175, column: 10, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13432, file: !3, line: 7175, column: 8)
!13436 = !DILocation(line: 7175, column: 8, scope: !13432)
!13437 = !DILocation(line: 7176, column: 6, scope: !13435)
!13438 = !DILocation(line: 7177, column: 10, scope: !13432)
!13439 = !DILocation(line: 7177, column: 8, scope: !13432)
!13440 = !DILocation(line: 7178, column: 8, scope: !13441)
!13441 = distinct !DILexicalBlock(scope: !13432, file: !3, line: 7178, column: 8)
!13442 = !DILocation(line: 7179, column: 8, scope: !13441)
!13443 = !DILocation(line: 7179, column: 11, scope: !13441)
!13444 = !DILocation(line: 7180, column: 8, scope: !13441)
!13445 = !DILocation(line: 7180, column: 11, scope: !13441)
!13446 = !DILocation(line: 7180, column: 37, scope: !13441)
!13447 = !DILocation(line: 7180, column: 34, scope: !13441)
!13448 = !DILocation(line: 7178, column: 8, scope: !13432)
!13449 = !DILocation(line: 7182, column: 22, scope: !13450)
!13450 = distinct !DILexicalBlock(scope: !13441, file: !3, line: 7181, column: 6)
!13451 = !DILocation(line: 7182, column: 20, scope: !13450)
!13452 = !DILocation(line: 7183, column: 17, scope: !13450)
!13453 = !DILocation(line: 7183, column: 15, scope: !13450)
!13454 = !DILocation(line: 7184, column: 8, scope: !13450)
!13455 = !DILocation(line: 7186, column: 24, scope: !13456)
!13456 = distinct !DILexicalBlock(scope: !13441, file: !3, line: 7186, column: 13)
!13457 = !DILocation(line: 7186, column: 32, scope: !13456)
!13458 = !DILocation(line: 7186, column: 13, scope: !13456)
!13459 = !DILocation(line: 7186, column: 13, scope: !13441)
!13460 = !DILocation(line: 7187, column: 6, scope: !13456)
!13461 = !DILocation(line: 7188, column: 2, scope: !13432)
!13462 = !DILocation(line: 7171, column: 12, scope: !13424)
!13463 = !DILocation(line: 7171, column: 10, scope: !13424)
!13464 = !DILocation(line: 7169, column: 7, scope: !13424)
!13465 = distinct !{!13465, !13430, !13466}
!13466 = !DILocation(line: 7188, column: 2, scope: !13420)
!13467 = !DILocation(line: 7190, column: 13, scope: !13468)
!13468 = distinct !DILexicalBlock(scope: !13378, file: !3, line: 7190, column: 11)
!13469 = !DILocation(line: 7190, column: 11, scope: !13378)
!13470 = !DILocation(line: 7191, column: 2, scope: !13468)
!13471 = !DILocation(line: 7193, column: 31, scope: !13472)
!13472 = distinct !DILexicalBlock(scope: !13378, file: !3, line: 7193, column: 11)
!13473 = !DILocation(line: 7193, column: 39, scope: !13472)
!13474 = !DILocation(line: 7193, column: 52, scope: !13472)
!13475 = !DILocation(line: 7193, column: 11, scope: !13472)
!13476 = !DILocation(line: 7193, column: 11, scope: !13378)
!13477 = !DILocation(line: 7194, column: 2, scope: !13472)
!13478 = !DILocation(line: 7202, column: 19, scope: !13378)
!13479 = !DILocation(line: 7202, column: 17, scope: !13378)
!13480 = !DILocation(line: 7203, column: 28, scope: !13378)
!13481 = !DILocation(line: 7203, column: 32, scope: !13378)
!13482 = !DILocation(line: 7203, column: 36, scope: !13378)
!13483 = !DILocation(line: 7203, column: 44, scope: !13378)
!13484 = !DILocation(line: 7203, column: 14, scope: !13378)
!13485 = !DILocation(line: 7203, column: 12, scope: !13378)
!13486 = !DILocation(line: 7204, column: 11, scope: !13487)
!13487 = distinct !DILexicalBlock(scope: !13378, file: !3, line: 7204, column: 11)
!13488 = !DILocation(line: 7204, column: 16, scope: !13487)
!13489 = !DILocation(line: 7204, column: 11, scope: !13378)
!13490 = !DILocation(line: 7206, column: 4, scope: !13491)
!13491 = distinct !DILexicalBlock(scope: !13487, file: !3, line: 7205, column: 2)
!13492 = !DILocation(line: 7207, column: 8, scope: !13493)
!13493 = distinct !DILexicalBlock(scope: !13491, file: !3, line: 7207, column: 8)
!13494 = !DILocation(line: 7207, column: 16, scope: !13493)
!13495 = !DILocation(line: 7207, column: 13, scope: !13493)
!13496 = !DILocation(line: 7207, column: 8, scope: !13491)
!13497 = !DILocalVariable(name: "newreg", scope: !13498, file: !3, line: 7209, type: !1091)
!13498 = distinct !DILexicalBlock(scope: !13493, file: !3, line: 7208, column: 6)
!13499 = !DILocation(line: 7209, column: 12, scope: !13498)
!13500 = !DILocation(line: 7209, column: 34, scope: !13498)
!13501 = !DILocation(line: 7209, column: 40, scope: !13498)
!13502 = !DILocation(line: 7209, column: 21, scope: !13498)
!13503 = !DILocation(line: 7211, column: 33, scope: !13498)
!13504 = !DILocation(line: 7211, column: 46, scope: !13498)
!13505 = !DILocation(line: 7211, column: 8, scope: !13498)
!13506 = !DILocation(line: 7215, column: 34, scope: !13498)
!13507 = !DILocation(line: 7216, column: 6, scope: !13498)
!13508 = !DILocation(line: 7217, column: 6, scope: !13498)
!13509 = !DILocation(line: 7215, column: 8, scope: !13498)
!13510 = !DILocation(line: 7218, column: 6, scope: !13498)
!13511 = !DILocation(line: 7219, column: 2, scope: !13491)
!13512 = !DILocation(line: 7220, column: 5, scope: !13378)
!13513 = distinct !{!13513, !13373, !13514}
!13514 = !DILocation(line: 7220, column: 5, scope: !13374)
!13515 = !DILocation(line: 7221, column: 1, scope: !13345)
!13516 = distinct !DISubprogram(name: "cse_cc_succs", scope: !3, file: !3, line: 6936, type: !13517, scopeLine: 6938, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!13517 = !DISubroutineType(types: !13518)
!13518 = !{!5, !1059, !1059, !1091, !1091, !1052}
!13519 = !DILocalVariable(name: "bb", arg: 1, scope: !13516, file: !3, line: 6936, type: !1059)
!13520 = !DILocation(line: 6936, column: 27, scope: !13516)
!13521 = !DILocalVariable(name: "orig_bb", arg: 2, scope: !13516, file: !3, line: 6936, type: !1059)
!13522 = !DILocation(line: 6936, column: 43, scope: !13516)
!13523 = !DILocalVariable(name: "cc_reg", arg: 3, scope: !13516, file: !3, line: 6936, type: !1091)
!13524 = !DILocation(line: 6936, column: 56, scope: !13516)
!13525 = !DILocalVariable(name: "cc_src", arg: 4, scope: !13516, file: !3, line: 6936, type: !1091)
!13526 = !DILocation(line: 6936, column: 68, scope: !13516)
!13527 = !DILocalVariable(name: "can_change_mode", arg: 5, scope: !13516, file: !3, line: 6937, type: !1052)
!13528 = !DILocation(line: 6937, column: 13, scope: !13516)
!13529 = !DILocalVariable(name: "found_equiv", scope: !13516, file: !3, line: 6939, type: !1052)
!13530 = !DILocation(line: 6939, column: 8, scope: !13516)
!13531 = !DILocalVariable(name: "mode", scope: !13516, file: !3, line: 6940, type: !5)
!13532 = !DILocation(line: 6940, column: 21, scope: !13516)
!13533 = !DILocalVariable(name: "insn_count", scope: !13516, file: !3, line: 6941, type: !7)
!13534 = !DILocation(line: 6941, column: 16, scope: !13516)
!13535 = !DILocalVariable(name: "e", scope: !13516, file: !3, line: 6942, type: !1077)
!13536 = !DILocation(line: 6942, column: 8, scope: !13516)
!13537 = !DILocalVariable(name: "insns", scope: !13516, file: !3, line: 6943, type: !13538)
!13538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1091, size: 128, elements: !1163)
!13539 = !DILocation(line: 6943, column: 7, scope: !13516)
!13540 = !DILocalVariable(name: "modes", scope: !13516, file: !3, line: 6944, type: !13541)
!13541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !1163)
!13542 = !DILocation(line: 6944, column: 21, scope: !13516)
!13543 = !DILocalVariable(name: "last_insns", scope: !13516, file: !3, line: 6945, type: !13538)
!13544 = !DILocation(line: 6945, column: 7, scope: !13516)
!13545 = !DILocalVariable(name: "i", scope: !13516, file: !3, line: 6946, type: !7)
!13546 = !DILocation(line: 6946, column: 16, scope: !13516)
!13547 = !DILocalVariable(name: "newreg", scope: !13516, file: !3, line: 6947, type: !1091)
!13548 = !DILocation(line: 6947, column: 7, scope: !13516)
!13549 = !DILocalVariable(name: "ei", scope: !13516, file: !3, line: 6948, type: !4902)
!13550 = !DILocation(line: 6948, column: 17, scope: !13516)
!13551 = !DILocation(line: 6956, column: 15, scope: !13516)
!13552 = !DILocation(line: 6957, column: 10, scope: !13516)
!13553 = !DILocation(line: 6957, column: 8, scope: !13516)
!13554 = !DILocation(line: 6958, column: 14, scope: !13516)
!13555 = !DILocation(line: 6959, column: 3, scope: !13556)
!13556 = distinct !DILexicalBlock(scope: !13516, file: !3, line: 6959, column: 3)
!13557 = !DILocation(line: 6959, column: 3, scope: !13558)
!13558 = distinct !DILexicalBlock(scope: !13556, file: !3, line: 6959, column: 3)
!13559 = !DILocalVariable(name: "insn", scope: !13560, file: !3, line: 6961, type: !1091)
!13560 = distinct !DILexicalBlock(scope: !13558, file: !3, line: 6960, column: 5)
!13561 = !DILocation(line: 6961, column: 11, scope: !13560)
!13562 = !DILocalVariable(name: "end", scope: !13560, file: !3, line: 6962, type: !1091)
!13563 = !DILocation(line: 6962, column: 11, scope: !13560)
!13564 = !DILocation(line: 6964, column: 11, scope: !13565)
!13565 = distinct !DILexicalBlock(scope: !13560, file: !3, line: 6964, column: 11)
!13566 = !DILocation(line: 6964, column: 14, scope: !13565)
!13567 = !DILocation(line: 6964, column: 20, scope: !13565)
!13568 = !DILocation(line: 6964, column: 11, scope: !13560)
!13569 = !DILocation(line: 6965, column: 2, scope: !13565)
!13570 = !DILocation(line: 6967, column: 11, scope: !13571)
!13571 = distinct !DILexicalBlock(scope: !13560, file: !3, line: 6967, column: 11)
!13572 = !DILocation(line: 6967, column: 39, scope: !13571)
!13573 = !DILocation(line: 6968, column: 4, scope: !13571)
!13574 = !DILocation(line: 6968, column: 7, scope: !13571)
!13575 = !DILocation(line: 6968, column: 10, scope: !13571)
!13576 = !DILocation(line: 6968, column: 18, scope: !13571)
!13577 = !DILocation(line: 6968, column: 15, scope: !13571)
!13578 = !DILocation(line: 6970, column: 4, scope: !13571)
!13579 = !DILocation(line: 6970, column: 7, scope: !13571)
!13580 = !DILocation(line: 6970, column: 10, scope: !13571)
!13581 = !DILocation(line: 6970, column: 18, scope: !13571)
!13582 = !DILocation(line: 6970, column: 15, scope: !13571)
!13583 = !DILocation(line: 6967, column: 11, scope: !13560)
!13584 = !DILocation(line: 6971, column: 2, scope: !13571)
!13585 = !DILocation(line: 6973, column: 13, scope: !13560)
!13586 = !DILocation(line: 6973, column: 11, scope: !13560)
!13587 = !DILocation(line: 6974, column: 19, scope: !13588)
!13588 = distinct !DILexicalBlock(scope: !13560, file: !3, line: 6974, column: 7)
!13589 = !DILocation(line: 6974, column: 17, scope: !13588)
!13590 = !DILocation(line: 6974, column: 12, scope: !13588)
!13591 = !DILocation(line: 6974, column: 38, scope: !13592)
!13592 = distinct !DILexicalBlock(scope: !13588, file: !3, line: 6974, column: 7)
!13593 = !DILocation(line: 6974, column: 46, scope: !13592)
!13594 = !DILocation(line: 6974, column: 43, scope: !13592)
!13595 = !DILocation(line: 6974, column: 7, scope: !13588)
!13596 = !DILocalVariable(name: "set", scope: !13597, file: !3, line: 6976, type: !1091)
!13597 = distinct !DILexicalBlock(scope: !13592, file: !3, line: 6975, column: 2)
!13598 = !DILocation(line: 6976, column: 8, scope: !13597)
!13599 = !DILocation(line: 6978, column: 10, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !13597, file: !3, line: 6978, column: 8)
!13601 = !DILocation(line: 6978, column: 8, scope: !13597)
!13602 = !DILocation(line: 6979, column: 6, scope: !13600)
!13603 = !DILocation(line: 6983, column: 23, scope: !13604)
!13604 = distinct !DILexicalBlock(scope: !13597, file: !3, line: 6983, column: 8)
!13605 = !DILocation(line: 6983, column: 31, scope: !13604)
!13606 = !DILocation(line: 6983, column: 8, scope: !13604)
!13607 = !DILocation(line: 6983, column: 8, scope: !13597)
!13608 = !DILocation(line: 6984, column: 6, scope: !13604)
!13609 = !DILocation(line: 6987, column: 10, scope: !13597)
!13610 = !DILocation(line: 6987, column: 8, scope: !13597)
!13611 = !DILocation(line: 6988, column: 8, scope: !13612)
!13612 = distinct !DILexicalBlock(scope: !13597, file: !3, line: 6988, column: 8)
!13613 = !DILocation(line: 6989, column: 8, scope: !13612)
!13614 = !DILocation(line: 6989, column: 11, scope: !13612)
!13615 = !DILocation(line: 6990, column: 8, scope: !13612)
!13616 = !DILocation(line: 6990, column: 11, scope: !13612)
!13617 = !DILocation(line: 6990, column: 37, scope: !13612)
!13618 = !DILocation(line: 6990, column: 34, scope: !13612)
!13619 = !DILocation(line: 6988, column: 8, scope: !13597)
!13620 = !DILocalVariable(name: "found", scope: !13621, file: !3, line: 6992, type: !1052)
!13621 = distinct !DILexicalBlock(scope: !13612, file: !3, line: 6991, column: 6)
!13622 = !DILocation(line: 6992, column: 13, scope: !13621)
!13623 = !DILocalVariable(name: "set_mode", scope: !13621, file: !3, line: 6993, type: !5)
!13624 = !DILocation(line: 6993, column: 26, scope: !13621)
!13625 = !DILocalVariable(name: "comp_mode", scope: !13621, file: !3, line: 6994, type: !5)
!13626 = !DILocation(line: 6994, column: 26, scope: !13621)
!13627 = !DILocation(line: 6996, column: 14, scope: !13621)
!13628 = !DILocation(line: 6997, column: 19, scope: !13621)
!13629 = !DILocation(line: 6997, column: 17, scope: !13621)
!13630 = !DILocation(line: 6998, column: 20, scope: !13621)
!13631 = !DILocation(line: 6998, column: 18, scope: !13621)
!13632 = !DILocation(line: 6999, column: 25, scope: !13633)
!13633 = distinct !DILexicalBlock(scope: !13621, file: !3, line: 6999, column: 12)
!13634 = !DILocation(line: 6999, column: 33, scope: !13633)
!13635 = !DILocation(line: 6999, column: 12, scope: !13633)
!13636 = !DILocation(line: 6999, column: 12, scope: !13621)
!13637 = !DILocation(line: 7000, column: 9, scope: !13633)
!13638 = !DILocation(line: 7000, column: 3, scope: !13633)
!13639 = !DILocation(line: 7001, column: 17, scope: !13640)
!13640 = distinct !DILexicalBlock(scope: !13633, file: !3, line: 7001, column: 17)
!13641 = !DILocation(line: 7001, column: 35, scope: !13640)
!13642 = !DILocation(line: 7002, column: 10, scope: !13640)
!13643 = !DILocation(line: 7002, column: 13, scope: !13640)
!13644 = !DILocation(line: 7002, column: 38, scope: !13640)
!13645 = !DILocation(line: 7003, column: 10, scope: !13640)
!13646 = !DILocation(line: 7003, column: 13, scope: !13640)
!13647 = !DILocation(line: 7003, column: 21, scope: !13640)
!13648 = !DILocation(line: 7003, column: 18, scope: !13640)
!13649 = !DILocation(line: 7004, column: 10, scope: !13640)
!13650 = !DILocation(line: 7004, column: 26, scope: !13640)
!13651 = !DILocation(line: 7005, column: 12, scope: !13640)
!13652 = !DILocation(line: 7004, column: 13, scope: !13640)
!13653 = !DILocation(line: 7006, column: 10, scope: !13640)
!13654 = !DILocation(line: 7006, column: 26, scope: !13640)
!13655 = !DILocation(line: 7007, column: 12, scope: !13640)
!13656 = !DILocation(line: 7006, column: 13, scope: !13640)
!13657 = !DILocation(line: 7001, column: 17, scope: !13633)
!13658 = !DILocation(line: 7010, column: 25, scope: !13659)
!13659 = distinct !DILexicalBlock(scope: !13640, file: !3, line: 7009, column: 3)
!13660 = !DILocation(line: 7010, column: 46, scope: !13659)
!13661 = !DILocation(line: 7010, column: 52, scope: !13659)
!13662 = !DILocation(line: 7010, column: 17, scope: !13659)
!13663 = !DILocation(line: 7010, column: 15, scope: !13659)
!13664 = !DILocation(line: 7011, column: 9, scope: !13665)
!13665 = distinct !DILexicalBlock(scope: !13659, file: !3, line: 7011, column: 9)
!13666 = !DILocation(line: 7011, column: 19, scope: !13665)
!13667 = !DILocation(line: 7012, column: 9, scope: !13665)
!13668 = !DILocation(line: 7012, column: 13, scope: !13665)
!13669 = !DILocation(line: 7012, column: 29, scope: !13665)
!13670 = !DILocation(line: 7012, column: 32, scope: !13665)
!13671 = !DILocation(line: 7012, column: 45, scope: !13665)
!13672 = !DILocation(line: 7012, column: 42, scope: !13665)
!13673 = !DILocation(line: 7011, column: 9, scope: !13659)
!13674 = !DILocation(line: 7013, column: 13, scope: !13665)
!13675 = !DILocation(line: 7013, column: 7, scope: !13665)
!13676 = !DILocation(line: 7014, column: 3, scope: !13659)
!13677 = !DILocation(line: 7016, column: 12, scope: !13678)
!13678 = distinct !DILexicalBlock(scope: !13621, file: !3, line: 7016, column: 12)
!13679 = !DILocation(line: 7016, column: 12, scope: !13621)
!13680 = !DILocation(line: 7018, column: 17, scope: !13681)
!13681 = distinct !DILexicalBlock(scope: !13678, file: !3, line: 7017, column: 3)
!13682 = !DILocation(line: 7019, column: 9, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13681, file: !3, line: 7019, column: 9)
!13684 = !DILocation(line: 7019, column: 20, scope: !13683)
!13685 = !DILocation(line: 7019, column: 9, scope: !13681)
!13686 = !DILocation(line: 7021, column: 29, scope: !13687)
!13687 = distinct !DILexicalBlock(scope: !13683, file: !3, line: 7020, column: 7)
!13688 = !DILocation(line: 7021, column: 15, scope: !13687)
!13689 = !DILocation(line: 7021, column: 9, scope: !13687)
!13690 = !DILocation(line: 7021, column: 27, scope: !13687)
!13691 = !DILocation(line: 7022, column: 29, scope: !13687)
!13692 = !DILocation(line: 7022, column: 15, scope: !13687)
!13693 = !DILocation(line: 7022, column: 9, scope: !13687)
!13694 = !DILocation(line: 7022, column: 27, scope: !13687)
!13695 = !DILocation(line: 7023, column: 34, scope: !13687)
!13696 = !DILocation(line: 7023, column: 20, scope: !13687)
!13697 = !DILocation(line: 7023, column: 9, scope: !13687)
!13698 = !DILocation(line: 7023, column: 32, scope: !13687)
!13699 = !DILocation(line: 7024, column: 9, scope: !13687)
!13700 = !DILocation(line: 7026, column: 13, scope: !13701)
!13701 = distinct !DILexicalBlock(scope: !13687, file: !3, line: 7026, column: 13)
!13702 = !DILocation(line: 7026, column: 21, scope: !13701)
!13703 = !DILocation(line: 7026, column: 18, scope: !13701)
!13704 = !DILocation(line: 7026, column: 13, scope: !13687)
!13705 = !DILocation(line: 7028, column: 6, scope: !13706)
!13706 = distinct !DILexicalBlock(scope: !13701, file: !3, line: 7027, column: 4)
!13707 = !DILocation(line: 7029, column: 13, scope: !13706)
!13708 = !DILocation(line: 7029, column: 11, scope: !13706)
!13709 = !DILocation(line: 7032, column: 6, scope: !13706)
!13710 = !DILocation(line: 7033, column: 4, scope: !13706)
!13711 = !DILocation(line: 7034, column: 7, scope: !13687)
!13712 = !DILocation(line: 7037, column: 13, scope: !13713)
!13713 = distinct !DILexicalBlock(scope: !13714, file: !3, line: 7037, column: 13)
!13714 = distinct !DILexicalBlock(scope: !13683, file: !3, line: 7036, column: 7)
!13715 = !DILocation(line: 7037, column: 25, scope: !13713)
!13716 = !DILocation(line: 7037, column: 22, scope: !13713)
!13717 = !DILocation(line: 7037, column: 13, scope: !13714)
!13718 = !DILocation(line: 7043, column: 6, scope: !13719)
!13719 = distinct !DILexicalBlock(scope: !13713, file: !3, line: 7038, column: 4)
!13720 = !DILocation(line: 7048, column: 22, scope: !13714)
!13721 = !DILocation(line: 7048, column: 9, scope: !13714)
!13722 = !DILocation(line: 7053, column: 5, scope: !13681)
!13723 = !DILocation(line: 7058, column: 8, scope: !13621)
!13724 = !DILocation(line: 7063, column: 19, scope: !13725)
!13725 = distinct !DILexicalBlock(scope: !13597, file: !3, line: 7063, column: 8)
!13726 = !DILocation(line: 7063, column: 27, scope: !13725)
!13727 = !DILocation(line: 7063, column: 8, scope: !13725)
!13728 = !DILocation(line: 7063, column: 8, scope: !13597)
!13729 = !DILocation(line: 7064, column: 6, scope: !13725)
!13730 = !DILocation(line: 7065, column: 2, scope: !13597)
!13731 = !DILocation(line: 6974, column: 58, scope: !13592)
!13732 = !DILocation(line: 6974, column: 56, scope: !13592)
!13733 = !DILocation(line: 6974, column: 7, scope: !13592)
!13734 = distinct !{!13734, !13595, !13735}
!13735 = !DILocation(line: 7065, column: 2, scope: !13588)
!13736 = !DILocation(line: 7071, column: 11, scope: !13737)
!13737 = distinct !DILexicalBlock(scope: !13560, file: !3, line: 7071, column: 11)
!13738 = !DILocation(line: 7071, column: 19, scope: !13737)
!13739 = !DILocation(line: 7071, column: 16, scope: !13737)
!13740 = !DILocation(line: 7071, column: 11, scope: !13560)
!13741 = !DILocalVariable(name: "submode", scope: !13742, file: !3, line: 7073, type: !5)
!13742 = distinct !DILexicalBlock(scope: !13737, file: !3, line: 7072, column: 2)
!13743 = !DILocation(line: 7073, column: 22, scope: !13742)
!13744 = !DILocation(line: 7075, column: 28, scope: !13742)
!13745 = !DILocation(line: 7075, column: 31, scope: !13742)
!13746 = !DILocation(line: 7075, column: 37, scope: !13742)
!13747 = !DILocation(line: 7075, column: 46, scope: !13742)
!13748 = !DILocation(line: 7075, column: 54, scope: !13742)
!13749 = !DILocation(line: 7075, column: 14, scope: !13742)
!13750 = !DILocation(line: 7075, column: 12, scope: !13742)
!13751 = !DILocation(line: 7076, column: 8, scope: !13752)
!13752 = distinct !DILexicalBlock(scope: !13742, file: !3, line: 7076, column: 8)
!13753 = !DILocation(line: 7076, column: 16, scope: !13752)
!13754 = !DILocation(line: 7076, column: 8, scope: !13742)
!13755 = !DILocation(line: 7078, column: 8, scope: !13756)
!13756 = distinct !DILexicalBlock(scope: !13752, file: !3, line: 7077, column: 6)
!13757 = !DILocation(line: 7079, column: 20, scope: !13756)
!13758 = !DILocation(line: 7080, column: 24, scope: !13756)
!13759 = !DILocation(line: 7081, column: 6, scope: !13756)
!13760 = !DILocation(line: 7082, column: 2, scope: !13742)
!13761 = !DILocation(line: 7083, column: 5, scope: !13560)
!13762 = distinct !{!13762, !13555, !13763}
!13763 = !DILocation(line: 7083, column: 5, scope: !13556)
!13764 = !DILocation(line: 7085, column: 9, scope: !13765)
!13765 = distinct !DILexicalBlock(scope: !13516, file: !3, line: 7085, column: 7)
!13766 = !DILocation(line: 7085, column: 7, scope: !13516)
!13767 = !DILocation(line: 7086, column: 5, scope: !13765)
!13768 = !DILocation(line: 7092, column: 10, scope: !13516)
!13769 = !DILocation(line: 7093, column: 10, scope: !13770)
!13770 = distinct !DILexicalBlock(scope: !13516, file: !3, line: 7093, column: 3)
!13771 = !DILocation(line: 7093, column: 8, scope: !13770)
!13772 = !DILocation(line: 7093, column: 15, scope: !13773)
!13773 = distinct !DILexicalBlock(scope: !13770, file: !3, line: 7093, column: 3)
!13774 = !DILocation(line: 7093, column: 19, scope: !13773)
!13775 = !DILocation(line: 7093, column: 17, scope: !13773)
!13776 = !DILocation(line: 7093, column: 3, scope: !13770)
!13777 = !DILocation(line: 7095, column: 17, scope: !13778)
!13778 = distinct !DILexicalBlock(scope: !13779, file: !3, line: 7095, column: 11)
!13779 = distinct !DILexicalBlock(scope: !13773, file: !3, line: 7094, column: 5)
!13780 = !DILocation(line: 7095, column: 11, scope: !13778)
!13781 = !DILocation(line: 7095, column: 23, scope: !13778)
!13782 = !DILocation(line: 7095, column: 20, scope: !13778)
!13783 = !DILocation(line: 7095, column: 11, scope: !13779)
!13784 = !DILocation(line: 7099, column: 10, scope: !13785)
!13785 = distinct !DILexicalBlock(scope: !13786, file: !3, line: 7099, column: 8)
!13786 = distinct !DILexicalBlock(scope: !13778, file: !3, line: 7096, column: 2)
!13787 = !DILocation(line: 7099, column: 8, scope: !13786)
!13788 = !DILocation(line: 7101, column: 12, scope: !13789)
!13789 = distinct !DILexicalBlock(scope: !13790, file: !3, line: 7101, column: 12)
!13790 = distinct !DILexicalBlock(scope: !13785, file: !3, line: 7100, column: 6)
!13791 = !DILocation(line: 7101, column: 33, scope: !13789)
!13792 = !DILocation(line: 7101, column: 30, scope: !13789)
!13793 = !DILocation(line: 7101, column: 12, scope: !13790)
!13794 = !DILocation(line: 7102, column: 12, scope: !13789)
!13795 = !DILocation(line: 7102, column: 10, scope: !13789)
!13796 = !DILocation(line: 7102, column: 3, scope: !13789)
!13797 = !DILocation(line: 7104, column: 25, scope: !13789)
!13798 = !DILocation(line: 7104, column: 31, scope: !13789)
!13799 = !DILocation(line: 7104, column: 12, scope: !13789)
!13800 = !DILocation(line: 7104, column: 10, scope: !13789)
!13801 = !DILocation(line: 7105, column: 6, scope: !13790)
!13802 = !DILocation(line: 7106, column: 30, scope: !13786)
!13803 = !DILocation(line: 7106, column: 63, scope: !13786)
!13804 = !DILocation(line: 7106, column: 52, scope: !13786)
!13805 = !DILocation(line: 7107, column: 9, scope: !13786)
!13806 = !DILocation(line: 7106, column: 4, scope: !13786)
!13807 = !DILocation(line: 7108, column: 2, scope: !13786)
!13808 = !DILocation(line: 7110, column: 36, scope: !13779)
!13809 = !DILocation(line: 7110, column: 30, scope: !13779)
!13810 = !DILocation(line: 7110, column: 7, scope: !13779)
!13811 = !DILocation(line: 7111, column: 5, scope: !13779)
!13812 = !DILocation(line: 7093, column: 31, scope: !13773)
!13813 = !DILocation(line: 7093, column: 3, scope: !13773)
!13814 = distinct !{!13814, !13776, !13815}
!13815 = !DILocation(line: 7111, column: 5, scope: !13770)
!13816 = !DILocation(line: 7113, column: 10, scope: !13516)
!13817 = !DILocation(line: 7113, column: 3, scope: !13516)
!13818 = !DILocation(line: 7114, column: 1, scope: !13516)
!13819 = distinct !DISubprogram(name: "cse_change_cc_mode_insn", scope: !3, file: !3, line: 6876, type: !13820, scopeLine: 6877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!13820 = !DISubroutineType(types: !13821)
!13821 = !{null, !1091, !1091}
!13822 = !DILocalVariable(name: "insn", arg: 1, scope: !13819, file: !3, line: 6876, type: !1091)
!13823 = !DILocation(line: 6876, column: 30, scope: !13819)
!13824 = !DILocalVariable(name: "newreg", arg: 2, scope: !13819, file: !3, line: 6876, type: !1091)
!13825 = !DILocation(line: 6876, column: 40, scope: !13819)
!13826 = !DILocalVariable(name: "args", scope: !13819, file: !3, line: 6878, type: !2336)
!13827 = !DILocation(line: 6878, column: 30, scope: !13819)
!13828 = !DILocalVariable(name: "success", scope: !13819, file: !3, line: 6879, type: !1053)
!13829 = !DILocation(line: 6879, column: 7, scope: !13819)
!13830 = !DILocation(line: 6881, column: 8, scope: !13831)
!13831 = distinct !DILexicalBlock(scope: !13819, file: !3, line: 6881, column: 7)
!13832 = !DILocation(line: 6881, column: 7, scope: !13819)
!13833 = !DILocation(line: 6882, column: 5, scope: !13831)
!13834 = !DILocation(line: 6884, column: 15, scope: !13819)
!13835 = !DILocation(line: 6884, column: 8, scope: !13819)
!13836 = !DILocation(line: 6884, column: 13, scope: !13819)
!13837 = !DILocation(line: 6885, column: 17, scope: !13819)
!13838 = !DILocation(line: 6885, column: 8, scope: !13819)
!13839 = !DILocation(line: 6885, column: 15, scope: !13819)
!13840 = !DILocation(line: 6887, column: 18, scope: !13819)
!13841 = !DILocation(line: 6887, column: 54, scope: !13819)
!13842 = !DILocation(line: 6887, column: 3, scope: !13819)
!13843 = !DILocation(line: 6888, column: 18, scope: !13819)
!13844 = !DILocation(line: 6888, column: 56, scope: !13819)
!13845 = !DILocation(line: 6888, column: 3, scope: !13819)
!13846 = !DILocation(line: 6894, column: 13, scope: !13819)
!13847 = !DILocation(line: 6894, column: 11, scope: !13819)
!13848 = !DILocation(line: 6895, column: 3, scope: !13819)
!13849 = !DILocation(line: 6896, column: 1, scope: !13819)
!13850 = distinct !DISubprogram(name: "cse_change_cc_mode_insns", scope: !3, file: !3, line: 6903, type: !13851, scopeLine: 6904, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!13851 = !DISubroutineType(types: !13852)
!13852 = !{null, !1091, !1091, !1091}
!13853 = !DILocalVariable(name: "start", arg: 1, scope: !13850, file: !3, line: 6903, type: !1091)
!13854 = !DILocation(line: 6903, column: 31, scope: !13850)
!13855 = !DILocalVariable(name: "end", arg: 2, scope: !13850, file: !3, line: 6903, type: !1091)
!13856 = !DILocation(line: 6903, column: 42, scope: !13850)
!13857 = !DILocalVariable(name: "newreg", arg: 3, scope: !13850, file: !3, line: 6903, type: !1091)
!13858 = !DILocation(line: 6903, column: 51, scope: !13850)
!13859 = !DILocalVariable(name: "insn", scope: !13850, file: !3, line: 6905, type: !1091)
!13860 = !DILocation(line: 6905, column: 7, scope: !13850)
!13861 = !DILocation(line: 6907, column: 15, scope: !13862)
!13862 = distinct !DILexicalBlock(scope: !13850, file: !3, line: 6907, column: 3)
!13863 = !DILocation(line: 6907, column: 13, scope: !13862)
!13864 = !DILocation(line: 6907, column: 8, scope: !13862)
!13865 = !DILocation(line: 6907, column: 22, scope: !13866)
!13866 = distinct !DILexicalBlock(scope: !13862, file: !3, line: 6907, column: 3)
!13867 = !DILocation(line: 6907, column: 30, scope: !13866)
!13868 = !DILocation(line: 6907, column: 27, scope: !13866)
!13869 = !DILocation(line: 6907, column: 3, scope: !13862)
!13870 = !DILocation(line: 6909, column: 13, scope: !13871)
!13871 = distinct !DILexicalBlock(scope: !13872, file: !3, line: 6909, column: 11)
!13872 = distinct !DILexicalBlock(scope: !13866, file: !3, line: 6908, column: 5)
!13873 = !DILocation(line: 6909, column: 11, scope: !13872)
!13874 = !DILocation(line: 6910, column: 2, scope: !13871)
!13875 = !DILocation(line: 6912, column: 22, scope: !13876)
!13876 = distinct !DILexicalBlock(scope: !13872, file: !3, line: 6912, column: 11)
!13877 = !DILocation(line: 6912, column: 30, scope: !13876)
!13878 = !DILocation(line: 6912, column: 11, scope: !13876)
!13879 = !DILocation(line: 6912, column: 11, scope: !13872)
!13880 = !DILocation(line: 6913, column: 2, scope: !13876)
!13881 = !DILocation(line: 6915, column: 32, scope: !13872)
!13882 = !DILocation(line: 6915, column: 38, scope: !13872)
!13883 = !DILocation(line: 6915, column: 7, scope: !13872)
!13884 = !DILocation(line: 6916, column: 5, scope: !13872)
!13885 = !DILocation(line: 6907, column: 42, scope: !13866)
!13886 = !DILocation(line: 6907, column: 40, scope: !13866)
!13887 = !DILocation(line: 6907, column: 3, scope: !13866)
!13888 = distinct !{!13888, !13869, !13889}
!13889 = !DILocation(line: 6916, column: 5, scope: !13862)
!13890 = !DILocation(line: 6917, column: 1, scope: !13850)
!13891 = distinct !DISubprogram(name: "cse_change_cc_mode", scope: !3, file: !3, line: 6856, type: !8213, scopeLine: 6857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2466)
!13892 = !DILocalVariable(name: "loc", arg: 1, scope: !13891, file: !3, line: 6856, type: !2281)
!13893 = !DILocation(line: 6856, column: 26, scope: !13891)
!13894 = !DILocalVariable(name: "data", arg: 2, scope: !13891, file: !3, line: 6856, type: !1019)
!13895 = !DILocation(line: 6856, column: 37, scope: !13891)
!13896 = !DILocalVariable(name: "args", scope: !13891, file: !3, line: 6858, type: !2335)
!13897 = !DILocation(line: 6858, column: 31, scope: !13891)
!13898 = !DILocation(line: 6858, column: 67, scope: !13891)
!13899 = !DILocation(line: 6858, column: 38, scope: !13891)
!13900 = !DILocation(line: 6860, column: 8, scope: !13901)
!13901 = distinct !DILexicalBlock(scope: !13891, file: !3, line: 6860, column: 7)
!13902 = !DILocation(line: 6860, column: 7, scope: !13901)
!13903 = !DILocation(line: 6861, column: 7, scope: !13901)
!13904 = !DILocation(line: 6861, column: 10, scope: !13901)
!13905 = !DILocation(line: 6862, column: 7, scope: !13901)
!13906 = !DILocation(line: 6862, column: 10, scope: !13901)
!13907 = !DILocation(line: 6862, column: 26, scope: !13901)
!13908 = !DILocation(line: 6862, column: 23, scope: !13901)
!13909 = !DILocation(line: 6863, column: 7, scope: !13901)
!13910 = !DILocation(line: 6863, column: 10, scope: !13901)
!13911 = !DILocation(line: 6863, column: 29, scope: !13901)
!13912 = !DILocation(line: 6863, column: 26, scope: !13901)
!13913 = !DILocation(line: 6860, column: 7, scope: !13891)
!13914 = !DILocation(line: 6865, column: 24, scope: !13915)
!13915 = distinct !DILexicalBlock(scope: !13901, file: !3, line: 6864, column: 5)
!13916 = !DILocation(line: 6865, column: 30, scope: !13915)
!13917 = !DILocation(line: 6865, column: 36, scope: !13915)
!13918 = !DILocation(line: 6865, column: 41, scope: !13915)
!13919 = !DILocation(line: 6865, column: 47, scope: !13915)
!13920 = !DILocation(line: 6865, column: 7, scope: !13915)
!13921 = !DILocation(line: 6867, column: 7, scope: !13915)
!13922 = !DILocation(line: 6869, column: 3, scope: !13891)
!13923 = !DILocation(line: 6870, column: 1, scope: !13891)
