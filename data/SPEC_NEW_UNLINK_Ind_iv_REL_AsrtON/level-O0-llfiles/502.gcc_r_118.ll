; ModuleID = 'decNumber.c'
source_filename = "decNumber.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.decNumber = type { i32, i32, i8, [1 x i16] }
%struct.decContext = type { i32, i32, i32, i32, i32, i32, i8 }

@d2utable = dso_local constant [50 x i8] c"\00\01\01\01\02\02\02\03\03\03\04\04\04\05\05\05\06\06\06\07\07\07\08\08\08\09\09\09\0A\0A\0A\0B\0B\0B\0C\0C\0C\0D\0D\0D\0E\0E\0E\0F\0F\0F\10\10\10\11", align 16, !dbg !0
@DECPOWERS = external dso_local constant [10 x i32], align 16
@.str = private unnamed_addr constant [9 x i8] c"infinity\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"INFINITY\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"inf\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"INF\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"+Normal\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"-Normal\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"+Zero\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"-Zero\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"+Subnormal\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"-Subnormal\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"+Infinity\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"-Infinity\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"NaN\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"sNaN\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"Invalid\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"decNumber 3.61\00", align 1
@LNnn = dso_local constant [90 x i16] [i16 9016, i16 8652, i16 8316, i16 8008, i16 7724, i16 7456, i16 7208, i16 6972, i16 6748, i16 6540, i16 6340, i16 6148, i16 5968, i16 5792, i16 5628, i16 5464, i16 5312, i16 5164, i16 5020, i16 4884, i16 4748, i16 4620, i16 4496, i16 4376, i16 4256, i16 4144, i16 4032, i16 -26303, i16 -27355, i16 -28379, i16 -29379, i16 -30355, i16 -31307, i16 -32239, i16 32389, i16 31501, i16 30629, i16 29777, i16 28945, i16 28129, i16 27329, i16 26545, i16 25777, i16 25021, i16 24281, i16 23553, i16 22837, i16 22137, i16 21445, i16 20769, i16 20101, i16 19445, i16 18801, i16 18165, i16 17541, i16 16925, i16 16321, i16 15721, i16 15133, i16 14553, i16 13985, i16 13421, i16 12865, i16 12317, i16 11777, i16 11241, i16 10717, i16 10197, i16 9685, i16 9177, i16 8677, i16 8185, i16 7697, i16 7213, i16 6737, i16 6269, i16 5801, i16 5341, i16 4889, i16 4437, i16 -25606, i16 -30002, i16 31186, i16 26886, i16 22630, i16 18418, i16 14254, i16 10130, i16 6046, i16 20055], align 16, !dbg !65
@.str.16 = private unnamed_addr constant [4 x i8] c"Inf\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"inity\00", align 1
@multies = internal constant [5 x i32] [i32 131073, i32 26215, i32 5243, i32 1049, i32 210], align 16, !dbg !71
@.str.18 = private unnamed_addr constant [42 x i8] c"2.302585092994045684017991454684364207601\00", align 1
@.str.19 = private unnamed_addr constant [43 x i8] c"0.6931471805599453094172321214581765680755\00", align 1
@uarrone = internal global [1 x i16] [i16 1], align 2, !dbg !77
@resmap = internal constant [10 x i8] c"\00\03\03\03\03\05\07\07\07\07", align 1, !dbg !79

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberFromInt32(%struct.decNumber* %dn, i32 %in) #0 !dbg !92 {
entry:
  %dn.addr = alloca %struct.decNumber*, align 8
  %in.addr = alloca i32, align 4
  %unsig = alloca i32, align 4
  store %struct.decNumber* %dn, %struct.decNumber** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dn.addr, metadata !96, metadata !DIExpression()), !dbg !97
  store i32 %in, i32* %in.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %in.addr, metadata !98, metadata !DIExpression()), !dbg !99
  call void @llvm.dbg.declare(metadata i32* %unsig, metadata !100, metadata !DIExpression()), !dbg !101
  %0 = load i32, i32* %in.addr, align 4, !dbg !102
  %cmp = icmp sge i32 %0, 0, !dbg !104
  br i1 %cmp, label %if.then, label %if.else, !dbg !105

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %in.addr, align 4, !dbg !106
  store i32 %1, i32* %unsig, align 4, !dbg !107
  br label %if.end4, !dbg !108

if.else:                                          ; preds = %entry
  %2 = load i32, i32* %in.addr, align 4, !dbg !109
  %cmp1 = icmp eq i32 %2, -2147483648, !dbg !112
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !113

if.then2:                                         ; preds = %if.else
  store i32 -2147483648, i32* %unsig, align 4, !dbg !114
  br label %if.end, !dbg !115

if.else3:                                         ; preds = %if.else
  %3 = load i32, i32* %in.addr, align 4, !dbg !116
  %sub = sub nsw i32 0, %3, !dbg !117
  store i32 %sub, i32* %unsig, align 4, !dbg !118
  br label %if.end

if.end:                                           ; preds = %if.else3, %if.then2
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then
  %4 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !119
  %5 = load i32, i32* %unsig, align 4, !dbg !120
  %call = call %struct.decNumber* @decNumberFromUInt32(%struct.decNumber* %4, i32 %5), !dbg !121
  %6 = load i32, i32* %in.addr, align 4, !dbg !122
  %cmp5 = icmp slt i32 %6, 0, !dbg !124
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !125

if.then6:                                         ; preds = %if.end4
  %7 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !126
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %7, i32 0, i32 2, !dbg !127
  store i8 -128, i8* %bits, align 4, !dbg !128
  br label %if.end7, !dbg !126

if.end7:                                          ; preds = %if.then6, %if.end4
  %8 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !129
  ret %struct.decNumber* %8, !dbg !130
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberFromUInt32(%struct.decNumber* %dn, i32 %uin) #0 !dbg !131 {
entry:
  %retval = alloca %struct.decNumber*, align 8
  %dn.addr = alloca %struct.decNumber*, align 8
  %uin.addr = alloca i32, align 4
  %up = alloca i16*, align 8
  store %struct.decNumber* %dn, %struct.decNumber** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dn.addr, metadata !134, metadata !DIExpression()), !dbg !135
  store i32 %uin, i32* %uin.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uin.addr, metadata !136, metadata !DIExpression()), !dbg !137
  call void @llvm.dbg.declare(metadata i16** %up, metadata !138, metadata !DIExpression()), !dbg !139
  %0 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !140
  %call = call %struct.decNumber* @decNumberZero(%struct.decNumber* %0), !dbg !141
  %1 = load i32, i32* %uin.addr, align 4, !dbg !142
  %cmp = icmp eq i32 %1, 0, !dbg !144
  br i1 %cmp, label %if.then, label %if.end, !dbg !145

if.then:                                          ; preds = %entry
  %2 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !146
  store %struct.decNumber* %2, %struct.decNumber** %retval, align 8, !dbg !147
  br label %return, !dbg !147

if.end:                                           ; preds = %entry
  %3 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !148
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %3, i32 0, i32 3, !dbg !150
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !148
  store i16* %arraydecay, i16** %up, align 8, !dbg !151
  br label %for.cond, !dbg !152

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %uin.addr, align 4, !dbg !153
  %cmp1 = icmp ugt i32 %4, 0, !dbg !155
  br i1 %cmp1, label %for.body, label %for.end, !dbg !156

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %uin.addr, align 4, !dbg !157
  %rem = urem i32 %5, 1000, !dbg !159
  %conv = trunc i32 %rem to i16, !dbg !160
  %6 = load i16*, i16** %up, align 8, !dbg !161
  store i16 %conv, i16* %6, align 2, !dbg !162
  %7 = load i32, i32* %uin.addr, align 4, !dbg !163
  %div = udiv i32 %7, 1000, !dbg !164
  store i32 %div, i32* %uin.addr, align 4, !dbg !165
  br label %for.inc, !dbg !166

for.inc:                                          ; preds = %for.body
  %8 = load i16*, i16** %up, align 8, !dbg !167
  %incdec.ptr = getelementptr inbounds i16, i16* %8, i32 1, !dbg !167
  store i16* %incdec.ptr, i16** %up, align 8, !dbg !167
  br label %for.cond, !dbg !168, !llvm.loop !169

for.end:                                          ; preds = %for.cond
  %9 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !171
  %lsu2 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %9, i32 0, i32 3, !dbg !172
  %arraydecay3 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu2, i64 0, i64 0, !dbg !171
  %10 = load i16*, i16** %up, align 8, !dbg !173
  %11 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !174
  %lsu4 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %11, i32 0, i32 3, !dbg !175
  %arraydecay5 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu4, i64 0, i64 0, !dbg !174
  %sub.ptr.lhs.cast = ptrtoint i16* %10 to i64, !dbg !176
  %sub.ptr.rhs.cast = ptrtoint i16* %arraydecay5 to i64, !dbg !176
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !176
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2, !dbg !176
  %conv6 = trunc i64 %sub.ptr.div to i32, !dbg !173
  %call7 = call i32 @decGetDigits(i16* %arraydecay3, i32 %conv6), !dbg !177
  %12 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !178
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %12, i32 0, i32 0, !dbg !179
  store i32 %call7, i32* %digits, align 4, !dbg !180
  %13 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !181
  store %struct.decNumber* %13, %struct.decNumber** %retval, align 8, !dbg !182
  br label %return, !dbg !182

return:                                           ; preds = %for.end, %if.then
  %14 = load %struct.decNumber*, %struct.decNumber** %retval, align 8, !dbg !183
  ret %struct.decNumber* %14, !dbg !183
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberZero(%struct.decNumber* %dn) #0 !dbg !184 {
entry:
  %dn.addr = alloca %struct.decNumber*, align 8
  store %struct.decNumber* %dn, %struct.decNumber** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dn.addr, metadata !187, metadata !DIExpression()), !dbg !188
  %0 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !189
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 2, !dbg !190
  store i8 0, i8* %bits, align 4, !dbg !191
  %1 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !192
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i32 0, i32 1, !dbg !193
  store i32 0, i32* %exponent, align 4, !dbg !194
  %2 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !195
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 0, !dbg !196
  store i32 1, i32* %digits, align 4, !dbg !197
  %3 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !198
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %3, i32 0, i32 3, !dbg !199
  %arrayidx = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !198
  store i16 0, i16* %arrayidx, align 2, !dbg !200
  %4 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !201
  ret %struct.decNumber* %4, !dbg !202
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @decGetDigits(i16* %uar, i32 %len) #0 !dbg !203 {
entry:
  %uar.addr = alloca i16*, align 8
  %len.addr = alloca i32, align 4
  %up = alloca i16*, align 8
  %digits = alloca i32, align 4
  store i16* %uar, i16** %uar.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %uar.addr, metadata !206, metadata !DIExpression()), !dbg !207
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !208, metadata !DIExpression()), !dbg !209
  call void @llvm.dbg.declare(metadata i16** %up, metadata !210, metadata !DIExpression()), !dbg !211
  %0 = load i16*, i16** %uar.addr, align 8, !dbg !212
  %1 = load i32, i32* %len.addr, align 4, !dbg !213
  %sub = sub nsw i32 %1, 1, !dbg !214
  %idx.ext = sext i32 %sub to i64, !dbg !215
  %add.ptr = getelementptr inbounds i16, i16* %0, i64 %idx.ext, !dbg !215
  store i16* %add.ptr, i16** %up, align 8, !dbg !211
  call void @llvm.dbg.declare(metadata i32* %digits, metadata !216, metadata !DIExpression()), !dbg !217
  %2 = load i32, i32* %len.addr, align 4, !dbg !218
  %sub1 = sub nsw i32 %2, 1, !dbg !219
  %mul = mul nsw i32 %sub1, 3, !dbg !220
  %add = add nsw i32 %mul, 1, !dbg !221
  store i32 %add, i32* %digits, align 4, !dbg !217
  br label %for.cond, !dbg !222

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i16*, i16** %up, align 8, !dbg !223
  %4 = load i16*, i16** %uar.addr, align 8, !dbg !226
  %cmp = icmp uge i16* %3, %4, !dbg !227
  br i1 %cmp, label %for.body, label %for.end, !dbg !228

for.body:                                         ; preds = %for.cond
  %5 = load i16*, i16** %up, align 8, !dbg !229
  %6 = load i16, i16* %5, align 2, !dbg !232
  %conv = zext i16 %6 to i32, !dbg !232
  %cmp2 = icmp eq i32 %conv, 0, !dbg !233
  br i1 %cmp2, label %if.then, label %if.end8, !dbg !234

if.then:                                          ; preds = %for.body
  %7 = load i32, i32* %digits, align 4, !dbg !235
  %cmp4 = icmp eq i32 %7, 1, !dbg !238
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !239

if.then6:                                         ; preds = %if.then
  br label %for.end, !dbg !240

if.end:                                           ; preds = %if.then
  %8 = load i32, i32* %digits, align 4, !dbg !241
  %sub7 = sub nsw i32 %8, 3, !dbg !241
  store i32 %sub7, i32* %digits, align 4, !dbg !241
  br label %for.inc, !dbg !242

if.end8:                                          ; preds = %for.body
  %9 = load i16*, i16** %up, align 8, !dbg !243
  %10 = load i16, i16* %9, align 2, !dbg !245
  %conv9 = zext i16 %10 to i32, !dbg !245
  %cmp10 = icmp slt i32 %conv9, 10, !dbg !246
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !247

if.then12:                                        ; preds = %if.end8
  br label %for.end, !dbg !248

if.end13:                                         ; preds = %if.end8
  %11 = load i32, i32* %digits, align 4, !dbg !249
  %inc = add nsw i32 %11, 1, !dbg !249
  store i32 %inc, i32* %digits, align 4, !dbg !249
  %12 = load i16*, i16** %up, align 8, !dbg !250
  %13 = load i16, i16* %12, align 2, !dbg !252
  %conv14 = zext i16 %13 to i32, !dbg !252
  %cmp15 = icmp slt i32 %conv14, 100, !dbg !253
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !254

if.then17:                                        ; preds = %if.end13
  br label %for.end, !dbg !255

if.end18:                                         ; preds = %if.end13
  %14 = load i32, i32* %digits, align 4, !dbg !256
  %inc19 = add nsw i32 %14, 1, !dbg !256
  store i32 %inc19, i32* %digits, align 4, !dbg !256
  br label %for.end, !dbg !257

for.inc:                                          ; preds = %if.end
  %15 = load i16*, i16** %up, align 8, !dbg !258
  %incdec.ptr = getelementptr inbounds i16, i16* %15, i32 -1, !dbg !258
  store i16* %incdec.ptr, i16** %up, align 8, !dbg !258
  br label %for.cond, !dbg !259, !llvm.loop !260

for.end:                                          ; preds = %if.end18, %if.then17, %if.then12, %if.then6, %for.cond
  %16 = load i32, i32* %digits, align 4, !dbg !262
  ret i32 %16, !dbg !263
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @decNumberToInt32(%struct.decNumber* %dn, %struct.decContext* %set) #0 !dbg !264 {
entry:
  %retval = alloca i32, align 4
  %dn.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %d = alloca i32, align 4
  %up = alloca i16*, align 8
  %hi = alloca i32, align 4
  %lo = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.decNumber* %dn, %struct.decNumber** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dn.addr, metadata !280, metadata !DIExpression()), !dbg !281
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !282, metadata !DIExpression()), !dbg !283
  %0 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !284
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 2, !dbg !286
  %1 = load i8, i8* %bits, align 4, !dbg !286
  %conv = zext i8 %1 to i32, !dbg !284
  %and = and i32 %conv, 112, !dbg !287
  %tobool = icmp ne i32 %and, 0, !dbg !287
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !288

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !289
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 0, !dbg !290
  %3 = load i32, i32* %digits, align 4, !dbg !290
  %cmp = icmp sgt i32 %3, 10, !dbg !291
  br i1 %cmp, label %if.then, label %lor.lhs.false2, !dbg !292

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %4 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !293
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 1, !dbg !294
  %5 = load i32, i32* %exponent, align 4, !dbg !294
  %cmp3 = icmp ne i32 %5, 0, !dbg !295
  br i1 %cmp3, label %if.then, label %if.else, !dbg !296

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  br label %if.end43, !dbg !296

if.else:                                          ; preds = %lor.lhs.false2
  call void @llvm.dbg.declare(metadata i32* %d, metadata !297, metadata !DIExpression()), !dbg !299
  call void @llvm.dbg.declare(metadata i16** %up, metadata !300, metadata !DIExpression()), !dbg !302
  call void @llvm.dbg.declare(metadata i32* %hi, metadata !303, metadata !DIExpression()), !dbg !304
  store i32 0, i32* %hi, align 4, !dbg !304
  call void @llvm.dbg.declare(metadata i32* %lo, metadata !305, metadata !DIExpression()), !dbg !306
  %6 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !307
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %6, i32 0, i32 3, !dbg !308
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !307
  store i16* %arraydecay, i16** %up, align 8, !dbg !309
  %7 = load i16*, i16** %up, align 8, !dbg !310
  %8 = load i16, i16* %7, align 2, !dbg !311
  %conv5 = zext i16 %8 to i32, !dbg !311
  store i32 %conv5, i32* %lo, align 4, !dbg !312
  %9 = load i32, i32* %lo, align 4, !dbg !313
  %div = udiv i32 %9, 10, !dbg !314
  store i32 %div, i32* %hi, align 4, !dbg !315
  %10 = load i32, i32* %lo, align 4, !dbg !316
  %rem = urem i32 %10, 10, !dbg !317
  store i32 %rem, i32* %lo, align 4, !dbg !318
  %11 = load i16*, i16** %up, align 8, !dbg !319
  %incdec.ptr = getelementptr inbounds i16, i16* %11, i32 1, !dbg !319
  store i16* %incdec.ptr, i16** %up, align 8, !dbg !319
  store i32 3, i32* %d, align 4, !dbg !320
  br label %for.cond, !dbg !322

for.cond:                                         ; preds = %for.inc, %if.else
  %12 = load i32, i32* %d, align 4, !dbg !323
  %13 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !325
  %digits6 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %13, i32 0, i32 0, !dbg !326
  %14 = load i32, i32* %digits6, align 4, !dbg !326
  %cmp7 = icmp slt i32 %12, %14, !dbg !327
  br i1 %cmp7, label %for.body, label %for.end, !dbg !328

for.body:                                         ; preds = %for.cond
  %15 = load i16*, i16** %up, align 8, !dbg !329
  %16 = load i16, i16* %15, align 2, !dbg !330
  %conv9 = zext i16 %16 to i32, !dbg !330
  %17 = load i32, i32* %d, align 4, !dbg !331
  %sub = sub nsw i32 %17, 1, !dbg !332
  %idxprom = sext i32 %sub to i64, !dbg !333
  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom, !dbg !333
  %18 = load i32, i32* %arrayidx, align 4, !dbg !333
  %mul = mul i32 %conv9, %18, !dbg !334
  %19 = load i32, i32* %hi, align 4, !dbg !335
  %add = add i32 %19, %mul, !dbg !335
  store i32 %add, i32* %hi, align 4, !dbg !335
  br label %for.inc, !dbg !336

for.inc:                                          ; preds = %for.body
  %20 = load i16*, i16** %up, align 8, !dbg !337
  %incdec.ptr10 = getelementptr inbounds i16, i16* %20, i32 1, !dbg !337
  store i16* %incdec.ptr10, i16** %up, align 8, !dbg !337
  %21 = load i32, i32* %d, align 4, !dbg !338
  %add11 = add nsw i32 %21, 3, !dbg !338
  store i32 %add11, i32* %d, align 4, !dbg !338
  br label %for.cond, !dbg !339, !llvm.loop !340

for.end:                                          ; preds = %for.cond
  %22 = load i32, i32* %hi, align 4, !dbg !342
  %cmp12 = icmp ugt i32 %22, 214748364, !dbg !344
  br i1 %cmp12, label %if.then19, label %lor.lhs.false14, !dbg !345

lor.lhs.false14:                                  ; preds = %for.end
  %23 = load i32, i32* %hi, align 4, !dbg !346
  %cmp15 = icmp eq i32 %23, 214748364, !dbg !347
  br i1 %cmp15, label %land.lhs.true, label %if.else31, !dbg !348

land.lhs.true:                                    ; preds = %lor.lhs.false14
  %24 = load i32, i32* %lo, align 4, !dbg !349
  %cmp17 = icmp ugt i32 %24, 7, !dbg !350
  br i1 %cmp17, label %if.then19, label %if.else31, !dbg !351

if.then19:                                        ; preds = %land.lhs.true, %for.end
  %25 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !352
  %bits20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %25, i32 0, i32 2, !dbg !355
  %26 = load i8, i8* %bits20, align 4, !dbg !355
  %conv21 = zext i8 %26 to i32, !dbg !352
  %and22 = and i32 %conv21, 128, !dbg !356
  %tobool23 = icmp ne i32 %and22, 0, !dbg !356
  br i1 %tobool23, label %land.lhs.true24, label %if.end, !dbg !357

land.lhs.true24:                                  ; preds = %if.then19
  %27 = load i32, i32* %hi, align 4, !dbg !358
  %cmp25 = icmp eq i32 %27, 214748364, !dbg !359
  br i1 %cmp25, label %land.lhs.true27, label %if.end, !dbg !360

land.lhs.true27:                                  ; preds = %land.lhs.true24
  %28 = load i32, i32* %lo, align 4, !dbg !361
  %cmp28 = icmp eq i32 %28, 8, !dbg !362
  br i1 %cmp28, label %if.then30, label %if.end, !dbg !363

if.then30:                                        ; preds = %land.lhs.true27
  store i32 -2147483648, i32* %retval, align 4, !dbg !364
  br label %return, !dbg !364

if.end:                                           ; preds = %land.lhs.true27, %land.lhs.true24, %if.then19
  br label %if.end42, !dbg !365

if.else31:                                        ; preds = %land.lhs.true, %lor.lhs.false14
  call void @llvm.dbg.declare(metadata i32* %i, metadata !366, metadata !DIExpression()), !dbg !368
  %29 = load i32, i32* %hi, align 4, !dbg !369
  %shl = shl i32 %29, 1, !dbg !369
  %30 = load i32, i32* %hi, align 4, !dbg !369
  %shl32 = shl i32 %30, 3, !dbg !369
  %add33 = add i32 %shl, %shl32, !dbg !369
  %31 = load i32, i32* %lo, align 4, !dbg !370
  %add34 = add i32 %add33, %31, !dbg !371
  store i32 %add34, i32* %i, align 4, !dbg !368
  %32 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !372
  %bits35 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %32, i32 0, i32 2, !dbg !374
  %33 = load i8, i8* %bits35, align 4, !dbg !374
  %conv36 = zext i8 %33 to i32, !dbg !372
  %and37 = and i32 %conv36, 128, !dbg !375
  %tobool38 = icmp ne i32 %and37, 0, !dbg !375
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !376

if.then39:                                        ; preds = %if.else31
  %34 = load i32, i32* %i, align 4, !dbg !377
  %sub40 = sub nsw i32 0, %34, !dbg !378
  store i32 %sub40, i32* %retval, align 4, !dbg !379
  br label %return, !dbg !379

if.end41:                                         ; preds = %if.else31
  %35 = load i32, i32* %i, align 4, !dbg !380
  store i32 %35, i32* %retval, align 4, !dbg !381
  br label %return, !dbg !381

if.end42:                                         ; preds = %if.end
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then
  %36 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !382
  %call = call %struct.decContext* @decContextSetStatus(%struct.decContext* %36, i32 128), !dbg !383
  store i32 0, i32* %retval, align 4, !dbg !384
  br label %return, !dbg !384

return:                                           ; preds = %if.end43, %if.end41, %if.then39, %if.then30
  %37 = load i32, i32* %retval, align 4, !dbg !385
  ret i32 %37, !dbg !385
}

declare dso_local %struct.decContext* @decContextSetStatus(%struct.decContext*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @decNumberToUInt32(%struct.decNumber* %dn, %struct.decContext* %set) #0 !dbg !386 {
entry:
  %retval = alloca i32, align 4
  %dn.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %d = alloca i32, align 4
  %up = alloca i16*, align 8
  %hi = alloca i32, align 4
  %lo = alloca i32, align 4
  store %struct.decNumber* %dn, %struct.decNumber** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dn.addr, metadata !389, metadata !DIExpression()), !dbg !390
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !391, metadata !DIExpression()), !dbg !392
  %0 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !393
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 2, !dbg !395
  %1 = load i8, i8* %bits, align 4, !dbg !395
  %conv = zext i8 %1 to i32, !dbg !393
  %and = and i32 %conv, 112, !dbg !396
  %tobool = icmp ne i32 %and, 0, !dbg !396
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !397

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !398
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 0, !dbg !399
  %3 = load i32, i32* %digits, align 4, !dbg !399
  %cmp = icmp sgt i32 %3, 10, !dbg !400
  br i1 %cmp, label %if.then, label %lor.lhs.false2, !dbg !401

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %4 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !402
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 1, !dbg !403
  %5 = load i32, i32* %exponent, align 4, !dbg !403
  %cmp3 = icmp ne i32 %5, 0, !dbg !404
  br i1 %cmp3, label %if.then, label %lor.lhs.false5, !dbg !405

lor.lhs.false5:                                   ; preds = %lor.lhs.false2
  %6 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !406
  %bits6 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %6, i32 0, i32 2, !dbg !407
  %7 = load i8, i8* %bits6, align 4, !dbg !407
  %conv7 = zext i8 %7 to i32, !dbg !406
  %and8 = and i32 %conv7, 128, !dbg !408
  %tobool9 = icmp ne i32 %and8, 0, !dbg !408
  br i1 %tobool9, label %land.lhs.true, label %if.else, !dbg !409

land.lhs.true:                                    ; preds = %lor.lhs.false5
  %8 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !410
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i32 0, i32 3, !dbg !410
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !410
  %9 = load i16, i16* %arraydecay, align 2, !dbg !410
  %conv10 = zext i16 %9 to i32, !dbg !410
  %cmp11 = icmp eq i32 %conv10, 0, !dbg !410
  br i1 %cmp11, label %land.lhs.true13, label %if.then, !dbg !410

land.lhs.true13:                                  ; preds = %land.lhs.true
  %10 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !410
  %digits14 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %10, i32 0, i32 0, !dbg !410
  %11 = load i32, i32* %digits14, align 4, !dbg !410
  %cmp15 = icmp eq i32 %11, 1, !dbg !410
  br i1 %cmp15, label %land.lhs.true17, label %if.then, !dbg !410

land.lhs.true17:                                  ; preds = %land.lhs.true13
  %12 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !410
  %bits18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %12, i32 0, i32 2, !dbg !410
  %13 = load i8, i8* %bits18, align 4, !dbg !410
  %conv19 = zext i8 %13 to i32, !dbg !410
  %and20 = and i32 %conv19, 112, !dbg !410
  %cmp21 = icmp eq i32 %and20, 0, !dbg !410
  br i1 %cmp21, label %if.else, label %if.then, !dbg !411

if.then:                                          ; preds = %land.lhs.true17, %land.lhs.true13, %land.lhs.true, %lor.lhs.false2, %lor.lhs.false, %entry
  br label %if.end45, !dbg !411

if.else:                                          ; preds = %land.lhs.true17, %lor.lhs.false5
  call void @llvm.dbg.declare(metadata i32* %d, metadata !412, metadata !DIExpression()), !dbg !414
  call void @llvm.dbg.declare(metadata i16** %up, metadata !415, metadata !DIExpression()), !dbg !416
  call void @llvm.dbg.declare(metadata i32* %hi, metadata !417, metadata !DIExpression()), !dbg !418
  store i32 0, i32* %hi, align 4, !dbg !418
  call void @llvm.dbg.declare(metadata i32* %lo, metadata !419, metadata !DIExpression()), !dbg !420
  %14 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !421
  %lsu23 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %14, i32 0, i32 3, !dbg !422
  %arraydecay24 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu23, i64 0, i64 0, !dbg !421
  store i16* %arraydecay24, i16** %up, align 8, !dbg !423
  %15 = load i16*, i16** %up, align 8, !dbg !424
  %16 = load i16, i16* %15, align 2, !dbg !425
  %conv25 = zext i16 %16 to i32, !dbg !425
  store i32 %conv25, i32* %lo, align 4, !dbg !426
  %17 = load i32, i32* %lo, align 4, !dbg !427
  %div = udiv i32 %17, 10, !dbg !428
  store i32 %div, i32* %hi, align 4, !dbg !429
  %18 = load i32, i32* %lo, align 4, !dbg !430
  %rem = urem i32 %18, 10, !dbg !431
  store i32 %rem, i32* %lo, align 4, !dbg !432
  %19 = load i16*, i16** %up, align 8, !dbg !433
  %incdec.ptr = getelementptr inbounds i16, i16* %19, i32 1, !dbg !433
  store i16* %incdec.ptr, i16** %up, align 8, !dbg !433
  store i32 3, i32* %d, align 4, !dbg !434
  br label %for.cond, !dbg !436

for.cond:                                         ; preds = %for.inc, %if.else
  %20 = load i32, i32* %d, align 4, !dbg !437
  %21 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !439
  %digits26 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %21, i32 0, i32 0, !dbg !440
  %22 = load i32, i32* %digits26, align 4, !dbg !440
  %cmp27 = icmp slt i32 %20, %22, !dbg !441
  br i1 %cmp27, label %for.body, label %for.end, !dbg !442

for.body:                                         ; preds = %for.cond
  %23 = load i16*, i16** %up, align 8, !dbg !443
  %24 = load i16, i16* %23, align 2, !dbg !444
  %conv29 = zext i16 %24 to i32, !dbg !444
  %25 = load i32, i32* %d, align 4, !dbg !445
  %sub = sub nsw i32 %25, 1, !dbg !446
  %idxprom = sext i32 %sub to i64, !dbg !447
  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom, !dbg !447
  %26 = load i32, i32* %arrayidx, align 4, !dbg !447
  %mul = mul i32 %conv29, %26, !dbg !448
  %27 = load i32, i32* %hi, align 4, !dbg !449
  %add = add i32 %27, %mul, !dbg !449
  store i32 %add, i32* %hi, align 4, !dbg !449
  br label %for.inc, !dbg !450

for.inc:                                          ; preds = %for.body
  %28 = load i16*, i16** %up, align 8, !dbg !451
  %incdec.ptr30 = getelementptr inbounds i16, i16* %28, i32 1, !dbg !451
  store i16* %incdec.ptr30, i16** %up, align 8, !dbg !451
  %29 = load i32, i32* %d, align 4, !dbg !452
  %add31 = add nsw i32 %29, 3, !dbg !452
  store i32 %add31, i32* %d, align 4, !dbg !452
  br label %for.cond, !dbg !453, !llvm.loop !454

for.end:                                          ; preds = %for.cond
  %30 = load i32, i32* %hi, align 4, !dbg !456
  %cmp32 = icmp ugt i32 %30, 429496729, !dbg !458
  br i1 %cmp32, label %if.then40, label %lor.lhs.false34, !dbg !459

lor.lhs.false34:                                  ; preds = %for.end
  %31 = load i32, i32* %hi, align 4, !dbg !460
  %cmp35 = icmp eq i32 %31, 429496729, !dbg !461
  br i1 %cmp35, label %land.lhs.true37, label %if.else41, !dbg !462

land.lhs.true37:                                  ; preds = %lor.lhs.false34
  %32 = load i32, i32* %lo, align 4, !dbg !463
  %cmp38 = icmp ugt i32 %32, 5, !dbg !464
  br i1 %cmp38, label %if.then40, label %if.else41, !dbg !465

if.then40:                                        ; preds = %land.lhs.true37, %for.end
  br label %if.end, !dbg !465

if.else41:                                        ; preds = %land.lhs.true37, %lor.lhs.false34
  %33 = load i32, i32* %hi, align 4, !dbg !466
  %shl = shl i32 %33, 1, !dbg !466
  %34 = load i32, i32* %hi, align 4, !dbg !466
  %shl42 = shl i32 %34, 3, !dbg !466
  %add43 = add i32 %shl, %shl42, !dbg !466
  %35 = load i32, i32* %lo, align 4, !dbg !467
  %add44 = add i32 %add43, %35, !dbg !468
  store i32 %add44, i32* %retval, align 4, !dbg !469
  br label %return, !dbg !469

if.end:                                           ; preds = %if.then40
  br label %if.end45

if.end45:                                         ; preds = %if.end, %if.then
  %36 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !470
  %call = call %struct.decContext* @decContextSetStatus(%struct.decContext* %36, i32 128), !dbg !471
  store i32 0, i32* %retval, align 4, !dbg !472
  br label %return, !dbg !472

return:                                           ; preds = %if.end45, %if.else41
  %37 = load i32, i32* %retval, align 4, !dbg !473
  ret i32 %37, !dbg !473
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @decNumberToString(%struct.decNumber* %dn, i8* %string) #0 !dbg !474 {
entry:
  %dn.addr = alloca %struct.decNumber*, align 8
  %string.addr = alloca i8*, align 8
  store %struct.decNumber* %dn, %struct.decNumber** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dn.addr, metadata !479, metadata !DIExpression()), !dbg !480
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !481, metadata !DIExpression()), !dbg !482
  %0 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !483
  %1 = load i8*, i8** %string.addr, align 8, !dbg !484
  call void @decToString(%struct.decNumber* %0, i8* %1, i8 zeroext 0), !dbg !485
  %2 = load i8*, i8** %string.addr, align 8, !dbg !486
  ret i8* %2, !dbg !487
}

; Function Attrs: noinline nounwind uwtable
define internal void @decToString(%struct.decNumber* %dn, i8* %string, i8 zeroext %eng) #0 !dbg !488 {
entry:
  %dn.addr = alloca %struct.decNumber*, align 8
  %string.addr = alloca i8*, align 8
  %eng.addr = alloca i8, align 1
  %exp = alloca i32, align 4
  %e = alloca i32, align 4
  %pre = alloca i32, align 4
  %cut = alloca i32, align 4
  %c = alloca i8*, align 8
  %up = alloca i16*, align 8
  %u = alloca i32, align 4
  %pow = alloca i32, align 4
  %adj = alloca i32, align 4
  %n = alloca i32, align 4
  %had = alloca i8, align 1
  store %struct.decNumber* %dn, %struct.decNumber** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dn.addr, metadata !491, metadata !DIExpression()), !dbg !492
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !493, metadata !DIExpression()), !dbg !494
  store i8 %eng, i8* %eng.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %eng.addr, metadata !495, metadata !DIExpression()), !dbg !496
  call void @llvm.dbg.declare(metadata i32* %exp, metadata !497, metadata !DIExpression()), !dbg !498
  %0 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !499
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 1, !dbg !500
  %1 = load i32, i32* %exponent, align 4, !dbg !500
  store i32 %1, i32* %exp, align 4, !dbg !498
  call void @llvm.dbg.declare(metadata i32* %e, metadata !501, metadata !DIExpression()), !dbg !502
  call void @llvm.dbg.declare(metadata i32* %pre, metadata !503, metadata !DIExpression()), !dbg !504
  call void @llvm.dbg.declare(metadata i32* %cut, metadata !505, metadata !DIExpression()), !dbg !506
  call void @llvm.dbg.declare(metadata i8** %c, metadata !507, metadata !DIExpression()), !dbg !508
  %2 = load i8*, i8** %string.addr, align 8, !dbg !509
  store i8* %2, i8** %c, align 8, !dbg !508
  call void @llvm.dbg.declare(metadata i16** %up, metadata !510, metadata !DIExpression()), !dbg !511
  %3 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !512
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %3, i32 0, i32 3, !dbg !513
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !512
  %4 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !514
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 0, !dbg !514
  %5 = load i32, i32* %digits, align 4, !dbg !514
  %cmp = icmp sle i32 %5, 49, !dbg !514
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !514

cond.true:                                        ; preds = %entry
  %6 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !514
  %digits1 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %6, i32 0, i32 0, !dbg !514
  %7 = load i32, i32* %digits1, align 4, !dbg !514
  %idxprom = sext i32 %7 to i64, !dbg !514
  %arrayidx = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom, !dbg !514
  %8 = load i8, i8* %arrayidx, align 1, !dbg !514
  %conv = zext i8 %8 to i32, !dbg !514
  br label %cond.end, !dbg !514

cond.false:                                       ; preds = %entry
  %9 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !514
  %digits2 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %9, i32 0, i32 0, !dbg !514
  %10 = load i32, i32* %digits2, align 4, !dbg !514
  %add = add nsw i32 %10, 3, !dbg !514
  %sub = sub nsw i32 %add, 1, !dbg !514
  %div = sdiv i32 %sub, 3, !dbg !514
  br label %cond.end, !dbg !514

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %div, %cond.false ], !dbg !514
  %idx.ext = sext i32 %cond to i64, !dbg !515
  %add.ptr = getelementptr inbounds i16, i16* %arraydecay, i64 %idx.ext, !dbg !515
  %add.ptr3 = getelementptr inbounds i16, i16* %add.ptr, i64 -1, !dbg !516
  store i16* %add.ptr3, i16** %up, align 8, !dbg !511
  call void @llvm.dbg.declare(metadata i32* %u, metadata !517, metadata !DIExpression()), !dbg !518
  call void @llvm.dbg.declare(metadata i32* %pow, metadata !519, metadata !DIExpression()), !dbg !520
  %11 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !521
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %11, i32 0, i32 2, !dbg !521
  %12 = load i8, i8* %bits, align 4, !dbg !521
  %conv4 = zext i8 %12 to i32, !dbg !521
  %and = and i32 %conv4, 128, !dbg !521
  %cmp5 = icmp ne i32 %and, 0, !dbg !521
  br i1 %cmp5, label %if.then, label %if.end, !dbg !523

if.then:                                          ; preds = %cond.end
  %13 = load i8*, i8** %c, align 8, !dbg !524
  store i8 45, i8* %13, align 1, !dbg !526
  %14 = load i8*, i8** %c, align 8, !dbg !527
  %incdec.ptr = getelementptr inbounds i8, i8* %14, i32 1, !dbg !527
  store i8* %incdec.ptr, i8** %c, align 8, !dbg !527
  br label %if.end, !dbg !528

if.end:                                           ; preds = %if.then, %cond.end
  %15 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !529
  %bits7 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %15, i32 0, i32 2, !dbg !531
  %16 = load i8, i8* %bits7, align 4, !dbg !531
  %conv8 = zext i8 %16 to i32, !dbg !529
  %and9 = and i32 %conv8, 112, !dbg !532
  %tobool = icmp ne i32 %and9, 0, !dbg !532
  br i1 %tobool, label %if.then10, label %if.end41, !dbg !533

if.then10:                                        ; preds = %if.end
  %17 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !534
  %bits11 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %17, i32 0, i32 2, !dbg !534
  %18 = load i8, i8* %bits11, align 4, !dbg !534
  %conv12 = zext i8 %18 to i32, !dbg !534
  %and13 = and i32 %conv12, 64, !dbg !534
  %cmp14 = icmp ne i32 %and13, 0, !dbg !534
  br i1 %cmp14, label %if.then16, label %if.end19, !dbg !537

if.then16:                                        ; preds = %if.then10
  %19 = load i8*, i8** %c, align 8, !dbg !538
  %call = call i8* @strcpy(i8* %19, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0)) #6, !dbg !540
  %20 = load i8*, i8** %c, align 8, !dbg !541
  %add.ptr17 = getelementptr inbounds i8, i8* %20, i64 3, !dbg !542
  %call18 = call i8* @strcpy(i8* %add.ptr17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !543
  br label %return, !dbg !544

if.end19:                                         ; preds = %if.then10
  %21 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !545
  %bits20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %21, i32 0, i32 2, !dbg !547
  %22 = load i8, i8* %bits20, align 4, !dbg !547
  %conv21 = zext i8 %22 to i32, !dbg !545
  %and22 = and i32 %conv21, 16, !dbg !548
  %tobool23 = icmp ne i32 %and22, 0, !dbg !548
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !549

if.then24:                                        ; preds = %if.end19
  %23 = load i8*, i8** %c, align 8, !dbg !550
  store i8 115, i8* %23, align 1, !dbg !552
  %24 = load i8*, i8** %c, align 8, !dbg !553
  %incdec.ptr25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !553
  store i8* %incdec.ptr25, i8** %c, align 8, !dbg !553
  br label %if.end26, !dbg !554

if.end26:                                         ; preds = %if.then24, %if.end19
  %25 = load i8*, i8** %c, align 8, !dbg !555
  %call27 = call i8* @strcpy(i8* %25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !556
  %26 = load i8*, i8** %c, align 8, !dbg !557
  %add.ptr28 = getelementptr inbounds i8, i8* %26, i64 3, !dbg !557
  store i8* %add.ptr28, i8** %c, align 8, !dbg !557
  %27 = load i32, i32* %exp, align 4, !dbg !558
  %cmp29 = icmp ne i32 %27, 0, !dbg !560
  br i1 %cmp29, label %if.then39, label %lor.lhs.false, !dbg !561

lor.lhs.false:                                    ; preds = %if.end26
  %28 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !562
  %lsu31 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %28, i32 0, i32 3, !dbg !563
  %arraydecay32 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu31, i64 0, i64 0, !dbg !564
  %29 = load i16, i16* %arraydecay32, align 2, !dbg !564
  %conv33 = zext i16 %29 to i32, !dbg !564
  %cmp34 = icmp eq i32 %conv33, 0, !dbg !565
  br i1 %cmp34, label %land.lhs.true, label %if.end40, !dbg !566

land.lhs.true:                                    ; preds = %lor.lhs.false
  %30 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !567
  %digits36 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %30, i32 0, i32 0, !dbg !568
  %31 = load i32, i32* %digits36, align 4, !dbg !568
  %cmp37 = icmp eq i32 %31, 1, !dbg !569
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !570

if.then39:                                        ; preds = %land.lhs.true, %if.end26
  br label %return, !dbg !571

if.end40:                                         ; preds = %land.lhs.true, %lor.lhs.false
  br label %if.end41, !dbg !572

if.end41:                                         ; preds = %if.end40, %if.end
  %32 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !573
  %digits42 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %32, i32 0, i32 0, !dbg !573
  %33 = load i32, i32* %digits42, align 4, !dbg !573
  %34 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !573
  %digits43 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %34, i32 0, i32 0, !dbg !573
  %35 = load i32, i32* %digits43, align 4, !dbg !573
  %cmp44 = icmp sle i32 %35, 49, !dbg !573
  br i1 %cmp44, label %cond.true46, label %cond.false51, !dbg !573

cond.true46:                                      ; preds = %if.end41
  %36 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !573
  %digits47 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %36, i32 0, i32 0, !dbg !573
  %37 = load i32, i32* %digits47, align 4, !dbg !573
  %idxprom48 = sext i32 %37 to i64, !dbg !573
  %arrayidx49 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom48, !dbg !573
  %38 = load i8, i8* %arrayidx49, align 1, !dbg !573
  %conv50 = zext i8 %38 to i32, !dbg !573
  br label %cond.end56, !dbg !573

cond.false51:                                     ; preds = %if.end41
  %39 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !573
  %digits52 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %39, i32 0, i32 0, !dbg !573
  %40 = load i32, i32* %digits52, align 4, !dbg !573
  %add53 = add nsw i32 %40, 3, !dbg !573
  %sub54 = sub nsw i32 %add53, 1, !dbg !573
  %div55 = sdiv i32 %sub54, 3, !dbg !573
  br label %cond.end56, !dbg !573

cond.end56:                                       ; preds = %cond.false51, %cond.true46
  %cond57 = phi i32 [ %conv50, %cond.true46 ], [ %div55, %cond.false51 ], !dbg !573
  %sub58 = sub nsw i32 %cond57, 1, !dbg !573
  %mul = mul nsw i32 %sub58, 3, !dbg !573
  %sub59 = sub nsw i32 %33, %mul, !dbg !573
  store i32 %sub59, i32* %cut, align 4, !dbg !574
  %41 = load i32, i32* %cut, align 4, !dbg !575
  %dec = add nsw i32 %41, -1, !dbg !575
  store i32 %dec, i32* %cut, align 4, !dbg !575
  %42 = load i32, i32* %exp, align 4, !dbg !576
  %cmp60 = icmp eq i32 %42, 0, !dbg !578
  br i1 %cmp60, label %if.then62, label %if.end120, !dbg !579

if.then62:                                        ; preds = %cond.end56
  br label %for.cond, !dbg !580

for.cond:                                         ; preds = %for.inc117, %if.then62
  %43 = load i16*, i16** %up, align 8, !dbg !582
  %44 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !585
  %lsu63 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %44, i32 0, i32 3, !dbg !586
  %arraydecay64 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu63, i64 0, i64 0, !dbg !585
  %cmp65 = icmp uge i16* %43, %arraydecay64, !dbg !587
  br i1 %cmp65, label %for.body, label %for.end119, !dbg !588

for.body:                                         ; preds = %for.cond
  %45 = load i16*, i16** %up, align 8, !dbg !589
  %46 = load i16, i16* %45, align 2, !dbg !591
  %conv67 = zext i16 %46 to i32, !dbg !591
  store i32 %conv67, i32* %u, align 4, !dbg !592
  br label %for.cond68, !dbg !593

for.cond68:                                       ; preds = %for.inc, %for.body
  %47 = load i32, i32* %cut, align 4, !dbg !594
  %cmp69 = icmp sge i32 %47, 0, !dbg !597
  br i1 %cmp69, label %for.body71, label %for.end, !dbg !598

for.body71:                                       ; preds = %for.cond68
  %48 = load i8*, i8** %c, align 8, !dbg !599
  store i8 48, i8* %48, align 1, !dbg !599
  %49 = load i32, i32* %cut, align 4, !dbg !599
  %idxprom72 = sext i32 %49 to i64, !dbg !599
  %arrayidx73 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom72, !dbg !599
  %50 = load i32, i32* %arrayidx73, align 4, !dbg !599
  %mul74 = mul i32 %50, 2, !dbg !599
  store i32 %mul74, i32* %pow, align 4, !dbg !599
  %51 = load i32, i32* %u, align 4, !dbg !601
  %52 = load i32, i32* %pow, align 4, !dbg !601
  %cmp75 = icmp ugt i32 %51, %52, !dbg !601
  br i1 %cmp75, label %if.then77, label %if.end97, !dbg !599

if.then77:                                        ; preds = %for.body71
  %53 = load i32, i32* %pow, align 4, !dbg !603
  %mul78 = mul i32 %53, 4, !dbg !603
  store i32 %mul78, i32* %pow, align 4, !dbg !603
  %54 = load i32, i32* %u, align 4, !dbg !605
  %55 = load i32, i32* %pow, align 4, !dbg !605
  %cmp79 = icmp uge i32 %54, %55, !dbg !605
  br i1 %cmp79, label %if.then81, label %if.end86, !dbg !603

if.then81:                                        ; preds = %if.then77
  %56 = load i32, i32* %pow, align 4, !dbg !607
  %57 = load i32, i32* %u, align 4, !dbg !607
  %sub82 = sub i32 %57, %56, !dbg !607
  store i32 %sub82, i32* %u, align 4, !dbg !607
  %58 = load i8*, i8** %c, align 8, !dbg !607
  %59 = load i8, i8* %58, align 1, !dbg !607
  %conv83 = sext i8 %59 to i32, !dbg !607
  %add84 = add nsw i32 %conv83, 8, !dbg !607
  %conv85 = trunc i32 %add84 to i8, !dbg !607
  store i8 %conv85, i8* %58, align 1, !dbg !607
  br label %if.end86, !dbg !607

if.end86:                                         ; preds = %if.then81, %if.then77
  %60 = load i32, i32* %pow, align 4, !dbg !603
  %div87 = udiv i32 %60, 2, !dbg !603
  store i32 %div87, i32* %pow, align 4, !dbg !603
  %61 = load i32, i32* %u, align 4, !dbg !609
  %62 = load i32, i32* %pow, align 4, !dbg !609
  %cmp88 = icmp uge i32 %61, %62, !dbg !609
  br i1 %cmp88, label %if.then90, label %if.end95, !dbg !603

if.then90:                                        ; preds = %if.end86
  %63 = load i32, i32* %pow, align 4, !dbg !611
  %64 = load i32, i32* %u, align 4, !dbg !611
  %sub91 = sub i32 %64, %63, !dbg !611
  store i32 %sub91, i32* %u, align 4, !dbg !611
  %65 = load i8*, i8** %c, align 8, !dbg !611
  %66 = load i8, i8* %65, align 1, !dbg !611
  %conv92 = sext i8 %66 to i32, !dbg !611
  %add93 = add nsw i32 %conv92, 4, !dbg !611
  %conv94 = trunc i32 %add93 to i8, !dbg !611
  store i8 %conv94, i8* %65, align 1, !dbg !611
  br label %if.end95, !dbg !611

if.end95:                                         ; preds = %if.then90, %if.end86
  %67 = load i32, i32* %pow, align 4, !dbg !603
  %div96 = udiv i32 %67, 2, !dbg !603
  store i32 %div96, i32* %pow, align 4, !dbg !603
  br label %if.end97, !dbg !603

if.end97:                                         ; preds = %if.end95, %for.body71
  %68 = load i32, i32* %u, align 4, !dbg !613
  %69 = load i32, i32* %pow, align 4, !dbg !613
  %cmp98 = icmp uge i32 %68, %69, !dbg !613
  br i1 %cmp98, label %if.then100, label %if.end105, !dbg !599

if.then100:                                       ; preds = %if.end97
  %70 = load i32, i32* %pow, align 4, !dbg !615
  %71 = load i32, i32* %u, align 4, !dbg !615
  %sub101 = sub i32 %71, %70, !dbg !615
  store i32 %sub101, i32* %u, align 4, !dbg !615
  %72 = load i8*, i8** %c, align 8, !dbg !615
  %73 = load i8, i8* %72, align 1, !dbg !615
  %conv102 = sext i8 %73 to i32, !dbg !615
  %add103 = add nsw i32 %conv102, 2, !dbg !615
  %conv104 = trunc i32 %add103 to i8, !dbg !615
  store i8 %conv104, i8* %72, align 1, !dbg !615
  br label %if.end105, !dbg !615

if.end105:                                        ; preds = %if.then100, %if.end97
  %74 = load i32, i32* %pow, align 4, !dbg !599
  %div106 = udiv i32 %74, 2, !dbg !599
  store i32 %div106, i32* %pow, align 4, !dbg !599
  %75 = load i32, i32* %u, align 4, !dbg !617
  %76 = load i32, i32* %pow, align 4, !dbg !617
  %cmp107 = icmp uge i32 %75, %76, !dbg !617
  br i1 %cmp107, label %if.then109, label %if.end114, !dbg !599

if.then109:                                       ; preds = %if.end105
  %77 = load i32, i32* %pow, align 4, !dbg !619
  %78 = load i32, i32* %u, align 4, !dbg !619
  %sub110 = sub i32 %78, %77, !dbg !619
  store i32 %sub110, i32* %u, align 4, !dbg !619
  %79 = load i8*, i8** %c, align 8, !dbg !619
  %80 = load i8, i8* %79, align 1, !dbg !619
  %conv111 = sext i8 %80 to i32, !dbg !619
  %add112 = add nsw i32 %conv111, 1, !dbg !619
  %conv113 = trunc i32 %add112 to i8, !dbg !619
  store i8 %conv113, i8* %79, align 1, !dbg !619
  br label %if.end114, !dbg !619

if.end114:                                        ; preds = %if.then109, %if.end105
  br label %for.inc, !dbg !599

for.inc:                                          ; preds = %if.end114
  %81 = load i8*, i8** %c, align 8, !dbg !621
  %incdec.ptr115 = getelementptr inbounds i8, i8* %81, i32 1, !dbg !621
  store i8* %incdec.ptr115, i8** %c, align 8, !dbg !621
  %82 = load i32, i32* %cut, align 4, !dbg !622
  %dec116 = add nsw i32 %82, -1, !dbg !622
  store i32 %dec116, i32* %cut, align 4, !dbg !622
  br label %for.cond68, !dbg !623, !llvm.loop !624

for.end:                                          ; preds = %for.cond68
  store i32 2, i32* %cut, align 4, !dbg !626
  br label %for.inc117, !dbg !627

for.inc117:                                       ; preds = %for.end
  %83 = load i16*, i16** %up, align 8, !dbg !628
  %incdec.ptr118 = getelementptr inbounds i16, i16* %83, i32 -1, !dbg !628
  store i16* %incdec.ptr118, i16** %up, align 8, !dbg !628
  br label %for.cond, !dbg !629, !llvm.loop !630

for.end119:                                       ; preds = %for.cond
  %84 = load i8*, i8** %c, align 8, !dbg !632
  store i8 0, i8* %84, align 1, !dbg !633
  br label %return, !dbg !634

if.end120:                                        ; preds = %cond.end56
  %85 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !635
  %digits121 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %85, i32 0, i32 0, !dbg !636
  %86 = load i32, i32* %digits121, align 4, !dbg !636
  %87 = load i32, i32* %exp, align 4, !dbg !637
  %add122 = add nsw i32 %86, %87, !dbg !638
  store i32 %add122, i32* %pre, align 4, !dbg !639
  store i32 0, i32* %e, align 4, !dbg !640
  %88 = load i32, i32* %exp, align 4, !dbg !641
  %cmp123 = icmp sgt i32 %88, 0, !dbg !643
  br i1 %cmp123, label %if.then128, label %lor.lhs.false125, !dbg !644

lor.lhs.false125:                                 ; preds = %if.end120
  %89 = load i32, i32* %pre, align 4, !dbg !645
  %cmp126 = icmp slt i32 %89, -5, !dbg !646
  br i1 %cmp126, label %if.then128, label %if.end177, !dbg !647

if.then128:                                       ; preds = %lor.lhs.false125, %if.end120
  %90 = load i32, i32* %exp, align 4, !dbg !648
  %91 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !650
  %digits129 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %91, i32 0, i32 0, !dbg !651
  %92 = load i32, i32* %digits129, align 4, !dbg !651
  %add130 = add nsw i32 %90, %92, !dbg !652
  %sub131 = sub nsw i32 %add130, 1, !dbg !653
  store i32 %sub131, i32* %e, align 4, !dbg !654
  store i32 1, i32* %pre, align 4, !dbg !655
  %93 = load i8, i8* %eng.addr, align 1, !dbg !656
  %conv132 = zext i8 %93 to i32, !dbg !656
  %tobool133 = icmp ne i32 %conv132, 0, !dbg !656
  br i1 %tobool133, label %land.lhs.true134, label %if.end176, !dbg !658

land.lhs.true134:                                 ; preds = %if.then128
  %94 = load i32, i32* %e, align 4, !dbg !659
  %cmp135 = icmp ne i32 %94, 0, !dbg !660
  br i1 %cmp135, label %if.then137, label %if.end176, !dbg !661

if.then137:                                       ; preds = %land.lhs.true134
  call void @llvm.dbg.declare(metadata i32* %adj, metadata !662, metadata !DIExpression()), !dbg !664
  %95 = load i32, i32* %e, align 4, !dbg !665
  %cmp138 = icmp slt i32 %95, 0, !dbg !667
  br i1 %cmp138, label %if.then140, label %if.else, !dbg !668

if.then140:                                       ; preds = %if.then137
  %96 = load i32, i32* %e, align 4, !dbg !669
  %sub141 = sub nsw i32 0, %96, !dbg !671
  %rem = srem i32 %sub141, 3, !dbg !672
  store i32 %rem, i32* %adj, align 4, !dbg !673
  %97 = load i32, i32* %adj, align 4, !dbg !674
  %cmp142 = icmp ne i32 %97, 0, !dbg !676
  br i1 %cmp142, label %if.then144, label %if.end146, !dbg !677

if.then144:                                       ; preds = %if.then140
  %98 = load i32, i32* %adj, align 4, !dbg !678
  %sub145 = sub nsw i32 3, %98, !dbg !679
  store i32 %sub145, i32* %adj, align 4, !dbg !680
  br label %if.end146, !dbg !681

if.end146:                                        ; preds = %if.then144, %if.then140
  br label %if.end148, !dbg !682

if.else:                                          ; preds = %if.then137
  %99 = load i32, i32* %e, align 4, !dbg !683
  %rem147 = srem i32 %99, 3, !dbg !685
  store i32 %rem147, i32* %adj, align 4, !dbg !686
  br label %if.end148

if.end148:                                        ; preds = %if.else, %if.end146
  %100 = load i32, i32* %e, align 4, !dbg !687
  %101 = load i32, i32* %adj, align 4, !dbg !688
  %sub149 = sub nsw i32 %100, %101, !dbg !689
  store i32 %sub149, i32* %e, align 4, !dbg !690
  %102 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !691
  %lsu150 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %102, i32 0, i32 3, !dbg !691
  %arraydecay151 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu150, i64 0, i64 0, !dbg !691
  %103 = load i16, i16* %arraydecay151, align 2, !dbg !691
  %conv152 = zext i16 %103 to i32, !dbg !691
  %cmp153 = icmp eq i32 %conv152, 0, !dbg !691
  br i1 %cmp153, label %land.lhs.true155, label %if.then165, !dbg !691

land.lhs.true155:                                 ; preds = %if.end148
  %104 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !691
  %digits156 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %104, i32 0, i32 0, !dbg !691
  %105 = load i32, i32* %digits156, align 4, !dbg !691
  %cmp157 = icmp eq i32 %105, 1, !dbg !691
  br i1 %cmp157, label %land.lhs.true159, label %if.then165, !dbg !691

land.lhs.true159:                                 ; preds = %land.lhs.true155
  %106 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !691
  %bits160 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %106, i32 0, i32 2, !dbg !691
  %107 = load i8, i8* %bits160, align 4, !dbg !691
  %conv161 = zext i8 %107 to i32, !dbg !691
  %and162 = and i32 %conv161, 112, !dbg !691
  %cmp163 = icmp eq i32 %and162, 0, !dbg !691
  br i1 %cmp163, label %if.else167, label %if.then165, !dbg !693

if.then165:                                       ; preds = %land.lhs.true159, %land.lhs.true155, %if.end148
  %108 = load i32, i32* %adj, align 4, !dbg !694
  %109 = load i32, i32* %pre, align 4, !dbg !695
  %add166 = add nsw i32 %109, %108, !dbg !695
  store i32 %add166, i32* %pre, align 4, !dbg !695
  br label %if.end175, !dbg !696

if.else167:                                       ; preds = %land.lhs.true159
  %110 = load i32, i32* %adj, align 4, !dbg !697
  %cmp168 = icmp ne i32 %110, 0, !dbg !700
  br i1 %cmp168, label %if.then170, label %if.end174, !dbg !701

if.then170:                                       ; preds = %if.else167
  %111 = load i32, i32* %e, align 4, !dbg !702
  %add171 = add nsw i32 %111, 3, !dbg !704
  store i32 %add171, i32* %e, align 4, !dbg !705
  %112 = load i32, i32* %adj, align 4, !dbg !706
  %sub172 = sub nsw i32 2, %112, !dbg !707
  %sub173 = sub nsw i32 0, %sub172, !dbg !708
  store i32 %sub173, i32* %pre, align 4, !dbg !709
  br label %if.end174, !dbg !710

if.end174:                                        ; preds = %if.then170, %if.else167
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.then165
  br label %if.end176, !dbg !711

if.end176:                                        ; preds = %if.end175, %land.lhs.true134, %if.then128
  br label %if.end177, !dbg !712

if.end177:                                        ; preds = %if.end176, %lor.lhs.false125
  %113 = load i16*, i16** %up, align 8, !dbg !713
  %114 = load i16, i16* %113, align 2, !dbg !714
  %conv178 = zext i16 %114 to i32, !dbg !714
  store i32 %conv178, i32* %u, align 4, !dbg !715
  %115 = load i32, i32* %pre, align 4, !dbg !716
  %cmp179 = icmp sgt i32 %115, 0, !dbg !718
  br i1 %cmp179, label %if.then181, label %if.else321, !dbg !719

if.then181:                                       ; preds = %if.end177
  call void @llvm.dbg.declare(metadata i32* %n, metadata !720, metadata !DIExpression()), !dbg !722
  %116 = load i32, i32* %pre, align 4, !dbg !723
  store i32 %116, i32* %n, align 4, !dbg !722
  br label %for.cond182, !dbg !724

for.cond182:                                      ; preds = %for.inc241, %if.then181
  %117 = load i32, i32* %pre, align 4, !dbg !725
  %cmp183 = icmp sgt i32 %117, 0, !dbg !728
  br i1 %cmp183, label %for.body185, label %for.end245, !dbg !729

for.body185:                                      ; preds = %for.cond182
  %118 = load i32, i32* %cut, align 4, !dbg !730
  %cmp186 = icmp slt i32 %118, 0, !dbg !733
  br i1 %cmp186, label %if.then188, label %if.end197, !dbg !734

if.then188:                                       ; preds = %for.body185
  %119 = load i16*, i16** %up, align 8, !dbg !735
  %120 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !738
  %lsu189 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %120, i32 0, i32 3, !dbg !739
  %arraydecay190 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu189, i64 0, i64 0, !dbg !738
  %cmp191 = icmp eq i16* %119, %arraydecay190, !dbg !740
  br i1 %cmp191, label %if.then193, label %if.end194, !dbg !741

if.then193:                                       ; preds = %if.then188
  br label %for.end245, !dbg !742

if.end194:                                        ; preds = %if.then188
  %121 = load i16*, i16** %up, align 8, !dbg !743
  %incdec.ptr195 = getelementptr inbounds i16, i16* %121, i32 -1, !dbg !743
  store i16* %incdec.ptr195, i16** %up, align 8, !dbg !743
  store i32 2, i32* %cut, align 4, !dbg !744
  %122 = load i16*, i16** %up, align 8, !dbg !745
  %123 = load i16, i16* %122, align 2, !dbg !746
  %conv196 = zext i16 %123 to i32, !dbg !746
  store i32 %conv196, i32* %u, align 4, !dbg !747
  br label %if.end197, !dbg !748

if.end197:                                        ; preds = %if.end194, %for.body185
  %124 = load i8*, i8** %c, align 8, !dbg !749
  store i8 48, i8* %124, align 1, !dbg !749
  %125 = load i32, i32* %cut, align 4, !dbg !749
  %idxprom198 = sext i32 %125 to i64, !dbg !749
  %arrayidx199 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom198, !dbg !749
  %126 = load i32, i32* %arrayidx199, align 4, !dbg !749
  %mul200 = mul i32 %126, 2, !dbg !749
  store i32 %mul200, i32* %pow, align 4, !dbg !749
  %127 = load i32, i32* %u, align 4, !dbg !751
  %128 = load i32, i32* %pow, align 4, !dbg !751
  %cmp201 = icmp ugt i32 %127, %128, !dbg !751
  br i1 %cmp201, label %if.then203, label %if.end223, !dbg !749

if.then203:                                       ; preds = %if.end197
  %129 = load i32, i32* %pow, align 4, !dbg !753
  %mul204 = mul i32 %129, 4, !dbg !753
  store i32 %mul204, i32* %pow, align 4, !dbg !753
  %130 = load i32, i32* %u, align 4, !dbg !755
  %131 = load i32, i32* %pow, align 4, !dbg !755
  %cmp205 = icmp uge i32 %130, %131, !dbg !755
  br i1 %cmp205, label %if.then207, label %if.end212, !dbg !753

if.then207:                                       ; preds = %if.then203
  %132 = load i32, i32* %pow, align 4, !dbg !757
  %133 = load i32, i32* %u, align 4, !dbg !757
  %sub208 = sub i32 %133, %132, !dbg !757
  store i32 %sub208, i32* %u, align 4, !dbg !757
  %134 = load i8*, i8** %c, align 8, !dbg !757
  %135 = load i8, i8* %134, align 1, !dbg !757
  %conv209 = sext i8 %135 to i32, !dbg !757
  %add210 = add nsw i32 %conv209, 8, !dbg !757
  %conv211 = trunc i32 %add210 to i8, !dbg !757
  store i8 %conv211, i8* %134, align 1, !dbg !757
  br label %if.end212, !dbg !757

if.end212:                                        ; preds = %if.then207, %if.then203
  %136 = load i32, i32* %pow, align 4, !dbg !753
  %div213 = udiv i32 %136, 2, !dbg !753
  store i32 %div213, i32* %pow, align 4, !dbg !753
  %137 = load i32, i32* %u, align 4, !dbg !759
  %138 = load i32, i32* %pow, align 4, !dbg !759
  %cmp214 = icmp uge i32 %137, %138, !dbg !759
  br i1 %cmp214, label %if.then216, label %if.end221, !dbg !753

if.then216:                                       ; preds = %if.end212
  %139 = load i32, i32* %pow, align 4, !dbg !761
  %140 = load i32, i32* %u, align 4, !dbg !761
  %sub217 = sub i32 %140, %139, !dbg !761
  store i32 %sub217, i32* %u, align 4, !dbg !761
  %141 = load i8*, i8** %c, align 8, !dbg !761
  %142 = load i8, i8* %141, align 1, !dbg !761
  %conv218 = sext i8 %142 to i32, !dbg !761
  %add219 = add nsw i32 %conv218, 4, !dbg !761
  %conv220 = trunc i32 %add219 to i8, !dbg !761
  store i8 %conv220, i8* %141, align 1, !dbg !761
  br label %if.end221, !dbg !761

if.end221:                                        ; preds = %if.then216, %if.end212
  %143 = load i32, i32* %pow, align 4, !dbg !753
  %div222 = udiv i32 %143, 2, !dbg !753
  store i32 %div222, i32* %pow, align 4, !dbg !753
  br label %if.end223, !dbg !753

if.end223:                                        ; preds = %if.end221, %if.end197
  %144 = load i32, i32* %u, align 4, !dbg !763
  %145 = load i32, i32* %pow, align 4, !dbg !763
  %cmp224 = icmp uge i32 %144, %145, !dbg !763
  br i1 %cmp224, label %if.then226, label %if.end231, !dbg !749

if.then226:                                       ; preds = %if.end223
  %146 = load i32, i32* %pow, align 4, !dbg !765
  %147 = load i32, i32* %u, align 4, !dbg !765
  %sub227 = sub i32 %147, %146, !dbg !765
  store i32 %sub227, i32* %u, align 4, !dbg !765
  %148 = load i8*, i8** %c, align 8, !dbg !765
  %149 = load i8, i8* %148, align 1, !dbg !765
  %conv228 = sext i8 %149 to i32, !dbg !765
  %add229 = add nsw i32 %conv228, 2, !dbg !765
  %conv230 = trunc i32 %add229 to i8, !dbg !765
  store i8 %conv230, i8* %148, align 1, !dbg !765
  br label %if.end231, !dbg !765

if.end231:                                        ; preds = %if.then226, %if.end223
  %150 = load i32, i32* %pow, align 4, !dbg !749
  %div232 = udiv i32 %150, 2, !dbg !749
  store i32 %div232, i32* %pow, align 4, !dbg !749
  %151 = load i32, i32* %u, align 4, !dbg !767
  %152 = load i32, i32* %pow, align 4, !dbg !767
  %cmp233 = icmp uge i32 %151, %152, !dbg !767
  br i1 %cmp233, label %if.then235, label %if.end240, !dbg !749

if.then235:                                       ; preds = %if.end231
  %153 = load i32, i32* %pow, align 4, !dbg !769
  %154 = load i32, i32* %u, align 4, !dbg !769
  %sub236 = sub i32 %154, %153, !dbg !769
  store i32 %sub236, i32* %u, align 4, !dbg !769
  %155 = load i8*, i8** %c, align 8, !dbg !769
  %156 = load i8, i8* %155, align 1, !dbg !769
  %conv237 = sext i8 %156 to i32, !dbg !769
  %add238 = add nsw i32 %conv237, 1, !dbg !769
  %conv239 = trunc i32 %add238 to i8, !dbg !769
  store i8 %conv239, i8* %155, align 1, !dbg !769
  br label %if.end240, !dbg !769

if.end240:                                        ; preds = %if.then235, %if.end231
  br label %for.inc241, !dbg !771

for.inc241:                                       ; preds = %if.end240
  %157 = load i32, i32* %pre, align 4, !dbg !772
  %dec242 = add nsw i32 %157, -1, !dbg !772
  store i32 %dec242, i32* %pre, align 4, !dbg !772
  %158 = load i8*, i8** %c, align 8, !dbg !773
  %incdec.ptr243 = getelementptr inbounds i8, i8* %158, i32 1, !dbg !773
  store i8* %incdec.ptr243, i8** %c, align 8, !dbg !773
  %159 = load i32, i32* %cut, align 4, !dbg !774
  %dec244 = add nsw i32 %159, -1, !dbg !774
  store i32 %dec244, i32* %cut, align 4, !dbg !774
  br label %for.cond182, !dbg !775, !llvm.loop !776

for.end245:                                       ; preds = %if.then193, %for.cond182
  %160 = load i32, i32* %n, align 4, !dbg !778
  %161 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !780
  %digits246 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %161, i32 0, i32 0, !dbg !781
  %162 = load i32, i32* %digits246, align 4, !dbg !781
  %cmp247 = icmp slt i32 %160, %162, !dbg !782
  br i1 %cmp247, label %if.then249, label %if.else311, !dbg !783

if.then249:                                       ; preds = %for.end245
  %163 = load i8*, i8** %c, align 8, !dbg !784
  store i8 46, i8* %163, align 1, !dbg !786
  %164 = load i8*, i8** %c, align 8, !dbg !787
  %incdec.ptr250 = getelementptr inbounds i8, i8* %164, i32 1, !dbg !787
  store i8* %incdec.ptr250, i8** %c, align 8, !dbg !787
  br label %for.cond251, !dbg !788

for.cond251:                                      ; preds = %for.inc307, %if.then249
  %165 = load i32, i32* %cut, align 4, !dbg !789
  %cmp252 = icmp slt i32 %165, 0, !dbg !794
  br i1 %cmp252, label %if.then254, label %if.end263, !dbg !795

if.then254:                                       ; preds = %for.cond251
  %166 = load i16*, i16** %up, align 8, !dbg !796
  %167 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !799
  %lsu255 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %167, i32 0, i32 3, !dbg !800
  %arraydecay256 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu255, i64 0, i64 0, !dbg !799
  %cmp257 = icmp eq i16* %166, %arraydecay256, !dbg !801
  br i1 %cmp257, label %if.then259, label %if.end260, !dbg !802

if.then259:                                       ; preds = %if.then254
  br label %for.end310, !dbg !803

if.end260:                                        ; preds = %if.then254
  %168 = load i16*, i16** %up, align 8, !dbg !804
  %incdec.ptr261 = getelementptr inbounds i16, i16* %168, i32 -1, !dbg !804
  store i16* %incdec.ptr261, i16** %up, align 8, !dbg !804
  store i32 2, i32* %cut, align 4, !dbg !805
  %169 = load i16*, i16** %up, align 8, !dbg !806
  %170 = load i16, i16* %169, align 2, !dbg !807
  %conv262 = zext i16 %170 to i32, !dbg !807
  store i32 %conv262, i32* %u, align 4, !dbg !808
  br label %if.end263, !dbg !809

if.end263:                                        ; preds = %if.end260, %for.cond251
  %171 = load i8*, i8** %c, align 8, !dbg !810
  store i8 48, i8* %171, align 1, !dbg !810
  %172 = load i32, i32* %cut, align 4, !dbg !810
  %idxprom264 = sext i32 %172 to i64, !dbg !810
  %arrayidx265 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom264, !dbg !810
  %173 = load i32, i32* %arrayidx265, align 4, !dbg !810
  %mul266 = mul i32 %173, 2, !dbg !810
  store i32 %mul266, i32* %pow, align 4, !dbg !810
  %174 = load i32, i32* %u, align 4, !dbg !812
  %175 = load i32, i32* %pow, align 4, !dbg !812
  %cmp267 = icmp ugt i32 %174, %175, !dbg !812
  br i1 %cmp267, label %if.then269, label %if.end289, !dbg !810

if.then269:                                       ; preds = %if.end263
  %176 = load i32, i32* %pow, align 4, !dbg !814
  %mul270 = mul i32 %176, 4, !dbg !814
  store i32 %mul270, i32* %pow, align 4, !dbg !814
  %177 = load i32, i32* %u, align 4, !dbg !816
  %178 = load i32, i32* %pow, align 4, !dbg !816
  %cmp271 = icmp uge i32 %177, %178, !dbg !816
  br i1 %cmp271, label %if.then273, label %if.end278, !dbg !814

if.then273:                                       ; preds = %if.then269
  %179 = load i32, i32* %pow, align 4, !dbg !818
  %180 = load i32, i32* %u, align 4, !dbg !818
  %sub274 = sub i32 %180, %179, !dbg !818
  store i32 %sub274, i32* %u, align 4, !dbg !818
  %181 = load i8*, i8** %c, align 8, !dbg !818
  %182 = load i8, i8* %181, align 1, !dbg !818
  %conv275 = sext i8 %182 to i32, !dbg !818
  %add276 = add nsw i32 %conv275, 8, !dbg !818
  %conv277 = trunc i32 %add276 to i8, !dbg !818
  store i8 %conv277, i8* %181, align 1, !dbg !818
  br label %if.end278, !dbg !818

if.end278:                                        ; preds = %if.then273, %if.then269
  %183 = load i32, i32* %pow, align 4, !dbg !814
  %div279 = udiv i32 %183, 2, !dbg !814
  store i32 %div279, i32* %pow, align 4, !dbg !814
  %184 = load i32, i32* %u, align 4, !dbg !820
  %185 = load i32, i32* %pow, align 4, !dbg !820
  %cmp280 = icmp uge i32 %184, %185, !dbg !820
  br i1 %cmp280, label %if.then282, label %if.end287, !dbg !814

if.then282:                                       ; preds = %if.end278
  %186 = load i32, i32* %pow, align 4, !dbg !822
  %187 = load i32, i32* %u, align 4, !dbg !822
  %sub283 = sub i32 %187, %186, !dbg !822
  store i32 %sub283, i32* %u, align 4, !dbg !822
  %188 = load i8*, i8** %c, align 8, !dbg !822
  %189 = load i8, i8* %188, align 1, !dbg !822
  %conv284 = sext i8 %189 to i32, !dbg !822
  %add285 = add nsw i32 %conv284, 4, !dbg !822
  %conv286 = trunc i32 %add285 to i8, !dbg !822
  store i8 %conv286, i8* %188, align 1, !dbg !822
  br label %if.end287, !dbg !822

if.end287:                                        ; preds = %if.then282, %if.end278
  %190 = load i32, i32* %pow, align 4, !dbg !814
  %div288 = udiv i32 %190, 2, !dbg !814
  store i32 %div288, i32* %pow, align 4, !dbg !814
  br label %if.end289, !dbg !814

if.end289:                                        ; preds = %if.end287, %if.end263
  %191 = load i32, i32* %u, align 4, !dbg !824
  %192 = load i32, i32* %pow, align 4, !dbg !824
  %cmp290 = icmp uge i32 %191, %192, !dbg !824
  br i1 %cmp290, label %if.then292, label %if.end297, !dbg !810

if.then292:                                       ; preds = %if.end289
  %193 = load i32, i32* %pow, align 4, !dbg !826
  %194 = load i32, i32* %u, align 4, !dbg !826
  %sub293 = sub i32 %194, %193, !dbg !826
  store i32 %sub293, i32* %u, align 4, !dbg !826
  %195 = load i8*, i8** %c, align 8, !dbg !826
  %196 = load i8, i8* %195, align 1, !dbg !826
  %conv294 = sext i8 %196 to i32, !dbg !826
  %add295 = add nsw i32 %conv294, 2, !dbg !826
  %conv296 = trunc i32 %add295 to i8, !dbg !826
  store i8 %conv296, i8* %195, align 1, !dbg !826
  br label %if.end297, !dbg !826

if.end297:                                        ; preds = %if.then292, %if.end289
  %197 = load i32, i32* %pow, align 4, !dbg !810
  %div298 = udiv i32 %197, 2, !dbg !810
  store i32 %div298, i32* %pow, align 4, !dbg !810
  %198 = load i32, i32* %u, align 4, !dbg !828
  %199 = load i32, i32* %pow, align 4, !dbg !828
  %cmp299 = icmp uge i32 %198, %199, !dbg !828
  br i1 %cmp299, label %if.then301, label %if.end306, !dbg !810

if.then301:                                       ; preds = %if.end297
  %200 = load i32, i32* %pow, align 4, !dbg !830
  %201 = load i32, i32* %u, align 4, !dbg !830
  %sub302 = sub i32 %201, %200, !dbg !830
  store i32 %sub302, i32* %u, align 4, !dbg !830
  %202 = load i8*, i8** %c, align 8, !dbg !830
  %203 = load i8, i8* %202, align 1, !dbg !830
  %conv303 = sext i8 %203 to i32, !dbg !830
  %add304 = add nsw i32 %conv303, 1, !dbg !830
  %conv305 = trunc i32 %add304 to i8, !dbg !830
  store i8 %conv305, i8* %202, align 1, !dbg !830
  br label %if.end306, !dbg !830

if.end306:                                        ; preds = %if.then301, %if.end297
  br label %for.inc307, !dbg !832

for.inc307:                                       ; preds = %if.end306
  %204 = load i8*, i8** %c, align 8, !dbg !833
  %incdec.ptr308 = getelementptr inbounds i8, i8* %204, i32 1, !dbg !833
  store i8* %incdec.ptr308, i8** %c, align 8, !dbg !833
  %205 = load i32, i32* %cut, align 4, !dbg !834
  %dec309 = add nsw i32 %205, -1, !dbg !834
  store i32 %dec309, i32* %cut, align 4, !dbg !834
  br label %for.cond251, !dbg !835, !llvm.loop !836

for.end310:                                       ; preds = %if.then259
  br label %if.end320, !dbg !839

if.else311:                                       ; preds = %for.end245
  br label %for.cond312, !dbg !840

for.cond312:                                      ; preds = %for.inc316, %if.else311
  %206 = load i32, i32* %pre, align 4, !dbg !841
  %cmp313 = icmp sgt i32 %206, 0, !dbg !844
  br i1 %cmp313, label %for.body315, label %for.end319, !dbg !845

for.body315:                                      ; preds = %for.cond312
  %207 = load i8*, i8** %c, align 8, !dbg !846
  store i8 48, i8* %207, align 1, !dbg !847
  br label %for.inc316, !dbg !848

for.inc316:                                       ; preds = %for.body315
  %208 = load i32, i32* %pre, align 4, !dbg !849
  %dec317 = add nsw i32 %208, -1, !dbg !849
  store i32 %dec317, i32* %pre, align 4, !dbg !849
  %209 = load i8*, i8** %c, align 8, !dbg !850
  %incdec.ptr318 = getelementptr inbounds i8, i8* %209, i32 1, !dbg !850
  store i8* %incdec.ptr318, i8** %c, align 8, !dbg !850
  br label %for.cond312, !dbg !851, !llvm.loop !852

for.end319:                                       ; preds = %for.cond312
  br label %if.end320

if.end320:                                        ; preds = %for.end319, %for.end310
  br label %if.end391, !dbg !854

if.else321:                                       ; preds = %if.end177
  %210 = load i8*, i8** %c, align 8, !dbg !855
  store i8 48, i8* %210, align 1, !dbg !857
  %211 = load i8*, i8** %c, align 8, !dbg !858
  %incdec.ptr322 = getelementptr inbounds i8, i8* %211, i32 1, !dbg !858
  store i8* %incdec.ptr322, i8** %c, align 8, !dbg !858
  %212 = load i8*, i8** %c, align 8, !dbg !859
  store i8 46, i8* %212, align 1, !dbg !860
  %213 = load i8*, i8** %c, align 8, !dbg !861
  %incdec.ptr323 = getelementptr inbounds i8, i8* %213, i32 1, !dbg !861
  store i8* %incdec.ptr323, i8** %c, align 8, !dbg !861
  br label %for.cond324, !dbg !862

for.cond324:                                      ; preds = %for.inc328, %if.else321
  %214 = load i32, i32* %pre, align 4, !dbg !863
  %cmp325 = icmp slt i32 %214, 0, !dbg !866
  br i1 %cmp325, label %for.body327, label %for.end330, !dbg !867

for.body327:                                      ; preds = %for.cond324
  %215 = load i8*, i8** %c, align 8, !dbg !868
  store i8 48, i8* %215, align 1, !dbg !869
  br label %for.inc328, !dbg !870

for.inc328:                                       ; preds = %for.body327
  %216 = load i32, i32* %pre, align 4, !dbg !871
  %inc = add nsw i32 %216, 1, !dbg !871
  store i32 %inc, i32* %pre, align 4, !dbg !871
  %217 = load i8*, i8** %c, align 8, !dbg !872
  %incdec.ptr329 = getelementptr inbounds i8, i8* %217, i32 1, !dbg !872
  store i8* %incdec.ptr329, i8** %c, align 8, !dbg !872
  br label %for.cond324, !dbg !873, !llvm.loop !874

for.end330:                                       ; preds = %for.cond324
  br label %for.cond331, !dbg !876

for.cond331:                                      ; preds = %for.inc387, %for.end330
  %218 = load i32, i32* %cut, align 4, !dbg !877
  %cmp332 = icmp slt i32 %218, 0, !dbg !882
  br i1 %cmp332, label %if.then334, label %if.end343, !dbg !883

if.then334:                                       ; preds = %for.cond331
  %219 = load i16*, i16** %up, align 8, !dbg !884
  %220 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !887
  %lsu335 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %220, i32 0, i32 3, !dbg !888
  %arraydecay336 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu335, i64 0, i64 0, !dbg !887
  %cmp337 = icmp eq i16* %219, %arraydecay336, !dbg !889
  br i1 %cmp337, label %if.then339, label %if.end340, !dbg !890

if.then339:                                       ; preds = %if.then334
  br label %for.end390, !dbg !891

if.end340:                                        ; preds = %if.then334
  %221 = load i16*, i16** %up, align 8, !dbg !892
  %incdec.ptr341 = getelementptr inbounds i16, i16* %221, i32 -1, !dbg !892
  store i16* %incdec.ptr341, i16** %up, align 8, !dbg !892
  store i32 2, i32* %cut, align 4, !dbg !893
  %222 = load i16*, i16** %up, align 8, !dbg !894
  %223 = load i16, i16* %222, align 2, !dbg !895
  %conv342 = zext i16 %223 to i32, !dbg !895
  store i32 %conv342, i32* %u, align 4, !dbg !896
  br label %if.end343, !dbg !897

if.end343:                                        ; preds = %if.end340, %for.cond331
  %224 = load i8*, i8** %c, align 8, !dbg !898
  store i8 48, i8* %224, align 1, !dbg !898
  %225 = load i32, i32* %cut, align 4, !dbg !898
  %idxprom344 = sext i32 %225 to i64, !dbg !898
  %arrayidx345 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom344, !dbg !898
  %226 = load i32, i32* %arrayidx345, align 4, !dbg !898
  %mul346 = mul i32 %226, 2, !dbg !898
  store i32 %mul346, i32* %pow, align 4, !dbg !898
  %227 = load i32, i32* %u, align 4, !dbg !900
  %228 = load i32, i32* %pow, align 4, !dbg !900
  %cmp347 = icmp ugt i32 %227, %228, !dbg !900
  br i1 %cmp347, label %if.then349, label %if.end369, !dbg !898

if.then349:                                       ; preds = %if.end343
  %229 = load i32, i32* %pow, align 4, !dbg !902
  %mul350 = mul i32 %229, 4, !dbg !902
  store i32 %mul350, i32* %pow, align 4, !dbg !902
  %230 = load i32, i32* %u, align 4, !dbg !904
  %231 = load i32, i32* %pow, align 4, !dbg !904
  %cmp351 = icmp uge i32 %230, %231, !dbg !904
  br i1 %cmp351, label %if.then353, label %if.end358, !dbg !902

if.then353:                                       ; preds = %if.then349
  %232 = load i32, i32* %pow, align 4, !dbg !906
  %233 = load i32, i32* %u, align 4, !dbg !906
  %sub354 = sub i32 %233, %232, !dbg !906
  store i32 %sub354, i32* %u, align 4, !dbg !906
  %234 = load i8*, i8** %c, align 8, !dbg !906
  %235 = load i8, i8* %234, align 1, !dbg !906
  %conv355 = sext i8 %235 to i32, !dbg !906
  %add356 = add nsw i32 %conv355, 8, !dbg !906
  %conv357 = trunc i32 %add356 to i8, !dbg !906
  store i8 %conv357, i8* %234, align 1, !dbg !906
  br label %if.end358, !dbg !906

if.end358:                                        ; preds = %if.then353, %if.then349
  %236 = load i32, i32* %pow, align 4, !dbg !902
  %div359 = udiv i32 %236, 2, !dbg !902
  store i32 %div359, i32* %pow, align 4, !dbg !902
  %237 = load i32, i32* %u, align 4, !dbg !908
  %238 = load i32, i32* %pow, align 4, !dbg !908
  %cmp360 = icmp uge i32 %237, %238, !dbg !908
  br i1 %cmp360, label %if.then362, label %if.end367, !dbg !902

if.then362:                                       ; preds = %if.end358
  %239 = load i32, i32* %pow, align 4, !dbg !910
  %240 = load i32, i32* %u, align 4, !dbg !910
  %sub363 = sub i32 %240, %239, !dbg !910
  store i32 %sub363, i32* %u, align 4, !dbg !910
  %241 = load i8*, i8** %c, align 8, !dbg !910
  %242 = load i8, i8* %241, align 1, !dbg !910
  %conv364 = sext i8 %242 to i32, !dbg !910
  %add365 = add nsw i32 %conv364, 4, !dbg !910
  %conv366 = trunc i32 %add365 to i8, !dbg !910
  store i8 %conv366, i8* %241, align 1, !dbg !910
  br label %if.end367, !dbg !910

if.end367:                                        ; preds = %if.then362, %if.end358
  %243 = load i32, i32* %pow, align 4, !dbg !902
  %div368 = udiv i32 %243, 2, !dbg !902
  store i32 %div368, i32* %pow, align 4, !dbg !902
  br label %if.end369, !dbg !902

if.end369:                                        ; preds = %if.end367, %if.end343
  %244 = load i32, i32* %u, align 4, !dbg !912
  %245 = load i32, i32* %pow, align 4, !dbg !912
  %cmp370 = icmp uge i32 %244, %245, !dbg !912
  br i1 %cmp370, label %if.then372, label %if.end377, !dbg !898

if.then372:                                       ; preds = %if.end369
  %246 = load i32, i32* %pow, align 4, !dbg !914
  %247 = load i32, i32* %u, align 4, !dbg !914
  %sub373 = sub i32 %247, %246, !dbg !914
  store i32 %sub373, i32* %u, align 4, !dbg !914
  %248 = load i8*, i8** %c, align 8, !dbg !914
  %249 = load i8, i8* %248, align 1, !dbg !914
  %conv374 = sext i8 %249 to i32, !dbg !914
  %add375 = add nsw i32 %conv374, 2, !dbg !914
  %conv376 = trunc i32 %add375 to i8, !dbg !914
  store i8 %conv376, i8* %248, align 1, !dbg !914
  br label %if.end377, !dbg !914

if.end377:                                        ; preds = %if.then372, %if.end369
  %250 = load i32, i32* %pow, align 4, !dbg !898
  %div378 = udiv i32 %250, 2, !dbg !898
  store i32 %div378, i32* %pow, align 4, !dbg !898
  %251 = load i32, i32* %u, align 4, !dbg !916
  %252 = load i32, i32* %pow, align 4, !dbg !916
  %cmp379 = icmp uge i32 %251, %252, !dbg !916
  br i1 %cmp379, label %if.then381, label %if.end386, !dbg !898

if.then381:                                       ; preds = %if.end377
  %253 = load i32, i32* %pow, align 4, !dbg !918
  %254 = load i32, i32* %u, align 4, !dbg !918
  %sub382 = sub i32 %254, %253, !dbg !918
  store i32 %sub382, i32* %u, align 4, !dbg !918
  %255 = load i8*, i8** %c, align 8, !dbg !918
  %256 = load i8, i8* %255, align 1, !dbg !918
  %conv383 = sext i8 %256 to i32, !dbg !918
  %add384 = add nsw i32 %conv383, 1, !dbg !918
  %conv385 = trunc i32 %add384 to i8, !dbg !918
  store i8 %conv385, i8* %255, align 1, !dbg !918
  br label %if.end386, !dbg !918

if.end386:                                        ; preds = %if.then381, %if.end377
  br label %for.inc387, !dbg !920

for.inc387:                                       ; preds = %if.end386
  %257 = load i8*, i8** %c, align 8, !dbg !921
  %incdec.ptr388 = getelementptr inbounds i8, i8* %257, i32 1, !dbg !921
  store i8* %incdec.ptr388, i8** %c, align 8, !dbg !921
  %258 = load i32, i32* %cut, align 4, !dbg !922
  %dec389 = add nsw i32 %258, -1, !dbg !922
  store i32 %dec389, i32* %cut, align 4, !dbg !922
  br label %for.cond331, !dbg !923, !llvm.loop !924

for.end390:                                       ; preds = %if.then339
  br label %if.end391

if.end391:                                        ; preds = %for.end390, %if.end320
  %259 = load i32, i32* %e, align 4, !dbg !927
  %cmp392 = icmp ne i32 %259, 0, !dbg !929
  br i1 %cmp392, label %if.then394, label %if.end461, !dbg !930

if.then394:                                       ; preds = %if.end391
  call void @llvm.dbg.declare(metadata i8* %had, metadata !931, metadata !DIExpression()), !dbg !933
  store i8 0, i8* %had, align 1, !dbg !933
  %260 = load i8*, i8** %c, align 8, !dbg !934
  store i8 69, i8* %260, align 1, !dbg !935
  %261 = load i8*, i8** %c, align 8, !dbg !936
  %incdec.ptr395 = getelementptr inbounds i8, i8* %261, i32 1, !dbg !936
  store i8* %incdec.ptr395, i8** %c, align 8, !dbg !936
  %262 = load i8*, i8** %c, align 8, !dbg !937
  store i8 43, i8* %262, align 1, !dbg !938
  %263 = load i8*, i8** %c, align 8, !dbg !939
  %incdec.ptr396 = getelementptr inbounds i8, i8* %263, i32 1, !dbg !939
  store i8* %incdec.ptr396, i8** %c, align 8, !dbg !939
  %264 = load i32, i32* %e, align 4, !dbg !940
  store i32 %264, i32* %u, align 4, !dbg !941
  %265 = load i32, i32* %e, align 4, !dbg !942
  %cmp397 = icmp slt i32 %265, 0, !dbg !944
  br i1 %cmp397, label %if.then399, label %if.end402, !dbg !945

if.then399:                                       ; preds = %if.then394
  %266 = load i8*, i8** %c, align 8, !dbg !946
  %add.ptr400 = getelementptr inbounds i8, i8* %266, i64 -1, !dbg !948
  store i8 45, i8* %add.ptr400, align 1, !dbg !949
  %267 = load i32, i32* %e, align 4, !dbg !950
  %sub401 = sub nsw i32 0, %267, !dbg !951
  store i32 %sub401, i32* %u, align 4, !dbg !952
  br label %if.end402, !dbg !953

if.end402:                                        ; preds = %if.then399, %if.then394
  store i32 9, i32* %cut, align 4, !dbg !954
  br label %for.cond403, !dbg !956

for.cond403:                                      ; preds = %for.inc458, %if.end402
  %268 = load i32, i32* %cut, align 4, !dbg !957
  %cmp404 = icmp sge i32 %268, 0, !dbg !959
  br i1 %cmp404, label %for.body406, label %for.end460, !dbg !960

for.body406:                                      ; preds = %for.cond403
  %269 = load i8*, i8** %c, align 8, !dbg !961
  store i8 48, i8* %269, align 1, !dbg !961
  %270 = load i32, i32* %cut, align 4, !dbg !961
  %idxprom407 = sext i32 %270 to i64, !dbg !961
  %arrayidx408 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom407, !dbg !961
  %271 = load i32, i32* %arrayidx408, align 4, !dbg !961
  %mul409 = mul i32 %271, 2, !dbg !961
  store i32 %mul409, i32* %pow, align 4, !dbg !961
  %272 = load i32, i32* %u, align 4, !dbg !964
  %273 = load i32, i32* %pow, align 4, !dbg !964
  %cmp410 = icmp ugt i32 %272, %273, !dbg !964
  br i1 %cmp410, label %if.then412, label %if.end432, !dbg !961

if.then412:                                       ; preds = %for.body406
  %274 = load i32, i32* %pow, align 4, !dbg !966
  %mul413 = mul i32 %274, 4, !dbg !966
  store i32 %mul413, i32* %pow, align 4, !dbg !966
  %275 = load i32, i32* %u, align 4, !dbg !968
  %276 = load i32, i32* %pow, align 4, !dbg !968
  %cmp414 = icmp uge i32 %275, %276, !dbg !968
  br i1 %cmp414, label %if.then416, label %if.end421, !dbg !966

if.then416:                                       ; preds = %if.then412
  %277 = load i32, i32* %pow, align 4, !dbg !970
  %278 = load i32, i32* %u, align 4, !dbg !970
  %sub417 = sub i32 %278, %277, !dbg !970
  store i32 %sub417, i32* %u, align 4, !dbg !970
  %279 = load i8*, i8** %c, align 8, !dbg !970
  %280 = load i8, i8* %279, align 1, !dbg !970
  %conv418 = sext i8 %280 to i32, !dbg !970
  %add419 = add nsw i32 %conv418, 8, !dbg !970
  %conv420 = trunc i32 %add419 to i8, !dbg !970
  store i8 %conv420, i8* %279, align 1, !dbg !970
  br label %if.end421, !dbg !970

if.end421:                                        ; preds = %if.then416, %if.then412
  %281 = load i32, i32* %pow, align 4, !dbg !966
  %div422 = udiv i32 %281, 2, !dbg !966
  store i32 %div422, i32* %pow, align 4, !dbg !966
  %282 = load i32, i32* %u, align 4, !dbg !972
  %283 = load i32, i32* %pow, align 4, !dbg !972
  %cmp423 = icmp uge i32 %282, %283, !dbg !972
  br i1 %cmp423, label %if.then425, label %if.end430, !dbg !966

if.then425:                                       ; preds = %if.end421
  %284 = load i32, i32* %pow, align 4, !dbg !974
  %285 = load i32, i32* %u, align 4, !dbg !974
  %sub426 = sub i32 %285, %284, !dbg !974
  store i32 %sub426, i32* %u, align 4, !dbg !974
  %286 = load i8*, i8** %c, align 8, !dbg !974
  %287 = load i8, i8* %286, align 1, !dbg !974
  %conv427 = sext i8 %287 to i32, !dbg !974
  %add428 = add nsw i32 %conv427, 4, !dbg !974
  %conv429 = trunc i32 %add428 to i8, !dbg !974
  store i8 %conv429, i8* %286, align 1, !dbg !974
  br label %if.end430, !dbg !974

if.end430:                                        ; preds = %if.then425, %if.end421
  %288 = load i32, i32* %pow, align 4, !dbg !966
  %div431 = udiv i32 %288, 2, !dbg !966
  store i32 %div431, i32* %pow, align 4, !dbg !966
  br label %if.end432, !dbg !966

if.end432:                                        ; preds = %if.end430, %for.body406
  %289 = load i32, i32* %u, align 4, !dbg !976
  %290 = load i32, i32* %pow, align 4, !dbg !976
  %cmp433 = icmp uge i32 %289, %290, !dbg !976
  br i1 %cmp433, label %if.then435, label %if.end440, !dbg !961

if.then435:                                       ; preds = %if.end432
  %291 = load i32, i32* %pow, align 4, !dbg !978
  %292 = load i32, i32* %u, align 4, !dbg !978
  %sub436 = sub i32 %292, %291, !dbg !978
  store i32 %sub436, i32* %u, align 4, !dbg !978
  %293 = load i8*, i8** %c, align 8, !dbg !978
  %294 = load i8, i8* %293, align 1, !dbg !978
  %conv437 = sext i8 %294 to i32, !dbg !978
  %add438 = add nsw i32 %conv437, 2, !dbg !978
  %conv439 = trunc i32 %add438 to i8, !dbg !978
  store i8 %conv439, i8* %293, align 1, !dbg !978
  br label %if.end440, !dbg !978

if.end440:                                        ; preds = %if.then435, %if.end432
  %295 = load i32, i32* %pow, align 4, !dbg !961
  %div441 = udiv i32 %295, 2, !dbg !961
  store i32 %div441, i32* %pow, align 4, !dbg !961
  %296 = load i32, i32* %u, align 4, !dbg !980
  %297 = load i32, i32* %pow, align 4, !dbg !980
  %cmp442 = icmp uge i32 %296, %297, !dbg !980
  br i1 %cmp442, label %if.then444, label %if.end449, !dbg !961

if.then444:                                       ; preds = %if.end440
  %298 = load i32, i32* %pow, align 4, !dbg !982
  %299 = load i32, i32* %u, align 4, !dbg !982
  %sub445 = sub i32 %299, %298, !dbg !982
  store i32 %sub445, i32* %u, align 4, !dbg !982
  %300 = load i8*, i8** %c, align 8, !dbg !982
  %301 = load i8, i8* %300, align 1, !dbg !982
  %conv446 = sext i8 %301 to i32, !dbg !982
  %add447 = add nsw i32 %conv446, 1, !dbg !982
  %conv448 = trunc i32 %add447 to i8, !dbg !982
  store i8 %conv448, i8* %300, align 1, !dbg !982
  br label %if.end449, !dbg !982

if.end449:                                        ; preds = %if.then444, %if.end440
  %302 = load i8*, i8** %c, align 8, !dbg !984
  %303 = load i8, i8* %302, align 1, !dbg !986
  %conv450 = sext i8 %303 to i32, !dbg !986
  %cmp451 = icmp eq i32 %conv450, 48, !dbg !987
  br i1 %cmp451, label %land.lhs.true453, label %if.end456, !dbg !988

land.lhs.true453:                                 ; preds = %if.end449
  %304 = load i8, i8* %had, align 1, !dbg !989
  %tobool454 = icmp ne i8 %304, 0, !dbg !989
  br i1 %tobool454, label %if.end456, label %if.then455, !dbg !990

if.then455:                                       ; preds = %land.lhs.true453
  br label %for.inc458, !dbg !991

if.end456:                                        ; preds = %land.lhs.true453, %if.end449
  store i8 1, i8* %had, align 1, !dbg !992
  %305 = load i8*, i8** %c, align 8, !dbg !993
  %incdec.ptr457 = getelementptr inbounds i8, i8* %305, i32 1, !dbg !993
  store i8* %incdec.ptr457, i8** %c, align 8, !dbg !993
  br label %for.inc458, !dbg !994

for.inc458:                                       ; preds = %if.end456, %if.then455
  %306 = load i32, i32* %cut, align 4, !dbg !995
  %dec459 = add nsw i32 %306, -1, !dbg !995
  store i32 %dec459, i32* %cut, align 4, !dbg !995
  br label %for.cond403, !dbg !996, !llvm.loop !997

for.end460:                                       ; preds = %for.cond403
  br label %if.end461, !dbg !999

if.end461:                                        ; preds = %for.end460, %if.end391
  %307 = load i8*, i8** %c, align 8, !dbg !1000
  store i8 0, i8* %307, align 1, !dbg !1001
  br label %return, !dbg !1002

return:                                           ; preds = %if.end461, %for.end119, %if.then39, %if.then16
  ret void, !dbg !1003
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @decNumberToEngString(%struct.decNumber* %dn, i8* %string) #0 !dbg !1004 {
entry:
  %dn.addr = alloca %struct.decNumber*, align 8
  %string.addr = alloca i8*, align 8
  store %struct.decNumber* %dn, %struct.decNumber** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dn.addr, metadata !1005, metadata !DIExpression()), !dbg !1006
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !1007, metadata !DIExpression()), !dbg !1008
  %0 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1009
  %1 = load i8*, i8** %string.addr, align 8, !dbg !1010
  call void @decToString(%struct.decNumber* %0, i8* %1, i8 zeroext 1), !dbg !1011
  %2 = load i8*, i8** %string.addr, align 8, !dbg !1012
  ret i8* %2, !dbg !1013
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberFromString(%struct.decNumber* %dn, i8* %chars, %struct.decContext* %set) #0 !dbg !1014 {
entry:
  %dn.addr = alloca %struct.decNumber*, align 8
  %chars.addr = alloca i8*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %exponent = alloca i32, align 4
  %bits = alloca i8, align 1
  %res = alloca i16*, align 8
  %resbuff = alloca [15 x i16], align 16
  %allocres = alloca i16*, align 8
  %d = alloca i32, align 4
  %dotchar = alloca i8*, align 8
  %cfirst = alloca i8*, align 8
  %last = alloca i8*, align 8
  %c = alloca i8*, align 8
  %up = alloca i16*, align 8
  %cut = alloca i32, align 4
  %out = alloca i32, align 4
  %residue = alloca i32, align 4
  %status = alloca i32, align 4
  %nege = alloca i8, align 1
  %firstexp = alloca i8*, align 8
  %needbytes = alloca i32, align 4
  store %struct.decNumber* %dn, %struct.decNumber** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dn.addr, metadata !1019, metadata !DIExpression()), !dbg !1020
  store i8* %chars, i8** %chars.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %chars.addr, metadata !1021, metadata !DIExpression()), !dbg !1022
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !1023, metadata !DIExpression()), !dbg !1024
  call void @llvm.dbg.declare(metadata i32* %exponent, metadata !1025, metadata !DIExpression()), !dbg !1026
  store i32 0, i32* %exponent, align 4, !dbg !1026
  call void @llvm.dbg.declare(metadata i8* %bits, metadata !1027, metadata !DIExpression()), !dbg !1028
  store i8 0, i8* %bits, align 1, !dbg !1028
  call void @llvm.dbg.declare(metadata i16** %res, metadata !1029, metadata !DIExpression()), !dbg !1030
  call void @llvm.dbg.declare(metadata [15 x i16]* %resbuff, metadata !1031, metadata !DIExpression()), !dbg !1035
  call void @llvm.dbg.declare(metadata i16** %allocres, metadata !1036, metadata !DIExpression()), !dbg !1037
  store i16* null, i16** %allocres, align 8, !dbg !1037
  call void @llvm.dbg.declare(metadata i32* %d, metadata !1038, metadata !DIExpression()), !dbg !1039
  store i32 0, i32* %d, align 4, !dbg !1039
  call void @llvm.dbg.declare(metadata i8** %dotchar, metadata !1040, metadata !DIExpression()), !dbg !1041
  store i8* null, i8** %dotchar, align 8, !dbg !1041
  call void @llvm.dbg.declare(metadata i8** %cfirst, metadata !1042, metadata !DIExpression()), !dbg !1043
  %0 = load i8*, i8** %chars.addr, align 8, !dbg !1044
  store i8* %0, i8** %cfirst, align 8, !dbg !1043
  call void @llvm.dbg.declare(metadata i8** %last, metadata !1045, metadata !DIExpression()), !dbg !1046
  store i8* null, i8** %last, align 8, !dbg !1046
  call void @llvm.dbg.declare(metadata i8** %c, metadata !1047, metadata !DIExpression()), !dbg !1048
  call void @llvm.dbg.declare(metadata i16** %up, metadata !1049, metadata !DIExpression()), !dbg !1050
  call void @llvm.dbg.declare(metadata i32* %cut, metadata !1051, metadata !DIExpression()), !dbg !1052
  call void @llvm.dbg.declare(metadata i32* %out, metadata !1053, metadata !DIExpression()), !dbg !1054
  call void @llvm.dbg.declare(metadata i32* %residue, metadata !1055, metadata !DIExpression()), !dbg !1056
  call void @llvm.dbg.declare(metadata i32* %status, metadata !1057, metadata !DIExpression()), !dbg !1058
  store i32 0, i32* %status, align 4, !dbg !1058
  br label %do.body, !dbg !1059

do.body:                                          ; preds = %entry
  %1 = load i8*, i8** %chars.addr, align 8, !dbg !1060
  store i8* %1, i8** %c, align 8, !dbg !1063
  br label %for.cond, !dbg !1064

for.cond:                                         ; preds = %for.inc, %do.body
  %2 = load i8*, i8** %c, align 8, !dbg !1065
  %3 = load i8, i8* %2, align 1, !dbg !1069
  %conv = sext i8 %3 to i32, !dbg !1069
  %cmp = icmp sge i32 %conv, 48, !dbg !1070
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !1071

land.lhs.true:                                    ; preds = %for.cond
  %4 = load i8*, i8** %c, align 8, !dbg !1072
  %5 = load i8, i8* %4, align 1, !dbg !1073
  %conv2 = sext i8 %5 to i32, !dbg !1073
  %cmp3 = icmp sle i32 %conv2, 57, !dbg !1074
  br i1 %cmp3, label %if.then, label %if.end, !dbg !1075

if.then:                                          ; preds = %land.lhs.true
  %6 = load i8*, i8** %c, align 8, !dbg !1076
  store i8* %6, i8** %last, align 8, !dbg !1078
  %7 = load i32, i32* %d, align 4, !dbg !1079
  %inc = add nsw i32 %7, 1, !dbg !1079
  store i32 %inc, i32* %d, align 4, !dbg !1079
  br label %for.inc, !dbg !1080

if.end:                                           ; preds = %land.lhs.true, %for.cond
  %8 = load i8*, i8** %c, align 8, !dbg !1081
  %9 = load i8, i8* %8, align 1, !dbg !1083
  %conv5 = sext i8 %9 to i32, !dbg !1083
  %cmp6 = icmp eq i32 %conv5, 46, !dbg !1084
  br i1 %cmp6, label %land.lhs.true8, label %if.end16, !dbg !1085

land.lhs.true8:                                   ; preds = %if.end
  %10 = load i8*, i8** %dotchar, align 8, !dbg !1086
  %cmp9 = icmp eq i8* %10, null, !dbg !1087
  br i1 %cmp9, label %if.then11, label %if.end16, !dbg !1088

if.then11:                                        ; preds = %land.lhs.true8
  %11 = load i8*, i8** %c, align 8, !dbg !1089
  store i8* %11, i8** %dotchar, align 8, !dbg !1091
  %12 = load i8*, i8** %c, align 8, !dbg !1092
  %13 = load i8*, i8** %cfirst, align 8, !dbg !1094
  %cmp12 = icmp eq i8* %12, %13, !dbg !1095
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !1096

if.then14:                                        ; preds = %if.then11
  %14 = load i8*, i8** %cfirst, align 8, !dbg !1097
  %incdec.ptr = getelementptr inbounds i8, i8* %14, i32 1, !dbg !1097
  store i8* %incdec.ptr, i8** %cfirst, align 8, !dbg !1097
  br label %if.end15, !dbg !1098

if.end15:                                         ; preds = %if.then14, %if.then11
  br label %for.inc, !dbg !1099

if.end16:                                         ; preds = %land.lhs.true8, %if.end
  %15 = load i8*, i8** %c, align 8, !dbg !1100
  %16 = load i8*, i8** %chars.addr, align 8, !dbg !1102
  %cmp17 = icmp eq i8* %15, %16, !dbg !1103
  br i1 %cmp17, label %if.then19, label %if.end32, !dbg !1104

if.then19:                                        ; preds = %if.end16
  %17 = load i8*, i8** %c, align 8, !dbg !1105
  %18 = load i8, i8* %17, align 1, !dbg !1108
  %conv20 = sext i8 %18 to i32, !dbg !1108
  %cmp21 = icmp eq i32 %conv20, 45, !dbg !1109
  br i1 %cmp21, label %if.then23, label %if.end25, !dbg !1110

if.then23:                                        ; preds = %if.then19
  %19 = load i8*, i8** %cfirst, align 8, !dbg !1111
  %incdec.ptr24 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !1111
  store i8* %incdec.ptr24, i8** %cfirst, align 8, !dbg !1111
  store i8 -128, i8* %bits, align 1, !dbg !1113
  br label %for.inc, !dbg !1114

if.end25:                                         ; preds = %if.then19
  %20 = load i8*, i8** %c, align 8, !dbg !1115
  %21 = load i8, i8* %20, align 1, !dbg !1117
  %conv26 = sext i8 %21 to i32, !dbg !1117
  %cmp27 = icmp eq i32 %conv26, 43, !dbg !1118
  br i1 %cmp27, label %if.then29, label %if.end31, !dbg !1119

if.then29:                                        ; preds = %if.end25
  %22 = load i8*, i8** %cfirst, align 8, !dbg !1120
  %incdec.ptr30 = getelementptr inbounds i8, i8* %22, i32 1, !dbg !1120
  store i8* %incdec.ptr30, i8** %cfirst, align 8, !dbg !1120
  br label %for.inc, !dbg !1122

if.end31:                                         ; preds = %if.end25
  br label %if.end32, !dbg !1123

if.end32:                                         ; preds = %if.end31, %if.end16
  br label %for.end, !dbg !1124

for.inc:                                          ; preds = %if.then29, %if.then23, %if.end15, %if.then
  %23 = load i8*, i8** %c, align 8, !dbg !1125
  %incdec.ptr33 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !1125
  store i8* %incdec.ptr33, i8** %c, align 8, !dbg !1125
  br label %for.cond, !dbg !1126, !llvm.loop !1127

for.end:                                          ; preds = %if.end32
  %24 = load i8*, i8** %last, align 8, !dbg !1130
  %cmp34 = icmp eq i8* %24, null, !dbg !1132
  br i1 %cmp34, label %if.then36, label %if.else, !dbg !1133

if.then36:                                        ; preds = %for.end
  store i32 1, i32* %status, align 4, !dbg !1134
  %25 = load i8*, i8** %c, align 8, !dbg !1136
  %26 = load i8, i8* %25, align 1, !dbg !1138
  %conv37 = sext i8 %26 to i32, !dbg !1138
  %cmp38 = icmp eq i32 %conv37, 0, !dbg !1139
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !1140

if.then40:                                        ; preds = %if.then36
  br label %do.end, !dbg !1141

if.end41:                                         ; preds = %if.then36
  %27 = load i8*, i8** %dotchar, align 8, !dbg !1142
  %cmp42 = icmp ne i8* %27, null, !dbg !1144
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !1145

if.then44:                                        ; preds = %if.end41
  br label %do.end, !dbg !1146

if.end45:                                         ; preds = %if.end41
  %28 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1147
  %call = call %struct.decNumber* @decNumberZero(%struct.decNumber* %28), !dbg !1148
  %29 = load i8*, i8** %c, align 8, !dbg !1149
  %call46 = call zeroext i8 @decBiStr(i8* %29, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)), !dbg !1151
  %conv47 = zext i8 %call46 to i32, !dbg !1151
  %tobool = icmp ne i32 %conv47, 0, !dbg !1151
  br i1 %tobool, label %if.then51, label %lor.lhs.false, !dbg !1152

lor.lhs.false:                                    ; preds = %if.end45
  %30 = load i8*, i8** %c, align 8, !dbg !1153
  %call48 = call zeroext i8 @decBiStr(i8* %30, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0)), !dbg !1154
  %conv49 = zext i8 %call48 to i32, !dbg !1154
  %tobool50 = icmp ne i32 %conv49, 0, !dbg !1154
  br i1 %tobool50, label %if.then51, label %if.end55, !dbg !1155

if.then51:                                        ; preds = %lor.lhs.false, %if.end45
  %31 = load i8, i8* %bits, align 1, !dbg !1156
  %conv52 = zext i8 %31 to i32, !dbg !1156
  %or = or i32 %conv52, 64, !dbg !1158
  %conv53 = trunc i32 %or to i8, !dbg !1156
  %32 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1159
  %bits54 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %32, i32 0, i32 2, !dbg !1160
  store i8 %conv53, i8* %bits54, align 4, !dbg !1161
  store i32 0, i32* %status, align 4, !dbg !1162
  br label %do.end, !dbg !1163

if.end55:                                         ; preds = %lor.lhs.false
  %33 = load i8, i8* %bits, align 1, !dbg !1164
  %conv56 = zext i8 %33 to i32, !dbg !1164
  %or57 = or i32 %conv56, 32, !dbg !1165
  %conv58 = trunc i32 %or57 to i8, !dbg !1164
  %34 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1166
  %bits59 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %34, i32 0, i32 2, !dbg !1167
  store i8 %conv58, i8* %bits59, align 4, !dbg !1168
  %35 = load i8*, i8** %c, align 8, !dbg !1169
  %36 = load i8, i8* %35, align 1, !dbg !1171
  %conv60 = sext i8 %36 to i32, !dbg !1171
  %cmp61 = icmp eq i32 %conv60, 115, !dbg !1172
  br i1 %cmp61, label %if.then67, label %lor.lhs.false63, !dbg !1173

lor.lhs.false63:                                  ; preds = %if.end55
  %37 = load i8*, i8** %c, align 8, !dbg !1174
  %38 = load i8, i8* %37, align 1, !dbg !1175
  %conv64 = sext i8 %38 to i32, !dbg !1175
  %cmp65 = icmp eq i32 %conv64, 83, !dbg !1176
  br i1 %cmp65, label %if.then67, label %if.end73, !dbg !1177

if.then67:                                        ; preds = %lor.lhs.false63, %if.end55
  %39 = load i8*, i8** %c, align 8, !dbg !1178
  %incdec.ptr68 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !1178
  store i8* %incdec.ptr68, i8** %c, align 8, !dbg !1178
  %40 = load i8, i8* %bits, align 1, !dbg !1180
  %conv69 = zext i8 %40 to i32, !dbg !1180
  %or70 = or i32 %conv69, 16, !dbg !1181
  %conv71 = trunc i32 %or70 to i8, !dbg !1180
  %41 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1182
  %bits72 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %41, i32 0, i32 2, !dbg !1183
  store i8 %conv71, i8* %bits72, align 4, !dbg !1184
  br label %if.end73, !dbg !1185

if.end73:                                         ; preds = %if.then67, %lor.lhs.false63
  %42 = load i8*, i8** %c, align 8, !dbg !1186
  %43 = load i8, i8* %42, align 1, !dbg !1188
  %conv74 = sext i8 %43 to i32, !dbg !1188
  %cmp75 = icmp ne i32 %conv74, 110, !dbg !1189
  br i1 %cmp75, label %land.lhs.true77, label %if.end82, !dbg !1190

land.lhs.true77:                                  ; preds = %if.end73
  %44 = load i8*, i8** %c, align 8, !dbg !1191
  %45 = load i8, i8* %44, align 1, !dbg !1192
  %conv78 = sext i8 %45 to i32, !dbg !1192
  %cmp79 = icmp ne i32 %conv78, 78, !dbg !1193
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !1194

if.then81:                                        ; preds = %land.lhs.true77
  br label %do.end, !dbg !1195

if.end82:                                         ; preds = %land.lhs.true77, %if.end73
  %46 = load i8*, i8** %c, align 8, !dbg !1196
  %incdec.ptr83 = getelementptr inbounds i8, i8* %46, i32 1, !dbg !1196
  store i8* %incdec.ptr83, i8** %c, align 8, !dbg !1196
  %47 = load i8*, i8** %c, align 8, !dbg !1197
  %48 = load i8, i8* %47, align 1, !dbg !1199
  %conv84 = sext i8 %48 to i32, !dbg !1199
  %cmp85 = icmp ne i32 %conv84, 97, !dbg !1200
  br i1 %cmp85, label %land.lhs.true87, label %if.end92, !dbg !1201

land.lhs.true87:                                  ; preds = %if.end82
  %49 = load i8*, i8** %c, align 8, !dbg !1202
  %50 = load i8, i8* %49, align 1, !dbg !1203
  %conv88 = sext i8 %50 to i32, !dbg !1203
  %cmp89 = icmp ne i32 %conv88, 65, !dbg !1204
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !1205

if.then91:                                        ; preds = %land.lhs.true87
  br label %do.end, !dbg !1206

if.end92:                                         ; preds = %land.lhs.true87, %if.end82
  %51 = load i8*, i8** %c, align 8, !dbg !1207
  %incdec.ptr93 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !1207
  store i8* %incdec.ptr93, i8** %c, align 8, !dbg !1207
  %52 = load i8*, i8** %c, align 8, !dbg !1208
  %53 = load i8, i8* %52, align 1, !dbg !1210
  %conv94 = sext i8 %53 to i32, !dbg !1210
  %cmp95 = icmp ne i32 %conv94, 110, !dbg !1211
  br i1 %cmp95, label %land.lhs.true97, label %if.end102, !dbg !1212

land.lhs.true97:                                  ; preds = %if.end92
  %54 = load i8*, i8** %c, align 8, !dbg !1213
  %55 = load i8, i8* %54, align 1, !dbg !1214
  %conv98 = sext i8 %55 to i32, !dbg !1214
  %cmp99 = icmp ne i32 %conv98, 78, !dbg !1215
  br i1 %cmp99, label %if.then101, label %if.end102, !dbg !1216

if.then101:                                       ; preds = %land.lhs.true97
  br label %do.end, !dbg !1217

if.end102:                                        ; preds = %land.lhs.true97, %if.end92
  %56 = load i8*, i8** %c, align 8, !dbg !1218
  %incdec.ptr103 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !1218
  store i8* %incdec.ptr103, i8** %c, align 8, !dbg !1218
  %57 = load i8*, i8** %c, align 8, !dbg !1219
  store i8* %57, i8** %cfirst, align 8, !dbg !1221
  br label %for.cond104, !dbg !1222

for.cond104:                                      ; preds = %for.body, %if.end102
  %58 = load i8*, i8** %cfirst, align 8, !dbg !1223
  %59 = load i8, i8* %58, align 1, !dbg !1225
  %conv105 = sext i8 %59 to i32, !dbg !1225
  %cmp106 = icmp eq i32 %conv105, 48, !dbg !1226
  br i1 %cmp106, label %for.body, label %for.end109, !dbg !1227

for.body:                                         ; preds = %for.cond104
  %60 = load i8*, i8** %cfirst, align 8, !dbg !1228
  %incdec.ptr108 = getelementptr inbounds i8, i8* %60, i32 1, !dbg !1228
  store i8* %incdec.ptr108, i8** %cfirst, align 8, !dbg !1228
  br label %for.cond104, !dbg !1229, !llvm.loop !1230

for.end109:                                       ; preds = %for.cond104
  %61 = load i8*, i8** %cfirst, align 8, !dbg !1232
  %62 = load i8, i8* %61, align 1, !dbg !1234
  %conv110 = sext i8 %62 to i32, !dbg !1234
  %cmp111 = icmp eq i32 %conv110, 0, !dbg !1235
  br i1 %cmp111, label %if.then113, label %if.end114, !dbg !1236

if.then113:                                       ; preds = %for.end109
  store i32 0, i32* %status, align 4, !dbg !1237
  br label %do.end, !dbg !1239

if.end114:                                        ; preds = %for.end109
  %63 = load i8*, i8** %cfirst, align 8, !dbg !1240
  store i8* %63, i8** %c, align 8, !dbg !1242
  br label %for.cond115, !dbg !1243

for.cond115:                                      ; preds = %for.inc125, %if.end114
  %64 = load i8*, i8** %c, align 8, !dbg !1244
  %65 = load i8, i8* %64, align 1, !dbg !1248
  %conv116 = sext i8 %65 to i32, !dbg !1248
  %cmp117 = icmp slt i32 %conv116, 48, !dbg !1249
  br i1 %cmp117, label %if.then123, label %lor.lhs.false119, !dbg !1250

lor.lhs.false119:                                 ; preds = %for.cond115
  %66 = load i8*, i8** %c, align 8, !dbg !1251
  %67 = load i8, i8* %66, align 1, !dbg !1252
  %conv120 = sext i8 %67 to i32, !dbg !1252
  %cmp121 = icmp sgt i32 %conv120, 57, !dbg !1253
  br i1 %cmp121, label %if.then123, label %if.end124, !dbg !1254

if.then123:                                       ; preds = %lor.lhs.false119, %for.cond115
  br label %for.end128, !dbg !1255

if.end124:                                        ; preds = %lor.lhs.false119
  %68 = load i8*, i8** %c, align 8, !dbg !1256
  store i8* %68, i8** %last, align 8, !dbg !1257
  br label %for.inc125, !dbg !1258

for.inc125:                                       ; preds = %if.end124
  %69 = load i8*, i8** %c, align 8, !dbg !1259
  %incdec.ptr126 = getelementptr inbounds i8, i8* %69, i32 1, !dbg !1259
  store i8* %incdec.ptr126, i8** %c, align 8, !dbg !1259
  %70 = load i32, i32* %d, align 4, !dbg !1260
  %inc127 = add nsw i32 %70, 1, !dbg !1260
  store i32 %inc127, i32* %d, align 4, !dbg !1260
  br label %for.cond115, !dbg !1261, !llvm.loop !1262

for.end128:                                       ; preds = %if.then123
  %71 = load i8*, i8** %c, align 8, !dbg !1265
  %72 = load i8, i8* %71, align 1, !dbg !1267
  %conv129 = sext i8 %72 to i32, !dbg !1267
  %cmp130 = icmp ne i32 %conv129, 0, !dbg !1268
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !1269

if.then132:                                       ; preds = %for.end128
  br label %do.end, !dbg !1270

if.end133:                                        ; preds = %for.end128
  %73 = load i32, i32* %d, align 4, !dbg !1271
  %74 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !1273
  %digits = getelementptr inbounds %struct.decContext, %struct.decContext* %74, i32 0, i32 0, !dbg !1274
  %75 = load i32, i32* %digits, align 4, !dbg !1274
  %sub = sub nsw i32 %75, 1, !dbg !1275
  %cmp134 = icmp sgt i32 %73, %sub, !dbg !1276
  br i1 %cmp134, label %if.then136, label %if.end145, !dbg !1277

if.then136:                                       ; preds = %if.end133
  %76 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !1278
  %clamp = getelementptr inbounds %struct.decContext, %struct.decContext* %76, i32 0, i32 6, !dbg !1281
  %77 = load i8, i8* %clamp, align 4, !dbg !1281
  %tobool137 = icmp ne i8 %77, 0, !dbg !1278
  br i1 %tobool137, label %if.then138, label %if.end139, !dbg !1282

if.then138:                                       ; preds = %if.then136
  br label %do.end, !dbg !1283

if.end139:                                        ; preds = %if.then136
  %78 = load i32, i32* %d, align 4, !dbg !1284
  %79 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !1286
  %digits140 = getelementptr inbounds %struct.decContext, %struct.decContext* %79, i32 0, i32 0, !dbg !1287
  %80 = load i32, i32* %digits140, align 4, !dbg !1287
  %cmp141 = icmp sgt i32 %78, %80, !dbg !1288
  br i1 %cmp141, label %if.then143, label %if.end144, !dbg !1289

if.then143:                                       ; preds = %if.end139
  br label %do.end, !dbg !1290

if.end144:                                        ; preds = %if.end139
  br label %if.end145, !dbg !1291

if.end145:                                        ; preds = %if.end144, %if.end133
  store i32 0, i32* %status, align 4, !dbg !1292
  %81 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1293
  %bits146 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %81, i32 0, i32 2, !dbg !1294
  %82 = load i8, i8* %bits146, align 4, !dbg !1294
  store i8 %82, i8* %bits, align 1, !dbg !1295
  br label %if.end232, !dbg !1296

if.else:                                          ; preds = %for.end
  %83 = load i8*, i8** %c, align 8, !dbg !1297
  %84 = load i8, i8* %83, align 1, !dbg !1299
  %conv147 = sext i8 %84 to i32, !dbg !1299
  %cmp148 = icmp ne i32 %conv147, 0, !dbg !1300
  br i1 %cmp148, label %if.then150, label %if.end231, !dbg !1301

if.then150:                                       ; preds = %if.else
  call void @llvm.dbg.declare(metadata i8* %nege, metadata !1302, metadata !DIExpression()), !dbg !1304
  call void @llvm.dbg.declare(metadata i8** %firstexp, metadata !1305, metadata !DIExpression()), !dbg !1306
  store i32 1, i32* %status, align 4, !dbg !1307
  %85 = load i8*, i8** %c, align 8, !dbg !1308
  %86 = load i8, i8* %85, align 1, !dbg !1310
  %conv151 = sext i8 %86 to i32, !dbg !1310
  %cmp152 = icmp ne i32 %conv151, 101, !dbg !1311
  br i1 %cmp152, label %land.lhs.true154, label %if.end159, !dbg !1312

land.lhs.true154:                                 ; preds = %if.then150
  %87 = load i8*, i8** %c, align 8, !dbg !1313
  %88 = load i8, i8* %87, align 1, !dbg !1314
  %conv155 = sext i8 %88 to i32, !dbg !1314
  %cmp156 = icmp ne i32 %conv155, 69, !dbg !1315
  br i1 %cmp156, label %if.then158, label %if.end159, !dbg !1316

if.then158:                                       ; preds = %land.lhs.true154
  br label %do.end, !dbg !1317

if.end159:                                        ; preds = %land.lhs.true154, %if.then150
  store i8 0, i8* %nege, align 1, !dbg !1318
  %89 = load i8*, i8** %c, align 8, !dbg !1319
  %incdec.ptr160 = getelementptr inbounds i8, i8* %89, i32 1, !dbg !1319
  store i8* %incdec.ptr160, i8** %c, align 8, !dbg !1319
  %90 = load i8*, i8** %c, align 8, !dbg !1320
  %91 = load i8, i8* %90, align 1, !dbg !1322
  %conv161 = sext i8 %91 to i32, !dbg !1322
  %cmp162 = icmp eq i32 %conv161, 45, !dbg !1323
  br i1 %cmp162, label %if.then164, label %if.else166, !dbg !1324

if.then164:                                       ; preds = %if.end159
  store i8 1, i8* %nege, align 1, !dbg !1325
  %92 = load i8*, i8** %c, align 8, !dbg !1327
  %incdec.ptr165 = getelementptr inbounds i8, i8* %92, i32 1, !dbg !1327
  store i8* %incdec.ptr165, i8** %c, align 8, !dbg !1327
  br label %if.end173, !dbg !1328

if.else166:                                       ; preds = %if.end159
  %93 = load i8*, i8** %c, align 8, !dbg !1329
  %94 = load i8, i8* %93, align 1, !dbg !1331
  %conv167 = sext i8 %94 to i32, !dbg !1331
  %cmp168 = icmp eq i32 %conv167, 43, !dbg !1332
  br i1 %cmp168, label %if.then170, label %if.end172, !dbg !1333

if.then170:                                       ; preds = %if.else166
  %95 = load i8*, i8** %c, align 8, !dbg !1334
  %incdec.ptr171 = getelementptr inbounds i8, i8* %95, i32 1, !dbg !1334
  store i8* %incdec.ptr171, i8** %c, align 8, !dbg !1334
  br label %if.end172, !dbg !1335

if.end172:                                        ; preds = %if.then170, %if.else166
  br label %if.end173

if.end173:                                        ; preds = %if.end172, %if.then164
  %96 = load i8*, i8** %c, align 8, !dbg !1336
  %97 = load i8, i8* %96, align 1, !dbg !1338
  %conv174 = sext i8 %97 to i32, !dbg !1338
  %cmp175 = icmp eq i32 %conv174, 0, !dbg !1339
  br i1 %cmp175, label %if.then177, label %if.end178, !dbg !1340

if.then177:                                       ; preds = %if.end173
  br label %do.end, !dbg !1341

if.end178:                                        ; preds = %if.end173
  br label %for.cond179, !dbg !1342

for.cond179:                                      ; preds = %for.body186, %if.end178
  %98 = load i8*, i8** %c, align 8, !dbg !1343
  %99 = load i8, i8* %98, align 1, !dbg !1346
  %conv180 = sext i8 %99 to i32, !dbg !1346
  %cmp181 = icmp eq i32 %conv180, 48, !dbg !1347
  br i1 %cmp181, label %land.rhs, label %land.end, !dbg !1348

land.rhs:                                         ; preds = %for.cond179
  %100 = load i8*, i8** %c, align 8, !dbg !1349
  %add.ptr = getelementptr inbounds i8, i8* %100, i64 1, !dbg !1350
  %101 = load i8, i8* %add.ptr, align 1, !dbg !1351
  %conv183 = sext i8 %101 to i32, !dbg !1351
  %cmp184 = icmp ne i32 %conv183, 0, !dbg !1352
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond179
  %102 = phi i1 [ false, %for.cond179 ], [ %cmp184, %land.rhs ], !dbg !1353
  br i1 %102, label %for.body186, label %for.end188, !dbg !1354

for.body186:                                      ; preds = %land.end
  %103 = load i8*, i8** %c, align 8, !dbg !1355
  %incdec.ptr187 = getelementptr inbounds i8, i8* %103, i32 1, !dbg !1355
  store i8* %incdec.ptr187, i8** %c, align 8, !dbg !1355
  br label %for.cond179, !dbg !1356, !llvm.loop !1357

for.end188:                                       ; preds = %land.end
  %104 = load i8*, i8** %c, align 8, !dbg !1359
  store i8* %104, i8** %firstexp, align 8, !dbg !1360
  br label %for.cond189, !dbg !1361

for.cond189:                                      ; preds = %for.inc203, %for.end188
  %105 = load i8*, i8** %c, align 8, !dbg !1362
  %106 = load i8, i8* %105, align 1, !dbg !1367
  %conv190 = sext i8 %106 to i32, !dbg !1367
  %cmp191 = icmp slt i32 %conv190, 48, !dbg !1368
  br i1 %cmp191, label %if.then197, label %lor.lhs.false193, !dbg !1369

lor.lhs.false193:                                 ; preds = %for.cond189
  %107 = load i8*, i8** %c, align 8, !dbg !1370
  %108 = load i8, i8* %107, align 1, !dbg !1371
  %conv194 = sext i8 %108 to i32, !dbg !1371
  %cmp195 = icmp sgt i32 %conv194, 57, !dbg !1372
  br i1 %cmp195, label %if.then197, label %if.end198, !dbg !1373

if.then197:                                       ; preds = %lor.lhs.false193, %for.cond189
  br label %for.end205, !dbg !1374

if.end198:                                        ; preds = %lor.lhs.false193
  %109 = load i32, i32* %exponent, align 4, !dbg !1375
  %shl = shl i32 %109, 1, !dbg !1375
  %110 = load i32, i32* %exponent, align 4, !dbg !1375
  %shl199 = shl i32 %110, 3, !dbg !1375
  %add = add nsw i32 %shl, %shl199, !dbg !1375
  %111 = load i8*, i8** %c, align 8, !dbg !1376
  %112 = load i8, i8* %111, align 1, !dbg !1377
  %conv200 = sext i8 %112 to i32, !dbg !1378
  %add201 = add nsw i32 %add, %conv200, !dbg !1379
  %sub202 = sub nsw i32 %add201, 48, !dbg !1380
  store i32 %sub202, i32* %exponent, align 4, !dbg !1381
  br label %for.inc203, !dbg !1382

for.inc203:                                       ; preds = %if.end198
  %113 = load i8*, i8** %c, align 8, !dbg !1383
  %incdec.ptr204 = getelementptr inbounds i8, i8* %113, i32 1, !dbg !1383
  store i8* %incdec.ptr204, i8** %c, align 8, !dbg !1383
  br label %for.cond189, !dbg !1384, !llvm.loop !1385

for.end205:                                       ; preds = %if.then197
  %114 = load i8*, i8** %c, align 8, !dbg !1388
  %115 = load i8, i8* %114, align 1, !dbg !1390
  %conv206 = sext i8 %115 to i32, !dbg !1390
  %cmp207 = icmp ne i32 %conv206, 0, !dbg !1391
  br i1 %cmp207, label %if.then209, label %if.end210, !dbg !1392

if.then209:                                       ; preds = %for.end205
  br label %do.end, !dbg !1393

if.end210:                                        ; preds = %for.end205
  %116 = load i8*, i8** %c, align 8, !dbg !1394
  %117 = load i8*, i8** %firstexp, align 8, !dbg !1396
  %add.ptr211 = getelementptr inbounds i8, i8* %117, i64 9, !dbg !1397
  %add.ptr212 = getelementptr inbounds i8, i8* %add.ptr211, i64 1, !dbg !1398
  %cmp213 = icmp uge i8* %116, %add.ptr212, !dbg !1399
  br i1 %cmp213, label %if.then215, label %if.end226, !dbg !1400

if.then215:                                       ; preds = %if.end210
  %118 = load i8*, i8** %c, align 8, !dbg !1401
  %119 = load i8*, i8** %firstexp, align 8, !dbg !1404
  %add.ptr216 = getelementptr inbounds i8, i8* %119, i64 9, !dbg !1405
  %add.ptr217 = getelementptr inbounds i8, i8* %add.ptr216, i64 1, !dbg !1406
  %cmp218 = icmp ugt i8* %118, %add.ptr217, !dbg !1407
  br i1 %cmp218, label %if.then224, label %lor.lhs.false220, !dbg !1408

lor.lhs.false220:                                 ; preds = %if.then215
  %120 = load i8*, i8** %firstexp, align 8, !dbg !1409
  %121 = load i8, i8* %120, align 1, !dbg !1410
  %conv221 = sext i8 %121 to i32, !dbg !1410
  %cmp222 = icmp sgt i32 %conv221, 49, !dbg !1411
  br i1 %cmp222, label %if.then224, label %if.end225, !dbg !1412

if.then224:                                       ; preds = %lor.lhs.false220, %if.then215
  store i32 1999999998, i32* %exponent, align 4, !dbg !1413
  br label %if.end225, !dbg !1414

if.end225:                                        ; preds = %if.then224, %lor.lhs.false220
  br label %if.end226, !dbg !1415

if.end226:                                        ; preds = %if.end225, %if.end210
  %122 = load i8, i8* %nege, align 1, !dbg !1416
  %tobool227 = icmp ne i8 %122, 0, !dbg !1416
  br i1 %tobool227, label %if.then228, label %if.end230, !dbg !1418

if.then228:                                       ; preds = %if.end226
  %123 = load i32, i32* %exponent, align 4, !dbg !1419
  %sub229 = sub nsw i32 0, %123, !dbg !1420
  store i32 %sub229, i32* %exponent, align 4, !dbg !1421
  br label %if.end230, !dbg !1422

if.end230:                                        ; preds = %if.then228, %if.end226
  store i32 0, i32* %status, align 4, !dbg !1423
  br label %if.end231, !dbg !1424

if.end231:                                        ; preds = %if.end230, %if.else
  br label %if.end232

if.end232:                                        ; preds = %if.end231, %if.end145
  %124 = load i8*, i8** %cfirst, align 8, !dbg !1425
  %125 = load i8, i8* %124, align 1, !dbg !1427
  %conv233 = sext i8 %125 to i32, !dbg !1427
  %cmp234 = icmp eq i32 %conv233, 48, !dbg !1428
  br i1 %cmp234, label %if.then236, label %if.end255, !dbg !1429

if.then236:                                       ; preds = %if.end232
  %126 = load i8*, i8** %cfirst, align 8, !dbg !1430
  store i8* %126, i8** %c, align 8, !dbg !1433
  br label %for.cond237, !dbg !1434

for.cond237:                                      ; preds = %for.inc251, %if.then236
  %127 = load i8*, i8** %c, align 8, !dbg !1435
  %128 = load i8*, i8** %last, align 8, !dbg !1437
  %cmp238 = icmp ult i8* %127, %128, !dbg !1438
  br i1 %cmp238, label %for.body240, label %for.end254, !dbg !1439

for.body240:                                      ; preds = %for.cond237
  %129 = load i8*, i8** %c, align 8, !dbg !1440
  %130 = load i8, i8* %129, align 1, !dbg !1443
  %conv241 = sext i8 %130 to i32, !dbg !1443
  %cmp242 = icmp eq i32 %conv241, 46, !dbg !1444
  br i1 %cmp242, label %if.then244, label %if.end245, !dbg !1445

if.then244:                                       ; preds = %for.body240
  br label %for.inc251, !dbg !1446

if.end245:                                        ; preds = %for.body240
  %131 = load i8*, i8** %c, align 8, !dbg !1447
  %132 = load i8, i8* %131, align 1, !dbg !1449
  %conv246 = sext i8 %132 to i32, !dbg !1449
  %cmp247 = icmp ne i32 %conv246, 48, !dbg !1450
  br i1 %cmp247, label %if.then249, label %if.end250, !dbg !1451

if.then249:                                       ; preds = %if.end245
  br label %for.end254, !dbg !1452

if.end250:                                        ; preds = %if.end245
  %133 = load i32, i32* %d, align 4, !dbg !1453
  %dec = add nsw i32 %133, -1, !dbg !1453
  store i32 %dec, i32* %d, align 4, !dbg !1453
  br label %for.inc251, !dbg !1454

for.inc251:                                       ; preds = %if.end250, %if.then244
  %134 = load i8*, i8** %c, align 8, !dbg !1455
  %incdec.ptr252 = getelementptr inbounds i8, i8* %134, i32 1, !dbg !1455
  store i8* %incdec.ptr252, i8** %c, align 8, !dbg !1455
  %135 = load i8*, i8** %cfirst, align 8, !dbg !1456
  %incdec.ptr253 = getelementptr inbounds i8, i8* %135, i32 1, !dbg !1456
  store i8* %incdec.ptr253, i8** %cfirst, align 8, !dbg !1456
  br label %for.cond237, !dbg !1457, !llvm.loop !1458

for.end254:                                       ; preds = %if.then249, %for.cond237
  br label %if.end255, !dbg !1460

if.end255:                                        ; preds = %for.end254, %if.end232
  %136 = load i8*, i8** %dotchar, align 8, !dbg !1461
  %cmp256 = icmp ne i8* %136, null, !dbg !1463
  br i1 %cmp256, label %land.lhs.true258, label %if.end265, !dbg !1464

land.lhs.true258:                                 ; preds = %if.end255
  %137 = load i8*, i8** %dotchar, align 8, !dbg !1465
  %138 = load i8*, i8** %last, align 8, !dbg !1466
  %cmp259 = icmp ult i8* %137, %138, !dbg !1467
  br i1 %cmp259, label %if.then261, label %if.end265, !dbg !1468

if.then261:                                       ; preds = %land.lhs.true258
  %139 = load i8*, i8** %last, align 8, !dbg !1469
  %140 = load i8*, i8** %dotchar, align 8, !dbg !1470
  %sub.ptr.lhs.cast = ptrtoint i8* %139 to i64, !dbg !1471
  %sub.ptr.rhs.cast = ptrtoint i8* %140 to i64, !dbg !1471
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !1471
  %141 = load i32, i32* %exponent, align 4, !dbg !1472
  %conv262 = sext i32 %141 to i64, !dbg !1472
  %sub263 = sub nsw i64 %conv262, %sub.ptr.sub, !dbg !1472
  %conv264 = trunc i64 %sub263 to i32, !dbg !1472
  store i32 %conv264, i32* %exponent, align 4, !dbg !1472
  br label %if.end265, !dbg !1473

if.end265:                                        ; preds = %if.then261, %land.lhs.true258, %if.end255
  %142 = load i32, i32* %d, align 4, !dbg !1474
  %143 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !1476
  %digits266 = getelementptr inbounds %struct.decContext, %struct.decContext* %143, i32 0, i32 0, !dbg !1477
  %144 = load i32, i32* %digits266, align 4, !dbg !1477
  %cmp267 = icmp sle i32 %142, %144, !dbg !1478
  br i1 %cmp267, label %if.then269, label %if.else270, !dbg !1479

if.then269:                                       ; preds = %if.end265
  %145 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1480
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %145, i32 0, i32 3, !dbg !1481
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !1480
  store i16* %arraydecay, i16** %res, align 8, !dbg !1482
  br label %if.end290, !dbg !1483

if.else270:                                       ; preds = %if.end265
  call void @llvm.dbg.declare(metadata i32* %needbytes, metadata !1484, metadata !DIExpression()), !dbg !1486
  %146 = load i32, i32* %d, align 4, !dbg !1487
  %cmp271 = icmp sle i32 %146, 49, !dbg !1487
  br i1 %cmp271, label %cond.true, label %cond.false, !dbg !1487

cond.true:                                        ; preds = %if.else270
  %147 = load i32, i32* %d, align 4, !dbg !1487
  %idxprom = sext i32 %147 to i64, !dbg !1487
  %arrayidx = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom, !dbg !1487
  %148 = load i8, i8* %arrayidx, align 1, !dbg !1487
  %conv273 = zext i8 %148 to i32, !dbg !1487
  br label %cond.end, !dbg !1487

cond.false:                                       ; preds = %if.else270
  %149 = load i32, i32* %d, align 4, !dbg !1487
  %add274 = add nsw i32 %149, 3, !dbg !1487
  %sub275 = sub nsw i32 %add274, 1, !dbg !1487
  %div = sdiv i32 %sub275, 3, !dbg !1487
  br label %cond.end, !dbg !1487

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv273, %cond.true ], [ %div, %cond.false ], !dbg !1487
  %conv276 = sext i32 %cond to i64, !dbg !1487
  %mul = mul i64 %conv276, 2, !dbg !1488
  %conv277 = trunc i64 %mul to i32, !dbg !1487
  store i32 %conv277, i32* %needbytes, align 4, !dbg !1486
  %arraydecay278 = getelementptr inbounds [15 x i16], [15 x i16]* %resbuff, i64 0, i64 0, !dbg !1489
  store i16* %arraydecay278, i16** %res, align 8, !dbg !1490
  %150 = load i32, i32* %needbytes, align 4, !dbg !1491
  %cmp279 = icmp sgt i32 %150, 30, !dbg !1493
  br i1 %cmp279, label %if.then281, label %if.end289, !dbg !1494

if.then281:                                       ; preds = %cond.end
  %151 = load i32, i32* %needbytes, align 4, !dbg !1495
  %conv282 = sext i32 %151 to i64, !dbg !1495
  %call283 = call noalias i8* @malloc(i64 %conv282) #6, !dbg !1497
  %152 = bitcast i8* %call283 to i16*, !dbg !1498
  store i16* %152, i16** %allocres, align 8, !dbg !1499
  %153 = load i16*, i16** %allocres, align 8, !dbg !1500
  %cmp284 = icmp eq i16* %153, null, !dbg !1502
  br i1 %cmp284, label %if.then286, label %if.end288, !dbg !1503

if.then286:                                       ; preds = %if.then281
  %154 = load i32, i32* %status, align 4, !dbg !1504
  %or287 = or i32 %154, 16, !dbg !1504
  store i32 %or287, i32* %status, align 4, !dbg !1504
  br label %do.end, !dbg !1506

if.end288:                                        ; preds = %if.then281
  %155 = load i16*, i16** %allocres, align 8, !dbg !1507
  store i16* %155, i16** %res, align 8, !dbg !1508
  br label %if.end289, !dbg !1509

if.end289:                                        ; preds = %if.end288, %cond.end
  br label %if.end290

if.end290:                                        ; preds = %if.end289, %if.then269
  store i32 0, i32* %out, align 4, !dbg !1510
  %156 = load i16*, i16** %res, align 8, !dbg !1511
  %157 = load i32, i32* %d, align 4, !dbg !1512
  %cmp291 = icmp sle i32 %157, 49, !dbg !1512
  br i1 %cmp291, label %cond.true293, label %cond.false297, !dbg !1512

cond.true293:                                     ; preds = %if.end290
  %158 = load i32, i32* %d, align 4, !dbg !1512
  %idxprom294 = sext i32 %158 to i64, !dbg !1512
  %arrayidx295 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom294, !dbg !1512
  %159 = load i8, i8* %arrayidx295, align 1, !dbg !1512
  %conv296 = zext i8 %159 to i32, !dbg !1512
  br label %cond.end301, !dbg !1512

cond.false297:                                    ; preds = %if.end290
  %160 = load i32, i32* %d, align 4, !dbg !1512
  %add298 = add nsw i32 %160, 3, !dbg !1512
  %sub299 = sub nsw i32 %add298, 1, !dbg !1512
  %div300 = sdiv i32 %sub299, 3, !dbg !1512
  br label %cond.end301, !dbg !1512

cond.end301:                                      ; preds = %cond.false297, %cond.true293
  %cond302 = phi i32 [ %conv296, %cond.true293 ], [ %div300, %cond.false297 ], !dbg !1512
  %idx.ext = sext i32 %cond302 to i64, !dbg !1513
  %add.ptr303 = getelementptr inbounds i16, i16* %156, i64 %idx.ext, !dbg !1513
  %add.ptr304 = getelementptr inbounds i16, i16* %add.ptr303, i64 -1, !dbg !1514
  store i16* %add.ptr304, i16** %up, align 8, !dbg !1515
  %161 = load i32, i32* %d, align 4, !dbg !1516
  %conv305 = sext i32 %161 to i64, !dbg !1516
  %162 = load i16*, i16** %up, align 8, !dbg !1517
  %163 = load i16*, i16** %res, align 8, !dbg !1518
  %sub.ptr.lhs.cast306 = ptrtoint i16* %162 to i64, !dbg !1519
  %sub.ptr.rhs.cast307 = ptrtoint i16* %163 to i64, !dbg !1519
  %sub.ptr.sub308 = sub i64 %sub.ptr.lhs.cast306, %sub.ptr.rhs.cast307, !dbg !1519
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub308, 2, !dbg !1519
  %mul309 = mul nsw i64 %sub.ptr.div, 3, !dbg !1520
  %sub310 = sub nsw i64 %conv305, %mul309, !dbg !1521
  %conv311 = trunc i64 %sub310 to i32, !dbg !1516
  store i32 %conv311, i32* %cut, align 4, !dbg !1522
  %164 = load i8*, i8** %cfirst, align 8, !dbg !1523
  store i8* %164, i8** %c, align 8, !dbg !1525
  br label %for.cond312, !dbg !1526

for.cond312:                                      ; preds = %for.inc335, %cond.end301
  %165 = load i8*, i8** %c, align 8, !dbg !1527
  %166 = load i8, i8* %165, align 1, !dbg !1531
  %conv313 = sext i8 %166 to i32, !dbg !1531
  %cmp314 = icmp eq i32 %conv313, 46, !dbg !1532
  br i1 %cmp314, label %if.then316, label %if.end317, !dbg !1533

if.then316:                                       ; preds = %for.cond312
  br label %for.inc335, !dbg !1534

if.end317:                                        ; preds = %for.cond312
  %167 = load i32, i32* %out, align 4, !dbg !1535
  %shl318 = shl i32 %167, 1, !dbg !1535
  %168 = load i32, i32* %out, align 4, !dbg !1535
  %shl319 = shl i32 %168, 3, !dbg !1535
  %add320 = add nsw i32 %shl318, %shl319, !dbg !1535
  %169 = load i8*, i8** %c, align 8, !dbg !1536
  %170 = load i8, i8* %169, align 1, !dbg !1537
  %conv321 = sext i8 %170 to i32, !dbg !1538
  %add322 = add nsw i32 %add320, %conv321, !dbg !1539
  %sub323 = sub nsw i32 %add322, 48, !dbg !1540
  store i32 %sub323, i32* %out, align 4, !dbg !1541
  %171 = load i8*, i8** %c, align 8, !dbg !1542
  %172 = load i8*, i8** %last, align 8, !dbg !1544
  %cmp324 = icmp eq i8* %171, %172, !dbg !1545
  br i1 %cmp324, label %if.then326, label %if.end327, !dbg !1546

if.then326:                                       ; preds = %if.end317
  br label %for.end337, !dbg !1547

if.end327:                                        ; preds = %if.end317
  %173 = load i32, i32* %cut, align 4, !dbg !1548
  %dec328 = add nsw i32 %173, -1, !dbg !1548
  store i32 %dec328, i32* %cut, align 4, !dbg !1548
  %174 = load i32, i32* %cut, align 4, !dbg !1549
  %cmp329 = icmp sgt i32 %174, 0, !dbg !1551
  br i1 %cmp329, label %if.then331, label %if.end332, !dbg !1552

if.then331:                                       ; preds = %if.end327
  br label %for.inc335, !dbg !1553

if.end332:                                        ; preds = %if.end327
  %175 = load i32, i32* %out, align 4, !dbg !1554
  %conv333 = trunc i32 %175 to i16, !dbg !1555
  %176 = load i16*, i16** %up, align 8, !dbg !1556
  store i16 %conv333, i16* %176, align 2, !dbg !1557
  %177 = load i16*, i16** %up, align 8, !dbg !1558
  %incdec.ptr334 = getelementptr inbounds i16, i16* %177, i32 -1, !dbg !1558
  store i16* %incdec.ptr334, i16** %up, align 8, !dbg !1558
  store i32 3, i32* %cut, align 4, !dbg !1559
  store i32 0, i32* %out, align 4, !dbg !1560
  br label %for.inc335, !dbg !1561

for.inc335:                                       ; preds = %if.end332, %if.then331, %if.then316
  %178 = load i8*, i8** %c, align 8, !dbg !1562
  %incdec.ptr336 = getelementptr inbounds i8, i8* %178, i32 1, !dbg !1562
  store i8* %incdec.ptr336, i8** %c, align 8, !dbg !1562
  br label %for.cond312, !dbg !1563, !llvm.loop !1564

for.end337:                                       ; preds = %if.then326
  %179 = load i32, i32* %out, align 4, !dbg !1567
  %conv338 = trunc i32 %179 to i16, !dbg !1568
  %180 = load i16*, i16** %up, align 8, !dbg !1569
  store i16 %conv338, i16* %180, align 2, !dbg !1570
  %181 = load i8, i8* %bits, align 1, !dbg !1571
  %182 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1572
  %bits339 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %182, i32 0, i32 2, !dbg !1573
  store i8 %181, i8* %bits339, align 4, !dbg !1574
  %183 = load i32, i32* %exponent, align 4, !dbg !1575
  %184 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1576
  %exponent340 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %184, i32 0, i32 1, !dbg !1577
  store i32 %183, i32* %exponent340, align 4, !dbg !1578
  %185 = load i32, i32* %d, align 4, !dbg !1579
  %186 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1580
  %digits341 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %186, i32 0, i32 0, !dbg !1581
  store i32 %185, i32* %digits341, align 4, !dbg !1582
  %187 = load i32, i32* %d, align 4, !dbg !1583
  %188 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !1585
  %digits342 = getelementptr inbounds %struct.decContext, %struct.decContext* %188, i32 0, i32 0, !dbg !1586
  %189 = load i32, i32* %digits342, align 4, !dbg !1586
  %cmp343 = icmp sgt i32 %187, %189, !dbg !1587
  br i1 %cmp343, label %if.then345, label %if.else346, !dbg !1588

if.then345:                                       ; preds = %for.end337
  store i32 0, i32* %residue, align 4, !dbg !1589
  %190 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1591
  %191 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !1592
  %192 = load i16*, i16** %res, align 8, !dbg !1593
  %193 = load i32, i32* %d, align 4, !dbg !1594
  call void @decSetCoeff(%struct.decNumber* %190, %struct.decContext* %191, i16* %192, i32 %193, i32* %residue, i32* %status), !dbg !1595
  %194 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1596
  %195 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !1597
  call void @decFinalize(%struct.decNumber* %194, %struct.decContext* %195, i32* %residue, i32* %status), !dbg !1598
  br label %if.end362, !dbg !1599

if.else346:                                       ; preds = %for.end337
  %196 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1600
  %exponent347 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %196, i32 0, i32 1, !dbg !1603
  %197 = load i32, i32* %exponent347, align 4, !dbg !1603
  %sub348 = sub nsw i32 %197, 1, !dbg !1604
  %198 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !1605
  %emin = getelementptr inbounds %struct.decContext, %struct.decContext* %198, i32 0, i32 2, !dbg !1606
  %199 = load i32, i32* %emin, align 4, !dbg !1606
  %200 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1607
  %digits349 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %200, i32 0, i32 0, !dbg !1608
  %201 = load i32, i32* %digits349, align 4, !dbg !1608
  %sub350 = sub nsw i32 %199, %201, !dbg !1609
  %cmp351 = icmp slt i32 %sub348, %sub350, !dbg !1610
  br i1 %cmp351, label %if.then360, label %lor.lhs.false353, !dbg !1611

lor.lhs.false353:                                 ; preds = %if.else346
  %202 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1612
  %exponent354 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %202, i32 0, i32 1, !dbg !1613
  %203 = load i32, i32* %exponent354, align 4, !dbg !1613
  %sub355 = sub nsw i32 %203, 1, !dbg !1614
  %204 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !1615
  %emax = getelementptr inbounds %struct.decContext, %struct.decContext* %204, i32 0, i32 1, !dbg !1616
  %205 = load i32, i32* %emax, align 4, !dbg !1616
  %206 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !1617
  %digits356 = getelementptr inbounds %struct.decContext, %struct.decContext* %206, i32 0, i32 0, !dbg !1618
  %207 = load i32, i32* %digits356, align 4, !dbg !1618
  %sub357 = sub nsw i32 %205, %207, !dbg !1619
  %cmp358 = icmp sgt i32 %sub355, %sub357, !dbg !1620
  br i1 %cmp358, label %if.then360, label %if.end361, !dbg !1621

if.then360:                                       ; preds = %lor.lhs.false353, %if.else346
  store i32 0, i32* %residue, align 4, !dbg !1622
  %208 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1624
  %209 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !1625
  call void @decFinalize(%struct.decNumber* %208, %struct.decContext* %209, i32* %residue, i32* %status), !dbg !1626
  br label %if.end361, !dbg !1627

if.end361:                                        ; preds = %if.then360, %lor.lhs.false353
  br label %if.end362

if.end362:                                        ; preds = %if.end361, %if.then345
  br label %do.end, !dbg !1628

do.end:                                           ; preds = %if.end362, %if.then286, %if.then209, %if.then177, %if.then158, %if.then143, %if.then138, %if.then132, %if.then113, %if.then101, %if.then91, %if.then81, %if.then51, %if.then44, %if.then40
  %210 = load i16*, i16** %allocres, align 8, !dbg !1629
  %cmp363 = icmp ne i16* %210, null, !dbg !1631
  br i1 %cmp363, label %if.then365, label %if.end366, !dbg !1632

if.then365:                                       ; preds = %do.end
  %211 = load i16*, i16** %allocres, align 8, !dbg !1633
  %212 = bitcast i16* %211 to i8*, !dbg !1633
  call void @free(i8* %212) #6, !dbg !1634
  br label %if.end366, !dbg !1634

if.end366:                                        ; preds = %if.then365, %do.end
  %213 = load i32, i32* %status, align 4, !dbg !1635
  %cmp367 = icmp ne i32 %213, 0, !dbg !1637
  br i1 %cmp367, label %if.then369, label %if.end370, !dbg !1638

if.then369:                                       ; preds = %if.end366
  %214 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1639
  %215 = load i32, i32* %status, align 4, !dbg !1640
  %216 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !1641
  call void @decStatus(%struct.decNumber* %214, i32 %215, %struct.decContext* %216), !dbg !1642
  br label %if.end370, !dbg !1642

if.end370:                                        ; preds = %if.then369, %if.end366
  %217 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1643
  ret %struct.decNumber* %217, !dbg !1644
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @decBiStr(i8* %targ, i8* %str1, i8* %str2) #0 !dbg !1645 {
entry:
  %retval = alloca i8, align 1
  %targ.addr = alloca i8*, align 8
  %str1.addr = alloca i8*, align 8
  %str2.addr = alloca i8*, align 8
  store i8* %targ, i8** %targ.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %targ.addr, metadata !1648, metadata !DIExpression()), !dbg !1649
  store i8* %str1, i8** %str1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str1.addr, metadata !1650, metadata !DIExpression()), !dbg !1651
  store i8* %str2, i8** %str2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str2.addr, metadata !1652, metadata !DIExpression()), !dbg !1653
  br label %for.cond, !dbg !1654

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %targ.addr, align 8, !dbg !1655
  %1 = load i8, i8* %0, align 1, !dbg !1660
  %conv = sext i8 %1 to i32, !dbg !1660
  %2 = load i8*, i8** %str1.addr, align 8, !dbg !1661
  %3 = load i8, i8* %2, align 1, !dbg !1662
  %conv1 = sext i8 %3 to i32, !dbg !1662
  %cmp = icmp ne i32 %conv, %conv1, !dbg !1663
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !1664

land.lhs.true:                                    ; preds = %for.cond
  %4 = load i8*, i8** %targ.addr, align 8, !dbg !1665
  %5 = load i8, i8* %4, align 1, !dbg !1666
  %conv3 = sext i8 %5 to i32, !dbg !1666
  %6 = load i8*, i8** %str2.addr, align 8, !dbg !1667
  %7 = load i8, i8* %6, align 1, !dbg !1668
  %conv4 = sext i8 %7 to i32, !dbg !1668
  %cmp5 = icmp ne i32 %conv3, %conv4, !dbg !1669
  br i1 %cmp5, label %if.then, label %if.end, !dbg !1670

if.then:                                          ; preds = %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !1671
  br label %return, !dbg !1671

if.end:                                           ; preds = %land.lhs.true, %for.cond
  %8 = load i8*, i8** %targ.addr, align 8, !dbg !1672
  %9 = load i8, i8* %8, align 1, !dbg !1674
  %conv7 = sext i8 %9 to i32, !dbg !1674
  %cmp8 = icmp eq i32 %conv7, 0, !dbg !1675
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !1676

if.then10:                                        ; preds = %if.end
  br label %for.end, !dbg !1677

if.end11:                                         ; preds = %if.end
  br label %for.inc, !dbg !1678

for.inc:                                          ; preds = %if.end11
  %10 = load i8*, i8** %targ.addr, align 8, !dbg !1679
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1, !dbg !1679
  store i8* %incdec.ptr, i8** %targ.addr, align 8, !dbg !1679
  %11 = load i8*, i8** %str1.addr, align 8, !dbg !1680
  %incdec.ptr12 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !1680
  store i8* %incdec.ptr12, i8** %str1.addr, align 8, !dbg !1680
  %12 = load i8*, i8** %str2.addr, align 8, !dbg !1681
  %incdec.ptr13 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !1681
  store i8* %incdec.ptr13, i8** %str2.addr, align 8, !dbg !1681
  br label %for.cond, !dbg !1682, !llvm.loop !1683

for.end:                                          ; preds = %if.then10
  store i8 1, i8* %retval, align 1, !dbg !1686
  br label %return, !dbg !1686

return:                                           ; preds = %for.end, %if.then
  %13 = load i8, i8* %retval, align 1, !dbg !1687
  ret i8 %13, !dbg !1687
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #3

; Function Attrs: noinline nounwind uwtable
define internal void @decSetCoeff(%struct.decNumber* %dn, %struct.decContext* %set, i16* %lsu, i32 %len, i32* %residue, i32* %status) #0 !dbg !1688 {
entry:
  %dn.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %lsu.addr = alloca i16*, align 8
  %len.addr = alloca i32, align 4
  %residue.addr = alloca i32*, align 8
  %status.addr = alloca i32*, align 8
  %discard = alloca i32, align 4
  %cut = alloca i32, align 4
  %up = alloca i16*, align 8
  %target = alloca i16*, align 8
  %count = alloca i32, align 4
  %temp = alloca i32, align 4
  %half = alloca i16, align 2
  %discard1 = alloca i32, align 4
  %quot = alloca i32, align 4
  %rem = alloca i32, align 4
  store %struct.decNumber* %dn, %struct.decNumber** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dn.addr, metadata !1692, metadata !DIExpression()), !dbg !1693
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !1694, metadata !DIExpression()), !dbg !1695
  store i16* %lsu, i16** %lsu.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %lsu.addr, metadata !1696, metadata !DIExpression()), !dbg !1697
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !1698, metadata !DIExpression()), !dbg !1699
  store i32* %residue, i32** %residue.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %residue.addr, metadata !1700, metadata !DIExpression()), !dbg !1701
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !1702, metadata !DIExpression()), !dbg !1703
  call void @llvm.dbg.declare(metadata i32* %discard, metadata !1704, metadata !DIExpression()), !dbg !1705
  call void @llvm.dbg.declare(metadata i32* %cut, metadata !1706, metadata !DIExpression()), !dbg !1707
  call void @llvm.dbg.declare(metadata i16** %up, metadata !1708, metadata !DIExpression()), !dbg !1709
  call void @llvm.dbg.declare(metadata i16** %target, metadata !1710, metadata !DIExpression()), !dbg !1711
  call void @llvm.dbg.declare(metadata i32* %count, metadata !1712, metadata !DIExpression()), !dbg !1713
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !1714, metadata !DIExpression()), !dbg !1715
  %0 = load i32, i32* %len.addr, align 4, !dbg !1716
  %1 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !1717
  %digits = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i32 0, i32 0, !dbg !1718
  %2 = load i32, i32* %digits, align 4, !dbg !1718
  %sub = sub nsw i32 %0, %2, !dbg !1719
  store i32 %sub, i32* %discard, align 4, !dbg !1720
  %3 = load i32, i32* %discard, align 4, !dbg !1721
  %cmp = icmp sle i32 %3, 0, !dbg !1723
  br i1 %cmp, label %if.then, label %if.end13, !dbg !1724

if.then:                                          ; preds = %entry
  %4 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1725
  %lsu1 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 3, !dbg !1728
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu1, i64 0, i64 0, !dbg !1725
  %5 = load i16*, i16** %lsu.addr, align 8, !dbg !1729
  %cmp2 = icmp ne i16* %arraydecay, %5, !dbg !1730
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !1731

if.then3:                                         ; preds = %if.then
  %6 = load i32, i32* %len.addr, align 4, !dbg !1732
  store i32 %6, i32* %count, align 4, !dbg !1734
  %7 = load i16*, i16** %lsu.addr, align 8, !dbg !1735
  store i16* %7, i16** %up, align 8, !dbg !1736
  %8 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1737
  %lsu4 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i32 0, i32 3, !dbg !1739
  %arraydecay5 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu4, i64 0, i64 0, !dbg !1737
  store i16* %arraydecay5, i16** %target, align 8, !dbg !1740
  br label %for.cond, !dbg !1741

for.cond:                                         ; preds = %for.inc, %if.then3
  %9 = load i32, i32* %count, align 4, !dbg !1742
  %cmp6 = icmp sgt i32 %9, 0, !dbg !1744
  br i1 %cmp6, label %for.body, label %for.end, !dbg !1745

for.body:                                         ; preds = %for.cond
  %10 = load i16*, i16** %up, align 8, !dbg !1746
  %11 = load i16, i16* %10, align 2, !dbg !1747
  %12 = load i16*, i16** %target, align 8, !dbg !1748
  store i16 %11, i16* %12, align 2, !dbg !1749
  br label %for.inc, !dbg !1750

for.inc:                                          ; preds = %for.body
  %13 = load i16*, i16** %target, align 8, !dbg !1751
  %incdec.ptr = getelementptr inbounds i16, i16* %13, i32 1, !dbg !1751
  store i16* %incdec.ptr, i16** %target, align 8, !dbg !1751
  %14 = load i16*, i16** %up, align 8, !dbg !1752
  %incdec.ptr7 = getelementptr inbounds i16, i16* %14, i32 1, !dbg !1752
  store i16* %incdec.ptr7, i16** %up, align 8, !dbg !1752
  %15 = load i32, i32* %count, align 4, !dbg !1753
  %sub8 = sub nsw i32 %15, 3, !dbg !1753
  store i32 %sub8, i32* %count, align 4, !dbg !1753
  br label %for.cond, !dbg !1754, !llvm.loop !1755

for.end:                                          ; preds = %for.cond
  %16 = load i32, i32* %len.addr, align 4, !dbg !1757
  %17 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1758
  %digits9 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %17, i32 0, i32 0, !dbg !1759
  store i32 %16, i32* %digits9, align 4, !dbg !1760
  br label %if.end, !dbg !1761

if.end:                                           ; preds = %for.end, %if.then
  %18 = load i32*, i32** %residue.addr, align 8, !dbg !1762
  %19 = load i32, i32* %18, align 4, !dbg !1764
  %cmp10 = icmp ne i32 %19, 0, !dbg !1765
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !1766

if.then11:                                        ; preds = %if.end
  %20 = load i32*, i32** %status.addr, align 8, !dbg !1767
  %21 = load i32, i32* %20, align 4, !dbg !1768
  %or = or i32 %21, 2080, !dbg !1768
  store i32 %or, i32* %20, align 4, !dbg !1768
  br label %if.end12, !dbg !1769

if.end12:                                         ; preds = %if.then11, %if.end
  br label %return, !dbg !1770

if.end13:                                         ; preds = %entry
  %22 = load i32, i32* %discard, align 4, !dbg !1771
  %23 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1772
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %23, i32 0, i32 1, !dbg !1773
  %24 = load i32, i32* %exponent, align 4, !dbg !1774
  %add = add nsw i32 %24, %22, !dbg !1774
  store i32 %add, i32* %exponent, align 4, !dbg !1774
  %25 = load i32*, i32** %status.addr, align 8, !dbg !1775
  %26 = load i32, i32* %25, align 4, !dbg !1776
  %or14 = or i32 %26, 2048, !dbg !1776
  store i32 %or14, i32* %25, align 4, !dbg !1776
  %27 = load i32*, i32** %residue.addr, align 8, !dbg !1777
  %28 = load i32, i32* %27, align 4, !dbg !1779
  %cmp15 = icmp sgt i32 %28, 1, !dbg !1780
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !1781

if.then16:                                        ; preds = %if.end13
  %29 = load i32*, i32** %residue.addr, align 8, !dbg !1782
  store i32 1, i32* %29, align 4, !dbg !1783
  br label %if.end17, !dbg !1784

if.end17:                                         ; preds = %if.then16, %if.end13
  %30 = load i32, i32* %discard, align 4, !dbg !1785
  %31 = load i32, i32* %len.addr, align 4, !dbg !1787
  %cmp18 = icmp sgt i32 %30, %31, !dbg !1788
  br i1 %cmp18, label %if.then19, label %if.end42, !dbg !1789

if.then19:                                        ; preds = %if.end17
  %32 = load i32*, i32** %residue.addr, align 8, !dbg !1790
  %33 = load i32, i32* %32, align 4, !dbg !1793
  %cmp20 = icmp sle i32 %33, 0, !dbg !1794
  br i1 %cmp20, label %if.then21, label %if.end33, !dbg !1795

if.then21:                                        ; preds = %if.then19
  %34 = load i32, i32* %len.addr, align 4, !dbg !1796
  store i32 %34, i32* %count, align 4, !dbg !1798
  %35 = load i16*, i16** %lsu.addr, align 8, !dbg !1799
  store i16* %35, i16** %up, align 8, !dbg !1801
  br label %for.cond22, !dbg !1802

for.cond22:                                       ; preds = %for.inc29, %if.then21
  %36 = load i32, i32* %count, align 4, !dbg !1803
  %cmp23 = icmp sgt i32 %36, 0, !dbg !1805
  br i1 %cmp23, label %for.body24, label %for.end32, !dbg !1806

for.body24:                                       ; preds = %for.cond22
  %37 = load i16*, i16** %up, align 8, !dbg !1807
  %38 = load i16, i16* %37, align 2, !dbg !1809
  %conv = zext i16 %38 to i32, !dbg !1809
  %cmp25 = icmp ne i32 %conv, 0, !dbg !1810
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !1811

if.then27:                                        ; preds = %for.body24
  %39 = load i32*, i32** %residue.addr, align 8, !dbg !1812
  store i32 1, i32* %39, align 4, !dbg !1814
  br label %for.end32, !dbg !1815

if.end28:                                         ; preds = %for.body24
  br label %for.inc29, !dbg !1816

for.inc29:                                        ; preds = %if.end28
  %40 = load i16*, i16** %up, align 8, !dbg !1817
  %incdec.ptr30 = getelementptr inbounds i16, i16* %40, i32 1, !dbg !1817
  store i16* %incdec.ptr30, i16** %up, align 8, !dbg !1817
  %41 = load i32, i32* %count, align 4, !dbg !1818
  %sub31 = sub nsw i32 %41, 3, !dbg !1818
  store i32 %sub31, i32* %count, align 4, !dbg !1818
  br label %for.cond22, !dbg !1819, !llvm.loop !1820

for.end32:                                        ; preds = %if.then27, %for.cond22
  br label %if.end33, !dbg !1822

if.end33:                                         ; preds = %for.end32, %if.then19
  %42 = load i32*, i32** %residue.addr, align 8, !dbg !1823
  %43 = load i32, i32* %42, align 4, !dbg !1825
  %cmp34 = icmp ne i32 %43, 0, !dbg !1826
  br i1 %cmp34, label %if.then36, label %if.end38, !dbg !1827

if.then36:                                        ; preds = %if.end33
  %44 = load i32*, i32** %status.addr, align 8, !dbg !1828
  %45 = load i32, i32* %44, align 4, !dbg !1829
  %or37 = or i32 %45, 32, !dbg !1829
  store i32 %or37, i32* %44, align 4, !dbg !1829
  br label %if.end38, !dbg !1830

if.end38:                                         ; preds = %if.then36, %if.end33
  %46 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1831
  %lsu39 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %46, i32 0, i32 3, !dbg !1832
  %arraydecay40 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu39, i64 0, i64 0, !dbg !1833
  store i16 0, i16* %arraydecay40, align 2, !dbg !1834
  %47 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1835
  %digits41 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %47, i32 0, i32 0, !dbg !1836
  store i32 1, i32* %digits41, align 4, !dbg !1837
  br label %return, !dbg !1838

if.end42:                                         ; preds = %if.end17
  store i32 0, i32* %count, align 4, !dbg !1839
  %48 = load i16*, i16** %lsu.addr, align 8, !dbg !1840
  store i16* %48, i16** %up, align 8, !dbg !1842
  br label %for.cond43, !dbg !1843

for.cond43:                                       ; preds = %for.inc54, %if.end42
  %49 = load i32, i32* %count, align 4, !dbg !1844
  %add44 = add nsw i32 %49, 3, !dbg !1844
  store i32 %add44, i32* %count, align 4, !dbg !1844
  %50 = load i32, i32* %count, align 4, !dbg !1847
  %51 = load i32, i32* %discard, align 4, !dbg !1849
  %cmp45 = icmp sge i32 %50, %51, !dbg !1850
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !1851

if.then47:                                        ; preds = %for.cond43
  br label %for.end56, !dbg !1852

if.end48:                                         ; preds = %for.cond43
  %52 = load i16*, i16** %up, align 8, !dbg !1853
  %53 = load i16, i16* %52, align 2, !dbg !1855
  %conv49 = zext i16 %53 to i32, !dbg !1855
  %cmp50 = icmp ne i32 %conv49, 0, !dbg !1856
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !1857

if.then52:                                        ; preds = %if.end48
  %54 = load i32*, i32** %residue.addr, align 8, !dbg !1858
  store i32 1, i32* %54, align 4, !dbg !1859
  br label %if.end53, !dbg !1860

if.end53:                                         ; preds = %if.then52, %if.end48
  br label %for.inc54, !dbg !1861

for.inc54:                                        ; preds = %if.end53
  %55 = load i16*, i16** %up, align 8, !dbg !1862
  %incdec.ptr55 = getelementptr inbounds i16, i16* %55, i32 1, !dbg !1862
  store i16* %incdec.ptr55, i16** %up, align 8, !dbg !1862
  br label %for.cond43, !dbg !1863, !llvm.loop !1864

for.end56:                                        ; preds = %if.then47
  %56 = load i32, i32* %discard, align 4, !dbg !1867
  %57 = load i32, i32* %count, align 4, !dbg !1868
  %sub57 = sub nsw i32 %57, 3, !dbg !1869
  %sub58 = sub nsw i32 %56, %sub57, !dbg !1870
  %sub59 = sub nsw i32 %sub58, 1, !dbg !1871
  store i32 %sub59, i32* %cut, align 4, !dbg !1872
  %58 = load i32, i32* %cut, align 4, !dbg !1873
  %cmp60 = icmp eq i32 %58, 2, !dbg !1875
  br i1 %cmp60, label %if.then62, label %if.else108, !dbg !1876

if.then62:                                        ; preds = %for.end56
  call void @llvm.dbg.declare(metadata i16* %half, metadata !1877, metadata !DIExpression()), !dbg !1879
  %59 = load i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 3), align 4, !dbg !1880
  %conv63 = trunc i32 %59 to i16, !dbg !1881
  %conv64 = zext i16 %conv63 to i32, !dbg !1881
  %shr = ashr i32 %conv64, 1, !dbg !1882
  %conv65 = trunc i32 %shr to i16, !dbg !1881
  store i16 %conv65, i16* %half, align 2, !dbg !1879
  %60 = load i16*, i16** %up, align 8, !dbg !1883
  %61 = load i16, i16* %60, align 2, !dbg !1885
  %conv66 = zext i16 %61 to i32, !dbg !1885
  %62 = load i16, i16* %half, align 2, !dbg !1886
  %conv67 = zext i16 %62 to i32, !dbg !1886
  %cmp68 = icmp sge i32 %conv66, %conv67, !dbg !1887
  br i1 %cmp68, label %if.then70, label %if.else78, !dbg !1888

if.then70:                                        ; preds = %if.then62
  %63 = load i16*, i16** %up, align 8, !dbg !1889
  %64 = load i16, i16* %63, align 2, !dbg !1892
  %conv71 = zext i16 %64 to i32, !dbg !1892
  %65 = load i16, i16* %half, align 2, !dbg !1893
  %conv72 = zext i16 %65 to i32, !dbg !1893
  %cmp73 = icmp sgt i32 %conv71, %conv72, !dbg !1894
  br i1 %cmp73, label %if.then75, label %if.else, !dbg !1895

if.then75:                                        ; preds = %if.then70
  %66 = load i32*, i32** %residue.addr, align 8, !dbg !1896
  store i32 7, i32* %66, align 4, !dbg !1897
  br label %if.end77, !dbg !1898

if.else:                                          ; preds = %if.then70
  %67 = load i32*, i32** %residue.addr, align 8, !dbg !1899
  %68 = load i32, i32* %67, align 4, !dbg !1900
  %add76 = add nsw i32 %68, 5, !dbg !1900
  store i32 %add76, i32* %67, align 4, !dbg !1900
  br label %if.end77

if.end77:                                         ; preds = %if.else, %if.then75
  br label %if.end84, !dbg !1901

if.else78:                                        ; preds = %if.then62
  %69 = load i16*, i16** %up, align 8, !dbg !1902
  %70 = load i16, i16* %69, align 2, !dbg !1905
  %conv79 = zext i16 %70 to i32, !dbg !1905
  %cmp80 = icmp ne i32 %conv79, 0, !dbg !1906
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !1907

if.then82:                                        ; preds = %if.else78
  %71 = load i32*, i32** %residue.addr, align 8, !dbg !1908
  store i32 3, i32* %71, align 4, !dbg !1909
  br label %if.end83, !dbg !1910

if.end83:                                         ; preds = %if.then82, %if.else78
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.end77
  %72 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !1911
  %digits85 = getelementptr inbounds %struct.decContext, %struct.decContext* %72, i32 0, i32 0, !dbg !1913
  %73 = load i32, i32* %digits85, align 4, !dbg !1913
  %cmp86 = icmp sle i32 %73, 0, !dbg !1914
  br i1 %cmp86, label %if.then88, label %if.else92, !dbg !1915

if.then88:                                        ; preds = %if.end84
  %74 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1916
  %lsu89 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %74, i32 0, i32 3, !dbg !1918
  %arraydecay90 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu89, i64 0, i64 0, !dbg !1919
  store i16 0, i16* %arraydecay90, align 2, !dbg !1920
  %75 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1921
  %digits91 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %75, i32 0, i32 0, !dbg !1922
  store i32 1, i32* %digits91, align 4, !dbg !1923
  br label %if.end107, !dbg !1924

if.else92:                                        ; preds = %if.end84
  %76 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !1925
  %digits93 = getelementptr inbounds %struct.decContext, %struct.decContext* %76, i32 0, i32 0, !dbg !1927
  %77 = load i32, i32* %digits93, align 4, !dbg !1927
  store i32 %77, i32* %count, align 4, !dbg !1928
  %78 = load i32, i32* %count, align 4, !dbg !1929
  %79 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1930
  %digits94 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %79, i32 0, i32 0, !dbg !1931
  store i32 %78, i32* %digits94, align 4, !dbg !1932
  %80 = load i16*, i16** %up, align 8, !dbg !1933
  %incdec.ptr95 = getelementptr inbounds i16, i16* %80, i32 1, !dbg !1933
  store i16* %incdec.ptr95, i16** %up, align 8, !dbg !1933
  %81 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !1934
  %lsu96 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %81, i32 0, i32 3, !dbg !1936
  %arraydecay97 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu96, i64 0, i64 0, !dbg !1934
  store i16* %arraydecay97, i16** %target, align 8, !dbg !1937
  br label %for.cond98, !dbg !1938

for.cond98:                                       ; preds = %for.inc102, %if.else92
  %82 = load i32, i32* %count, align 4, !dbg !1939
  %cmp99 = icmp sgt i32 %82, 0, !dbg !1941
  br i1 %cmp99, label %for.body101, label %for.end106, !dbg !1942

for.body101:                                      ; preds = %for.cond98
  %83 = load i16*, i16** %up, align 8, !dbg !1943
  %84 = load i16, i16* %83, align 2, !dbg !1944
  %85 = load i16*, i16** %target, align 8, !dbg !1945
  store i16 %84, i16* %85, align 2, !dbg !1946
  br label %for.inc102, !dbg !1947

for.inc102:                                       ; preds = %for.body101
  %86 = load i16*, i16** %target, align 8, !dbg !1948
  %incdec.ptr103 = getelementptr inbounds i16, i16* %86, i32 1, !dbg !1948
  store i16* %incdec.ptr103, i16** %target, align 8, !dbg !1948
  %87 = load i16*, i16** %up, align 8, !dbg !1949
  %incdec.ptr104 = getelementptr inbounds i16, i16* %87, i32 1, !dbg !1949
  store i16* %incdec.ptr104, i16** %up, align 8, !dbg !1949
  %88 = load i32, i32* %count, align 4, !dbg !1950
  %sub105 = sub nsw i32 %88, 3, !dbg !1950
  store i32 %sub105, i32* %count, align 4, !dbg !1950
  br label %for.cond98, !dbg !1951, !llvm.loop !1952

for.end106:                                       ; preds = %for.cond98
  br label %if.end107

if.end107:                                        ; preds = %for.end106, %if.then88
  br label %if.end184, !dbg !1954

if.else108:                                       ; preds = %for.end56
  call void @llvm.dbg.declare(metadata i32* %discard1, metadata !1955, metadata !DIExpression()), !dbg !1957
  call void @llvm.dbg.declare(metadata i32* %quot, metadata !1958, metadata !DIExpression()), !dbg !1959
  call void @llvm.dbg.declare(metadata i32* %rem, metadata !1960, metadata !DIExpression()), !dbg !1961
  %89 = load i32, i32* %cut, align 4, !dbg !1962
  %cmp109 = icmp eq i32 %89, 0, !dbg !1964
  br i1 %cmp109, label %if.then111, label %if.else113, !dbg !1965

if.then111:                                       ; preds = %if.else108
  %90 = load i16*, i16** %up, align 8, !dbg !1966
  %91 = load i16, i16* %90, align 2, !dbg !1967
  %conv112 = zext i16 %91 to i32, !dbg !1967
  store i32 %conv112, i32* %quot, align 4, !dbg !1968
  br label %if.end126, !dbg !1969

if.else113:                                       ; preds = %if.else108
  %92 = load i16*, i16** %up, align 8, !dbg !1970
  %93 = load i16, i16* %92, align 2, !dbg !1970
  %conv114 = zext i16 %93 to i32, !dbg !1970
  %94 = load i32, i32* %cut, align 4, !dbg !1970
  %shr115 = lshr i32 %conv114, %94, !dbg !1970
  %95 = load i32, i32* %cut, align 4, !dbg !1970
  %idxprom = zext i32 %95 to i64, !dbg !1970
  %arrayidx = getelementptr inbounds [5 x i32], [5 x i32]* @multies, i64 0, i64 %idxprom, !dbg !1970
  %96 = load i32, i32* %arrayidx, align 4, !dbg !1970
  %mul = mul i32 %shr115, %96, !dbg !1970
  %shr116 = lshr i32 %mul, 17, !dbg !1970
  store i32 %shr116, i32* %quot, align 4, !dbg !1972
  %97 = load i16*, i16** %up, align 8, !dbg !1973
  %98 = load i16, i16* %97, align 2, !dbg !1974
  %conv117 = zext i16 %98 to i32, !dbg !1974
  %99 = load i32, i32* %quot, align 4, !dbg !1975
  %100 = load i32, i32* %cut, align 4, !dbg !1976
  %idxprom118 = zext i32 %100 to i64, !dbg !1977
  %arrayidx119 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom118, !dbg !1977
  %101 = load i32, i32* %arrayidx119, align 4, !dbg !1977
  %mul120 = mul i32 %99, %101, !dbg !1978
  %sub121 = sub i32 %conv117, %mul120, !dbg !1979
  store i32 %sub121, i32* %rem, align 4, !dbg !1980
  %102 = load i32, i32* %rem, align 4, !dbg !1981
  %cmp122 = icmp ne i32 %102, 0, !dbg !1983
  br i1 %cmp122, label %if.then124, label %if.end125, !dbg !1984

if.then124:                                       ; preds = %if.else113
  %103 = load i32*, i32** %residue.addr, align 8, !dbg !1985
  store i32 1, i32* %103, align 4, !dbg !1986
  br label %if.end125, !dbg !1987

if.end125:                                        ; preds = %if.then124, %if.else113
  br label %if.end126

if.end126:                                        ; preds = %if.end125, %if.then111
  %104 = load i32, i32* %quot, align 4, !dbg !1988
  %mul127 = mul i32 %104, 6554, !dbg !1989
  %shr128 = lshr i32 %mul127, 16, !dbg !1990
  store i32 %shr128, i32* %temp, align 4, !dbg !1991
  %105 = load i32, i32* %quot, align 4, !dbg !1992
  %106 = load i32, i32* %temp, align 4, !dbg !1993
  %shl = shl i32 %106, 1, !dbg !1993
  %107 = load i32, i32* %temp, align 4, !dbg !1993
  %shl129 = shl i32 %107, 3, !dbg !1993
  %add130 = add i32 %shl, %shl129, !dbg !1993
  %sub131 = sub i32 %105, %add130, !dbg !1994
  store i32 %sub131, i32* %discard1, align 4, !dbg !1995
  %108 = load i32, i32* %temp, align 4, !dbg !1996
  store i32 %108, i32* %quot, align 4, !dbg !1997
  %109 = load i32, i32* %discard1, align 4, !dbg !1998
  %idxprom132 = zext i32 %109 to i64, !dbg !1999
  %arrayidx133 = getelementptr inbounds [10 x i8], [10 x i8]* @resmap, i64 0, i64 %idxprom132, !dbg !1999
  %110 = load i8, i8* %arrayidx133, align 1, !dbg !1999
  %conv134 = zext i8 %110 to i32, !dbg !1999
  %111 = load i32*, i32** %residue.addr, align 8, !dbg !2000
  %112 = load i32, i32* %111, align 4, !dbg !2001
  %add135 = add nsw i32 %112, %conv134, !dbg !2001
  store i32 %add135, i32* %111, align 4, !dbg !2001
  %113 = load i32, i32* %cut, align 4, !dbg !2002
  %inc = add i32 %113, 1, !dbg !2002
  store i32 %inc, i32* %cut, align 4, !dbg !2002
  %114 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2003
  %digits136 = getelementptr inbounds %struct.decContext, %struct.decContext* %114, i32 0, i32 0, !dbg !2005
  %115 = load i32, i32* %digits136, align 4, !dbg !2005
  %cmp137 = icmp sle i32 %115, 0, !dbg !2006
  br i1 %cmp137, label %if.then139, label %if.else143, !dbg !2007

if.then139:                                       ; preds = %if.end126
  %116 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2008
  %lsu140 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %116, i32 0, i32 3, !dbg !2010
  %arraydecay141 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu140, i64 0, i64 0, !dbg !2011
  store i16 0, i16* %arraydecay141, align 2, !dbg !2012
  %117 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2013
  %digits142 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %117, i32 0, i32 0, !dbg !2014
  store i32 1, i32* %digits142, align 4, !dbg !2015
  br label %if.end183, !dbg !2016

if.else143:                                       ; preds = %if.end126
  %118 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2017
  %digits144 = getelementptr inbounds %struct.decContext, %struct.decContext* %118, i32 0, i32 0, !dbg !2019
  %119 = load i32, i32* %digits144, align 4, !dbg !2019
  store i32 %119, i32* %count, align 4, !dbg !2020
  %120 = load i32, i32* %count, align 4, !dbg !2021
  %121 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2022
  %digits145 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %121, i32 0, i32 0, !dbg !2023
  store i32 %120, i32* %digits145, align 4, !dbg !2024
  %122 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2025
  %lsu146 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %122, i32 0, i32 3, !dbg !2027
  %arraydecay147 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu146, i64 0, i64 0, !dbg !2025
  store i16* %arraydecay147, i16** %target, align 8, !dbg !2028
  br label %for.cond148, !dbg !2029

for.cond148:                                      ; preds = %for.inc180, %if.else143
  %123 = load i32, i32* %quot, align 4, !dbg !2030
  %conv149 = trunc i32 %123 to i16, !dbg !2033
  %124 = load i16*, i16** %target, align 8, !dbg !2034
  store i16 %conv149, i16* %124, align 2, !dbg !2035
  %125 = load i32, i32* %cut, align 4, !dbg !2036
  %sub150 = sub i32 3, %125, !dbg !2037
  %126 = load i32, i32* %count, align 4, !dbg !2038
  %sub151 = sub i32 %126, %sub150, !dbg !2038
  store i32 %sub151, i32* %count, align 4, !dbg !2038
  %127 = load i32, i32* %count, align 4, !dbg !2039
  %cmp152 = icmp sle i32 %127, 0, !dbg !2041
  br i1 %cmp152, label %if.then154, label %if.end155, !dbg !2042

if.then154:                                       ; preds = %for.cond148
  br label %for.end182, !dbg !2043

if.end155:                                        ; preds = %for.cond148
  %128 = load i16*, i16** %up, align 8, !dbg !2044
  %incdec.ptr156 = getelementptr inbounds i16, i16* %128, i32 1, !dbg !2044
  store i16* %incdec.ptr156, i16** %up, align 8, !dbg !2044
  %129 = load i16*, i16** %up, align 8, !dbg !2045
  %130 = load i16, i16* %129, align 2, !dbg !2046
  %conv157 = zext i16 %130 to i32, !dbg !2046
  store i32 %conv157, i32* %quot, align 4, !dbg !2047
  %131 = load i32, i32* %quot, align 4, !dbg !2048
  %132 = load i32, i32* %cut, align 4, !dbg !2048
  %shr158 = lshr i32 %131, %132, !dbg !2048
  %133 = load i32, i32* %cut, align 4, !dbg !2048
  %idxprom159 = zext i32 %133 to i64, !dbg !2048
  %arrayidx160 = getelementptr inbounds [5 x i32], [5 x i32]* @multies, i64 0, i64 %idxprom159, !dbg !2048
  %134 = load i32, i32* %arrayidx160, align 4, !dbg !2048
  %mul161 = mul i32 %shr158, %134, !dbg !2048
  %shr162 = lshr i32 %mul161, 17, !dbg !2048
  store i32 %shr162, i32* %quot, align 4, !dbg !2049
  %135 = load i16*, i16** %up, align 8, !dbg !2050
  %136 = load i16, i16* %135, align 2, !dbg !2051
  %conv163 = zext i16 %136 to i32, !dbg !2051
  %137 = load i32, i32* %quot, align 4, !dbg !2052
  %138 = load i32, i32* %cut, align 4, !dbg !2053
  %idxprom164 = zext i32 %138 to i64, !dbg !2054
  %arrayidx165 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom164, !dbg !2054
  %139 = load i32, i32* %arrayidx165, align 4, !dbg !2054
  %mul166 = mul i32 %137, %139, !dbg !2055
  %sub167 = sub i32 %conv163, %mul166, !dbg !2056
  store i32 %sub167, i32* %rem, align 4, !dbg !2057
  %140 = load i16*, i16** %target, align 8, !dbg !2058
  %141 = load i16, i16* %140, align 2, !dbg !2059
  %conv168 = zext i16 %141 to i32, !dbg !2059
  %142 = load i32, i32* %rem, align 4, !dbg !2060
  %143 = load i32, i32* %cut, align 4, !dbg !2061
  %sub169 = sub i32 3, %143, !dbg !2062
  %idxprom170 = zext i32 %sub169 to i64, !dbg !2063
  %arrayidx171 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom170, !dbg !2063
  %144 = load i32, i32* %arrayidx171, align 4, !dbg !2063
  %mul172 = mul i32 %142, %144, !dbg !2064
  %add173 = add i32 %conv168, %mul172, !dbg !2065
  %conv174 = trunc i32 %add173 to i16, !dbg !2066
  %145 = load i16*, i16** %target, align 8, !dbg !2067
  store i16 %conv174, i16* %145, align 2, !dbg !2068
  %146 = load i32, i32* %cut, align 4, !dbg !2069
  %147 = load i32, i32* %count, align 4, !dbg !2070
  %sub175 = sub i32 %147, %146, !dbg !2070
  store i32 %sub175, i32* %count, align 4, !dbg !2070
  %148 = load i32, i32* %count, align 4, !dbg !2071
  %cmp176 = icmp sle i32 %148, 0, !dbg !2073
  br i1 %cmp176, label %if.then178, label %if.end179, !dbg !2074

if.then178:                                       ; preds = %if.end155
  br label %for.end182, !dbg !2075

if.end179:                                        ; preds = %if.end155
  br label %for.inc180, !dbg !2076

for.inc180:                                       ; preds = %if.end179
  %149 = load i16*, i16** %target, align 8, !dbg !2077
  %incdec.ptr181 = getelementptr inbounds i16, i16* %149, i32 1, !dbg !2077
  store i16* %incdec.ptr181, i16** %target, align 8, !dbg !2077
  br label %for.cond148, !dbg !2078, !llvm.loop !2079

for.end182:                                       ; preds = %if.then178, %if.then154
  br label %if.end183

if.end183:                                        ; preds = %for.end182, %if.then139
  br label %if.end184

if.end184:                                        ; preds = %if.end183, %if.end107
  %150 = load i32*, i32** %residue.addr, align 8, !dbg !2082
  %151 = load i32, i32* %150, align 4, !dbg !2084
  %cmp185 = icmp ne i32 %151, 0, !dbg !2085
  br i1 %cmp185, label %if.then187, label %if.end189, !dbg !2086

if.then187:                                       ; preds = %if.end184
  %152 = load i32*, i32** %status.addr, align 8, !dbg !2087
  %153 = load i32, i32* %152, align 4, !dbg !2088
  %or188 = or i32 %153, 32, !dbg !2088
  store i32 %or188, i32* %152, align 4, !dbg !2088
  br label %if.end189, !dbg !2089

if.end189:                                        ; preds = %if.then187, %if.end184
  br label %return, !dbg !2090

return:                                           ; preds = %if.end189, %if.end38, %if.end12
  ret void, !dbg !2091
}

; Function Attrs: noinline nounwind uwtable
define internal void @decFinalize(%struct.decNumber* %dn, %struct.decContext* %set, i32* %residue, i32* %status) #0 !dbg !2092 {
entry:
  %dn.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %residue.addr = alloca i32*, align 8
  %status.addr = alloca i32*, align 8
  %shift = alloca i32, align 4
  %tinyexp = alloca i32, align 4
  %comp = alloca i32, align 4
  %nmin = alloca %struct.decNumber, align 4
  store %struct.decNumber* %dn, %struct.decNumber** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dn.addr, metadata !2095, metadata !DIExpression()), !dbg !2096
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !2097, metadata !DIExpression()), !dbg !2098
  store i32* %residue, i32** %residue.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %residue.addr, metadata !2099, metadata !DIExpression()), !dbg !2100
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !2101, metadata !DIExpression()), !dbg !2102
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !2103, metadata !DIExpression()), !dbg !2104
  call void @llvm.dbg.declare(metadata i32* %tinyexp, metadata !2105, metadata !DIExpression()), !dbg !2106
  %0 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2107
  %emin = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i32 0, i32 2, !dbg !2108
  %1 = load i32, i32* %emin, align 4, !dbg !2108
  %2 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2109
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 0, !dbg !2110
  %3 = load i32, i32* %digits, align 4, !dbg !2110
  %sub = sub nsw i32 %1, %3, !dbg !2111
  %add = add nsw i32 %sub, 1, !dbg !2112
  store i32 %add, i32* %tinyexp, align 4, !dbg !2106
  %4 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2113
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 1, !dbg !2115
  %5 = load i32, i32* %exponent, align 4, !dbg !2115
  %6 = load i32, i32* %tinyexp, align 4, !dbg !2116
  %cmp = icmp sle i32 %5, %6, !dbg !2117
  br i1 %cmp, label %if.then, label %if.end14, !dbg !2118

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %comp, metadata !2119, metadata !DIExpression()), !dbg !2121
  call void @llvm.dbg.declare(metadata %struct.decNumber* %nmin, metadata !2122, metadata !DIExpression()), !dbg !2123
  %7 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2124
  %exponent1 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %7, i32 0, i32 1, !dbg !2126
  %8 = load i32, i32* %exponent1, align 4, !dbg !2126
  %9 = load i32, i32* %tinyexp, align 4, !dbg !2127
  %cmp2 = icmp slt i32 %8, %9, !dbg !2128
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !2129

if.then3:                                         ; preds = %if.then
  %10 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2130
  %11 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2132
  %12 = load i32*, i32** %residue.addr, align 8, !dbg !2133
  %13 = load i32*, i32** %status.addr, align 8, !dbg !2134
  call void @decSetSubnormal(%struct.decNumber* %10, %struct.decContext* %11, i32* %12, i32* %13), !dbg !2135
  br label %return, !dbg !2136

if.end:                                           ; preds = %if.then
  %call = call %struct.decNumber* @decNumberZero(%struct.decNumber* %nmin), !dbg !2137
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %nmin, i32 0, i32 3, !dbg !2138
  %arrayidx = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !2139
  store i16 1, i16* %arrayidx, align 2, !dbg !2140
  %14 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2141
  %emin4 = getelementptr inbounds %struct.decContext, %struct.decContext* %14, i32 0, i32 2, !dbg !2142
  %15 = load i32, i32* %emin4, align 4, !dbg !2142
  %exponent5 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %nmin, i32 0, i32 1, !dbg !2143
  store i32 %15, i32* %exponent5, align 4, !dbg !2144
  %16 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2145
  %call6 = call i32 @decCompare(%struct.decNumber* %16, %struct.decNumber* %nmin, i8 zeroext 1), !dbg !2146
  store i32 %call6, i32* %comp, align 4, !dbg !2147
  %17 = load i32, i32* %comp, align 4, !dbg !2148
  %cmp7 = icmp eq i32 %17, -2147483648, !dbg !2150
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !2151

if.then8:                                         ; preds = %if.end
  %18 = load i32*, i32** %status.addr, align 8, !dbg !2152
  %19 = load i32, i32* %18, align 4, !dbg !2154
  %or = or i32 %19, 16, !dbg !2154
  store i32 %or, i32* %18, align 4, !dbg !2154
  br label %return, !dbg !2155

if.end9:                                          ; preds = %if.end
  %20 = load i32*, i32** %residue.addr, align 8, !dbg !2156
  %21 = load i32, i32* %20, align 4, !dbg !2158
  %cmp10 = icmp slt i32 %21, 0, !dbg !2159
  br i1 %cmp10, label %land.lhs.true, label %if.end13, !dbg !2160

land.lhs.true:                                    ; preds = %if.end9
  %22 = load i32, i32* %comp, align 4, !dbg !2161
  %cmp11 = icmp eq i32 %22, 0, !dbg !2162
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !2163

if.then12:                                        ; preds = %land.lhs.true
  %23 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2164
  %24 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2166
  %25 = load i32*, i32** %residue.addr, align 8, !dbg !2167
  %26 = load i32, i32* %25, align 4, !dbg !2168
  %27 = load i32*, i32** %status.addr, align 8, !dbg !2169
  call void @decApplyRound(%struct.decNumber* %23, %struct.decContext* %24, i32 %26, i32* %27), !dbg !2170
  %28 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2171
  %29 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2172
  %30 = load i32*, i32** %residue.addr, align 8, !dbg !2173
  %31 = load i32*, i32** %status.addr, align 8, !dbg !2174
  call void @decSetSubnormal(%struct.decNumber* %28, %struct.decContext* %29, i32* %30, i32* %31), !dbg !2175
  br label %return, !dbg !2176

if.end13:                                         ; preds = %land.lhs.true, %if.end9
  br label %if.end14, !dbg !2177

if.end14:                                         ; preds = %if.end13, %entry
  %32 = load i32*, i32** %residue.addr, align 8, !dbg !2178
  %33 = load i32, i32* %32, align 4, !dbg !2180
  %cmp15 = icmp ne i32 %33, 0, !dbg !2181
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !2182

if.then16:                                        ; preds = %if.end14
  %34 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2183
  %35 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2184
  %36 = load i32*, i32** %residue.addr, align 8, !dbg !2185
  %37 = load i32, i32* %36, align 4, !dbg !2186
  %38 = load i32*, i32** %status.addr, align 8, !dbg !2187
  call void @decApplyRound(%struct.decNumber* %34, %struct.decContext* %35, i32 %37, i32* %38), !dbg !2188
  br label %if.end17, !dbg !2188

if.end17:                                         ; preds = %if.then16, %if.end14
  %39 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2189
  %exponent18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %39, i32 0, i32 1, !dbg !2191
  %40 = load i32, i32* %exponent18, align 4, !dbg !2191
  %41 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2192
  %emax = getelementptr inbounds %struct.decContext, %struct.decContext* %41, i32 0, i32 1, !dbg !2193
  %42 = load i32, i32* %emax, align 4, !dbg !2193
  %43 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2194
  %digits19 = getelementptr inbounds %struct.decContext, %struct.decContext* %43, i32 0, i32 0, !dbg !2195
  %44 = load i32, i32* %digits19, align 4, !dbg !2195
  %sub20 = sub nsw i32 %42, %44, !dbg !2196
  %add21 = add nsw i32 %sub20, 1, !dbg !2197
  %cmp22 = icmp sle i32 %40, %add21, !dbg !2198
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !2199

if.then23:                                        ; preds = %if.end17
  br label %return, !dbg !2200

if.end24:                                         ; preds = %if.end17
  %45 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2201
  %exponent25 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %45, i32 0, i32 1, !dbg !2203
  %46 = load i32, i32* %exponent25, align 4, !dbg !2203
  %47 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2204
  %emax26 = getelementptr inbounds %struct.decContext, %struct.decContext* %47, i32 0, i32 1, !dbg !2205
  %48 = load i32, i32* %emax26, align 4, !dbg !2205
  %49 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2206
  %digits27 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %49, i32 0, i32 0, !dbg !2207
  %50 = load i32, i32* %digits27, align 4, !dbg !2207
  %sub28 = sub nsw i32 %48, %50, !dbg !2208
  %add29 = add nsw i32 %sub28, 1, !dbg !2209
  %cmp30 = icmp sgt i32 %46, %add29, !dbg !2210
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !2211

if.then31:                                        ; preds = %if.end24
  %51 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2212
  %52 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2214
  %53 = load i32*, i32** %status.addr, align 8, !dbg !2215
  call void @decSetOverflow(%struct.decNumber* %51, %struct.decContext* %52, i32* %53), !dbg !2216
  br label %return, !dbg !2217

if.end32:                                         ; preds = %if.end24
  %54 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2218
  %clamp = getelementptr inbounds %struct.decContext, %struct.decContext* %54, i32 0, i32 6, !dbg !2220
  %55 = load i8, i8* %clamp, align 4, !dbg !2220
  %tobool = icmp ne i8 %55, 0, !dbg !2218
  br i1 %tobool, label %if.end34, label %if.then33, !dbg !2221

if.then33:                                        ; preds = %if.end32
  br label %return, !dbg !2222

if.end34:                                         ; preds = %if.end32
  %56 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2223
  %exponent35 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %56, i32 0, i32 1, !dbg !2224
  %57 = load i32, i32* %exponent35, align 4, !dbg !2224
  %58 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2225
  %emax36 = getelementptr inbounds %struct.decContext, %struct.decContext* %58, i32 0, i32 1, !dbg !2226
  %59 = load i32, i32* %emax36, align 4, !dbg !2226
  %60 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2227
  %digits37 = getelementptr inbounds %struct.decContext, %struct.decContext* %60, i32 0, i32 0, !dbg !2228
  %61 = load i32, i32* %digits37, align 4, !dbg !2228
  %sub38 = sub nsw i32 %59, %61, !dbg !2229
  %add39 = add nsw i32 %sub38, 1, !dbg !2230
  %sub40 = sub nsw i32 %57, %add39, !dbg !2231
  store i32 %sub40, i32* %shift, align 4, !dbg !2232
  %62 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2233
  %lsu41 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %62, i32 0, i32 3, !dbg !2233
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu41, i64 0, i64 0, !dbg !2233
  %63 = load i16, i16* %arraydecay, align 2, !dbg !2233
  %conv = zext i16 %63 to i32, !dbg !2233
  %cmp42 = icmp eq i32 %conv, 0, !dbg !2233
  br i1 %cmp42, label %land.lhs.true44, label %if.then52, !dbg !2233

land.lhs.true44:                                  ; preds = %if.end34
  %64 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2233
  %digits45 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %64, i32 0, i32 0, !dbg !2233
  %65 = load i32, i32* %digits45, align 4, !dbg !2233
  %cmp46 = icmp eq i32 %65, 1, !dbg !2233
  br i1 %cmp46, label %land.lhs.true48, label %if.then52, !dbg !2233

land.lhs.true48:                                  ; preds = %land.lhs.true44
  %66 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2233
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %66, i32 0, i32 2, !dbg !2233
  %67 = load i8, i8* %bits, align 4, !dbg !2233
  %conv49 = zext i8 %67 to i32, !dbg !2233
  %and = and i32 %conv49, 112, !dbg !2233
  %cmp50 = icmp eq i32 %and, 0, !dbg !2233
  br i1 %cmp50, label %if.end58, label %if.then52, !dbg !2235

if.then52:                                        ; preds = %land.lhs.true48, %land.lhs.true44, %if.end34
  %68 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2236
  %lsu53 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %68, i32 0, i32 3, !dbg !2238
  %arraydecay54 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu53, i64 0, i64 0, !dbg !2236
  %69 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2239
  %digits55 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %69, i32 0, i32 0, !dbg !2240
  %70 = load i32, i32* %digits55, align 4, !dbg !2240
  %71 = load i32, i32* %shift, align 4, !dbg !2241
  %call56 = call i32 @decShiftToMost(i16* %arraydecay54, i32 %70, i32 %71), !dbg !2242
  %72 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2243
  %digits57 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %72, i32 0, i32 0, !dbg !2244
  store i32 %call56, i32* %digits57, align 4, !dbg !2245
  br label %if.end58, !dbg !2246

if.end58:                                         ; preds = %if.then52, %land.lhs.true48
  %73 = load i32, i32* %shift, align 4, !dbg !2247
  %74 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2248
  %exponent59 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %74, i32 0, i32 1, !dbg !2249
  %75 = load i32, i32* %exponent59, align 4, !dbg !2250
  %sub60 = sub nsw i32 %75, %73, !dbg !2250
  store i32 %sub60, i32* %exponent59, align 4, !dbg !2250
  %76 = load i32*, i32** %status.addr, align 8, !dbg !2251
  %77 = load i32, i32* %76, align 4, !dbg !2252
  %or61 = or i32 %77, 1024, !dbg !2252
  store i32 %or61, i32* %76, align 4, !dbg !2252
  br label %return, !dbg !2253

return:                                           ; preds = %if.end58, %if.then33, %if.then31, %if.then23, %if.then12, %if.then8, %if.then3
  ret void, !dbg !2254
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @decStatus(%struct.decNumber* %dn, i32 %status, %struct.decContext* %set) #0 !dbg !2255 {
entry:
  %dn.addr = alloca %struct.decNumber*, align 8
  %status.addr = alloca i32, align 4
  %set.addr = alloca %struct.decContext*, align 8
  store %struct.decNumber* %dn, %struct.decNumber** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dn.addr, metadata !2258, metadata !DIExpression()), !dbg !2259
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !2260, metadata !DIExpression()), !dbg !2261
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !2262, metadata !DIExpression()), !dbg !2263
  %0 = load i32, i32* %status.addr, align 4, !dbg !2264
  %and = and i32 %0, 221, !dbg !2266
  %tobool = icmp ne i32 %and, 0, !dbg !2266
  br i1 %tobool, label %if.then, label %if.end5, !dbg !2267

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %status.addr, align 4, !dbg !2268
  %and1 = and i32 %1, 1073741824, !dbg !2271
  %tobool2 = icmp ne i32 %and1, 0, !dbg !2271
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !2272

if.then3:                                         ; preds = %if.then
  %2 = load i32, i32* %status.addr, align 4, !dbg !2273
  %and4 = and i32 %2, -1073741825, !dbg !2273
  store i32 %and4, i32* %status.addr, align 4, !dbg !2273
  br label %if.end, !dbg !2274

if.else:                                          ; preds = %if.then
  %3 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2275
  %call = call %struct.decNumber* @decNumberZero(%struct.decNumber* %3), !dbg !2277
  %4 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !2278
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 2, !dbg !2279
  store i8 32, i8* %bits, align 4, !dbg !2280
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end5, !dbg !2281

if.end5:                                          ; preds = %if.end, %entry
  %5 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2282
  %6 = load i32, i32* %status.addr, align 4, !dbg !2283
  %call6 = call %struct.decContext* @decContextSetStatus(%struct.decContext* %5, i32 %6), !dbg !2284
  ret void, !dbg !2285
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberAbs(%struct.decNumber* %res, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !2286 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %dzero = alloca %struct.decNumber, align 4
  %status = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !2289, metadata !DIExpression()), !dbg !2290
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !2291, metadata !DIExpression()), !dbg !2292
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !2293, metadata !DIExpression()), !dbg !2294
  call void @llvm.dbg.declare(metadata %struct.decNumber* %dzero, metadata !2295, metadata !DIExpression()), !dbg !2296
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2297, metadata !DIExpression()), !dbg !2298
  store i32 0, i32* %status, align 4, !dbg !2298
  %call = call %struct.decNumber* @decNumberZero(%struct.decNumber* %dzero), !dbg !2299
  %0 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2300
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 1, !dbg !2301
  %1 = load i32, i32* %exponent, align 4, !dbg !2301
  %exponent1 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %dzero, i32 0, i32 1, !dbg !2302
  store i32 %1, i32* %exponent1, align 4, !dbg !2303
  %2 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2304
  %3 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2305
  %4 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2306
  %5 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2307
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %5, i32 0, i32 2, !dbg !2308
  %6 = load i8, i8* %bits, align 4, !dbg !2308
  %conv = zext i8 %6 to i32, !dbg !2307
  %and = and i32 %conv, 128, !dbg !2309
  %conv2 = trunc i32 %and to i8, !dbg !2310
  %call3 = call %struct.decNumber* @decAddOp(%struct.decNumber* %2, %struct.decNumber* %dzero, %struct.decNumber* %3, %struct.decContext* %4, i8 zeroext %conv2, i32* %status), !dbg !2311
  %7 = load i32, i32* %status, align 4, !dbg !2312
  %cmp = icmp ne i32 %7, 0, !dbg !2314
  br i1 %cmp, label %if.then, label %if.end, !dbg !2315

if.then:                                          ; preds = %entry
  %8 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2316
  %9 = load i32, i32* %status, align 4, !dbg !2317
  %10 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2318
  call void @decStatus(%struct.decNumber* %8, i32 %9, %struct.decContext* %10), !dbg !2319
  br label %if.end, !dbg !2319

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2320
  ret %struct.decNumber* %11, !dbg !2321
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.decNumber* @decAddOp(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set, i8 zeroext %negate, i32* %status) #0 !dbg !2322 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %negate.addr = alloca i8, align 1
  %status.addr = alloca i32*, align 8
  %rhsshift = alloca i32, align 4
  %maxdigits = alloca i32, align 4
  %mult = alloca i32, align 4
  %residue = alloca i32, align 4
  %bits = alloca i8, align 1
  %diffsign = alloca i8, align 1
  %acc = alloca i16*, align 8
  %accbuff = alloca [31 x i16], align 16
  %allocacc = alloca i16*, align 8
  %reqdigits = alloca i32, align 4
  %padding = alloca i32, align 4
  %adjust = alloca i32, align 4
  %lexp = alloca i32, align 4
  %adjust147 = alloca i32, align 4
  %rexp = alloca i32, align 4
  %partial = alloca i32, align 4
  %swapped = alloca i8, align 1
  %t = alloca %struct.decNumber*, align 8
  %shift = alloca i32, align 4
  %need = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !2325, metadata !DIExpression()), !dbg !2326
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !2327, metadata !DIExpression()), !dbg !2328
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !2329, metadata !DIExpression()), !dbg !2330
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !2331, metadata !DIExpression()), !dbg !2332
  store i8 %negate, i8* %negate.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %negate.addr, metadata !2333, metadata !DIExpression()), !dbg !2334
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !2335, metadata !DIExpression()), !dbg !2336
  call void @llvm.dbg.declare(metadata i32* %rhsshift, metadata !2337, metadata !DIExpression()), !dbg !2338
  call void @llvm.dbg.declare(metadata i32* %maxdigits, metadata !2339, metadata !DIExpression()), !dbg !2340
  call void @llvm.dbg.declare(metadata i32* %mult, metadata !2341, metadata !DIExpression()), !dbg !2342
  call void @llvm.dbg.declare(metadata i32* %residue, metadata !2343, metadata !DIExpression()), !dbg !2344
  call void @llvm.dbg.declare(metadata i8* %bits, metadata !2345, metadata !DIExpression()), !dbg !2346
  call void @llvm.dbg.declare(metadata i8* %diffsign, metadata !2347, metadata !DIExpression()), !dbg !2348
  call void @llvm.dbg.declare(metadata i16** %acc, metadata !2349, metadata !DIExpression()), !dbg !2350
  call void @llvm.dbg.declare(metadata [31 x i16]* %accbuff, metadata !2351, metadata !DIExpression()), !dbg !2355
  call void @llvm.dbg.declare(metadata i16** %allocacc, metadata !2356, metadata !DIExpression()), !dbg !2357
  store i16* null, i16** %allocacc, align 8, !dbg !2357
  call void @llvm.dbg.declare(metadata i32* %reqdigits, metadata !2358, metadata !DIExpression()), !dbg !2359
  %0 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2360
  %digits = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i32 0, i32 0, !dbg !2361
  %1 = load i32, i32* %digits, align 4, !dbg !2361
  store i32 %1, i32* %reqdigits, align 4, !dbg !2359
  call void @llvm.dbg.declare(metadata i32* %padding, metadata !2362, metadata !DIExpression()), !dbg !2363
  br label %do.body, !dbg !2364

do.body:                                          ; preds = %entry
  %2 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2365
  %bits1 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 2, !dbg !2367
  %3 = load i8, i8* %bits1, align 4, !dbg !2367
  %conv = zext i8 %3 to i32, !dbg !2365
  %4 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2368
  %bits2 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 2, !dbg !2369
  %5 = load i8, i8* %bits2, align 4, !dbg !2369
  %conv3 = zext i8 %5 to i32, !dbg !2368
  %xor = xor i32 %conv, %conv3, !dbg !2370
  %6 = load i8, i8* %negate.addr, align 1, !dbg !2371
  %conv4 = zext i8 %6 to i32, !dbg !2371
  %xor5 = xor i32 %xor, %conv4, !dbg !2372
  %and = and i32 %xor5, 128, !dbg !2373
  %conv6 = trunc i32 %and to i8, !dbg !2374
  store i8 %conv6, i8* %diffsign, align 1, !dbg !2375
  %7 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2376
  %bits7 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %7, i32 0, i32 2, !dbg !2376
  %8 = load i8, i8* %bits7, align 4, !dbg !2376
  %conv8 = zext i8 %8 to i32, !dbg !2376
  %9 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2376
  %bits9 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %9, i32 0, i32 2, !dbg !2376
  %10 = load i8, i8* %bits9, align 4, !dbg !2376
  %conv10 = zext i8 %10 to i32, !dbg !2376
  %or = or i32 %conv8, %conv10, !dbg !2376
  %and11 = and i32 %or, 112, !dbg !2376
  %tobool = icmp ne i32 %and11, 0, !dbg !2376
  br i1 %tobool, label %if.then, label %if.end53, !dbg !2378

if.then:                                          ; preds = %do.body
  %11 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2379
  %bits12 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %11, i32 0, i32 2, !dbg !2379
  %12 = load i8, i8* %bits12, align 4, !dbg !2379
  %conv13 = zext i8 %12 to i32, !dbg !2379
  %13 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2379
  %bits14 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %13, i32 0, i32 2, !dbg !2379
  %14 = load i8, i8* %bits14, align 4, !dbg !2379
  %conv15 = zext i8 %14 to i32, !dbg !2379
  %or16 = or i32 %conv13, %conv15, !dbg !2379
  %and17 = and i32 %or16, 112, !dbg !2379
  %and18 = and i32 %and17, 48, !dbg !2382
  %tobool19 = icmp ne i32 %and18, 0, !dbg !2382
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !2383

if.then20:                                        ; preds = %if.then
  %15 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2384
  %16 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2385
  %17 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2386
  %18 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2387
  %19 = load i32*, i32** %status.addr, align 8, !dbg !2388
  %call = call %struct.decNumber* @decNaNs(%struct.decNumber* %15, %struct.decNumber* %16, %struct.decNumber* %17, %struct.decContext* %18, i32* %19), !dbg !2389
  br label %if.end52, !dbg !2389

if.else:                                          ; preds = %if.then
  %20 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2390
  %bits21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %20, i32 0, i32 2, !dbg !2390
  %21 = load i8, i8* %bits21, align 4, !dbg !2390
  %conv22 = zext i8 %21 to i32, !dbg !2390
  %and23 = and i32 %conv22, 64, !dbg !2390
  %cmp = icmp ne i32 %and23, 0, !dbg !2390
  br i1 %cmp, label %if.then25, label %if.else39, !dbg !2393

if.then25:                                        ; preds = %if.else
  %22 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2394
  %bits26 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %22, i32 0, i32 2, !dbg !2394
  %23 = load i8, i8* %bits26, align 4, !dbg !2394
  %conv27 = zext i8 %23 to i32, !dbg !2394
  %and28 = and i32 %conv27, 64, !dbg !2394
  %cmp29 = icmp ne i32 %and28, 0, !dbg !2394
  br i1 %cmp29, label %land.lhs.true, label %if.end, !dbg !2397

land.lhs.true:                                    ; preds = %if.then25
  %24 = load i8, i8* %diffsign, align 1, !dbg !2398
  %conv31 = zext i8 %24 to i32, !dbg !2398
  %tobool32 = icmp ne i32 %conv31, 0, !dbg !2398
  br i1 %tobool32, label %if.then33, label %if.end, !dbg !2399

if.then33:                                        ; preds = %land.lhs.true
  %25 = load i32*, i32** %status.addr, align 8, !dbg !2400
  %26 = load i32, i32* %25, align 4, !dbg !2402
  %or34 = or i32 %26, 128, !dbg !2402
  store i32 %or34, i32* %25, align 4, !dbg !2402
  br label %do.end, !dbg !2403

if.end:                                           ; preds = %land.lhs.true, %if.then25
  %27 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2404
  %bits35 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %27, i32 0, i32 2, !dbg !2405
  %28 = load i8, i8* %bits35, align 4, !dbg !2405
  %conv36 = zext i8 %28 to i32, !dbg !2404
  %and37 = and i32 %conv36, 128, !dbg !2406
  %conv38 = trunc i32 %and37 to i8, !dbg !2404
  store i8 %conv38, i8* %bits, align 1, !dbg !2407
  br label %if.end46, !dbg !2408

if.else39:                                        ; preds = %if.else
  %29 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2409
  %bits40 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %29, i32 0, i32 2, !dbg !2410
  %30 = load i8, i8* %bits40, align 4, !dbg !2410
  %conv41 = zext i8 %30 to i32, !dbg !2409
  %31 = load i8, i8* %negate.addr, align 1, !dbg !2411
  %conv42 = zext i8 %31 to i32, !dbg !2411
  %xor43 = xor i32 %conv41, %conv42, !dbg !2412
  %and44 = and i32 %xor43, 128, !dbg !2413
  %conv45 = trunc i32 %and44 to i8, !dbg !2414
  store i8 %conv45, i8* %bits, align 1, !dbg !2415
  br label %if.end46

if.end46:                                         ; preds = %if.else39, %if.end
  %32 = load i8, i8* %bits, align 1, !dbg !2416
  %conv47 = zext i8 %32 to i32, !dbg !2416
  %or48 = or i32 %conv47, 64, !dbg !2416
  %conv49 = trunc i32 %or48 to i8, !dbg !2416
  store i8 %conv49, i8* %bits, align 1, !dbg !2416
  %33 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2417
  %call50 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %33), !dbg !2418
  %34 = load i8, i8* %bits, align 1, !dbg !2419
  %35 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2420
  %bits51 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %35, i32 0, i32 2, !dbg !2421
  store i8 %34, i8* %bits51, align 4, !dbg !2422
  br label %if.end52

if.end52:                                         ; preds = %if.end46, %if.then20
  br label %do.end, !dbg !2423

if.end53:                                         ; preds = %do.body
  %36 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2424
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %36, i32 0, i32 3, !dbg !2424
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !2424
  %37 = load i16, i16* %arraydecay, align 2, !dbg !2424
  %conv54 = zext i16 %37 to i32, !dbg !2424
  %cmp55 = icmp eq i32 %conv54, 0, !dbg !2424
  br i1 %cmp55, label %land.lhs.true57, label %if.end130, !dbg !2424

land.lhs.true57:                                  ; preds = %if.end53
  %38 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2424
  %digits58 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %38, i32 0, i32 0, !dbg !2424
  %39 = load i32, i32* %digits58, align 4, !dbg !2424
  %cmp59 = icmp eq i32 %39, 1, !dbg !2424
  br i1 %cmp59, label %land.lhs.true61, label %if.end130, !dbg !2424

land.lhs.true61:                                  ; preds = %land.lhs.true57
  %40 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2424
  %bits62 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %40, i32 0, i32 2, !dbg !2424
  %41 = load i8, i8* %bits62, align 4, !dbg !2424
  %conv63 = zext i8 %41 to i32, !dbg !2424
  %and64 = and i32 %conv63, 112, !dbg !2424
  %cmp65 = icmp eq i32 %and64, 0, !dbg !2424
  br i1 %cmp65, label %if.then67, label %if.end130, !dbg !2426

if.then67:                                        ; preds = %land.lhs.true61
  call void @llvm.dbg.declare(metadata i32* %adjust, metadata !2427, metadata !DIExpression()), !dbg !2429
  call void @llvm.dbg.declare(metadata i32* %lexp, metadata !2430, metadata !DIExpression()), !dbg !2431
  %42 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2432
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %42, i32 0, i32 1, !dbg !2433
  %43 = load i32, i32* %exponent, align 4, !dbg !2433
  store i32 %43, i32* %lexp, align 4, !dbg !2431
  %44 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2434
  %bits68 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %44, i32 0, i32 2, !dbg !2435
  %45 = load i8, i8* %bits68, align 4, !dbg !2435
  store i8 %45, i8* %bits, align 1, !dbg !2436
  store i32 0, i32* %residue, align 4, !dbg !2437
  %46 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2438
  %47 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2439
  %48 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2440
  %49 = load i32*, i32** %status.addr, align 8, !dbg !2441
  call void @decCopyFit(%struct.decNumber* %46, %struct.decNumber* %47, %struct.decContext* %48, i32* %residue, i32* %49), !dbg !2442
  %50 = load i8, i8* %negate.addr, align 1, !dbg !2443
  %conv69 = zext i8 %50 to i32, !dbg !2443
  %51 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2444
  %bits70 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %51, i32 0, i32 2, !dbg !2445
  %52 = load i8, i8* %bits70, align 4, !dbg !2446
  %conv71 = zext i8 %52 to i32, !dbg !2446
  %xor72 = xor i32 %conv71, %conv69, !dbg !2446
  %conv73 = trunc i32 %xor72 to i8, !dbg !2446
  store i8 %conv73, i8* %bits70, align 4, !dbg !2446
  %53 = load i32, i32* %lexp, align 4, !dbg !2447
  %54 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2448
  %exponent74 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %54, i32 0, i32 1, !dbg !2449
  %55 = load i32, i32* %exponent74, align 4, !dbg !2449
  %sub = sub nsw i32 %53, %55, !dbg !2450
  store i32 %sub, i32* %adjust, align 4, !dbg !2451
  %56 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2452
  %lsu75 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %56, i32 0, i32 3, !dbg !2452
  %arraydecay76 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu75, i64 0, i64 0, !dbg !2452
  %57 = load i16, i16* %arraydecay76, align 2, !dbg !2452
  %conv77 = zext i16 %57 to i32, !dbg !2452
  %cmp78 = icmp eq i32 %conv77, 0, !dbg !2452
  br i1 %cmp78, label %land.lhs.true80, label %if.else106, !dbg !2452

land.lhs.true80:                                  ; preds = %if.then67
  %58 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2452
  %digits81 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %58, i32 0, i32 0, !dbg !2452
  %59 = load i32, i32* %digits81, align 4, !dbg !2452
  %cmp82 = icmp eq i32 %59, 1, !dbg !2452
  br i1 %cmp82, label %land.lhs.true84, label %if.else106, !dbg !2452

land.lhs.true84:                                  ; preds = %land.lhs.true80
  %60 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2452
  %bits85 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %60, i32 0, i32 2, !dbg !2452
  %61 = load i8, i8* %bits85, align 4, !dbg !2452
  %conv86 = zext i8 %61 to i32, !dbg !2452
  %and87 = and i32 %conv86, 112, !dbg !2452
  %cmp88 = icmp eq i32 %and87, 0, !dbg !2452
  br i1 %cmp88, label %if.then90, label %if.else106, !dbg !2454

if.then90:                                        ; preds = %land.lhs.true84
  %62 = load i32, i32* %adjust, align 4, !dbg !2455
  %cmp91 = icmp slt i32 %62, 0, !dbg !2458
  br i1 %cmp91, label %if.then93, label %if.end95, !dbg !2459

if.then93:                                        ; preds = %if.then90
  %63 = load i32, i32* %lexp, align 4, !dbg !2460
  %64 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2461
  %exponent94 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %64, i32 0, i32 1, !dbg !2462
  store i32 %63, i32* %exponent94, align 4, !dbg !2463
  br label %if.end95, !dbg !2461

if.end95:                                         ; preds = %if.then93, %if.then90
  %65 = load i8, i8* %diffsign, align 1, !dbg !2464
  %tobool96 = icmp ne i8 %65, 0, !dbg !2464
  br i1 %tobool96, label %if.then97, label %if.end105, !dbg !2466

if.then97:                                        ; preds = %if.end95
  %66 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2467
  %round = getelementptr inbounds %struct.decContext, %struct.decContext* %66, i32 0, i32 3, !dbg !2470
  %67 = load i32, i32* %round, align 4, !dbg !2470
  %cmp98 = icmp ne i32 %67, 6, !dbg !2471
  br i1 %cmp98, label %if.then100, label %if.else102, !dbg !2472

if.then100:                                       ; preds = %if.then97
  %68 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2473
  %bits101 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %68, i32 0, i32 2, !dbg !2474
  store i8 0, i8* %bits101, align 4, !dbg !2475
  br label %if.end104, !dbg !2473

if.else102:                                       ; preds = %if.then97
  %69 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2476
  %bits103 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %69, i32 0, i32 2, !dbg !2477
  store i8 -128, i8* %bits103, align 4, !dbg !2478
  br label %if.end104

if.end104:                                        ; preds = %if.else102, %if.then100
  br label %if.end105, !dbg !2479

if.end105:                                        ; preds = %if.end104, %if.end95
  br label %if.end129, !dbg !2480

if.else106:                                       ; preds = %land.lhs.true84, %land.lhs.true80, %if.then67
  %70 = load i32, i32* %adjust, align 4, !dbg !2481
  %cmp107 = icmp slt i32 %70, 0, !dbg !2484
  br i1 %cmp107, label %if.then109, label %if.end128, !dbg !2485

if.then109:                                       ; preds = %if.else106
  %71 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2486
  %digits110 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %71, i32 0, i32 0, !dbg !2489
  %72 = load i32, i32* %digits110, align 4, !dbg !2489
  %73 = load i32, i32* %adjust, align 4, !dbg !2490
  %sub111 = sub nsw i32 %72, %73, !dbg !2491
  %74 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2492
  %digits112 = getelementptr inbounds %struct.decContext, %struct.decContext* %74, i32 0, i32 0, !dbg !2493
  %75 = load i32, i32* %digits112, align 4, !dbg !2493
  %cmp113 = icmp sgt i32 %sub111, %75, !dbg !2494
  br i1 %cmp113, label %if.then115, label %if.end120, !dbg !2495

if.then115:                                       ; preds = %if.then109
  %76 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2496
  %digits116 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %76, i32 0, i32 0, !dbg !2498
  %77 = load i32, i32* %digits116, align 4, !dbg !2498
  %78 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2499
  %digits117 = getelementptr inbounds %struct.decContext, %struct.decContext* %78, i32 0, i32 0, !dbg !2500
  %79 = load i32, i32* %digits117, align 4, !dbg !2500
  %sub118 = sub nsw i32 %77, %79, !dbg !2501
  store i32 %sub118, i32* %adjust, align 4, !dbg !2502
  %80 = load i32*, i32** %status.addr, align 8, !dbg !2503
  %81 = load i32, i32* %80, align 4, !dbg !2504
  %or119 = or i32 %81, 2048, !dbg !2504
  store i32 %or119, i32* %80, align 4, !dbg !2504
  br label %if.end120, !dbg !2505

if.end120:                                        ; preds = %if.then115, %if.then109
  %82 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2506
  %lsu121 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %82, i32 0, i32 3, !dbg !2507
  %arraydecay122 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu121, i64 0, i64 0, !dbg !2506
  %83 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2508
  %digits123 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %83, i32 0, i32 0, !dbg !2509
  %84 = load i32, i32* %digits123, align 4, !dbg !2509
  %85 = load i32, i32* %adjust, align 4, !dbg !2510
  %sub124 = sub nsw i32 0, %85, !dbg !2511
  %call125 = call i32 @decShiftToMost(i16* %arraydecay122, i32 %84, i32 %sub124), !dbg !2512
  %86 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2513
  %digits126 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %86, i32 0, i32 0, !dbg !2514
  store i32 %call125, i32* %digits126, align 4, !dbg !2515
  %87 = load i32, i32* %adjust, align 4, !dbg !2516
  %88 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2517
  %exponent127 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %88, i32 0, i32 1, !dbg !2518
  %89 = load i32, i32* %exponent127, align 4, !dbg !2519
  %add = add nsw i32 %89, %87, !dbg !2519
  store i32 %add, i32* %exponent127, align 4, !dbg !2519
  br label %if.end128, !dbg !2520

if.end128:                                        ; preds = %if.end120, %if.else106
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.end105
  %90 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2521
  %91 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2521
  %92 = load i32*, i32** %status.addr, align 8, !dbg !2521
  call void @decFinalize(%struct.decNumber* %90, %struct.decContext* %91, i32* %residue, i32* %92), !dbg !2521
  br label %do.end, !dbg !2522

if.end130:                                        ; preds = %land.lhs.true61, %land.lhs.true57, %if.end53
  %93 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2523
  %lsu131 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %93, i32 0, i32 3, !dbg !2523
  %arraydecay132 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu131, i64 0, i64 0, !dbg !2523
  %94 = load i16, i16* %arraydecay132, align 2, !dbg !2523
  %conv133 = zext i16 %94 to i32, !dbg !2523
  %cmp134 = icmp eq i32 %conv133, 0, !dbg !2523
  br i1 %cmp134, label %land.lhs.true136, label %if.end175, !dbg !2523

land.lhs.true136:                                 ; preds = %if.end130
  %95 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2523
  %digits137 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %95, i32 0, i32 0, !dbg !2523
  %96 = load i32, i32* %digits137, align 4, !dbg !2523
  %cmp138 = icmp eq i32 %96, 1, !dbg !2523
  br i1 %cmp138, label %land.lhs.true140, label %if.end175, !dbg !2523

land.lhs.true140:                                 ; preds = %land.lhs.true136
  %97 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2523
  %bits141 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %97, i32 0, i32 2, !dbg !2523
  %98 = load i8, i8* %bits141, align 4, !dbg !2523
  %conv142 = zext i8 %98 to i32, !dbg !2523
  %and143 = and i32 %conv142, 112, !dbg !2523
  %cmp144 = icmp eq i32 %and143, 0, !dbg !2523
  br i1 %cmp144, label %if.then146, label %if.end175, !dbg !2525

if.then146:                                       ; preds = %land.lhs.true140
  call void @llvm.dbg.declare(metadata i32* %adjust147, metadata !2526, metadata !DIExpression()), !dbg !2528
  call void @llvm.dbg.declare(metadata i32* %rexp, metadata !2529, metadata !DIExpression()), !dbg !2530
  %99 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2531
  %exponent148 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %99, i32 0, i32 1, !dbg !2532
  %100 = load i32, i32* %exponent148, align 4, !dbg !2532
  store i32 %100, i32* %rexp, align 4, !dbg !2530
  %101 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2533
  %bits149 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %101, i32 0, i32 2, !dbg !2534
  %102 = load i8, i8* %bits149, align 4, !dbg !2534
  store i8 %102, i8* %bits, align 1, !dbg !2535
  store i32 0, i32* %residue, align 4, !dbg !2536
  %103 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2537
  %104 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2538
  %105 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2539
  %106 = load i32*, i32** %status.addr, align 8, !dbg !2540
  call void @decCopyFit(%struct.decNumber* %103, %struct.decNumber* %104, %struct.decContext* %105, i32* %residue, i32* %106), !dbg !2541
  %107 = load i32, i32* %rexp, align 4, !dbg !2542
  %108 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2543
  %exponent150 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %108, i32 0, i32 1, !dbg !2544
  %109 = load i32, i32* %exponent150, align 4, !dbg !2544
  %sub151 = sub nsw i32 %107, %109, !dbg !2545
  store i32 %sub151, i32* %adjust147, align 4, !dbg !2546
  %110 = load i32, i32* %adjust147, align 4, !dbg !2547
  %cmp152 = icmp slt i32 %110, 0, !dbg !2549
  br i1 %cmp152, label %if.then154, label %if.end174, !dbg !2550

if.then154:                                       ; preds = %if.then146
  %111 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2551
  %digits155 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %111, i32 0, i32 0, !dbg !2554
  %112 = load i32, i32* %digits155, align 4, !dbg !2554
  %113 = load i32, i32* %adjust147, align 4, !dbg !2555
  %sub156 = sub nsw i32 %112, %113, !dbg !2556
  %114 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2557
  %digits157 = getelementptr inbounds %struct.decContext, %struct.decContext* %114, i32 0, i32 0, !dbg !2558
  %115 = load i32, i32* %digits157, align 4, !dbg !2558
  %cmp158 = icmp sgt i32 %sub156, %115, !dbg !2559
  br i1 %cmp158, label %if.then160, label %if.end165, !dbg !2560

if.then160:                                       ; preds = %if.then154
  %116 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2561
  %digits161 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %116, i32 0, i32 0, !dbg !2563
  %117 = load i32, i32* %digits161, align 4, !dbg !2563
  %118 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2564
  %digits162 = getelementptr inbounds %struct.decContext, %struct.decContext* %118, i32 0, i32 0, !dbg !2565
  %119 = load i32, i32* %digits162, align 4, !dbg !2565
  %sub163 = sub nsw i32 %117, %119, !dbg !2566
  store i32 %sub163, i32* %adjust147, align 4, !dbg !2567
  %120 = load i32*, i32** %status.addr, align 8, !dbg !2568
  %121 = load i32, i32* %120, align 4, !dbg !2569
  %or164 = or i32 %121, 2048, !dbg !2569
  store i32 %or164, i32* %120, align 4, !dbg !2569
  br label %if.end165, !dbg !2570

if.end165:                                        ; preds = %if.then160, %if.then154
  %122 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2571
  %lsu166 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %122, i32 0, i32 3, !dbg !2572
  %arraydecay167 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu166, i64 0, i64 0, !dbg !2571
  %123 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2573
  %digits168 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %123, i32 0, i32 0, !dbg !2574
  %124 = load i32, i32* %digits168, align 4, !dbg !2574
  %125 = load i32, i32* %adjust147, align 4, !dbg !2575
  %sub169 = sub nsw i32 0, %125, !dbg !2576
  %call170 = call i32 @decShiftToMost(i16* %arraydecay167, i32 %124, i32 %sub169), !dbg !2577
  %126 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2578
  %digits171 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %126, i32 0, i32 0, !dbg !2579
  store i32 %call170, i32* %digits171, align 4, !dbg !2580
  %127 = load i32, i32* %adjust147, align 4, !dbg !2581
  %128 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2582
  %exponent172 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %128, i32 0, i32 1, !dbg !2583
  %129 = load i32, i32* %exponent172, align 4, !dbg !2584
  %add173 = add nsw i32 %129, %127, !dbg !2584
  store i32 %add173, i32* %exponent172, align 4, !dbg !2584
  br label %if.end174, !dbg !2585

if.end174:                                        ; preds = %if.end165, %if.then146
  %130 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2586
  %131 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2586
  %132 = load i32*, i32** %status.addr, align 8, !dbg !2586
  call void @decFinalize(%struct.decNumber* %130, %struct.decContext* %131, i32* %residue, i32* %132), !dbg !2586
  br label %do.end, !dbg !2587

if.end175:                                        ; preds = %land.lhs.true140, %land.lhs.true136, %if.end130
  %133 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2588
  %exponent176 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %133, i32 0, i32 1, !dbg !2589
  %134 = load i32, i32* %exponent176, align 4, !dbg !2589
  %135 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2590
  %exponent177 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %135, i32 0, i32 1, !dbg !2591
  %136 = load i32, i32* %exponent177, align 4, !dbg !2591
  %sub178 = sub nsw i32 %134, %136, !dbg !2592
  store i32 %sub178, i32* %padding, align 4, !dbg !2593
  %137 = load i32, i32* %padding, align 4, !dbg !2594
  %cmp179 = icmp eq i32 %137, 0, !dbg !2596
  br i1 %cmp179, label %land.lhs.true181, label %if.end265, !dbg !2597

land.lhs.true181:                                 ; preds = %if.end175
  %138 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2598
  %digits182 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %138, i32 0, i32 0, !dbg !2599
  %139 = load i32, i32* %digits182, align 4, !dbg !2599
  %cmp183 = icmp sle i32 %139, 3, !dbg !2600
  br i1 %cmp183, label %land.lhs.true185, label %if.end265, !dbg !2601

land.lhs.true185:                                 ; preds = %land.lhs.true181
  %140 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2602
  %exponent186 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %140, i32 0, i32 1, !dbg !2603
  %141 = load i32, i32* %exponent186, align 4, !dbg !2603
  %142 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2604
  %emin = getelementptr inbounds %struct.decContext, %struct.decContext* %142, i32 0, i32 2, !dbg !2605
  %143 = load i32, i32* %emin, align 4, !dbg !2605
  %cmp187 = icmp sge i32 %141, %143, !dbg !2606
  br i1 %cmp187, label %land.lhs.true189, label %if.end265, !dbg !2607

land.lhs.true189:                                 ; preds = %land.lhs.true185
  %144 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2608
  %exponent190 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %144, i32 0, i32 1, !dbg !2609
  %145 = load i32, i32* %exponent190, align 4, !dbg !2609
  %146 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2610
  %emax = getelementptr inbounds %struct.decContext, %struct.decContext* %146, i32 0, i32 1, !dbg !2611
  %147 = load i32, i32* %emax, align 4, !dbg !2611
  %148 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2612
  %digits191 = getelementptr inbounds %struct.decContext, %struct.decContext* %148, i32 0, i32 0, !dbg !2613
  %149 = load i32, i32* %digits191, align 4, !dbg !2613
  %sub192 = sub nsw i32 %147, %149, !dbg !2614
  %add193 = add nsw i32 %sub192, 1, !dbg !2615
  %cmp194 = icmp sle i32 %145, %add193, !dbg !2616
  br i1 %cmp194, label %land.lhs.true196, label %if.end265, !dbg !2617

land.lhs.true196:                                 ; preds = %land.lhs.true189
  %150 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2618
  %digits197 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %150, i32 0, i32 0, !dbg !2619
  %151 = load i32, i32* %digits197, align 4, !dbg !2619
  %152 = load i32, i32* %reqdigits, align 4, !dbg !2620
  %cmp198 = icmp sle i32 %151, %152, !dbg !2621
  br i1 %cmp198, label %land.lhs.true200, label %if.end265, !dbg !2622

land.lhs.true200:                                 ; preds = %land.lhs.true196
  %153 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2623
  %digits201 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %153, i32 0, i32 0, !dbg !2624
  %154 = load i32, i32* %digits201, align 4, !dbg !2624
  %155 = load i32, i32* %reqdigits, align 4, !dbg !2625
  %cmp202 = icmp sle i32 %154, %155, !dbg !2626
  br i1 %cmp202, label %if.then204, label %if.end265, !dbg !2627

if.then204:                                       ; preds = %land.lhs.true200
  call void @llvm.dbg.declare(metadata i32* %partial, metadata !2628, metadata !DIExpression()), !dbg !2630
  %156 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2631
  %lsu205 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %156, i32 0, i32 3, !dbg !2632
  %arraydecay206 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu205, i64 0, i64 0, !dbg !2633
  %157 = load i16, i16* %arraydecay206, align 2, !dbg !2633
  %conv207 = zext i16 %157 to i32, !dbg !2633
  store i32 %conv207, i32* %partial, align 4, !dbg !2630
  %158 = load i8, i8* %diffsign, align 1, !dbg !2634
  %tobool208 = icmp ne i8 %158, 0, !dbg !2634
  br i1 %tobool208, label %if.else233, label %if.then209, !dbg !2636

if.then209:                                       ; preds = %if.then204
  %159 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2637
  %lsu210 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %159, i32 0, i32 3, !dbg !2639
  %arraydecay211 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu210, i64 0, i64 0, !dbg !2640
  %160 = load i16, i16* %arraydecay211, align 2, !dbg !2640
  %conv212 = zext i16 %160 to i32, !dbg !2640
  %161 = load i32, i32* %partial, align 4, !dbg !2641
  %add213 = add nsw i32 %161, %conv212, !dbg !2641
  store i32 %add213, i32* %partial, align 4, !dbg !2641
  %162 = load i32, i32* %partial, align 4, !dbg !2642
  %cmp214 = icmp sle i32 %162, 999, !dbg !2644
  br i1 %cmp214, label %land.lhs.true216, label %if.end232, !dbg !2645

land.lhs.true216:                                 ; preds = %if.then209
  %163 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2646
  %digits217 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %163, i32 0, i32 0, !dbg !2647
  %164 = load i32, i32* %digits217, align 4, !dbg !2647
  %cmp218 = icmp sge i32 %164, 3, !dbg !2648
  br i1 %cmp218, label %if.then223, label %lor.lhs.false, !dbg !2649

lor.lhs.false:                                    ; preds = %land.lhs.true216
  %165 = load i32, i32* %partial, align 4, !dbg !2650
  %166 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2651
  %digits220 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %166, i32 0, i32 0, !dbg !2652
  %167 = load i32, i32* %digits220, align 4, !dbg !2652
  %idxprom = sext i32 %167 to i64, !dbg !2653
  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom, !dbg !2653
  %168 = load i32, i32* %arrayidx, align 4, !dbg !2653
  %cmp221 = icmp slt i32 %165, %168, !dbg !2654
  br i1 %cmp221, label %if.then223, label %if.end232, !dbg !2655

if.then223:                                       ; preds = %lor.lhs.false, %land.lhs.true216
  %169 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2656
  %170 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2659
  %cmp224 = icmp ne %struct.decNumber* %169, %170, !dbg !2660
  br i1 %cmp224, label %if.then226, label %if.end228, !dbg !2661

if.then226:                                       ; preds = %if.then223
  %171 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2662
  %172 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2663
  %call227 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %171, %struct.decNumber* %172), !dbg !2664
  br label %if.end228, !dbg !2664

if.end228:                                        ; preds = %if.then226, %if.then223
  %173 = load i32, i32* %partial, align 4, !dbg !2665
  %conv229 = trunc i32 %173 to i16, !dbg !2666
  %174 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2667
  %lsu230 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %174, i32 0, i32 3, !dbg !2668
  %arraydecay231 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu230, i64 0, i64 0, !dbg !2669
  store i16 %conv229, i16* %arraydecay231, align 2, !dbg !2670
  br label %do.end, !dbg !2671

if.end232:                                        ; preds = %lor.lhs.false, %if.then209
  br label %if.end264, !dbg !2672

if.else233:                                       ; preds = %if.then204
  %175 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2673
  %lsu234 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %175, i32 0, i32 3, !dbg !2675
  %arraydecay235 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu234, i64 0, i64 0, !dbg !2676
  %176 = load i16, i16* %arraydecay235, align 2, !dbg !2676
  %conv236 = zext i16 %176 to i32, !dbg !2676
  %177 = load i32, i32* %partial, align 4, !dbg !2677
  %sub237 = sub nsw i32 %177, %conv236, !dbg !2677
  store i32 %sub237, i32* %partial, align 4, !dbg !2677
  %178 = load i32, i32* %partial, align 4, !dbg !2678
  %cmp238 = icmp sgt i32 %178, 0, !dbg !2680
  br i1 %cmp238, label %if.then240, label %if.end263, !dbg !2681

if.then240:                                       ; preds = %if.else233
  %179 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2682
  %180 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2685
  %cmp241 = icmp ne %struct.decNumber* %179, %180, !dbg !2686
  br i1 %cmp241, label %if.then243, label %if.end245, !dbg !2687

if.then243:                                       ; preds = %if.then240
  %181 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2688
  %182 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2689
  %call244 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %181, %struct.decNumber* %182), !dbg !2690
  br label %if.end245, !dbg !2690

if.end245:                                        ; preds = %if.then243, %if.then240
  %183 = load i32, i32* %partial, align 4, !dbg !2691
  %conv246 = trunc i32 %183 to i16, !dbg !2692
  %184 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2693
  %lsu247 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %184, i32 0, i32 3, !dbg !2694
  %arraydecay248 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu247, i64 0, i64 0, !dbg !2695
  store i16 %conv246, i16* %arraydecay248, align 2, !dbg !2696
  %185 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2697
  %lsu249 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %185, i32 0, i32 3, !dbg !2698
  %arraydecay250 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu249, i64 0, i64 0, !dbg !2697
  %186 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2699
  %digits251 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %186, i32 0, i32 0, !dbg !2699
  %187 = load i32, i32* %digits251, align 4, !dbg !2699
  %cmp252 = icmp sle i32 %187, 49, !dbg !2699
  br i1 %cmp252, label %cond.true, label %cond.false, !dbg !2699

cond.true:                                        ; preds = %if.end245
  %188 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2699
  %digits254 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %188, i32 0, i32 0, !dbg !2699
  %189 = load i32, i32* %digits254, align 4, !dbg !2699
  %idxprom255 = sext i32 %189 to i64, !dbg !2699
  %arrayidx256 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom255, !dbg !2699
  %190 = load i8, i8* %arrayidx256, align 1, !dbg !2699
  %conv257 = zext i8 %190 to i32, !dbg !2699
  br label %cond.end, !dbg !2699

cond.false:                                       ; preds = %if.end245
  %191 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2699
  %digits258 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %191, i32 0, i32 0, !dbg !2699
  %192 = load i32, i32* %digits258, align 4, !dbg !2699
  %add259 = add nsw i32 %192, 3, !dbg !2699
  %sub260 = sub nsw i32 %add259, 1, !dbg !2699
  %div = sdiv i32 %sub260, 3, !dbg !2699
  br label %cond.end, !dbg !2699

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv257, %cond.true ], [ %div, %cond.false ], !dbg !2699
  %call261 = call i32 @decGetDigits(i16* %arraydecay250, i32 %cond), !dbg !2700
  %193 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2701
  %digits262 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %193, i32 0, i32 0, !dbg !2702
  store i32 %call261, i32* %digits262, align 4, !dbg !2703
  br label %do.end, !dbg !2704

if.end263:                                        ; preds = %if.else233
  br label %if.end264

if.end264:                                        ; preds = %if.end263, %if.end232
  br label %if.end265, !dbg !2705

if.end265:                                        ; preds = %if.end264, %land.lhs.true200, %land.lhs.true196, %land.lhs.true189, %land.lhs.true185, %land.lhs.true181, %if.end175
  store i32 0, i32* %rhsshift, align 4, !dbg !2706
  %194 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2707
  %bits266 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %194, i32 0, i32 2, !dbg !2708
  %195 = load i8, i8* %bits266, align 4, !dbg !2708
  store i8 %195, i8* %bits, align 1, !dbg !2709
  store i32 1, i32* %mult, align 4, !dbg !2710
  %196 = load i32, i32* %padding, align 4, !dbg !2711
  %cmp267 = icmp ne i32 %196, 0, !dbg !2713
  br i1 %cmp267, label %if.then269, label %if.end333, !dbg !2714

if.then269:                                       ; preds = %if.end265
  call void @llvm.dbg.declare(metadata i8* %swapped, metadata !2715, metadata !DIExpression()), !dbg !2717
  store i8 0, i8* %swapped, align 1, !dbg !2717
  %197 = load i32, i32* %padding, align 4, !dbg !2718
  %cmp270 = icmp slt i32 %197, 0, !dbg !2720
  br i1 %cmp270, label %if.then272, label %if.end279, !dbg !2721

if.then272:                                       ; preds = %if.then269
  call void @llvm.dbg.declare(metadata %struct.decNumber** %t, metadata !2722, metadata !DIExpression()), !dbg !2724
  %198 = load i32, i32* %padding, align 4, !dbg !2725
  %sub273 = sub nsw i32 0, %198, !dbg !2726
  store i32 %sub273, i32* %padding, align 4, !dbg !2727
  %199 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2728
  %bits274 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %199, i32 0, i32 2, !dbg !2729
  %200 = load i8, i8* %bits274, align 4, !dbg !2729
  %conv275 = zext i8 %200 to i32, !dbg !2728
  %201 = load i8, i8* %negate.addr, align 1, !dbg !2730
  %conv276 = zext i8 %201 to i32, !dbg !2730
  %xor277 = xor i32 %conv275, %conv276, !dbg !2731
  %conv278 = trunc i32 %xor277 to i8, !dbg !2732
  store i8 %conv278, i8* %bits, align 1, !dbg !2733
  %202 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2734
  store %struct.decNumber* %202, %struct.decNumber** %t, align 8, !dbg !2735
  %203 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2736
  store %struct.decNumber* %203, %struct.decNumber** %lhs.addr, align 8, !dbg !2737
  %204 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !2738
  store %struct.decNumber* %204, %struct.decNumber** %rhs.addr, align 8, !dbg !2739
  store i8 1, i8* %swapped, align 1, !dbg !2740
  br label %if.end279, !dbg !2741

if.end279:                                        ; preds = %if.then272, %if.then269
  %205 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2742
  %digits280 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %205, i32 0, i32 0, !dbg !2744
  %206 = load i32, i32* %digits280, align 4, !dbg !2744
  %207 = load i32, i32* %padding, align 4, !dbg !2745
  %add281 = add nsw i32 %206, %207, !dbg !2746
  %208 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2747
  %digits282 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %208, i32 0, i32 0, !dbg !2748
  %209 = load i32, i32* %digits282, align 4, !dbg !2748
  %210 = load i32, i32* %reqdigits, align 4, !dbg !2749
  %add283 = add nsw i32 %209, %210, !dbg !2750
  %add284 = add nsw i32 %add283, 1, !dbg !2751
  %cmp285 = icmp sgt i32 %add281, %add284, !dbg !2752
  br i1 %cmp285, label %if.then287, label %if.end313, !dbg !2753

if.then287:                                       ; preds = %if.end279
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !2754, metadata !DIExpression()), !dbg !2756
  %211 = load i32, i32* %reqdigits, align 4, !dbg !2757
  %212 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2758
  %digits288 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %212, i32 0, i32 0, !dbg !2759
  %213 = load i32, i32* %digits288, align 4, !dbg !2759
  %sub289 = sub nsw i32 %211, %213, !dbg !2760
  store i32 %sub289, i32* %shift, align 4, !dbg !2756
  store i32 1, i32* %residue, align 4, !dbg !2761
  %214 = load i8, i8* %diffsign, align 1, !dbg !2762
  %tobool290 = icmp ne i8 %214, 0, !dbg !2762
  br i1 %tobool290, label %if.then291, label %if.end293, !dbg !2764

if.then291:                                       ; preds = %if.then287
  %215 = load i32, i32* %residue, align 4, !dbg !2765
  %sub292 = sub nsw i32 0, %215, !dbg !2766
  store i32 %sub292, i32* %residue, align 4, !dbg !2767
  br label %if.end293, !dbg !2768

if.end293:                                        ; preds = %if.then291, %if.then287
  %216 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2769
  %217 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2770
  %218 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2771
  %219 = load i32*, i32** %status.addr, align 8, !dbg !2772
  call void @decCopyFit(%struct.decNumber* %216, %struct.decNumber* %217, %struct.decContext* %218, i32* %residue, i32* %219), !dbg !2773
  %220 = load i32, i32* %shift, align 4, !dbg !2774
  %cmp294 = icmp sgt i32 %220, 0, !dbg !2776
  br i1 %cmp294, label %if.then296, label %if.end304, !dbg !2777

if.then296:                                       ; preds = %if.end293
  %221 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2778
  %lsu297 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %221, i32 0, i32 3, !dbg !2780
  %arraydecay298 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu297, i64 0, i64 0, !dbg !2778
  %222 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2781
  %digits299 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %222, i32 0, i32 0, !dbg !2782
  %223 = load i32, i32* %digits299, align 4, !dbg !2782
  %224 = load i32, i32* %shift, align 4, !dbg !2783
  %call300 = call i32 @decShiftToMost(i16* %arraydecay298, i32 %223, i32 %224), !dbg !2784
  %225 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2785
  %digits301 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %225, i32 0, i32 0, !dbg !2786
  store i32 %call300, i32* %digits301, align 4, !dbg !2787
  %226 = load i32, i32* %shift, align 4, !dbg !2788
  %227 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2789
  %exponent302 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %227, i32 0, i32 1, !dbg !2790
  %228 = load i32, i32* %exponent302, align 4, !dbg !2791
  %sub303 = sub nsw i32 %228, %226, !dbg !2791
  store i32 %sub303, i32* %exponent302, align 4, !dbg !2791
  br label %if.end304, !dbg !2792

if.end304:                                        ; preds = %if.then296, %if.end293
  %229 = load i8, i8* %swapped, align 1, !dbg !2793
  %tobool305 = icmp ne i8 %229, 0, !dbg !2793
  br i1 %tobool305, label %if.end312, label %if.then306, !dbg !2795

if.then306:                                       ; preds = %if.end304
  %230 = load i8, i8* %negate.addr, align 1, !dbg !2796
  %conv307 = zext i8 %230 to i32, !dbg !2796
  %231 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2797
  %bits308 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %231, i32 0, i32 2, !dbg !2798
  %232 = load i8, i8* %bits308, align 4, !dbg !2799
  %conv309 = zext i8 %232 to i32, !dbg !2799
  %xor310 = xor i32 %conv309, %conv307, !dbg !2799
  %conv311 = trunc i32 %xor310 to i8, !dbg !2799
  store i8 %conv311, i8* %bits308, align 4, !dbg !2799
  br label %if.end312, !dbg !2797

if.end312:                                        ; preds = %if.then306, %if.end304
  %233 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2800
  %234 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2800
  %235 = load i32*, i32** %status.addr, align 8, !dbg !2800
  call void @decFinalize(%struct.decNumber* %233, %struct.decContext* %234, i32* %residue, i32* %235), !dbg !2800
  br label %do.end, !dbg !2801

if.end313:                                        ; preds = %if.end279
  %236 = load i32, i32* %padding, align 4, !dbg !2802
  %add314 = add nsw i32 %236, 1, !dbg !2802
  %cmp315 = icmp sle i32 %add314, 49, !dbg !2802
  br i1 %cmp315, label %cond.true317, label %cond.false322, !dbg !2802

cond.true317:                                     ; preds = %if.end313
  %237 = load i32, i32* %padding, align 4, !dbg !2802
  %add318 = add nsw i32 %237, 1, !dbg !2802
  %idxprom319 = sext i32 %add318 to i64, !dbg !2802
  %arrayidx320 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom319, !dbg !2802
  %238 = load i8, i8* %arrayidx320, align 1, !dbg !2802
  %conv321 = zext i8 %238 to i32, !dbg !2802
  br label %cond.end327, !dbg !2802

cond.false322:                                    ; preds = %if.end313
  %239 = load i32, i32* %padding, align 4, !dbg !2802
  %add323 = add nsw i32 %239, 1, !dbg !2802
  %add324 = add nsw i32 %add323, 3, !dbg !2802
  %sub325 = sub nsw i32 %add324, 1, !dbg !2802
  %div326 = sdiv i32 %sub325, 3, !dbg !2802
  br label %cond.end327, !dbg !2802

cond.end327:                                      ; preds = %cond.false322, %cond.true317
  %cond328 = phi i32 [ %conv321, %cond.true317 ], [ %div326, %cond.false322 ], !dbg !2802
  %sub329 = sub nsw i32 %cond328, 1, !dbg !2803
  store i32 %sub329, i32* %rhsshift, align 4, !dbg !2804
  %240 = load i32, i32* %padding, align 4, !dbg !2805
  %241 = load i32, i32* %rhsshift, align 4, !dbg !2806
  %mul = mul nsw i32 %241, 3, !dbg !2807
  %sub330 = sub nsw i32 %240, %mul, !dbg !2808
  %idxprom331 = sext i32 %sub330 to i64, !dbg !2809
  %arrayidx332 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom331, !dbg !2809
  %242 = load i32, i32* %arrayidx332, align 4, !dbg !2809
  store i32 %242, i32* %mult, align 4, !dbg !2810
  br label %if.end333, !dbg !2811

if.end333:                                        ; preds = %cond.end327, %if.end265
  %243 = load i8, i8* %diffsign, align 1, !dbg !2812
  %tobool334 = icmp ne i8 %243, 0, !dbg !2812
  br i1 %tobool334, label %if.then335, label %if.end337, !dbg !2814

if.then335:                                       ; preds = %if.end333
  %244 = load i32, i32* %mult, align 4, !dbg !2815
  %sub336 = sub nsw i32 0, %244, !dbg !2816
  store i32 %sub336, i32* %mult, align 4, !dbg !2817
  br label %if.end337, !dbg !2818

if.end337:                                        ; preds = %if.then335, %if.end333
  %245 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2819
  %digits338 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %245, i32 0, i32 0, !dbg !2820
  %246 = load i32, i32* %digits338, align 4, !dbg !2820
  %247 = load i32, i32* %padding, align 4, !dbg !2821
  %add339 = add nsw i32 %246, %247, !dbg !2822
  store i32 %add339, i32* %maxdigits, align 4, !dbg !2823
  %248 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2824
  %digits340 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %248, i32 0, i32 0, !dbg !2826
  %249 = load i32, i32* %digits340, align 4, !dbg !2826
  %250 = load i32, i32* %maxdigits, align 4, !dbg !2827
  %cmp341 = icmp sgt i32 %249, %250, !dbg !2828
  br i1 %cmp341, label %if.then343, label %if.end345, !dbg !2829

if.then343:                                       ; preds = %if.end337
  %251 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2830
  %digits344 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %251, i32 0, i32 0, !dbg !2831
  %252 = load i32, i32* %digits344, align 4, !dbg !2831
  store i32 %252, i32* %maxdigits, align 4, !dbg !2832
  br label %if.end345, !dbg !2833

if.end345:                                        ; preds = %if.then343, %if.end337
  %253 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2834
  %lsu346 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %253, i32 0, i32 3, !dbg !2835
  %arraydecay347 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu346, i64 0, i64 0, !dbg !2834
  store i16* %arraydecay347, i16** %acc, align 8, !dbg !2836
  %254 = load i32, i32* %maxdigits, align 4, !dbg !2837
  %255 = load i32, i32* %reqdigits, align 4, !dbg !2839
  %cmp348 = icmp sge i32 %254, %255, !dbg !2840
  br i1 %cmp348, label %if.then356, label %lor.lhs.false350, !dbg !2841

lor.lhs.false350:                                 ; preds = %if.end345
  %256 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2842
  %257 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2843
  %cmp351 = icmp eq %struct.decNumber* %256, %257, !dbg !2844
  br i1 %cmp351, label %land.lhs.true353, label %if.end385, !dbg !2845

land.lhs.true353:                                 ; preds = %lor.lhs.false350
  %258 = load i32, i32* %rhsshift, align 4, !dbg !2846
  %cmp354 = icmp sgt i32 %258, 0, !dbg !2847
  br i1 %cmp354, label %if.then356, label %if.end385, !dbg !2848

if.then356:                                       ; preds = %land.lhs.true353, %if.end345
  call void @llvm.dbg.declare(metadata i32* %need, metadata !2849, metadata !DIExpression()), !dbg !2851
  %259 = load i32, i32* %maxdigits, align 4, !dbg !2852
  %cmp357 = icmp sle i32 %259, 49, !dbg !2852
  br i1 %cmp357, label %cond.true359, label %cond.false363, !dbg !2852

cond.true359:                                     ; preds = %if.then356
  %260 = load i32, i32* %maxdigits, align 4, !dbg !2852
  %idxprom360 = sext i32 %260 to i64, !dbg !2852
  %arrayidx361 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom360, !dbg !2852
  %261 = load i8, i8* %arrayidx361, align 1, !dbg !2852
  %conv362 = zext i8 %261 to i32, !dbg !2852
  br label %cond.end367, !dbg !2852

cond.false363:                                    ; preds = %if.then356
  %262 = load i32, i32* %maxdigits, align 4, !dbg !2852
  %add364 = add nsw i32 %262, 3, !dbg !2852
  %sub365 = sub nsw i32 %add364, 1, !dbg !2852
  %div366 = sdiv i32 %sub365, 3, !dbg !2852
  br label %cond.end367, !dbg !2852

cond.end367:                                      ; preds = %cond.false363, %cond.true359
  %cond368 = phi i32 [ %conv362, %cond.true359 ], [ %div366, %cond.false363 ], !dbg !2852
  %add369 = add nsw i32 %cond368, 1, !dbg !2853
  store i32 %add369, i32* %need, align 4, !dbg !2851
  %arraydecay370 = getelementptr inbounds [31 x i16], [31 x i16]* %accbuff, i64 0, i64 0, !dbg !2854
  store i16* %arraydecay370, i16** %acc, align 8, !dbg !2855
  %263 = load i32, i32* %need, align 4, !dbg !2856
  %conv371 = sext i32 %263 to i64, !dbg !2856
  %mul372 = mul i64 %conv371, 2, !dbg !2858
  %cmp373 = icmp ugt i64 %mul372, 62, !dbg !2859
  br i1 %cmp373, label %if.then375, label %if.end384, !dbg !2860

if.then375:                                       ; preds = %cond.end367
  %264 = load i32, i32* %need, align 4, !dbg !2861
  %conv376 = sext i32 %264 to i64, !dbg !2861
  %mul377 = mul i64 %conv376, 2, !dbg !2863
  %call378 = call noalias i8* @malloc(i64 %mul377) #6, !dbg !2864
  %265 = bitcast i8* %call378 to i16*, !dbg !2865
  store i16* %265, i16** %allocacc, align 8, !dbg !2866
  %266 = load i16*, i16** %allocacc, align 8, !dbg !2867
  %cmp379 = icmp eq i16* %266, null, !dbg !2869
  br i1 %cmp379, label %if.then381, label %if.end383, !dbg !2870

if.then381:                                       ; preds = %if.then375
  %267 = load i32*, i32** %status.addr, align 8, !dbg !2871
  %268 = load i32, i32* %267, align 4, !dbg !2873
  %or382 = or i32 %268, 16, !dbg !2873
  store i32 %or382, i32* %267, align 4, !dbg !2873
  br label %do.end, !dbg !2874

if.end383:                                        ; preds = %if.then375
  %269 = load i16*, i16** %allocacc, align 8, !dbg !2875
  store i16* %269, i16** %acc, align 8, !dbg !2876
  br label %if.end384, !dbg !2877

if.end384:                                        ; preds = %if.end383, %cond.end367
  br label %if.end385, !dbg !2878

if.end385:                                        ; preds = %if.end384, %land.lhs.true353, %lor.lhs.false350
  %270 = load i8, i8* %bits, align 1, !dbg !2879
  %conv386 = zext i8 %270 to i32, !dbg !2879
  %and387 = and i32 %conv386, 128, !dbg !2880
  %conv388 = trunc i32 %and387 to i8, !dbg !2881
  %271 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2882
  %bits389 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %271, i32 0, i32 2, !dbg !2883
  store i8 %conv388, i8* %bits389, align 4, !dbg !2884
  %272 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2885
  %exponent390 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %272, i32 0, i32 1, !dbg !2886
  %273 = load i32, i32* %exponent390, align 4, !dbg !2886
  %274 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2887
  %exponent391 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %274, i32 0, i32 1, !dbg !2888
  store i32 %273, i32* %exponent391, align 4, !dbg !2889
  %275 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2890
  %lsu392 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %275, i32 0, i32 3, !dbg !2891
  %arraydecay393 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu392, i64 0, i64 0, !dbg !2890
  %276 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2892
  %digits394 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %276, i32 0, i32 0, !dbg !2892
  %277 = load i32, i32* %digits394, align 4, !dbg !2892
  %cmp395 = icmp sle i32 %277, 49, !dbg !2892
  br i1 %cmp395, label %cond.true397, label %cond.false402, !dbg !2892

cond.true397:                                     ; preds = %if.end385
  %278 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2892
  %digits398 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %278, i32 0, i32 0, !dbg !2892
  %279 = load i32, i32* %digits398, align 4, !dbg !2892
  %idxprom399 = sext i32 %279 to i64, !dbg !2892
  %arrayidx400 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom399, !dbg !2892
  %280 = load i8, i8* %arrayidx400, align 1, !dbg !2892
  %conv401 = zext i8 %280 to i32, !dbg !2892
  br label %cond.end407, !dbg !2892

cond.false402:                                    ; preds = %if.end385
  %281 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !2892
  %digits403 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %281, i32 0, i32 0, !dbg !2892
  %282 = load i32, i32* %digits403, align 4, !dbg !2892
  %add404 = add nsw i32 %282, 3, !dbg !2892
  %sub405 = sub nsw i32 %add404, 1, !dbg !2892
  %div406 = sdiv i32 %sub405, 3, !dbg !2892
  br label %cond.end407, !dbg !2892

cond.end407:                                      ; preds = %cond.false402, %cond.true397
  %cond408 = phi i32 [ %conv401, %cond.true397 ], [ %div406, %cond.false402 ], !dbg !2892
  %283 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2893
  %lsu409 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %283, i32 0, i32 3, !dbg !2894
  %arraydecay410 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu409, i64 0, i64 0, !dbg !2893
  %284 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2895
  %digits411 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %284, i32 0, i32 0, !dbg !2895
  %285 = load i32, i32* %digits411, align 4, !dbg !2895
  %cmp412 = icmp sle i32 %285, 49, !dbg !2895
  br i1 %cmp412, label %cond.true414, label %cond.false419, !dbg !2895

cond.true414:                                     ; preds = %cond.end407
  %286 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2895
  %digits415 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %286, i32 0, i32 0, !dbg !2895
  %287 = load i32, i32* %digits415, align 4, !dbg !2895
  %idxprom416 = sext i32 %287 to i64, !dbg !2895
  %arrayidx417 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom416, !dbg !2895
  %288 = load i8, i8* %arrayidx417, align 1, !dbg !2895
  %conv418 = zext i8 %288 to i32, !dbg !2895
  br label %cond.end424, !dbg !2895

cond.false419:                                    ; preds = %cond.end407
  %289 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !2895
  %digits420 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %289, i32 0, i32 0, !dbg !2895
  %290 = load i32, i32* %digits420, align 4, !dbg !2895
  %add421 = add nsw i32 %290, 3, !dbg !2895
  %sub422 = sub nsw i32 %add421, 1, !dbg !2895
  %div423 = sdiv i32 %sub422, 3, !dbg !2895
  br label %cond.end424, !dbg !2895

cond.end424:                                      ; preds = %cond.false419, %cond.true414
  %cond425 = phi i32 [ %conv418, %cond.true414 ], [ %div423, %cond.false419 ], !dbg !2895
  %291 = load i32, i32* %rhsshift, align 4, !dbg !2896
  %292 = load i16*, i16** %acc, align 8, !dbg !2897
  %293 = load i32, i32* %mult, align 4, !dbg !2898
  %call426 = call i32 @decUnitAddSub(i16* %arraydecay393, i32 %cond408, i16* %arraydecay410, i32 %cond425, i32 %291, i16* %292, i32 %293), !dbg !2899
  %mul427 = mul nsw i32 %call426, 3, !dbg !2900
  %294 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2901
  %digits428 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %294, i32 0, i32 0, !dbg !2902
  store i32 %mul427, i32* %digits428, align 4, !dbg !2903
  %295 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2904
  %digits429 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %295, i32 0, i32 0, !dbg !2906
  %296 = load i32, i32* %digits429, align 4, !dbg !2906
  %cmp430 = icmp slt i32 %296, 0, !dbg !2907
  br i1 %cmp430, label %if.then432, label %if.end440, !dbg !2908

if.then432:                                       ; preds = %cond.end424
  %297 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2909
  %digits433 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %297, i32 0, i32 0, !dbg !2911
  %298 = load i32, i32* %digits433, align 4, !dbg !2911
  %sub434 = sub nsw i32 0, %298, !dbg !2912
  %299 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2913
  %digits435 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %299, i32 0, i32 0, !dbg !2914
  store i32 %sub434, i32* %digits435, align 4, !dbg !2915
  %300 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2916
  %bits436 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %300, i32 0, i32 2, !dbg !2917
  %301 = load i8, i8* %bits436, align 4, !dbg !2918
  %conv437 = zext i8 %301 to i32, !dbg !2918
  %xor438 = xor i32 %conv437, 128, !dbg !2918
  %conv439 = trunc i32 %xor438 to i8, !dbg !2918
  store i8 %conv439, i8* %bits436, align 4, !dbg !2918
  br label %if.end440, !dbg !2919

if.end440:                                        ; preds = %if.then432, %cond.end424
  store i32 0, i32* %residue, align 4, !dbg !2920
  %302 = load i16*, i16** %acc, align 8, !dbg !2921
  %303 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2923
  %lsu441 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %303, i32 0, i32 3, !dbg !2924
  %arraydecay442 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu441, i64 0, i64 0, !dbg !2923
  %cmp443 = icmp ne i16* %302, %arraydecay442, !dbg !2925
  br i1 %cmp443, label %if.then445, label %if.end469, !dbg !2926

if.then445:                                       ; preds = %if.end440
  %304 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2927
  %digits446 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %304, i32 0, i32 0, !dbg !2930
  %305 = load i32, i32* %digits446, align 4, !dbg !2930
  %306 = load i32, i32* %reqdigits, align 4, !dbg !2931
  %cmp447 = icmp sgt i32 %305, %306, !dbg !2932
  br i1 %cmp447, label %if.then449, label %if.end467, !dbg !2933

if.then449:                                       ; preds = %if.then445
  %307 = load i16*, i16** %acc, align 8, !dbg !2934
  %308 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2935
  %digits450 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %308, i32 0, i32 0, !dbg !2935
  %309 = load i32, i32* %digits450, align 4, !dbg !2935
  %cmp451 = icmp sle i32 %309, 49, !dbg !2935
  br i1 %cmp451, label %cond.true453, label %cond.false458, !dbg !2935

cond.true453:                                     ; preds = %if.then449
  %310 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2935
  %digits454 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %310, i32 0, i32 0, !dbg !2935
  %311 = load i32, i32* %digits454, align 4, !dbg !2935
  %idxprom455 = sext i32 %311 to i64, !dbg !2935
  %arrayidx456 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom455, !dbg !2935
  %312 = load i8, i8* %arrayidx456, align 1, !dbg !2935
  %conv457 = zext i8 %312 to i32, !dbg !2935
  br label %cond.end463, !dbg !2935

cond.false458:                                    ; preds = %if.then449
  %313 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2935
  %digits459 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %313, i32 0, i32 0, !dbg !2935
  %314 = load i32, i32* %digits459, align 4, !dbg !2935
  %add460 = add nsw i32 %314, 3, !dbg !2935
  %sub461 = sub nsw i32 %add460, 1, !dbg !2935
  %div462 = sdiv i32 %sub461, 3, !dbg !2935
  br label %cond.end463, !dbg !2935

cond.end463:                                      ; preds = %cond.false458, %cond.true453
  %cond464 = phi i32 [ %conv457, %cond.true453 ], [ %div462, %cond.false458 ], !dbg !2935
  %call465 = call i32 @decGetDigits(i16* %307, i32 %cond464), !dbg !2936
  %315 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2937
  %digits466 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %315, i32 0, i32 0, !dbg !2938
  store i32 %call465, i32* %digits466, align 4, !dbg !2939
  br label %if.end467, !dbg !2937

if.end467:                                        ; preds = %cond.end463, %if.then445
  %316 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2940
  %317 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2941
  %318 = load i16*, i16** %acc, align 8, !dbg !2942
  %319 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2943
  %digits468 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %319, i32 0, i32 0, !dbg !2944
  %320 = load i32, i32* %digits468, align 4, !dbg !2944
  %321 = load i32*, i32** %status.addr, align 8, !dbg !2945
  call void @decSetCoeff(%struct.decNumber* %316, %struct.decContext* %317, i16* %318, i32 %320, i32* %residue, i32* %321), !dbg !2946
  br label %if.end469, !dbg !2947

if.end469:                                        ; preds = %if.end467, %if.end440
  %322 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2948
  %lsu470 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %322, i32 0, i32 3, !dbg !2949
  %arraydecay471 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu470, i64 0, i64 0, !dbg !2948
  %323 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2950
  %digits472 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %323, i32 0, i32 0, !dbg !2950
  %324 = load i32, i32* %digits472, align 4, !dbg !2950
  %cmp473 = icmp sle i32 %324, 49, !dbg !2950
  br i1 %cmp473, label %cond.true475, label %cond.false480, !dbg !2950

cond.true475:                                     ; preds = %if.end469
  %325 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2950
  %digits476 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %325, i32 0, i32 0, !dbg !2950
  %326 = load i32, i32* %digits476, align 4, !dbg !2950
  %idxprom477 = sext i32 %326 to i64, !dbg !2950
  %arrayidx478 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom477, !dbg !2950
  %327 = load i8, i8* %arrayidx478, align 1, !dbg !2950
  %conv479 = zext i8 %327 to i32, !dbg !2950
  br label %cond.end485, !dbg !2950

cond.false480:                                    ; preds = %if.end469
  %328 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2950
  %digits481 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %328, i32 0, i32 0, !dbg !2950
  %329 = load i32, i32* %digits481, align 4, !dbg !2950
  %add482 = add nsw i32 %329, 3, !dbg !2950
  %sub483 = sub nsw i32 %add482, 1, !dbg !2950
  %div484 = sdiv i32 %sub483, 3, !dbg !2950
  br label %cond.end485, !dbg !2950

cond.end485:                                      ; preds = %cond.false480, %cond.true475
  %cond486 = phi i32 [ %conv479, %cond.true475 ], [ %div484, %cond.false480 ], !dbg !2950
  %call487 = call i32 @decGetDigits(i16* %arraydecay471, i32 %cond486), !dbg !2951
  %330 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2952
  %digits488 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %330, i32 0, i32 0, !dbg !2953
  store i32 %call487, i32* %digits488, align 4, !dbg !2954
  %331 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2955
  %332 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2955
  %333 = load i32*, i32** %status.addr, align 8, !dbg !2955
  call void @decFinalize(%struct.decNumber* %331, %struct.decContext* %332, i32* %residue, i32* %333), !dbg !2955
  %334 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2956
  %lsu489 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %334, i32 0, i32 3, !dbg !2956
  %arraydecay490 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu489, i64 0, i64 0, !dbg !2956
  %335 = load i16, i16* %arraydecay490, align 2, !dbg !2956
  %conv491 = zext i16 %335 to i32, !dbg !2956
  %cmp492 = icmp eq i32 %conv491, 0, !dbg !2956
  br i1 %cmp492, label %land.lhs.true494, label %if.end526, !dbg !2956

land.lhs.true494:                                 ; preds = %cond.end485
  %336 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2956
  %digits495 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %336, i32 0, i32 0, !dbg !2956
  %337 = load i32, i32* %digits495, align 4, !dbg !2956
  %cmp496 = icmp eq i32 %337, 1, !dbg !2956
  br i1 %cmp496, label %land.lhs.true498, label %if.end526, !dbg !2956

land.lhs.true498:                                 ; preds = %land.lhs.true494
  %338 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2956
  %bits499 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %338, i32 0, i32 2, !dbg !2956
  %339 = load i8, i8* %bits499, align 4, !dbg !2956
  %conv500 = zext i8 %339 to i32, !dbg !2956
  %and501 = and i32 %conv500, 112, !dbg !2956
  %cmp502 = icmp eq i32 %and501, 0, !dbg !2956
  br i1 %cmp502, label %land.lhs.true504, label %if.end526, !dbg !2958

land.lhs.true504:                                 ; preds = %land.lhs.true498
  %340 = load i8, i8* %diffsign, align 1, !dbg !2959
  %conv505 = zext i8 %340 to i32, !dbg !2959
  %tobool506 = icmp ne i32 %conv505, 0, !dbg !2959
  br i1 %tobool506, label %land.lhs.true507, label %if.end526, !dbg !2960

land.lhs.true507:                                 ; preds = %land.lhs.true504
  %341 = load i32*, i32** %status.addr, align 8, !dbg !2961
  %342 = load i32, i32* %341, align 4, !dbg !2962
  %and508 = and i32 %342, 32, !dbg !2963
  %cmp509 = icmp eq i32 %and508, 0, !dbg !2964
  br i1 %cmp509, label %if.then511, label %if.end526, !dbg !2965

if.then511:                                       ; preds = %land.lhs.true507
  %343 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !2966
  %round512 = getelementptr inbounds %struct.decContext, %struct.decContext* %343, i32 0, i32 3, !dbg !2969
  %344 = load i32, i32* %round512, align 4, !dbg !2969
  %cmp513 = icmp eq i32 %344, 6, !dbg !2970
  br i1 %cmp513, label %if.then515, label %if.else520, !dbg !2971

if.then515:                                       ; preds = %if.then511
  %345 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2972
  %bits516 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %345, i32 0, i32 2, !dbg !2973
  %346 = load i8, i8* %bits516, align 4, !dbg !2974
  %conv517 = zext i8 %346 to i32, !dbg !2974
  %or518 = or i32 %conv517, 128, !dbg !2974
  %conv519 = trunc i32 %or518 to i8, !dbg !2974
  store i8 %conv519, i8* %bits516, align 4, !dbg !2974
  br label %if.end525, !dbg !2972

if.else520:                                       ; preds = %if.then511
  %347 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2975
  %bits521 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %347, i32 0, i32 2, !dbg !2976
  %348 = load i8, i8* %bits521, align 4, !dbg !2977
  %conv522 = zext i8 %348 to i32, !dbg !2977
  %and523 = and i32 %conv522, -129, !dbg !2977
  %conv524 = trunc i32 %and523 to i8, !dbg !2977
  store i8 %conv524, i8* %bits521, align 4, !dbg !2977
  br label %if.end525

if.end525:                                        ; preds = %if.else520, %if.then515
  br label %if.end526, !dbg !2978

if.end526:                                        ; preds = %if.end525, %land.lhs.true507, %land.lhs.true504, %land.lhs.true498, %land.lhs.true494, %cond.end485
  br label %do.end, !dbg !2979

do.end:                                           ; preds = %if.end526, %if.then381, %if.end312, %cond.end, %if.end228, %if.end174, %if.end129, %if.end52, %if.then33
  %349 = load i16*, i16** %allocacc, align 8, !dbg !2980
  %cmp527 = icmp ne i16* %349, null, !dbg !2982
  br i1 %cmp527, label %if.then529, label %if.end530, !dbg !2983

if.then529:                                       ; preds = %do.end
  %350 = load i16*, i16** %allocacc, align 8, !dbg !2984
  %351 = bitcast i16* %350 to i8*, !dbg !2984
  call void @free(i8* %351) #6, !dbg !2985
  br label %if.end530, !dbg !2985

if.end530:                                        ; preds = %if.then529, %do.end
  %352 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !2986
  ret %struct.decNumber* %352, !dbg !2987
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberAdd(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !2988 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !2991, metadata !DIExpression()), !dbg !2992
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !2993, metadata !DIExpression()), !dbg !2994
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !2995, metadata !DIExpression()), !dbg !2996
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !2997, metadata !DIExpression()), !dbg !2998
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2999, metadata !DIExpression()), !dbg !3000
  store i32 0, i32* %status, align 4, !dbg !3000
  %0 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3001
  %1 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3002
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3003
  %3 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3004
  %call = call %struct.decNumber* @decAddOp(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext 0, i32* %status), !dbg !3005
  %4 = load i32, i32* %status, align 4, !dbg !3006
  %cmp = icmp ne i32 %4, 0, !dbg !3008
  br i1 %cmp, label %if.then, label %if.end, !dbg !3009

if.then:                                          ; preds = %entry
  %5 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3010
  %6 = load i32, i32* %status, align 4, !dbg !3011
  %7 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3012
  call void @decStatus(%struct.decNumber* %5, i32 %6, %struct.decContext* %7), !dbg !3013
  br label %if.end, !dbg !3013

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3014
  ret %struct.decNumber* %8, !dbg !3015
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberAnd(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !3016 {
entry:
  %retval = alloca %struct.decNumber*, align 8
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %ua = alloca i16*, align 8
  %ub = alloca i16*, align 8
  %msua = alloca i16*, align 8
  %msub = alloca i16*, align 8
  %uc = alloca i16*, align 8
  %msuc = alloca i16*, align 8
  %msudigs = alloca i32, align 4
  %a = alloca i16, align 2
  %b = alloca i16, align 2
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !3017, metadata !DIExpression()), !dbg !3018
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !3019, metadata !DIExpression()), !dbg !3020
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !3021, metadata !DIExpression()), !dbg !3022
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !3023, metadata !DIExpression()), !dbg !3024
  call void @llvm.dbg.declare(metadata i16** %ua, metadata !3025, metadata !DIExpression()), !dbg !3026
  call void @llvm.dbg.declare(metadata i16** %ub, metadata !3027, metadata !DIExpression()), !dbg !3028
  call void @llvm.dbg.declare(metadata i16** %msua, metadata !3029, metadata !DIExpression()), !dbg !3030
  call void @llvm.dbg.declare(metadata i16** %msub, metadata !3031, metadata !DIExpression()), !dbg !3032
  call void @llvm.dbg.declare(metadata i16** %uc, metadata !3033, metadata !DIExpression()), !dbg !3034
  call void @llvm.dbg.declare(metadata i16** %msuc, metadata !3035, metadata !DIExpression()), !dbg !3036
  call void @llvm.dbg.declare(metadata i32* %msudigs, metadata !3037, metadata !DIExpression()), !dbg !3038
  %0 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3039
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 1, !dbg !3041
  %1 = load i32, i32* %exponent, align 4, !dbg !3041
  %cmp = icmp ne i32 %1, 0, !dbg !3042
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3043

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3044
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 2, !dbg !3044
  %3 = load i8, i8* %bits, align 4, !dbg !3044
  %conv = zext i8 %3 to i32, !dbg !3044
  %and = and i32 %conv, 112, !dbg !3044
  %cmp1 = icmp ne i32 %and, 0, !dbg !3044
  br i1 %cmp1, label %if.then, label %lor.lhs.false3, !dbg !3045

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %4 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3046
  %bits4 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 2, !dbg !3046
  %5 = load i8, i8* %bits4, align 4, !dbg !3046
  %conv5 = zext i8 %5 to i32, !dbg !3046
  %and6 = and i32 %conv5, 128, !dbg !3046
  %cmp7 = icmp ne i32 %and6, 0, !dbg !3046
  br i1 %cmp7, label %if.then, label %lor.lhs.false9, !dbg !3047

lor.lhs.false9:                                   ; preds = %lor.lhs.false3
  %6 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3048
  %exponent10 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %6, i32 0, i32 1, !dbg !3049
  %7 = load i32, i32* %exponent10, align 4, !dbg !3049
  %cmp11 = icmp ne i32 %7, 0, !dbg !3050
  br i1 %cmp11, label %if.then, label %lor.lhs.false13, !dbg !3051

lor.lhs.false13:                                  ; preds = %lor.lhs.false9
  %8 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3052
  %bits14 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i32 0, i32 2, !dbg !3052
  %9 = load i8, i8* %bits14, align 4, !dbg !3052
  %conv15 = zext i8 %9 to i32, !dbg !3052
  %and16 = and i32 %conv15, 112, !dbg !3052
  %cmp17 = icmp ne i32 %and16, 0, !dbg !3052
  br i1 %cmp17, label %if.then, label %lor.lhs.false19, !dbg !3053

lor.lhs.false19:                                  ; preds = %lor.lhs.false13
  %10 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3054
  %bits20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %10, i32 0, i32 2, !dbg !3054
  %11 = load i8, i8* %bits20, align 4, !dbg !3054
  %conv21 = zext i8 %11 to i32, !dbg !3054
  %and22 = and i32 %conv21, 128, !dbg !3054
  %cmp23 = icmp ne i32 %and22, 0, !dbg !3054
  br i1 %cmp23, label %if.then, label %if.end, !dbg !3055

if.then:                                          ; preds = %lor.lhs.false19, %lor.lhs.false13, %lor.lhs.false9, %lor.lhs.false3, %lor.lhs.false, %entry
  %12 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3056
  %13 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3058
  call void @decStatus(%struct.decNumber* %12, i32 128, %struct.decContext* %13), !dbg !3059
  %14 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3060
  store %struct.decNumber* %14, %struct.decNumber** %retval, align 8, !dbg !3061
  br label %return, !dbg !3061

if.end:                                           ; preds = %lor.lhs.false19
  %15 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3062
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %15, i32 0, i32 3, !dbg !3063
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !3062
  store i16* %arraydecay, i16** %ua, align 8, !dbg !3064
  %16 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3065
  %lsu25 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %16, i32 0, i32 3, !dbg !3066
  %arraydecay26 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu25, i64 0, i64 0, !dbg !3065
  store i16* %arraydecay26, i16** %ub, align 8, !dbg !3067
  %17 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3068
  %lsu27 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %17, i32 0, i32 3, !dbg !3069
  %arraydecay28 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu27, i64 0, i64 0, !dbg !3068
  store i16* %arraydecay28, i16** %uc, align 8, !dbg !3070
  %18 = load i16*, i16** %ua, align 8, !dbg !3071
  %19 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3072
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %19, i32 0, i32 0, !dbg !3072
  %20 = load i32, i32* %digits, align 4, !dbg !3072
  %cmp29 = icmp sle i32 %20, 49, !dbg !3072
  br i1 %cmp29, label %cond.true, label %cond.false, !dbg !3072

cond.true:                                        ; preds = %if.end
  %21 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3072
  %digits31 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %21, i32 0, i32 0, !dbg !3072
  %22 = load i32, i32* %digits31, align 4, !dbg !3072
  %idxprom = sext i32 %22 to i64, !dbg !3072
  %arrayidx = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom, !dbg !3072
  %23 = load i8, i8* %arrayidx, align 1, !dbg !3072
  %conv32 = zext i8 %23 to i32, !dbg !3072
  br label %cond.end, !dbg !3072

cond.false:                                       ; preds = %if.end
  %24 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3072
  %digits33 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %24, i32 0, i32 0, !dbg !3072
  %25 = load i32, i32* %digits33, align 4, !dbg !3072
  %add = add nsw i32 %25, 3, !dbg !3072
  %sub = sub nsw i32 %add, 1, !dbg !3072
  %div = sdiv i32 %sub, 3, !dbg !3072
  br label %cond.end, !dbg !3072

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv32, %cond.true ], [ %div, %cond.false ], !dbg !3072
  %idx.ext = sext i32 %cond to i64, !dbg !3073
  %add.ptr = getelementptr inbounds i16, i16* %18, i64 %idx.ext, !dbg !3073
  %add.ptr34 = getelementptr inbounds i16, i16* %add.ptr, i64 -1, !dbg !3074
  store i16* %add.ptr34, i16** %msua, align 8, !dbg !3075
  %26 = load i16*, i16** %ub, align 8, !dbg !3076
  %27 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3077
  %digits35 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %27, i32 0, i32 0, !dbg !3077
  %28 = load i32, i32* %digits35, align 4, !dbg !3077
  %cmp36 = icmp sle i32 %28, 49, !dbg !3077
  br i1 %cmp36, label %cond.true38, label %cond.false43, !dbg !3077

cond.true38:                                      ; preds = %cond.end
  %29 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3077
  %digits39 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %29, i32 0, i32 0, !dbg !3077
  %30 = load i32, i32* %digits39, align 4, !dbg !3077
  %idxprom40 = sext i32 %30 to i64, !dbg !3077
  %arrayidx41 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom40, !dbg !3077
  %31 = load i8, i8* %arrayidx41, align 1, !dbg !3077
  %conv42 = zext i8 %31 to i32, !dbg !3077
  br label %cond.end48, !dbg !3077

cond.false43:                                     ; preds = %cond.end
  %32 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3077
  %digits44 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %32, i32 0, i32 0, !dbg !3077
  %33 = load i32, i32* %digits44, align 4, !dbg !3077
  %add45 = add nsw i32 %33, 3, !dbg !3077
  %sub46 = sub nsw i32 %add45, 1, !dbg !3077
  %div47 = sdiv i32 %sub46, 3, !dbg !3077
  br label %cond.end48, !dbg !3077

cond.end48:                                       ; preds = %cond.false43, %cond.true38
  %cond49 = phi i32 [ %conv42, %cond.true38 ], [ %div47, %cond.false43 ], !dbg !3077
  %idx.ext50 = sext i32 %cond49 to i64, !dbg !3078
  %add.ptr51 = getelementptr inbounds i16, i16* %26, i64 %idx.ext50, !dbg !3078
  %add.ptr52 = getelementptr inbounds i16, i16* %add.ptr51, i64 -1, !dbg !3079
  store i16* %add.ptr52, i16** %msub, align 8, !dbg !3080
  %34 = load i16*, i16** %uc, align 8, !dbg !3081
  %35 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3082
  %digits53 = getelementptr inbounds %struct.decContext, %struct.decContext* %35, i32 0, i32 0, !dbg !3082
  %36 = load i32, i32* %digits53, align 4, !dbg !3082
  %cmp54 = icmp sle i32 %36, 49, !dbg !3082
  br i1 %cmp54, label %cond.true56, label %cond.false61, !dbg !3082

cond.true56:                                      ; preds = %cond.end48
  %37 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3082
  %digits57 = getelementptr inbounds %struct.decContext, %struct.decContext* %37, i32 0, i32 0, !dbg !3082
  %38 = load i32, i32* %digits57, align 4, !dbg !3082
  %idxprom58 = sext i32 %38 to i64, !dbg !3082
  %arrayidx59 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom58, !dbg !3082
  %39 = load i8, i8* %arrayidx59, align 1, !dbg !3082
  %conv60 = zext i8 %39 to i32, !dbg !3082
  br label %cond.end66, !dbg !3082

cond.false61:                                     ; preds = %cond.end48
  %40 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3082
  %digits62 = getelementptr inbounds %struct.decContext, %struct.decContext* %40, i32 0, i32 0, !dbg !3082
  %41 = load i32, i32* %digits62, align 4, !dbg !3082
  %add63 = add nsw i32 %41, 3, !dbg !3082
  %sub64 = sub nsw i32 %add63, 1, !dbg !3082
  %div65 = sdiv i32 %sub64, 3, !dbg !3082
  br label %cond.end66, !dbg !3082

cond.end66:                                       ; preds = %cond.false61, %cond.true56
  %cond67 = phi i32 [ %conv60, %cond.true56 ], [ %div65, %cond.false61 ], !dbg !3082
  %idx.ext68 = sext i32 %cond67 to i64, !dbg !3083
  %add.ptr69 = getelementptr inbounds i16, i16* %34, i64 %idx.ext68, !dbg !3083
  %add.ptr70 = getelementptr inbounds i16, i16* %add.ptr69, i64 -1, !dbg !3084
  store i16* %add.ptr70, i16** %msuc, align 8, !dbg !3085
  %42 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3086
  %digits71 = getelementptr inbounds %struct.decContext, %struct.decContext* %42, i32 0, i32 0, !dbg !3086
  %43 = load i32, i32* %digits71, align 4, !dbg !3086
  %44 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3086
  %digits72 = getelementptr inbounds %struct.decContext, %struct.decContext* %44, i32 0, i32 0, !dbg !3086
  %45 = load i32, i32* %digits72, align 4, !dbg !3086
  %cmp73 = icmp sle i32 %45, 49, !dbg !3086
  br i1 %cmp73, label %cond.true75, label %cond.false80, !dbg !3086

cond.true75:                                      ; preds = %cond.end66
  %46 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3086
  %digits76 = getelementptr inbounds %struct.decContext, %struct.decContext* %46, i32 0, i32 0, !dbg !3086
  %47 = load i32, i32* %digits76, align 4, !dbg !3086
  %idxprom77 = sext i32 %47 to i64, !dbg !3086
  %arrayidx78 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom77, !dbg !3086
  %48 = load i8, i8* %arrayidx78, align 1, !dbg !3086
  %conv79 = zext i8 %48 to i32, !dbg !3086
  br label %cond.end85, !dbg !3086

cond.false80:                                     ; preds = %cond.end66
  %49 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3086
  %digits81 = getelementptr inbounds %struct.decContext, %struct.decContext* %49, i32 0, i32 0, !dbg !3086
  %50 = load i32, i32* %digits81, align 4, !dbg !3086
  %add82 = add nsw i32 %50, 3, !dbg !3086
  %sub83 = sub nsw i32 %add82, 1, !dbg !3086
  %div84 = sdiv i32 %sub83, 3, !dbg !3086
  br label %cond.end85, !dbg !3086

cond.end85:                                       ; preds = %cond.false80, %cond.true75
  %cond86 = phi i32 [ %conv79, %cond.true75 ], [ %div84, %cond.false80 ], !dbg !3086
  %sub87 = sub nsw i32 %cond86, 1, !dbg !3086
  %mul = mul nsw i32 %sub87, 3, !dbg !3086
  %sub88 = sub nsw i32 %43, %mul, !dbg !3086
  store i32 %sub88, i32* %msudigs, align 4, !dbg !3087
  br label %for.cond, !dbg !3088

for.cond:                                         ; preds = %for.inc143, %cond.end85
  %51 = load i16*, i16** %uc, align 8, !dbg !3089
  %52 = load i16*, i16** %msuc, align 8, !dbg !3092
  %cmp89 = icmp ule i16* %51, %52, !dbg !3093
  br i1 %cmp89, label %for.body, label %for.end146, !dbg !3094

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16* %a, metadata !3095, metadata !DIExpression()), !dbg !3097
  call void @llvm.dbg.declare(metadata i16* %b, metadata !3098, metadata !DIExpression()), !dbg !3099
  %53 = load i16*, i16** %ua, align 8, !dbg !3100
  %54 = load i16*, i16** %msua, align 8, !dbg !3102
  %cmp91 = icmp ugt i16* %53, %54, !dbg !3103
  br i1 %cmp91, label %if.then93, label %if.else, !dbg !3104

if.then93:                                        ; preds = %for.body
  store i16 0, i16* %a, align 2, !dbg !3105
  br label %if.end94, !dbg !3106

if.else:                                          ; preds = %for.body
  %55 = load i16*, i16** %ua, align 8, !dbg !3107
  %56 = load i16, i16* %55, align 2, !dbg !3108
  store i16 %56, i16* %a, align 2, !dbg !3109
  br label %if.end94

if.end94:                                         ; preds = %if.else, %if.then93
  %57 = load i16*, i16** %ub, align 8, !dbg !3110
  %58 = load i16*, i16** %msub, align 8, !dbg !3112
  %cmp95 = icmp ugt i16* %57, %58, !dbg !3113
  br i1 %cmp95, label %if.then97, label %if.else98, !dbg !3114

if.then97:                                        ; preds = %if.end94
  store i16 0, i16* %b, align 2, !dbg !3115
  br label %if.end99, !dbg !3116

if.else98:                                        ; preds = %if.end94
  %59 = load i16*, i16** %ub, align 8, !dbg !3117
  %60 = load i16, i16* %59, align 2, !dbg !3118
  store i16 %60, i16* %b, align 2, !dbg !3119
  br label %if.end99

if.end99:                                         ; preds = %if.else98, %if.then97
  %61 = load i16*, i16** %uc, align 8, !dbg !3120
  store i16 0, i16* %61, align 2, !dbg !3121
  %62 = load i16, i16* %a, align 2, !dbg !3122
  %conv100 = zext i16 %62 to i32, !dbg !3122
  %63 = load i16, i16* %b, align 2, !dbg !3124
  %conv101 = zext i16 %63 to i32, !dbg !3124
  %or = or i32 %conv100, %conv101, !dbg !3125
  %tobool = icmp ne i32 %or, 0, !dbg !3125
  br i1 %tobool, label %if.then102, label %if.end142, !dbg !3126

if.then102:                                       ; preds = %if.end99
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3127, metadata !DIExpression()), !dbg !3129
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3130, metadata !DIExpression()), !dbg !3131
  %64 = load i16*, i16** %uc, align 8, !dbg !3132
  store i16 0, i16* %64, align 2, !dbg !3133
  store i32 0, i32* %i, align 4, !dbg !3134
  br label %for.cond103, !dbg !3136

for.cond103:                                      ; preds = %for.inc, %if.then102
  %65 = load i32, i32* %i, align 4, !dbg !3137
  %cmp104 = icmp slt i32 %65, 3, !dbg !3139
  br i1 %cmp104, label %for.body106, label %for.end, !dbg !3140

for.body106:                                      ; preds = %for.cond103
  %66 = load i16, i16* %a, align 2, !dbg !3141
  %conv107 = zext i16 %66 to i32, !dbg !3141
  %67 = load i16, i16* %b, align 2, !dbg !3144
  %conv108 = zext i16 %67 to i32, !dbg !3144
  %and109 = and i32 %conv107, %conv108, !dbg !3145
  %and110 = and i32 %and109, 1, !dbg !3146
  %tobool111 = icmp ne i32 %and110, 0, !dbg !3146
  br i1 %tobool111, label %if.then112, label %if.end120, !dbg !3147

if.then112:                                       ; preds = %for.body106
  %68 = load i16*, i16** %uc, align 8, !dbg !3148
  %69 = load i16, i16* %68, align 2, !dbg !3149
  %conv113 = zext i16 %69 to i32, !dbg !3149
  %70 = load i32, i32* %i, align 4, !dbg !3150
  %idxprom114 = sext i32 %70 to i64, !dbg !3151
  %arrayidx115 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom114, !dbg !3151
  %71 = load i32, i32* %arrayidx115, align 4, !dbg !3151
  %conv116 = trunc i32 %71 to i16, !dbg !3152
  %conv117 = zext i16 %conv116 to i32, !dbg !3152
  %add118 = add nsw i32 %conv113, %conv117, !dbg !3153
  %conv119 = trunc i32 %add118 to i16, !dbg !3149
  %72 = load i16*, i16** %uc, align 8, !dbg !3154
  store i16 %conv119, i16* %72, align 2, !dbg !3155
  br label %if.end120, !dbg !3156

if.end120:                                        ; preds = %if.then112, %for.body106
  %73 = load i16, i16* %a, align 2, !dbg !3157
  %conv121 = zext i16 %73 to i32, !dbg !3157
  %rem = srem i32 %conv121, 10, !dbg !3158
  store i32 %rem, i32* %j, align 4, !dbg !3159
  %74 = load i16, i16* %a, align 2, !dbg !3160
  %conv122 = zext i16 %74 to i32, !dbg !3160
  %div123 = sdiv i32 %conv122, 10, !dbg !3161
  %conv124 = trunc i32 %div123 to i16, !dbg !3160
  store i16 %conv124, i16* %a, align 2, !dbg !3162
  %75 = load i16, i16* %b, align 2, !dbg !3163
  %conv125 = zext i16 %75 to i32, !dbg !3163
  %rem126 = srem i32 %conv125, 10, !dbg !3164
  %76 = load i32, i32* %j, align 4, !dbg !3165
  %or127 = or i32 %76, %rem126, !dbg !3165
  store i32 %or127, i32* %j, align 4, !dbg !3165
  %77 = load i16, i16* %b, align 2, !dbg !3166
  %conv128 = zext i16 %77 to i32, !dbg !3166
  %div129 = sdiv i32 %conv128, 10, !dbg !3167
  %conv130 = trunc i32 %div129 to i16, !dbg !3166
  store i16 %conv130, i16* %b, align 2, !dbg !3168
  %78 = load i32, i32* %j, align 4, !dbg !3169
  %cmp131 = icmp sgt i32 %78, 1, !dbg !3171
  br i1 %cmp131, label %if.then133, label %if.end134, !dbg !3172

if.then133:                                       ; preds = %if.end120
  %79 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3173
  %80 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3175
  call void @decStatus(%struct.decNumber* %79, i32 128, %struct.decContext* %80), !dbg !3176
  %81 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3177
  store %struct.decNumber* %81, %struct.decNumber** %retval, align 8, !dbg !3178
  br label %return, !dbg !3178

if.end134:                                        ; preds = %if.end120
  %82 = load i16*, i16** %uc, align 8, !dbg !3179
  %83 = load i16*, i16** %msuc, align 8, !dbg !3181
  %cmp135 = icmp eq i16* %82, %83, !dbg !3182
  br i1 %cmp135, label %land.lhs.true, label %if.end141, !dbg !3183

land.lhs.true:                                    ; preds = %if.end134
  %84 = load i32, i32* %i, align 4, !dbg !3184
  %85 = load i32, i32* %msudigs, align 4, !dbg !3185
  %sub137 = sub nsw i32 %85, 1, !dbg !3186
  %cmp138 = icmp eq i32 %84, %sub137, !dbg !3187
  br i1 %cmp138, label %if.then140, label %if.end141, !dbg !3188

if.then140:                                       ; preds = %land.lhs.true
  br label %for.end, !dbg !3189

if.end141:                                        ; preds = %land.lhs.true, %if.end134
  br label %for.inc, !dbg !3190

for.inc:                                          ; preds = %if.end141
  %86 = load i32, i32* %i, align 4, !dbg !3191
  %inc = add nsw i32 %86, 1, !dbg !3191
  store i32 %inc, i32* %i, align 4, !dbg !3191
  br label %for.cond103, !dbg !3192, !llvm.loop !3193

for.end:                                          ; preds = %if.then140, %for.cond103
  br label %if.end142, !dbg !3195

if.end142:                                        ; preds = %for.end, %if.end99
  br label %for.inc143, !dbg !3196

for.inc143:                                       ; preds = %if.end142
  %87 = load i16*, i16** %ua, align 8, !dbg !3197
  %incdec.ptr = getelementptr inbounds i16, i16* %87, i32 1, !dbg !3197
  store i16* %incdec.ptr, i16** %ua, align 8, !dbg !3197
  %88 = load i16*, i16** %ub, align 8, !dbg !3198
  %incdec.ptr144 = getelementptr inbounds i16, i16* %88, i32 1, !dbg !3198
  store i16* %incdec.ptr144, i16** %ub, align 8, !dbg !3198
  %89 = load i16*, i16** %uc, align 8, !dbg !3199
  %incdec.ptr145 = getelementptr inbounds i16, i16* %89, i32 1, !dbg !3199
  store i16* %incdec.ptr145, i16** %uc, align 8, !dbg !3199
  br label %for.cond, !dbg !3200, !llvm.loop !3201

for.end146:                                       ; preds = %for.cond
  %90 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3203
  %lsu147 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %90, i32 0, i32 3, !dbg !3204
  %arraydecay148 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu147, i64 0, i64 0, !dbg !3203
  %91 = load i16*, i16** %uc, align 8, !dbg !3205
  %92 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3206
  %lsu149 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %92, i32 0, i32 3, !dbg !3207
  %arraydecay150 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu149, i64 0, i64 0, !dbg !3206
  %sub.ptr.lhs.cast = ptrtoint i16* %91 to i64, !dbg !3208
  %sub.ptr.rhs.cast = ptrtoint i16* %arraydecay150 to i64, !dbg !3208
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3208
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2, !dbg !3208
  %conv151 = trunc i64 %sub.ptr.div to i32, !dbg !3205
  %call = call i32 @decGetDigits(i16* %arraydecay148, i32 %conv151), !dbg !3209
  %93 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3210
  %digits152 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %93, i32 0, i32 0, !dbg !3211
  store i32 %call, i32* %digits152, align 4, !dbg !3212
  %94 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3213
  %exponent153 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %94, i32 0, i32 1, !dbg !3214
  store i32 0, i32* %exponent153, align 4, !dbg !3215
  %95 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3216
  %bits154 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %95, i32 0, i32 2, !dbg !3217
  store i8 0, i8* %bits154, align 4, !dbg !3218
  %96 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3219
  store %struct.decNumber* %96, %struct.decNumber** %retval, align 8, !dbg !3220
  br label %return, !dbg !3220

return:                                           ; preds = %for.end146, %if.then133, %if.then
  %97 = load %struct.decNumber*, %struct.decNumber** %retval, align 8, !dbg !3221
  ret %struct.decNumber* %97, !dbg !3221
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberCompare(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !3222 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !3223, metadata !DIExpression()), !dbg !3224
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !3225, metadata !DIExpression()), !dbg !3226
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !3227, metadata !DIExpression()), !dbg !3228
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !3229, metadata !DIExpression()), !dbg !3230
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3231, metadata !DIExpression()), !dbg !3232
  store i32 0, i32* %status, align 4, !dbg !3232
  %0 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3233
  %1 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3234
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3235
  %3 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3236
  %call = call %struct.decNumber* @decCompareOp(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext 1, i32* %status), !dbg !3237
  %4 = load i32, i32* %status, align 4, !dbg !3238
  %cmp = icmp ne i32 %4, 0, !dbg !3240
  br i1 %cmp, label %if.then, label %if.end, !dbg !3241

if.then:                                          ; preds = %entry
  %5 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3242
  %6 = load i32, i32* %status, align 4, !dbg !3243
  %7 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3244
  call void @decStatus(%struct.decNumber* %5, i32 %6, %struct.decContext* %7), !dbg !3245
  br label %if.end, !dbg !3245

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3246
  ret %struct.decNumber* %8, !dbg !3247
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.decNumber* @decCompareOp(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set, i8 zeroext %op, i32* %status) #0 !dbg !3248 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %op.addr = alloca i8, align 1
  %status.addr = alloca i32*, align 8
  %result = alloca i32, align 4
  %merged = alloca i8, align 1
  %residue = alloca i32, align 4
  %choice = alloca %struct.decNumber*, align 8
  %slhs = alloca i8, align 1
  %srhs = alloca i8, align 1
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !3249, metadata !DIExpression()), !dbg !3250
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !3251, metadata !DIExpression()), !dbg !3252
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !3253, metadata !DIExpression()), !dbg !3254
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !3255, metadata !DIExpression()), !dbg !3256
  store i8 %op, i8* %op.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %op.addr, metadata !3257, metadata !DIExpression()), !dbg !3258
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !3259, metadata !DIExpression()), !dbg !3260
  call void @llvm.dbg.declare(metadata i32* %result, metadata !3261, metadata !DIExpression()), !dbg !3262
  store i32 0, i32* %result, align 4, !dbg !3262
  call void @llvm.dbg.declare(metadata i8* %merged, metadata !3263, metadata !DIExpression()), !dbg !3264
  br label %do.body, !dbg !3265

do.body:                                          ; preds = %entry
  %0 = load i8, i8* %op.addr, align 1, !dbg !3266
  %conv = zext i8 %0 to i32, !dbg !3266
  %cmp = icmp eq i32 %conv, 4, !dbg !3269
  br i1 %cmp, label %if.then, label %if.end28, !dbg !3270

if.then:                                          ; preds = %do.body
  %1 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3271
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i32 0, i32 2, !dbg !3271
  %2 = load i8, i8* %bits, align 4, !dbg !3271
  %conv2 = zext i8 %2 to i32, !dbg !3271
  %and = and i32 %conv2, 128, !dbg !3271
  %cmp3 = icmp ne i32 %and, 0, !dbg !3271
  %conv4 = zext i1 %cmp3 to i32, !dbg !3271
  %3 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3274
  %bits5 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %3, i32 0, i32 2, !dbg !3274
  %4 = load i8, i8* %bits5, align 4, !dbg !3274
  %conv6 = zext i8 %4 to i32, !dbg !3274
  %and7 = and i32 %conv6, 128, !dbg !3274
  %cmp8 = icmp ne i32 %and7, 0, !dbg !3274
  %lnot = xor i1 %cmp8, true, !dbg !3275
  %lnot.ext = zext i1 %lnot to i32, !dbg !3275
  %and10 = and i32 %conv4, %lnot.ext, !dbg !3276
  %tobool = icmp ne i32 %and10, 0, !dbg !3276
  br i1 %tobool, label %if.then11, label %if.end, !dbg !3277

if.then11:                                        ; preds = %if.then
  store i32 -1, i32* %result, align 4, !dbg !3278
  br label %do.end, !dbg !3280

if.end:                                           ; preds = %if.then
  %5 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3281
  %bits12 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %5, i32 0, i32 2, !dbg !3281
  %6 = load i8, i8* %bits12, align 4, !dbg !3281
  %conv13 = zext i8 %6 to i32, !dbg !3281
  %and14 = and i32 %conv13, 128, !dbg !3281
  %cmp15 = icmp ne i32 %and14, 0, !dbg !3281
  %lnot17 = xor i1 %cmp15, true, !dbg !3283
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !3283
  %7 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3284
  %bits19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %7, i32 0, i32 2, !dbg !3284
  %8 = load i8, i8* %bits19, align 4, !dbg !3284
  %conv20 = zext i8 %8 to i32, !dbg !3284
  %and21 = and i32 %conv20, 128, !dbg !3284
  %cmp22 = icmp ne i32 %and21, 0, !dbg !3284
  %conv23 = zext i1 %cmp22 to i32, !dbg !3284
  %and24 = and i32 %lnot.ext18, %conv23, !dbg !3285
  %tobool25 = icmp ne i32 %and24, 0, !dbg !3285
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !3286

if.then26:                                        ; preds = %if.end
  store i32 1, i32* %result, align 4, !dbg !3287
  br label %do.end, !dbg !3289

if.end27:                                         ; preds = %if.end
  br label %if.end28, !dbg !3290

if.end28:                                         ; preds = %if.end27, %do.body
  %9 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3291
  %bits29 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %9, i32 0, i32 2, !dbg !3292
  %10 = load i8, i8* %bits29, align 4, !dbg !3292
  %conv30 = zext i8 %10 to i32, !dbg !3291
  %11 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3293
  %bits31 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %11, i32 0, i32 2, !dbg !3294
  %12 = load i8, i8* %bits31, align 4, !dbg !3294
  %conv32 = zext i8 %12 to i32, !dbg !3293
  %or = or i32 %conv30, %conv32, !dbg !3295
  %and33 = and i32 %or, 48, !dbg !3296
  %conv34 = trunc i32 %and33 to i8, !dbg !3297
  store i8 %conv34, i8* %merged, align 1, !dbg !3298
  %13 = load i8, i8* %merged, align 1, !dbg !3299
  %tobool35 = icmp ne i8 %13, 0, !dbg !3299
  br i1 %tobool35, label %if.then36, label %if.end154, !dbg !3301

if.then36:                                        ; preds = %if.end28
  %14 = load i8, i8* %op.addr, align 1, !dbg !3302
  %conv37 = zext i8 %14 to i32, !dbg !3302
  %cmp38 = icmp eq i32 %conv37, 1, !dbg !3305
  br i1 %cmp38, label %if.then40, label %if.else, !dbg !3306

if.then40:                                        ; preds = %if.then36
  br label %if.end152, !dbg !3306

if.else:                                          ; preds = %if.then36
  %15 = load i8, i8* %op.addr, align 1, !dbg !3307
  %conv41 = zext i8 %15 to i32, !dbg !3307
  %cmp42 = icmp eq i32 %conv41, 6, !dbg !3309
  br i1 %cmp42, label %if.then44, label %if.else46, !dbg !3310

if.then44:                                        ; preds = %if.else
  %16 = load i32*, i32** %status.addr, align 8, !dbg !3311
  %17 = load i32, i32* %16, align 4, !dbg !3312
  %or45 = or i32 %17, 1073741952, !dbg !3312
  store i32 %or45, i32* %16, align 4, !dbg !3312
  br label %if.end151, !dbg !3313

if.else46:                                        ; preds = %if.else
  %18 = load i8, i8* %op.addr, align 1, !dbg !3314
  %conv47 = zext i8 %18 to i32, !dbg !3314
  %cmp48 = icmp eq i32 %conv47, 4, !dbg !3316
  br i1 %cmp48, label %if.then50, label %if.else124, !dbg !3317

if.then50:                                        ; preds = %if.else46
  %19 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3318
  %bits51 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %19, i32 0, i32 2, !dbg !3318
  %20 = load i8, i8* %bits51, align 4, !dbg !3318
  %conv52 = zext i8 %20 to i32, !dbg !3318
  %and53 = and i32 %conv52, 48, !dbg !3318
  %cmp54 = icmp ne i32 %and53, 0, !dbg !3318
  br i1 %cmp54, label %if.else57, label %if.then56, !dbg !3321

if.then56:                                        ; preds = %if.then50
  store i32 -1, i32* %result, align 4, !dbg !3322
  br label %if.end115, !dbg !3323

if.else57:                                        ; preds = %if.then50
  %21 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3324
  %bits58 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %21, i32 0, i32 2, !dbg !3324
  %22 = load i8, i8* %bits58, align 4, !dbg !3324
  %conv59 = zext i8 %22 to i32, !dbg !3324
  %and60 = and i32 %conv59, 48, !dbg !3324
  %cmp61 = icmp ne i32 %and60, 0, !dbg !3324
  br i1 %cmp61, label %if.else64, label %if.then63, !dbg !3326

if.then63:                                        ; preds = %if.else57
  store i32 1, i32* %result, align 4, !dbg !3327
  br label %if.end114, !dbg !3328

if.else64:                                        ; preds = %if.else57
  %23 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3329
  %bits65 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %23, i32 0, i32 2, !dbg !3329
  %24 = load i8, i8* %bits65, align 4, !dbg !3329
  %conv66 = zext i8 %24 to i32, !dbg !3329
  %and67 = and i32 %conv66, 16, !dbg !3329
  %cmp68 = icmp ne i32 %and67, 0, !dbg !3329
  br i1 %cmp68, label %land.lhs.true, label %if.else76, !dbg !3331

land.lhs.true:                                    ; preds = %if.else64
  %25 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3332
  %bits70 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %25, i32 0, i32 2, !dbg !3332
  %26 = load i8, i8* %bits70, align 4, !dbg !3332
  %conv71 = zext i8 %26 to i32, !dbg !3332
  %and72 = and i32 %conv71, 32, !dbg !3332
  %cmp73 = icmp ne i32 %and72, 0, !dbg !3332
  br i1 %cmp73, label %if.then75, label %if.else76, !dbg !3333

if.then75:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %result, align 4, !dbg !3334
  br label %if.end113, !dbg !3335

if.else76:                                        ; preds = %land.lhs.true, %if.else64
  %27 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3336
  %bits77 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %27, i32 0, i32 2, !dbg !3336
  %28 = load i8, i8* %bits77, align 4, !dbg !3336
  %conv78 = zext i8 %28 to i32, !dbg !3336
  %and79 = and i32 %conv78, 32, !dbg !3336
  %cmp80 = icmp ne i32 %and79, 0, !dbg !3336
  br i1 %cmp80, label %land.lhs.true82, label %if.else89, !dbg !3338

land.lhs.true82:                                  ; preds = %if.else76
  %29 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3339
  %bits83 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %29, i32 0, i32 2, !dbg !3339
  %30 = load i8, i8* %bits83, align 4, !dbg !3339
  %conv84 = zext i8 %30 to i32, !dbg !3339
  %and85 = and i32 %conv84, 16, !dbg !3339
  %cmp86 = icmp ne i32 %and85, 0, !dbg !3339
  br i1 %cmp86, label %if.then88, label %if.else89, !dbg !3340

if.then88:                                        ; preds = %land.lhs.true82
  store i32 1, i32* %result, align 4, !dbg !3341
  br label %if.end112, !dbg !3342

if.else89:                                        ; preds = %land.lhs.true82, %if.else76
  %31 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3343
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %31, i32 0, i32 3, !dbg !3345
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !3343
  %32 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3346
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %32, i32 0, i32 0, !dbg !3346
  %33 = load i32, i32* %digits, align 4, !dbg !3346
  %cmp90 = icmp sle i32 %33, 49, !dbg !3346
  br i1 %cmp90, label %cond.true, label %cond.false, !dbg !3346

cond.true:                                        ; preds = %if.else89
  %34 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3346
  %digits92 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %34, i32 0, i32 0, !dbg !3346
  %35 = load i32, i32* %digits92, align 4, !dbg !3346
  %idxprom = sext i32 %35 to i64, !dbg !3346
  %arrayidx = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom, !dbg !3346
  %36 = load i8, i8* %arrayidx, align 1, !dbg !3346
  %conv93 = zext i8 %36 to i32, !dbg !3346
  br label %cond.end, !dbg !3346

cond.false:                                       ; preds = %if.else89
  %37 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3346
  %digits94 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %37, i32 0, i32 0, !dbg !3346
  %38 = load i32, i32* %digits94, align 4, !dbg !3346
  %add = add nsw i32 %38, 3, !dbg !3346
  %sub = sub nsw i32 %add, 1, !dbg !3346
  %div = sdiv i32 %sub, 3, !dbg !3346
  br label %cond.end, !dbg !3346

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv93, %cond.true ], [ %div, %cond.false ], !dbg !3346
  %39 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3347
  %lsu95 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %39, i32 0, i32 3, !dbg !3348
  %arraydecay96 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu95, i64 0, i64 0, !dbg !3347
  %40 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3349
  %digits97 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %40, i32 0, i32 0, !dbg !3349
  %41 = load i32, i32* %digits97, align 4, !dbg !3349
  %cmp98 = icmp sle i32 %41, 49, !dbg !3349
  br i1 %cmp98, label %cond.true100, label %cond.false105, !dbg !3349

cond.true100:                                     ; preds = %cond.end
  %42 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3349
  %digits101 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %42, i32 0, i32 0, !dbg !3349
  %43 = load i32, i32* %digits101, align 4, !dbg !3349
  %idxprom102 = sext i32 %43 to i64, !dbg !3349
  %arrayidx103 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom102, !dbg !3349
  %44 = load i8, i8* %arrayidx103, align 1, !dbg !3349
  %conv104 = zext i8 %44 to i32, !dbg !3349
  br label %cond.end110, !dbg !3349

cond.false105:                                    ; preds = %cond.end
  %45 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3349
  %digits106 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %45, i32 0, i32 0, !dbg !3349
  %46 = load i32, i32* %digits106, align 4, !dbg !3349
  %add107 = add nsw i32 %46, 3, !dbg !3349
  %sub108 = sub nsw i32 %add107, 1, !dbg !3349
  %div109 = sdiv i32 %sub108, 3, !dbg !3349
  br label %cond.end110, !dbg !3349

cond.end110:                                      ; preds = %cond.false105, %cond.true100
  %cond111 = phi i32 [ %conv104, %cond.true100 ], [ %div109, %cond.false105 ], !dbg !3349
  %call = call i32 @decUnitCompare(i16* %arraydecay, i32 %cond, i16* %arraydecay96, i32 %cond111, i32 0), !dbg !3350
  store i32 %call, i32* %result, align 4, !dbg !3351
  br label %if.end112

if.end112:                                        ; preds = %cond.end110, %if.then88
  br label %if.end113

if.end113:                                        ; preds = %if.end112, %if.then75
  br label %if.end114

if.end114:                                        ; preds = %if.end113, %if.then63
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.then56
  %47 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3352
  %bits116 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %47, i32 0, i32 2, !dbg !3352
  %48 = load i8, i8* %bits116, align 4, !dbg !3352
  %conv117 = zext i8 %48 to i32, !dbg !3352
  %and118 = and i32 %conv117, 128, !dbg !3352
  %cmp119 = icmp ne i32 %and118, 0, !dbg !3352
  br i1 %cmp119, label %if.then121, label %if.end123, !dbg !3354

if.then121:                                       ; preds = %if.end115
  %49 = load i32, i32* %result, align 4, !dbg !3355
  %sub122 = sub nsw i32 0, %49, !dbg !3356
  store i32 %sub122, i32* %result, align 4, !dbg !3357
  br label %if.end123, !dbg !3358

if.end123:                                        ; preds = %if.then121, %if.end115
  br label %do.end, !dbg !3359

if.else124:                                       ; preds = %if.else46
  %50 = load i8, i8* %merged, align 1, !dbg !3360
  %conv125 = zext i8 %50 to i32, !dbg !3360
  %and126 = and i32 %conv125, 16, !dbg !3362
  %tobool127 = icmp ne i32 %and126, 0, !dbg !3362
  br i1 %tobool127, label %if.then128, label %if.else129, !dbg !3363

if.then128:                                       ; preds = %if.else124
  br label %if.end149, !dbg !3363

if.else129:                                       ; preds = %if.else124
  %51 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3364
  %bits130 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %51, i32 0, i32 2, !dbg !3364
  %52 = load i8, i8* %bits130, align 4, !dbg !3364
  %conv131 = zext i8 %52 to i32, !dbg !3364
  %and132 = and i32 %conv131, 48, !dbg !3364
  %cmp133 = icmp ne i32 %and132, 0, !dbg !3364
  br i1 %cmp133, label %lor.lhs.false, label %if.then140, !dbg !3367

lor.lhs.false:                                    ; preds = %if.else129
  %53 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3368
  %bits135 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %53, i32 0, i32 2, !dbg !3368
  %54 = load i8, i8* %bits135, align 4, !dbg !3368
  %conv136 = zext i8 %54 to i32, !dbg !3368
  %and137 = and i32 %conv136, 48, !dbg !3368
  %cmp138 = icmp ne i32 %and137, 0, !dbg !3368
  br i1 %cmp138, label %if.end148, label %if.then140, !dbg !3369

if.then140:                                       ; preds = %lor.lhs.false, %if.else129
  store i8 2, i8* %op.addr, align 1, !dbg !3370
  %55 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3372
  %bits141 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %55, i32 0, i32 2, !dbg !3374
  %56 = load i8, i8* %bits141, align 4, !dbg !3374
  %conv142 = zext i8 %56 to i32, !dbg !3372
  %and143 = and i32 %conv142, 32, !dbg !3375
  %tobool144 = icmp ne i32 %and143, 0, !dbg !3375
  br i1 %tobool144, label %if.then145, label %if.else146, !dbg !3376

if.then145:                                       ; preds = %if.then140
  store i32 -1, i32* %result, align 4, !dbg !3377
  br label %if.end147, !dbg !3378

if.else146:                                       ; preds = %if.then140
  store i32 1, i32* %result, align 4, !dbg !3379
  br label %if.end147

if.end147:                                        ; preds = %if.else146, %if.then145
  br label %do.end, !dbg !3380

if.end148:                                        ; preds = %lor.lhs.false
  br label %if.end149

if.end149:                                        ; preds = %if.end148, %if.then128
  br label %if.end150

if.end150:                                        ; preds = %if.end149
  br label %if.end151

if.end151:                                        ; preds = %if.end150, %if.then44
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.then40
  store i8 5, i8* %op.addr, align 1, !dbg !3381
  %57 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3382
  %58 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3383
  %59 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3384
  %60 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3385
  %61 = load i32*, i32** %status.addr, align 8, !dbg !3386
  %call153 = call %struct.decNumber* @decNaNs(%struct.decNumber* %57, %struct.decNumber* %58, %struct.decNumber* %59, %struct.decContext* %60, i32* %61), !dbg !3387
  br label %do.end, !dbg !3388

if.end154:                                        ; preds = %if.end28
  %62 = load i8, i8* %op.addr, align 1, !dbg !3389
  %conv155 = zext i8 %62 to i32, !dbg !3389
  %cmp156 = icmp eq i32 %conv155, 7, !dbg !3391
  br i1 %cmp156, label %if.then162, label %lor.lhs.false158, !dbg !3392

lor.lhs.false158:                                 ; preds = %if.end154
  %63 = load i8, i8* %op.addr, align 1, !dbg !3393
  %conv159 = zext i8 %63 to i32, !dbg !3393
  %cmp160 = icmp eq i32 %conv159, 8, !dbg !3394
  br i1 %cmp160, label %if.then162, label %if.else164, !dbg !3395

if.then162:                                       ; preds = %lor.lhs.false158, %if.end154
  %64 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3396
  %65 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3397
  %call163 = call i32 @decCompare(%struct.decNumber* %64, %struct.decNumber* %65, i8 zeroext 1), !dbg !3398
  store i32 %call163, i32* %result, align 4, !dbg !3399
  br label %if.end166, !dbg !3400

if.else164:                                       ; preds = %lor.lhs.false158
  %66 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3401
  %67 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3402
  %call165 = call i32 @decCompare(%struct.decNumber* %66, %struct.decNumber* %67, i8 zeroext 0), !dbg !3403
  store i32 %call165, i32* %result, align 4, !dbg !3404
  br label %if.end166

if.end166:                                        ; preds = %if.else164, %if.then162
  br label %do.end, !dbg !3405

do.end:                                           ; preds = %if.end166, %if.end152, %if.end147, %if.end123, %if.then26, %if.then11
  %68 = load i32, i32* %result, align 4, !dbg !3406
  %cmp167 = icmp eq i32 %68, -2147483648, !dbg !3408
  br i1 %cmp167, label %if.then169, label %if.else171, !dbg !3409

if.then169:                                       ; preds = %do.end
  %69 = load i32*, i32** %status.addr, align 8, !dbg !3410
  %70 = load i32, i32* %69, align 4, !dbg !3411
  %or170 = or i32 %70, 16, !dbg !3411
  store i32 %or170, i32* %69, align 4, !dbg !3411
  br label %if.end293, !dbg !3412

if.else171:                                       ; preds = %do.end
  %71 = load i8, i8* %op.addr, align 1, !dbg !3413
  %conv172 = zext i8 %71 to i32, !dbg !3413
  %cmp173 = icmp eq i32 %conv172, 1, !dbg !3416
  br i1 %cmp173, label %if.then183, label %lor.lhs.false175, !dbg !3417

lor.lhs.false175:                                 ; preds = %if.else171
  %72 = load i8, i8* %op.addr, align 1, !dbg !3418
  %conv176 = zext i8 %72 to i32, !dbg !3418
  %cmp177 = icmp eq i32 %conv176, 6, !dbg !3419
  br i1 %cmp177, label %if.then183, label %lor.lhs.false179, !dbg !3420

lor.lhs.false179:                                 ; preds = %lor.lhs.false175
  %73 = load i8, i8* %op.addr, align 1, !dbg !3421
  %conv180 = zext i8 %73 to i32, !dbg !3421
  %cmp181 = icmp eq i32 %conv180, 4, !dbg !3422
  br i1 %cmp181, label %if.then183, label %if.else224, !dbg !3423

if.then183:                                       ; preds = %lor.lhs.false179, %lor.lhs.false175, %if.else171
  %74 = load i8, i8* %op.addr, align 1, !dbg !3424
  %conv184 = zext i8 %74 to i32, !dbg !3424
  %cmp185 = icmp eq i32 %conv184, 4, !dbg !3427
  br i1 %cmp185, label %land.lhs.true187, label %if.end211, !dbg !3428

land.lhs.true187:                                 ; preds = %if.then183
  %75 = load i32, i32* %result, align 4, !dbg !3429
  %cmp188 = icmp eq i32 %75, 0, !dbg !3430
  br i1 %cmp188, label %if.then190, label %if.end211, !dbg !3431

if.then190:                                       ; preds = %land.lhs.true187
  %76 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3432
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %76, i32 0, i32 1, !dbg !3435
  %77 = load i32, i32* %exponent, align 4, !dbg !3435
  %78 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3436
  %exponent191 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %78, i32 0, i32 1, !dbg !3437
  %79 = load i32, i32* %exponent191, align 4, !dbg !3437
  %cmp192 = icmp ne i32 %77, %79, !dbg !3438
  br i1 %cmp192, label %if.then194, label %if.end210, !dbg !3439

if.then194:                                       ; preds = %if.then190
  %80 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3440
  %exponent195 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %80, i32 0, i32 1, !dbg !3443
  %81 = load i32, i32* %exponent195, align 4, !dbg !3443
  %82 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3444
  %exponent196 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %82, i32 0, i32 1, !dbg !3445
  %83 = load i32, i32* %exponent196, align 4, !dbg !3445
  %cmp197 = icmp slt i32 %81, %83, !dbg !3446
  br i1 %cmp197, label %if.then199, label %if.else200, !dbg !3447

if.then199:                                       ; preds = %if.then194
  store i32 -1, i32* %result, align 4, !dbg !3448
  br label %if.end201, !dbg !3449

if.else200:                                       ; preds = %if.then194
  store i32 1, i32* %result, align 4, !dbg !3450
  br label %if.end201

if.end201:                                        ; preds = %if.else200, %if.then199
  %84 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3451
  %bits202 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %84, i32 0, i32 2, !dbg !3451
  %85 = load i8, i8* %bits202, align 4, !dbg !3451
  %conv203 = zext i8 %85 to i32, !dbg !3451
  %and204 = and i32 %conv203, 128, !dbg !3451
  %cmp205 = icmp ne i32 %and204, 0, !dbg !3451
  br i1 %cmp205, label %if.then207, label %if.end209, !dbg !3453

if.then207:                                       ; preds = %if.end201
  %86 = load i32, i32* %result, align 4, !dbg !3454
  %sub208 = sub nsw i32 0, %86, !dbg !3455
  store i32 %sub208, i32* %result, align 4, !dbg !3456
  br label %if.end209, !dbg !3457

if.end209:                                        ; preds = %if.then207, %if.end201
  br label %if.end210, !dbg !3458

if.end210:                                        ; preds = %if.end209, %if.then190
  br label %if.end211, !dbg !3459

if.end211:                                        ; preds = %if.end210, %land.lhs.true187, %if.then183
  %87 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3460
  %call212 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %87), !dbg !3461
  %88 = load i32, i32* %result, align 4, !dbg !3462
  %cmp213 = icmp ne i32 %88, 0, !dbg !3464
  br i1 %cmp213, label %if.then215, label %if.end223, !dbg !3465

if.then215:                                       ; preds = %if.end211
  %89 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3466
  %lsu216 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %89, i32 0, i32 3, !dbg !3468
  %arraydecay217 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu216, i64 0, i64 0, !dbg !3469
  store i16 1, i16* %arraydecay217, align 2, !dbg !3470
  %90 = load i32, i32* %result, align 4, !dbg !3471
  %cmp218 = icmp slt i32 %90, 0, !dbg !3473
  br i1 %cmp218, label %if.then220, label %if.end222, !dbg !3474

if.then220:                                       ; preds = %if.then215
  %91 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3475
  %bits221 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %91, i32 0, i32 2, !dbg !3476
  store i8 -128, i8* %bits221, align 4, !dbg !3477
  br label %if.end222, !dbg !3475

if.end222:                                        ; preds = %if.then220, %if.then215
  br label %if.end223, !dbg !3478

if.end223:                                        ; preds = %if.end222, %if.end211
  br label %if.end292, !dbg !3479

if.else224:                                       ; preds = %lor.lhs.false179
  %92 = load i8, i8* %op.addr, align 1, !dbg !3480
  %conv225 = zext i8 %92 to i32, !dbg !3480
  %cmp226 = icmp eq i32 %conv225, 5, !dbg !3482
  br i1 %cmp226, label %if.then228, label %if.else229, !dbg !3483

if.then228:                                       ; preds = %if.else224
  br label %if.end291, !dbg !3483

if.else229:                                       ; preds = %if.else224
  call void @llvm.dbg.declare(metadata i32* %residue, metadata !3484, metadata !DIExpression()), !dbg !3486
  store i32 0, i32* %residue, align 4, !dbg !3486
  call void @llvm.dbg.declare(metadata %struct.decNumber** %choice, metadata !3487, metadata !DIExpression()), !dbg !3488
  %93 = load i32, i32* %result, align 4, !dbg !3489
  %cmp230 = icmp eq i32 %93, 0, !dbg !3491
  br i1 %cmp230, label %if.then232, label %if.end274, !dbg !3492

if.then232:                                       ; preds = %if.else229
  call void @llvm.dbg.declare(metadata i8* %slhs, metadata !3493, metadata !DIExpression()), !dbg !3495
  %94 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3496
  %bits233 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %94, i32 0, i32 2, !dbg !3497
  %95 = load i8, i8* %bits233, align 4, !dbg !3497
  %conv234 = zext i8 %95 to i32, !dbg !3496
  %and235 = and i32 %conv234, 128, !dbg !3498
  %conv236 = trunc i32 %and235 to i8, !dbg !3499
  store i8 %conv236, i8* %slhs, align 1, !dbg !3495
  call void @llvm.dbg.declare(metadata i8* %srhs, metadata !3500, metadata !DIExpression()), !dbg !3501
  %96 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3502
  %bits237 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %96, i32 0, i32 2, !dbg !3503
  %97 = load i8, i8* %bits237, align 4, !dbg !3503
  %conv238 = zext i8 %97 to i32, !dbg !3502
  %and239 = and i32 %conv238, 128, !dbg !3504
  %conv240 = trunc i32 %and239 to i8, !dbg !3505
  store i8 %conv240, i8* %srhs, align 1, !dbg !3501
  %98 = load i8, i8* %slhs, align 1, !dbg !3506
  %conv241 = zext i8 %98 to i32, !dbg !3506
  %99 = load i8, i8* %srhs, align 1, !dbg !3508
  %conv242 = zext i8 %99 to i32, !dbg !3508
  %cmp243 = icmp ne i32 %conv241, %conv242, !dbg !3509
  br i1 %cmp243, label %if.then245, label %if.else250, !dbg !3510

if.then245:                                       ; preds = %if.then232
  %100 = load i8, i8* %slhs, align 1, !dbg !3511
  %tobool246 = icmp ne i8 %100, 0, !dbg !3511
  br i1 %tobool246, label %if.then247, label %if.else248, !dbg !3514

if.then247:                                       ; preds = %if.then245
  store i32 -1, i32* %result, align 4, !dbg !3515
  br label %if.end249, !dbg !3516

if.else248:                                       ; preds = %if.then245
  store i32 1, i32* %result, align 4, !dbg !3517
  br label %if.end249

if.end249:                                        ; preds = %if.else248, %if.then247
  br label %if.end273, !dbg !3518

if.else250:                                       ; preds = %if.then232
  %101 = load i8, i8* %slhs, align 1, !dbg !3519
  %conv251 = zext i8 %101 to i32, !dbg !3519
  %tobool252 = icmp ne i32 %conv251, 0, !dbg !3519
  br i1 %tobool252, label %land.lhs.true253, label %if.else264, !dbg !3521

land.lhs.true253:                                 ; preds = %if.else250
  %102 = load i8, i8* %srhs, align 1, !dbg !3522
  %conv254 = zext i8 %102 to i32, !dbg !3522
  %tobool255 = icmp ne i32 %conv254, 0, !dbg !3522
  br i1 %tobool255, label %if.then256, label %if.else264, !dbg !3523

if.then256:                                       ; preds = %land.lhs.true253
  %103 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3524
  %exponent257 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %103, i32 0, i32 1, !dbg !3527
  %104 = load i32, i32* %exponent257, align 4, !dbg !3527
  %105 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3528
  %exponent258 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %105, i32 0, i32 1, !dbg !3529
  %106 = load i32, i32* %exponent258, align 4, !dbg !3529
  %cmp259 = icmp slt i32 %104, %106, !dbg !3530
  br i1 %cmp259, label %if.then261, label %if.else262, !dbg !3531

if.then261:                                       ; preds = %if.then256
  store i32 1, i32* %result, align 4, !dbg !3532
  br label %if.end263, !dbg !3533

if.else262:                                       ; preds = %if.then256
  store i32 -1, i32* %result, align 4, !dbg !3534
  br label %if.end263

if.end263:                                        ; preds = %if.else262, %if.then261
  br label %if.end272, !dbg !3535

if.else264:                                       ; preds = %land.lhs.true253, %if.else250
  %107 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3536
  %exponent265 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %107, i32 0, i32 1, !dbg !3539
  %108 = load i32, i32* %exponent265, align 4, !dbg !3539
  %109 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3540
  %exponent266 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %109, i32 0, i32 1, !dbg !3541
  %110 = load i32, i32* %exponent266, align 4, !dbg !3541
  %cmp267 = icmp sgt i32 %108, %110, !dbg !3542
  br i1 %cmp267, label %if.then269, label %if.else270, !dbg !3543

if.then269:                                       ; preds = %if.else264
  store i32 1, i32* %result, align 4, !dbg !3544
  br label %if.end271, !dbg !3545

if.else270:                                       ; preds = %if.else264
  store i32 -1, i32* %result, align 4, !dbg !3546
  br label %if.end271

if.end271:                                        ; preds = %if.else270, %if.then269
  br label %if.end272

if.end272:                                        ; preds = %if.end271, %if.end263
  br label %if.end273

if.end273:                                        ; preds = %if.end272, %if.end249
  br label %if.end274, !dbg !3547

if.end274:                                        ; preds = %if.end273, %if.else229
  %111 = load i8, i8* %op.addr, align 1, !dbg !3548
  %conv275 = zext i8 %111 to i32, !dbg !3548
  %cmp276 = icmp eq i32 %conv275, 3, !dbg !3550
  br i1 %cmp276, label %if.then282, label %lor.lhs.false278, !dbg !3551

lor.lhs.false278:                                 ; preds = %if.end274
  %112 = load i8, i8* %op.addr, align 1, !dbg !3552
  %conv279 = zext i8 %112 to i32, !dbg !3552
  %cmp280 = icmp eq i32 %conv279, 8, !dbg !3553
  br i1 %cmp280, label %if.then282, label %if.end284, !dbg !3554

if.then282:                                       ; preds = %lor.lhs.false278, %if.end274
  %113 = load i32, i32* %result, align 4, !dbg !3555
  %sub283 = sub nsw i32 0, %113, !dbg !3556
  store i32 %sub283, i32* %result, align 4, !dbg !3557
  br label %if.end284, !dbg !3558

if.end284:                                        ; preds = %if.then282, %lor.lhs.false278
  %114 = load i32, i32* %result, align 4, !dbg !3559
  %cmp285 = icmp sgt i32 %114, 0, !dbg !3560
  br i1 %cmp285, label %cond.true287, label %cond.false288, !dbg !3559

cond.true287:                                     ; preds = %if.end284
  %115 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3561
  br label %cond.end289, !dbg !3559

cond.false288:                                    ; preds = %if.end284
  %116 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3562
  br label %cond.end289, !dbg !3559

cond.end289:                                      ; preds = %cond.false288, %cond.true287
  %cond290 = phi %struct.decNumber* [ %115, %cond.true287 ], [ %116, %cond.false288 ], !dbg !3559
  store %struct.decNumber* %cond290, %struct.decNumber** %choice, align 8, !dbg !3563
  %117 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3564
  %118 = load %struct.decNumber*, %struct.decNumber** %choice, align 8, !dbg !3565
  %119 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3566
  %120 = load i32*, i32** %status.addr, align 8, !dbg !3567
  call void @decCopyFit(%struct.decNumber* %117, %struct.decNumber* %118, %struct.decContext* %119, i32* %residue, i32* %120), !dbg !3568
  %121 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3569
  %122 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3569
  %123 = load i32*, i32** %status.addr, align 8, !dbg !3569
  call void @decFinalize(%struct.decNumber* %121, %struct.decContext* %122, i32* %residue, i32* %123), !dbg !3569
  br label %if.end291

if.end291:                                        ; preds = %cond.end289, %if.then228
  br label %if.end292

if.end292:                                        ; preds = %if.end291, %if.end223
  br label %if.end293

if.end293:                                        ; preds = %if.end292, %if.then169
  %124 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3570
  ret %struct.decNumber* %124, !dbg !3571
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberCompareSignal(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !3572 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !3573, metadata !DIExpression()), !dbg !3574
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !3575, metadata !DIExpression()), !dbg !3576
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !3577, metadata !DIExpression()), !dbg !3578
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !3579, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3581, metadata !DIExpression()), !dbg !3582
  store i32 0, i32* %status, align 4, !dbg !3582
  %0 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3583
  %1 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3584
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3585
  %3 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3586
  %call = call %struct.decNumber* @decCompareOp(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext 6, i32* %status), !dbg !3587
  %4 = load i32, i32* %status, align 4, !dbg !3588
  %cmp = icmp ne i32 %4, 0, !dbg !3590
  br i1 %cmp, label %if.then, label %if.end, !dbg !3591

if.then:                                          ; preds = %entry
  %5 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3592
  %6 = load i32, i32* %status, align 4, !dbg !3593
  %7 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3594
  call void @decStatus(%struct.decNumber* %5, i32 %6, %struct.decContext* %7), !dbg !3595
  br label %if.end, !dbg !3595

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3596
  ret %struct.decNumber* %8, !dbg !3597
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberCompareTotal(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !3598 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !3599, metadata !DIExpression()), !dbg !3600
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !3601, metadata !DIExpression()), !dbg !3602
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !3603, metadata !DIExpression()), !dbg !3604
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !3605, metadata !DIExpression()), !dbg !3606
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3607, metadata !DIExpression()), !dbg !3608
  store i32 0, i32* %status, align 4, !dbg !3608
  %0 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3609
  %1 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3610
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3611
  %3 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3612
  %call = call %struct.decNumber* @decCompareOp(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext 4, i32* %status), !dbg !3613
  %4 = load i32, i32* %status, align 4, !dbg !3614
  %cmp = icmp ne i32 %4, 0, !dbg !3616
  br i1 %cmp, label %if.then, label %if.end, !dbg !3617

if.then:                                          ; preds = %entry
  %5 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3618
  %6 = load i32, i32* %status, align 4, !dbg !3619
  %7 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3620
  call void @decStatus(%struct.decNumber* %5, i32 %6, %struct.decContext* %7), !dbg !3621
  br label %if.end, !dbg !3621

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3622
  ret %struct.decNumber* %8, !dbg !3623
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberCompareTotalMag(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !3624 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status = alloca i32, align 4
  %needbytes = alloca i32, align 4
  %bufa = alloca [3 x %struct.decNumber], align 16
  %allocbufa = alloca %struct.decNumber*, align 8
  %bufb = alloca [3 x %struct.decNumber], align 16
  %allocbufb = alloca %struct.decNumber*, align 8
  %a = alloca %struct.decNumber*, align 8
  %b = alloca %struct.decNumber*, align 8
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !3625, metadata !DIExpression()), !dbg !3626
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !3627, metadata !DIExpression()), !dbg !3628
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !3629, metadata !DIExpression()), !dbg !3630
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !3631, metadata !DIExpression()), !dbg !3632
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3633, metadata !DIExpression()), !dbg !3634
  store i32 0, i32* %status, align 4, !dbg !3634
  call void @llvm.dbg.declare(metadata i32* %needbytes, metadata !3635, metadata !DIExpression()), !dbg !3636
  call void @llvm.dbg.declare(metadata [3 x %struct.decNumber]* %bufa, metadata !3637, metadata !DIExpression()), !dbg !3641
  call void @llvm.dbg.declare(metadata %struct.decNumber** %allocbufa, metadata !3642, metadata !DIExpression()), !dbg !3643
  store %struct.decNumber* null, %struct.decNumber** %allocbufa, align 8, !dbg !3643
  call void @llvm.dbg.declare(metadata [3 x %struct.decNumber]* %bufb, metadata !3644, metadata !DIExpression()), !dbg !3645
  call void @llvm.dbg.declare(metadata %struct.decNumber** %allocbufb, metadata !3646, metadata !DIExpression()), !dbg !3647
  store %struct.decNumber* null, %struct.decNumber** %allocbufb, align 8, !dbg !3647
  call void @llvm.dbg.declare(metadata %struct.decNumber** %a, metadata !3648, metadata !DIExpression()), !dbg !3649
  call void @llvm.dbg.declare(metadata %struct.decNumber** %b, metadata !3650, metadata !DIExpression()), !dbg !3651
  br label %do.body, !dbg !3652

do.body:                                          ; preds = %entry
  %0 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3653
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 2, !dbg !3653
  %1 = load i8, i8* %bits, align 4, !dbg !3653
  %conv = zext i8 %1 to i32, !dbg !3653
  %and = and i32 %conv, 128, !dbg !3653
  %cmp = icmp ne i32 %and, 0, !dbg !3653
  br i1 %cmp, label %if.then, label %if.end25, !dbg !3656

if.then:                                          ; preds = %do.body
  %arraydecay = getelementptr inbounds [3 x %struct.decNumber], [3 x %struct.decNumber]* %bufa, i64 0, i64 0, !dbg !3657
  store %struct.decNumber* %arraydecay, %struct.decNumber** %a, align 8, !dbg !3659
  %2 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3660
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 0, !dbg !3660
  %3 = load i32, i32* %digits, align 4, !dbg !3660
  %cmp2 = icmp sle i32 %3, 49, !dbg !3660
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !3660

cond.true:                                        ; preds = %if.then
  %4 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3660
  %digits4 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 0, !dbg !3660
  %5 = load i32, i32* %digits4, align 4, !dbg !3660
  %idxprom = sext i32 %5 to i64, !dbg !3660
  %arrayidx = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom, !dbg !3660
  %6 = load i8, i8* %arrayidx, align 1, !dbg !3660
  %conv5 = zext i8 %6 to i32, !dbg !3660
  br label %cond.end, !dbg !3660

cond.false:                                       ; preds = %if.then
  %7 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3660
  %digits6 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %7, i32 0, i32 0, !dbg !3660
  %8 = load i32, i32* %digits6, align 4, !dbg !3660
  %add = add nsw i32 %8, 3, !dbg !3660
  %sub = sub nsw i32 %add, 1, !dbg !3660
  %div = sdiv i32 %sub, 3, !dbg !3660
  br label %cond.end, !dbg !3660

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv5, %cond.true ], [ %div, %cond.false ], !dbg !3660
  %sub7 = sub nsw i32 %cond, 1, !dbg !3661
  %conv8 = sext i32 %sub7 to i64, !dbg !3662
  %mul = mul i64 %conv8, 2, !dbg !3663
  %add9 = add i64 12, %mul, !dbg !3664
  %conv10 = trunc i64 %add9 to i32, !dbg !3665
  store i32 %conv10, i32* %needbytes, align 4, !dbg !3666
  %9 = load i32, i32* %needbytes, align 4, !dbg !3667
  %conv11 = zext i32 %9 to i64, !dbg !3667
  %cmp12 = icmp ugt i64 %conv11, 36, !dbg !3669
  br i1 %cmp12, label %if.then14, label %if.end19, !dbg !3670

if.then14:                                        ; preds = %cond.end
  %10 = load i32, i32* %needbytes, align 4, !dbg !3671
  %conv15 = zext i32 %10 to i64, !dbg !3671
  %call = call noalias i8* @malloc(i64 %conv15) #6, !dbg !3673
  %11 = bitcast i8* %call to %struct.decNumber*, !dbg !3674
  store %struct.decNumber* %11, %struct.decNumber** %allocbufa, align 8, !dbg !3675
  %12 = load %struct.decNumber*, %struct.decNumber** %allocbufa, align 8, !dbg !3676
  %cmp16 = icmp eq %struct.decNumber* %12, null, !dbg !3678
  br i1 %cmp16, label %if.then18, label %if.end, !dbg !3679

if.then18:                                        ; preds = %if.then14
  %13 = load i32, i32* %status, align 4, !dbg !3680
  %or = or i32 %13, 16, !dbg !3680
  store i32 %or, i32* %status, align 4, !dbg !3680
  br label %do.end, !dbg !3682

if.end:                                           ; preds = %if.then14
  %14 = load %struct.decNumber*, %struct.decNumber** %allocbufa, align 8, !dbg !3683
  store %struct.decNumber* %14, %struct.decNumber** %a, align 8, !dbg !3684
  br label %if.end19, !dbg !3685

if.end19:                                         ; preds = %if.end, %cond.end
  %15 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !3686
  %16 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3687
  %call20 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %15, %struct.decNumber* %16), !dbg !3688
  %17 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !3689
  %bits21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %17, i32 0, i32 2, !dbg !3690
  %18 = load i8, i8* %bits21, align 4, !dbg !3691
  %conv22 = zext i8 %18 to i32, !dbg !3691
  %and23 = and i32 %conv22, -129, !dbg !3691
  %conv24 = trunc i32 %and23 to i8, !dbg !3691
  store i8 %conv24, i8* %bits21, align 4, !dbg !3691
  %19 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !3692
  store %struct.decNumber* %19, %struct.decNumber** %lhs.addr, align 8, !dbg !3693
  br label %if.end25, !dbg !3694

if.end25:                                         ; preds = %if.end19, %do.body
  %20 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3695
  %bits26 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %20, i32 0, i32 2, !dbg !3695
  %21 = load i8, i8* %bits26, align 4, !dbg !3695
  %conv27 = zext i8 %21 to i32, !dbg !3695
  %and28 = and i32 %conv27, 128, !dbg !3695
  %cmp29 = icmp ne i32 %and28, 0, !dbg !3695
  br i1 %cmp29, label %if.then31, label %if.end70, !dbg !3697

if.then31:                                        ; preds = %if.end25
  %arraydecay32 = getelementptr inbounds [3 x %struct.decNumber], [3 x %struct.decNumber]* %bufb, i64 0, i64 0, !dbg !3698
  store %struct.decNumber* %arraydecay32, %struct.decNumber** %b, align 8, !dbg !3700
  %22 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3701
  %digits33 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %22, i32 0, i32 0, !dbg !3701
  %23 = load i32, i32* %digits33, align 4, !dbg !3701
  %cmp34 = icmp sle i32 %23, 49, !dbg !3701
  br i1 %cmp34, label %cond.true36, label %cond.false41, !dbg !3701

cond.true36:                                      ; preds = %if.then31
  %24 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3701
  %digits37 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %24, i32 0, i32 0, !dbg !3701
  %25 = load i32, i32* %digits37, align 4, !dbg !3701
  %idxprom38 = sext i32 %25 to i64, !dbg !3701
  %arrayidx39 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom38, !dbg !3701
  %26 = load i8, i8* %arrayidx39, align 1, !dbg !3701
  %conv40 = zext i8 %26 to i32, !dbg !3701
  br label %cond.end46, !dbg !3701

cond.false41:                                     ; preds = %if.then31
  %27 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3701
  %digits42 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %27, i32 0, i32 0, !dbg !3701
  %28 = load i32, i32* %digits42, align 4, !dbg !3701
  %add43 = add nsw i32 %28, 3, !dbg !3701
  %sub44 = sub nsw i32 %add43, 1, !dbg !3701
  %div45 = sdiv i32 %sub44, 3, !dbg !3701
  br label %cond.end46, !dbg !3701

cond.end46:                                       ; preds = %cond.false41, %cond.true36
  %cond47 = phi i32 [ %conv40, %cond.true36 ], [ %div45, %cond.false41 ], !dbg !3701
  %sub48 = sub nsw i32 %cond47, 1, !dbg !3702
  %conv49 = sext i32 %sub48 to i64, !dbg !3703
  %mul50 = mul i64 %conv49, 2, !dbg !3704
  %add51 = add i64 12, %mul50, !dbg !3705
  %conv52 = trunc i64 %add51 to i32, !dbg !3706
  store i32 %conv52, i32* %needbytes, align 4, !dbg !3707
  %29 = load i32, i32* %needbytes, align 4, !dbg !3708
  %conv53 = zext i32 %29 to i64, !dbg !3708
  %cmp54 = icmp ugt i64 %conv53, 36, !dbg !3710
  br i1 %cmp54, label %if.then56, label %if.end64, !dbg !3711

if.then56:                                        ; preds = %cond.end46
  %30 = load i32, i32* %needbytes, align 4, !dbg !3712
  %conv57 = zext i32 %30 to i64, !dbg !3712
  %call58 = call noalias i8* @malloc(i64 %conv57) #6, !dbg !3714
  %31 = bitcast i8* %call58 to %struct.decNumber*, !dbg !3715
  store %struct.decNumber* %31, %struct.decNumber** %allocbufb, align 8, !dbg !3716
  %32 = load %struct.decNumber*, %struct.decNumber** %allocbufb, align 8, !dbg !3717
  %cmp59 = icmp eq %struct.decNumber* %32, null, !dbg !3719
  br i1 %cmp59, label %if.then61, label %if.end63, !dbg !3720

if.then61:                                        ; preds = %if.then56
  %33 = load i32, i32* %status, align 4, !dbg !3721
  %or62 = or i32 %33, 16, !dbg !3721
  store i32 %or62, i32* %status, align 4, !dbg !3721
  br label %do.end, !dbg !3723

if.end63:                                         ; preds = %if.then56
  %34 = load %struct.decNumber*, %struct.decNumber** %allocbufb, align 8, !dbg !3724
  store %struct.decNumber* %34, %struct.decNumber** %b, align 8, !dbg !3725
  br label %if.end64, !dbg !3726

if.end64:                                         ; preds = %if.end63, %cond.end46
  %35 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !3727
  %36 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3728
  %call65 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %35, %struct.decNumber* %36), !dbg !3729
  %37 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !3730
  %bits66 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %37, i32 0, i32 2, !dbg !3731
  %38 = load i8, i8* %bits66, align 4, !dbg !3732
  %conv67 = zext i8 %38 to i32, !dbg !3732
  %and68 = and i32 %conv67, -129, !dbg !3732
  %conv69 = trunc i32 %and68 to i8, !dbg !3732
  store i8 %conv69, i8* %bits66, align 4, !dbg !3732
  %39 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !3733
  store %struct.decNumber* %39, %struct.decNumber** %rhs.addr, align 8, !dbg !3734
  br label %if.end70, !dbg !3735

if.end70:                                         ; preds = %if.end64, %if.end25
  %40 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3736
  %41 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3737
  %42 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3738
  %43 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3739
  %call71 = call %struct.decNumber* @decCompareOp(%struct.decNumber* %40, %struct.decNumber* %41, %struct.decNumber* %42, %struct.decContext* %43, i8 zeroext 4, i32* %status), !dbg !3740
  br label %do.end, !dbg !3741

do.end:                                           ; preds = %if.end70, %if.then61, %if.then18
  %44 = load %struct.decNumber*, %struct.decNumber** %allocbufa, align 8, !dbg !3742
  %cmp72 = icmp ne %struct.decNumber* %44, null, !dbg !3744
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !3745

if.then74:                                        ; preds = %do.end
  %45 = load %struct.decNumber*, %struct.decNumber** %allocbufa, align 8, !dbg !3746
  %46 = bitcast %struct.decNumber* %45 to i8*, !dbg !3746
  call void @free(i8* %46) #6, !dbg !3747
  br label %if.end75, !dbg !3747

if.end75:                                         ; preds = %if.then74, %do.end
  %47 = load %struct.decNumber*, %struct.decNumber** %allocbufb, align 8, !dbg !3748
  %cmp76 = icmp ne %struct.decNumber* %47, null, !dbg !3750
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !3751

if.then78:                                        ; preds = %if.end75
  %48 = load %struct.decNumber*, %struct.decNumber** %allocbufb, align 8, !dbg !3752
  %49 = bitcast %struct.decNumber* %48 to i8*, !dbg !3752
  call void @free(i8* %49) #6, !dbg !3753
  br label %if.end79, !dbg !3753

if.end79:                                         ; preds = %if.then78, %if.end75
  %50 = load i32, i32* %status, align 4, !dbg !3754
  %cmp80 = icmp ne i32 %50, 0, !dbg !3756
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !3757

if.then82:                                        ; preds = %if.end79
  %51 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3758
  %52 = load i32, i32* %status, align 4, !dbg !3759
  %53 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3760
  call void @decStatus(%struct.decNumber* %51, i32 %52, %struct.decContext* %53), !dbg !3761
  br label %if.end83, !dbg !3761

if.end83:                                         ; preds = %if.then82, %if.end79
  %54 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3762
  ret %struct.decNumber* %54, !dbg !3763
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberCopy(%struct.decNumber* %dest, %struct.decNumber* %src) #0 !dbg !3764 {
entry:
  %retval = alloca %struct.decNumber*, align 8
  %dest.addr = alloca %struct.decNumber*, align 8
  %src.addr = alloca %struct.decNumber*, align 8
  %smsup = alloca i16*, align 8
  %s = alloca i16*, align 8
  %d = alloca i16*, align 8
  store %struct.decNumber* %dest, %struct.decNumber** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dest.addr, metadata !3767, metadata !DIExpression()), !dbg !3768
  store %struct.decNumber* %src, %struct.decNumber** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %src.addr, metadata !3769, metadata !DIExpression()), !dbg !3770
  %0 = load %struct.decNumber*, %struct.decNumber** %dest.addr, align 8, !dbg !3771
  %1 = load %struct.decNumber*, %struct.decNumber** %src.addr, align 8, !dbg !3773
  %cmp = icmp eq %struct.decNumber* %0, %1, !dbg !3774
  br i1 %cmp, label %if.then, label %if.end, !dbg !3775

if.then:                                          ; preds = %entry
  %2 = load %struct.decNumber*, %struct.decNumber** %dest.addr, align 8, !dbg !3776
  store %struct.decNumber* %2, %struct.decNumber** %retval, align 8, !dbg !3777
  br label %return, !dbg !3777

if.end:                                           ; preds = %entry
  %3 = load %struct.decNumber*, %struct.decNumber** %src.addr, align 8, !dbg !3778
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %3, i32 0, i32 2, !dbg !3779
  %4 = load i8, i8* %bits, align 4, !dbg !3779
  %5 = load %struct.decNumber*, %struct.decNumber** %dest.addr, align 8, !dbg !3780
  %bits1 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %5, i32 0, i32 2, !dbg !3781
  store i8 %4, i8* %bits1, align 4, !dbg !3782
  %6 = load %struct.decNumber*, %struct.decNumber** %src.addr, align 8, !dbg !3783
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %6, i32 0, i32 1, !dbg !3784
  %7 = load i32, i32* %exponent, align 4, !dbg !3784
  %8 = load %struct.decNumber*, %struct.decNumber** %dest.addr, align 8, !dbg !3785
  %exponent2 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i32 0, i32 1, !dbg !3786
  store i32 %7, i32* %exponent2, align 4, !dbg !3787
  %9 = load %struct.decNumber*, %struct.decNumber** %src.addr, align 8, !dbg !3788
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %9, i32 0, i32 0, !dbg !3789
  %10 = load i32, i32* %digits, align 4, !dbg !3789
  %11 = load %struct.decNumber*, %struct.decNumber** %dest.addr, align 8, !dbg !3790
  %digits3 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %11, i32 0, i32 0, !dbg !3791
  store i32 %10, i32* %digits3, align 4, !dbg !3792
  %12 = load %struct.decNumber*, %struct.decNumber** %src.addr, align 8, !dbg !3793
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %12, i32 0, i32 3, !dbg !3794
  %arrayidx = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !3793
  %13 = load i16, i16* %arrayidx, align 2, !dbg !3793
  %14 = load %struct.decNumber*, %struct.decNumber** %dest.addr, align 8, !dbg !3795
  %lsu4 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %14, i32 0, i32 3, !dbg !3796
  %arrayidx5 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu4, i64 0, i64 0, !dbg !3795
  store i16 %13, i16* %arrayidx5, align 2, !dbg !3797
  %15 = load %struct.decNumber*, %struct.decNumber** %src.addr, align 8, !dbg !3798
  %digits6 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %15, i32 0, i32 0, !dbg !3800
  %16 = load i32, i32* %digits6, align 4, !dbg !3800
  %cmp7 = icmp sgt i32 %16, 3, !dbg !3801
  br i1 %cmp7, label %if.then8, label %if.end24, !dbg !3802

if.then8:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i16** %smsup, metadata !3803, metadata !DIExpression()), !dbg !3805
  call void @llvm.dbg.declare(metadata i16** %s, metadata !3806, metadata !DIExpression()), !dbg !3807
  call void @llvm.dbg.declare(metadata i16** %d, metadata !3808, metadata !DIExpression()), !dbg !3809
  %17 = load %struct.decNumber*, %struct.decNumber** %dest.addr, align 8, !dbg !3810
  %lsu9 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %17, i32 0, i32 3, !dbg !3811
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu9, i64 0, i64 0, !dbg !3810
  %add.ptr = getelementptr inbounds i16, i16* %arraydecay, i64 1, !dbg !3812
  store i16* %add.ptr, i16** %d, align 8, !dbg !3813
  %18 = load %struct.decNumber*, %struct.decNumber** %src.addr, align 8, !dbg !3814
  %lsu10 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %18, i32 0, i32 3, !dbg !3815
  %arraydecay11 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu10, i64 0, i64 0, !dbg !3814
  %19 = load %struct.decNumber*, %struct.decNumber** %src.addr, align 8, !dbg !3816
  %digits12 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %19, i32 0, i32 0, !dbg !3816
  %20 = load i32, i32* %digits12, align 4, !dbg !3816
  %cmp13 = icmp sle i32 %20, 49, !dbg !3816
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !3816

cond.true:                                        ; preds = %if.then8
  %21 = load %struct.decNumber*, %struct.decNumber** %src.addr, align 8, !dbg !3816
  %digits14 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %21, i32 0, i32 0, !dbg !3816
  %22 = load i32, i32* %digits14, align 4, !dbg !3816
  %idxprom = sext i32 %22 to i64, !dbg !3816
  %arrayidx15 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom, !dbg !3816
  %23 = load i8, i8* %arrayidx15, align 1, !dbg !3816
  %conv = zext i8 %23 to i32, !dbg !3816
  br label %cond.end, !dbg !3816

cond.false:                                       ; preds = %if.then8
  %24 = load %struct.decNumber*, %struct.decNumber** %src.addr, align 8, !dbg !3816
  %digits16 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %24, i32 0, i32 0, !dbg !3816
  %25 = load i32, i32* %digits16, align 4, !dbg !3816
  %add = add nsw i32 %25, 3, !dbg !3816
  %sub = sub nsw i32 %add, 1, !dbg !3816
  %div = sdiv i32 %sub, 3, !dbg !3816
  br label %cond.end, !dbg !3816

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %div, %cond.false ], !dbg !3816
  %idx.ext = sext i32 %cond to i64, !dbg !3817
  %add.ptr17 = getelementptr inbounds i16, i16* %arraydecay11, i64 %idx.ext, !dbg !3817
  store i16* %add.ptr17, i16** %smsup, align 8, !dbg !3818
  %26 = load %struct.decNumber*, %struct.decNumber** %src.addr, align 8, !dbg !3819
  %lsu18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %26, i32 0, i32 3, !dbg !3821
  %arraydecay19 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu18, i64 0, i64 0, !dbg !3819
  %add.ptr20 = getelementptr inbounds i16, i16* %arraydecay19, i64 1, !dbg !3822
  store i16* %add.ptr20, i16** %s, align 8, !dbg !3823
  br label %for.cond, !dbg !3824

for.cond:                                         ; preds = %for.inc, %cond.end
  %27 = load i16*, i16** %s, align 8, !dbg !3825
  %28 = load i16*, i16** %smsup, align 8, !dbg !3827
  %cmp21 = icmp ult i16* %27, %28, !dbg !3828
  br i1 %cmp21, label %for.body, label %for.end, !dbg !3829

for.body:                                         ; preds = %for.cond
  %29 = load i16*, i16** %s, align 8, !dbg !3830
  %30 = load i16, i16* %29, align 2, !dbg !3831
  %31 = load i16*, i16** %d, align 8, !dbg !3832
  store i16 %30, i16* %31, align 2, !dbg !3833
  br label %for.inc, !dbg !3834

for.inc:                                          ; preds = %for.body
  %32 = load i16*, i16** %s, align 8, !dbg !3835
  %incdec.ptr = getelementptr inbounds i16, i16* %32, i32 1, !dbg !3835
  store i16* %incdec.ptr, i16** %s, align 8, !dbg !3835
  %33 = load i16*, i16** %d, align 8, !dbg !3836
  %incdec.ptr23 = getelementptr inbounds i16, i16* %33, i32 1, !dbg !3836
  store i16* %incdec.ptr23, i16** %d, align 8, !dbg !3836
  br label %for.cond, !dbg !3837, !llvm.loop !3838

for.end:                                          ; preds = %for.cond
  br label %if.end24, !dbg !3840

if.end24:                                         ; preds = %for.end, %if.end
  %34 = load %struct.decNumber*, %struct.decNumber** %dest.addr, align 8, !dbg !3841
  store %struct.decNumber* %34, %struct.decNumber** %retval, align 8, !dbg !3842
  br label %return, !dbg !3842

return:                                           ; preds = %if.end24, %if.then
  %35 = load %struct.decNumber*, %struct.decNumber** %retval, align 8, !dbg !3843
  ret %struct.decNumber* %35, !dbg !3843
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberDivide(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !3844 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !3845, metadata !DIExpression()), !dbg !3846
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !3847, metadata !DIExpression()), !dbg !3848
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !3849, metadata !DIExpression()), !dbg !3850
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !3851, metadata !DIExpression()), !dbg !3852
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3853, metadata !DIExpression()), !dbg !3854
  store i32 0, i32* %status, align 4, !dbg !3854
  %0 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3855
  %1 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3856
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3857
  %3 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3858
  %call = call %struct.decNumber* @decDivideOp(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext -128, i32* %status), !dbg !3859
  %4 = load i32, i32* %status, align 4, !dbg !3860
  %cmp = icmp ne i32 %4, 0, !dbg !3862
  br i1 %cmp, label %if.then, label %if.end, !dbg !3863

if.then:                                          ; preds = %entry
  %5 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3864
  %6 = load i32, i32* %status, align 4, !dbg !3865
  %7 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3866
  call void @decStatus(%struct.decNumber* %5, i32 %6, %struct.decContext* %7), !dbg !3867
  br label %if.end, !dbg !3867

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3868
  ret %struct.decNumber* %8, !dbg !3869
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.decNumber* @decDivideOp(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set, i8 zeroext %op, i32* %status) #0 !dbg !3870 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %op.addr = alloca i8, align 1
  %status.addr = alloca i32*, align 8
  %accbuff = alloca [17 x i16], align 16
  %acc = alloca i16*, align 8
  %allocacc = alloca i16*, align 8
  %accnext = alloca i16*, align 8
  %acclength = alloca i32, align 4
  %accunits = alloca i32, align 4
  %accdigits = alloca i32, align 4
  %varbuff = alloca [25 x i16], align 16
  %var1 = alloca i16*, align 8
  %varalloc = alloca i16*, align 8
  %msu1 = alloca i16*, align 8
  %var2 = alloca i16*, align 8
  %msu2 = alloca i16*, align 8
  %msu2plus = alloca i32, align 4
  %msu2pair = alloca i32, align 4
  %var1units = alloca i32, align 4
  %var2units = alloca i32, align 4
  %var2ulen = alloca i32, align 4
  %var1initpad = alloca i32, align 4
  %maxdigits = alloca i32, align 4
  %mult = alloca i32, align 4
  %thisunit = alloca i16, align 2
  %residue = alloca i32, align 4
  %reqdigits = alloca i32, align 4
  %exponent = alloca i32, align 4
  %maxexponent = alloca i32, align 4
  %bits = alloca i8, align 1
  %target = alloca i16*, align 8
  %source = alloca i16*, align 8
  %pow = alloca i32*, align 8
  %shift = alloca i32, align 4
  %cut = alloca i32, align 4
  %u = alloca i16*, align 8
  %pv1 = alloca i16*, align 8
  %pv2 = alloca i16*, align 8
  %v2 = alloca i16, align 2
  %lsu558 = alloca i16, align 2
  %drop = alloca i32, align 4
  %postshift = alloca i32, align 4
  %wasodd = alloca i8, align 1
  %quotlsu = alloca i16*, align 8
  %quotdigits = alloca i32, align 4
  %exp = alloca i32, align 4
  %compare = alloca i32, align 4
  %tarunits = alloca i32, align 4
  %up = alloca i16*, align 8
  %half = alloca i32, align 4
  %exp741 = alloca i32, align 4
  %expunits = alloca i32, align 4
  %exprem = alloca i32, align 4
  %allnines = alloca i8, align 1
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !3871, metadata !DIExpression()), !dbg !3872
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !3873, metadata !DIExpression()), !dbg !3874
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !3875, metadata !DIExpression()), !dbg !3876
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !3877, metadata !DIExpression()), !dbg !3878
  store i8 %op, i8* %op.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %op.addr, metadata !3879, metadata !DIExpression()), !dbg !3880
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !3881, metadata !DIExpression()), !dbg !3882
  call void @llvm.dbg.declare(metadata [17 x i16]* %accbuff, metadata !3883, metadata !DIExpression()), !dbg !3887
  call void @llvm.dbg.declare(metadata i16** %acc, metadata !3888, metadata !DIExpression()), !dbg !3889
  %arraydecay = getelementptr inbounds [17 x i16], [17 x i16]* %accbuff, i64 0, i64 0, !dbg !3890
  store i16* %arraydecay, i16** %acc, align 8, !dbg !3889
  call void @llvm.dbg.declare(metadata i16** %allocacc, metadata !3891, metadata !DIExpression()), !dbg !3892
  store i16* null, i16** %allocacc, align 8, !dbg !3892
  call void @llvm.dbg.declare(metadata i16** %accnext, metadata !3893, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.declare(metadata i32* %acclength, metadata !3895, metadata !DIExpression()), !dbg !3896
  call void @llvm.dbg.declare(metadata i32* %accunits, metadata !3897, metadata !DIExpression()), !dbg !3898
  call void @llvm.dbg.declare(metadata i32* %accdigits, metadata !3899, metadata !DIExpression()), !dbg !3900
  call void @llvm.dbg.declare(metadata [25 x i16]* %varbuff, metadata !3901, metadata !DIExpression()), !dbg !3905
  call void @llvm.dbg.declare(metadata i16** %var1, metadata !3906, metadata !DIExpression()), !dbg !3907
  %arraydecay1 = getelementptr inbounds [25 x i16], [25 x i16]* %varbuff, i64 0, i64 0, !dbg !3908
  store i16* %arraydecay1, i16** %var1, align 8, !dbg !3907
  call void @llvm.dbg.declare(metadata i16** %varalloc, metadata !3909, metadata !DIExpression()), !dbg !3910
  store i16* null, i16** %varalloc, align 8, !dbg !3910
  call void @llvm.dbg.declare(metadata i16** %msu1, metadata !3911, metadata !DIExpression()), !dbg !3912
  call void @llvm.dbg.declare(metadata i16** %var2, metadata !3913, metadata !DIExpression()), !dbg !3914
  call void @llvm.dbg.declare(metadata i16** %msu2, metadata !3915, metadata !DIExpression()), !dbg !3916
  call void @llvm.dbg.declare(metadata i32* %msu2plus, metadata !3917, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.declare(metadata i32* %msu2pair, metadata !3919, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.declare(metadata i32* %var1units, metadata !3921, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.declare(metadata i32* %var2units, metadata !3923, metadata !DIExpression()), !dbg !3924
  call void @llvm.dbg.declare(metadata i32* %var2ulen, metadata !3925, metadata !DIExpression()), !dbg !3926
  call void @llvm.dbg.declare(metadata i32* %var1initpad, metadata !3927, metadata !DIExpression()), !dbg !3928
  store i32 0, i32* %var1initpad, align 4, !dbg !3928
  call void @llvm.dbg.declare(metadata i32* %maxdigits, metadata !3929, metadata !DIExpression()), !dbg !3930
  call void @llvm.dbg.declare(metadata i32* %mult, metadata !3931, metadata !DIExpression()), !dbg !3932
  call void @llvm.dbg.declare(metadata i16* %thisunit, metadata !3933, metadata !DIExpression()), !dbg !3934
  call void @llvm.dbg.declare(metadata i32* %residue, metadata !3935, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.declare(metadata i32* %reqdigits, metadata !3937, metadata !DIExpression()), !dbg !3938
  %0 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3939
  %digits = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i32 0, i32 0, !dbg !3940
  %1 = load i32, i32* %digits, align 4, !dbg !3940
  store i32 %1, i32* %reqdigits, align 4, !dbg !3938
  call void @llvm.dbg.declare(metadata i32* %exponent, metadata !3941, metadata !DIExpression()), !dbg !3942
  call void @llvm.dbg.declare(metadata i32* %maxexponent, metadata !3943, metadata !DIExpression()), !dbg !3944
  store i32 0, i32* %maxexponent, align 4, !dbg !3944
  call void @llvm.dbg.declare(metadata i8* %bits, metadata !3945, metadata !DIExpression()), !dbg !3946
  call void @llvm.dbg.declare(metadata i16** %target, metadata !3947, metadata !DIExpression()), !dbg !3948
  call void @llvm.dbg.declare(metadata i16** %source, metadata !3949, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.declare(metadata i32** %pow, metadata !3951, metadata !DIExpression()), !dbg !3953
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !3954, metadata !DIExpression()), !dbg !3955
  call void @llvm.dbg.declare(metadata i32* %cut, metadata !3956, metadata !DIExpression()), !dbg !3957
  br label %do.body, !dbg !3958

do.body:                                          ; preds = %entry
  %2 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3959
  %bits2 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 2, !dbg !3961
  %3 = load i8, i8* %bits2, align 4, !dbg !3961
  %conv = zext i8 %3 to i32, !dbg !3959
  %4 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3962
  %bits3 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 2, !dbg !3963
  %5 = load i8, i8* %bits3, align 4, !dbg !3963
  %conv4 = zext i8 %5 to i32, !dbg !3962
  %xor = xor i32 %conv, %conv4, !dbg !3964
  %and = and i32 %xor, 128, !dbg !3965
  %conv5 = trunc i32 %and to i8, !dbg !3966
  store i8 %conv5, i8* %bits, align 1, !dbg !3967
  %6 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3968
  %bits6 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %6, i32 0, i32 2, !dbg !3968
  %7 = load i8, i8* %bits6, align 4, !dbg !3968
  %conv7 = zext i8 %7 to i32, !dbg !3968
  %8 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3968
  %bits8 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i32 0, i32 2, !dbg !3968
  %9 = load i8, i8* %bits8, align 4, !dbg !3968
  %conv9 = zext i8 %9 to i32, !dbg !3968
  %or = or i32 %conv7, %conv9, !dbg !3968
  %and10 = and i32 %or, 112, !dbg !3968
  %tobool = icmp ne i32 %and10, 0, !dbg !3968
  br i1 %tobool, label %if.then, label %if.end57, !dbg !3970

if.then:                                          ; preds = %do.body
  %10 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3971
  %bits11 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %10, i32 0, i32 2, !dbg !3971
  %11 = load i8, i8* %bits11, align 4, !dbg !3971
  %conv12 = zext i8 %11 to i32, !dbg !3971
  %12 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3971
  %bits13 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %12, i32 0, i32 2, !dbg !3971
  %13 = load i8, i8* %bits13, align 4, !dbg !3971
  %conv14 = zext i8 %13 to i32, !dbg !3971
  %or15 = or i32 %conv12, %conv14, !dbg !3971
  %and16 = and i32 %or15, 112, !dbg !3971
  %and17 = and i32 %and16, 48, !dbg !3974
  %tobool18 = icmp ne i32 %and17, 0, !dbg !3974
  br i1 %tobool18, label %if.then19, label %if.end, !dbg !3975

if.then19:                                        ; preds = %if.then
  %14 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3976
  %15 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3978
  %16 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3979
  %17 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !3980
  %18 = load i32*, i32** %status.addr, align 8, !dbg !3981
  %call = call %struct.decNumber* @decNaNs(%struct.decNumber* %14, %struct.decNumber* %15, %struct.decNumber* %16, %struct.decContext* %17, i32* %18), !dbg !3982
  br label %do.end, !dbg !3983

if.end:                                           ; preds = %if.then
  %19 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !3984
  %bits20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %19, i32 0, i32 2, !dbg !3984
  %20 = load i8, i8* %bits20, align 4, !dbg !3984
  %conv21 = zext i8 %20 to i32, !dbg !3984
  %and22 = and i32 %conv21, 64, !dbg !3984
  %cmp = icmp ne i32 %and22, 0, !dbg !3984
  br i1 %cmp, label %if.then24, label %if.else, !dbg !3986

if.then24:                                        ; preds = %if.end
  %21 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !3987
  %bits25 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %21, i32 0, i32 2, !dbg !3987
  %22 = load i8, i8* %bits25, align 4, !dbg !3987
  %conv26 = zext i8 %22 to i32, !dbg !3987
  %and27 = and i32 %conv26, 64, !dbg !3987
  %cmp28 = icmp ne i32 %and27, 0, !dbg !3987
  br i1 %cmp28, label %if.then33, label %lor.lhs.false, !dbg !3990

lor.lhs.false:                                    ; preds = %if.then24
  %23 = load i8, i8* %op.addr, align 1, !dbg !3991
  %conv30 = zext i8 %23 to i32, !dbg !3991
  %and31 = and i32 %conv30, 80, !dbg !3992
  %tobool32 = icmp ne i32 %and31, 0, !dbg !3992
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !3993

if.then33:                                        ; preds = %lor.lhs.false, %if.then24
  %24 = load i32*, i32** %status.addr, align 8, !dbg !3994
  %25 = load i32, i32* %24, align 4, !dbg !3996
  %or34 = or i32 %25, 128, !dbg !3996
  store i32 %or34, i32* %24, align 4, !dbg !3996
  br label %do.end, !dbg !3997

if.end35:                                         ; preds = %lor.lhs.false
  %26 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !3998
  %call36 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %26), !dbg !3999
  %27 = load i8, i8* %bits, align 1, !dbg !4000
  %conv37 = zext i8 %27 to i32, !dbg !4000
  %or38 = or i32 %conv37, 64, !dbg !4001
  %conv39 = trunc i32 %or38 to i8, !dbg !4000
  %28 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4002
  %bits40 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %28, i32 0, i32 2, !dbg !4003
  store i8 %conv39, i8* %bits40, align 4, !dbg !4004
  br label %do.end, !dbg !4005

if.else:                                          ; preds = %if.end
  store i32 0, i32* %residue, align 4, !dbg !4006
  %29 = load i8, i8* %op.addr, align 1, !dbg !4008
  %conv41 = zext i8 %29 to i32, !dbg !4008
  %and42 = and i32 %conv41, 80, !dbg !4010
  %tobool43 = icmp ne i32 %and42, 0, !dbg !4010
  br i1 %tobool43, label %if.then44, label %if.else45, !dbg !4011

if.then44:                                        ; preds = %if.else
  %30 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4012
  %31 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4014
  %32 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !4015
  %33 = load i32*, i32** %status.addr, align 8, !dbg !4016
  call void @decCopyFit(%struct.decNumber* %30, %struct.decNumber* %31, %struct.decContext* %32, i32* %residue, i32* %33), !dbg !4017
  br label %if.end56, !dbg !4018

if.else45:                                        ; preds = %if.else
  %34 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4019
  %call46 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %34), !dbg !4021
  %35 = load i8, i8* %bits, align 1, !dbg !4022
  %36 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4023
  %bits47 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %36, i32 0, i32 2, !dbg !4024
  store i8 %35, i8* %bits47, align 4, !dbg !4025
  %37 = load i8, i8* %op.addr, align 1, !dbg !4026
  %conv48 = zext i8 %37 to i32, !dbg !4026
  %and49 = and i32 %conv48, 128, !dbg !4028
  %tobool50 = icmp ne i32 %and49, 0, !dbg !4028
  br i1 %tobool50, label %if.then51, label %if.end55, !dbg !4029

if.then51:                                        ; preds = %if.else45
  %38 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !4030
  %emin = getelementptr inbounds %struct.decContext, %struct.decContext* %38, i32 0, i32 2, !dbg !4032
  %39 = load i32, i32* %emin, align 4, !dbg !4032
  %40 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !4033
  %digits52 = getelementptr inbounds %struct.decContext, %struct.decContext* %40, i32 0, i32 0, !dbg !4034
  %41 = load i32, i32* %digits52, align 4, !dbg !4034
  %sub = sub nsw i32 %39, %41, !dbg !4035
  %add = add nsw i32 %sub, 1, !dbg !4036
  %42 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4037
  %exponent53 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %42, i32 0, i32 1, !dbg !4038
  store i32 %add, i32* %exponent53, align 4, !dbg !4039
  %43 = load i32*, i32** %status.addr, align 8, !dbg !4040
  %44 = load i32, i32* %43, align 4, !dbg !4041
  %or54 = or i32 %44, 1024, !dbg !4041
  store i32 %or54, i32* %43, align 4, !dbg !4041
  br label %if.end55, !dbg !4042

if.end55:                                         ; preds = %if.then51, %if.else45
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then44
  %45 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4043
  %46 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !4043
  %47 = load i32*, i32** %status.addr, align 8, !dbg !4043
  call void @decFinalize(%struct.decNumber* %45, %struct.decContext* %46, i32* %residue, i32* %47), !dbg !4043
  br label %do.end, !dbg !4044

if.end57:                                         ; preds = %do.body
  %48 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !4045
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %48, i32 0, i32 3, !dbg !4045
  %arraydecay58 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !4045
  %49 = load i16, i16* %arraydecay58, align 2, !dbg !4045
  %conv59 = zext i16 %49 to i32, !dbg !4045
  %cmp60 = icmp eq i32 %conv59, 0, !dbg !4045
  br i1 %cmp60, label %land.lhs.true, label %if.end105, !dbg !4045

land.lhs.true:                                    ; preds = %if.end57
  %50 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !4045
  %digits62 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %50, i32 0, i32 0, !dbg !4045
  %51 = load i32, i32* %digits62, align 4, !dbg !4045
  %cmp63 = icmp eq i32 %51, 1, !dbg !4045
  br i1 %cmp63, label %land.lhs.true65, label %if.end105, !dbg !4045

land.lhs.true65:                                  ; preds = %land.lhs.true
  %52 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !4045
  %bits66 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %52, i32 0, i32 2, !dbg !4045
  %53 = load i8, i8* %bits66, align 4, !dbg !4045
  %conv67 = zext i8 %53 to i32, !dbg !4045
  %and68 = and i32 %conv67, 112, !dbg !4045
  %cmp69 = icmp eq i32 %and68, 0, !dbg !4045
  br i1 %cmp69, label %if.then71, label %if.end105, !dbg !4047

if.then71:                                        ; preds = %land.lhs.true65
  %54 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4048
  %lsu72 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %54, i32 0, i32 3, !dbg !4048
  %arraydecay73 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu72, i64 0, i64 0, !dbg !4048
  %55 = load i16, i16* %arraydecay73, align 2, !dbg !4048
  %conv74 = zext i16 %55 to i32, !dbg !4048
  %cmp75 = icmp eq i32 %conv74, 0, !dbg !4048
  br i1 %cmp75, label %land.lhs.true77, label %if.else90, !dbg !4048

land.lhs.true77:                                  ; preds = %if.then71
  %56 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4048
  %digits78 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %56, i32 0, i32 0, !dbg !4048
  %57 = load i32, i32* %digits78, align 4, !dbg !4048
  %cmp79 = icmp eq i32 %57, 1, !dbg !4048
  br i1 %cmp79, label %land.lhs.true81, label %if.else90, !dbg !4048

land.lhs.true81:                                  ; preds = %land.lhs.true77
  %58 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4048
  %bits82 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %58, i32 0, i32 2, !dbg !4048
  %59 = load i8, i8* %bits82, align 4, !dbg !4048
  %conv83 = zext i8 %59 to i32, !dbg !4048
  %and84 = and i32 %conv83, 112, !dbg !4048
  %cmp85 = icmp eq i32 %and84, 0, !dbg !4048
  br i1 %cmp85, label %if.then87, label %if.else90, !dbg !4051

if.then87:                                        ; preds = %land.lhs.true81
  %60 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4052
  %call88 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %60), !dbg !4054
  %61 = load i32*, i32** %status.addr, align 8, !dbg !4055
  %62 = load i32, i32* %61, align 4, !dbg !4056
  %or89 = or i32 %62, 8, !dbg !4056
  store i32 %or89, i32* %61, align 4, !dbg !4056
  br label %if.end104, !dbg !4057

if.else90:                                        ; preds = %land.lhs.true81, %land.lhs.true77, %if.then71
  %63 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4058
  %call91 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %63), !dbg !4060
  %64 = load i8, i8* %op.addr, align 1, !dbg !4061
  %conv92 = zext i8 %64 to i32, !dbg !4061
  %and93 = and i32 %conv92, 80, !dbg !4063
  %tobool94 = icmp ne i32 %and93, 0, !dbg !4063
  br i1 %tobool94, label %if.then95, label %if.else97, !dbg !4064

if.then95:                                        ; preds = %if.else90
  %65 = load i32*, i32** %status.addr, align 8, !dbg !4065
  %66 = load i32, i32* %65, align 4, !dbg !4066
  %or96 = or i32 %66, 128, !dbg !4066
  store i32 %or96, i32* %65, align 4, !dbg !4066
  br label %if.end103, !dbg !4067

if.else97:                                        ; preds = %if.else90
  %67 = load i32*, i32** %status.addr, align 8, !dbg !4068
  %68 = load i32, i32* %67, align 4, !dbg !4070
  %or98 = or i32 %68, 2, !dbg !4070
  store i32 %or98, i32* %67, align 4, !dbg !4070
  %69 = load i8, i8* %bits, align 1, !dbg !4071
  %conv99 = zext i8 %69 to i32, !dbg !4071
  %or100 = or i32 %conv99, 64, !dbg !4072
  %conv101 = trunc i32 %or100 to i8, !dbg !4071
  %70 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4073
  %bits102 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %70, i32 0, i32 2, !dbg !4074
  store i8 %conv101, i8* %bits102, align 4, !dbg !4075
  br label %if.end103

if.end103:                                        ; preds = %if.else97, %if.then95
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.then87
  br label %do.end, !dbg !4076

if.end105:                                        ; preds = %land.lhs.true65, %land.lhs.true, %if.end57
  %71 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4077
  %lsu106 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %71, i32 0, i32 3, !dbg !4077
  %arraydecay107 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu106, i64 0, i64 0, !dbg !4077
  %72 = load i16, i16* %arraydecay107, align 2, !dbg !4077
  %conv108 = zext i16 %72 to i32, !dbg !4077
  %cmp109 = icmp eq i32 %conv108, 0, !dbg !4077
  br i1 %cmp109, label %land.lhs.true111, label %if.end150, !dbg !4077

land.lhs.true111:                                 ; preds = %if.end105
  %73 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4077
  %digits112 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %73, i32 0, i32 0, !dbg !4077
  %74 = load i32, i32* %digits112, align 4, !dbg !4077
  %cmp113 = icmp eq i32 %74, 1, !dbg !4077
  br i1 %cmp113, label %land.lhs.true115, label %if.end150, !dbg !4077

land.lhs.true115:                                 ; preds = %land.lhs.true111
  %75 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4077
  %bits116 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %75, i32 0, i32 2, !dbg !4077
  %76 = load i8, i8* %bits116, align 4, !dbg !4077
  %conv117 = zext i8 %76 to i32, !dbg !4077
  %and118 = and i32 %conv117, 112, !dbg !4077
  %cmp119 = icmp eq i32 %and118, 0, !dbg !4077
  br i1 %cmp119, label %if.then121, label %if.end150, !dbg !4079

if.then121:                                       ; preds = %land.lhs.true115
  %77 = load i8, i8* %op.addr, align 1, !dbg !4080
  %conv122 = zext i8 %77 to i32, !dbg !4080
  %and123 = and i32 %conv122, 128, !dbg !4083
  %tobool124 = icmp ne i32 %and123, 0, !dbg !4083
  br i1 %tobool124, label %if.then125, label %if.else132, !dbg !4084

if.then125:                                       ; preds = %if.then121
  store i32 0, i32* %residue, align 4, !dbg !4085
  %78 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4087
  %exponent126 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %78, i32 0, i32 1, !dbg !4088
  %79 = load i32, i32* %exponent126, align 4, !dbg !4088
  %80 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !4089
  %exponent127 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %80, i32 0, i32 1, !dbg !4090
  %81 = load i32, i32* %exponent127, align 4, !dbg !4090
  %sub128 = sub nsw i32 %79, %81, !dbg !4091
  store i32 %sub128, i32* %exponent, align 4, !dbg !4092
  %82 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4093
  %83 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4094
  %call129 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %82, %struct.decNumber* %83), !dbg !4095
  %84 = load i8, i8* %bits, align 1, !dbg !4096
  %85 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4097
  %bits130 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %85, i32 0, i32 2, !dbg !4098
  store i8 %84, i8* %bits130, align 4, !dbg !4099
  %86 = load i32, i32* %exponent, align 4, !dbg !4100
  %87 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4101
  %exponent131 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %87, i32 0, i32 1, !dbg !4102
  store i32 %86, i32* %exponent131, align 4, !dbg !4103
  %88 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4104
  %89 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !4105
  %90 = load i32*, i32** %status.addr, align 8, !dbg !4106
  call void @decFinalize(%struct.decNumber* %88, %struct.decContext* %89, i32* %residue, i32* %90), !dbg !4107
  br label %if.end149, !dbg !4108

if.else132:                                       ; preds = %if.then121
  %91 = load i8, i8* %op.addr, align 1, !dbg !4109
  %conv133 = zext i8 %91 to i32, !dbg !4109
  %and134 = and i32 %conv133, 32, !dbg !4111
  %tobool135 = icmp ne i32 %and134, 0, !dbg !4111
  br i1 %tobool135, label %if.then136, label %if.else139, !dbg !4112

if.then136:                                       ; preds = %if.else132
  %92 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4113
  %call137 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %92), !dbg !4115
  %93 = load i8, i8* %bits, align 1, !dbg !4116
  %94 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4117
  %bits138 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %94, i32 0, i32 2, !dbg !4118
  store i8 %93, i8* %bits138, align 4, !dbg !4119
  br label %if.end148, !dbg !4120

if.else139:                                       ; preds = %if.else132
  %95 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !4121
  %exponent140 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %95, i32 0, i32 1, !dbg !4123
  %96 = load i32, i32* %exponent140, align 4, !dbg !4123
  store i32 %96, i32* %exponent, align 4, !dbg !4124
  %97 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4125
  %98 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4126
  %call141 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %97, %struct.decNumber* %98), !dbg !4127
  %99 = load i32, i32* %exponent, align 4, !dbg !4128
  %100 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4130
  %exponent142 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %100, i32 0, i32 1, !dbg !4131
  %101 = load i32, i32* %exponent142, align 4, !dbg !4131
  %cmp143 = icmp slt i32 %99, %101, !dbg !4132
  br i1 %cmp143, label %if.then145, label %if.end147, !dbg !4133

if.then145:                                       ; preds = %if.else139
  %102 = load i32, i32* %exponent, align 4, !dbg !4134
  %103 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4135
  %exponent146 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %103, i32 0, i32 1, !dbg !4136
  store i32 %102, i32* %exponent146, align 4, !dbg !4137
  br label %if.end147, !dbg !4135

if.end147:                                        ; preds = %if.then145, %if.else139
  br label %if.end148

if.end148:                                        ; preds = %if.end147, %if.then136
  br label %if.end149

if.end149:                                        ; preds = %if.end148, %if.then125
  br label %do.end, !dbg !4138

if.end150:                                        ; preds = %land.lhs.true115, %land.lhs.true111, %if.end105
  %104 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4139
  %exponent151 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %104, i32 0, i32 1, !dbg !4140
  %105 = load i32, i32* %exponent151, align 4, !dbg !4140
  %106 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4141
  %digits152 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %106, i32 0, i32 0, !dbg !4142
  %107 = load i32, i32* %digits152, align 4, !dbg !4142
  %add153 = add nsw i32 %105, %107, !dbg !4143
  %108 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !4144
  %exponent154 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %108, i32 0, i32 1, !dbg !4145
  %109 = load i32, i32* %exponent154, align 4, !dbg !4145
  %110 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !4146
  %digits155 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %110, i32 0, i32 0, !dbg !4147
  %111 = load i32, i32* %digits155, align 4, !dbg !4147
  %add156 = add nsw i32 %109, %111, !dbg !4148
  %sub157 = sub nsw i32 %add153, %add156, !dbg !4149
  store i32 %sub157, i32* %exponent, align 4, !dbg !4150
  %112 = load i32, i32* %exponent, align 4, !dbg !4151
  %cmp158 = icmp slt i32 %112, 0, !dbg !4153
  br i1 %cmp158, label %land.lhs.true160, label %if.end186, !dbg !4154

land.lhs.true160:                                 ; preds = %if.end150
  %113 = load i8, i8* %op.addr, align 1, !dbg !4155
  %conv161 = zext i8 %113 to i32, !dbg !4155
  %cmp162 = icmp eq i32 %conv161, 128, !dbg !4156
  br i1 %cmp162, label %if.end186, label %if.then164, !dbg !4157

if.then164:                                       ; preds = %land.lhs.true160
  %114 = load i8, i8* %op.addr, align 1, !dbg !4158
  %conv165 = zext i8 %114 to i32, !dbg !4158
  %and166 = and i32 %conv165, 32, !dbg !4161
  %tobool167 = icmp ne i32 %and166, 0, !dbg !4161
  br i1 %tobool167, label %if.then168, label %if.end171, !dbg !4162

if.then168:                                       ; preds = %if.then164
  %115 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4163
  %call169 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %115), !dbg !4165
  %116 = load i8, i8* %bits, align 1, !dbg !4166
  %117 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4167
  %bits170 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %117, i32 0, i32 2, !dbg !4168
  store i8 %116, i8* %bits170, align 4, !dbg !4169
  br label %do.end, !dbg !4170

if.end171:                                        ; preds = %if.then164
  %118 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4171
  %exponent172 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %118, i32 0, i32 1, !dbg !4173
  %119 = load i32, i32* %exponent172, align 4, !dbg !4173
  %120 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !4174
  %exponent173 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %120, i32 0, i32 1, !dbg !4175
  %121 = load i32, i32* %exponent173, align 4, !dbg !4175
  %cmp174 = icmp sle i32 %119, %121, !dbg !4176
  br i1 %cmp174, label %if.then176, label %if.end185, !dbg !4177

if.then176:                                       ; preds = %if.end171
  %122 = load i8, i8* %op.addr, align 1, !dbg !4178
  %conv177 = zext i8 %122 to i32, !dbg !4178
  %and178 = and i32 %conv177, 64, !dbg !4181
  %tobool179 = icmp ne i32 %and178, 0, !dbg !4181
  br i1 %tobool179, label %if.then183, label %lor.lhs.false180, !dbg !4182

lor.lhs.false180:                                 ; preds = %if.then176
  %123 = load i32, i32* %exponent, align 4, !dbg !4183
  %cmp181 = icmp slt i32 %123, -1, !dbg !4184
  br i1 %cmp181, label %if.then183, label %if.end184, !dbg !4185

if.then183:                                       ; preds = %lor.lhs.false180, %if.then176
  store i32 0, i32* %residue, align 4, !dbg !4186
  %124 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4188
  %125 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4189
  %126 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !4190
  %127 = load i32*, i32** %status.addr, align 8, !dbg !4191
  call void @decCopyFit(%struct.decNumber* %124, %struct.decNumber* %125, %struct.decContext* %126, i32* %residue, i32* %127), !dbg !4192
  %128 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4193
  %129 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !4193
  %130 = load i32*, i32** %status.addr, align 8, !dbg !4193
  call void @decFinalize(%struct.decNumber* %128, %struct.decContext* %129, i32* %residue, i32* %130), !dbg !4193
  br label %do.end, !dbg !4194

if.end184:                                        ; preds = %lor.lhs.false180
  br label %if.end185, !dbg !4195

if.end185:                                        ; preds = %if.end184, %if.end171
  br label %if.end186, !dbg !4196

if.end186:                                        ; preds = %if.end185, %land.lhs.true160, %if.end150
  %131 = load i32, i32* %reqdigits, align 4, !dbg !4197
  %add187 = add nsw i32 %131, 3, !dbg !4197
  %cmp188 = icmp sle i32 %add187, 49, !dbg !4197
  br i1 %cmp188, label %cond.true, label %cond.false, !dbg !4197

cond.true:                                        ; preds = %if.end186
  %132 = load i32, i32* %reqdigits, align 4, !dbg !4197
  %add190 = add nsw i32 %132, 3, !dbg !4197
  %idxprom = sext i32 %add190 to i64, !dbg !4197
  %arrayidx = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom, !dbg !4197
  %133 = load i8, i8* %arrayidx, align 1, !dbg !4197
  %conv191 = zext i8 %133 to i32, !dbg !4197
  br label %cond.end, !dbg !4197

cond.false:                                       ; preds = %if.end186
  %134 = load i32, i32* %reqdigits, align 4, !dbg !4197
  %add192 = add nsw i32 %134, 3, !dbg !4197
  %add193 = add nsw i32 %add192, 3, !dbg !4197
  %sub194 = sub nsw i32 %add193, 1, !dbg !4197
  %div = sdiv i32 %sub194, 3, !dbg !4197
  br label %cond.end, !dbg !4197

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv191, %cond.true ], [ %div, %cond.false ], !dbg !4197
  store i32 %cond, i32* %acclength, align 4, !dbg !4198
  %135 = load i32, i32* %acclength, align 4, !dbg !4199
  %conv195 = sext i32 %135 to i64, !dbg !4199
  %mul = mul i64 %conv195, 2, !dbg !4201
  %cmp196 = icmp ugt i64 %mul, 34, !dbg !4202
  br i1 %cmp196, label %if.then198, label %if.end207, !dbg !4203

if.then198:                                       ; preds = %cond.end
  %136 = load i32, i32* %acclength, align 4, !dbg !4204
  %conv199 = sext i32 %136 to i64, !dbg !4204
  %mul200 = mul i64 %conv199, 2, !dbg !4206
  %call201 = call noalias i8* @malloc(i64 %mul200) #6, !dbg !4207
  %137 = bitcast i8* %call201 to i16*, !dbg !4208
  store i16* %137, i16** %allocacc, align 8, !dbg !4209
  %138 = load i16*, i16** %allocacc, align 8, !dbg !4210
  %cmp202 = icmp eq i16* %138, null, !dbg !4212
  br i1 %cmp202, label %if.then204, label %if.end206, !dbg !4213

if.then204:                                       ; preds = %if.then198
  %139 = load i32*, i32** %status.addr, align 8, !dbg !4214
  %140 = load i32, i32* %139, align 4, !dbg !4216
  %or205 = or i32 %140, 16, !dbg !4216
  store i32 %or205, i32* %139, align 4, !dbg !4216
  br label %do.end, !dbg !4217

if.end206:                                        ; preds = %if.then198
  %141 = load i16*, i16** %allocacc, align 8, !dbg !4218
  store i16* %141, i16** %acc, align 8, !dbg !4219
  br label %if.end207, !dbg !4220

if.end207:                                        ; preds = %if.end206, %cond.end
  %142 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !4221
  %digits208 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %142, i32 0, i32 0, !dbg !4222
  %143 = load i32, i32* %digits208, align 4, !dbg !4222
  %144 = load i32, i32* %reqdigits, align 4, !dbg !4223
  %add209 = add nsw i32 %143, %144, !dbg !4224
  %sub210 = sub nsw i32 %add209, 1, !dbg !4225
  store i32 %sub210, i32* %maxdigits, align 4, !dbg !4226
  %145 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4227
  %digits211 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %145, i32 0, i32 0, !dbg !4229
  %146 = load i32, i32* %digits211, align 4, !dbg !4229
  %147 = load i32, i32* %maxdigits, align 4, !dbg !4230
  %cmp212 = icmp sgt i32 %146, %147, !dbg !4231
  br i1 %cmp212, label %if.then214, label %if.end216, !dbg !4232

if.then214:                                       ; preds = %if.end207
  %148 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4233
  %digits215 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %148, i32 0, i32 0, !dbg !4234
  %149 = load i32, i32* %digits215, align 4, !dbg !4234
  store i32 %149, i32* %maxdigits, align 4, !dbg !4235
  br label %if.end216, !dbg !4236

if.end216:                                        ; preds = %if.then214, %if.end207
  %150 = load i32, i32* %maxdigits, align 4, !dbg !4237
  %cmp217 = icmp sle i32 %150, 49, !dbg !4237
  br i1 %cmp217, label %cond.true219, label %cond.false223, !dbg !4237

cond.true219:                                     ; preds = %if.end216
  %151 = load i32, i32* %maxdigits, align 4, !dbg !4237
  %idxprom220 = sext i32 %151 to i64, !dbg !4237
  %arrayidx221 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom220, !dbg !4237
  %152 = load i8, i8* %arrayidx221, align 1, !dbg !4237
  %conv222 = zext i8 %152 to i32, !dbg !4237
  br label %cond.end227, !dbg !4237

cond.false223:                                    ; preds = %if.end216
  %153 = load i32, i32* %maxdigits, align 4, !dbg !4237
  %add224 = add nsw i32 %153, 3, !dbg !4237
  %sub225 = sub nsw i32 %add224, 1, !dbg !4237
  %div226 = sdiv i32 %sub225, 3, !dbg !4237
  br label %cond.end227, !dbg !4237

cond.end227:                                      ; preds = %cond.false223, %cond.true219
  %cond228 = phi i32 [ %conv222, %cond.true219 ], [ %div226, %cond.false223 ], !dbg !4237
  %add229 = add nsw i32 %cond228, 2, !dbg !4238
  store i32 %add229, i32* %var1units, align 4, !dbg !4239
  %154 = load i8, i8* %op.addr, align 1, !dbg !4240
  %conv230 = zext i8 %154 to i32, !dbg !4240
  %and231 = and i32 %conv230, 128, !dbg !4242
  %tobool232 = icmp ne i32 %and231, 0, !dbg !4242
  br i1 %tobool232, label %if.end234, label %if.then233, !dbg !4243

if.then233:                                       ; preds = %cond.end227
  %155 = load i32, i32* %var1units, align 4, !dbg !4244
  %inc = add nsw i32 %155, 1, !dbg !4244
  store i32 %inc, i32* %var1units, align 4, !dbg !4244
  br label %if.end234, !dbg !4245

if.end234:                                        ; preds = %if.then233, %cond.end227
  %156 = load i32, i32* %var1units, align 4, !dbg !4246
  %add235 = add nsw i32 %156, 1, !dbg !4248
  %conv236 = sext i32 %add235 to i64, !dbg !4249
  %mul237 = mul i64 %conv236, 2, !dbg !4250
  %cmp238 = icmp ugt i64 %mul237, 50, !dbg !4251
  br i1 %cmp238, label %if.then240, label %if.end250, !dbg !4252

if.then240:                                       ; preds = %if.end234
  %157 = load i32, i32* %var1units, align 4, !dbg !4253
  %add241 = add nsw i32 %157, 1, !dbg !4255
  %conv242 = sext i32 %add241 to i64, !dbg !4256
  %mul243 = mul i64 %conv242, 2, !dbg !4257
  %call244 = call noalias i8* @malloc(i64 %mul243) #6, !dbg !4258
  %158 = bitcast i8* %call244 to i16*, !dbg !4259
  store i16* %158, i16** %varalloc, align 8, !dbg !4260
  %159 = load i16*, i16** %varalloc, align 8, !dbg !4261
  %cmp245 = icmp eq i16* %159, null, !dbg !4263
  br i1 %cmp245, label %if.then247, label %if.end249, !dbg !4264

if.then247:                                       ; preds = %if.then240
  %160 = load i32*, i32** %status.addr, align 8, !dbg !4265
  %161 = load i32, i32* %160, align 4, !dbg !4267
  %or248 = or i32 %161, 16, !dbg !4267
  store i32 %or248, i32* %160, align 4, !dbg !4267
  br label %do.end, !dbg !4268

if.end249:                                        ; preds = %if.then240
  %162 = load i16*, i16** %varalloc, align 8, !dbg !4269
  store i16* %162, i16** %var1, align 8, !dbg !4270
  br label %if.end250, !dbg !4271

if.end250:                                        ; preds = %if.end249, %if.end234
  %163 = load i16*, i16** %var1, align 8, !dbg !4272
  %164 = load i32, i32* %var1units, align 4, !dbg !4273
  %idx.ext = sext i32 %164 to i64, !dbg !4274
  %add.ptr = getelementptr inbounds i16, i16* %163, i64 %idx.ext, !dbg !4274
  %add.ptr251 = getelementptr inbounds i16, i16* %add.ptr, i64 -1, !dbg !4275
  store i16* %add.ptr251, i16** %msu1, align 8, !dbg !4276
  %165 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4277
  %lsu252 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %165, i32 0, i32 3, !dbg !4278
  %arraydecay253 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu252, i64 0, i64 0, !dbg !4277
  %166 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4279
  %digits254 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %166, i32 0, i32 0, !dbg !4279
  %167 = load i32, i32* %digits254, align 4, !dbg !4279
  %cmp255 = icmp sle i32 %167, 49, !dbg !4279
  br i1 %cmp255, label %cond.true257, label %cond.false262, !dbg !4279

cond.true257:                                     ; preds = %if.end250
  %168 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4279
  %digits258 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %168, i32 0, i32 0, !dbg !4279
  %169 = load i32, i32* %digits258, align 4, !dbg !4279
  %idxprom259 = sext i32 %169 to i64, !dbg !4279
  %arrayidx260 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom259, !dbg !4279
  %170 = load i8, i8* %arrayidx260, align 1, !dbg !4279
  %conv261 = zext i8 %170 to i32, !dbg !4279
  br label %cond.end267, !dbg !4279

cond.false262:                                    ; preds = %if.end250
  %171 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4279
  %digits263 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %171, i32 0, i32 0, !dbg !4279
  %172 = load i32, i32* %digits263, align 4, !dbg !4279
  %add264 = add nsw i32 %172, 3, !dbg !4279
  %sub265 = sub nsw i32 %add264, 1, !dbg !4279
  %div266 = sdiv i32 %sub265, 3, !dbg !4279
  br label %cond.end267, !dbg !4279

cond.end267:                                      ; preds = %cond.false262, %cond.true257
  %cond268 = phi i32 [ %conv261, %cond.true257 ], [ %div266, %cond.false262 ], !dbg !4279
  %idx.ext269 = sext i32 %cond268 to i64, !dbg !4280
  %add.ptr270 = getelementptr inbounds i16, i16* %arraydecay253, i64 %idx.ext269, !dbg !4280
  %add.ptr271 = getelementptr inbounds i16, i16* %add.ptr270, i64 -1, !dbg !4281
  store i16* %add.ptr271, i16** %source, align 8, !dbg !4282
  %173 = load i16*, i16** %msu1, align 8, !dbg !4283
  store i16* %173, i16** %target, align 8, !dbg !4285
  br label %for.cond, !dbg !4286

for.cond:                                         ; preds = %for.inc, %cond.end267
  %174 = load i16*, i16** %source, align 8, !dbg !4287
  %175 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4289
  %lsu272 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %175, i32 0, i32 3, !dbg !4290
  %arraydecay273 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu272, i64 0, i64 0, !dbg !4289
  %cmp274 = icmp uge i16* %174, %arraydecay273, !dbg !4291
  br i1 %cmp274, label %for.body, label %for.end, !dbg !4292

for.body:                                         ; preds = %for.cond
  %176 = load i16*, i16** %source, align 8, !dbg !4293
  %177 = load i16, i16* %176, align 2, !dbg !4294
  %178 = load i16*, i16** %target, align 8, !dbg !4295
  store i16 %177, i16* %178, align 2, !dbg !4296
  br label %for.inc, !dbg !4297

for.inc:                                          ; preds = %for.body
  %179 = load i16*, i16** %source, align 8, !dbg !4298
  %incdec.ptr = getelementptr inbounds i16, i16* %179, i32 -1, !dbg !4298
  store i16* %incdec.ptr, i16** %source, align 8, !dbg !4298
  %180 = load i16*, i16** %target, align 8, !dbg !4299
  %incdec.ptr276 = getelementptr inbounds i16, i16* %180, i32 -1, !dbg !4299
  store i16* %incdec.ptr276, i16** %target, align 8, !dbg !4299
  br label %for.cond, !dbg !4300, !llvm.loop !4301

for.end:                                          ; preds = %for.cond
  br label %for.cond277, !dbg !4303

for.cond277:                                      ; preds = %for.inc281, %for.end
  %181 = load i16*, i16** %target, align 8, !dbg !4304
  %182 = load i16*, i16** %var1, align 8, !dbg !4307
  %cmp278 = icmp uge i16* %181, %182, !dbg !4308
  br i1 %cmp278, label %for.body280, label %for.end283, !dbg !4309

for.body280:                                      ; preds = %for.cond277
  %183 = load i16*, i16** %target, align 8, !dbg !4310
  store i16 0, i16* %183, align 2, !dbg !4311
  br label %for.inc281, !dbg !4312

for.inc281:                                       ; preds = %for.body280
  %184 = load i16*, i16** %target, align 8, !dbg !4313
  %incdec.ptr282 = getelementptr inbounds i16, i16* %184, i32 -1, !dbg !4313
  store i16* %incdec.ptr282, i16** %target, align 8, !dbg !4313
  br label %for.cond277, !dbg !4314, !llvm.loop !4315

for.end283:                                       ; preds = %for.cond277
  %185 = load i32, i32* %var1units, align 4, !dbg !4317
  store i32 %185, i32* %var2ulen, align 4, !dbg !4318
  %186 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !4319
  %digits284 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %186, i32 0, i32 0, !dbg !4319
  %187 = load i32, i32* %digits284, align 4, !dbg !4319
  %cmp285 = icmp sle i32 %187, 49, !dbg !4319
  br i1 %cmp285, label %cond.true287, label %cond.false292, !dbg !4319

cond.true287:                                     ; preds = %for.end283
  %188 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !4319
  %digits288 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %188, i32 0, i32 0, !dbg !4319
  %189 = load i32, i32* %digits288, align 4, !dbg !4319
  %idxprom289 = sext i32 %189 to i64, !dbg !4319
  %arrayidx290 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom289, !dbg !4319
  %190 = load i8, i8* %arrayidx290, align 1, !dbg !4319
  %conv291 = zext i8 %190 to i32, !dbg !4319
  br label %cond.end297, !dbg !4319

cond.false292:                                    ; preds = %for.end283
  %191 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !4319
  %digits293 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %191, i32 0, i32 0, !dbg !4319
  %192 = load i32, i32* %digits293, align 4, !dbg !4319
  %add294 = add nsw i32 %192, 3, !dbg !4319
  %sub295 = sub nsw i32 %add294, 1, !dbg !4319
  %div296 = sdiv i32 %sub295, 3, !dbg !4319
  br label %cond.end297, !dbg !4319

cond.end297:                                      ; preds = %cond.false292, %cond.true287
  %cond298 = phi i32 [ %conv291, %cond.true287 ], [ %div296, %cond.false292 ], !dbg !4319
  store i32 %cond298, i32* %var2units, align 4, !dbg !4320
  %193 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !4321
  %lsu299 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %193, i32 0, i32 3, !dbg !4322
  %arraydecay300 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu299, i64 0, i64 0, !dbg !4321
  store i16* %arraydecay300, i16** %var2, align 8, !dbg !4323
  %194 = load i16*, i16** %var2, align 8, !dbg !4324
  %195 = load i32, i32* %var2units, align 4, !dbg !4325
  %idx.ext301 = sext i32 %195 to i64, !dbg !4326
  %add.ptr302 = getelementptr inbounds i16, i16* %194, i64 %idx.ext301, !dbg !4326
  %add.ptr303 = getelementptr inbounds i16, i16* %add.ptr302, i64 -1, !dbg !4327
  store i16* %add.ptr303, i16** %msu2, align 8, !dbg !4328
  %196 = load i16*, i16** %msu2, align 8, !dbg !4329
  %197 = load i16, i16* %196, align 2, !dbg !4330
  %conv304 = zext i16 %197 to i32, !dbg !4330
  store i32 %conv304, i32* %msu2plus, align 4, !dbg !4331
  %198 = load i32, i32* %var2units, align 4, !dbg !4332
  %cmp305 = icmp sgt i32 %198, 1, !dbg !4334
  br i1 %cmp305, label %if.then307, label %if.end309, !dbg !4335

if.then307:                                       ; preds = %cond.end297
  %199 = load i32, i32* %msu2plus, align 4, !dbg !4336
  %inc308 = add nsw i32 %199, 1, !dbg !4336
  store i32 %inc308, i32* %msu2plus, align 4, !dbg !4336
  br label %if.end309, !dbg !4337

if.end309:                                        ; preds = %if.then307, %cond.end297
  %200 = load i16*, i16** %msu2, align 8, !dbg !4338
  %201 = load i16, i16* %200, align 2, !dbg !4339
  %conv310 = zext i16 %201 to i32, !dbg !4340
  %mul311 = mul nsw i32 %conv310, 1000, !dbg !4341
  store i32 %mul311, i32* %msu2pair, align 4, !dbg !4342
  %202 = load i32, i32* %var2units, align 4, !dbg !4343
  %cmp312 = icmp sgt i32 %202, 1, !dbg !4345
  br i1 %cmp312, label %if.then314, label %if.end323, !dbg !4346

if.then314:                                       ; preds = %if.end309
  %203 = load i16*, i16** %msu2, align 8, !dbg !4347
  %add.ptr315 = getelementptr inbounds i16, i16* %203, i64 -1, !dbg !4349
  %204 = load i16, i16* %add.ptr315, align 2, !dbg !4350
  %conv316 = zext i16 %204 to i32, !dbg !4350
  %205 = load i32, i32* %msu2pair, align 4, !dbg !4351
  %add317 = add nsw i32 %205, %conv316, !dbg !4351
  store i32 %add317, i32* %msu2pair, align 4, !dbg !4351
  %206 = load i32, i32* %var2units, align 4, !dbg !4352
  %cmp318 = icmp sgt i32 %206, 2, !dbg !4354
  br i1 %cmp318, label %if.then320, label %if.end322, !dbg !4355

if.then320:                                       ; preds = %if.then314
  %207 = load i32, i32* %msu2pair, align 4, !dbg !4356
  %inc321 = add nsw i32 %207, 1, !dbg !4356
  store i32 %inc321, i32* %msu2pair, align 4, !dbg !4356
  br label %if.end322, !dbg !4357

if.end322:                                        ; preds = %if.then320, %if.then314
  br label %if.end323, !dbg !4358

if.end323:                                        ; preds = %if.end322, %if.end309
  store i32* getelementptr inbounds ([10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 1), i32** %pow, align 8, !dbg !4359
  br label %for.cond324, !dbg !4361

for.cond324:                                      ; preds = %for.inc329, %if.end323
  %208 = load i16*, i16** %msu1, align 8, !dbg !4362
  %209 = load i16, i16* %208, align 2, !dbg !4364
  %conv325 = zext i16 %209 to i32, !dbg !4364
  %210 = load i32*, i32** %pow, align 8, !dbg !4365
  %211 = load i32, i32* %210, align 4, !dbg !4366
  %cmp326 = icmp uge i32 %conv325, %211, !dbg !4367
  br i1 %cmp326, label %for.body328, label %for.end331, !dbg !4368

for.body328:                                      ; preds = %for.cond324
  %212 = load i32, i32* %exponent, align 4, !dbg !4369
  %dec = add nsw i32 %212, -1, !dbg !4369
  store i32 %dec, i32* %exponent, align 4, !dbg !4369
  br label %for.inc329, !dbg !4370

for.inc329:                                       ; preds = %for.body328
  %213 = load i32*, i32** %pow, align 8, !dbg !4371
  %incdec.ptr330 = getelementptr inbounds i32, i32* %213, i32 1, !dbg !4371
  store i32* %incdec.ptr330, i32** %pow, align 8, !dbg !4371
  br label %for.cond324, !dbg !4372, !llvm.loop !4373

for.end331:                                       ; preds = %for.cond324
  store i32* getelementptr inbounds ([10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 1), i32** %pow, align 8, !dbg !4375
  br label %for.cond332, !dbg !4377

for.cond332:                                      ; preds = %for.inc338, %for.end331
  %214 = load i16*, i16** %msu2, align 8, !dbg !4378
  %215 = load i16, i16* %214, align 2, !dbg !4380
  %conv333 = zext i16 %215 to i32, !dbg !4380
  %216 = load i32*, i32** %pow, align 8, !dbg !4381
  %217 = load i32, i32* %216, align 4, !dbg !4382
  %cmp334 = icmp uge i32 %conv333, %217, !dbg !4383
  br i1 %cmp334, label %for.body336, label %for.end340, !dbg !4384

for.body336:                                      ; preds = %for.cond332
  %218 = load i32, i32* %exponent, align 4, !dbg !4385
  %inc337 = add nsw i32 %218, 1, !dbg !4385
  store i32 %inc337, i32* %exponent, align 4, !dbg !4385
  br label %for.inc338, !dbg !4386

for.inc338:                                       ; preds = %for.body336
  %219 = load i32*, i32** %pow, align 8, !dbg !4387
  %incdec.ptr339 = getelementptr inbounds i32, i32* %219, i32 1, !dbg !4387
  store i32* %incdec.ptr339, i32** %pow, align 8, !dbg !4387
  br label %for.cond332, !dbg !4388, !llvm.loop !4389

for.end340:                                       ; preds = %for.cond332
  %220 = load i8, i8* %op.addr, align 1, !dbg !4391
  %conv341 = zext i8 %220 to i32, !dbg !4391
  %and342 = and i32 %conv341, 128, !dbg !4393
  %tobool343 = icmp ne i32 %and342, 0, !dbg !4393
  br i1 %tobool343, label %if.else380, label %if.then344, !dbg !4394

if.then344:                                       ; preds = %for.end340
  call void @llvm.dbg.declare(metadata i16** %u, metadata !4395, metadata !DIExpression()), !dbg !4397
  %221 = load i32, i32* %var1units, align 4, !dbg !4398
  %222 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4399
  %digits345 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %222, i32 0, i32 0, !dbg !4399
  %223 = load i32, i32* %digits345, align 4, !dbg !4399
  %cmp346 = icmp sle i32 %223, 49, !dbg !4399
  br i1 %cmp346, label %cond.true348, label %cond.false353, !dbg !4399

cond.true348:                                     ; preds = %if.then344
  %224 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4399
  %digits349 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %224, i32 0, i32 0, !dbg !4399
  %225 = load i32, i32* %digits349, align 4, !dbg !4399
  %idxprom350 = sext i32 %225 to i64, !dbg !4399
  %arrayidx351 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom350, !dbg !4399
  %226 = load i8, i8* %arrayidx351, align 1, !dbg !4399
  %conv352 = zext i8 %226 to i32, !dbg !4399
  br label %cond.end358, !dbg !4399

cond.false353:                                    ; preds = %if.then344
  %227 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4399
  %digits354 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %227, i32 0, i32 0, !dbg !4399
  %228 = load i32, i32* %digits354, align 4, !dbg !4399
  %add355 = add nsw i32 %228, 3, !dbg !4399
  %sub356 = sub nsw i32 %add355, 1, !dbg !4399
  %div357 = sdiv i32 %sub356, 3, !dbg !4399
  br label %cond.end358, !dbg !4399

cond.end358:                                      ; preds = %cond.false353, %cond.true348
  %cond359 = phi i32 [ %conv352, %cond.true348 ], [ %div357, %cond.false353 ], !dbg !4399
  %sub360 = sub nsw i32 %221, %cond359, !dbg !4400
  %mul361 = mul nsw i32 %sub360, 3, !dbg !4401
  store i32 %mul361, i32* %var1initpad, align 4, !dbg !4402
  %229 = load i32, i32* %exponent, align 4, !dbg !4403
  %cmp362 = icmp slt i32 %229, 0, !dbg !4405
  br i1 %cmp362, label %if.then364, label %if.else366, !dbg !4406

if.then364:                                       ; preds = %cond.end358
  %230 = load i32, i32* %exponent, align 4, !dbg !4407
  %sub365 = sub nsw i32 0, %230, !dbg !4408
  store i32 %sub365, i32* %cut, align 4, !dbg !4409
  br label %if.end368, !dbg !4410

if.else366:                                       ; preds = %cond.end358
  %231 = load i32, i32* %exponent, align 4, !dbg !4411
  %rem = srem i32 %231, 3, !dbg !4412
  %sub367 = sub nsw i32 3, %rem, !dbg !4413
  store i32 %sub367, i32* %cut, align 4, !dbg !4414
  br label %if.end368

if.end368:                                        ; preds = %if.else366, %if.then364
  %232 = load i16*, i16** %var1, align 8, !dbg !4415
  %233 = load i32, i32* %var1units, align 4, !dbg !4416
  %234 = load i32, i32* %cut, align 4, !dbg !4417
  %call369 = call i32 @decShiftToLeast(i16* %232, i32 %233, i32 %234), !dbg !4418
  %235 = load i32, i32* %cut, align 4, !dbg !4419
  %236 = load i32, i32* %exponent, align 4, !dbg !4420
  %add370 = add nsw i32 %236, %235, !dbg !4420
  store i32 %add370, i32* %exponent, align 4, !dbg !4420
  %237 = load i32, i32* %cut, align 4, !dbg !4421
  %238 = load i32, i32* %var1initpad, align 4, !dbg !4422
  %sub371 = sub nsw i32 %238, %237, !dbg !4422
  store i32 %sub371, i32* %var1initpad, align 4, !dbg !4422
  %239 = load i16*, i16** %msu1, align 8, !dbg !4423
  store i16* %239, i16** %u, align 8, !dbg !4425
  br label %for.cond372, !dbg !4426

for.cond372:                                      ; preds = %for.inc376, %if.end368
  %240 = load i32, i32* %cut, align 4, !dbg !4427
  %cmp373 = icmp sge i32 %240, 3, !dbg !4429
  br i1 %cmp373, label %for.body375, label %for.end379, !dbg !4430

for.body375:                                      ; preds = %for.cond372
  %241 = load i16*, i16** %u, align 8, !dbg !4431
  store i16 0, i16* %241, align 2, !dbg !4432
  br label %for.inc376, !dbg !4433

for.inc376:                                       ; preds = %for.body375
  %242 = load i32, i32* %cut, align 4, !dbg !4434
  %sub377 = sub nsw i32 %242, 3, !dbg !4434
  store i32 %sub377, i32* %cut, align 4, !dbg !4434
  %243 = load i16*, i16** %u, align 8, !dbg !4435
  %incdec.ptr378 = getelementptr inbounds i16, i16* %243, i32 -1, !dbg !4435
  store i16* %incdec.ptr378, i16** %u, align 8, !dbg !4435
  br label %for.cond372, !dbg !4436, !llvm.loop !4437

for.end379:                                       ; preds = %for.cond372
  br label %if.end392, !dbg !4439

if.else380:                                       ; preds = %for.end340
  %244 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4440
  %exponent381 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %244, i32 0, i32 1, !dbg !4442
  %245 = load i32, i32* %exponent381, align 4, !dbg !4442
  %246 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !4443
  %exponent382 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %246, i32 0, i32 1, !dbg !4444
  %247 = load i32, i32* %exponent382, align 4, !dbg !4444
  %sub383 = sub nsw i32 %245, %247, !dbg !4445
  store i32 %sub383, i32* %maxexponent, align 4, !dbg !4446
  %248 = load i16*, i16** %msu1, align 8, !dbg !4447
  %249 = load i16, i16* %248, align 2, !dbg !4449
  %conv384 = zext i16 %249 to i32, !dbg !4449
  %250 = load i16*, i16** %msu2, align 8, !dbg !4450
  %251 = load i16, i16* %250, align 2, !dbg !4451
  %conv385 = zext i16 %251 to i32, !dbg !4451
  %cmp386 = icmp slt i32 %conv384, %conv385, !dbg !4452
  br i1 %cmp386, label %if.then388, label %if.end391, !dbg !4453

if.then388:                                       ; preds = %if.else380
  %252 = load i32, i32* %var2ulen, align 4, !dbg !4454
  %dec389 = add nsw i32 %252, -1, !dbg !4454
  store i32 %dec389, i32* %var2ulen, align 4, !dbg !4454
  %253 = load i32, i32* %exponent, align 4, !dbg !4456
  %sub390 = sub nsw i32 %253, 3, !dbg !4456
  store i32 %sub390, i32* %exponent, align 4, !dbg !4456
  br label %if.end391, !dbg !4457

if.end391:                                        ; preds = %if.then388, %if.else380
  br label %if.end392

if.end392:                                        ; preds = %if.end391, %for.end379
  store i32 0, i32* %accunits, align 4, !dbg !4458
  store i32 0, i32* %accdigits, align 4, !dbg !4459
  %254 = load i16*, i16** %acc, align 8, !dbg !4460
  %255 = load i32, i32* %acclength, align 4, !dbg !4461
  %idx.ext393 = sext i32 %255 to i64, !dbg !4462
  %add.ptr394 = getelementptr inbounds i16, i16* %254, i64 %idx.ext393, !dbg !4462
  %add.ptr395 = getelementptr inbounds i16, i16* %add.ptr394, i64 -1, !dbg !4463
  store i16* %add.ptr395, i16** %accnext, align 8, !dbg !4464
  br label %for.cond396, !dbg !4465

for.cond396:                                      ; preds = %if.end536, %if.end392
  store i16 0, i16* %thisunit, align 2, !dbg !4466
  br label %for.cond397, !dbg !4470

for.cond397:                                      ; preds = %if.end465, %for.cond396
  br label %for.cond398, !dbg !4471

for.cond398:                                      ; preds = %for.inc406, %for.cond397
  %256 = load i16*, i16** %msu1, align 8, !dbg !4475
  %257 = load i16, i16* %256, align 2, !dbg !4478
  %conv399 = zext i16 %257 to i32, !dbg !4478
  %cmp400 = icmp eq i32 %conv399, 0, !dbg !4479
  br i1 %cmp400, label %land.rhs, label %land.end, !dbg !4480

land.rhs:                                         ; preds = %for.cond398
  %258 = load i16*, i16** %msu1, align 8, !dbg !4481
  %259 = load i16*, i16** %var1, align 8, !dbg !4482
  %cmp402 = icmp ugt i16* %258, %259, !dbg !4483
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond398
  %260 = phi i1 [ false, %for.cond398 ], [ %cmp402, %land.rhs ], !dbg !4484
  br i1 %260, label %for.body404, label %for.end408, !dbg !4485

for.body404:                                      ; preds = %land.end
  %261 = load i32, i32* %var1units, align 4, !dbg !4486
  %dec405 = add nsw i32 %261, -1, !dbg !4486
  store i32 %dec405, i32* %var1units, align 4, !dbg !4486
  br label %for.inc406, !dbg !4487

for.inc406:                                       ; preds = %for.body404
  %262 = load i16*, i16** %msu1, align 8, !dbg !4488
  %incdec.ptr407 = getelementptr inbounds i16, i16* %262, i32 -1, !dbg !4488
  store i16* %incdec.ptr407, i16** %msu1, align 8, !dbg !4488
  br label %for.cond398, !dbg !4489, !llvm.loop !4490

for.end408:                                       ; preds = %land.end
  %263 = load i32, i32* %var1units, align 4, !dbg !4492
  %264 = load i32, i32* %var2ulen, align 4, !dbg !4494
  %cmp409 = icmp slt i32 %263, %264, !dbg !4495
  br i1 %cmp409, label %if.then411, label %if.end412, !dbg !4496

if.then411:                                       ; preds = %for.end408
  br label %for.end477, !dbg !4497

if.end412:                                        ; preds = %for.end408
  %265 = load i32, i32* %var1units, align 4, !dbg !4498
  %266 = load i32, i32* %var2ulen, align 4, !dbg !4500
  %cmp413 = icmp eq i32 %265, %266, !dbg !4501
  br i1 %cmp413, label %if.then415, label %if.else454, !dbg !4502

if.then415:                                       ; preds = %if.end412
  call void @llvm.dbg.declare(metadata i16** %pv1, metadata !4503, metadata !DIExpression()), !dbg !4505
  call void @llvm.dbg.declare(metadata i16** %pv2, metadata !4506, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.declare(metadata i16* %v2, metadata !4508, metadata !DIExpression()), !dbg !4509
  %267 = load i16*, i16** %msu2, align 8, !dbg !4510
  store i16* %267, i16** %pv2, align 8, !dbg !4511
  %268 = load i16*, i16** %msu1, align 8, !dbg !4512
  store i16* %268, i16** %pv1, align 8, !dbg !4514
  br label %for.cond416, !dbg !4515

for.cond416:                                      ; preds = %for.inc431, %if.then415
  store i16 0, i16* %v2, align 2, !dbg !4516
  %269 = load i16*, i16** %pv2, align 8, !dbg !4519
  %270 = load i16*, i16** %var2, align 8, !dbg !4521
  %cmp417 = icmp uge i16* %269, %270, !dbg !4522
  br i1 %cmp417, label %if.then419, label %if.end420, !dbg !4523

if.then419:                                       ; preds = %for.cond416
  %271 = load i16*, i16** %pv2, align 8, !dbg !4524
  %272 = load i16, i16* %271, align 2, !dbg !4525
  store i16 %272, i16* %v2, align 2, !dbg !4526
  br label %if.end420, !dbg !4527

if.end420:                                        ; preds = %if.then419, %for.cond416
  %273 = load i16*, i16** %pv1, align 8, !dbg !4528
  %274 = load i16, i16* %273, align 2, !dbg !4530
  %conv421 = zext i16 %274 to i32, !dbg !4530
  %275 = load i16, i16* %v2, align 2, !dbg !4531
  %conv422 = zext i16 %275 to i32, !dbg !4531
  %cmp423 = icmp ne i32 %conv421, %conv422, !dbg !4532
  br i1 %cmp423, label %if.then425, label %if.end426, !dbg !4533

if.then425:                                       ; preds = %if.end420
  br label %for.end434, !dbg !4534

if.end426:                                        ; preds = %if.end420
  %276 = load i16*, i16** %pv1, align 8, !dbg !4535
  %277 = load i16*, i16** %var1, align 8, !dbg !4537
  %cmp427 = icmp eq i16* %276, %277, !dbg !4538
  br i1 %cmp427, label %if.then429, label %if.end430, !dbg !4539

if.then429:                                       ; preds = %if.end426
  br label %for.end434, !dbg !4540

if.end430:                                        ; preds = %if.end426
  br label %for.inc431, !dbg !4541

for.inc431:                                       ; preds = %if.end430
  %278 = load i16*, i16** %pv1, align 8, !dbg !4542
  %incdec.ptr432 = getelementptr inbounds i16, i16* %278, i32 -1, !dbg !4542
  store i16* %incdec.ptr432, i16** %pv1, align 8, !dbg !4542
  %279 = load i16*, i16** %pv2, align 8, !dbg !4543
  %incdec.ptr433 = getelementptr inbounds i16, i16* %279, i32 -1, !dbg !4543
  store i16* %incdec.ptr433, i16** %pv2, align 8, !dbg !4543
  br label %for.cond416, !dbg !4544, !llvm.loop !4545

for.end434:                                       ; preds = %if.then429, %if.then425
  %280 = load i16*, i16** %pv1, align 8, !dbg !4548
  %281 = load i16, i16* %280, align 2, !dbg !4550
  %conv435 = zext i16 %281 to i32, !dbg !4550
  %282 = load i16, i16* %v2, align 2, !dbg !4551
  %conv436 = zext i16 %282 to i32, !dbg !4551
  %cmp437 = icmp slt i32 %conv435, %conv436, !dbg !4552
  br i1 %cmp437, label %if.then439, label %if.end440, !dbg !4553

if.then439:                                       ; preds = %for.end434
  br label %for.end477, !dbg !4554

if.end440:                                        ; preds = %for.end434
  %283 = load i16*, i16** %pv1, align 8, !dbg !4555
  %284 = load i16, i16* %283, align 2, !dbg !4557
  %conv441 = zext i16 %284 to i32, !dbg !4557
  %285 = load i16, i16* %v2, align 2, !dbg !4558
  %conv442 = zext i16 %285 to i32, !dbg !4558
  %cmp443 = icmp eq i32 %conv441, %conv442, !dbg !4559
  br i1 %cmp443, label %if.then445, label %if.end447, !dbg !4560

if.then445:                                       ; preds = %if.end440
  %286 = load i16, i16* %thisunit, align 2, !dbg !4561
  %inc446 = add i16 %286, 1, !dbg !4561
  store i16 %inc446, i16* %thisunit, align 2, !dbg !4561
  %287 = load i16*, i16** %var1, align 8, !dbg !4563
  store i16 0, i16* %287, align 2, !dbg !4564
  store i32 1, i32* %var1units, align 4, !dbg !4565
  br label %for.end477, !dbg !4566

if.end447:                                        ; preds = %if.end440
  %288 = load i16*, i16** %msu1, align 8, !dbg !4567
  %289 = load i16, i16* %288, align 2, !dbg !4568
  %conv448 = zext i16 %289 to i32, !dbg !4569
  %mul449 = mul nsw i32 %conv448, 1000, !dbg !4570
  %290 = load i16*, i16** %msu1, align 8, !dbg !4571
  %add.ptr450 = getelementptr inbounds i16, i16* %290, i64 -1, !dbg !4572
  %291 = load i16, i16* %add.ptr450, align 2, !dbg !4573
  %conv451 = zext i16 %291 to i32, !dbg !4573
  %add452 = add nsw i32 %mul449, %conv451, !dbg !4574
  %292 = load i32, i32* %msu2pair, align 4, !dbg !4575
  %div453 = sdiv i32 %add452, %292, !dbg !4576
  store i32 %div453, i32* %mult, align 4, !dbg !4577
  br label %if.end461, !dbg !4578

if.else454:                                       ; preds = %if.end412
  %293 = load i16*, i16** %msu1, align 8, !dbg !4579
  %294 = load i16, i16* %293, align 2, !dbg !4581
  %conv455 = zext i16 %294 to i32, !dbg !4582
  %mul456 = mul nsw i32 %conv455, 1000, !dbg !4583
  %295 = load i16*, i16** %msu1, align 8, !dbg !4584
  %add.ptr457 = getelementptr inbounds i16, i16* %295, i64 -1, !dbg !4585
  %296 = load i16, i16* %add.ptr457, align 2, !dbg !4586
  %conv458 = zext i16 %296 to i32, !dbg !4586
  %add459 = add nsw i32 %mul456, %conv458, !dbg !4587
  %297 = load i32, i32* %msu2plus, align 4, !dbg !4588
  %div460 = sdiv i32 %add459, %297, !dbg !4589
  store i32 %div460, i32* %mult, align 4, !dbg !4590
  br label %if.end461

if.end461:                                        ; preds = %if.else454, %if.end447
  %298 = load i32, i32* %mult, align 4, !dbg !4591
  %cmp462 = icmp eq i32 %298, 0, !dbg !4593
  br i1 %cmp462, label %if.then464, label %if.end465, !dbg !4594

if.then464:                                       ; preds = %if.end461
  store i32 1, i32* %mult, align 4, !dbg !4595
  br label %if.end465, !dbg !4596

if.end465:                                        ; preds = %if.then464, %if.end461
  %299 = load i16, i16* %thisunit, align 2, !dbg !4597
  %conv466 = zext i16 %299 to i32, !dbg !4597
  %300 = load i32, i32* %mult, align 4, !dbg !4598
  %add467 = add nsw i32 %conv466, %300, !dbg !4599
  %conv468 = trunc i32 %add467 to i16, !dbg !4600
  store i16 %conv468, i16* %thisunit, align 2, !dbg !4601
  %301 = load i32, i32* %var2ulen, align 4, !dbg !4602
  %302 = load i32, i32* %var2units, align 4, !dbg !4603
  %sub469 = sub nsw i32 %301, %302, !dbg !4604
  store i32 %sub469, i32* %shift, align 4, !dbg !4605
  %303 = load i16*, i16** %var1, align 8, !dbg !4606
  %304 = load i32, i32* %shift, align 4, !dbg !4607
  %idxprom470 = sext i32 %304 to i64, !dbg !4606
  %arrayidx471 = getelementptr inbounds i16, i16* %303, i64 %idxprom470, !dbg !4606
  %305 = load i32, i32* %var1units, align 4, !dbg !4608
  %306 = load i32, i32* %shift, align 4, !dbg !4609
  %sub472 = sub nsw i32 %305, %306, !dbg !4610
  %307 = load i16*, i16** %var2, align 8, !dbg !4611
  %308 = load i32, i32* %var2units, align 4, !dbg !4612
  %309 = load i16*, i16** %var1, align 8, !dbg !4613
  %310 = load i32, i32* %shift, align 4, !dbg !4614
  %idxprom473 = sext i32 %310 to i64, !dbg !4613
  %arrayidx474 = getelementptr inbounds i16, i16* %309, i64 %idxprom473, !dbg !4613
  %311 = load i32, i32* %mult, align 4, !dbg !4615
  %sub475 = sub nsw i32 0, %311, !dbg !4616
  %call476 = call i32 @decUnitAddSub(i16* %arrayidx471, i32 %sub472, i16* %307, i32 %308, i32 0, i16* %arrayidx474, i32 %sub475), !dbg !4617
  br label %for.cond397, !dbg !4618, !llvm.loop !4619

for.end477:                                       ; preds = %if.then445, %if.then439, %if.then411
  %312 = load i32, i32* %accunits, align 4, !dbg !4622
  %cmp478 = icmp ne i32 %312, 0, !dbg !4624
  br i1 %cmp478, label %if.then484, label %lor.lhs.false480, !dbg !4625

lor.lhs.false480:                                 ; preds = %for.end477
  %313 = load i16, i16* %thisunit, align 2, !dbg !4626
  %conv481 = zext i16 %313 to i32, !dbg !4626
  %cmp482 = icmp ne i32 %conv481, 0, !dbg !4627
  br i1 %cmp482, label %if.then484, label %if.end507, !dbg !4628

if.then484:                                       ; preds = %lor.lhs.false480, %for.end477
  %314 = load i16, i16* %thisunit, align 2, !dbg !4629
  %315 = load i16*, i16** %accnext, align 8, !dbg !4631
  store i16 %314, i16* %315, align 2, !dbg !4632
  %316 = load i32, i32* %accunits, align 4, !dbg !4633
  %cmp485 = icmp eq i32 %316, 0, !dbg !4635
  br i1 %cmp485, label %if.then487, label %if.else498, !dbg !4636

if.then487:                                       ; preds = %if.then484
  %317 = load i32, i32* %accdigits, align 4, !dbg !4637
  %inc488 = add nsw i32 %317, 1, !dbg !4637
  store i32 %inc488, i32* %accdigits, align 4, !dbg !4637
  store i32* getelementptr inbounds ([10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 1), i32** %pow, align 8, !dbg !4639
  br label %for.cond489, !dbg !4641

for.cond489:                                      ; preds = %for.inc495, %if.then487
  %318 = load i16, i16* %thisunit, align 2, !dbg !4642
  %conv490 = zext i16 %318 to i32, !dbg !4642
  %319 = load i32*, i32** %pow, align 8, !dbg !4644
  %320 = load i32, i32* %319, align 4, !dbg !4645
  %cmp491 = icmp uge i32 %conv490, %320, !dbg !4646
  br i1 %cmp491, label %for.body493, label %for.end497, !dbg !4647

for.body493:                                      ; preds = %for.cond489
  %321 = load i32, i32* %accdigits, align 4, !dbg !4648
  %inc494 = add nsw i32 %321, 1, !dbg !4648
  store i32 %inc494, i32* %accdigits, align 4, !dbg !4648
  br label %for.inc495, !dbg !4649

for.inc495:                                       ; preds = %for.body493
  %322 = load i32*, i32** %pow, align 8, !dbg !4650
  %incdec.ptr496 = getelementptr inbounds i32, i32* %322, i32 1, !dbg !4650
  store i32* %incdec.ptr496, i32** %pow, align 8, !dbg !4650
  br label %for.cond489, !dbg !4651, !llvm.loop !4652

for.end497:                                       ; preds = %for.cond489
  br label %if.end500, !dbg !4654

if.else498:                                       ; preds = %if.then484
  %323 = load i32, i32* %accdigits, align 4, !dbg !4655
  %add499 = add nsw i32 %323, 3, !dbg !4655
  store i32 %add499, i32* %accdigits, align 4, !dbg !4655
  br label %if.end500

if.end500:                                        ; preds = %if.else498, %for.end497
  %324 = load i32, i32* %accunits, align 4, !dbg !4656
  %inc501 = add nsw i32 %324, 1, !dbg !4656
  store i32 %inc501, i32* %accunits, align 4, !dbg !4656
  %325 = load i16*, i16** %accnext, align 8, !dbg !4657
  %incdec.ptr502 = getelementptr inbounds i16, i16* %325, i32 -1, !dbg !4657
  store i16* %incdec.ptr502, i16** %accnext, align 8, !dbg !4657
  %326 = load i32, i32* %accdigits, align 4, !dbg !4658
  %327 = load i32, i32* %reqdigits, align 4, !dbg !4660
  %cmp503 = icmp sgt i32 %326, %327, !dbg !4661
  br i1 %cmp503, label %if.then505, label %if.end506, !dbg !4662

if.then505:                                       ; preds = %if.end500
  br label %for.end539, !dbg !4663

if.end506:                                        ; preds = %if.end500
  br label %if.end507, !dbg !4664

if.end507:                                        ; preds = %if.end506, %lor.lhs.false480
  %328 = load i16*, i16** %var1, align 8, !dbg !4665
  %329 = load i16, i16* %328, align 2, !dbg !4667
  %conv508 = zext i16 %329 to i32, !dbg !4667
  %cmp509 = icmp eq i32 %conv508, 0, !dbg !4668
  br i1 %cmp509, label %land.lhs.true511, label %if.end528, !dbg !4669

land.lhs.true511:                                 ; preds = %if.end507
  %330 = load i32, i32* %var1units, align 4, !dbg !4670
  %cmp512 = icmp eq i32 %330, 1, !dbg !4671
  br i1 %cmp512, label %if.then514, label %if.end528, !dbg !4672

if.then514:                                       ; preds = %land.lhs.true511
  %331 = load i8, i8* %op.addr, align 1, !dbg !4673
  %conv515 = zext i8 %331 to i32, !dbg !4673
  %and516 = and i32 %conv515, 80, !dbg !4676
  %tobool517 = icmp ne i32 %and516, 0, !dbg !4676
  br i1 %tobool517, label %if.then518, label %if.end519, !dbg !4677

if.then518:                                       ; preds = %if.then514
  br label %for.end539, !dbg !4678

if.end519:                                        ; preds = %if.then514
  %332 = load i8, i8* %op.addr, align 1, !dbg !4679
  %conv520 = zext i8 %332 to i32, !dbg !4679
  %and521 = and i32 %conv520, 128, !dbg !4681
  %tobool522 = icmp ne i32 %and521, 0, !dbg !4681
  br i1 %tobool522, label %land.lhs.true523, label %if.end527, !dbg !4682

land.lhs.true523:                                 ; preds = %if.end519
  %333 = load i32, i32* %exponent, align 4, !dbg !4683
  %334 = load i32, i32* %maxexponent, align 4, !dbg !4684
  %cmp524 = icmp sle i32 %333, %334, !dbg !4685
  br i1 %cmp524, label %if.then526, label %if.end527, !dbg !4686

if.then526:                                       ; preds = %land.lhs.true523
  br label %for.end539, !dbg !4687

if.end527:                                        ; preds = %land.lhs.true523, %if.end519
  br label %if.end528, !dbg !4688

if.end528:                                        ; preds = %if.end527, %land.lhs.true511, %if.end507
  %335 = load i32, i32* %exponent, align 4, !dbg !4689
  %cmp529 = icmp eq i32 %335, 0, !dbg !4691
  br i1 %cmp529, label %land.lhs.true531, label %if.end536, !dbg !4692

land.lhs.true531:                                 ; preds = %if.end528
  %336 = load i8, i8* %op.addr, align 1, !dbg !4693
  %conv532 = zext i8 %336 to i32, !dbg !4693
  %and533 = and i32 %conv532, 128, !dbg !4694
  %tobool534 = icmp ne i32 %and533, 0, !dbg !4694
  br i1 %tobool534, label %if.end536, label %if.then535, !dbg !4695

if.then535:                                       ; preds = %land.lhs.true531
  br label %for.end539, !dbg !4696

if.end536:                                        ; preds = %land.lhs.true531, %if.end528
  %337 = load i32, i32* %var2ulen, align 4, !dbg !4697
  %dec537 = add nsw i32 %337, -1, !dbg !4697
  store i32 %dec537, i32* %var2ulen, align 4, !dbg !4697
  %338 = load i32, i32* %exponent, align 4, !dbg !4698
  %sub538 = sub nsw i32 %338, 3, !dbg !4698
  store i32 %sub538, i32* %exponent, align 4, !dbg !4698
  br label %for.cond396, !dbg !4699, !llvm.loop !4700

for.end539:                                       ; preds = %if.then535, %if.then526, %if.then518, %if.then505
  %339 = load i32, i32* %accunits, align 4, !dbg !4703
  %cmp540 = icmp eq i32 %339, 0, !dbg !4705
  br i1 %cmp540, label %if.then542, label %if.else543, !dbg !4706

if.then542:                                       ; preds = %for.end539
  store i32 1, i32* %accunits, align 4, !dbg !4707
  store i32 1, i32* %accdigits, align 4, !dbg !4709
  %340 = load i16*, i16** %accnext, align 8, !dbg !4710
  store i16 0, i16* %340, align 2, !dbg !4711
  br label %if.end545, !dbg !4712

if.else543:                                       ; preds = %for.end539
  %341 = load i16*, i16** %accnext, align 8, !dbg !4713
  %incdec.ptr544 = getelementptr inbounds i16, i16* %341, i32 1, !dbg !4713
  store i16* %incdec.ptr544, i16** %accnext, align 8, !dbg !4713
  br label %if.end545

if.end545:                                        ; preds = %if.else543, %if.then542
  store i32 0, i32* %residue, align 4, !dbg !4714
  %342 = load i8, i8* %op.addr, align 1, !dbg !4715
  %conv546 = zext i8 %342 to i32, !dbg !4715
  %and547 = and i32 %conv546, 128, !dbg !4717
  %tobool548 = icmp ne i32 %and547, 0, !dbg !4717
  br i1 %tobool548, label %if.then549, label %if.else613, !dbg !4718

if.then549:                                       ; preds = %if.end545
  %343 = load i16*, i16** %var1, align 8, !dbg !4719
  %344 = load i16, i16* %343, align 2, !dbg !4722
  %conv550 = zext i16 %344 to i32, !dbg !4722
  %cmp551 = icmp ne i32 %conv550, 0, !dbg !4723
  br i1 %cmp551, label %if.then556, label %lor.lhs.false553, !dbg !4724

lor.lhs.false553:                                 ; preds = %if.then549
  %345 = load i32, i32* %var1units, align 4, !dbg !4725
  %cmp554 = icmp sgt i32 %345, 1, !dbg !4726
  br i1 %cmp554, label %if.then556, label %if.else557, !dbg !4727

if.then556:                                       ; preds = %lor.lhs.false553, %if.then549
  store i32 1, i32* %residue, align 4, !dbg !4728
  br label %if.end612, !dbg !4729

if.else557:                                       ; preds = %lor.lhs.false553
  call void @llvm.dbg.declare(metadata i16* %lsu558, metadata !4730, metadata !DIExpression()), !dbg !4732
  %346 = load i16*, i16** %accnext, align 8, !dbg !4733
  %347 = load i16, i16* %346, align 2, !dbg !4734
  store i16 %347, i16* %lsu558, align 2, !dbg !4732
  %348 = load i16, i16* %lsu558, align 2, !dbg !4735
  %conv559 = zext i16 %348 to i32, !dbg !4735
  %and560 = and i32 %conv559, 1, !dbg !4737
  %tobool561 = icmp ne i32 %and560, 0, !dbg !4737
  br i1 %tobool561, label %if.end611, label %land.lhs.true562, !dbg !4738

land.lhs.true562:                                 ; preds = %if.else557
  %349 = load i16, i16* %lsu558, align 2, !dbg !4739
  %conv563 = zext i16 %349 to i32, !dbg !4739
  %cmp564 = icmp ne i32 %conv563, 0, !dbg !4740
  br i1 %cmp564, label %if.then566, label %if.end611, !dbg !4741

if.then566:                                       ; preds = %land.lhs.true562
  call void @llvm.dbg.declare(metadata i32* %drop, metadata !4742, metadata !DIExpression()), !dbg !4744
  store i32 0, i32* %drop, align 4, !dbg !4744
  br label %for.cond567, !dbg !4745

for.cond567:                                      ; preds = %for.inc590, %if.then566
  %350 = load i32, i32* %exponent, align 4, !dbg !4746
  %351 = load i32, i32* %maxexponent, align 4, !dbg !4751
  %cmp568 = icmp sge i32 %350, %351, !dbg !4752
  br i1 %cmp568, label %if.then570, label %if.end571, !dbg !4753

if.then570:                                       ; preds = %for.cond567
  br label %for.end592, !dbg !4754

if.end571:                                        ; preds = %for.cond567
  %352 = load i16, i16* %lsu558, align 2, !dbg !4755
  %conv572 = zext i16 %352 to i32, !dbg !4755
  %353 = load i16, i16* %lsu558, align 2, !dbg !4757
  %conv573 = zext i16 %353 to i32, !dbg !4757
  %354 = load i32, i32* %drop, align 4, !dbg !4757
  %add574 = add nsw i32 %354, 1, !dbg !4757
  %shr = lshr i32 %conv573, %add574, !dbg !4757
  %355 = load i32, i32* %drop, align 4, !dbg !4757
  %add575 = add nsw i32 %355, 1, !dbg !4757
  %idxprom576 = sext i32 %add575 to i64, !dbg !4757
  %arrayidx577 = getelementptr inbounds [5 x i32], [5 x i32]* @multies, i64 0, i64 %idxprom576, !dbg !4757
  %356 = load i32, i32* %arrayidx577, align 4, !dbg !4757
  %mul578 = mul i32 %shr, %356, !dbg !4757
  %shr579 = lshr i32 %mul578, 17, !dbg !4757
  %357 = load i32, i32* %drop, align 4, !dbg !4758
  %add580 = add nsw i32 %357, 1, !dbg !4759
  %idxprom581 = sext i32 %add580 to i64, !dbg !4760
  %arrayidx582 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom581, !dbg !4760
  %358 = load i32, i32* %arrayidx582, align 4, !dbg !4760
  %mul583 = mul i32 %shr579, %358, !dbg !4761
  %sub584 = sub i32 %conv572, %mul583, !dbg !4762
  %cmp585 = icmp ne i32 %sub584, 0, !dbg !4763
  br i1 %cmp585, label %if.then587, label %if.end588, !dbg !4764

if.then587:                                       ; preds = %if.end571
  br label %for.end592, !dbg !4765

if.end588:                                        ; preds = %if.end571
  %359 = load i32, i32* %exponent, align 4, !dbg !4766
  %inc589 = add nsw i32 %359, 1, !dbg !4766
  store i32 %inc589, i32* %exponent, align 4, !dbg !4766
  br label %for.inc590, !dbg !4767

for.inc590:                                       ; preds = %if.end588
  %360 = load i32, i32* %drop, align 4, !dbg !4768
  %inc591 = add nsw i32 %360, 1, !dbg !4768
  store i32 %inc591, i32* %drop, align 4, !dbg !4768
  br label %for.cond567, !dbg !4769, !llvm.loop !4770

for.end592:                                       ; preds = %if.then587, %if.then570
  %361 = load i32, i32* %drop, align 4, !dbg !4773
  %cmp593 = icmp sgt i32 %361, 0, !dbg !4775
  br i1 %cmp593, label %if.then595, label %if.end610, !dbg !4776

if.then595:                                       ; preds = %for.end592
  %362 = load i16*, i16** %accnext, align 8, !dbg !4777
  %363 = load i32, i32* %accunits, align 4, !dbg !4779
  %364 = load i32, i32* %drop, align 4, !dbg !4780
  %call596 = call i32 @decShiftToLeast(i16* %362, i32 %363, i32 %364), !dbg !4781
  store i32 %call596, i32* %accunits, align 4, !dbg !4782
  %365 = load i16*, i16** %accnext, align 8, !dbg !4783
  %366 = load i32, i32* %accunits, align 4, !dbg !4784
  %call597 = call i32 @decGetDigits(i16* %365, i32 %366), !dbg !4785
  store i32 %call597, i32* %accdigits, align 4, !dbg !4786
  %367 = load i32, i32* %accdigits, align 4, !dbg !4787
  %cmp598 = icmp sle i32 %367, 49, !dbg !4787
  br i1 %cmp598, label %cond.true600, label %cond.false604, !dbg !4787

cond.true600:                                     ; preds = %if.then595
  %368 = load i32, i32* %accdigits, align 4, !dbg !4787
  %idxprom601 = sext i32 %368 to i64, !dbg !4787
  %arrayidx602 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom601, !dbg !4787
  %369 = load i8, i8* %arrayidx602, align 1, !dbg !4787
  %conv603 = zext i8 %369 to i32, !dbg !4787
  br label %cond.end608, !dbg !4787

cond.false604:                                    ; preds = %if.then595
  %370 = load i32, i32* %accdigits, align 4, !dbg !4787
  %add605 = add nsw i32 %370, 3, !dbg !4787
  %sub606 = sub nsw i32 %add605, 1, !dbg !4787
  %div607 = sdiv i32 %sub606, 3, !dbg !4787
  br label %cond.end608, !dbg !4787

cond.end608:                                      ; preds = %cond.false604, %cond.true600
  %cond609 = phi i32 [ %conv603, %cond.true600 ], [ %div607, %cond.false604 ], !dbg !4787
  store i32 %cond609, i32* %accunits, align 4, !dbg !4788
  br label %if.end610, !dbg !4789

if.end610:                                        ; preds = %cond.end608, %for.end592
  br label %if.end611, !dbg !4790

if.end611:                                        ; preds = %if.end610, %land.lhs.true562, %if.else557
  br label %if.end612

if.end612:                                        ; preds = %if.end611, %if.then556
  br label %if.end818, !dbg !4791

if.else613:                                       ; preds = %if.end545
  %371 = load i32, i32* %accdigits, align 4, !dbg !4792
  %372 = load i32, i32* %exponent, align 4, !dbg !4795
  %add614 = add nsw i32 %371, %372, !dbg !4796
  %373 = load i32, i32* %reqdigits, align 4, !dbg !4797
  %cmp615 = icmp sgt i32 %add614, %373, !dbg !4798
  br i1 %cmp615, label %if.then617, label %if.end619, !dbg !4799

if.then617:                                       ; preds = %if.else613
  %374 = load i32*, i32** %status.addr, align 8, !dbg !4800
  %375 = load i32, i32* %374, align 4, !dbg !4802
  %or618 = or i32 %375, 4, !dbg !4802
  store i32 %or618, i32* %374, align 4, !dbg !4802
  br label %do.end, !dbg !4803

if.end619:                                        ; preds = %if.else613
  %376 = load i8, i8* %op.addr, align 1, !dbg !4804
  %conv620 = zext i8 %376 to i32, !dbg !4804
  %and621 = and i32 %conv620, 80, !dbg !4806
  %tobool622 = icmp ne i32 %and621, 0, !dbg !4806
  br i1 %tobool622, label %if.then623, label %if.end817, !dbg !4807

if.then623:                                       ; preds = %if.end619
  call void @llvm.dbg.declare(metadata i32* %postshift, metadata !4808, metadata !DIExpression()), !dbg !4810
  call void @llvm.dbg.declare(metadata i8* %wasodd, metadata !4811, metadata !DIExpression()), !dbg !4812
  store i8 0, i8* %wasodd, align 1, !dbg !4812
  call void @llvm.dbg.declare(metadata i16** %quotlsu, metadata !4813, metadata !DIExpression()), !dbg !4814
  call void @llvm.dbg.declare(metadata i32* %quotdigits, metadata !4815, metadata !DIExpression()), !dbg !4816
  %377 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4817
  %bits624 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %377, i32 0, i32 2, !dbg !4818
  %378 = load i8, i8* %bits624, align 4, !dbg !4818
  store i8 %378, i8* %bits, align 1, !dbg !4819
  %379 = load i16*, i16** %var1, align 8, !dbg !4820
  %380 = load i16, i16* %379, align 2, !dbg !4822
  %conv625 = zext i16 %380 to i32, !dbg !4822
  %cmp626 = icmp eq i32 %conv625, 0, !dbg !4823
  br i1 %cmp626, label %land.lhs.true628, label %if.end645, !dbg !4824

land.lhs.true628:                                 ; preds = %if.then623
  %381 = load i32, i32* %var1units, align 4, !dbg !4825
  %cmp629 = icmp eq i32 %381, 1, !dbg !4826
  br i1 %cmp629, label %if.then631, label %if.end645, !dbg !4827

if.then631:                                       ; preds = %land.lhs.true628
  call void @llvm.dbg.declare(metadata i32* %exp, metadata !4828, metadata !DIExpression()), !dbg !4830
  %382 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4831
  %exponent632 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %382, i32 0, i32 1, !dbg !4832
  %383 = load i32, i32* %exponent632, align 4, !dbg !4832
  store i32 %383, i32* %exp, align 4, !dbg !4830
  %384 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !4833
  %exponent633 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %384, i32 0, i32 1, !dbg !4835
  %385 = load i32, i32* %exponent633, align 4, !dbg !4835
  %386 = load i32, i32* %exp, align 4, !dbg !4836
  %cmp634 = icmp slt i32 %385, %386, !dbg !4837
  br i1 %cmp634, label %if.then636, label %if.end638, !dbg !4838

if.then636:                                       ; preds = %if.then631
  %387 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !4839
  %exponent637 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %387, i32 0, i32 1, !dbg !4840
  %388 = load i32, i32* %exponent637, align 4, !dbg !4840
  store i32 %388, i32* %exp, align 4, !dbg !4841
  br label %if.end638, !dbg !4842

if.end638:                                        ; preds = %if.then636, %if.then631
  %389 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4843
  %call639 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %389), !dbg !4844
  %390 = load i32, i32* %exp, align 4, !dbg !4845
  %391 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4846
  %exponent640 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %391, i32 0, i32 1, !dbg !4847
  store i32 %390, i32* %exponent640, align 4, !dbg !4848
  %392 = load i8, i8* %bits, align 1, !dbg !4849
  %conv641 = zext i8 %392 to i32, !dbg !4849
  %and642 = and i32 %conv641, 128, !dbg !4850
  %conv643 = trunc i32 %and642 to i8, !dbg !4851
  %393 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4852
  %bits644 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %393, i32 0, i32 2, !dbg !4853
  store i8 %conv643, i8* %bits644, align 4, !dbg !4854
  %394 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !4855
  %395 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !4855
  %396 = load i32*, i32** %status.addr, align 8, !dbg !4855
  call void @decFinalize(%struct.decNumber* %394, %struct.decContext* %395, i32* %residue, i32* %396), !dbg !4855
  br label %do.end, !dbg !4856

if.end645:                                        ; preds = %land.lhs.true628, %if.then623
  %397 = load i16*, i16** %accnext, align 8, !dbg !4857
  %398 = load i16, i16* %397, align 2, !dbg !4859
  %conv646 = zext i16 %398 to i32, !dbg !4859
  %and647 = and i32 %conv646, 1, !dbg !4860
  %tobool648 = icmp ne i32 %and647, 0, !dbg !4860
  br i1 %tobool648, label %if.then649, label %if.end650, !dbg !4861

if.then649:                                       ; preds = %if.end645
  store i8 1, i8* %wasodd, align 1, !dbg !4862
  br label %if.end650, !dbg !4863

if.end650:                                        ; preds = %if.then649, %if.end645
  %399 = load i16*, i16** %accnext, align 8, !dbg !4864
  store i16* %399, i16** %quotlsu, align 8, !dbg !4865
  %400 = load i32, i32* %accdigits, align 4, !dbg !4866
  store i32 %400, i32* %quotdigits, align 4, !dbg !4867
  %401 = load i32, i32* %var1initpad, align 4, !dbg !4868
  %402 = load i32, i32* %exponent, align 4, !dbg !4869
  %add651 = add nsw i32 %401, %402, !dbg !4870
  %403 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4871
  %exponent652 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %403, i32 0, i32 1, !dbg !4872
  %404 = load i32, i32* %exponent652, align 4, !dbg !4872
  %sub653 = sub nsw i32 %add651, %404, !dbg !4873
  %405 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !4874
  %exponent654 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %405, i32 0, i32 1, !dbg !4875
  %406 = load i32, i32* %exponent654, align 4, !dbg !4875
  %add655 = add nsw i32 %sub653, %406, !dbg !4876
  store i32 %add655, i32* %postshift, align 4, !dbg !4877
  %407 = load i32, i32* %var1initpad, align 4, !dbg !4878
  %408 = load i32, i32* %postshift, align 4, !dbg !4880
  %cmp656 = icmp slt i32 %407, %408, !dbg !4881
  br i1 %cmp656, label %if.then658, label %if.end659, !dbg !4882

if.then658:                                       ; preds = %if.end650
  %409 = load i32, i32* %var1initpad, align 4, !dbg !4883
  store i32 %409, i32* %postshift, align 4, !dbg !4884
  br label %if.end659, !dbg !4885

if.end659:                                        ; preds = %if.then658, %if.end650
  %410 = load i16*, i16** %var1, align 8, !dbg !4886
  %411 = load i32, i32* %var1units, align 4, !dbg !4887
  %412 = load i32, i32* %postshift, align 4, !dbg !4888
  %call660 = call i32 @decShiftToLeast(i16* %410, i32 %411, i32 %412), !dbg !4889
  store i32 %call660, i32* %var1units, align 4, !dbg !4890
  %413 = load i16*, i16** %var1, align 8, !dbg !4891
  store i16* %413, i16** %accnext, align 8, !dbg !4892
  %414 = load i16*, i16** %var1, align 8, !dbg !4893
  %415 = load i32, i32* %var1units, align 4, !dbg !4894
  %call661 = call i32 @decGetDigits(i16* %414, i32 %415), !dbg !4895
  store i32 %call661, i32* %accdigits, align 4, !dbg !4896
  %416 = load i32, i32* %accdigits, align 4, !dbg !4897
  %cmp662 = icmp sle i32 %416, 49, !dbg !4897
  br i1 %cmp662, label %cond.true664, label %cond.false668, !dbg !4897

cond.true664:                                     ; preds = %if.end659
  %417 = load i32, i32* %accdigits, align 4, !dbg !4897
  %idxprom665 = sext i32 %417 to i64, !dbg !4897
  %arrayidx666 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom665, !dbg !4897
  %418 = load i8, i8* %arrayidx666, align 1, !dbg !4897
  %conv667 = zext i8 %418 to i32, !dbg !4897
  br label %cond.end672, !dbg !4897

cond.false668:                                    ; preds = %if.end659
  %419 = load i32, i32* %accdigits, align 4, !dbg !4897
  %add669 = add nsw i32 %419, 3, !dbg !4897
  %sub670 = sub nsw i32 %add669, 1, !dbg !4897
  %div671 = sdiv i32 %sub670, 3, !dbg !4897
  br label %cond.end672, !dbg !4897

cond.end672:                                      ; preds = %cond.false668, %cond.true664
  %cond673 = phi i32 [ %conv667, %cond.true664 ], [ %div671, %cond.false668 ], !dbg !4897
  store i32 %cond673, i32* %accunits, align 4, !dbg !4898
  %420 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !4899
  %exponent674 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %420, i32 0, i32 1, !dbg !4900
  %421 = load i32, i32* %exponent674, align 4, !dbg !4900
  store i32 %421, i32* %exponent, align 4, !dbg !4901
  %422 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !4902
  %exponent675 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %422, i32 0, i32 1, !dbg !4904
  %423 = load i32, i32* %exponent675, align 4, !dbg !4904
  %424 = load i32, i32* %exponent, align 4, !dbg !4905
  %cmp676 = icmp slt i32 %423, %424, !dbg !4906
  br i1 %cmp676, label %if.then678, label %if.end680, !dbg !4907

if.then678:                                       ; preds = %cond.end672
  %425 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !4908
  %exponent679 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %425, i32 0, i32 1, !dbg !4909
  %426 = load i32, i32* %exponent679, align 4, !dbg !4909
  store i32 %426, i32* %exponent, align 4, !dbg !4910
  br label %if.end680, !dbg !4911

if.end680:                                        ; preds = %if.then678, %cond.end672
  %427 = load i8, i8* %op.addr, align 1, !dbg !4912
  %conv681 = zext i8 %427 to i32, !dbg !4912
  %and682 = and i32 %conv681, 16, !dbg !4914
  %tobool683 = icmp ne i32 %and682, 0, !dbg !4914
  br i1 %tobool683, label %if.then684, label %if.end816, !dbg !4915

if.then684:                                       ; preds = %if.end680
  call void @llvm.dbg.declare(metadata i32* %compare, metadata !4916, metadata !DIExpression()), !dbg !4918
  call void @llvm.dbg.declare(metadata i32* %tarunits, metadata !4919, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.declare(metadata i16** %up, metadata !4921, metadata !DIExpression()), !dbg !4922
  %428 = load i16*, i16** %accnext, align 8, !dbg !4923
  %429 = load i32, i32* %accunits, align 4, !dbg !4924
  %430 = load i16*, i16** %accnext, align 8, !dbg !4925
  %431 = load i32, i32* %accunits, align 4, !dbg !4926
  %432 = load i16*, i16** %accnext, align 8, !dbg !4927
  %call685 = call i32 @decUnitAddSub(i16* %428, i32 %429, i16* %430, i32 %431, i32 0, i16* %432, i32 1), !dbg !4928
  store i32 %call685, i32* %tarunits, align 4, !dbg !4929
  %433 = load i16*, i16** %accnext, align 8, !dbg !4930
  %434 = load i32, i32* %tarunits, align 4, !dbg !4931
  %435 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !4932
  %lsu686 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %435, i32 0, i32 3, !dbg !4933
  %arraydecay687 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu686, i64 0, i64 0, !dbg !4932
  %436 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !4934
  %digits688 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %436, i32 0, i32 0, !dbg !4934
  %437 = load i32, i32* %digits688, align 4, !dbg !4934
  %cmp689 = icmp sle i32 %437, 49, !dbg !4934
  br i1 %cmp689, label %cond.true691, label %cond.false696, !dbg !4934

cond.true691:                                     ; preds = %if.then684
  %438 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !4934
  %digits692 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %438, i32 0, i32 0, !dbg !4934
  %439 = load i32, i32* %digits692, align 4, !dbg !4934
  %idxprom693 = sext i32 %439 to i64, !dbg !4934
  %arrayidx694 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom693, !dbg !4934
  %440 = load i8, i8* %arrayidx694, align 1, !dbg !4934
  %conv695 = zext i8 %440 to i32, !dbg !4934
  br label %cond.end701, !dbg !4934

cond.false696:                                    ; preds = %if.then684
  %441 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !4934
  %digits697 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %441, i32 0, i32 0, !dbg !4934
  %442 = load i32, i32* %digits697, align 4, !dbg !4934
  %add698 = add nsw i32 %442, 3, !dbg !4934
  %sub699 = sub nsw i32 %add698, 1, !dbg !4934
  %div700 = sdiv i32 %sub699, 3, !dbg !4934
  br label %cond.end701, !dbg !4934

cond.end701:                                      ; preds = %cond.false696, %cond.true691
  %cond702 = phi i32 [ %conv695, %cond.true691 ], [ %div700, %cond.false696 ], !dbg !4934
  %443 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !4935
  %exponent703 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %443, i32 0, i32 1, !dbg !4936
  %444 = load i32, i32* %exponent703, align 4, !dbg !4936
  %445 = load i32, i32* %exponent, align 4, !dbg !4937
  %sub704 = sub nsw i32 %444, %445, !dbg !4938
  %call705 = call i32 @decUnitCompare(i16* %433, i32 %434, i16* %arraydecay687, i32 %cond702, i32 %sub704), !dbg !4939
  store i32 %call705, i32* %compare, align 4, !dbg !4940
  %446 = load i32, i32* %compare, align 4, !dbg !4941
  %cmp706 = icmp eq i32 %446, -2147483648, !dbg !4943
  br i1 %cmp706, label %if.then708, label %if.end710, !dbg !4944

if.then708:                                       ; preds = %cond.end701
  %447 = load i32*, i32** %status.addr, align 8, !dbg !4945
  %448 = load i32, i32* %447, align 4, !dbg !4947
  %or709 = or i32 %448, 16, !dbg !4947
  store i32 %or709, i32* %447, align 4, !dbg !4947
  br label %do.end, !dbg !4948

if.end710:                                        ; preds = %cond.end701
  %449 = load i16*, i16** %accnext, align 8, !dbg !4949
  store i16* %449, i16** %up, align 8, !dbg !4951
  br label %for.cond711, !dbg !4952

for.cond711:                                      ; preds = %for.inc729, %if.end710
  %450 = load i16*, i16** %up, align 8, !dbg !4953
  %451 = load i16*, i16** %accnext, align 8, !dbg !4955
  %452 = load i32, i32* %tarunits, align 4, !dbg !4956
  %idx.ext712 = sext i32 %452 to i64, !dbg !4957
  %add.ptr713 = getelementptr inbounds i16, i16* %451, i64 %idx.ext712, !dbg !4957
  %cmp714 = icmp ult i16* %450, %add.ptr713, !dbg !4958
  br i1 %cmp714, label %for.body716, label %for.end731, !dbg !4959

for.body716:                                      ; preds = %for.cond711
  call void @llvm.dbg.declare(metadata i32* %half, metadata !4960, metadata !DIExpression()), !dbg !4962
  %453 = load i16*, i16** %up, align 8, !dbg !4963
  %454 = load i16, i16* %453, align 2, !dbg !4964
  %conv717 = zext i16 %454 to i32, !dbg !4964
  %and718 = and i32 %conv717, 1, !dbg !4965
  store i32 %and718, i32* %half, align 4, !dbg !4966
  %455 = load i16*, i16** %up, align 8, !dbg !4967
  %456 = load i16, i16* %455, align 2, !dbg !4968
  %conv719 = zext i16 %456 to i32, !dbg !4968
  %div720 = sdiv i32 %conv719, 2, !dbg !4968
  %conv721 = trunc i32 %div720 to i16, !dbg !4968
  store i16 %conv721, i16* %455, align 2, !dbg !4968
  %457 = load i32, i32* %half, align 4, !dbg !4969
  %tobool722 = icmp ne i32 %457, 0, !dbg !4969
  br i1 %tobool722, label %if.end724, label %if.then723, !dbg !4971

if.then723:                                       ; preds = %for.body716
  br label %for.inc729, !dbg !4972

if.end724:                                        ; preds = %for.body716
  %458 = load i16*, i16** %up, align 8, !dbg !4973
  %add.ptr725 = getelementptr inbounds i16, i16* %458, i64 -1, !dbg !4974
  %459 = load i16, i16* %add.ptr725, align 2, !dbg !4975
  %conv726 = zext i16 %459 to i32, !dbg !4975
  %add727 = add nsw i32 %conv726, 500, !dbg !4975
  %conv728 = trunc i32 %add727 to i16, !dbg !4975
  store i16 %conv728, i16* %add.ptr725, align 2, !dbg !4975
  br label %for.inc729, !dbg !4976

for.inc729:                                       ; preds = %if.end724, %if.then723
  %460 = load i16*, i16** %up, align 8, !dbg !4977
  %incdec.ptr730 = getelementptr inbounds i16, i16* %460, i32 1, !dbg !4977
  store i16* %incdec.ptr730, i16** %up, align 8, !dbg !4977
  br label %for.cond711, !dbg !4978, !llvm.loop !4979

for.end731:                                       ; preds = %for.cond711
  %461 = load i32, i32* %compare, align 4, !dbg !4981
  %cmp732 = icmp sgt i32 %461, 0, !dbg !4983
  br i1 %cmp732, label %if.then740, label %lor.lhs.false734, !dbg !4984

lor.lhs.false734:                                 ; preds = %for.end731
  %462 = load i32, i32* %compare, align 4, !dbg !4985
  %cmp735 = icmp eq i32 %462, 0, !dbg !4986
  br i1 %cmp735, label %land.lhs.true737, label %if.end815, !dbg !4987

land.lhs.true737:                                 ; preds = %lor.lhs.false734
  %463 = load i8, i8* %wasodd, align 1, !dbg !4988
  %conv738 = zext i8 %463 to i32, !dbg !4988
  %tobool739 = icmp ne i32 %conv738, 0, !dbg !4988
  br i1 %tobool739, label %if.then740, label %if.end815, !dbg !4989

if.then740:                                       ; preds = %land.lhs.true737, %for.end731
  call void @llvm.dbg.declare(metadata i32* %exp741, metadata !4990, metadata !DIExpression()), !dbg !4992
  call void @llvm.dbg.declare(metadata i32* %expunits, metadata !4993, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.declare(metadata i32* %exprem, metadata !4995, metadata !DIExpression()), !dbg !4996
  call void @llvm.dbg.declare(metadata i8* %allnines, metadata !4997, metadata !DIExpression()), !dbg !4998
  store i8 0, i8* %allnines, align 1, !dbg !4998
  %464 = load i32, i32* %quotdigits, align 4, !dbg !4999
  %465 = load i32, i32* %reqdigits, align 4, !dbg !5001
  %cmp742 = icmp eq i32 %464, %465, !dbg !5002
  br i1 %cmp742, label %if.then744, label %if.end768, !dbg !5003

if.then744:                                       ; preds = %if.then740
  %466 = load i16*, i16** %quotlsu, align 8, !dbg !5004
  store i16* %466, i16** %up, align 8, !dbg !5007
  br label %for.cond745, !dbg !5008

for.cond745:                                      ; preds = %for.inc765, %if.then744
  %467 = load i32, i32* %quotdigits, align 4, !dbg !5009
  %cmp746 = icmp sgt i32 %467, 3, !dbg !5013
  br i1 %cmp746, label %if.then748, label %if.else754, !dbg !5014

if.then748:                                       ; preds = %for.cond745
  %468 = load i16*, i16** %up, align 8, !dbg !5015
  %469 = load i16, i16* %468, align 2, !dbg !5018
  %conv749 = zext i16 %469 to i32, !dbg !5018
  %cmp750 = icmp ne i32 %conv749, 999, !dbg !5019
  br i1 %cmp750, label %if.then752, label %if.end753, !dbg !5020

if.then752:                                       ; preds = %if.then748
  br label %for.end767, !dbg !5021

if.end753:                                        ; preds = %if.then748
  br label %if.end763, !dbg !5022

if.else754:                                       ; preds = %for.cond745
  %470 = load i16*, i16** %up, align 8, !dbg !5023
  %471 = load i16, i16* %470, align 2, !dbg !5026
  %conv755 = zext i16 %471 to i32, !dbg !5026
  %472 = load i32, i32* %quotdigits, align 4, !dbg !5027
  %idxprom756 = sext i32 %472 to i64, !dbg !5028
  %arrayidx757 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom756, !dbg !5028
  %473 = load i32, i32* %arrayidx757, align 4, !dbg !5028
  %sub758 = sub i32 %473, 1, !dbg !5029
  %cmp759 = icmp eq i32 %conv755, %sub758, !dbg !5030
  br i1 %cmp759, label %if.then761, label %if.end762, !dbg !5031

if.then761:                                       ; preds = %if.else754
  store i8 1, i8* %allnines, align 1, !dbg !5032
  br label %if.end762, !dbg !5033

if.end762:                                        ; preds = %if.then761, %if.else754
  br label %for.end767, !dbg !5034

if.end763:                                        ; preds = %if.end753
  %474 = load i32, i32* %quotdigits, align 4, !dbg !5035
  %sub764 = sub nsw i32 %474, 3, !dbg !5035
  store i32 %sub764, i32* %quotdigits, align 4, !dbg !5035
  br label %for.inc765, !dbg !5036

for.inc765:                                       ; preds = %if.end763
  %475 = load i16*, i16** %up, align 8, !dbg !5037
  %incdec.ptr766 = getelementptr inbounds i16, i16* %475, i32 1, !dbg !5037
  store i16* %incdec.ptr766, i16** %up, align 8, !dbg !5037
  br label %for.cond745, !dbg !5038, !llvm.loop !5039

for.end767:                                       ; preds = %if.end762, %if.then752
  br label %if.end768, !dbg !5042

if.end768:                                        ; preds = %for.end767, %if.then740
  %476 = load i8, i8* %allnines, align 1, !dbg !5043
  %tobool769 = icmp ne i8 %476, 0, !dbg !5043
  br i1 %tobool769, label %if.then770, label %if.end772, !dbg !5045

if.then770:                                       ; preds = %if.end768
  %477 = load i32*, i32** %status.addr, align 8, !dbg !5046
  %478 = load i32, i32* %477, align 4, !dbg !5048
  %or771 = or i32 %478, 4, !dbg !5048
  store i32 %or771, i32* %477, align 4, !dbg !5048
  br label %do.end, !dbg !5049

if.end772:                                        ; preds = %if.end768
  %479 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5050
  %exponent773 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %479, i32 0, i32 1, !dbg !5051
  %480 = load i32, i32* %exponent773, align 4, !dbg !5051
  %481 = load i32, i32* %exponent, align 4, !dbg !5052
  %sub774 = sub nsw i32 %480, %481, !dbg !5053
  store i32 %sub774, i32* %exp741, align 4, !dbg !5054
  %482 = load i32, i32* %exp741, align 4, !dbg !5055
  %div775 = sdiv i32 %482, 3, !dbg !5056
  store i32 %div775, i32* %expunits, align 4, !dbg !5057
  %483 = load i32, i32* %exp741, align 4, !dbg !5058
  %rem776 = srem i32 %483, 3, !dbg !5059
  store i32 %rem776, i32* %exprem, align 4, !dbg !5060
  %484 = load i16*, i16** %accnext, align 8, !dbg !5061
  %485 = load i32, i32* %accunits, align 4, !dbg !5062
  %486 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5063
  %lsu777 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %486, i32 0, i32 3, !dbg !5064
  %arraydecay778 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu777, i64 0, i64 0, !dbg !5063
  %487 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5065
  %digits779 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %487, i32 0, i32 0, !dbg !5065
  %488 = load i32, i32* %digits779, align 4, !dbg !5065
  %cmp780 = icmp sle i32 %488, 49, !dbg !5065
  br i1 %cmp780, label %cond.true782, label %cond.false787, !dbg !5065

cond.true782:                                     ; preds = %if.end772
  %489 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5065
  %digits783 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %489, i32 0, i32 0, !dbg !5065
  %490 = load i32, i32* %digits783, align 4, !dbg !5065
  %idxprom784 = sext i32 %490 to i64, !dbg !5065
  %arrayidx785 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom784, !dbg !5065
  %491 = load i8, i8* %arrayidx785, align 1, !dbg !5065
  %conv786 = zext i8 %491 to i32, !dbg !5065
  br label %cond.end792, !dbg !5065

cond.false787:                                    ; preds = %if.end772
  %492 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5065
  %digits788 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %492, i32 0, i32 0, !dbg !5065
  %493 = load i32, i32* %digits788, align 4, !dbg !5065
  %add789 = add nsw i32 %493, 3, !dbg !5065
  %sub790 = sub nsw i32 %add789, 1, !dbg !5065
  %div791 = sdiv i32 %sub790, 3, !dbg !5065
  br label %cond.end792, !dbg !5065

cond.end792:                                      ; preds = %cond.false787, %cond.true782
  %cond793 = phi i32 [ %conv786, %cond.true782 ], [ %div791, %cond.false787 ], !dbg !5065
  %494 = load i32, i32* %expunits, align 4, !dbg !5066
  %495 = load i16*, i16** %accnext, align 8, !dbg !5067
  %496 = load i32, i32* %exprem, align 4, !dbg !5068
  %idxprom794 = sext i32 %496 to i64, !dbg !5069
  %arrayidx795 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom794, !dbg !5069
  %497 = load i32, i32* %arrayidx795, align 4, !dbg !5069
  %sub796 = sub nsw i32 0, %497, !dbg !5070
  %call797 = call i32 @decUnitAddSub(i16* %484, i32 %485, i16* %arraydecay778, i32 %cond793, i32 %494, i16* %495, i32 %sub796), !dbg !5071
  %sub798 = sub nsw i32 0, %call797, !dbg !5072
  store i32 %sub798, i32* %accunits, align 4, !dbg !5073
  %498 = load i16*, i16** %accnext, align 8, !dbg !5074
  %499 = load i32, i32* %accunits, align 4, !dbg !5075
  %call799 = call i32 @decGetDigits(i16* %498, i32 %499), !dbg !5076
  store i32 %call799, i32* %accdigits, align 4, !dbg !5077
  %500 = load i32, i32* %accdigits, align 4, !dbg !5078
  %cmp800 = icmp sle i32 %500, 49, !dbg !5078
  br i1 %cmp800, label %cond.true802, label %cond.false806, !dbg !5078

cond.true802:                                     ; preds = %cond.end792
  %501 = load i32, i32* %accdigits, align 4, !dbg !5078
  %idxprom803 = sext i32 %501 to i64, !dbg !5078
  %arrayidx804 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom803, !dbg !5078
  %502 = load i8, i8* %arrayidx804, align 1, !dbg !5078
  %conv805 = zext i8 %502 to i32, !dbg !5078
  br label %cond.end810, !dbg !5078

cond.false806:                                    ; preds = %cond.end792
  %503 = load i32, i32* %accdigits, align 4, !dbg !5078
  %add807 = add nsw i32 %503, 3, !dbg !5078
  %sub808 = sub nsw i32 %add807, 1, !dbg !5078
  %div809 = sdiv i32 %sub808, 3, !dbg !5078
  br label %cond.end810, !dbg !5078

cond.end810:                                      ; preds = %cond.false806, %cond.true802
  %cond811 = phi i32 [ %conv805, %cond.true802 ], [ %div809, %cond.false806 ], !dbg !5078
  store i32 %cond811, i32* %accunits, align 4, !dbg !5079
  %504 = load i8, i8* %bits, align 1, !dbg !5080
  %conv812 = zext i8 %504 to i32, !dbg !5080
  %xor813 = xor i32 %conv812, 128, !dbg !5080
  %conv814 = trunc i32 %xor813 to i8, !dbg !5080
  store i8 %conv814, i8* %bits, align 1, !dbg !5080
  br label %if.end815, !dbg !5081

if.end815:                                        ; preds = %cond.end810, %land.lhs.true737, %lor.lhs.false734
  br label %if.end816, !dbg !5082

if.end816:                                        ; preds = %if.end815, %if.end680
  br label %if.end817, !dbg !5083

if.end817:                                        ; preds = %if.end816, %if.end619
  br label %if.end818

if.end818:                                        ; preds = %if.end817, %if.end612
  %505 = load i32, i32* %exponent, align 4, !dbg !5084
  %506 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5085
  %exponent819 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %506, i32 0, i32 1, !dbg !5086
  store i32 %505, i32* %exponent819, align 4, !dbg !5087
  %507 = load i8, i8* %bits, align 1, !dbg !5088
  %conv820 = zext i8 %507 to i32, !dbg !5088
  %and821 = and i32 %conv820, 128, !dbg !5089
  %conv822 = trunc i32 %and821 to i8, !dbg !5090
  %508 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5091
  %bits823 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %508, i32 0, i32 2, !dbg !5092
  store i8 %conv822, i8* %bits823, align 4, !dbg !5093
  %509 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5094
  %510 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !5095
  %511 = load i16*, i16** %accnext, align 8, !dbg !5096
  %512 = load i32, i32* %accdigits, align 4, !dbg !5097
  %513 = load i32*, i32** %status.addr, align 8, !dbg !5098
  call void @decSetCoeff(%struct.decNumber* %509, %struct.decContext* %510, i16* %511, i32 %512, i32* %residue, i32* %513), !dbg !5099
  %514 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5100
  %515 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !5100
  %516 = load i32*, i32** %status.addr, align 8, !dbg !5100
  call void @decFinalize(%struct.decNumber* %514, %struct.decContext* %515, i32* %residue, i32* %516), !dbg !5100
  br label %do.end, !dbg !5101

do.end:                                           ; preds = %if.end818, %if.then770, %if.then708, %if.end638, %if.then617, %if.then247, %if.then204, %if.then183, %if.then168, %if.end149, %if.end104, %if.end56, %if.end35, %if.then33, %if.then19
  %517 = load i16*, i16** %varalloc, align 8, !dbg !5102
  %cmp824 = icmp ne i16* %517, null, !dbg !5104
  br i1 %cmp824, label %if.then826, label %if.end827, !dbg !5105

if.then826:                                       ; preds = %do.end
  %518 = load i16*, i16** %varalloc, align 8, !dbg !5106
  %519 = bitcast i16* %518 to i8*, !dbg !5106
  call void @free(i8* %519) #6, !dbg !5107
  br label %if.end827, !dbg !5107

if.end827:                                        ; preds = %if.then826, %do.end
  %520 = load i16*, i16** %allocacc, align 8, !dbg !5108
  %cmp828 = icmp ne i16* %520, null, !dbg !5110
  br i1 %cmp828, label %if.then830, label %if.end831, !dbg !5111

if.then830:                                       ; preds = %if.end827
  %521 = load i16*, i16** %allocacc, align 8, !dbg !5112
  %522 = bitcast i16* %521 to i8*, !dbg !5112
  call void @free(i8* %522) #6, !dbg !5113
  br label %if.end831, !dbg !5113

if.end831:                                        ; preds = %if.then830, %if.end827
  %523 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5114
  ret %struct.decNumber* %523, !dbg !5115
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberDivideInteger(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !5116 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !5117, metadata !DIExpression()), !dbg !5118
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !5119, metadata !DIExpression()), !dbg !5120
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !5121, metadata !DIExpression()), !dbg !5122
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !5123, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5125, metadata !DIExpression()), !dbg !5126
  store i32 0, i32* %status, align 4, !dbg !5126
  %0 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5127
  %1 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !5128
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5129
  %3 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !5130
  %call = call %struct.decNumber* @decDivideOp(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext 32, i32* %status), !dbg !5131
  %4 = load i32, i32* %status, align 4, !dbg !5132
  %cmp = icmp ne i32 %4, 0, !dbg !5134
  br i1 %cmp, label %if.then, label %if.end, !dbg !5135

if.then:                                          ; preds = %entry
  %5 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5136
  %6 = load i32, i32* %status, align 4, !dbg !5137
  %7 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !5138
  call void @decStatus(%struct.decNumber* %5, i32 %6, %struct.decContext* %7), !dbg !5139
  br label %if.end, !dbg !5139

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5140
  ret %struct.decNumber* %8, !dbg !5141
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberExp(%struct.decNumber* %res, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !5142 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !5143, metadata !DIExpression()), !dbg !5144
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !5145, metadata !DIExpression()), !dbg !5146
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !5147, metadata !DIExpression()), !dbg !5148
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5149, metadata !DIExpression()), !dbg !5150
  store i32 0, i32* %status, align 4, !dbg !5150
  %0 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5151
  %1 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !5153
  %call = call i32 @decCheckMath(%struct.decNumber* %0, %struct.decContext* %1, i32* %status), !dbg !5154
  %tobool = icmp ne i32 %call, 0, !dbg !5154
  br i1 %tobool, label %if.end, label %if.then, !dbg !5155

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !5156

do.body:                                          ; preds = %if.then
  %2 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5157
  %3 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5159
  %4 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !5160
  %call1 = call %struct.decNumber* @decExpOp(%struct.decNumber* %2, %struct.decNumber* %3, %struct.decContext* %4, i32* %status), !dbg !5161
  br label %do.end, !dbg !5162

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !5162

if.end:                                           ; preds = %do.end, %entry
  %5 = load i32, i32* %status, align 4, !dbg !5163
  %cmp = icmp ne i32 %5, 0, !dbg !5165
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !5166

if.then2:                                         ; preds = %if.end
  %6 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5167
  %7 = load i32, i32* %status, align 4, !dbg !5168
  %8 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !5169
  call void @decStatus(%struct.decNumber* %6, i32 %7, %struct.decContext* %8), !dbg !5170
  br label %if.end3, !dbg !5170

if.end3:                                          ; preds = %if.then2, %if.end
  %9 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5171
  ret %struct.decNumber* %9, !dbg !5172
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @decCheckMath(%struct.decNumber* %rhs, %struct.decContext* %set, i32* %status) #0 !dbg !5173 {
entry:
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status.addr = alloca i32*, align 8
  %save = alloca i32, align 4
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !5176, metadata !DIExpression()), !dbg !5177
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !5178, metadata !DIExpression()), !dbg !5179
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !5180, metadata !DIExpression()), !dbg !5181
  call void @llvm.dbg.declare(metadata i32* %save, metadata !5182, metadata !DIExpression()), !dbg !5183
  %0 = load i32*, i32** %status.addr, align 8, !dbg !5184
  %1 = load i32, i32* %0, align 4, !dbg !5185
  store i32 %1, i32* %save, align 4, !dbg !5183
  %2 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !5186
  %digits = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i32 0, i32 0, !dbg !5188
  %3 = load i32, i32* %digits, align 4, !dbg !5188
  %cmp = icmp sgt i32 %3, 999999, !dbg !5189
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5190

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !5191
  %emax = getelementptr inbounds %struct.decContext, %struct.decContext* %4, i32 0, i32 1, !dbg !5192
  %5 = load i32, i32* %emax, align 4, !dbg !5192
  %cmp1 = icmp sgt i32 %5, 999999, !dbg !5193
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !5194

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %6 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !5195
  %emin = getelementptr inbounds %struct.decContext, %struct.decContext* %6, i32 0, i32 2, !dbg !5196
  %7 = load i32, i32* %emin, align 4, !dbg !5196
  %sub = sub nsw i32 0, %7, !dbg !5197
  %cmp3 = icmp sgt i32 %sub, 999999, !dbg !5198
  br i1 %cmp3, label %if.then, label %if.else, !dbg !5199

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  %8 = load i32*, i32** %status.addr, align 8, !dbg !5200
  %9 = load i32, i32* %8, align 4, !dbg !5201
  %or = or i32 %9, 64, !dbg !5201
  store i32 %or, i32* %8, align 4, !dbg !5201
  br label %if.end26, !dbg !5202

if.else:                                          ; preds = %lor.lhs.false2
  %10 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5203
  %digits4 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %10, i32 0, i32 0, !dbg !5205
  %11 = load i32, i32* %digits4, align 4, !dbg !5205
  %cmp5 = icmp sgt i32 %11, 999999, !dbg !5206
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false6, !dbg !5207

lor.lhs.false6:                                   ; preds = %if.else
  %12 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5208
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %12, i32 0, i32 1, !dbg !5209
  %13 = load i32, i32* %exponent, align 4, !dbg !5209
  %14 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5210
  %digits7 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %14, i32 0, i32 0, !dbg !5211
  %15 = load i32, i32* %digits7, align 4, !dbg !5211
  %add = add nsw i32 %13, %15, !dbg !5212
  %cmp8 = icmp sgt i32 %add, 1000000, !dbg !5213
  br i1 %cmp8, label %land.lhs.true, label %lor.lhs.false9, !dbg !5214

lor.lhs.false9:                                   ; preds = %lor.lhs.false6
  %16 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5215
  %exponent10 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %16, i32 0, i32 1, !dbg !5216
  %17 = load i32, i32* %exponent10, align 4, !dbg !5216
  %18 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5217
  %digits11 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %18, i32 0, i32 0, !dbg !5218
  %19 = load i32, i32* %digits11, align 4, !dbg !5218
  %add12 = add nsw i32 %17, %19, !dbg !5219
  %cmp13 = icmp slt i32 %add12, -1999996, !dbg !5220
  br i1 %cmp13, label %land.lhs.true, label %if.end, !dbg !5221

land.lhs.true:                                    ; preds = %lor.lhs.false9, %lor.lhs.false6, %if.else
  %20 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5222
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %20, i32 0, i32 3, !dbg !5222
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !5222
  %21 = load i16, i16* %arraydecay, align 2, !dbg !5222
  %conv = zext i16 %21 to i32, !dbg !5222
  %cmp14 = icmp eq i32 %conv, 0, !dbg !5222
  br i1 %cmp14, label %land.lhs.true16, label %if.then24, !dbg !5222

land.lhs.true16:                                  ; preds = %land.lhs.true
  %22 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5222
  %digits17 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %22, i32 0, i32 0, !dbg !5222
  %23 = load i32, i32* %digits17, align 4, !dbg !5222
  %cmp18 = icmp eq i32 %23, 1, !dbg !5222
  br i1 %cmp18, label %land.lhs.true20, label %if.then24, !dbg !5222

land.lhs.true20:                                  ; preds = %land.lhs.true16
  %24 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5222
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %24, i32 0, i32 2, !dbg !5222
  %25 = load i8, i8* %bits, align 4, !dbg !5222
  %conv21 = zext i8 %25 to i32, !dbg !5222
  %and = and i32 %conv21, 112, !dbg !5222
  %cmp22 = icmp eq i32 %and, 0, !dbg !5222
  br i1 %cmp22, label %if.end, label %if.then24, !dbg !5223

if.then24:                                        ; preds = %land.lhs.true20, %land.lhs.true16, %land.lhs.true
  %26 = load i32*, i32** %status.addr, align 8, !dbg !5224
  %27 = load i32, i32* %26, align 4, !dbg !5225
  %or25 = or i32 %27, 128, !dbg !5225
  store i32 %or25, i32* %26, align 4, !dbg !5225
  br label %if.end, !dbg !5226

if.end:                                           ; preds = %if.then24, %land.lhs.true20, %lor.lhs.false9
  br label %if.end26

if.end26:                                         ; preds = %if.end, %if.then
  %28 = load i32*, i32** %status.addr, align 8, !dbg !5227
  %29 = load i32, i32* %28, align 4, !dbg !5228
  %30 = load i32, i32* %save, align 4, !dbg !5229
  %cmp27 = icmp ne i32 %29, %30, !dbg !5230
  %conv28 = zext i1 %cmp27 to i32, !dbg !5230
  ret i32 %conv28, !dbg !5231
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.decNumber* @decExpOp(%struct.decNumber* %res, %struct.decNumber* %rhs, %struct.decContext* %set, i32* %status) #0 !dbg !5232 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status.addr = alloca i32*, align 8
  %ignore = alloca i32, align 4
  %h = alloca i32, align 4
  %p = alloca i32, align 4
  %residue = alloca i32, align 4
  %needbytes = alloca i32, align 4
  %x = alloca %struct.decNumber*, align 8
  %aset = alloca %struct.decContext, align 4
  %tset = alloca %struct.decContext, align 4
  %dset = alloca %struct.decContext, align 4
  %comp = alloca i32, align 4
  %bufr = alloca [5 x %struct.decNumber], align 16
  %allocrhs = alloca %struct.decNumber*, align 8
  %buft = alloca [6 x %struct.decNumber], align 16
  %allocbuft = alloca %struct.decNumber*, align 8
  %t = alloca %struct.decNumber*, align 8
  %bufa = alloca [10 x %struct.decNumber], align 16
  %allocbufa = alloca %struct.decNumber*, align 8
  %a = alloca %struct.decNumber*, align 8
  %bufd = alloca [2 x %struct.decNumber], align 16
  %d = alloca %struct.decNumber*, align 8
  %numone = alloca %struct.decNumber, align 4
  %shift = alloca i32, align 4
  %maxlever = alloca i32, align 4
  %lever = alloca i32, align 4
  %use = alloca i32, align 4
  %newrhs = alloca %struct.decNumber*, align 8
  %seenbit = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !5235, metadata !DIExpression()), !dbg !5236
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !5237, metadata !DIExpression()), !dbg !5238
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !5239, metadata !DIExpression()), !dbg !5240
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !5241, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.declare(metadata i32* %ignore, metadata !5243, metadata !DIExpression()), !dbg !5244
  store i32 0, i32* %ignore, align 4, !dbg !5244
  call void @llvm.dbg.declare(metadata i32* %h, metadata !5245, metadata !DIExpression()), !dbg !5246
  call void @llvm.dbg.declare(metadata i32* %p, metadata !5247, metadata !DIExpression()), !dbg !5248
  call void @llvm.dbg.declare(metadata i32* %residue, metadata !5249, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.declare(metadata i32* %needbytes, metadata !5251, metadata !DIExpression()), !dbg !5252
  call void @llvm.dbg.declare(metadata %struct.decNumber** %x, metadata !5253, metadata !DIExpression()), !dbg !5254
  %0 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5255
  store %struct.decNumber* %0, %struct.decNumber** %x, align 8, !dbg !5254
  call void @llvm.dbg.declare(metadata %struct.decContext* %aset, metadata !5256, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.declare(metadata %struct.decContext* %tset, metadata !5258, metadata !DIExpression()), !dbg !5259
  call void @llvm.dbg.declare(metadata %struct.decContext* %dset, metadata !5260, metadata !DIExpression()), !dbg !5261
  call void @llvm.dbg.declare(metadata i32* %comp, metadata !5262, metadata !DIExpression()), !dbg !5263
  call void @llvm.dbg.declare(metadata [5 x %struct.decNumber]* %bufr, metadata !5264, metadata !DIExpression()), !dbg !5266
  call void @llvm.dbg.declare(metadata %struct.decNumber** %allocrhs, metadata !5267, metadata !DIExpression()), !dbg !5268
  store %struct.decNumber* null, %struct.decNumber** %allocrhs, align 8, !dbg !5268
  call void @llvm.dbg.declare(metadata [6 x %struct.decNumber]* %buft, metadata !5269, metadata !DIExpression()), !dbg !5273
  call void @llvm.dbg.declare(metadata %struct.decNumber** %allocbuft, metadata !5274, metadata !DIExpression()), !dbg !5275
  store %struct.decNumber* null, %struct.decNumber** %allocbuft, align 8, !dbg !5275
  call void @llvm.dbg.declare(metadata %struct.decNumber** %t, metadata !5276, metadata !DIExpression()), !dbg !5277
  %arraydecay = getelementptr inbounds [6 x %struct.decNumber], [6 x %struct.decNumber]* %buft, i64 0, i64 0, !dbg !5278
  store %struct.decNumber* %arraydecay, %struct.decNumber** %t, align 8, !dbg !5277
  call void @llvm.dbg.declare(metadata [10 x %struct.decNumber]* %bufa, metadata !5279, metadata !DIExpression()), !dbg !5281
  call void @llvm.dbg.declare(metadata %struct.decNumber** %allocbufa, metadata !5282, metadata !DIExpression()), !dbg !5283
  store %struct.decNumber* null, %struct.decNumber** %allocbufa, align 8, !dbg !5283
  call void @llvm.dbg.declare(metadata %struct.decNumber** %a, metadata !5284, metadata !DIExpression()), !dbg !5285
  %arraydecay1 = getelementptr inbounds [10 x %struct.decNumber], [10 x %struct.decNumber]* %bufa, i64 0, i64 0, !dbg !5286
  store %struct.decNumber* %arraydecay1, %struct.decNumber** %a, align 8, !dbg !5285
  call void @llvm.dbg.declare(metadata [2 x %struct.decNumber]* %bufd, metadata !5287, metadata !DIExpression()), !dbg !5291
  call void @llvm.dbg.declare(metadata %struct.decNumber** %d, metadata !5292, metadata !DIExpression()), !dbg !5293
  %arraydecay2 = getelementptr inbounds [2 x %struct.decNumber], [2 x %struct.decNumber]* %bufd, i64 0, i64 0, !dbg !5294
  store %struct.decNumber* %arraydecay2, %struct.decNumber** %d, align 8, !dbg !5293
  call void @llvm.dbg.declare(metadata %struct.decNumber* %numone, metadata !5295, metadata !DIExpression()), !dbg !5296
  br label %do.body, !dbg !5297

do.body:                                          ; preds = %entry
  %1 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5298
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i32 0, i32 2, !dbg !5298
  %2 = load i8, i8* %bits, align 4, !dbg !5298
  %conv = zext i8 %2 to i32, !dbg !5298
  %and = and i32 %conv, 112, !dbg !5298
  %tobool = icmp ne i32 %and, 0, !dbg !5298
  br i1 %tobool, label %if.then, label %if.end18, !dbg !5301

if.then:                                          ; preds = %do.body
  %3 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5302
  %bits3 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %3, i32 0, i32 2, !dbg !5302
  %4 = load i8, i8* %bits3, align 4, !dbg !5302
  %conv4 = zext i8 %4 to i32, !dbg !5302
  %and5 = and i32 %conv4, 64, !dbg !5302
  %cmp = icmp ne i32 %and5, 0, !dbg !5302
  br i1 %cmp, label %if.then7, label %if.else15, !dbg !5305

if.then7:                                         ; preds = %if.then
  %5 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5306
  %bits8 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %5, i32 0, i32 2, !dbg !5306
  %6 = load i8, i8* %bits8, align 4, !dbg !5306
  %conv9 = zext i8 %6 to i32, !dbg !5306
  %and10 = and i32 %conv9, 128, !dbg !5306
  %cmp11 = icmp ne i32 %and10, 0, !dbg !5306
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !5309

if.then13:                                        ; preds = %if.then7
  %7 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5310
  %call = call %struct.decNumber* @decNumberZero(%struct.decNumber* %7), !dbg !5311
  br label %if.end, !dbg !5311

if.else:                                          ; preds = %if.then7
  %8 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5312
  %9 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5313
  %call14 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %8, %struct.decNumber* %9), !dbg !5314
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then13
  br label %if.end17, !dbg !5315

if.else15:                                        ; preds = %if.then
  %10 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5316
  %11 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5317
  %12 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !5318
  %13 = load i32*, i32** %status.addr, align 8, !dbg !5319
  %call16 = call %struct.decNumber* @decNaNs(%struct.decNumber* %10, %struct.decNumber* %11, %struct.decNumber* null, %struct.decContext* %12, i32* %13), !dbg !5320
  br label %if.end17

if.end17:                                         ; preds = %if.else15, %if.end
  br label %do.end, !dbg !5321

if.end18:                                         ; preds = %do.body
  %14 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5322
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %14, i32 0, i32 3, !dbg !5322
  %arraydecay19 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !5322
  %15 = load i16, i16* %arraydecay19, align 2, !dbg !5322
  %conv20 = zext i16 %15 to i32, !dbg !5322
  %cmp21 = icmp eq i32 %conv20, 0, !dbg !5322
  br i1 %cmp21, label %land.lhs.true, label %if.end35, !dbg !5322

land.lhs.true:                                    ; preds = %if.end18
  %16 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5322
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %16, i32 0, i32 0, !dbg !5322
  %17 = load i32, i32* %digits, align 4, !dbg !5322
  %cmp23 = icmp eq i32 %17, 1, !dbg !5322
  br i1 %cmp23, label %land.lhs.true25, label %if.end35, !dbg !5322

land.lhs.true25:                                  ; preds = %land.lhs.true
  %18 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5322
  %bits26 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %18, i32 0, i32 2, !dbg !5322
  %19 = load i8, i8* %bits26, align 4, !dbg !5322
  %conv27 = zext i8 %19 to i32, !dbg !5322
  %and28 = and i32 %conv27, 112, !dbg !5322
  %cmp29 = icmp eq i32 %and28, 0, !dbg !5322
  br i1 %cmp29, label %if.then31, label %if.end35, !dbg !5324

if.then31:                                        ; preds = %land.lhs.true25
  %20 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5325
  %call32 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %20), !dbg !5327
  %21 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5328
  %lsu33 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %21, i32 0, i32 3, !dbg !5329
  %arraydecay34 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu33, i64 0, i64 0, !dbg !5330
  store i16 1, i16* %arraydecay34, align 2, !dbg !5331
  br label %do.end, !dbg !5332

if.end35:                                         ; preds = %land.lhs.true25, %land.lhs.true, %if.end18
  %22 = load %struct.decNumber*, %struct.decNumber** %d, align 8, !dbg !5333
  %call36 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %22), !dbg !5334
  %23 = load %struct.decNumber*, %struct.decNumber** %d, align 8, !dbg !5335
  %lsu37 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %23, i32 0, i32 3, !dbg !5336
  %arraydecay38 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu37, i64 0, i64 0, !dbg !5337
  store i16 4, i16* %arraydecay38, align 2, !dbg !5338
  %24 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !5339
  %digits39 = getelementptr inbounds %struct.decContext, %struct.decContext* %24, i32 0, i32 0, !dbg !5340
  %25 = load i32, i32* %digits39, align 4, !dbg !5340
  %sub = sub nsw i32 0, %25, !dbg !5341
  %26 = load %struct.decNumber*, %struct.decNumber** %d, align 8, !dbg !5342
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %26, i32 0, i32 1, !dbg !5343
  store i32 %sub, i32* %exponent, align 4, !dbg !5344
  %27 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5345
  %bits40 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %27, i32 0, i32 2, !dbg !5345
  %28 = load i8, i8* %bits40, align 4, !dbg !5345
  %conv41 = zext i8 %28 to i32, !dbg !5345
  %and42 = and i32 %conv41, 128, !dbg !5345
  %cmp43 = icmp ne i32 %and42, 0, !dbg !5345
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !5347

if.then45:                                        ; preds = %if.end35
  %29 = load %struct.decNumber*, %struct.decNumber** %d, align 8, !dbg !5348
  %exponent46 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %29, i32 0, i32 1, !dbg !5349
  %30 = load i32, i32* %exponent46, align 4, !dbg !5350
  %dec = add nsw i32 %30, -1, !dbg !5350
  store i32 %dec, i32* %exponent46, align 4, !dbg !5350
  br label %if.end47, !dbg !5348

if.end47:                                         ; preds = %if.then45, %if.end35
  %31 = load %struct.decNumber*, %struct.decNumber** %d, align 8, !dbg !5351
  %32 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5352
  %call48 = call i32 @decCompare(%struct.decNumber* %31, %struct.decNumber* %32, i8 zeroext 1), !dbg !5353
  store i32 %call48, i32* %comp, align 4, !dbg !5354
  %33 = load i32, i32* %comp, align 4, !dbg !5355
  %cmp49 = icmp eq i32 %33, -2147483648, !dbg !5357
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !5358

if.then51:                                        ; preds = %if.end47
  %34 = load i32*, i32** %status.addr, align 8, !dbg !5359
  %35 = load i32, i32* %34, align 4, !dbg !5361
  %or = or i32 %35, 16, !dbg !5361
  store i32 %or, i32* %34, align 4, !dbg !5361
  br label %do.end, !dbg !5362

if.end52:                                         ; preds = %if.end47
  %36 = load i32, i32* %comp, align 4, !dbg !5363
  %cmp53 = icmp sge i32 %36, 0, !dbg !5365
  br i1 %cmp53, label %if.then55, label %if.end68, !dbg !5366

if.then55:                                        ; preds = %if.end52
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !5367, metadata !DIExpression()), !dbg !5369
  %37 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !5370
  %digits56 = getelementptr inbounds %struct.decContext, %struct.decContext* %37, i32 0, i32 0, !dbg !5371
  %38 = load i32, i32* %digits56, align 4, !dbg !5371
  %sub57 = sub nsw i32 %38, 1, !dbg !5372
  store i32 %sub57, i32* %shift, align 4, !dbg !5369
  %39 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5373
  %call58 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %39), !dbg !5374
  %40 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5375
  %lsu59 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %40, i32 0, i32 3, !dbg !5376
  %arraydecay60 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu59, i64 0, i64 0, !dbg !5377
  store i16 1, i16* %arraydecay60, align 2, !dbg !5378
  %41 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5379
  %lsu61 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %41, i32 0, i32 3, !dbg !5380
  %arraydecay62 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu61, i64 0, i64 0, !dbg !5379
  %42 = load i32, i32* %shift, align 4, !dbg !5381
  %call63 = call i32 @decShiftToMost(i16* %arraydecay62, i32 1, i32 %42), !dbg !5382
  %43 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5383
  %digits64 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %43, i32 0, i32 0, !dbg !5384
  store i32 %call63, i32* %digits64, align 4, !dbg !5385
  %44 = load i32, i32* %shift, align 4, !dbg !5386
  %sub65 = sub nsw i32 0, %44, !dbg !5387
  %45 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5388
  %exponent66 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %45, i32 0, i32 1, !dbg !5389
  store i32 %sub65, i32* %exponent66, align 4, !dbg !5390
  %46 = load i32*, i32** %status.addr, align 8, !dbg !5391
  %47 = load i32, i32* %46, align 4, !dbg !5392
  %or67 = or i32 %47, 2080, !dbg !5392
  store i32 %or67, i32* %46, align 4, !dbg !5392
  br label %do.end, !dbg !5393

if.end68:                                         ; preds = %if.end52
  %call69 = call %struct.decContext* @decContextDefault(%struct.decContext* %aset, i32 64), !dbg !5394
  %48 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !5395
  %emax = getelementptr inbounds %struct.decContext, %struct.decContext* %48, i32 0, i32 1, !dbg !5396
  %49 = load i32, i32* %emax, align 4, !dbg !5396
  %emax70 = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 1, !dbg !5397
  store i32 %49, i32* %emax70, align 4, !dbg !5398
  %50 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !5399
  %emin = getelementptr inbounds %struct.decContext, %struct.decContext* %50, i32 0, i32 2, !dbg !5400
  %51 = load i32, i32* %emin, align 4, !dbg !5400
  %emin71 = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 2, !dbg !5401
  store i32 %51, i32* %emin71, align 4, !dbg !5402
  %clamp = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 6, !dbg !5403
  store i8 0, i8* %clamp, align 4, !dbg !5404
  %52 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5405
  %exponent72 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %52, i32 0, i32 1, !dbg !5406
  %53 = load i32, i32* %exponent72, align 4, !dbg !5406
  %54 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5407
  %digits73 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %54, i32 0, i32 0, !dbg !5408
  %55 = load i32, i32* %digits73, align 4, !dbg !5408
  %add = add nsw i32 %53, %55, !dbg !5409
  store i32 %add, i32* %h, align 4, !dbg !5410
  %56 = load i32, i32* %h, align 4, !dbg !5411
  %cmp74 = icmp sgt i32 %56, 8, !dbg !5413
  br i1 %cmp74, label %if.then76, label %if.else88, !dbg !5414

if.then76:                                        ; preds = %if.end68
  %57 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !5415
  %call77 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %57), !dbg !5417
  %58 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !5418
  %lsu78 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %58, i32 0, i32 3, !dbg !5419
  %arraydecay79 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu78, i64 0, i64 0, !dbg !5420
  store i16 2, i16* %arraydecay79, align 2, !dbg !5421
  %59 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5422
  %bits80 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %59, i32 0, i32 2, !dbg !5422
  %60 = load i8, i8* %bits80, align 4, !dbg !5422
  %conv81 = zext i8 %60 to i32, !dbg !5422
  %and82 = and i32 %conv81, 128, !dbg !5422
  %cmp83 = icmp ne i32 %and82, 0, !dbg !5422
  br i1 %cmp83, label %if.then85, label %if.end87, !dbg !5424

if.then85:                                        ; preds = %if.then76
  %61 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !5425
  %exponent86 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %61, i32 0, i32 1, !dbg !5426
  store i32 -2, i32* %exponent86, align 4, !dbg !5427
  br label %if.end87, !dbg !5425

if.end87:                                         ; preds = %if.then85, %if.then76
  store i32 8, i32* %h, align 4, !dbg !5428
  store i32 9, i32* %p, align 4, !dbg !5429
  br label %if.end253, !dbg !5430

if.else88:                                        ; preds = %if.end68
  call void @llvm.dbg.declare(metadata i32* %maxlever, metadata !5431, metadata !DIExpression()), !dbg !5433
  %62 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5434
  %digits89 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %62, i32 0, i32 0, !dbg !5435
  %63 = load i32, i32* %digits89, align 4, !dbg !5435
  %cmp90 = icmp sgt i32 %63, 8, !dbg !5436
  %64 = zext i1 %cmp90 to i64, !dbg !5434
  %cond = select i1 %cmp90, i32 1, i32 0, !dbg !5434
  store i32 %cond, i32* %maxlever, align 4, !dbg !5433
  call void @llvm.dbg.declare(metadata i32* %lever, metadata !5437, metadata !DIExpression()), !dbg !5438
  %65 = load i32, i32* %h, align 4, !dbg !5439
  %sub92 = sub nsw i32 8, %65, !dbg !5439
  %66 = load i32, i32* %maxlever, align 4, !dbg !5439
  %cmp93 = icmp sgt i32 %sub92, %66, !dbg !5439
  br i1 %cmp93, label %cond.true, label %cond.false, !dbg !5439

cond.true:                                        ; preds = %if.else88
  %67 = load i32, i32* %maxlever, align 4, !dbg !5439
  br label %cond.end, !dbg !5439

cond.false:                                       ; preds = %if.else88
  %68 = load i32, i32* %h, align 4, !dbg !5439
  %sub95 = sub nsw i32 8, %68, !dbg !5439
  br label %cond.end, !dbg !5439

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond96 = phi i32 [ %67, %cond.true ], [ %sub95, %cond.false ], !dbg !5439
  store i32 %cond96, i32* %lever, align 4, !dbg !5438
  call void @llvm.dbg.declare(metadata i32* %use, metadata !5440, metadata !DIExpression()), !dbg !5441
  %69 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5442
  %digits97 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %69, i32 0, i32 0, !dbg !5443
  %70 = load i32, i32* %digits97, align 4, !dbg !5443
  %sub98 = sub nsw i32 0, %70, !dbg !5444
  %71 = load i32, i32* %lever, align 4, !dbg !5445
  %sub99 = sub nsw i32 %sub98, %71, !dbg !5446
  store i32 %sub99, i32* %use, align 4, !dbg !5441
  %72 = load i32, i32* %lever, align 4, !dbg !5447
  %73 = load i32, i32* %h, align 4, !dbg !5448
  %add100 = add nsw i32 %73, %72, !dbg !5448
  store i32 %add100, i32* %h, align 4, !dbg !5448
  %74 = load i32, i32* %h, align 4, !dbg !5449
  %cmp101 = icmp slt i32 %74, 0, !dbg !5451
  br i1 %cmp101, label %if.then103, label %if.end105, !dbg !5452

if.then103:                                       ; preds = %cond.end
  %75 = load i32, i32* %h, align 4, !dbg !5453
  %76 = load i32, i32* %use, align 4, !dbg !5455
  %add104 = add nsw i32 %76, %75, !dbg !5455
  store i32 %add104, i32* %use, align 4, !dbg !5455
  store i32 0, i32* %h, align 4, !dbg !5456
  br label %if.end105, !dbg !5457

if.end105:                                        ; preds = %if.then103, %cond.end
  %77 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5458
  %exponent106 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %77, i32 0, i32 1, !dbg !5460
  %78 = load i32, i32* %exponent106, align 4, !dbg !5460
  %79 = load i32, i32* %use, align 4, !dbg !5461
  %cmp107 = icmp ne i32 %78, %79, !dbg !5462
  br i1 %cmp107, label %if.then109, label %if.end141, !dbg !5463

if.then109:                                       ; preds = %if.end105
  call void @llvm.dbg.declare(metadata %struct.decNumber** %newrhs, metadata !5464, metadata !DIExpression()), !dbg !5466
  %arraydecay110 = getelementptr inbounds [5 x %struct.decNumber], [5 x %struct.decNumber]* %bufr, i64 0, i64 0, !dbg !5467
  store %struct.decNumber* %arraydecay110, %struct.decNumber** %newrhs, align 8, !dbg !5466
  %80 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5468
  %digits111 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %80, i32 0, i32 0, !dbg !5468
  %81 = load i32, i32* %digits111, align 4, !dbg !5468
  %cmp112 = icmp sle i32 %81, 49, !dbg !5468
  br i1 %cmp112, label %cond.true114, label %cond.false117, !dbg !5468

cond.true114:                                     ; preds = %if.then109
  %82 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5468
  %digits115 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %82, i32 0, i32 0, !dbg !5468
  %83 = load i32, i32* %digits115, align 4, !dbg !5468
  %idxprom = sext i32 %83 to i64, !dbg !5468
  %arrayidx = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom, !dbg !5468
  %84 = load i8, i8* %arrayidx, align 1, !dbg !5468
  %conv116 = zext i8 %84 to i32, !dbg !5468
  br label %cond.end121, !dbg !5468

cond.false117:                                    ; preds = %if.then109
  %85 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5468
  %digits118 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %85, i32 0, i32 0, !dbg !5468
  %86 = load i32, i32* %digits118, align 4, !dbg !5468
  %add119 = add nsw i32 %86, 3, !dbg !5468
  %sub120 = sub nsw i32 %add119, 1, !dbg !5468
  %div = sdiv i32 %sub120, 3, !dbg !5468
  br label %cond.end121, !dbg !5468

cond.end121:                                      ; preds = %cond.false117, %cond.true114
  %cond122 = phi i32 [ %conv116, %cond.true114 ], [ %div, %cond.false117 ], !dbg !5468
  %sub123 = sub nsw i32 %cond122, 1, !dbg !5469
  %conv124 = sext i32 %sub123 to i64, !dbg !5470
  %mul = mul i64 %conv124, 2, !dbg !5471
  %add125 = add i64 12, %mul, !dbg !5472
  %conv126 = trunc i64 %add125 to i32, !dbg !5473
  store i32 %conv126, i32* %needbytes, align 4, !dbg !5474
  %87 = load i32, i32* %needbytes, align 4, !dbg !5475
  %conv127 = zext i32 %87 to i64, !dbg !5475
  %cmp128 = icmp ugt i64 %conv127, 60, !dbg !5477
  br i1 %cmp128, label %if.then130, label %if.end138, !dbg !5478

if.then130:                                       ; preds = %cond.end121
  %88 = load i32, i32* %needbytes, align 4, !dbg !5479
  %conv131 = zext i32 %88 to i64, !dbg !5479
  %call132 = call noalias i8* @malloc(i64 %conv131) #6, !dbg !5481
  %89 = bitcast i8* %call132 to %struct.decNumber*, !dbg !5482
  store %struct.decNumber* %89, %struct.decNumber** %allocrhs, align 8, !dbg !5483
  %90 = load %struct.decNumber*, %struct.decNumber** %allocrhs, align 8, !dbg !5484
  %cmp133 = icmp eq %struct.decNumber* %90, null, !dbg !5486
  br i1 %cmp133, label %if.then135, label %if.end137, !dbg !5487

if.then135:                                       ; preds = %if.then130
  %91 = load i32*, i32** %status.addr, align 8, !dbg !5488
  %92 = load i32, i32* %91, align 4, !dbg !5490
  %or136 = or i32 %92, 16, !dbg !5490
  store i32 %or136, i32* %91, align 4, !dbg !5490
  br label %do.end, !dbg !5491

if.end137:                                        ; preds = %if.then130
  %93 = load %struct.decNumber*, %struct.decNumber** %allocrhs, align 8, !dbg !5492
  store %struct.decNumber* %93, %struct.decNumber** %newrhs, align 8, !dbg !5493
  br label %if.end138, !dbg !5494

if.end138:                                        ; preds = %if.end137, %cond.end121
  %94 = load %struct.decNumber*, %struct.decNumber** %newrhs, align 8, !dbg !5495
  %95 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5496
  %call139 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %94, %struct.decNumber* %95), !dbg !5497
  %96 = load i32, i32* %use, align 4, !dbg !5498
  %97 = load %struct.decNumber*, %struct.decNumber** %newrhs, align 8, !dbg !5499
  %exponent140 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %97, i32 0, i32 1, !dbg !5500
  store i32 %96, i32* %exponent140, align 4, !dbg !5501
  %98 = load %struct.decNumber*, %struct.decNumber** %newrhs, align 8, !dbg !5502
  store %struct.decNumber* %98, %struct.decNumber** %x, align 8, !dbg !5503
  br label %if.end141, !dbg !5504

if.end141:                                        ; preds = %if.end138, %if.end105
  %99 = load %struct.decNumber*, %struct.decNumber** %x, align 8, !dbg !5505
  %digits142 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %99, i32 0, i32 0, !dbg !5505
  %100 = load i32, i32* %digits142, align 4, !dbg !5505
  %101 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !5505
  %digits143 = getelementptr inbounds %struct.decContext, %struct.decContext* %101, i32 0, i32 0, !dbg !5505
  %102 = load i32, i32* %digits143, align 4, !dbg !5505
  %cmp144 = icmp slt i32 %100, %102, !dbg !5505
  br i1 %cmp144, label %cond.true146, label %cond.false148, !dbg !5505

cond.true146:                                     ; preds = %if.end141
  %103 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !5505
  %digits147 = getelementptr inbounds %struct.decContext, %struct.decContext* %103, i32 0, i32 0, !dbg !5505
  %104 = load i32, i32* %digits147, align 4, !dbg !5505
  br label %cond.end150, !dbg !5505

cond.false148:                                    ; preds = %if.end141
  %105 = load %struct.decNumber*, %struct.decNumber** %x, align 8, !dbg !5505
  %digits149 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %105, i32 0, i32 0, !dbg !5505
  %106 = load i32, i32* %digits149, align 4, !dbg !5505
  br label %cond.end150, !dbg !5505

cond.end150:                                      ; preds = %cond.false148, %cond.true146
  %cond151 = phi i32 [ %104, %cond.true146 ], [ %106, %cond.false148 ], !dbg !5505
  %107 = load i32, i32* %h, align 4, !dbg !5506
  %add152 = add nsw i32 %cond151, %107, !dbg !5507
  %add153 = add nsw i32 %add152, 2, !dbg !5508
  store i32 %add153, i32* %p, align 4, !dbg !5509
  %108 = load i32, i32* %p, align 4, !dbg !5510
  %mul154 = mul nsw i32 %108, 2, !dbg !5510
  %cmp155 = icmp sle i32 %mul154, 49, !dbg !5510
  br i1 %cmp155, label %cond.true157, label %cond.false162, !dbg !5510

cond.true157:                                     ; preds = %cond.end150
  %109 = load i32, i32* %p, align 4, !dbg !5510
  %mul158 = mul nsw i32 %109, 2, !dbg !5510
  %idxprom159 = sext i32 %mul158 to i64, !dbg !5510
  %arrayidx160 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom159, !dbg !5510
  %110 = load i8, i8* %arrayidx160, align 1, !dbg !5510
  %conv161 = zext i8 %110 to i32, !dbg !5510
  br label %cond.end167, !dbg !5510

cond.false162:                                    ; preds = %cond.end150
  %111 = load i32, i32* %p, align 4, !dbg !5510
  %mul163 = mul nsw i32 %111, 2, !dbg !5510
  %add164 = add nsw i32 %mul163, 3, !dbg !5510
  %sub165 = sub nsw i32 %add164, 1, !dbg !5510
  %div166 = sdiv i32 %sub165, 3, !dbg !5510
  br label %cond.end167, !dbg !5510

cond.end167:                                      ; preds = %cond.false162, %cond.true157
  %cond168 = phi i32 [ %conv161, %cond.true157 ], [ %div166, %cond.false162 ], !dbg !5510
  %sub169 = sub nsw i32 %cond168, 1, !dbg !5511
  %conv170 = sext i32 %sub169 to i64, !dbg !5512
  %mul171 = mul i64 %conv170, 2, !dbg !5513
  %add172 = add i64 12, %mul171, !dbg !5514
  %conv173 = trunc i64 %add172 to i32, !dbg !5515
  store i32 %conv173, i32* %needbytes, align 4, !dbg !5516
  %112 = load i32, i32* %needbytes, align 4, !dbg !5517
  %conv174 = zext i32 %112 to i64, !dbg !5517
  %cmp175 = icmp ugt i64 %conv174, 120, !dbg !5519
  br i1 %cmp175, label %if.then177, label %if.end185, !dbg !5520

if.then177:                                       ; preds = %cond.end167
  %113 = load i32, i32* %needbytes, align 4, !dbg !5521
  %conv178 = zext i32 %113 to i64, !dbg !5521
  %call179 = call noalias i8* @malloc(i64 %conv178) #6, !dbg !5523
  %114 = bitcast i8* %call179 to %struct.decNumber*, !dbg !5524
  store %struct.decNumber* %114, %struct.decNumber** %allocbufa, align 8, !dbg !5525
  %115 = load %struct.decNumber*, %struct.decNumber** %allocbufa, align 8, !dbg !5526
  %cmp180 = icmp eq %struct.decNumber* %115, null, !dbg !5528
  br i1 %cmp180, label %if.then182, label %if.end184, !dbg !5529

if.then182:                                       ; preds = %if.then177
  %116 = load i32*, i32** %status.addr, align 8, !dbg !5530
  %117 = load i32, i32* %116, align 4, !dbg !5532
  %or183 = or i32 %117, 16, !dbg !5532
  store i32 %or183, i32* %116, align 4, !dbg !5532
  br label %do.end, !dbg !5533

if.end184:                                        ; preds = %if.then177
  %118 = load %struct.decNumber*, %struct.decNumber** %allocbufa, align 8, !dbg !5534
  store %struct.decNumber* %118, %struct.decNumber** %a, align 8, !dbg !5535
  br label %if.end185, !dbg !5536

if.end185:                                        ; preds = %if.end184, %cond.end167
  %119 = load i32, i32* %p, align 4, !dbg !5537
  %add186 = add nsw i32 %119, 2, !dbg !5537
  %cmp187 = icmp sle i32 %add186, 49, !dbg !5537
  br i1 %cmp187, label %cond.true189, label %cond.false194, !dbg !5537

cond.true189:                                     ; preds = %if.end185
  %120 = load i32, i32* %p, align 4, !dbg !5537
  %add190 = add nsw i32 %120, 2, !dbg !5537
  %idxprom191 = sext i32 %add190 to i64, !dbg !5537
  %arrayidx192 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom191, !dbg !5537
  %121 = load i8, i8* %arrayidx192, align 1, !dbg !5537
  %conv193 = zext i8 %121 to i32, !dbg !5537
  br label %cond.end199, !dbg !5537

cond.false194:                                    ; preds = %if.end185
  %122 = load i32, i32* %p, align 4, !dbg !5537
  %add195 = add nsw i32 %122, 2, !dbg !5537
  %add196 = add nsw i32 %add195, 3, !dbg !5537
  %sub197 = sub nsw i32 %add196, 1, !dbg !5537
  %div198 = sdiv i32 %sub197, 3, !dbg !5537
  br label %cond.end199, !dbg !5537

cond.end199:                                      ; preds = %cond.false194, %cond.true189
  %cond200 = phi i32 [ %conv193, %cond.true189 ], [ %div198, %cond.false194 ], !dbg !5537
  %sub201 = sub nsw i32 %cond200, 1, !dbg !5538
  %conv202 = sext i32 %sub201 to i64, !dbg !5539
  %mul203 = mul i64 %conv202, 2, !dbg !5540
  %add204 = add i64 12, %mul203, !dbg !5541
  %conv205 = trunc i64 %add204 to i32, !dbg !5542
  store i32 %conv205, i32* %needbytes, align 4, !dbg !5543
  %123 = load i32, i32* %needbytes, align 4, !dbg !5544
  %conv206 = zext i32 %123 to i64, !dbg !5544
  %cmp207 = icmp ugt i64 %conv206, 72, !dbg !5546
  br i1 %cmp207, label %if.then209, label %if.end217, !dbg !5547

if.then209:                                       ; preds = %cond.end199
  %124 = load i32, i32* %needbytes, align 4, !dbg !5548
  %conv210 = zext i32 %124 to i64, !dbg !5548
  %call211 = call noalias i8* @malloc(i64 %conv210) #6, !dbg !5550
  %125 = bitcast i8* %call211 to %struct.decNumber*, !dbg !5551
  store %struct.decNumber* %125, %struct.decNumber** %allocbuft, align 8, !dbg !5552
  %126 = load %struct.decNumber*, %struct.decNumber** %allocbuft, align 8, !dbg !5553
  %cmp212 = icmp eq %struct.decNumber* %126, null, !dbg !5555
  br i1 %cmp212, label %if.then214, label %if.end216, !dbg !5556

if.then214:                                       ; preds = %if.then209
  %127 = load i32*, i32** %status.addr, align 8, !dbg !5557
  %128 = load i32, i32* %127, align 4, !dbg !5559
  %or215 = or i32 %128, 16, !dbg !5559
  store i32 %or215, i32* %127, align 4, !dbg !5559
  br label %do.end, !dbg !5560

if.end216:                                        ; preds = %if.then209
  %129 = load %struct.decNumber*, %struct.decNumber** %allocbuft, align 8, !dbg !5561
  store %struct.decNumber* %129, %struct.decNumber** %t, align 8, !dbg !5562
  br label %if.end217, !dbg !5563

if.end217:                                        ; preds = %if.end216, %cond.end199
  %130 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !5564
  %131 = load %struct.decNumber*, %struct.decNumber** %x, align 8, !dbg !5565
  %call218 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %130, %struct.decNumber* %131), !dbg !5566
  %132 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !5567
  %call219 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %132), !dbg !5568
  %133 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !5569
  %lsu220 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %133, i32 0, i32 3, !dbg !5570
  %arraydecay221 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu220, i64 0, i64 0, !dbg !5571
  store i16 1, i16* %arraydecay221, align 2, !dbg !5572
  %134 = load %struct.decNumber*, %struct.decNumber** %d, align 8, !dbg !5573
  %call222 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %134), !dbg !5574
  %135 = load %struct.decNumber*, %struct.decNumber** %d, align 8, !dbg !5575
  %lsu223 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %135, i32 0, i32 3, !dbg !5576
  %arraydecay224 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu223, i64 0, i64 0, !dbg !5577
  store i16 2, i16* %arraydecay224, align 2, !dbg !5578
  %call225 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %numone), !dbg !5579
  %lsu226 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %numone, i32 0, i32 3, !dbg !5580
  %arraydecay227 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu226, i64 0, i64 0, !dbg !5581
  store i16 1, i16* %arraydecay227, align 2, !dbg !5582
  %call228 = call %struct.decContext* @decContextDefault(%struct.decContext* %tset, i32 64), !dbg !5583
  %136 = bitcast %struct.decContext* %dset to i8*, !dbg !5584
  %137 = bitcast %struct.decContext* %tset to i8*, !dbg !5584
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %136, i8* align 4 %137, i64 28, i1 false), !dbg !5584
  %138 = load i32, i32* %p, align 4, !dbg !5585
  %mul229 = mul nsw i32 %138, 2, !dbg !5586
  %digits230 = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 0, !dbg !5587
  store i32 %mul229, i32* %digits230, align 4, !dbg !5588
  %139 = load i32, i32* %p, align 4, !dbg !5589
  %digits231 = getelementptr inbounds %struct.decContext, %struct.decContext* %tset, i32 0, i32 0, !dbg !5590
  store i32 %139, i32* %digits231, align 4, !dbg !5591
  %emin232 = getelementptr inbounds %struct.decContext, %struct.decContext* %tset, i32 0, i32 2, !dbg !5592
  store i32 -999999999, i32* %emin232, align 4, !dbg !5593
  br label %for.cond, !dbg !5594

for.cond:                                         ; preds = %if.end251, %if.end217
  %140 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !5595
  %141 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !5599
  %142 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !5600
  %143 = load i32*, i32** %status.addr, align 8, !dbg !5601
  %call233 = call %struct.decNumber* @decAddOp(%struct.decNumber* %140, %struct.decNumber* %141, %struct.decNumber* %142, %struct.decContext* %aset, i8 zeroext 0, i32* %143), !dbg !5602
  %144 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !5603
  %145 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !5604
  %146 = load %struct.decNumber*, %struct.decNumber** %x, align 8, !dbg !5605
  %call234 = call %struct.decNumber* @decMultiplyOp(%struct.decNumber* %144, %struct.decNumber* %145, %struct.decNumber* %146, %struct.decContext* %tset, i32* %ignore), !dbg !5606
  %147 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !5607
  %148 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !5608
  %149 = load %struct.decNumber*, %struct.decNumber** %d, align 8, !dbg !5609
  %call235 = call %struct.decNumber* @decDivideOp(%struct.decNumber* %147, %struct.decNumber* %148, %struct.decNumber* %149, %struct.decContext* %tset, i8 zeroext -128, i32* %ignore), !dbg !5610
  %150 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !5611
  %digits236 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %150, i32 0, i32 0, !dbg !5613
  %151 = load i32, i32* %digits236, align 4, !dbg !5613
  %152 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !5614
  %exponent237 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %152, i32 0, i32 1, !dbg !5615
  %153 = load i32, i32* %exponent237, align 4, !dbg !5615
  %add238 = add nsw i32 %151, %153, !dbg !5616
  %154 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !5617
  %digits239 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %154, i32 0, i32 0, !dbg !5618
  %155 = load i32, i32* %digits239, align 4, !dbg !5618
  %156 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !5619
  %exponent240 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %156, i32 0, i32 1, !dbg !5620
  %157 = load i32, i32* %exponent240, align 4, !dbg !5620
  %add241 = add nsw i32 %155, %157, !dbg !5621
  %158 = load i32, i32* %p, align 4, !dbg !5622
  %add242 = add nsw i32 %add241, %158, !dbg !5623
  %add243 = add nsw i32 %add242, 1, !dbg !5624
  %cmp244 = icmp sge i32 %add238, %add243, !dbg !5625
  br i1 %cmp244, label %land.lhs.true246, label %if.end251, !dbg !5626

land.lhs.true246:                                 ; preds = %for.cond
  %159 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !5627
  %digits247 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %159, i32 0, i32 0, !dbg !5628
  %160 = load i32, i32* %digits247, align 4, !dbg !5628
  %161 = load i32, i32* %p, align 4, !dbg !5629
  %cmp248 = icmp sge i32 %160, %161, !dbg !5630
  br i1 %cmp248, label %if.then250, label %if.end251, !dbg !5631

if.then250:                                       ; preds = %land.lhs.true246
  br label %for.end, !dbg !5632

if.end251:                                        ; preds = %land.lhs.true246, %for.cond
  %162 = load %struct.decNumber*, %struct.decNumber** %d, align 8, !dbg !5633
  %163 = load %struct.decNumber*, %struct.decNumber** %d, align 8, !dbg !5634
  %call252 = call %struct.decNumber* @decAddOp(%struct.decNumber* %162, %struct.decNumber* %163, %struct.decNumber* %numone, %struct.decContext* %dset, i8 zeroext 0, i32* %ignore), !dbg !5635
  br label %for.cond, !dbg !5636, !llvm.loop !5637

for.end:                                          ; preds = %if.then250
  br label %if.end253

if.end253:                                        ; preds = %for.end, %if.end87
  %164 = load i32, i32* %h, align 4, !dbg !5640
  %cmp254 = icmp sgt i32 %164, 0, !dbg !5642
  br i1 %cmp254, label %if.then256, label %if.end302, !dbg !5643

if.then256:                                       ; preds = %if.end253
  call void @llvm.dbg.declare(metadata i32* %seenbit, metadata !5644, metadata !DIExpression()), !dbg !5646
  store i32 0, i32* %seenbit, align 4, !dbg !5646
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5647, metadata !DIExpression()), !dbg !5648
  call void @llvm.dbg.declare(metadata i32* %n, metadata !5649, metadata !DIExpression()), !dbg !5650
  %165 = load i32, i32* %h, align 4, !dbg !5651
  %idxprom257 = sext i32 %165 to i64, !dbg !5652
  %arrayidx258 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom257, !dbg !5652
  %166 = load i32, i32* %arrayidx258, align 4, !dbg !5652
  store i32 %166, i32* %n, align 4, !dbg !5650
  %167 = load i32, i32* %p, align 4, !dbg !5653
  %add259 = add nsw i32 %167, 2, !dbg !5654
  %digits260 = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 0, !dbg !5655
  store i32 %add259, i32* %digits260, align 4, !dbg !5656
  %168 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !5657
  %call261 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %168), !dbg !5658
  %169 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !5659
  %lsu262 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %169, i32 0, i32 3, !dbg !5660
  %arraydecay263 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu262, i64 0, i64 0, !dbg !5661
  store i16 1, i16* %arraydecay263, align 2, !dbg !5662
  store i32 1, i32* %i, align 4, !dbg !5663
  br label %for.cond264, !dbg !5665

for.cond264:                                      ; preds = %for.inc, %if.then256
  %170 = load i32*, i32** %status.addr, align 8, !dbg !5666
  %171 = load i32, i32* %170, align 4, !dbg !5670
  %and265 = and i32 %171, 8704, !dbg !5671
  %tobool266 = icmp ne i32 %and265, 0, !dbg !5671
  br i1 %tobool266, label %if.then267, label %if.end287, !dbg !5672

if.then267:                                       ; preds = %for.cond264
  %172 = load i32*, i32** %status.addr, align 8, !dbg !5673
  %173 = load i32, i32* %172, align 4, !dbg !5676
  %and268 = and i32 %173, 512, !dbg !5677
  %tobool269 = icmp ne i32 %and268, 0, !dbg !5677
  br i1 %tobool269, label %if.then285, label %lor.lhs.false, !dbg !5678

lor.lhs.false:                                    ; preds = %if.then267
  %174 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !5679
  %lsu270 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %174, i32 0, i32 3, !dbg !5679
  %arraydecay271 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu270, i64 0, i64 0, !dbg !5679
  %175 = load i16, i16* %arraydecay271, align 2, !dbg !5679
  %conv272 = zext i16 %175 to i32, !dbg !5679
  %cmp273 = icmp eq i32 %conv272, 0, !dbg !5679
  br i1 %cmp273, label %land.lhs.true275, label %if.end286, !dbg !5679

land.lhs.true275:                                 ; preds = %lor.lhs.false
  %176 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !5679
  %digits276 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %176, i32 0, i32 0, !dbg !5679
  %177 = load i32, i32* %digits276, align 4, !dbg !5679
  %cmp277 = icmp eq i32 %177, 1, !dbg !5679
  br i1 %cmp277, label %land.lhs.true279, label %if.end286, !dbg !5679

land.lhs.true279:                                 ; preds = %land.lhs.true275
  %178 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !5679
  %bits280 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %178, i32 0, i32 2, !dbg !5679
  %179 = load i8, i8* %bits280, align 4, !dbg !5679
  %conv281 = zext i8 %179 to i32, !dbg !5679
  %and282 = and i32 %conv281, 112, !dbg !5679
  %cmp283 = icmp eq i32 %and282, 0, !dbg !5679
  br i1 %cmp283, label %if.then285, label %if.end286, !dbg !5680

if.then285:                                       ; preds = %land.lhs.true279, %if.then267
  br label %for.end301, !dbg !5681

if.end286:                                        ; preds = %land.lhs.true279, %land.lhs.true275, %lor.lhs.false
  br label %if.end287, !dbg !5682

if.end287:                                        ; preds = %if.end286, %for.cond264
  %180 = load i32, i32* %n, align 4, !dbg !5683
  %shl = shl i32 %180, 1, !dbg !5684
  store i32 %shl, i32* %n, align 4, !dbg !5685
  %181 = load i32, i32* %n, align 4, !dbg !5686
  %cmp288 = icmp slt i32 %181, 0, !dbg !5688
  br i1 %cmp288, label %if.then290, label %if.end292, !dbg !5689

if.then290:                                       ; preds = %if.end287
  store i32 1, i32* %seenbit, align 4, !dbg !5690
  %182 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !5692
  %183 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !5693
  %184 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !5694
  %185 = load i32*, i32** %status.addr, align 8, !dbg !5695
  %call291 = call %struct.decNumber* @decMultiplyOp(%struct.decNumber* %182, %struct.decNumber* %183, %struct.decNumber* %184, %struct.decContext* %aset, i32* %185), !dbg !5696
  br label %if.end292, !dbg !5697

if.end292:                                        ; preds = %if.then290, %if.end287
  %186 = load i32, i32* %i, align 4, !dbg !5698
  %cmp293 = icmp eq i32 %186, 31, !dbg !5700
  br i1 %cmp293, label %if.then295, label %if.end296, !dbg !5701

if.then295:                                       ; preds = %if.end292
  br label %for.end301, !dbg !5702

if.end296:                                        ; preds = %if.end292
  %187 = load i32, i32* %seenbit, align 4, !dbg !5703
  %tobool297 = icmp ne i32 %187, 0, !dbg !5703
  br i1 %tobool297, label %if.end299, label %if.then298, !dbg !5705

if.then298:                                       ; preds = %if.end296
  br label %for.inc, !dbg !5706

if.end299:                                        ; preds = %if.end296
  %188 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !5707
  %189 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !5708
  %190 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !5709
  %191 = load i32*, i32** %status.addr, align 8, !dbg !5710
  %call300 = call %struct.decNumber* @decMultiplyOp(%struct.decNumber* %188, %struct.decNumber* %189, %struct.decNumber* %190, %struct.decContext* %aset, i32* %191), !dbg !5711
  br label %for.inc, !dbg !5712

for.inc:                                          ; preds = %if.end299, %if.then298
  %192 = load i32, i32* %i, align 4, !dbg !5713
  %inc = add nsw i32 %192, 1, !dbg !5713
  store i32 %inc, i32* %i, align 4, !dbg !5713
  br label %for.cond264, !dbg !5714, !llvm.loop !5715

for.end301:                                       ; preds = %if.then295, %if.then285
  %193 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !5718
  store %struct.decNumber* %193, %struct.decNumber** %a, align 8, !dbg !5719
  br label %if.end302, !dbg !5720

if.end302:                                        ; preds = %for.end301, %if.end253
  store i32 1, i32* %residue, align 4, !dbg !5721
  %194 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !5722
  %lsu303 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %194, i32 0, i32 3, !dbg !5722
  %arraydecay304 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu303, i64 0, i64 0, !dbg !5722
  %195 = load i16, i16* %arraydecay304, align 2, !dbg !5722
  %conv305 = zext i16 %195 to i32, !dbg !5722
  %cmp306 = icmp eq i32 %conv305, 0, !dbg !5722
  br i1 %cmp306, label %land.lhs.true308, label %if.end319, !dbg !5722

land.lhs.true308:                                 ; preds = %if.end302
  %196 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !5722
  %digits309 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %196, i32 0, i32 0, !dbg !5722
  %197 = load i32, i32* %digits309, align 4, !dbg !5722
  %cmp310 = icmp eq i32 %197, 1, !dbg !5722
  br i1 %cmp310, label %land.lhs.true312, label %if.end319, !dbg !5722

land.lhs.true312:                                 ; preds = %land.lhs.true308
  %198 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !5722
  %bits313 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %198, i32 0, i32 2, !dbg !5722
  %199 = load i8, i8* %bits313, align 4, !dbg !5722
  %conv314 = zext i8 %199 to i32, !dbg !5722
  %and315 = and i32 %conv314, 112, !dbg !5722
  %cmp316 = icmp eq i32 %and315, 0, !dbg !5722
  br i1 %cmp316, label %if.then318, label %if.end319, !dbg !5724

if.then318:                                       ; preds = %land.lhs.true312
  store i32 0, i32* %residue, align 4, !dbg !5725
  br label %if.end319, !dbg !5726

if.end319:                                        ; preds = %if.then318, %land.lhs.true312, %land.lhs.true308, %if.end302
  %200 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !5727
  %digits320 = getelementptr inbounds %struct.decContext, %struct.decContext* %200, i32 0, i32 0, !dbg !5728
  %201 = load i32, i32* %digits320, align 4, !dbg !5728
  %digits321 = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 0, !dbg !5729
  store i32 %201, i32* %digits321, align 4, !dbg !5730
  %202 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5731
  %203 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !5732
  %204 = load i32*, i32** %status.addr, align 8, !dbg !5733
  call void @decCopyFit(%struct.decNumber* %202, %struct.decNumber* %203, %struct.decContext* %aset, i32* %residue, i32* %204), !dbg !5734
  %205 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5735
  %206 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !5735
  %207 = load i32*, i32** %status.addr, align 8, !dbg !5735
  call void @decFinalize(%struct.decNumber* %205, %struct.decContext* %206, i32* %residue, i32* %207), !dbg !5735
  br label %do.end, !dbg !5736

do.end:                                           ; preds = %if.end319, %if.then214, %if.then182, %if.then135, %if.then55, %if.then51, %if.then31, %if.end17
  %208 = load %struct.decNumber*, %struct.decNumber** %allocrhs, align 8, !dbg !5737
  %cmp322 = icmp ne %struct.decNumber* %208, null, !dbg !5739
  br i1 %cmp322, label %if.then324, label %if.end325, !dbg !5740

if.then324:                                       ; preds = %do.end
  %209 = load %struct.decNumber*, %struct.decNumber** %allocrhs, align 8, !dbg !5741
  %210 = bitcast %struct.decNumber* %209 to i8*, !dbg !5741
  call void @free(i8* %210) #6, !dbg !5742
  br label %if.end325, !dbg !5742

if.end325:                                        ; preds = %if.then324, %do.end
  %211 = load %struct.decNumber*, %struct.decNumber** %allocbufa, align 8, !dbg !5743
  %cmp326 = icmp ne %struct.decNumber* %211, null, !dbg !5745
  br i1 %cmp326, label %if.then328, label %if.end329, !dbg !5746

if.then328:                                       ; preds = %if.end325
  %212 = load %struct.decNumber*, %struct.decNumber** %allocbufa, align 8, !dbg !5747
  %213 = bitcast %struct.decNumber* %212 to i8*, !dbg !5747
  call void @free(i8* %213) #6, !dbg !5748
  br label %if.end329, !dbg !5748

if.end329:                                        ; preds = %if.then328, %if.end325
  %214 = load %struct.decNumber*, %struct.decNumber** %allocbuft, align 8, !dbg !5749
  %cmp330 = icmp ne %struct.decNumber* %214, null, !dbg !5751
  br i1 %cmp330, label %if.then332, label %if.end333, !dbg !5752

if.then332:                                       ; preds = %if.end329
  %215 = load %struct.decNumber*, %struct.decNumber** %allocbuft, align 8, !dbg !5753
  %216 = bitcast %struct.decNumber* %215 to i8*, !dbg !5753
  call void @free(i8* %216) #6, !dbg !5754
  br label %if.end333, !dbg !5754

if.end333:                                        ; preds = %if.then332, %if.end329
  %217 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5755
  ret %struct.decNumber* %217, !dbg !5756
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberFMA(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decNumber* %fhs, %struct.decContext* %set) #0 !dbg !5757 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %fhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status = alloca i32, align 4
  %dcmul = alloca %struct.decContext, align 4
  %needbytes = alloca i32, align 4
  %bufa = alloca [5 x %struct.decNumber], align 16
  %allocbufa = alloca %struct.decNumber*, align 8
  %acc = alloca %struct.decNumber*, align 8
  %dzero = alloca %struct.decNumber, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !5760, metadata !DIExpression()), !dbg !5761
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !5762, metadata !DIExpression()), !dbg !5763
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !5764, metadata !DIExpression()), !dbg !5765
  store %struct.decNumber* %fhs, %struct.decNumber** %fhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %fhs.addr, metadata !5766, metadata !DIExpression()), !dbg !5767
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !5768, metadata !DIExpression()), !dbg !5769
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5770, metadata !DIExpression()), !dbg !5771
  store i32 0, i32* %status, align 4, !dbg !5771
  call void @llvm.dbg.declare(metadata %struct.decContext* %dcmul, metadata !5772, metadata !DIExpression()), !dbg !5773
  call void @llvm.dbg.declare(metadata i32* %needbytes, metadata !5774, metadata !DIExpression()), !dbg !5775
  call void @llvm.dbg.declare(metadata [5 x %struct.decNumber]* %bufa, metadata !5776, metadata !DIExpression()), !dbg !5777
  call void @llvm.dbg.declare(metadata %struct.decNumber** %allocbufa, metadata !5778, metadata !DIExpression()), !dbg !5779
  store %struct.decNumber* null, %struct.decNumber** %allocbufa, align 8, !dbg !5779
  call void @llvm.dbg.declare(metadata %struct.decNumber** %acc, metadata !5780, metadata !DIExpression()), !dbg !5781
  call void @llvm.dbg.declare(metadata %struct.decNumber* %dzero, metadata !5782, metadata !DIExpression()), !dbg !5783
  br label %do.body, !dbg !5784

do.body:                                          ; preds = %entry
  %0 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !5785
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 2, !dbg !5785
  %1 = load i8, i8* %bits, align 4, !dbg !5785
  %conv = zext i8 %1 to i32, !dbg !5785
  %and = and i32 %conv, 112, !dbg !5785
  %cmp = icmp ne i32 %and, 0, !dbg !5785
  br i1 %cmp, label %lor.lhs.false, label %land.lhs.true, !dbg !5788

land.lhs.true:                                    ; preds = %do.body
  %2 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !5789
  %3 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !5790
  %call = call i32 @decCheckMath(%struct.decNumber* %2, %struct.decContext* %3, i32* %status), !dbg !5791
  %tobool = icmp ne i32 %call, 0, !dbg !5791
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !5792

lor.lhs.false:                                    ; preds = %land.lhs.true, %do.body
  %4 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5793
  %bits2 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 2, !dbg !5793
  %5 = load i8, i8* %bits2, align 4, !dbg !5793
  %conv3 = zext i8 %5 to i32, !dbg !5793
  %and4 = and i32 %conv3, 112, !dbg !5793
  %cmp5 = icmp ne i32 %and4, 0, !dbg !5793
  br i1 %cmp5, label %lor.lhs.false10, label %land.lhs.true7, !dbg !5794

land.lhs.true7:                                   ; preds = %lor.lhs.false
  %6 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5795
  %7 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !5796
  %call8 = call i32 @decCheckMath(%struct.decNumber* %6, %struct.decContext* %7, i32* %status), !dbg !5797
  %tobool9 = icmp ne i32 %call8, 0, !dbg !5797
  br i1 %tobool9, label %if.then, label %lor.lhs.false10, !dbg !5798

lor.lhs.false10:                                  ; preds = %land.lhs.true7, %lor.lhs.false
  %8 = load %struct.decNumber*, %struct.decNumber** %fhs.addr, align 8, !dbg !5799
  %bits11 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i32 0, i32 2, !dbg !5799
  %9 = load i8, i8* %bits11, align 4, !dbg !5799
  %conv12 = zext i8 %9 to i32, !dbg !5799
  %and13 = and i32 %conv12, 112, !dbg !5799
  %cmp14 = icmp ne i32 %and13, 0, !dbg !5799
  br i1 %cmp14, label %if.end, label %land.lhs.true16, !dbg !5800

land.lhs.true16:                                  ; preds = %lor.lhs.false10
  %10 = load %struct.decNumber*, %struct.decNumber** %fhs.addr, align 8, !dbg !5801
  %11 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !5802
  %call17 = call i32 @decCheckMath(%struct.decNumber* %10, %struct.decContext* %11, i32* %status), !dbg !5803
  %tobool18 = icmp ne i32 %call17, 0, !dbg !5803
  br i1 %tobool18, label %if.then, label %if.end, !dbg !5804

if.then:                                          ; preds = %land.lhs.true16, %land.lhs.true7, %land.lhs.true
  br label %do.end, !dbg !5805

if.end:                                           ; preds = %land.lhs.true16, %lor.lhs.false10
  %12 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !5806
  %13 = bitcast %struct.decContext* %dcmul to i8*, !dbg !5807
  %14 = bitcast %struct.decContext* %12 to i8*, !dbg !5807
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 28, i1 false), !dbg !5807
  %15 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !5808
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %15, i32 0, i32 0, !dbg !5809
  %16 = load i32, i32* %digits, align 4, !dbg !5809
  %17 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5810
  %digits19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %17, i32 0, i32 0, !dbg !5811
  %18 = load i32, i32* %digits19, align 4, !dbg !5811
  %add = add nsw i32 %16, %18, !dbg !5812
  %digits20 = getelementptr inbounds %struct.decContext, %struct.decContext* %dcmul, i32 0, i32 0, !dbg !5813
  store i32 %add, i32* %digits20, align 4, !dbg !5814
  %emax = getelementptr inbounds %struct.decContext, %struct.decContext* %dcmul, i32 0, i32 1, !dbg !5815
  store i32 999999999, i32* %emax, align 4, !dbg !5816
  %emin = getelementptr inbounds %struct.decContext, %struct.decContext* %dcmul, i32 0, i32 2, !dbg !5817
  store i32 -999999999, i32* %emin, align 4, !dbg !5818
  %arraydecay = getelementptr inbounds [5 x %struct.decNumber], [5 x %struct.decNumber]* %bufa, i64 0, i64 0, !dbg !5819
  store %struct.decNumber* %arraydecay, %struct.decNumber** %acc, align 8, !dbg !5820
  %digits21 = getelementptr inbounds %struct.decContext, %struct.decContext* %dcmul, i32 0, i32 0, !dbg !5821
  %19 = load i32, i32* %digits21, align 4, !dbg !5821
  %cmp22 = icmp sle i32 %19, 49, !dbg !5821
  br i1 %cmp22, label %cond.true, label %cond.false, !dbg !5821

cond.true:                                        ; preds = %if.end
  %digits24 = getelementptr inbounds %struct.decContext, %struct.decContext* %dcmul, i32 0, i32 0, !dbg !5821
  %20 = load i32, i32* %digits24, align 4, !dbg !5821
  %idxprom = sext i32 %20 to i64, !dbg !5821
  %arrayidx = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom, !dbg !5821
  %21 = load i8, i8* %arrayidx, align 1, !dbg !5821
  %conv25 = zext i8 %21 to i32, !dbg !5821
  br label %cond.end, !dbg !5821

cond.false:                                       ; preds = %if.end
  %digits26 = getelementptr inbounds %struct.decContext, %struct.decContext* %dcmul, i32 0, i32 0, !dbg !5821
  %22 = load i32, i32* %digits26, align 4, !dbg !5821
  %add27 = add nsw i32 %22, 3, !dbg !5821
  %sub = sub nsw i32 %add27, 1, !dbg !5821
  %div = sdiv i32 %sub, 3, !dbg !5821
  br label %cond.end, !dbg !5821

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv25, %cond.true ], [ %div, %cond.false ], !dbg !5821
  %sub28 = sub nsw i32 %cond, 1, !dbg !5822
  %conv29 = sext i32 %sub28 to i64, !dbg !5823
  %mul = mul i64 %conv29, 2, !dbg !5824
  %add30 = add i64 12, %mul, !dbg !5825
  %conv31 = trunc i64 %add30 to i32, !dbg !5826
  store i32 %conv31, i32* %needbytes, align 4, !dbg !5827
  %23 = load i32, i32* %needbytes, align 4, !dbg !5828
  %conv32 = zext i32 %23 to i64, !dbg !5828
  %cmp33 = icmp ugt i64 %conv32, 60, !dbg !5830
  br i1 %cmp33, label %if.then35, label %if.end42, !dbg !5831

if.then35:                                        ; preds = %cond.end
  %24 = load i32, i32* %needbytes, align 4, !dbg !5832
  %conv36 = zext i32 %24 to i64, !dbg !5832
  %call37 = call noalias i8* @malloc(i64 %conv36) #6, !dbg !5834
  %25 = bitcast i8* %call37 to %struct.decNumber*, !dbg !5835
  store %struct.decNumber* %25, %struct.decNumber** %allocbufa, align 8, !dbg !5836
  %26 = load %struct.decNumber*, %struct.decNumber** %allocbufa, align 8, !dbg !5837
  %cmp38 = icmp eq %struct.decNumber* %26, null, !dbg !5839
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !5840

if.then40:                                        ; preds = %if.then35
  %27 = load i32, i32* %status, align 4, !dbg !5841
  %or = or i32 %27, 16, !dbg !5841
  store i32 %or, i32* %status, align 4, !dbg !5841
  br label %do.end, !dbg !5843

if.end41:                                         ; preds = %if.then35
  %28 = load %struct.decNumber*, %struct.decNumber** %allocbufa, align 8, !dbg !5844
  store %struct.decNumber* %28, %struct.decNumber** %acc, align 8, !dbg !5845
  br label %if.end42, !dbg !5846

if.end42:                                         ; preds = %if.end41, %cond.end
  %29 = load %struct.decNumber*, %struct.decNumber** %acc, align 8, !dbg !5847
  %30 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !5848
  %31 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5849
  %call43 = call %struct.decNumber* @decMultiplyOp(%struct.decNumber* %29, %struct.decNumber* %30, %struct.decNumber* %31, %struct.decContext* %dcmul, i32* %status), !dbg !5850
  %32 = load i32, i32* %status, align 4, !dbg !5851
  %and44 = and i32 %32, 128, !dbg !5853
  %cmp45 = icmp ne i32 %and44, 0, !dbg !5854
  br i1 %cmp45, label %if.then47, label %if.end55, !dbg !5855

if.then47:                                        ; preds = %if.end42
  %33 = load i32, i32* %status, align 4, !dbg !5856
  %and48 = and i32 %33, 1073741824, !dbg !5859
  %tobool49 = icmp ne i32 %and48, 0, !dbg !5859
  br i1 %tobool49, label %if.end53, label %if.then50, !dbg !5860

if.then50:                                        ; preds = %if.then47
  %34 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5861
  %call51 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %34), !dbg !5863
  %35 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5864
  %bits52 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %35, i32 0, i32 2, !dbg !5865
  store i8 32, i8* %bits52, align 4, !dbg !5866
  br label %do.end, !dbg !5867

if.end53:                                         ; preds = %if.then47
  %call54 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %dzero), !dbg !5868
  store %struct.decNumber* %dzero, %struct.decNumber** %fhs.addr, align 8, !dbg !5869
  br label %if.end55, !dbg !5870

if.end55:                                         ; preds = %if.end53, %if.end42
  %36 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5871
  %37 = load %struct.decNumber*, %struct.decNumber** %acc, align 8, !dbg !5872
  %38 = load %struct.decNumber*, %struct.decNumber** %fhs.addr, align 8, !dbg !5873
  %39 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !5874
  %call56 = call %struct.decNumber* @decAddOp(%struct.decNumber* %36, %struct.decNumber* %37, %struct.decNumber* %38, %struct.decContext* %39, i8 zeroext 0, i32* %status), !dbg !5875
  br label %do.end, !dbg !5876

do.end:                                           ; preds = %if.end55, %if.then50, %if.then40, %if.then
  %40 = load %struct.decNumber*, %struct.decNumber** %allocbufa, align 8, !dbg !5877
  %cmp57 = icmp ne %struct.decNumber* %40, null, !dbg !5879
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !5880

if.then59:                                        ; preds = %do.end
  %41 = load %struct.decNumber*, %struct.decNumber** %allocbufa, align 8, !dbg !5881
  %42 = bitcast %struct.decNumber* %41 to i8*, !dbg !5881
  call void @free(i8* %42) #6, !dbg !5882
  br label %if.end60, !dbg !5882

if.end60:                                         ; preds = %if.then59, %do.end
  %43 = load i32, i32* %status, align 4, !dbg !5883
  %cmp61 = icmp ne i32 %43, 0, !dbg !5885
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !5886

if.then63:                                        ; preds = %if.end60
  %44 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5887
  %45 = load i32, i32* %status, align 4, !dbg !5888
  %46 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !5889
  call void @decStatus(%struct.decNumber* %44, i32 %45, %struct.decContext* %46), !dbg !5890
  br label %if.end64, !dbg !5890

if.end64:                                         ; preds = %if.then63, %if.end60
  %47 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !5891
  ret %struct.decNumber* %47, !dbg !5892
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline nounwind uwtable
define internal %struct.decNumber* @decMultiplyOp(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set, i32* %status) #0 !dbg !5893 {
entry:
  %retval = alloca %struct.decNumber*, align 8
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status.addr = alloca i32*, align 8
  %accunits = alloca i32, align 4
  %exponent = alloca i32, align 4
  %residue = alloca i32, align 4
  %bits = alloca i8, align 1
  %acc = alloca i16*, align 8
  %needbytes = alloca i32, align 4
  %allocacc = alloca i8*, align 8
  %accbuff = alloca [49 x i16], align 16
  %mer = alloca i16*, align 8
  %mermsup = alloca i16*, align 8
  %madlength = alloca i32, align 4
  %shift = alloca i32, align 4
  %zlhibuff = alloca [10 x i32], align 16
  %zlhi = alloca i32*, align 8
  %alloclhi = alloca i32*, align 8
  %zrhibuff = alloca [10 x i32], align 16
  %zrhi = alloca i32*, align 8
  %allocrhi = alloca i32*, align 8
  %zaccbuff = alloca [20 x i64], align 16
  %zacc = alloca i64*, align 8
  %lip = alloca i32*, align 8
  %rip = alloca i32*, align 8
  %lmsi = alloca i32*, align 8
  %rmsi = alloca i32*, align 8
  %ilhs = alloca i32, align 4
  %irhs = alloca i32, align 4
  %iacc = alloca i32, align 4
  %lazy = alloca i32, align 4
  %lcarry = alloca i64, align 8
  %carry = alloca i32, align 4
  %count = alloca i32, align 4
  %cup = alloca i16*, align 8
  %up = alloca i16*, align 8
  %lp = alloca i64*, align 8
  %p = alloca i32, align 4
  %hold = alloca %struct.decNumber*, align 8
  %carry2 = alloca i32, align 4
  %item = alloca i32, align 4
  %part = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !5896, metadata !DIExpression()), !dbg !5897
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !5898, metadata !DIExpression()), !dbg !5899
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !5900, metadata !DIExpression()), !dbg !5901
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !5902, metadata !DIExpression()), !dbg !5903
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !5904, metadata !DIExpression()), !dbg !5905
  call void @llvm.dbg.declare(metadata i32* %accunits, metadata !5906, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.declare(metadata i32* %exponent, metadata !5908, metadata !DIExpression()), !dbg !5909
  call void @llvm.dbg.declare(metadata i32* %residue, metadata !5910, metadata !DIExpression()), !dbg !5911
  store i32 0, i32* %residue, align 4, !dbg !5911
  call void @llvm.dbg.declare(metadata i8* %bits, metadata !5912, metadata !DIExpression()), !dbg !5913
  call void @llvm.dbg.declare(metadata i16** %acc, metadata !5914, metadata !DIExpression()), !dbg !5915
  call void @llvm.dbg.declare(metadata i32* %needbytes, metadata !5916, metadata !DIExpression()), !dbg !5917
  call void @llvm.dbg.declare(metadata i8** %allocacc, metadata !5918, metadata !DIExpression()), !dbg !5919
  store i8* null, i8** %allocacc, align 8, !dbg !5919
  call void @llvm.dbg.declare(metadata [49 x i16]* %accbuff, metadata !5920, metadata !DIExpression()), !dbg !5924
  call void @llvm.dbg.declare(metadata i16** %mer, metadata !5925, metadata !DIExpression()), !dbg !5926
  call void @llvm.dbg.declare(metadata i16** %mermsup, metadata !5927, metadata !DIExpression()), !dbg !5928
  call void @llvm.dbg.declare(metadata i32* %madlength, metadata !5929, metadata !DIExpression()), !dbg !5930
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !5931, metadata !DIExpression()), !dbg !5932
  call void @llvm.dbg.declare(metadata [10 x i32]* %zlhibuff, metadata !5933, metadata !DIExpression()), !dbg !5935
  call void @llvm.dbg.declare(metadata i32** %zlhi, metadata !5936, metadata !DIExpression()), !dbg !5937
  %arraydecay = getelementptr inbounds [10 x i32], [10 x i32]* %zlhibuff, i64 0, i64 0, !dbg !5938
  store i32* %arraydecay, i32** %zlhi, align 8, !dbg !5937
  call void @llvm.dbg.declare(metadata i32** %alloclhi, metadata !5939, metadata !DIExpression()), !dbg !5940
  store i32* null, i32** %alloclhi, align 8, !dbg !5940
  call void @llvm.dbg.declare(metadata [10 x i32]* %zrhibuff, metadata !5941, metadata !DIExpression()), !dbg !5942
  call void @llvm.dbg.declare(metadata i32** %zrhi, metadata !5943, metadata !DIExpression()), !dbg !5944
  %arraydecay1 = getelementptr inbounds [10 x i32], [10 x i32]* %zrhibuff, i64 0, i64 0, !dbg !5945
  store i32* %arraydecay1, i32** %zrhi, align 8, !dbg !5944
  call void @llvm.dbg.declare(metadata i32** %allocrhi, metadata !5946, metadata !DIExpression()), !dbg !5947
  store i32* null, i32** %allocrhi, align 8, !dbg !5947
  call void @llvm.dbg.declare(metadata [20 x i64]* %zaccbuff, metadata !5948, metadata !DIExpression()), !dbg !5952
  call void @llvm.dbg.declare(metadata i64** %zacc, metadata !5953, metadata !DIExpression()), !dbg !5954
  %arraydecay2 = getelementptr inbounds [20 x i64], [20 x i64]* %zaccbuff, i64 0, i64 0, !dbg !5955
  store i64* %arraydecay2, i64** %zacc, align 8, !dbg !5954
  call void @llvm.dbg.declare(metadata i32** %lip, metadata !5956, metadata !DIExpression()), !dbg !5957
  call void @llvm.dbg.declare(metadata i32** %rip, metadata !5958, metadata !DIExpression()), !dbg !5959
  call void @llvm.dbg.declare(metadata i32** %lmsi, metadata !5960, metadata !DIExpression()), !dbg !5961
  call void @llvm.dbg.declare(metadata i32** %rmsi, metadata !5962, metadata !DIExpression()), !dbg !5963
  call void @llvm.dbg.declare(metadata i32* %ilhs, metadata !5964, metadata !DIExpression()), !dbg !5965
  call void @llvm.dbg.declare(metadata i32* %irhs, metadata !5966, metadata !DIExpression()), !dbg !5967
  call void @llvm.dbg.declare(metadata i32* %iacc, metadata !5968, metadata !DIExpression()), !dbg !5969
  call void @llvm.dbg.declare(metadata i32* %lazy, metadata !5970, metadata !DIExpression()), !dbg !5971
  call void @llvm.dbg.declare(metadata i64* %lcarry, metadata !5972, metadata !DIExpression()), !dbg !5973
  call void @llvm.dbg.declare(metadata i32* %carry, metadata !5974, metadata !DIExpression()), !dbg !5975
  call void @llvm.dbg.declare(metadata i32* %count, metadata !5976, metadata !DIExpression()), !dbg !5977
  call void @llvm.dbg.declare(metadata i16** %cup, metadata !5978, metadata !DIExpression()), !dbg !5979
  call void @llvm.dbg.declare(metadata i16** %up, metadata !5980, metadata !DIExpression()), !dbg !5981
  call void @llvm.dbg.declare(metadata i64** %lp, metadata !5982, metadata !DIExpression()), !dbg !5983
  call void @llvm.dbg.declare(metadata i32* %p, metadata !5984, metadata !DIExpression()), !dbg !5985
  %0 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !5986
  %bits3 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 2, !dbg !5987
  %1 = load i8, i8* %bits3, align 4, !dbg !5987
  %conv = zext i8 %1 to i32, !dbg !5986
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5988
  %bits4 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 2, !dbg !5989
  %3 = load i8, i8* %bits4, align 4, !dbg !5989
  %conv5 = zext i8 %3 to i32, !dbg !5988
  %xor = xor i32 %conv, %conv5, !dbg !5990
  %and = and i32 %xor, 128, !dbg !5991
  %conv6 = trunc i32 %and to i8, !dbg !5992
  store i8 %conv6, i8* %bits, align 1, !dbg !5993
  %4 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !5994
  %bits7 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 2, !dbg !5994
  %5 = load i8, i8* %bits7, align 4, !dbg !5994
  %conv8 = zext i8 %5 to i32, !dbg !5994
  %6 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5994
  %bits9 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %6, i32 0, i32 2, !dbg !5994
  %7 = load i8, i8* %bits9, align 4, !dbg !5994
  %conv10 = zext i8 %7 to i32, !dbg !5994
  %or = or i32 %conv8, %conv10, !dbg !5994
  %and11 = and i32 %or, 112, !dbg !5994
  %tobool = icmp ne i32 %and11, 0, !dbg !5994
  br i1 %tobool, label %if.then, label %if.end67, !dbg !5996

if.then:                                          ; preds = %entry
  %8 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !5997
  %bits12 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i32 0, i32 2, !dbg !5997
  %9 = load i8, i8* %bits12, align 4, !dbg !5997
  %conv13 = zext i8 %9 to i32, !dbg !5997
  %10 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !5997
  %bits14 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %10, i32 0, i32 2, !dbg !5997
  %11 = load i8, i8* %bits14, align 4, !dbg !5997
  %conv15 = zext i8 %11 to i32, !dbg !5997
  %or16 = or i32 %conv13, %conv15, !dbg !5997
  %and17 = and i32 %or16, 112, !dbg !5997
  %and18 = and i32 %and17, 48, !dbg !6000
  %tobool19 = icmp ne i32 %and18, 0, !dbg !6000
  br i1 %tobool19, label %if.then20, label %if.end, !dbg !6001

if.then20:                                        ; preds = %if.then
  %12 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6002
  %13 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !6004
  %14 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6005
  %15 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !6006
  %16 = load i32*, i32** %status.addr, align 8, !dbg !6007
  %call = call %struct.decNumber* @decNaNs(%struct.decNumber* %12, %struct.decNumber* %13, %struct.decNumber* %14, %struct.decContext* %15, i32* %16), !dbg !6008
  %17 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6009
  store %struct.decNumber* %17, %struct.decNumber** %retval, align 8, !dbg !6010
  br label %return, !dbg !6010

if.end:                                           ; preds = %if.then
  %18 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !6011
  %bits21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %18, i32 0, i32 2, !dbg !6013
  %19 = load i8, i8* %bits21, align 4, !dbg !6013
  %conv22 = zext i8 %19 to i32, !dbg !6011
  %and23 = and i32 %conv22, 64, !dbg !6014
  %cmp = icmp eq i32 %and23, 0, !dbg !6015
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !6016

land.lhs.true:                                    ; preds = %if.end
  %20 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !6017
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %20, i32 0, i32 3, !dbg !6017
  %arraydecay25 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !6017
  %21 = load i16, i16* %arraydecay25, align 2, !dbg !6017
  %conv26 = zext i16 %21 to i32, !dbg !6017
  %cmp27 = icmp eq i32 %conv26, 0, !dbg !6017
  br i1 %cmp27, label %land.lhs.true29, label %lor.lhs.false, !dbg !6017

land.lhs.true29:                                  ; preds = %land.lhs.true
  %22 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !6017
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %22, i32 0, i32 0, !dbg !6017
  %23 = load i32, i32* %digits, align 4, !dbg !6017
  %cmp30 = icmp eq i32 %23, 1, !dbg !6017
  br i1 %cmp30, label %land.lhs.true32, label %lor.lhs.false, !dbg !6017

land.lhs.true32:                                  ; preds = %land.lhs.true29
  %24 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !6017
  %bits33 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %24, i32 0, i32 2, !dbg !6017
  %25 = load i8, i8* %bits33, align 4, !dbg !6017
  %conv34 = zext i8 %25 to i32, !dbg !6017
  %and35 = and i32 %conv34, 112, !dbg !6017
  %cmp36 = icmp eq i32 %and35, 0, !dbg !6017
  br i1 %cmp36, label %if.then59, label %lor.lhs.false, !dbg !6018

lor.lhs.false:                                    ; preds = %land.lhs.true32, %land.lhs.true29, %land.lhs.true, %if.end
  %26 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6019
  %bits38 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %26, i32 0, i32 2, !dbg !6020
  %27 = load i8, i8* %bits38, align 4, !dbg !6020
  %conv39 = zext i8 %27 to i32, !dbg !6019
  %and40 = and i32 %conv39, 64, !dbg !6021
  %cmp41 = icmp eq i32 %and40, 0, !dbg !6022
  br i1 %cmp41, label %land.lhs.true43, label %if.end61, !dbg !6023

land.lhs.true43:                                  ; preds = %lor.lhs.false
  %28 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6024
  %lsu44 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %28, i32 0, i32 3, !dbg !6024
  %arraydecay45 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu44, i64 0, i64 0, !dbg !6024
  %29 = load i16, i16* %arraydecay45, align 2, !dbg !6024
  %conv46 = zext i16 %29 to i32, !dbg !6024
  %cmp47 = icmp eq i32 %conv46, 0, !dbg !6024
  br i1 %cmp47, label %land.lhs.true49, label %if.end61, !dbg !6024

land.lhs.true49:                                  ; preds = %land.lhs.true43
  %30 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6024
  %digits50 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %30, i32 0, i32 0, !dbg !6024
  %31 = load i32, i32* %digits50, align 4, !dbg !6024
  %cmp51 = icmp eq i32 %31, 1, !dbg !6024
  br i1 %cmp51, label %land.lhs.true53, label %if.end61, !dbg !6024

land.lhs.true53:                                  ; preds = %land.lhs.true49
  %32 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6024
  %bits54 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %32, i32 0, i32 2, !dbg !6024
  %33 = load i8, i8* %bits54, align 4, !dbg !6024
  %conv55 = zext i8 %33 to i32, !dbg !6024
  %and56 = and i32 %conv55, 112, !dbg !6024
  %cmp57 = icmp eq i32 %and56, 0, !dbg !6024
  br i1 %cmp57, label %if.then59, label %if.end61, !dbg !6025

if.then59:                                        ; preds = %land.lhs.true53, %land.lhs.true32
  %34 = load i32*, i32** %status.addr, align 8, !dbg !6026
  %35 = load i32, i32* %34, align 4, !dbg !6028
  %or60 = or i32 %35, 128, !dbg !6028
  store i32 %or60, i32* %34, align 4, !dbg !6028
  %36 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6029
  store %struct.decNumber* %36, %struct.decNumber** %retval, align 8, !dbg !6030
  br label %return, !dbg !6030

if.end61:                                         ; preds = %land.lhs.true53, %land.lhs.true49, %land.lhs.true43, %lor.lhs.false
  %37 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6031
  %call62 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %37), !dbg !6032
  %38 = load i8, i8* %bits, align 1, !dbg !6033
  %conv63 = zext i8 %38 to i32, !dbg !6033
  %or64 = or i32 %conv63, 64, !dbg !6034
  %conv65 = trunc i32 %or64 to i8, !dbg !6033
  %39 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6035
  %bits66 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %39, i32 0, i32 2, !dbg !6036
  store i8 %conv65, i8* %bits66, align 4, !dbg !6037
  %40 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6038
  store %struct.decNumber* %40, %struct.decNumber** %retval, align 8, !dbg !6039
  br label %return, !dbg !6039

if.end67:                                         ; preds = %entry
  %41 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !6040
  %digits68 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %41, i32 0, i32 0, !dbg !6042
  %42 = load i32, i32* %digits68, align 4, !dbg !6042
  %43 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6043
  %digits69 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %43, i32 0, i32 0, !dbg !6044
  %44 = load i32, i32* %digits69, align 4, !dbg !6044
  %cmp70 = icmp slt i32 %42, %44, !dbg !6045
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !6046

if.then72:                                        ; preds = %if.end67
  call void @llvm.dbg.declare(metadata %struct.decNumber** %hold, metadata !6047, metadata !DIExpression()), !dbg !6049
  %45 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !6050
  store %struct.decNumber* %45, %struct.decNumber** %hold, align 8, !dbg !6049
  %46 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6051
  store %struct.decNumber* %46, %struct.decNumber** %lhs.addr, align 8, !dbg !6052
  %47 = load %struct.decNumber*, %struct.decNumber** %hold, align 8, !dbg !6053
  store %struct.decNumber* %47, %struct.decNumber** %rhs.addr, align 8, !dbg !6054
  br label %if.end73, !dbg !6055

if.end73:                                         ; preds = %if.then72, %if.end67
  br label %do.body, !dbg !6056

do.body:                                          ; preds = %if.end73
  %48 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6057
  %digits74 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %48, i32 0, i32 0, !dbg !6060
  %49 = load i32, i32* %digits74, align 4, !dbg !6060
  %cmp75 = icmp sgt i32 %49, 6, !dbg !6061
  br i1 %cmp75, label %if.then77, label %if.else270, !dbg !6062

if.then77:                                        ; preds = %do.body
  %50 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !6063
  %digits78 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %50, i32 0, i32 0, !dbg !6065
  %51 = load i32, i32* %digits78, align 4, !dbg !6065
  %add = add nsw i32 %51, 9, !dbg !6066
  %sub = sub nsw i32 %add, 1, !dbg !6067
  %div = sdiv i32 %sub, 9, !dbg !6068
  store i32 %div, i32* %ilhs, align 4, !dbg !6069
  %52 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6070
  %digits79 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %52, i32 0, i32 0, !dbg !6071
  %53 = load i32, i32* %digits79, align 4, !dbg !6071
  %add80 = add nsw i32 %53, 9, !dbg !6072
  %sub81 = sub nsw i32 %add80, 1, !dbg !6073
  %div82 = sdiv i32 %sub81, 9, !dbg !6074
  store i32 %div82, i32* %irhs, align 4, !dbg !6075
  %54 = load i32, i32* %ilhs, align 4, !dbg !6076
  %55 = load i32, i32* %irhs, align 4, !dbg !6077
  %add83 = add nsw i32 %54, %55, !dbg !6078
  store i32 %add83, i32* %iacc, align 4, !dbg !6079
  %56 = load i32, i32* %ilhs, align 4, !dbg !6080
  %conv84 = sext i32 %56 to i64, !dbg !6080
  %mul = mul i64 %conv84, 4, !dbg !6081
  %conv85 = trunc i64 %mul to i32, !dbg !6080
  store i32 %conv85, i32* %needbytes, align 4, !dbg !6082
  %57 = load i32, i32* %needbytes, align 4, !dbg !6083
  %cmp86 = icmp sgt i32 %57, 40, !dbg !6085
  br i1 %cmp86, label %if.then88, label %if.end91, !dbg !6086

if.then88:                                        ; preds = %if.then77
  %58 = load i32, i32* %needbytes, align 4, !dbg !6087
  %conv89 = sext i32 %58 to i64, !dbg !6087
  %call90 = call noalias i8* @malloc(i64 %conv89) #6, !dbg !6089
  %59 = bitcast i8* %call90 to i32*, !dbg !6090
  store i32* %59, i32** %alloclhi, align 8, !dbg !6091
  %60 = load i32*, i32** %alloclhi, align 8, !dbg !6092
  store i32* %60, i32** %zlhi, align 8, !dbg !6093
  br label %if.end91, !dbg !6094

if.end91:                                         ; preds = %if.then88, %if.then77
  %61 = load i32, i32* %irhs, align 4, !dbg !6095
  %conv92 = sext i32 %61 to i64, !dbg !6095
  %mul93 = mul i64 %conv92, 4, !dbg !6096
  %conv94 = trunc i64 %mul93 to i32, !dbg !6095
  store i32 %conv94, i32* %needbytes, align 4, !dbg !6097
  %62 = load i32, i32* %needbytes, align 4, !dbg !6098
  %cmp95 = icmp sgt i32 %62, 40, !dbg !6100
  br i1 %cmp95, label %if.then97, label %if.end100, !dbg !6101

if.then97:                                        ; preds = %if.end91
  %63 = load i32, i32* %needbytes, align 4, !dbg !6102
  %conv98 = sext i32 %63 to i64, !dbg !6102
  %call99 = call noalias i8* @malloc(i64 %conv98) #6, !dbg !6104
  %64 = bitcast i8* %call99 to i32*, !dbg !6105
  store i32* %64, i32** %allocrhi, align 8, !dbg !6106
  %65 = load i32*, i32** %allocrhi, align 8, !dbg !6107
  store i32* %65, i32** %zrhi, align 8, !dbg !6108
  br label %if.end100, !dbg !6109

if.end100:                                        ; preds = %if.then97, %if.end91
  %66 = load i32, i32* %iacc, align 4, !dbg !6110
  %conv101 = sext i32 %66 to i64, !dbg !6110
  %mul102 = mul i64 %conv101, 8, !dbg !6111
  %conv103 = trunc i64 %mul102 to i32, !dbg !6110
  store i32 %conv103, i32* %needbytes, align 4, !dbg !6112
  %67 = load i32, i32* %needbytes, align 4, !dbg !6113
  %cmp104 = icmp sgt i32 %67, 160, !dbg !6115
  br i1 %cmp104, label %if.then106, label %if.end109, !dbg !6116

if.then106:                                       ; preds = %if.end100
  %68 = load i32, i32* %needbytes, align 4, !dbg !6117
  %conv107 = sext i32 %68 to i64, !dbg !6117
  %call108 = call noalias i8* @malloc(i64 %conv107) #6, !dbg !6119
  %69 = bitcast i8* %call108 to i64*, !dbg !6120
  %70 = bitcast i64* %69 to i8*, !dbg !6120
  store i8* %70, i8** %allocacc, align 8, !dbg !6121
  %71 = load i8*, i8** %allocacc, align 8, !dbg !6122
  %72 = bitcast i8* %71 to i64*, !dbg !6123
  store i64* %72, i64** %zacc, align 8, !dbg !6124
  br label %if.end109, !dbg !6125

if.end109:                                        ; preds = %if.then106, %if.end100
  %73 = load i32*, i32** %zlhi, align 8, !dbg !6126
  %cmp110 = icmp eq i32* %73, null, !dbg !6128
  br i1 %cmp110, label %if.then118, label %lor.lhs.false112, !dbg !6129

lor.lhs.false112:                                 ; preds = %if.end109
  %74 = load i32*, i32** %zrhi, align 8, !dbg !6130
  %cmp113 = icmp eq i32* %74, null, !dbg !6131
  br i1 %cmp113, label %if.then118, label %lor.lhs.false115, !dbg !6132

lor.lhs.false115:                                 ; preds = %lor.lhs.false112
  %75 = load i64*, i64** %zacc, align 8, !dbg !6133
  %cmp116 = icmp eq i64* %75, null, !dbg !6134
  br i1 %cmp116, label %if.then118, label %if.end120, !dbg !6135

if.then118:                                       ; preds = %lor.lhs.false115, %lor.lhs.false112, %if.end109
  %76 = load i32*, i32** %status.addr, align 8, !dbg !6136
  %77 = load i32, i32* %76, align 4, !dbg !6138
  %or119 = or i32 %77, 16, !dbg !6138
  store i32 %or119, i32* %76, align 4, !dbg !6138
  br label %do.end, !dbg !6139

if.end120:                                        ; preds = %lor.lhs.false115
  %78 = load i64*, i64** %zacc, align 8, !dbg !6140
  %79 = bitcast i64* %78 to i16*, !dbg !6141
  store i16* %79, i16** %acc, align 8, !dbg !6142
  %80 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !6143
  %digits121 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %80, i32 0, i32 0, !dbg !6145
  %81 = load i32, i32* %digits121, align 4, !dbg !6145
  store i32 %81, i32* %count, align 4, !dbg !6146
  %82 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !6147
  %lsu122 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %82, i32 0, i32 3, !dbg !6148
  %arraydecay123 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu122, i64 0, i64 0, !dbg !6147
  store i16* %arraydecay123, i16** %cup, align 8, !dbg !6149
  %83 = load i32*, i32** %zlhi, align 8, !dbg !6150
  store i32* %83, i32** %lip, align 8, !dbg !6151
  br label %for.cond, !dbg !6152

for.cond:                                         ; preds = %for.inc137, %if.end120
  %84 = load i32, i32* %count, align 4, !dbg !6153
  %cmp124 = icmp sgt i32 %84, 0, !dbg !6155
  br i1 %cmp124, label %for.body, label %for.end139, !dbg !6156

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %p, align 4, !dbg !6157
  %85 = load i32*, i32** %lip, align 8, !dbg !6159
  store i32 0, i32* %85, align 4, !dbg !6160
  br label %for.cond126, !dbg !6161

for.cond126:                                      ; preds = %for.inc, %for.body
  %86 = load i32, i32* %p, align 4, !dbg !6162
  %cmp127 = icmp slt i32 %86, 9, !dbg !6164
  br i1 %cmp127, label %land.rhs, label %land.end, !dbg !6165

land.rhs:                                         ; preds = %for.cond126
  %87 = load i32, i32* %count, align 4, !dbg !6166
  %cmp129 = icmp sgt i32 %87, 0, !dbg !6167
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond126
  %88 = phi i1 [ false, %for.cond126 ], [ %cmp129, %land.rhs ], !dbg !6168
  br i1 %88, label %for.body131, label %for.end, !dbg !6169

for.body131:                                      ; preds = %land.end
  %89 = load i16*, i16** %cup, align 8, !dbg !6170
  %90 = load i16, i16* %89, align 2, !dbg !6171
  %conv132 = zext i16 %90 to i32, !dbg !6171
  %91 = load i32, i32* %p, align 4, !dbg !6172
  %idxprom = sext i32 %91 to i64, !dbg !6173
  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom, !dbg !6173
  %92 = load i32, i32* %arrayidx, align 4, !dbg !6173
  %mul133 = mul i32 %conv132, %92, !dbg !6174
  %93 = load i32*, i32** %lip, align 8, !dbg !6175
  %94 = load i32, i32* %93, align 4, !dbg !6176
  %add134 = add i32 %94, %mul133, !dbg !6176
  store i32 %add134, i32* %93, align 4, !dbg !6176
  br label %for.inc, !dbg !6177

for.inc:                                          ; preds = %for.body131
  %95 = load i32, i32* %p, align 4, !dbg !6178
  %add135 = add nsw i32 %95, 3, !dbg !6178
  store i32 %add135, i32* %p, align 4, !dbg !6178
  %96 = load i16*, i16** %cup, align 8, !dbg !6179
  %incdec.ptr = getelementptr inbounds i16, i16* %96, i32 1, !dbg !6179
  store i16* %incdec.ptr, i16** %cup, align 8, !dbg !6179
  %97 = load i32, i32* %count, align 4, !dbg !6180
  %sub136 = sub nsw i32 %97, 3, !dbg !6180
  store i32 %sub136, i32* %count, align 4, !dbg !6180
  br label %for.cond126, !dbg !6181, !llvm.loop !6182

for.end:                                          ; preds = %land.end
  br label %for.inc137, !dbg !6183

for.inc137:                                       ; preds = %for.end
  %98 = load i32*, i32** %lip, align 8, !dbg !6184
  %incdec.ptr138 = getelementptr inbounds i32, i32* %98, i32 1, !dbg !6184
  store i32* %incdec.ptr138, i32** %lip, align 8, !dbg !6184
  br label %for.cond, !dbg !6185, !llvm.loop !6186

for.end139:                                       ; preds = %for.cond
  %99 = load i32*, i32** %lip, align 8, !dbg !6188
  %add.ptr = getelementptr inbounds i32, i32* %99, i64 -1, !dbg !6189
  store i32* %add.ptr, i32** %lmsi, align 8, !dbg !6190
  %100 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6191
  %digits140 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %100, i32 0, i32 0, !dbg !6193
  %101 = load i32, i32* %digits140, align 4, !dbg !6193
  store i32 %101, i32* %count, align 4, !dbg !6194
  %102 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6195
  %lsu141 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %102, i32 0, i32 3, !dbg !6196
  %arraydecay142 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu141, i64 0, i64 0, !dbg !6195
  store i16* %arraydecay142, i16** %cup, align 8, !dbg !6197
  %103 = load i32*, i32** %zrhi, align 8, !dbg !6198
  store i32* %103, i32** %rip, align 8, !dbg !6199
  br label %for.cond143, !dbg !6200

for.cond143:                                      ; preds = %for.inc165, %for.end139
  %104 = load i32, i32* %count, align 4, !dbg !6201
  %cmp144 = icmp sgt i32 %104, 0, !dbg !6203
  br i1 %cmp144, label %for.body146, label %for.end167, !dbg !6204

for.body146:                                      ; preds = %for.cond143
  store i32 0, i32* %p, align 4, !dbg !6205
  %105 = load i32*, i32** %rip, align 8, !dbg !6207
  store i32 0, i32* %105, align 4, !dbg !6208
  br label %for.cond147, !dbg !6209

for.cond147:                                      ; preds = %for.inc160, %for.body146
  %106 = load i32, i32* %p, align 4, !dbg !6210
  %cmp148 = icmp slt i32 %106, 9, !dbg !6212
  br i1 %cmp148, label %land.rhs150, label %land.end153, !dbg !6213

land.rhs150:                                      ; preds = %for.cond147
  %107 = load i32, i32* %count, align 4, !dbg !6214
  %cmp151 = icmp sgt i32 %107, 0, !dbg !6215
  br label %land.end153

land.end153:                                      ; preds = %land.rhs150, %for.cond147
  %108 = phi i1 [ false, %for.cond147 ], [ %cmp151, %land.rhs150 ], !dbg !6216
  br i1 %108, label %for.body154, label %for.end164, !dbg !6217

for.body154:                                      ; preds = %land.end153
  %109 = load i16*, i16** %cup, align 8, !dbg !6218
  %110 = load i16, i16* %109, align 2, !dbg !6219
  %conv155 = zext i16 %110 to i32, !dbg !6219
  %111 = load i32, i32* %p, align 4, !dbg !6220
  %idxprom156 = sext i32 %111 to i64, !dbg !6221
  %arrayidx157 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom156, !dbg !6221
  %112 = load i32, i32* %arrayidx157, align 4, !dbg !6221
  %mul158 = mul i32 %conv155, %112, !dbg !6222
  %113 = load i32*, i32** %rip, align 8, !dbg !6223
  %114 = load i32, i32* %113, align 4, !dbg !6224
  %add159 = add i32 %114, %mul158, !dbg !6224
  store i32 %add159, i32* %113, align 4, !dbg !6224
  br label %for.inc160, !dbg !6225

for.inc160:                                       ; preds = %for.body154
  %115 = load i32, i32* %p, align 4, !dbg !6226
  %add161 = add nsw i32 %115, 3, !dbg !6226
  store i32 %add161, i32* %p, align 4, !dbg !6226
  %116 = load i16*, i16** %cup, align 8, !dbg !6227
  %incdec.ptr162 = getelementptr inbounds i16, i16* %116, i32 1, !dbg !6227
  store i16* %incdec.ptr162, i16** %cup, align 8, !dbg !6227
  %117 = load i32, i32* %count, align 4, !dbg !6228
  %sub163 = sub nsw i32 %117, 3, !dbg !6228
  store i32 %sub163, i32* %count, align 4, !dbg !6228
  br label %for.cond147, !dbg !6229, !llvm.loop !6230

for.end164:                                       ; preds = %land.end153
  br label %for.inc165, !dbg !6231

for.inc165:                                       ; preds = %for.end164
  %118 = load i32*, i32** %rip, align 8, !dbg !6232
  %incdec.ptr166 = getelementptr inbounds i32, i32* %118, i32 1, !dbg !6232
  store i32* %incdec.ptr166, i32** %rip, align 8, !dbg !6232
  br label %for.cond143, !dbg !6233, !llvm.loop !6234

for.end167:                                       ; preds = %for.cond143
  %119 = load i32*, i32** %rip, align 8, !dbg !6236
  %add.ptr168 = getelementptr inbounds i32, i32* %119, i64 -1, !dbg !6237
  store i32* %add.ptr168, i32** %rmsi, align 8, !dbg !6238
  %120 = load i64*, i64** %zacc, align 8, !dbg !6239
  store i64* %120, i64** %lp, align 8, !dbg !6241
  br label %for.cond169, !dbg !6242

for.cond169:                                      ; preds = %for.inc174, %for.end167
  %121 = load i64*, i64** %lp, align 8, !dbg !6243
  %122 = load i64*, i64** %zacc, align 8, !dbg !6245
  %123 = load i32, i32* %iacc, align 4, !dbg !6246
  %idx.ext = sext i32 %123 to i64, !dbg !6247
  %add.ptr170 = getelementptr inbounds i64, i64* %122, i64 %idx.ext, !dbg !6247
  %cmp171 = icmp ult i64* %121, %add.ptr170, !dbg !6248
  br i1 %cmp171, label %for.body173, label %for.end176, !dbg !6249

for.body173:                                      ; preds = %for.cond169
  %124 = load i64*, i64** %lp, align 8, !dbg !6250
  store i64 0, i64* %124, align 8, !dbg !6251
  br label %for.inc174, !dbg !6252

for.inc174:                                       ; preds = %for.body173
  %125 = load i64*, i64** %lp, align 8, !dbg !6253
  %incdec.ptr175 = getelementptr inbounds i64, i64* %125, i32 1, !dbg !6253
  store i64* %incdec.ptr175, i64** %lp, align 8, !dbg !6253
  br label %for.cond169, !dbg !6254, !llvm.loop !6255

for.end176:                                       ; preds = %for.cond169
  store i32 18, i32* %lazy, align 4, !dbg !6257
  %126 = load i32*, i32** %zrhi, align 8, !dbg !6258
  store i32* %126, i32** %rip, align 8, !dbg !6260
  br label %for.cond177, !dbg !6261

for.cond177:                                      ; preds = %for.inc238, %for.end176
  %127 = load i32*, i32** %rip, align 8, !dbg !6262
  %128 = load i32*, i32** %rmsi, align 8, !dbg !6264
  %cmp178 = icmp ule i32* %127, %128, !dbg !6265
  br i1 %cmp178, label %for.body180, label %for.end240, !dbg !6266

for.body180:                                      ; preds = %for.cond177
  %129 = load i64*, i64** %zacc, align 8, !dbg !6267
  %130 = load i32*, i32** %rip, align 8, !dbg !6269
  %131 = load i32*, i32** %zrhi, align 8, !dbg !6270
  %sub.ptr.lhs.cast = ptrtoint i32* %130 to i64, !dbg !6271
  %sub.ptr.rhs.cast = ptrtoint i32* %131 to i64, !dbg !6271
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6271
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4, !dbg !6271
  %add.ptr181 = getelementptr inbounds i64, i64* %129, i64 %sub.ptr.div, !dbg !6272
  store i64* %add.ptr181, i64** %lp, align 8, !dbg !6273
  %132 = load i32*, i32** %zlhi, align 8, !dbg !6274
  store i32* %132, i32** %lip, align 8, !dbg !6276
  br label %for.cond182, !dbg !6277

for.cond182:                                      ; preds = %for.inc190, %for.body180
  %133 = load i32*, i32** %lip, align 8, !dbg !6278
  %134 = load i32*, i32** %lmsi, align 8, !dbg !6280
  %cmp183 = icmp ule i32* %133, %134, !dbg !6281
  br i1 %cmp183, label %for.body185, label %for.end193, !dbg !6282

for.body185:                                      ; preds = %for.cond182
  %135 = load i32*, i32** %lip, align 8, !dbg !6283
  %136 = load i32, i32* %135, align 4, !dbg !6285
  %conv186 = zext i32 %136 to i64, !dbg !6286
  %137 = load i32*, i32** %rip, align 8, !dbg !6287
  %138 = load i32, i32* %137, align 4, !dbg !6288
  %conv187 = zext i32 %138 to i64, !dbg !6289
  %mul188 = mul i64 %conv186, %conv187, !dbg !6290
  %139 = load i64*, i64** %lp, align 8, !dbg !6291
  %140 = load i64, i64* %139, align 8, !dbg !6292
  %add189 = add i64 %140, %mul188, !dbg !6292
  store i64 %add189, i64* %139, align 8, !dbg !6292
  br label %for.inc190, !dbg !6293

for.inc190:                                       ; preds = %for.body185
  %141 = load i32*, i32** %lip, align 8, !dbg !6294
  %incdec.ptr191 = getelementptr inbounds i32, i32* %141, i32 1, !dbg !6294
  store i32* %incdec.ptr191, i32** %lip, align 8, !dbg !6294
  %142 = load i64*, i64** %lp, align 8, !dbg !6295
  %incdec.ptr192 = getelementptr inbounds i64, i64* %142, i32 1, !dbg !6295
  store i64* %incdec.ptr192, i64** %lp, align 8, !dbg !6295
  br label %for.cond182, !dbg !6296, !llvm.loop !6297

for.end193:                                       ; preds = %for.cond182
  %143 = load i32, i32* %lazy, align 4, !dbg !6299
  %dec = add nsw i32 %143, -1, !dbg !6299
  store i32 %dec, i32* %lazy, align 4, !dbg !6299
  %144 = load i32, i32* %lazy, align 4, !dbg !6300
  %cmp194 = icmp sgt i32 %144, 0, !dbg !6302
  br i1 %cmp194, label %land.lhs.true196, label %if.end200, !dbg !6303

land.lhs.true196:                                 ; preds = %for.end193
  %145 = load i32*, i32** %rip, align 8, !dbg !6304
  %146 = load i32*, i32** %rmsi, align 8, !dbg !6305
  %cmp197 = icmp ne i32* %145, %146, !dbg !6306
  br i1 %cmp197, label %if.then199, label %if.end200, !dbg !6307

if.then199:                                       ; preds = %land.lhs.true196
  br label %for.inc238, !dbg !6308

if.end200:                                        ; preds = %land.lhs.true196, %for.end193
  store i32 18, i32* %lazy, align 4, !dbg !6309
  %147 = load i64*, i64** %zacc, align 8, !dbg !6310
  store i64* %147, i64** %lp, align 8, !dbg !6312
  br label %for.cond201, !dbg !6313

for.cond201:                                      ; preds = %for.inc235, %if.end200
  %148 = load i64*, i64** %lp, align 8, !dbg !6314
  %149 = load i64*, i64** %zacc, align 8, !dbg !6316
  %150 = load i32, i32* %iacc, align 4, !dbg !6317
  %idx.ext202 = sext i32 %150 to i64, !dbg !6318
  %add.ptr203 = getelementptr inbounds i64, i64* %149, i64 %idx.ext202, !dbg !6318
  %cmp204 = icmp ult i64* %148, %add.ptr203, !dbg !6319
  br i1 %cmp204, label %for.body206, label %for.end237, !dbg !6320

for.body206:                                      ; preds = %for.cond201
  %151 = load i64*, i64** %lp, align 8, !dbg !6321
  %152 = load i64, i64* %151, align 8, !dbg !6324
  %cmp207 = icmp ult i64 %152, 1000000000, !dbg !6325
  br i1 %cmp207, label %if.then209, label %if.end210, !dbg !6326

if.then209:                                       ; preds = %for.body206
  br label %for.inc235, !dbg !6327

if.end210:                                        ; preds = %for.body206
  %153 = load i64*, i64** %lp, align 8, !dbg !6328
  %154 = load i64, i64* %153, align 8, !dbg !6329
  %div211 = udiv i64 %154, 1000000000, !dbg !6330
  store i64 %div211, i64* %lcarry, align 8, !dbg !6331
  %155 = load i64, i64* %lcarry, align 8, !dbg !6332
  %cmp212 = icmp ult i64 %155, 1000000000, !dbg !6334
  br i1 %cmp212, label %if.then214, label %if.else, !dbg !6335

if.then214:                                       ; preds = %if.end210
  %156 = load i64, i64* %lcarry, align 8, !dbg !6336
  %conv215 = trunc i64 %156 to i32, !dbg !6337
  store i32 %conv215, i32* %carry, align 4, !dbg !6338
  br label %if.end228, !dbg !6339

if.else:                                          ; preds = %if.end210
  call void @llvm.dbg.declare(metadata i32* %carry2, metadata !6340, metadata !DIExpression()), !dbg !6342
  %157 = load i64, i64* %lcarry, align 8, !dbg !6343
  %div216 = udiv i64 %157, 1000000000, !dbg !6344
  %conv217 = trunc i64 %div216 to i32, !dbg !6345
  store i32 %conv217, i32* %carry2, align 4, !dbg !6342
  %158 = load i32, i32* %carry2, align 4, !dbg !6346
  %conv218 = zext i32 %158 to i64, !dbg !6346
  %159 = load i64*, i64** %lp, align 8, !dbg !6347
  %add.ptr219 = getelementptr inbounds i64, i64* %159, i64 2, !dbg !6348
  %160 = load i64, i64* %add.ptr219, align 8, !dbg !6349
  %add220 = add i64 %160, %conv218, !dbg !6349
  store i64 %add220, i64* %add.ptr219, align 8, !dbg !6349
  %161 = load i32, i32* %carry2, align 4, !dbg !6350
  %conv221 = zext i32 %161 to i64, !dbg !6350
  %mul222 = mul i64 1000000000000000000, %conv221, !dbg !6351
  %162 = load i64*, i64** %lp, align 8, !dbg !6352
  %163 = load i64, i64* %162, align 8, !dbg !6353
  %sub223 = sub i64 %163, %mul222, !dbg !6353
  store i64 %sub223, i64* %162, align 8, !dbg !6353
  %164 = load i64, i64* %lcarry, align 8, !dbg !6354
  %165 = load i32, i32* %carry2, align 4, !dbg !6355
  %conv224 = zext i32 %165 to i64, !dbg !6355
  %mul225 = mul i64 1000000000, %conv224, !dbg !6356
  %sub226 = sub i64 %164, %mul225, !dbg !6357
  %conv227 = trunc i64 %sub226 to i32, !dbg !6358
  store i32 %conv227, i32* %carry, align 4, !dbg !6359
  br label %if.end228

if.end228:                                        ; preds = %if.else, %if.then214
  %166 = load i32, i32* %carry, align 4, !dbg !6360
  %conv229 = zext i32 %166 to i64, !dbg !6360
  %167 = load i64*, i64** %lp, align 8, !dbg !6361
  %add.ptr230 = getelementptr inbounds i64, i64* %167, i64 1, !dbg !6362
  %168 = load i64, i64* %add.ptr230, align 8, !dbg !6363
  %add231 = add i64 %168, %conv229, !dbg !6363
  store i64 %add231, i64* %add.ptr230, align 8, !dbg !6363
  %169 = load i32, i32* %carry, align 4, !dbg !6364
  %conv232 = zext i32 %169 to i64, !dbg !6364
  %mul233 = mul i64 1000000000, %conv232, !dbg !6365
  %170 = load i64*, i64** %lp, align 8, !dbg !6366
  %171 = load i64, i64* %170, align 8, !dbg !6367
  %sub234 = sub i64 %171, %mul233, !dbg !6367
  store i64 %sub234, i64* %170, align 8, !dbg !6367
  br label %for.inc235, !dbg !6368

for.inc235:                                       ; preds = %if.end228, %if.then209
  %172 = load i64*, i64** %lp, align 8, !dbg !6369
  %incdec.ptr236 = getelementptr inbounds i64, i64* %172, i32 1, !dbg !6369
  store i64* %incdec.ptr236, i64** %lp, align 8, !dbg !6369
  br label %for.cond201, !dbg !6370, !llvm.loop !6371

for.end237:                                       ; preds = %for.cond201
  br label %for.inc238, !dbg !6373

for.inc238:                                       ; preds = %for.end237, %if.then199
  %173 = load i32*, i32** %rip, align 8, !dbg !6374
  %incdec.ptr239 = getelementptr inbounds i32, i32* %173, i32 1, !dbg !6374
  store i32* %incdec.ptr239, i32** %rip, align 8, !dbg !6374
  br label %for.cond177, !dbg !6375, !llvm.loop !6376

for.end240:                                       ; preds = %for.cond177
  %174 = load i64*, i64** %zacc, align 8, !dbg !6378
  store i64* %174, i64** %lp, align 8, !dbg !6380
  %175 = load i16*, i16** %acc, align 8, !dbg !6381
  store i16* %175, i16** %up, align 8, !dbg !6382
  br label %for.cond241, !dbg !6383

for.cond241:                                      ; preds = %for.inc262, %for.end240
  %176 = load i64*, i64** %lp, align 8, !dbg !6384
  %177 = load i64*, i64** %zacc, align 8, !dbg !6386
  %178 = load i32, i32* %iacc, align 4, !dbg !6387
  %idx.ext242 = sext i32 %178 to i64, !dbg !6388
  %add.ptr243 = getelementptr inbounds i64, i64* %177, i64 %idx.ext242, !dbg !6388
  %cmp244 = icmp ult i64* %176, %add.ptr243, !dbg !6389
  br i1 %cmp244, label %for.body246, label %for.end264, !dbg !6390

for.body246:                                      ; preds = %for.cond241
  call void @llvm.dbg.declare(metadata i32* %item, metadata !6391, metadata !DIExpression()), !dbg !6393
  %179 = load i64*, i64** %lp, align 8, !dbg !6394
  %180 = load i64, i64* %179, align 8, !dbg !6395
  %conv247 = trunc i64 %180 to i32, !dbg !6396
  store i32 %conv247, i32* %item, align 4, !dbg !6393
  store i32 0, i32* %p, align 4, !dbg !6397
  br label %for.cond248, !dbg !6399

for.cond248:                                      ; preds = %for.inc256, %for.body246
  %181 = load i32, i32* %p, align 4, !dbg !6400
  %cmp249 = icmp slt i32 %181, 6, !dbg !6402
  br i1 %cmp249, label %for.body251, label %for.end259, !dbg !6403

for.body251:                                      ; preds = %for.cond248
  call void @llvm.dbg.declare(metadata i32* %part, metadata !6404, metadata !DIExpression()), !dbg !6406
  %182 = load i32, i32* %item, align 4, !dbg !6407
  %div252 = udiv i32 %182, 1000, !dbg !6408
  store i32 %div252, i32* %part, align 4, !dbg !6406
  %183 = load i32, i32* %item, align 4, !dbg !6409
  %184 = load i32, i32* %part, align 4, !dbg !6410
  %mul253 = mul i32 %184, 1000, !dbg !6411
  %sub254 = sub i32 %183, %mul253, !dbg !6412
  %conv255 = trunc i32 %sub254 to i16, !dbg !6413
  %185 = load i16*, i16** %up, align 8, !dbg !6414
  store i16 %conv255, i16* %185, align 2, !dbg !6415
  %186 = load i32, i32* %part, align 4, !dbg !6416
  store i32 %186, i32* %item, align 4, !dbg !6417
  br label %for.inc256, !dbg !6418

for.inc256:                                       ; preds = %for.body251
  %187 = load i32, i32* %p, align 4, !dbg !6419
  %add257 = add nsw i32 %187, 3, !dbg !6419
  store i32 %add257, i32* %p, align 4, !dbg !6419
  %188 = load i16*, i16** %up, align 8, !dbg !6420
  %incdec.ptr258 = getelementptr inbounds i16, i16* %188, i32 1, !dbg !6420
  store i16* %incdec.ptr258, i16** %up, align 8, !dbg !6420
  br label %for.cond248, !dbg !6421, !llvm.loop !6422

for.end259:                                       ; preds = %for.cond248
  %189 = load i32, i32* %item, align 4, !dbg !6424
  %conv260 = trunc i32 %189 to i16, !dbg !6425
  %190 = load i16*, i16** %up, align 8, !dbg !6426
  store i16 %conv260, i16* %190, align 2, !dbg !6427
  %191 = load i16*, i16** %up, align 8, !dbg !6428
  %incdec.ptr261 = getelementptr inbounds i16, i16* %191, i32 1, !dbg !6428
  store i16* %incdec.ptr261, i16** %up, align 8, !dbg !6428
  br label %for.inc262, !dbg !6429

for.inc262:                                       ; preds = %for.end259
  %192 = load i64*, i64** %lp, align 8, !dbg !6430
  %incdec.ptr263 = getelementptr inbounds i64, i64* %192, i32 1, !dbg !6430
  store i64* %incdec.ptr263, i64** %lp, align 8, !dbg !6430
  br label %for.cond241, !dbg !6431, !llvm.loop !6432

for.end264:                                       ; preds = %for.cond241
  %193 = load i16*, i16** %up, align 8, !dbg !6434
  %194 = load i16*, i16** %acc, align 8, !dbg !6435
  %sub.ptr.lhs.cast265 = ptrtoint i16* %193 to i64, !dbg !6436
  %sub.ptr.rhs.cast266 = ptrtoint i16* %194 to i64, !dbg !6436
  %sub.ptr.sub267 = sub i64 %sub.ptr.lhs.cast265, %sub.ptr.rhs.cast266, !dbg !6436
  %sub.ptr.div268 = sdiv exact i64 %sub.ptr.sub267, 2, !dbg !6436
  %conv269 = trunc i64 %sub.ptr.div268 to i32, !dbg !6434
  store i32 %conv269, i32* %accunits, align 4, !dbg !6437
  br label %if.end375, !dbg !6438

if.else270:                                       ; preds = %do.body
  %arraydecay271 = getelementptr inbounds [49 x i16], [49 x i16]* %accbuff, i64 0, i64 0, !dbg !6439
  store i16* %arraydecay271, i16** %acc, align 8, !dbg !6441
  %195 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !6442
  %digits272 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %195, i32 0, i32 0, !dbg !6442
  %196 = load i32, i32* %digits272, align 4, !dbg !6442
  %cmp273 = icmp sle i32 %196, 49, !dbg !6442
  br i1 %cmp273, label %cond.true, label %cond.false, !dbg !6442

cond.true:                                        ; preds = %if.else270
  %197 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !6442
  %digits275 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %197, i32 0, i32 0, !dbg !6442
  %198 = load i32, i32* %digits275, align 4, !dbg !6442
  %idxprom276 = sext i32 %198 to i64, !dbg !6442
  %arrayidx277 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom276, !dbg !6442
  %199 = load i8, i8* %arrayidx277, align 1, !dbg !6442
  %conv278 = zext i8 %199 to i32, !dbg !6442
  br label %cond.end, !dbg !6442

cond.false:                                       ; preds = %if.else270
  %200 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !6442
  %digits279 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %200, i32 0, i32 0, !dbg !6442
  %201 = load i32, i32* %digits279, align 4, !dbg !6442
  %add280 = add nsw i32 %201, 3, !dbg !6442
  %sub281 = sub nsw i32 %add280, 1, !dbg !6442
  %div282 = sdiv i32 %sub281, 3, !dbg !6442
  br label %cond.end, !dbg !6442

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv278, %cond.true ], [ %div282, %cond.false ], !dbg !6442
  %202 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6443
  %digits283 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %202, i32 0, i32 0, !dbg !6443
  %203 = load i32, i32* %digits283, align 4, !dbg !6443
  %cmp284 = icmp sle i32 %203, 49, !dbg !6443
  br i1 %cmp284, label %cond.true286, label %cond.false291, !dbg !6443

cond.true286:                                     ; preds = %cond.end
  %204 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6443
  %digits287 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %204, i32 0, i32 0, !dbg !6443
  %205 = load i32, i32* %digits287, align 4, !dbg !6443
  %idxprom288 = sext i32 %205 to i64, !dbg !6443
  %arrayidx289 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom288, !dbg !6443
  %206 = load i8, i8* %arrayidx289, align 1, !dbg !6443
  %conv290 = zext i8 %206 to i32, !dbg !6443
  br label %cond.end296, !dbg !6443

cond.false291:                                    ; preds = %cond.end
  %207 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6443
  %digits292 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %207, i32 0, i32 0, !dbg !6443
  %208 = load i32, i32* %digits292, align 4, !dbg !6443
  %add293 = add nsw i32 %208, 3, !dbg !6443
  %sub294 = sub nsw i32 %add293, 1, !dbg !6443
  %div295 = sdiv i32 %sub294, 3, !dbg !6443
  br label %cond.end296, !dbg !6443

cond.end296:                                      ; preds = %cond.false291, %cond.true286
  %cond297 = phi i32 [ %conv290, %cond.true286 ], [ %div295, %cond.false291 ], !dbg !6443
  %add298 = add nsw i32 %cond, %cond297, !dbg !6444
  %conv299 = sext i32 %add298 to i64, !dbg !6445
  %mul300 = mul i64 %conv299, 2, !dbg !6446
  %conv301 = trunc i64 %mul300 to i32, !dbg !6445
  store i32 %conv301, i32* %needbytes, align 4, !dbg !6447
  %209 = load i32, i32* %needbytes, align 4, !dbg !6448
  %cmp302 = icmp sgt i32 %209, 98, !dbg !6450
  br i1 %cmp302, label %if.then304, label %if.end312, !dbg !6451

if.then304:                                       ; preds = %cond.end296
  %210 = load i32, i32* %needbytes, align 4, !dbg !6452
  %conv305 = sext i32 %210 to i64, !dbg !6452
  %call306 = call noalias i8* @malloc(i64 %conv305) #6, !dbg !6454
  %211 = bitcast i8* %call306 to i16*, !dbg !6455
  %212 = bitcast i16* %211 to i8*, !dbg !6455
  store i8* %212, i8** %allocacc, align 8, !dbg !6456
  %213 = load i8*, i8** %allocacc, align 8, !dbg !6457
  %cmp307 = icmp eq i8* %213, null, !dbg !6459
  br i1 %cmp307, label %if.then309, label %if.end311, !dbg !6460

if.then309:                                       ; preds = %if.then304
  %214 = load i32*, i32** %status.addr, align 8, !dbg !6461
  %215 = load i32, i32* %214, align 4, !dbg !6463
  %or310 = or i32 %215, 16, !dbg !6463
  store i32 %or310, i32* %214, align 4, !dbg !6463
  br label %do.end, !dbg !6464

if.end311:                                        ; preds = %if.then304
  %216 = load i8*, i8** %allocacc, align 8, !dbg !6465
  %217 = bitcast i8* %216 to i16*, !dbg !6466
  store i16* %217, i16** %acc, align 8, !dbg !6467
  br label %if.end312, !dbg !6468

if.end312:                                        ; preds = %if.end311, %cond.end296
  store i32 1, i32* %accunits, align 4, !dbg !6469
  %218 = load i16*, i16** %acc, align 8, !dbg !6470
  store i16 0, i16* %218, align 2, !dbg !6471
  store i32 0, i32* %shift, align 4, !dbg !6472
  %219 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !6473
  %digits313 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %219, i32 0, i32 0, !dbg !6473
  %220 = load i32, i32* %digits313, align 4, !dbg !6473
  %cmp314 = icmp sle i32 %220, 49, !dbg !6473
  br i1 %cmp314, label %cond.true316, label %cond.false321, !dbg !6473

cond.true316:                                     ; preds = %if.end312
  %221 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !6473
  %digits317 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %221, i32 0, i32 0, !dbg !6473
  %222 = load i32, i32* %digits317, align 4, !dbg !6473
  %idxprom318 = sext i32 %222 to i64, !dbg !6473
  %arrayidx319 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom318, !dbg !6473
  %223 = load i8, i8* %arrayidx319, align 1, !dbg !6473
  %conv320 = zext i8 %223 to i32, !dbg !6473
  br label %cond.end326, !dbg !6473

cond.false321:                                    ; preds = %if.end312
  %224 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !6473
  %digits322 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %224, i32 0, i32 0, !dbg !6473
  %225 = load i32, i32* %digits322, align 4, !dbg !6473
  %add323 = add nsw i32 %225, 3, !dbg !6473
  %sub324 = sub nsw i32 %add323, 1, !dbg !6473
  %div325 = sdiv i32 %sub324, 3, !dbg !6473
  br label %cond.end326, !dbg !6473

cond.end326:                                      ; preds = %cond.false321, %cond.true316
  %cond327 = phi i32 [ %conv320, %cond.true316 ], [ %div325, %cond.false321 ], !dbg !6473
  store i32 %cond327, i32* %madlength, align 4, !dbg !6474
  %226 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6475
  %lsu328 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %226, i32 0, i32 3, !dbg !6476
  %arraydecay329 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu328, i64 0, i64 0, !dbg !6475
  %227 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6477
  %digits330 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %227, i32 0, i32 0, !dbg !6477
  %228 = load i32, i32* %digits330, align 4, !dbg !6477
  %cmp331 = icmp sle i32 %228, 49, !dbg !6477
  br i1 %cmp331, label %cond.true333, label %cond.false338, !dbg !6477

cond.true333:                                     ; preds = %cond.end326
  %229 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6477
  %digits334 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %229, i32 0, i32 0, !dbg !6477
  %230 = load i32, i32* %digits334, align 4, !dbg !6477
  %idxprom335 = sext i32 %230 to i64, !dbg !6477
  %arrayidx336 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom335, !dbg !6477
  %231 = load i8, i8* %arrayidx336, align 1, !dbg !6477
  %conv337 = zext i8 %231 to i32, !dbg !6477
  br label %cond.end343, !dbg !6477

cond.false338:                                    ; preds = %cond.end326
  %232 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6477
  %digits339 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %232, i32 0, i32 0, !dbg !6477
  %233 = load i32, i32* %digits339, align 4, !dbg !6477
  %add340 = add nsw i32 %233, 3, !dbg !6477
  %sub341 = sub nsw i32 %add340, 1, !dbg !6477
  %div342 = sdiv i32 %sub341, 3, !dbg !6477
  br label %cond.end343, !dbg !6477

cond.end343:                                      ; preds = %cond.false338, %cond.true333
  %cond344 = phi i32 [ %conv337, %cond.true333 ], [ %div342, %cond.false338 ], !dbg !6477
  %idx.ext345 = sext i32 %cond344 to i64, !dbg !6478
  %add.ptr346 = getelementptr inbounds i16, i16* %arraydecay329, i64 %idx.ext345, !dbg !6478
  store i16* %add.ptr346, i16** %mermsup, align 8, !dbg !6479
  %234 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6480
  %lsu347 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %234, i32 0, i32 3, !dbg !6482
  %arraydecay348 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu347, i64 0, i64 0, !dbg !6480
  store i16* %arraydecay348, i16** %mer, align 8, !dbg !6483
  br label %for.cond349, !dbg !6484

for.cond349:                                      ; preds = %for.inc372, %cond.end343
  %235 = load i16*, i16** %mer, align 8, !dbg !6485
  %236 = load i16*, i16** %mermsup, align 8, !dbg !6487
  %cmp350 = icmp ult i16* %235, %236, !dbg !6488
  br i1 %cmp350, label %for.body352, label %for.end374, !dbg !6489

for.body352:                                      ; preds = %for.cond349
  %237 = load i16*, i16** %mer, align 8, !dbg !6490
  %238 = load i16, i16* %237, align 2, !dbg !6493
  %conv353 = zext i16 %238 to i32, !dbg !6493
  %cmp354 = icmp ne i32 %conv353, 0, !dbg !6494
  br i1 %cmp354, label %if.then356, label %if.else367, !dbg !6495

if.then356:                                       ; preds = %for.body352
  %239 = load i16*, i16** %acc, align 8, !dbg !6496
  %240 = load i32, i32* %shift, align 4, !dbg !6497
  %idxprom357 = sext i32 %240 to i64, !dbg !6496
  %arrayidx358 = getelementptr inbounds i16, i16* %239, i64 %idxprom357, !dbg !6496
  %241 = load i32, i32* %accunits, align 4, !dbg !6498
  %242 = load i32, i32* %shift, align 4, !dbg !6499
  %sub359 = sub nsw i32 %241, %242, !dbg !6500
  %243 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !6501
  %lsu360 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %243, i32 0, i32 3, !dbg !6502
  %arraydecay361 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu360, i64 0, i64 0, !dbg !6501
  %244 = load i32, i32* %madlength, align 4, !dbg !6503
  %245 = load i16*, i16** %acc, align 8, !dbg !6504
  %246 = load i32, i32* %shift, align 4, !dbg !6505
  %idxprom362 = sext i32 %246 to i64, !dbg !6504
  %arrayidx363 = getelementptr inbounds i16, i16* %245, i64 %idxprom362, !dbg !6504
  %247 = load i16*, i16** %mer, align 8, !dbg !6506
  %248 = load i16, i16* %247, align 2, !dbg !6507
  %conv364 = zext i16 %248 to i32, !dbg !6507
  %call365 = call i32 @decUnitAddSub(i16* %arrayidx358, i32 %sub359, i16* %arraydecay361, i32 %244, i32 0, i16* %arrayidx363, i32 %conv364), !dbg !6508
  %249 = load i32, i32* %shift, align 4, !dbg !6509
  %add366 = add nsw i32 %call365, %249, !dbg !6510
  store i32 %add366, i32* %accunits, align 4, !dbg !6511
  br label %if.end370, !dbg !6512

if.else367:                                       ; preds = %for.body352
  %250 = load i16*, i16** %acc, align 8, !dbg !6513
  %251 = load i32, i32* %accunits, align 4, !dbg !6515
  %idx.ext368 = sext i32 %251 to i64, !dbg !6516
  %add.ptr369 = getelementptr inbounds i16, i16* %250, i64 %idx.ext368, !dbg !6516
  store i16 0, i16* %add.ptr369, align 2, !dbg !6517
  %252 = load i32, i32* %accunits, align 4, !dbg !6518
  %inc = add nsw i32 %252, 1, !dbg !6518
  store i32 %inc, i32* %accunits, align 4, !dbg !6518
  br label %if.end370

if.end370:                                        ; preds = %if.else367, %if.then356
  %253 = load i32, i32* %shift, align 4, !dbg !6519
  %inc371 = add nsw i32 %253, 1, !dbg !6519
  store i32 %inc371, i32* %shift, align 4, !dbg !6519
  br label %for.inc372, !dbg !6520

for.inc372:                                       ; preds = %if.end370
  %254 = load i16*, i16** %mer, align 8, !dbg !6521
  %incdec.ptr373 = getelementptr inbounds i16, i16* %254, i32 1, !dbg !6521
  store i16* %incdec.ptr373, i16** %mer, align 8, !dbg !6521
  br label %for.cond349, !dbg !6522, !llvm.loop !6523

for.end374:                                       ; preds = %for.cond349
  br label %if.end375

if.end375:                                        ; preds = %for.end374, %for.end264
  %255 = load i8, i8* %bits, align 1, !dbg !6525
  %256 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6526
  %bits376 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %256, i32 0, i32 2, !dbg !6527
  store i8 %255, i8* %bits376, align 4, !dbg !6528
  %257 = load i16*, i16** %acc, align 8, !dbg !6529
  %258 = load i32, i32* %accunits, align 4, !dbg !6530
  %call377 = call i32 @decGetDigits(i16* %257, i32 %258), !dbg !6531
  %259 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6532
  %digits378 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %259, i32 0, i32 0, !dbg !6533
  store i32 %call377, i32* %digits378, align 4, !dbg !6534
  %260 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !6535
  %exponent379 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %260, i32 0, i32 1, !dbg !6536
  %261 = load i32, i32* %exponent379, align 4, !dbg !6536
  %262 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6537
  %exponent380 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %262, i32 0, i32 1, !dbg !6538
  %263 = load i32, i32* %exponent380, align 4, !dbg !6538
  %add381 = add nsw i32 %261, %263, !dbg !6539
  store i32 %add381, i32* %exponent, align 4, !dbg !6540
  %264 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !6541
  %exponent382 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %264, i32 0, i32 1, !dbg !6543
  %265 = load i32, i32* %exponent382, align 4, !dbg !6543
  %cmp383 = icmp slt i32 %265, 0, !dbg !6544
  br i1 %cmp383, label %land.lhs.true385, label %if.end393, !dbg !6545

land.lhs.true385:                                 ; preds = %if.end375
  %266 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6546
  %exponent386 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %266, i32 0, i32 1, !dbg !6547
  %267 = load i32, i32* %exponent386, align 4, !dbg !6547
  %cmp387 = icmp slt i32 %267, 0, !dbg !6548
  br i1 %cmp387, label %land.lhs.true389, label %if.end393, !dbg !6549

land.lhs.true389:                                 ; preds = %land.lhs.true385
  %268 = load i32, i32* %exponent, align 4, !dbg !6550
  %cmp390 = icmp sgt i32 %268, 0, !dbg !6551
  br i1 %cmp390, label %if.then392, label %if.end393, !dbg !6552

if.then392:                                       ; preds = %land.lhs.true389
  store i32 -1999999998, i32* %exponent, align 4, !dbg !6553
  br label %if.end393, !dbg !6554

if.end393:                                        ; preds = %if.then392, %land.lhs.true389, %land.lhs.true385, %if.end375
  %269 = load i32, i32* %exponent, align 4, !dbg !6555
  %270 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6556
  %exponent394 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %270, i32 0, i32 1, !dbg !6557
  store i32 %269, i32* %exponent394, align 4, !dbg !6558
  %271 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6559
  %272 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !6560
  %273 = load i16*, i16** %acc, align 8, !dbg !6561
  %274 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6562
  %digits395 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %274, i32 0, i32 0, !dbg !6563
  %275 = load i32, i32* %digits395, align 4, !dbg !6563
  %276 = load i32*, i32** %status.addr, align 8, !dbg !6564
  call void @decSetCoeff(%struct.decNumber* %271, %struct.decContext* %272, i16* %273, i32 %275, i32* %residue, i32* %276), !dbg !6565
  %277 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6566
  %278 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !6566
  %279 = load i32*, i32** %status.addr, align 8, !dbg !6566
  call void @decFinalize(%struct.decNumber* %277, %struct.decContext* %278, i32* %residue, i32* %279), !dbg !6566
  br label %do.end, !dbg !6567

do.end:                                           ; preds = %if.end393, %if.then309, %if.then118
  %280 = load i8*, i8** %allocacc, align 8, !dbg !6568
  %cmp396 = icmp ne i8* %280, null, !dbg !6570
  br i1 %cmp396, label %if.then398, label %if.end399, !dbg !6571

if.then398:                                       ; preds = %do.end
  %281 = load i8*, i8** %allocacc, align 8, !dbg !6572
  call void @free(i8* %281) #6, !dbg !6573
  br label %if.end399, !dbg !6573

if.end399:                                        ; preds = %if.then398, %do.end
  %282 = load i32*, i32** %allocrhi, align 8, !dbg !6574
  %cmp400 = icmp ne i32* %282, null, !dbg !6576
  br i1 %cmp400, label %if.then402, label %if.end403, !dbg !6577

if.then402:                                       ; preds = %if.end399
  %283 = load i32*, i32** %allocrhi, align 8, !dbg !6578
  %284 = bitcast i32* %283 to i8*, !dbg !6578
  call void @free(i8* %284) #6, !dbg !6579
  br label %if.end403, !dbg !6579

if.end403:                                        ; preds = %if.then402, %if.end399
  %285 = load i32*, i32** %alloclhi, align 8, !dbg !6580
  %cmp404 = icmp ne i32* %285, null, !dbg !6582
  br i1 %cmp404, label %if.then406, label %if.end407, !dbg !6583

if.then406:                                       ; preds = %if.end403
  %286 = load i32*, i32** %alloclhi, align 8, !dbg !6584
  %287 = bitcast i32* %286 to i8*, !dbg !6584
  call void @free(i8* %287) #6, !dbg !6585
  br label %if.end407, !dbg !6585

if.end407:                                        ; preds = %if.then406, %if.end403
  %288 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6586
  store %struct.decNumber* %288, %struct.decNumber** %retval, align 8, !dbg !6587
  br label %return, !dbg !6587

return:                                           ; preds = %if.end407, %if.end61, %if.then59, %if.then20
  %289 = load %struct.decNumber*, %struct.decNumber** %retval, align 8, !dbg !6588
  ret %struct.decNumber* %289, !dbg !6588
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberInvert(%struct.decNumber* %res, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !6589 {
entry:
  %retval = alloca %struct.decNumber*, align 8
  %res.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %ua = alloca i16*, align 8
  %msua = alloca i16*, align 8
  %uc = alloca i16*, align 8
  %msuc = alloca i16*, align 8
  %msudigs = alloca i32, align 4
  %a = alloca i16, align 2
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !6590, metadata !DIExpression()), !dbg !6591
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !6592, metadata !DIExpression()), !dbg !6593
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !6594, metadata !DIExpression()), !dbg !6595
  call void @llvm.dbg.declare(metadata i16** %ua, metadata !6596, metadata !DIExpression()), !dbg !6597
  call void @llvm.dbg.declare(metadata i16** %msua, metadata !6598, metadata !DIExpression()), !dbg !6599
  call void @llvm.dbg.declare(metadata i16** %uc, metadata !6600, metadata !DIExpression()), !dbg !6601
  call void @llvm.dbg.declare(metadata i16** %msuc, metadata !6602, metadata !DIExpression()), !dbg !6603
  call void @llvm.dbg.declare(metadata i32* %msudigs, metadata !6604, metadata !DIExpression()), !dbg !6605
  %0 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6606
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 1, !dbg !6608
  %1 = load i32, i32* %exponent, align 4, !dbg !6608
  %cmp = icmp ne i32 %1, 0, !dbg !6609
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6610

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6611
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 2, !dbg !6611
  %3 = load i8, i8* %bits, align 4, !dbg !6611
  %conv = zext i8 %3 to i32, !dbg !6611
  %and = and i32 %conv, 112, !dbg !6611
  %cmp1 = icmp ne i32 %and, 0, !dbg !6611
  br i1 %cmp1, label %if.then, label %lor.lhs.false3, !dbg !6612

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %4 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6613
  %bits4 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 2, !dbg !6613
  %5 = load i8, i8* %bits4, align 4, !dbg !6613
  %conv5 = zext i8 %5 to i32, !dbg !6613
  %and6 = and i32 %conv5, 128, !dbg !6613
  %cmp7 = icmp ne i32 %and6, 0, !dbg !6613
  br i1 %cmp7, label %if.then, label %if.end, !dbg !6614

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  %6 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6615
  %7 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !6617
  call void @decStatus(%struct.decNumber* %6, i32 128, %struct.decContext* %7), !dbg !6618
  %8 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6619
  store %struct.decNumber* %8, %struct.decNumber** %retval, align 8, !dbg !6620
  br label %return, !dbg !6620

if.end:                                           ; preds = %lor.lhs.false3
  %9 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6621
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %9, i32 0, i32 3, !dbg !6622
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !6621
  store i16* %arraydecay, i16** %ua, align 8, !dbg !6623
  %10 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6624
  %lsu9 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %10, i32 0, i32 3, !dbg !6625
  %arraydecay10 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu9, i64 0, i64 0, !dbg !6624
  store i16* %arraydecay10, i16** %uc, align 8, !dbg !6626
  %11 = load i16*, i16** %ua, align 8, !dbg !6627
  %12 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6628
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %12, i32 0, i32 0, !dbg !6628
  %13 = load i32, i32* %digits, align 4, !dbg !6628
  %cmp11 = icmp sle i32 %13, 49, !dbg !6628
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !6628

cond.true:                                        ; preds = %if.end
  %14 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6628
  %digits13 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %14, i32 0, i32 0, !dbg !6628
  %15 = load i32, i32* %digits13, align 4, !dbg !6628
  %idxprom = sext i32 %15 to i64, !dbg !6628
  %arrayidx = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom, !dbg !6628
  %16 = load i8, i8* %arrayidx, align 1, !dbg !6628
  %conv14 = zext i8 %16 to i32, !dbg !6628
  br label %cond.end, !dbg !6628

cond.false:                                       ; preds = %if.end
  %17 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6628
  %digits15 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %17, i32 0, i32 0, !dbg !6628
  %18 = load i32, i32* %digits15, align 4, !dbg !6628
  %add = add nsw i32 %18, 3, !dbg !6628
  %sub = sub nsw i32 %add, 1, !dbg !6628
  %div = sdiv i32 %sub, 3, !dbg !6628
  br label %cond.end, !dbg !6628

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv14, %cond.true ], [ %div, %cond.false ], !dbg !6628
  %idx.ext = sext i32 %cond to i64, !dbg !6629
  %add.ptr = getelementptr inbounds i16, i16* %11, i64 %idx.ext, !dbg !6629
  %add.ptr16 = getelementptr inbounds i16, i16* %add.ptr, i64 -1, !dbg !6630
  store i16* %add.ptr16, i16** %msua, align 8, !dbg !6631
  %19 = load i16*, i16** %uc, align 8, !dbg !6632
  %20 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !6633
  %digits17 = getelementptr inbounds %struct.decContext, %struct.decContext* %20, i32 0, i32 0, !dbg !6633
  %21 = load i32, i32* %digits17, align 4, !dbg !6633
  %cmp18 = icmp sle i32 %21, 49, !dbg !6633
  br i1 %cmp18, label %cond.true20, label %cond.false25, !dbg !6633

cond.true20:                                      ; preds = %cond.end
  %22 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !6633
  %digits21 = getelementptr inbounds %struct.decContext, %struct.decContext* %22, i32 0, i32 0, !dbg !6633
  %23 = load i32, i32* %digits21, align 4, !dbg !6633
  %idxprom22 = sext i32 %23 to i64, !dbg !6633
  %arrayidx23 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom22, !dbg !6633
  %24 = load i8, i8* %arrayidx23, align 1, !dbg !6633
  %conv24 = zext i8 %24 to i32, !dbg !6633
  br label %cond.end30, !dbg !6633

cond.false25:                                     ; preds = %cond.end
  %25 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !6633
  %digits26 = getelementptr inbounds %struct.decContext, %struct.decContext* %25, i32 0, i32 0, !dbg !6633
  %26 = load i32, i32* %digits26, align 4, !dbg !6633
  %add27 = add nsw i32 %26, 3, !dbg !6633
  %sub28 = sub nsw i32 %add27, 1, !dbg !6633
  %div29 = sdiv i32 %sub28, 3, !dbg !6633
  br label %cond.end30, !dbg !6633

cond.end30:                                       ; preds = %cond.false25, %cond.true20
  %cond31 = phi i32 [ %conv24, %cond.true20 ], [ %div29, %cond.false25 ], !dbg !6633
  %idx.ext32 = sext i32 %cond31 to i64, !dbg !6634
  %add.ptr33 = getelementptr inbounds i16, i16* %19, i64 %idx.ext32, !dbg !6634
  %add.ptr34 = getelementptr inbounds i16, i16* %add.ptr33, i64 -1, !dbg !6635
  store i16* %add.ptr34, i16** %msuc, align 8, !dbg !6636
  %27 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !6637
  %digits35 = getelementptr inbounds %struct.decContext, %struct.decContext* %27, i32 0, i32 0, !dbg !6637
  %28 = load i32, i32* %digits35, align 4, !dbg !6637
  %29 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !6637
  %digits36 = getelementptr inbounds %struct.decContext, %struct.decContext* %29, i32 0, i32 0, !dbg !6637
  %30 = load i32, i32* %digits36, align 4, !dbg !6637
  %cmp37 = icmp sle i32 %30, 49, !dbg !6637
  br i1 %cmp37, label %cond.true39, label %cond.false44, !dbg !6637

cond.true39:                                      ; preds = %cond.end30
  %31 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !6637
  %digits40 = getelementptr inbounds %struct.decContext, %struct.decContext* %31, i32 0, i32 0, !dbg !6637
  %32 = load i32, i32* %digits40, align 4, !dbg !6637
  %idxprom41 = sext i32 %32 to i64, !dbg !6637
  %arrayidx42 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom41, !dbg !6637
  %33 = load i8, i8* %arrayidx42, align 1, !dbg !6637
  %conv43 = zext i8 %33 to i32, !dbg !6637
  br label %cond.end49, !dbg !6637

cond.false44:                                     ; preds = %cond.end30
  %34 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !6637
  %digits45 = getelementptr inbounds %struct.decContext, %struct.decContext* %34, i32 0, i32 0, !dbg !6637
  %35 = load i32, i32* %digits45, align 4, !dbg !6637
  %add46 = add nsw i32 %35, 3, !dbg !6637
  %sub47 = sub nsw i32 %add46, 1, !dbg !6637
  %div48 = sdiv i32 %sub47, 3, !dbg !6637
  br label %cond.end49, !dbg !6637

cond.end49:                                       ; preds = %cond.false44, %cond.true39
  %cond50 = phi i32 [ %conv43, %cond.true39 ], [ %div48, %cond.false44 ], !dbg !6637
  %sub51 = sub nsw i32 %cond50, 1, !dbg !6637
  %mul = mul nsw i32 %sub51, 3, !dbg !6637
  %sub52 = sub nsw i32 %28, %mul, !dbg !6637
  store i32 %sub52, i32* %msudigs, align 4, !dbg !6638
  br label %for.cond, !dbg !6639

for.cond:                                         ; preds = %for.inc89, %cond.end49
  %36 = load i16*, i16** %uc, align 8, !dbg !6640
  %37 = load i16*, i16** %msuc, align 8, !dbg !6643
  %cmp53 = icmp ule i16* %36, %37, !dbg !6644
  br i1 %cmp53, label %for.body, label %for.end91, !dbg !6645

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16* %a, metadata !6646, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6649, metadata !DIExpression()), !dbg !6650
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6651, metadata !DIExpression()), !dbg !6652
  %38 = load i16*, i16** %ua, align 8, !dbg !6653
  %39 = load i16*, i16** %msua, align 8, !dbg !6655
  %cmp55 = icmp ugt i16* %38, %39, !dbg !6656
  br i1 %cmp55, label %if.then57, label %if.else, !dbg !6657

if.then57:                                        ; preds = %for.body
  store i16 0, i16* %a, align 2, !dbg !6658
  br label %if.end58, !dbg !6659

if.else:                                          ; preds = %for.body
  %40 = load i16*, i16** %ua, align 8, !dbg !6660
  %41 = load i16, i16* %40, align 2, !dbg !6661
  store i16 %41, i16* %a, align 2, !dbg !6662
  br label %if.end58

if.end58:                                         ; preds = %if.else, %if.then57
  %42 = load i16*, i16** %uc, align 8, !dbg !6663
  store i16 0, i16* %42, align 2, !dbg !6664
  store i32 0, i32* %i, align 4, !dbg !6665
  br label %for.cond59, !dbg !6667

for.cond59:                                       ; preds = %for.inc, %if.end58
  %43 = load i32, i32* %i, align 4, !dbg !6668
  %cmp60 = icmp slt i32 %43, 3, !dbg !6670
  br i1 %cmp60, label %for.body62, label %for.end, !dbg !6671

for.body62:                                       ; preds = %for.cond59
  %44 = load i16, i16* %a, align 2, !dbg !6672
  %conv63 = zext i16 %44 to i32, !dbg !6672
  %neg = xor i32 %conv63, -1, !dbg !6675
  %and64 = and i32 %neg, 1, !dbg !6676
  %tobool = icmp ne i32 %and64, 0, !dbg !6676
  br i1 %tobool, label %if.then65, label %if.end73, !dbg !6677

if.then65:                                        ; preds = %for.body62
  %45 = load i16*, i16** %uc, align 8, !dbg !6678
  %46 = load i16, i16* %45, align 2, !dbg !6679
  %conv66 = zext i16 %46 to i32, !dbg !6679
  %47 = load i32, i32* %i, align 4, !dbg !6680
  %idxprom67 = sext i32 %47 to i64, !dbg !6681
  %arrayidx68 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom67, !dbg !6681
  %48 = load i32, i32* %arrayidx68, align 4, !dbg !6681
  %conv69 = trunc i32 %48 to i16, !dbg !6682
  %conv70 = zext i16 %conv69 to i32, !dbg !6682
  %add71 = add nsw i32 %conv66, %conv70, !dbg !6683
  %conv72 = trunc i32 %add71 to i16, !dbg !6679
  %49 = load i16*, i16** %uc, align 8, !dbg !6684
  store i16 %conv72, i16* %49, align 2, !dbg !6685
  br label %if.end73, !dbg !6686

if.end73:                                         ; preds = %if.then65, %for.body62
  %50 = load i16, i16* %a, align 2, !dbg !6687
  %conv74 = zext i16 %50 to i32, !dbg !6687
  %rem = srem i32 %conv74, 10, !dbg !6688
  store i32 %rem, i32* %j, align 4, !dbg !6689
  %51 = load i16, i16* %a, align 2, !dbg !6690
  %conv75 = zext i16 %51 to i32, !dbg !6690
  %div76 = sdiv i32 %conv75, 10, !dbg !6691
  %conv77 = trunc i32 %div76 to i16, !dbg !6690
  store i16 %conv77, i16* %a, align 2, !dbg !6692
  %52 = load i32, i32* %j, align 4, !dbg !6693
  %cmp78 = icmp sgt i32 %52, 1, !dbg !6695
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !6696

if.then80:                                        ; preds = %if.end73
  %53 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6697
  %54 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !6699
  call void @decStatus(%struct.decNumber* %53, i32 128, %struct.decContext* %54), !dbg !6700
  %55 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6701
  store %struct.decNumber* %55, %struct.decNumber** %retval, align 8, !dbg !6702
  br label %return, !dbg !6702

if.end81:                                         ; preds = %if.end73
  %56 = load i16*, i16** %uc, align 8, !dbg !6703
  %57 = load i16*, i16** %msuc, align 8, !dbg !6705
  %cmp82 = icmp eq i16* %56, %57, !dbg !6706
  br i1 %cmp82, label %land.lhs.true, label %if.end88, !dbg !6707

land.lhs.true:                                    ; preds = %if.end81
  %58 = load i32, i32* %i, align 4, !dbg !6708
  %59 = load i32, i32* %msudigs, align 4, !dbg !6709
  %sub84 = sub nsw i32 %59, 1, !dbg !6710
  %cmp85 = icmp eq i32 %58, %sub84, !dbg !6711
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !6712

if.then87:                                        ; preds = %land.lhs.true
  br label %for.end, !dbg !6713

if.end88:                                         ; preds = %land.lhs.true, %if.end81
  br label %for.inc, !dbg !6714

for.inc:                                          ; preds = %if.end88
  %60 = load i32, i32* %i, align 4, !dbg !6715
  %inc = add nsw i32 %60, 1, !dbg !6715
  store i32 %inc, i32* %i, align 4, !dbg !6715
  br label %for.cond59, !dbg !6716, !llvm.loop !6717

for.end:                                          ; preds = %if.then87, %for.cond59
  br label %for.inc89, !dbg !6719

for.inc89:                                        ; preds = %for.end
  %61 = load i16*, i16** %ua, align 8, !dbg !6720
  %incdec.ptr = getelementptr inbounds i16, i16* %61, i32 1, !dbg !6720
  store i16* %incdec.ptr, i16** %ua, align 8, !dbg !6720
  %62 = load i16*, i16** %uc, align 8, !dbg !6721
  %incdec.ptr90 = getelementptr inbounds i16, i16* %62, i32 1, !dbg !6721
  store i16* %incdec.ptr90, i16** %uc, align 8, !dbg !6721
  br label %for.cond, !dbg !6722, !llvm.loop !6723

for.end91:                                        ; preds = %for.cond
  %63 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6725
  %lsu92 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %63, i32 0, i32 3, !dbg !6726
  %arraydecay93 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu92, i64 0, i64 0, !dbg !6725
  %64 = load i16*, i16** %uc, align 8, !dbg !6727
  %65 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6728
  %lsu94 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %65, i32 0, i32 3, !dbg !6729
  %arraydecay95 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu94, i64 0, i64 0, !dbg !6728
  %sub.ptr.lhs.cast = ptrtoint i16* %64 to i64, !dbg !6730
  %sub.ptr.rhs.cast = ptrtoint i16* %arraydecay95 to i64, !dbg !6730
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6730
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2, !dbg !6730
  %conv96 = trunc i64 %sub.ptr.div to i32, !dbg !6727
  %call = call i32 @decGetDigits(i16* %arraydecay93, i32 %conv96), !dbg !6731
  %66 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6732
  %digits97 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %66, i32 0, i32 0, !dbg !6733
  store i32 %call, i32* %digits97, align 4, !dbg !6734
  %67 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6735
  %exponent98 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %67, i32 0, i32 1, !dbg !6736
  store i32 0, i32* %exponent98, align 4, !dbg !6737
  %68 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6738
  %bits99 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %68, i32 0, i32 2, !dbg !6739
  store i8 0, i8* %bits99, align 4, !dbg !6740
  %69 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6741
  store %struct.decNumber* %69, %struct.decNumber** %retval, align 8, !dbg !6742
  br label %return, !dbg !6742

return:                                           ; preds = %for.end91, %if.then80, %if.then
  %70 = load %struct.decNumber*, %struct.decNumber** %retval, align 8, !dbg !6743
  ret %struct.decNumber* %70, !dbg !6743
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberLn(%struct.decNumber* %res, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !6744 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !6745, metadata !DIExpression()), !dbg !6746
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !6747, metadata !DIExpression()), !dbg !6748
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !6749, metadata !DIExpression()), !dbg !6750
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6751, metadata !DIExpression()), !dbg !6752
  store i32 0, i32* %status, align 4, !dbg !6752
  %0 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6753
  %1 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !6755
  %call = call i32 @decCheckMath(%struct.decNumber* %0, %struct.decContext* %1, i32* %status), !dbg !6756
  %tobool = icmp ne i32 %call, 0, !dbg !6756
  br i1 %tobool, label %if.end, label %if.then, !dbg !6757

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6758

do.body:                                          ; preds = %if.then
  %2 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6759
  %3 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6761
  %4 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !6762
  %call1 = call %struct.decNumber* @decLnOp(%struct.decNumber* %2, %struct.decNumber* %3, %struct.decContext* %4, i32* %status), !dbg !6763
  br label %do.end, !dbg !6764

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !6764

if.end:                                           ; preds = %do.end, %entry
  %5 = load i32, i32* %status, align 4, !dbg !6765
  %cmp = icmp ne i32 %5, 0, !dbg !6767
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !6768

if.then2:                                         ; preds = %if.end
  %6 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6769
  %7 = load i32, i32* %status, align 4, !dbg !6770
  %8 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !6771
  call void @decStatus(%struct.decNumber* %6, i32 %7, %struct.decContext* %8), !dbg !6772
  br label %if.end3, !dbg !6772

if.end3:                                          ; preds = %if.then2, %if.end
  %9 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6773
  ret %struct.decNumber* %9, !dbg !6774
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.decNumber* @decLnOp(%struct.decNumber* %res, %struct.decNumber* %rhs, %struct.decContext* %set, i32* %status) #0 !dbg !6775 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status.addr = alloca i32*, align 8
  %ignore = alloca i32, align 4
  %needbytes = alloca i32, align 4
  %residue = alloca i32, align 4
  %r = alloca i32, align 4
  %p = alloca i32, align 4
  %pp = alloca i32, align 4
  %t = alloca i32, align 4
  %bufa = alloca [4 x %struct.decNumber], align 16
  %allocbufa = alloca %struct.decNumber*, align 8
  %a = alloca %struct.decNumber*, align 8
  %bufb = alloca [5 x %struct.decNumber], align 16
  %allocbufb = alloca %struct.decNumber*, align 8
  %b = alloca %struct.decNumber*, align 8
  %numone = alloca %struct.decNumber, align 4
  %cmp = alloca %struct.decNumber, align 4
  %aset = alloca %struct.decContext, align 4
  %bset = alloca %struct.decContext, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !6776, metadata !DIExpression()), !dbg !6777
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !6778, metadata !DIExpression()), !dbg !6779
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !6780, metadata !DIExpression()), !dbg !6781
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !6782, metadata !DIExpression()), !dbg !6783
  call void @llvm.dbg.declare(metadata i32* %ignore, metadata !6784, metadata !DIExpression()), !dbg !6785
  store i32 0, i32* %ignore, align 4, !dbg !6785
  call void @llvm.dbg.declare(metadata i32* %needbytes, metadata !6786, metadata !DIExpression()), !dbg !6787
  call void @llvm.dbg.declare(metadata i32* %residue, metadata !6788, metadata !DIExpression()), !dbg !6789
  call void @llvm.dbg.declare(metadata i32* %r, metadata !6790, metadata !DIExpression()), !dbg !6791
  call void @llvm.dbg.declare(metadata i32* %p, metadata !6792, metadata !DIExpression()), !dbg !6793
  call void @llvm.dbg.declare(metadata i32* %pp, metadata !6794, metadata !DIExpression()), !dbg !6795
  call void @llvm.dbg.declare(metadata i32* %t, metadata !6796, metadata !DIExpression()), !dbg !6797
  call void @llvm.dbg.declare(metadata [4 x %struct.decNumber]* %bufa, metadata !6798, metadata !DIExpression()), !dbg !6802
  call void @llvm.dbg.declare(metadata %struct.decNumber** %allocbufa, metadata !6803, metadata !DIExpression()), !dbg !6804
  store %struct.decNumber* null, %struct.decNumber** %allocbufa, align 8, !dbg !6804
  call void @llvm.dbg.declare(metadata %struct.decNumber** %a, metadata !6805, metadata !DIExpression()), !dbg !6806
  %arraydecay = getelementptr inbounds [4 x %struct.decNumber], [4 x %struct.decNumber]* %bufa, i64 0, i64 0, !dbg !6807
  store %struct.decNumber* %arraydecay, %struct.decNumber** %a, align 8, !dbg !6806
  call void @llvm.dbg.declare(metadata [5 x %struct.decNumber]* %bufb, metadata !6808, metadata !DIExpression()), !dbg !6809
  call void @llvm.dbg.declare(metadata %struct.decNumber** %allocbufb, metadata !6810, metadata !DIExpression()), !dbg !6811
  store %struct.decNumber* null, %struct.decNumber** %allocbufb, align 8, !dbg !6811
  call void @llvm.dbg.declare(metadata %struct.decNumber** %b, metadata !6812, metadata !DIExpression()), !dbg !6813
  %arraydecay1 = getelementptr inbounds [5 x %struct.decNumber], [5 x %struct.decNumber]* %bufb, i64 0, i64 0, !dbg !6814
  store %struct.decNumber* %arraydecay1, %struct.decNumber** %b, align 8, !dbg !6813
  call void @llvm.dbg.declare(metadata %struct.decNumber* %numone, metadata !6815, metadata !DIExpression()), !dbg !6816
  call void @llvm.dbg.declare(metadata %struct.decNumber* %cmp, metadata !6817, metadata !DIExpression()), !dbg !6818
  call void @llvm.dbg.declare(metadata %struct.decContext* %aset, metadata !6819, metadata !DIExpression()), !dbg !6820
  call void @llvm.dbg.declare(metadata %struct.decContext* %bset, metadata !6821, metadata !DIExpression()), !dbg !6822
  br label %do.body, !dbg !6823

do.body:                                          ; preds = %entry
  %0 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6824
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 2, !dbg !6824
  %1 = load i8, i8* %bits, align 4, !dbg !6824
  %conv = zext i8 %1 to i32, !dbg !6824
  %and = and i32 %conv, 112, !dbg !6824
  %tobool = icmp ne i32 %and, 0, !dbg !6824
  br i1 %tobool, label %if.then, label %if.end17, !dbg !6827

if.then:                                          ; preds = %do.body
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6828
  %bits2 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 2, !dbg !6828
  %3 = load i8, i8* %bits2, align 4, !dbg !6828
  %conv3 = zext i8 %3 to i32, !dbg !6828
  %and4 = and i32 %conv3, 64, !dbg !6828
  %cmp5 = icmp ne i32 %and4, 0, !dbg !6828
  br i1 %cmp5, label %if.then7, label %if.else14, !dbg !6831

if.then7:                                         ; preds = %if.then
  %4 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6832
  %bits8 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 2, !dbg !6832
  %5 = load i8, i8* %bits8, align 4, !dbg !6832
  %conv9 = zext i8 %5 to i32, !dbg !6832
  %and10 = and i32 %conv9, 128, !dbg !6832
  %cmp11 = icmp ne i32 %and10, 0, !dbg !6832
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !6835

if.then13:                                        ; preds = %if.then7
  %6 = load i32*, i32** %status.addr, align 8, !dbg !6836
  %7 = load i32, i32* %6, align 4, !dbg !6837
  %or = or i32 %7, 128, !dbg !6837
  store i32 %or, i32* %6, align 4, !dbg !6837
  br label %if.end, !dbg !6838

if.else:                                          ; preds = %if.then7
  %8 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6839
  %9 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6840
  %call = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %8, %struct.decNumber* %9), !dbg !6841
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then13
  br label %if.end16, !dbg !6842

if.else14:                                        ; preds = %if.then
  %10 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6843
  %11 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6844
  %12 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !6845
  %13 = load i32*, i32** %status.addr, align 8, !dbg !6846
  %call15 = call %struct.decNumber* @decNaNs(%struct.decNumber* %10, %struct.decNumber* %11, %struct.decNumber* null, %struct.decContext* %12, i32* %13), !dbg !6847
  br label %if.end16

if.end16:                                         ; preds = %if.else14, %if.end
  br label %do.end, !dbg !6848

if.end17:                                         ; preds = %do.body
  %14 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6849
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %14, i32 0, i32 3, !dbg !6849
  %arraydecay18 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !6849
  %15 = load i16, i16* %arraydecay18, align 2, !dbg !6849
  %conv19 = zext i16 %15 to i32, !dbg !6849
  %cmp20 = icmp eq i32 %conv19, 0, !dbg !6849
  br i1 %cmp20, label %land.lhs.true, label %if.end33, !dbg !6849

land.lhs.true:                                    ; preds = %if.end17
  %16 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6849
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %16, i32 0, i32 0, !dbg !6849
  %17 = load i32, i32* %digits, align 4, !dbg !6849
  %cmp22 = icmp eq i32 %17, 1, !dbg !6849
  br i1 %cmp22, label %land.lhs.true24, label %if.end33, !dbg !6849

land.lhs.true24:                                  ; preds = %land.lhs.true
  %18 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6849
  %bits25 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %18, i32 0, i32 2, !dbg !6849
  %19 = load i8, i8* %bits25, align 4, !dbg !6849
  %conv26 = zext i8 %19 to i32, !dbg !6849
  %and27 = and i32 %conv26, 112, !dbg !6849
  %cmp28 = icmp eq i32 %and27, 0, !dbg !6849
  br i1 %cmp28, label %if.then30, label %if.end33, !dbg !6851

if.then30:                                        ; preds = %land.lhs.true24
  %20 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6852
  %call31 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %20), !dbg !6854
  %21 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6855
  %bits32 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %21, i32 0, i32 2, !dbg !6856
  store i8 -64, i8* %bits32, align 4, !dbg !6857
  br label %do.end, !dbg !6858

if.end33:                                         ; preds = %land.lhs.true24, %land.lhs.true, %if.end17
  %22 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6859
  %bits34 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %22, i32 0, i32 2, !dbg !6859
  %23 = load i8, i8* %bits34, align 4, !dbg !6859
  %conv35 = zext i8 %23 to i32, !dbg !6859
  %and36 = and i32 %conv35, 128, !dbg !6859
  %cmp37 = icmp ne i32 %and36, 0, !dbg !6859
  br i1 %cmp37, label %if.then39, label %if.end41, !dbg !6861

if.then39:                                        ; preds = %if.end33
  %24 = load i32*, i32** %status.addr, align 8, !dbg !6862
  %25 = load i32, i32* %24, align 4, !dbg !6864
  %or40 = or i32 %25, 128, !dbg !6864
  store i32 %or40, i32* %24, align 4, !dbg !6864
  br label %do.end, !dbg !6865

if.end41:                                         ; preds = %if.end33
  %26 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6866
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %26, i32 0, i32 1, !dbg !6868
  %27 = load i32, i32* %exponent, align 4, !dbg !6868
  %cmp42 = icmp eq i32 %27, 0, !dbg !6869
  br i1 %cmp42, label %land.lhs.true44, label %if.end75, !dbg !6870

land.lhs.true44:                                  ; preds = %if.end41
  %28 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !6871
  %digits45 = getelementptr inbounds %struct.decContext, %struct.decContext* %28, i32 0, i32 0, !dbg !6872
  %29 = load i32, i32* %digits45, align 4, !dbg !6872
  %cmp46 = icmp sle i32 %29, 40, !dbg !6873
  br i1 %cmp46, label %if.then48, label %if.end75, !dbg !6874

if.then48:                                        ; preds = %land.lhs.true44
  %30 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6875
  %lsu49 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %30, i32 0, i32 3, !dbg !6878
  %arrayidx = getelementptr inbounds [1 x i16], [1 x i16]* %lsu49, i64 0, i64 0, !dbg !6875
  %31 = load i16, i16* %arrayidx, align 2, !dbg !6875
  %conv50 = zext i16 %31 to i32, !dbg !6875
  %cmp51 = icmp eq i32 %conv50, 10, !dbg !6879
  br i1 %cmp51, label %land.lhs.true53, label %if.end60, !dbg !6880

land.lhs.true53:                                  ; preds = %if.then48
  %32 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6881
  %digits54 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %32, i32 0, i32 0, !dbg !6882
  %33 = load i32, i32* %digits54, align 4, !dbg !6882
  %cmp55 = icmp eq i32 %33, 2, !dbg !6883
  br i1 %cmp55, label %if.then57, label %if.end60, !dbg !6884

if.then57:                                        ; preds = %land.lhs.true53
  %34 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !6885
  %35 = bitcast %struct.decContext* %aset to i8*, !dbg !6887
  %36 = bitcast %struct.decContext* %34 to i8*, !dbg !6887
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 4 %36, i64 28, i1 false), !dbg !6887
  %round = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 3, !dbg !6888
  store i32 3, i32* %round, align 4, !dbg !6889
  %37 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6890
  %call58 = call %struct.decNumber* @decNumberFromString(%struct.decNumber* %37, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.18, i64 0, i64 0), %struct.decContext* %aset), !dbg !6891
  %38 = load i32*, i32** %status.addr, align 8, !dbg !6892
  %39 = load i32, i32* %38, align 4, !dbg !6893
  %or59 = or i32 %39, 2080, !dbg !6893
  store i32 %or59, i32* %38, align 4, !dbg !6893
  br label %do.end, !dbg !6894

if.end60:                                         ; preds = %land.lhs.true53, %if.then48
  %40 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6895
  %lsu61 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %40, i32 0, i32 3, !dbg !6897
  %arrayidx62 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu61, i64 0, i64 0, !dbg !6895
  %41 = load i16, i16* %arrayidx62, align 2, !dbg !6895
  %conv63 = zext i16 %41 to i32, !dbg !6895
  %cmp64 = icmp eq i32 %conv63, 2, !dbg !6898
  br i1 %cmp64, label %land.lhs.true66, label %if.end74, !dbg !6899

land.lhs.true66:                                  ; preds = %if.end60
  %42 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6900
  %digits67 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %42, i32 0, i32 0, !dbg !6901
  %43 = load i32, i32* %digits67, align 4, !dbg !6901
  %cmp68 = icmp eq i32 %43, 1, !dbg !6902
  br i1 %cmp68, label %if.then70, label %if.end74, !dbg !6903

if.then70:                                        ; preds = %land.lhs.true66
  %44 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !6904
  %45 = bitcast %struct.decContext* %aset to i8*, !dbg !6906
  %46 = bitcast %struct.decContext* %44 to i8*, !dbg !6906
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %46, i64 28, i1 false), !dbg !6906
  %round71 = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 3, !dbg !6907
  store i32 3, i32* %round71, align 4, !dbg !6908
  %47 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !6909
  %call72 = call %struct.decNumber* @decNumberFromString(%struct.decNumber* %47, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.19, i64 0, i64 0), %struct.decContext* %aset), !dbg !6910
  %48 = load i32*, i32** %status.addr, align 8, !dbg !6911
  %49 = load i32, i32* %48, align 4, !dbg !6912
  %or73 = or i32 %49, 2080, !dbg !6912
  store i32 %or73, i32* %48, align 4, !dbg !6912
  br label %do.end, !dbg !6913

if.end74:                                         ; preds = %land.lhs.true66, %if.end60
  br label %if.end75, !dbg !6914

if.end75:                                         ; preds = %if.end74, %land.lhs.true44, %if.end41
  %50 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6915
  %digits76 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %50, i32 0, i32 0, !dbg !6915
  %51 = load i32, i32* %digits76, align 4, !dbg !6915
  %52 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !6915
  %digits77 = getelementptr inbounds %struct.decContext, %struct.decContext* %52, i32 0, i32 0, !dbg !6915
  %53 = load i32, i32* %digits77, align 4, !dbg !6915
  %cmp78 = icmp slt i32 %53, 7, !dbg !6915
  br i1 %cmp78, label %cond.true, label %cond.false, !dbg !6915

cond.true:                                        ; preds = %if.end75
  br label %cond.end, !dbg !6915

cond.false:                                       ; preds = %if.end75
  %54 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !6915
  %digits80 = getelementptr inbounds %struct.decContext, %struct.decContext* %54, i32 0, i32 0, !dbg !6915
  %55 = load i32, i32* %digits80, align 4, !dbg !6915
  br label %cond.end, !dbg !6915

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 7, %cond.true ], [ %55, %cond.false ], !dbg !6915
  %cmp81 = icmp slt i32 %51, %cond, !dbg !6915
  br i1 %cmp81, label %cond.true83, label %cond.false92, !dbg !6915

cond.true83:                                      ; preds = %cond.end
  %56 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !6915
  %digits84 = getelementptr inbounds %struct.decContext, %struct.decContext* %56, i32 0, i32 0, !dbg !6915
  %57 = load i32, i32* %digits84, align 4, !dbg !6915
  %cmp85 = icmp slt i32 %57, 7, !dbg !6915
  br i1 %cmp85, label %cond.true87, label %cond.false88, !dbg !6915

cond.true87:                                      ; preds = %cond.true83
  br label %cond.end90, !dbg !6915

cond.false88:                                     ; preds = %cond.true83
  %58 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !6915
  %digits89 = getelementptr inbounds %struct.decContext, %struct.decContext* %58, i32 0, i32 0, !dbg !6915
  %59 = load i32, i32* %digits89, align 4, !dbg !6915
  br label %cond.end90, !dbg !6915

cond.end90:                                       ; preds = %cond.false88, %cond.true87
  %cond91 = phi i32 [ 7, %cond.true87 ], [ %59, %cond.false88 ], !dbg !6915
  br label %cond.end94, !dbg !6915

cond.false92:                                     ; preds = %cond.end
  %60 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6915
  %digits93 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %60, i32 0, i32 0, !dbg !6915
  %61 = load i32, i32* %digits93, align 4, !dbg !6915
  br label %cond.end94, !dbg !6915

cond.end94:                                       ; preds = %cond.false92, %cond.end90
  %cond95 = phi i32 [ %cond91, %cond.end90 ], [ %61, %cond.false92 ], !dbg !6915
  %add = add nsw i32 %cond95, 2, !dbg !6916
  store i32 %add, i32* %p, align 4, !dbg !6917
  %62 = load i32, i32* %p, align 4, !dbg !6918
  %cmp96 = icmp slt i32 %62, 16, !dbg !6918
  br i1 %cmp96, label %cond.true98, label %cond.false99, !dbg !6918

cond.true98:                                      ; preds = %cond.end94
  br label %cond.end100, !dbg !6918

cond.false99:                                     ; preds = %cond.end94
  %63 = load i32, i32* %p, align 4, !dbg !6918
  br label %cond.end100, !dbg !6918

cond.end100:                                      ; preds = %cond.false99, %cond.true98
  %cond101 = phi i32 [ 16, %cond.true98 ], [ %63, %cond.false99 ], !dbg !6918
  %cmp102 = icmp sle i32 %cond101, 49, !dbg !6918
  br i1 %cmp102, label %cond.true104, label %cond.false113, !dbg !6918

cond.true104:                                     ; preds = %cond.end100
  %64 = load i32, i32* %p, align 4, !dbg !6918
  %cmp105 = icmp slt i32 %64, 16, !dbg !6918
  br i1 %cmp105, label %cond.true107, label %cond.false108, !dbg !6918

cond.true107:                                     ; preds = %cond.true104
  br label %cond.end109, !dbg !6918

cond.false108:                                    ; preds = %cond.true104
  %65 = load i32, i32* %p, align 4, !dbg !6918
  br label %cond.end109, !dbg !6918

cond.end109:                                      ; preds = %cond.false108, %cond.true107
  %cond110 = phi i32 [ 16, %cond.true107 ], [ %65, %cond.false108 ], !dbg !6918
  %idxprom = sext i32 %cond110 to i64, !dbg !6918
  %arrayidx111 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom, !dbg !6918
  %66 = load i8, i8* %arrayidx111, align 1, !dbg !6918
  %conv112 = zext i8 %66 to i32, !dbg !6918
  br label %cond.end121, !dbg !6918

cond.false113:                                    ; preds = %cond.end100
  %67 = load i32, i32* %p, align 4, !dbg !6918
  %cmp114 = icmp slt i32 %67, 16, !dbg !6918
  br i1 %cmp114, label %cond.true116, label %cond.false117, !dbg !6918

cond.true116:                                     ; preds = %cond.false113
  br label %cond.end118, !dbg !6918

cond.false117:                                    ; preds = %cond.false113
  %68 = load i32, i32* %p, align 4, !dbg !6918
  br label %cond.end118, !dbg !6918

cond.end118:                                      ; preds = %cond.false117, %cond.true116
  %cond119 = phi i32 [ 16, %cond.true116 ], [ %68, %cond.false117 ], !dbg !6918
  %add120 = add nsw i32 %cond119, 3, !dbg !6918
  %sub = sub nsw i32 %add120, 1, !dbg !6918
  %div = sdiv i32 %sub, 3, !dbg !6918
  br label %cond.end121, !dbg !6918

cond.end121:                                      ; preds = %cond.end118, %cond.end109
  %cond122 = phi i32 [ %conv112, %cond.end109 ], [ %div, %cond.end118 ], !dbg !6918
  %sub123 = sub nsw i32 %cond122, 1, !dbg !6919
  %conv124 = sext i32 %sub123 to i64, !dbg !6920
  %mul = mul i64 %conv124, 2, !dbg !6921
  %add125 = add i64 12, %mul, !dbg !6922
  %conv126 = trunc i64 %add125 to i32, !dbg !6923
  store i32 %conv126, i32* %needbytes, align 4, !dbg !6924
  %69 = load i32, i32* %needbytes, align 4, !dbg !6925
  %conv127 = zext i32 %69 to i64, !dbg !6925
  %cmp128 = icmp ugt i64 %conv127, 48, !dbg !6927
  br i1 %cmp128, label %if.then130, label %if.end138, !dbg !6928

if.then130:                                       ; preds = %cond.end121
  %70 = load i32, i32* %needbytes, align 4, !dbg !6929
  %conv131 = zext i32 %70 to i64, !dbg !6929
  %call132 = call noalias i8* @malloc(i64 %conv131) #6, !dbg !6931
  %71 = bitcast i8* %call132 to %struct.decNumber*, !dbg !6932
  store %struct.decNumber* %71, %struct.decNumber** %allocbufa, align 8, !dbg !6933
  %72 = load %struct.decNumber*, %struct.decNumber** %allocbufa, align 8, !dbg !6934
  %cmp133 = icmp eq %struct.decNumber* %72, null, !dbg !6936
  br i1 %cmp133, label %if.then135, label %if.end137, !dbg !6937

if.then135:                                       ; preds = %if.then130
  %73 = load i32*, i32** %status.addr, align 8, !dbg !6938
  %74 = load i32, i32* %73, align 4, !dbg !6940
  %or136 = or i32 %74, 16, !dbg !6940
  store i32 %or136, i32* %73, align 4, !dbg !6940
  br label %do.end, !dbg !6941

if.end137:                                        ; preds = %if.then130
  %75 = load %struct.decNumber*, %struct.decNumber** %allocbufa, align 8, !dbg !6942
  store %struct.decNumber* %75, %struct.decNumber** %a, align 8, !dbg !6943
  br label %if.end138, !dbg !6944

if.end138:                                        ; preds = %if.end137, %cond.end121
  %76 = load i32, i32* %p, align 4, !dbg !6945
  %77 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6946
  %digits139 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %77, i32 0, i32 0, !dbg !6947
  %78 = load i32, i32* %digits139, align 4, !dbg !6947
  %add140 = add nsw i32 %76, %78, !dbg !6948
  store i32 %add140, i32* %pp, align 4, !dbg !6949
  %79 = load i32, i32* %pp, align 4, !dbg !6950
  %cmp141 = icmp slt i32 %79, 16, !dbg !6950
  br i1 %cmp141, label %cond.true143, label %cond.false144, !dbg !6950

cond.true143:                                     ; preds = %if.end138
  br label %cond.end145, !dbg !6950

cond.false144:                                    ; preds = %if.end138
  %80 = load i32, i32* %pp, align 4, !dbg !6950
  br label %cond.end145, !dbg !6950

cond.end145:                                      ; preds = %cond.false144, %cond.true143
  %cond146 = phi i32 [ 16, %cond.true143 ], [ %80, %cond.false144 ], !dbg !6950
  %cmp147 = icmp sle i32 %cond146, 49, !dbg !6950
  br i1 %cmp147, label %cond.true149, label %cond.false159, !dbg !6950

cond.true149:                                     ; preds = %cond.end145
  %81 = load i32, i32* %pp, align 4, !dbg !6950
  %cmp150 = icmp slt i32 %81, 16, !dbg !6950
  br i1 %cmp150, label %cond.true152, label %cond.false153, !dbg !6950

cond.true152:                                     ; preds = %cond.true149
  br label %cond.end154, !dbg !6950

cond.false153:                                    ; preds = %cond.true149
  %82 = load i32, i32* %pp, align 4, !dbg !6950
  br label %cond.end154, !dbg !6950

cond.end154:                                      ; preds = %cond.false153, %cond.true152
  %cond155 = phi i32 [ 16, %cond.true152 ], [ %82, %cond.false153 ], !dbg !6950
  %idxprom156 = sext i32 %cond155 to i64, !dbg !6950
  %arrayidx157 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom156, !dbg !6950
  %83 = load i8, i8* %arrayidx157, align 1, !dbg !6950
  %conv158 = zext i8 %83 to i32, !dbg !6950
  br label %cond.end169, !dbg !6950

cond.false159:                                    ; preds = %cond.end145
  %84 = load i32, i32* %pp, align 4, !dbg !6950
  %cmp160 = icmp slt i32 %84, 16, !dbg !6950
  br i1 %cmp160, label %cond.true162, label %cond.false163, !dbg !6950

cond.true162:                                     ; preds = %cond.false159
  br label %cond.end164, !dbg !6950

cond.false163:                                    ; preds = %cond.false159
  %85 = load i32, i32* %pp, align 4, !dbg !6950
  br label %cond.end164, !dbg !6950

cond.end164:                                      ; preds = %cond.false163, %cond.true162
  %cond165 = phi i32 [ 16, %cond.true162 ], [ %85, %cond.false163 ], !dbg !6950
  %add166 = add nsw i32 %cond165, 3, !dbg !6950
  %sub167 = sub nsw i32 %add166, 1, !dbg !6950
  %div168 = sdiv i32 %sub167, 3, !dbg !6950
  br label %cond.end169, !dbg !6950

cond.end169:                                      ; preds = %cond.end164, %cond.end154
  %cond170 = phi i32 [ %conv158, %cond.end154 ], [ %div168, %cond.end164 ], !dbg !6950
  %sub171 = sub nsw i32 %cond170, 1, !dbg !6951
  %conv172 = sext i32 %sub171 to i64, !dbg !6952
  %mul173 = mul i64 %conv172, 2, !dbg !6953
  %add174 = add i64 12, %mul173, !dbg !6954
  %conv175 = trunc i64 %add174 to i32, !dbg !6955
  store i32 %conv175, i32* %needbytes, align 4, !dbg !6956
  %86 = load i32, i32* %needbytes, align 4, !dbg !6957
  %conv176 = zext i32 %86 to i64, !dbg !6957
  %cmp177 = icmp ugt i64 %conv176, 60, !dbg !6959
  br i1 %cmp177, label %if.then179, label %if.end187, !dbg !6960

if.then179:                                       ; preds = %cond.end169
  %87 = load i32, i32* %needbytes, align 4, !dbg !6961
  %conv180 = zext i32 %87 to i64, !dbg !6961
  %call181 = call noalias i8* @malloc(i64 %conv180) #6, !dbg !6963
  %88 = bitcast i8* %call181 to %struct.decNumber*, !dbg !6964
  store %struct.decNumber* %88, %struct.decNumber** %allocbufb, align 8, !dbg !6965
  %89 = load %struct.decNumber*, %struct.decNumber** %allocbufb, align 8, !dbg !6966
  %cmp182 = icmp eq %struct.decNumber* %89, null, !dbg !6968
  br i1 %cmp182, label %if.then184, label %if.end186, !dbg !6969

if.then184:                                       ; preds = %if.then179
  %90 = load i32*, i32** %status.addr, align 8, !dbg !6970
  %91 = load i32, i32* %90, align 4, !dbg !6972
  %or185 = or i32 %91, 16, !dbg !6972
  store i32 %or185, i32* %90, align 4, !dbg !6972
  br label %do.end, !dbg !6973

if.end186:                                        ; preds = %if.then179
  %92 = load %struct.decNumber*, %struct.decNumber** %allocbufb, align 8, !dbg !6974
  store %struct.decNumber* %92, %struct.decNumber** %b, align 8, !dbg !6975
  br label %if.end187, !dbg !6976

if.end187:                                        ; preds = %if.end186, %cond.end169
  %call188 = call %struct.decContext* @decContextDefault(%struct.decContext* %aset, i32 64), !dbg !6977
  %93 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6978
  %exponent189 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %93, i32 0, i32 1, !dbg !6979
  %94 = load i32, i32* %exponent189, align 4, !dbg !6979
  %95 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !6980
  %digits190 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %95, i32 0, i32 0, !dbg !6981
  %96 = load i32, i32* %digits190, align 4, !dbg !6981
  %add191 = add nsw i32 %94, %96, !dbg !6982
  store i32 %add191, i32* %r, align 4, !dbg !6983
  %97 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !6984
  %98 = load i32, i32* %r, align 4, !dbg !6985
  %call192 = call %struct.decNumber* @decNumberFromInt32(%struct.decNumber* %97, i32 %98), !dbg !6986
  %99 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !6987
  %call193 = call %struct.decNumber* @decNumberFromInt32(%struct.decNumber* %99, i32 2302585), !dbg !6988
  %100 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !6989
  %exponent194 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %100, i32 0, i32 1, !dbg !6990
  store i32 -6, i32* %exponent194, align 4, !dbg !6991
  %101 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !6992
  %102 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !6993
  %103 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !6994
  %call195 = call %struct.decNumber* @decMultiplyOp(%struct.decNumber* %101, %struct.decNumber* %102, %struct.decNumber* %103, %struct.decContext* %aset, i32* %ignore), !dbg !6995
  store i32 0, i32* %residue, align 4, !dbg !6996
  %digits196 = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 0, !dbg !6997
  store i32 2, i32* %digits196, align 4, !dbg !6998
  %round197 = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 3, !dbg !6999
  store i32 5, i32* %round197, align 4, !dbg !7000
  %104 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !7001
  %105 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7002
  call void @decCopyFit(%struct.decNumber* %104, %struct.decNumber* %105, %struct.decContext* %aset, i32* %residue, i32* %ignore), !dbg !7003
  %106 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !7004
  %exponent198 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %106, i32 0, i32 1, !dbg !7005
  store i32 0, i32* %exponent198, align 4, !dbg !7006
  %107 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !7007
  %call199 = call i32 @decGetInt(%struct.decNumber* %107), !dbg !7008
  store i32 %call199, i32* %t, align 4, !dbg !7009
  %108 = load i32, i32* %t, align 4, !dbg !7010
  %cmp200 = icmp slt i32 %108, 10, !dbg !7012
  br i1 %cmp200, label %if.then202, label %if.end205, !dbg !7013

if.then202:                                       ; preds = %if.end187
  %109 = load i32, i32* %t, align 4, !dbg !7014
  %shl = shl i32 %109, 1, !dbg !7014
  %110 = load i32, i32* %t, align 4, !dbg !7014
  %shl203 = shl i32 %110, 3, !dbg !7014
  %add204 = add nsw i32 %shl, %shl203, !dbg !7014
  store i32 %add204, i32* %t, align 4, !dbg !7015
  br label %if.end205, !dbg !7016

if.end205:                                        ; preds = %if.then202, %if.end187
  %111 = load i32, i32* %t, align 4, !dbg !7017
  %sub206 = sub nsw i32 %111, 10, !dbg !7018
  %idxprom207 = sext i32 %sub206 to i64, !dbg !7019
  %arrayidx208 = getelementptr inbounds [90 x i16], [90 x i16]* @LNnn, i64 0, i64 %idxprom207, !dbg !7019
  %112 = load i16, i16* %arrayidx208, align 2, !dbg !7019
  %conv209 = zext i16 %112 to i32, !dbg !7019
  store i32 %conv209, i32* %t, align 4, !dbg !7020
  %113 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !7021
  %114 = load i32, i32* %t, align 4, !dbg !7022
  %shr = ashr i32 %114, 2, !dbg !7023
  %call210 = call %struct.decNumber* @decNumberFromInt32(%struct.decNumber* %113, i32 %shr), !dbg !7024
  %115 = load i32, i32* %t, align 4, !dbg !7025
  %and211 = and i32 %115, 3, !dbg !7026
  %sub212 = sub nsw i32 0, %and211, !dbg !7027
  %sub213 = sub nsw i32 %sub212, 3, !dbg !7028
  %116 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !7029
  %exponent214 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %116, i32 0, i32 1, !dbg !7030
  store i32 %sub213, i32* %exponent214, align 4, !dbg !7031
  %117 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !7032
  %bits215 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %117, i32 0, i32 2, !dbg !7033
  store i8 -128, i8* %bits215, align 4, !dbg !7034
  %digits216 = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 0, !dbg !7035
  store i32 16, i32* %digits216, align 4, !dbg !7036
  %round217 = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 3, !dbg !7037
  store i32 3, i32* %round217, align 4, !dbg !7038
  %118 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7039
  %119 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7040
  %120 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !7041
  %call218 = call %struct.decNumber* @decAddOp(%struct.decNumber* %118, %struct.decNumber* %119, %struct.decNumber* %120, %struct.decContext* %aset, i8 zeroext 0, i32* %ignore), !dbg !7042
  %call219 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %numone), !dbg !7043
  %lsu220 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %numone, i32 0, i32 3, !dbg !7044
  %arraydecay221 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu220, i64 0, i64 0, !dbg !7045
  store i16 1, i16* %arraydecay221, align 2, !dbg !7046
  %121 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7047
  %emax = getelementptr inbounds %struct.decContext, %struct.decContext* %121, i32 0, i32 1, !dbg !7048
  %122 = load i32, i32* %emax, align 4, !dbg !7048
  %emax222 = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 1, !dbg !7049
  store i32 %122, i32* %emax222, align 4, !dbg !7050
  %123 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7051
  %emin = getelementptr inbounds %struct.decContext, %struct.decContext* %123, i32 0, i32 2, !dbg !7052
  %124 = load i32, i32* %emin, align 4, !dbg !7052
  %emin223 = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 2, !dbg !7053
  store i32 %124, i32* %emin223, align 4, !dbg !7054
  %clamp = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 6, !dbg !7055
  store i8 0, i8* %clamp, align 4, !dbg !7056
  %125 = bitcast %struct.decContext* %bset to i8*, !dbg !7057
  %126 = bitcast %struct.decContext* %aset to i8*, !dbg !7057
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %125, i8* align 4 %126, i64 28, i1 false), !dbg !7057
  %emax224 = getelementptr inbounds %struct.decContext, %struct.decContext* %bset, i32 0, i32 1, !dbg !7058
  store i32 1999998, i32* %emax224, align 4, !dbg !7059
  %emin225 = getelementptr inbounds %struct.decContext, %struct.decContext* %bset, i32 0, i32 2, !dbg !7060
  store i32 -1999998, i32* %emin225, align 4, !dbg !7061
  store i32 9, i32* %pp, align 4, !dbg !7062
  %127 = load i32, i32* %pp, align 4, !dbg !7063
  %digits226 = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 0, !dbg !7064
  store i32 %127, i32* %digits226, align 4, !dbg !7065
  %128 = load i32, i32* %pp, align 4, !dbg !7066
  %129 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7067
  %digits227 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %129, i32 0, i32 0, !dbg !7068
  %130 = load i32, i32* %digits227, align 4, !dbg !7068
  %add228 = add nsw i32 %128, %130, !dbg !7069
  %digits229 = getelementptr inbounds %struct.decContext, %struct.decContext* %bset, i32 0, i32 0, !dbg !7070
  store i32 %add228, i32* %digits229, align 4, !dbg !7071
  br label %for.cond, !dbg !7072

for.cond:                                         ; preds = %if.end330, %if.then324, %if.end205
  %131 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7073
  %bits230 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %131, i32 0, i32 2, !dbg !7077
  %132 = load i8, i8* %bits230, align 4, !dbg !7078
  %conv231 = zext i8 %132 to i32, !dbg !7078
  %xor = xor i32 %conv231, 128, !dbg !7078
  %conv232 = trunc i32 %xor to i8, !dbg !7078
  store i8 %conv232, i8* %bits230, align 4, !dbg !7078
  %133 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !7079
  %134 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7080
  %call233 = call %struct.decNumber* @decExpOp(%struct.decNumber* %133, %struct.decNumber* %134, %struct.decContext* %bset, i32* %ignore), !dbg !7081
  %135 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7082
  %bits234 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %135, i32 0, i32 2, !dbg !7083
  %136 = load i8, i8* %bits234, align 4, !dbg !7084
  %conv235 = zext i8 %136 to i32, !dbg !7084
  %xor236 = xor i32 %conv235, 128, !dbg !7084
  %conv237 = trunc i32 %xor236 to i8, !dbg !7084
  store i8 %conv237, i8* %bits234, align 4, !dbg !7084
  %137 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !7085
  %138 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !7086
  %139 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7087
  %call238 = call %struct.decNumber* @decMultiplyOp(%struct.decNumber* %137, %struct.decNumber* %138, %struct.decNumber* %139, %struct.decContext* %bset, i32* %ignore), !dbg !7088
  %140 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !7089
  %141 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !7090
  %call239 = call %struct.decNumber* @decAddOp(%struct.decNumber* %140, %struct.decNumber* %141, %struct.decNumber* %numone, %struct.decContext* %bset, i8 zeroext -128, i32* %ignore), !dbg !7091
  %142 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !7092
  %lsu240 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %142, i32 0, i32 3, !dbg !7092
  %arraydecay241 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu240, i64 0, i64 0, !dbg !7092
  %143 = load i16, i16* %arraydecay241, align 2, !dbg !7092
  %conv242 = zext i16 %143 to i32, !dbg !7092
  %cmp243 = icmp eq i32 %conv242, 0, !dbg !7092
  br i1 %cmp243, label %land.lhs.true245, label %lor.lhs.false, !dbg !7092

land.lhs.true245:                                 ; preds = %for.cond
  %144 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !7092
  %digits246 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %144, i32 0, i32 0, !dbg !7092
  %145 = load i32, i32* %digits246, align 4, !dbg !7092
  %cmp247 = icmp eq i32 %145, 1, !dbg !7092
  br i1 %cmp247, label %land.lhs.true249, label %lor.lhs.false, !dbg !7092

land.lhs.true249:                                 ; preds = %land.lhs.true245
  %146 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !7092
  %bits250 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %146, i32 0, i32 2, !dbg !7092
  %147 = load i8, i8* %bits250, align 4, !dbg !7092
  %conv251 = zext i8 %147 to i32, !dbg !7092
  %and252 = and i32 %conv251, 112, !dbg !7092
  %cmp253 = icmp eq i32 %and252, 0, !dbg !7092
  br i1 %cmp253, label %if.then266, label %lor.lhs.false, !dbg !7094

lor.lhs.false:                                    ; preds = %land.lhs.true249, %land.lhs.true245, %for.cond
  %148 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7095
  %digits255 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %148, i32 0, i32 0, !dbg !7096
  %149 = load i32, i32* %digits255, align 4, !dbg !7096
  %150 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7097
  %exponent256 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %150, i32 0, i32 1, !dbg !7098
  %151 = load i32, i32* %exponent256, align 4, !dbg !7098
  %add257 = add nsw i32 %149, %151, !dbg !7099
  %152 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !7100
  %digits258 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %152, i32 0, i32 0, !dbg !7101
  %153 = load i32, i32* %digits258, align 4, !dbg !7101
  %154 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !7102
  %exponent259 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %154, i32 0, i32 1, !dbg !7103
  %155 = load i32, i32* %exponent259, align 4, !dbg !7103
  %add260 = add nsw i32 %153, %155, !dbg !7104
  %156 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7105
  %digits261 = getelementptr inbounds %struct.decContext, %struct.decContext* %156, i32 0, i32 0, !dbg !7106
  %157 = load i32, i32* %digits261, align 4, !dbg !7106
  %add262 = add nsw i32 %add260, %157, !dbg !7107
  %add263 = add nsw i32 %add262, 1, !dbg !7108
  %cmp264 = icmp sge i32 %add257, %add263, !dbg !7109
  br i1 %cmp264, label %if.then266, label %if.end320, !dbg !7110

if.then266:                                       ; preds = %lor.lhs.false, %land.lhs.true249
  %158 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7111
  %digits267 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %158, i32 0, i32 0, !dbg !7114
  %159 = load i32, i32* %digits267, align 4, !dbg !7114
  %160 = load i32, i32* %p, align 4, !dbg !7115
  %cmp268 = icmp eq i32 %159, %160, !dbg !7116
  br i1 %cmp268, label %if.then270, label %if.end271, !dbg !7117

if.then270:                                       ; preds = %if.then266
  br label %for.end, !dbg !7118

if.end271:                                        ; preds = %if.then266
  %161 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7119
  %lsu272 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %161, i32 0, i32 3, !dbg !7119
  %arraydecay273 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu272, i64 0, i64 0, !dbg !7119
  %162 = load i16, i16* %arraydecay273, align 2, !dbg !7119
  %conv274 = zext i16 %162 to i32, !dbg !7119
  %cmp275 = icmp eq i32 %conv274, 0, !dbg !7119
  br i1 %cmp275, label %land.lhs.true277, label %if.end299, !dbg !7119

land.lhs.true277:                                 ; preds = %if.end271
  %163 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7119
  %digits278 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %163, i32 0, i32 0, !dbg !7119
  %164 = load i32, i32* %digits278, align 4, !dbg !7119
  %cmp279 = icmp eq i32 %164, 1, !dbg !7119
  br i1 %cmp279, label %land.lhs.true281, label %if.end299, !dbg !7119

land.lhs.true281:                                 ; preds = %land.lhs.true277
  %165 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7119
  %bits282 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %165, i32 0, i32 2, !dbg !7119
  %166 = load i8, i8* %bits282, align 4, !dbg !7119
  %conv283 = zext i8 %166 to i32, !dbg !7119
  %and284 = and i32 %conv283, 112, !dbg !7119
  %cmp285 = icmp eq i32 %and284, 0, !dbg !7119
  br i1 %cmp285, label %if.then287, label %if.end299, !dbg !7121

if.then287:                                       ; preds = %land.lhs.true281
  %167 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7122
  %call288 = call %struct.decNumber* @decCompareOp(%struct.decNumber* %cmp, %struct.decNumber* %167, %struct.decNumber* %numone, %struct.decContext* %aset, i8 zeroext 1, i32* %ignore), !dbg !7124
  %lsu289 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %cmp, i32 0, i32 3, !dbg !7125
  %arrayidx290 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu289, i64 0, i64 0, !dbg !7127
  %168 = load i16, i16* %arrayidx290, align 2, !dbg !7127
  %conv291 = zext i16 %168 to i32, !dbg !7127
  %cmp292 = icmp eq i32 %conv291, 0, !dbg !7128
  br i1 %cmp292, label %if.then294, label %if.else296, !dbg !7129

if.then294:                                       ; preds = %if.then287
  %169 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7130
  %exponent295 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %169, i32 0, i32 1, !dbg !7131
  store i32 0, i32* %exponent295, align 4, !dbg !7132
  br label %if.end298, !dbg !7130

if.else296:                                       ; preds = %if.then287
  %170 = load i32*, i32** %status.addr, align 8, !dbg !7133
  %171 = load i32, i32* %170, align 4, !dbg !7134
  %or297 = or i32 %171, 2080, !dbg !7134
  store i32 %or297, i32* %170, align 4, !dbg !7134
  br label %if.end298

if.end298:                                        ; preds = %if.else296, %if.then294
  br label %for.end, !dbg !7135

if.end299:                                        ; preds = %land.lhs.true281, %land.lhs.true277, %if.end271
  %172 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !7136
  %lsu300 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %172, i32 0, i32 3, !dbg !7136
  %arraydecay301 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu300, i64 0, i64 0, !dbg !7136
  %173 = load i16, i16* %arraydecay301, align 2, !dbg !7136
  %conv302 = zext i16 %173 to i32, !dbg !7136
  %cmp303 = icmp eq i32 %conv302, 0, !dbg !7136
  br i1 %cmp303, label %land.lhs.true305, label %if.end319, !dbg !7136

land.lhs.true305:                                 ; preds = %if.end299
  %174 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !7136
  %digits306 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %174, i32 0, i32 0, !dbg !7136
  %175 = load i32, i32* %digits306, align 4, !dbg !7136
  %cmp307 = icmp eq i32 %175, 1, !dbg !7136
  br i1 %cmp307, label %land.lhs.true309, label %if.end319, !dbg !7136

land.lhs.true309:                                 ; preds = %land.lhs.true305
  %176 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !7136
  %bits310 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %176, i32 0, i32 2, !dbg !7136
  %177 = load i8, i8* %bits310, align 4, !dbg !7136
  %conv311 = zext i8 %177 to i32, !dbg !7136
  %and312 = and i32 %conv311, 112, !dbg !7136
  %cmp313 = icmp eq i32 %and312, 0, !dbg !7136
  br i1 %cmp313, label %if.then315, label %if.end319, !dbg !7138

if.then315:                                       ; preds = %land.lhs.true309
  %178 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7139
  %exponent316 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %178, i32 0, i32 1, !dbg !7140
  %179 = load i32, i32* %exponent316, align 4, !dbg !7140
  %180 = load i32, i32* %p, align 4, !dbg !7141
  %sub317 = sub nsw i32 %179, %180, !dbg !7142
  %181 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !7143
  %exponent318 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %181, i32 0, i32 1, !dbg !7144
  store i32 %sub317, i32* %exponent318, align 4, !dbg !7145
  br label %if.end319, !dbg !7143

if.end319:                                        ; preds = %if.then315, %land.lhs.true309, %land.lhs.true305, %if.end299
  br label %if.end320, !dbg !7146

if.end320:                                        ; preds = %if.end319, %lor.lhs.false
  %182 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7147
  %183 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7148
  %184 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !7149
  %call321 = call %struct.decNumber* @decAddOp(%struct.decNumber* %182, %struct.decNumber* %183, %struct.decNumber* %184, %struct.decContext* %aset, i8 zeroext 0, i32* %ignore), !dbg !7150
  %185 = load i32, i32* %pp, align 4, !dbg !7151
  %186 = load i32, i32* %p, align 4, !dbg !7153
  %cmp322 = icmp eq i32 %185, %186, !dbg !7154
  br i1 %cmp322, label %if.then324, label %if.end325, !dbg !7155

if.then324:                                       ; preds = %if.end320
  br label %for.cond, !dbg !7156, !llvm.loop !7157

if.end325:                                        ; preds = %if.end320
  %187 = load i32, i32* %pp, align 4, !dbg !7160
  %mul326 = mul nsw i32 %187, 2, !dbg !7161
  store i32 %mul326, i32* %pp, align 4, !dbg !7162
  %188 = load i32, i32* %pp, align 4, !dbg !7163
  %189 = load i32, i32* %p, align 4, !dbg !7165
  %cmp327 = icmp sgt i32 %188, %189, !dbg !7166
  br i1 %cmp327, label %if.then329, label %if.end330, !dbg !7167

if.then329:                                       ; preds = %if.end325
  %190 = load i32, i32* %p, align 4, !dbg !7168
  store i32 %190, i32* %pp, align 4, !dbg !7169
  br label %if.end330, !dbg !7170

if.end330:                                        ; preds = %if.then329, %if.end325
  %191 = load i32, i32* %pp, align 4, !dbg !7171
  %digits331 = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 0, !dbg !7172
  store i32 %191, i32* %digits331, align 4, !dbg !7173
  %192 = load i32, i32* %pp, align 4, !dbg !7174
  %193 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7175
  %digits332 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %193, i32 0, i32 0, !dbg !7176
  %194 = load i32, i32* %digits332, align 4, !dbg !7176
  %add333 = add nsw i32 %192, %194, !dbg !7177
  %digits334 = getelementptr inbounds %struct.decContext, %struct.decContext* %bset, i32 0, i32 0, !dbg !7178
  store i32 %add333, i32* %digits334, align 4, !dbg !7179
  br label %for.cond, !dbg !7180, !llvm.loop !7157

for.end:                                          ; preds = %if.end298, %if.then270
  store i32 1, i32* %residue, align 4, !dbg !7181
  %195 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7182
  %lsu335 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %195, i32 0, i32 3, !dbg !7182
  %arraydecay336 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu335, i64 0, i64 0, !dbg !7182
  %196 = load i16, i16* %arraydecay336, align 2, !dbg !7182
  %conv337 = zext i16 %196 to i32, !dbg !7182
  %cmp338 = icmp eq i32 %conv337, 0, !dbg !7182
  br i1 %cmp338, label %land.lhs.true340, label %if.end351, !dbg !7182

land.lhs.true340:                                 ; preds = %for.end
  %197 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7182
  %digits341 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %197, i32 0, i32 0, !dbg !7182
  %198 = load i32, i32* %digits341, align 4, !dbg !7182
  %cmp342 = icmp eq i32 %198, 1, !dbg !7182
  br i1 %cmp342, label %land.lhs.true344, label %if.end351, !dbg !7182

land.lhs.true344:                                 ; preds = %land.lhs.true340
  %199 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7182
  %bits345 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %199, i32 0, i32 2, !dbg !7182
  %200 = load i8, i8* %bits345, align 4, !dbg !7182
  %conv346 = zext i8 %200 to i32, !dbg !7182
  %and347 = and i32 %conv346, 112, !dbg !7182
  %cmp348 = icmp eq i32 %and347, 0, !dbg !7182
  br i1 %cmp348, label %if.then350, label %if.end351, !dbg !7184

if.then350:                                       ; preds = %land.lhs.true344
  store i32 0, i32* %residue, align 4, !dbg !7185
  br label %if.end351, !dbg !7186

if.end351:                                        ; preds = %if.then350, %land.lhs.true344, %land.lhs.true340, %for.end
  %201 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7187
  %digits352 = getelementptr inbounds %struct.decContext, %struct.decContext* %201, i32 0, i32 0, !dbg !7188
  %202 = load i32, i32* %digits352, align 4, !dbg !7188
  %digits353 = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 0, !dbg !7189
  store i32 %202, i32* %digits353, align 4, !dbg !7190
  %203 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7191
  %204 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7192
  %205 = load i32*, i32** %status.addr, align 8, !dbg !7193
  call void @decCopyFit(%struct.decNumber* %203, %struct.decNumber* %204, %struct.decContext* %aset, i32* %residue, i32* %205), !dbg !7194
  %206 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7195
  %207 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7195
  %208 = load i32*, i32** %status.addr, align 8, !dbg !7195
  call void @decFinalize(%struct.decNumber* %206, %struct.decContext* %207, i32* %residue, i32* %208), !dbg !7195
  br label %do.end, !dbg !7196

do.end:                                           ; preds = %if.end351, %if.then184, %if.then135, %if.then70, %if.then57, %if.then39, %if.then30, %if.end16
  %209 = load %struct.decNumber*, %struct.decNumber** %allocbufa, align 8, !dbg !7197
  %cmp354 = icmp ne %struct.decNumber* %209, null, !dbg !7199
  br i1 %cmp354, label %if.then356, label %if.end357, !dbg !7200

if.then356:                                       ; preds = %do.end
  %210 = load %struct.decNumber*, %struct.decNumber** %allocbufa, align 8, !dbg !7201
  %211 = bitcast %struct.decNumber* %210 to i8*, !dbg !7201
  call void @free(i8* %211) #6, !dbg !7202
  br label %if.end357, !dbg !7202

if.end357:                                        ; preds = %if.then356, %do.end
  %212 = load %struct.decNumber*, %struct.decNumber** %allocbufb, align 8, !dbg !7203
  %cmp358 = icmp ne %struct.decNumber* %212, null, !dbg !7205
  br i1 %cmp358, label %if.then360, label %if.end361, !dbg !7206

if.then360:                                       ; preds = %if.end357
  %213 = load %struct.decNumber*, %struct.decNumber** %allocbufb, align 8, !dbg !7207
  %214 = bitcast %struct.decNumber* %213 to i8*, !dbg !7207
  call void @free(i8* %214) #6, !dbg !7208
  br label %if.end361, !dbg !7208

if.end361:                                        ; preds = %if.then360, %if.end357
  %215 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7209
  ret %struct.decNumber* %215, !dbg !7210
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberLogB(%struct.decNumber* %res, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !7211 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status = alloca i32, align 4
  %ae = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !7212, metadata !DIExpression()), !dbg !7213
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !7214, metadata !DIExpression()), !dbg !7215
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !7216, metadata !DIExpression()), !dbg !7217
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7218, metadata !DIExpression()), !dbg !7219
  store i32 0, i32* %status, align 4, !dbg !7219
  %0 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7220
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 2, !dbg !7220
  %1 = load i8, i8* %bits, align 4, !dbg !7220
  %conv = zext i8 %1 to i32, !dbg !7220
  %and = and i32 %conv, 48, !dbg !7220
  %cmp = icmp ne i32 %and, 0, !dbg !7220
  br i1 %cmp, label %if.then, label %if.else, !dbg !7222

if.then:                                          ; preds = %entry
  %2 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7223
  %3 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7224
  %4 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7225
  %call = call %struct.decNumber* @decNaNs(%struct.decNumber* %2, %struct.decNumber* %3, %struct.decNumber* null, %struct.decContext* %4, i32* %status), !dbg !7226
  br label %if.end28, !dbg !7226

if.else:                                          ; preds = %entry
  %5 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7227
  %bits2 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %5, i32 0, i32 2, !dbg !7227
  %6 = load i8, i8* %bits2, align 4, !dbg !7227
  %conv3 = zext i8 %6 to i32, !dbg !7227
  %and4 = and i32 %conv3, 64, !dbg !7227
  %cmp5 = icmp ne i32 %and4, 0, !dbg !7227
  br i1 %cmp5, label %if.then7, label %if.else9, !dbg !7229

if.then7:                                         ; preds = %if.else
  %7 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7230
  %8 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7231
  %call8 = call %struct.decNumber* @decNumberCopyAbs(%struct.decNumber* %7, %struct.decNumber* %8), !dbg !7232
  br label %if.end27, !dbg !7232

if.else9:                                         ; preds = %if.else
  %9 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7233
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %9, i32 0, i32 3, !dbg !7233
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !7233
  %10 = load i16, i16* %arraydecay, align 2, !dbg !7233
  %conv10 = zext i16 %10 to i32, !dbg !7233
  %cmp11 = icmp eq i32 %conv10, 0, !dbg !7233
  br i1 %cmp11, label %land.lhs.true, label %if.else24, !dbg !7233

land.lhs.true:                                    ; preds = %if.else9
  %11 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7233
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %11, i32 0, i32 0, !dbg !7233
  %12 = load i32, i32* %digits, align 4, !dbg !7233
  %cmp13 = icmp eq i32 %12, 1, !dbg !7233
  br i1 %cmp13, label %land.lhs.true15, label %if.else24, !dbg !7233

land.lhs.true15:                                  ; preds = %land.lhs.true
  %13 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7233
  %bits16 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %13, i32 0, i32 2, !dbg !7233
  %14 = load i8, i8* %bits16, align 4, !dbg !7233
  %conv17 = zext i8 %14 to i32, !dbg !7233
  %and18 = and i32 %conv17, 112, !dbg !7233
  %cmp19 = icmp eq i32 %and18, 0, !dbg !7233
  br i1 %cmp19, label %if.then21, label %if.else24, !dbg !7235

if.then21:                                        ; preds = %land.lhs.true15
  %15 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7236
  %call22 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %15), !dbg !7238
  %16 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7239
  %bits23 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %16, i32 0, i32 2, !dbg !7240
  store i8 -64, i8* %bits23, align 4, !dbg !7241
  %17 = load i32, i32* %status, align 4, !dbg !7242
  %or = or i32 %17, 2, !dbg !7242
  store i32 %or, i32* %status, align 4, !dbg !7242
  br label %if.end, !dbg !7243

if.else24:                                        ; preds = %land.lhs.true15, %land.lhs.true, %if.else9
  call void @llvm.dbg.declare(metadata i32* %ae, metadata !7244, metadata !DIExpression()), !dbg !7246
  %18 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7247
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %18, i32 0, i32 1, !dbg !7248
  %19 = load i32, i32* %exponent, align 4, !dbg !7248
  %20 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7249
  %digits25 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %20, i32 0, i32 0, !dbg !7250
  %21 = load i32, i32* %digits25, align 4, !dbg !7250
  %add = add nsw i32 %19, %21, !dbg !7251
  %sub = sub nsw i32 %add, 1, !dbg !7252
  store i32 %sub, i32* %ae, align 4, !dbg !7246
  %22 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7253
  %23 = load i32, i32* %ae, align 4, !dbg !7254
  %call26 = call %struct.decNumber* @decNumberFromInt32(%struct.decNumber* %22, i32 %23), !dbg !7255
  br label %if.end

if.end:                                           ; preds = %if.else24, %if.then21
  br label %if.end27

if.end27:                                         ; preds = %if.end, %if.then7
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then
  %24 = load i32, i32* %status, align 4, !dbg !7256
  %cmp29 = icmp ne i32 %24, 0, !dbg !7258
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !7259

if.then31:                                        ; preds = %if.end28
  %25 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7260
  %26 = load i32, i32* %status, align 4, !dbg !7261
  %27 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7262
  call void @decStatus(%struct.decNumber* %25, i32 %26, %struct.decContext* %27), !dbg !7263
  br label %if.end32, !dbg !7263

if.end32:                                         ; preds = %if.then31, %if.end28
  %28 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7264
  ret %struct.decNumber* %28, !dbg !7265
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.decNumber* @decNaNs(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set, i32* %status) #0 !dbg !7266 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status.addr = alloca i32*, align 8
  %ul = alloca i16*, align 8
  %ur = alloca i16*, align 8
  %uresp1 = alloca i16*, align 8
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !7267, metadata !DIExpression()), !dbg !7268
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !7269, metadata !DIExpression()), !dbg !7270
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !7271, metadata !DIExpression()), !dbg !7272
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !7273, metadata !DIExpression()), !dbg !7274
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !7275, metadata !DIExpression()), !dbg !7276
  %0 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !7277
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 2, !dbg !7279
  %1 = load i8, i8* %bits, align 4, !dbg !7279
  %conv = zext i8 %1 to i32, !dbg !7277
  %and = and i32 %conv, 16, !dbg !7280
  %tobool = icmp ne i32 %and, 0, !dbg !7280
  br i1 %tobool, label %if.then, label %if.else, !dbg !7281

if.then:                                          ; preds = %entry
  %2 = load i32*, i32** %status.addr, align 8, !dbg !7282
  %3 = load i32, i32* %2, align 4, !dbg !7283
  %or = or i32 %3, 1073741952, !dbg !7283
  store i32 %or, i32* %2, align 4, !dbg !7283
  br label %if.end19, !dbg !7284

if.else:                                          ; preds = %entry
  %4 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7285
  %cmp = icmp eq %struct.decNumber* %4, null, !dbg !7287
  br i1 %cmp, label %if.then2, label %if.else3, !dbg !7288

if.then2:                                         ; preds = %if.else
  br label %if.end18, !dbg !7288

if.else3:                                         ; preds = %if.else
  %5 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7289
  %bits4 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %5, i32 0, i32 2, !dbg !7291
  %6 = load i8, i8* %bits4, align 4, !dbg !7291
  %conv5 = zext i8 %6 to i32, !dbg !7289
  %and6 = and i32 %conv5, 16, !dbg !7292
  %tobool7 = icmp ne i32 %and6, 0, !dbg !7292
  br i1 %tobool7, label %if.then8, label %if.else10, !dbg !7293

if.then8:                                         ; preds = %if.else3
  %7 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7294
  store %struct.decNumber* %7, %struct.decNumber** %lhs.addr, align 8, !dbg !7296
  %8 = load i32*, i32** %status.addr, align 8, !dbg !7297
  %9 = load i32, i32* %8, align 4, !dbg !7298
  %or9 = or i32 %9, 1073741952, !dbg !7298
  store i32 %or9, i32* %8, align 4, !dbg !7298
  br label %if.end17, !dbg !7299

if.else10:                                        ; preds = %if.else3
  %10 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !7300
  %bits11 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %10, i32 0, i32 2, !dbg !7302
  %11 = load i8, i8* %bits11, align 4, !dbg !7302
  %conv12 = zext i8 %11 to i32, !dbg !7300
  %and13 = and i32 %conv12, 32, !dbg !7303
  %tobool14 = icmp ne i32 %and13, 0, !dbg !7303
  br i1 %tobool14, label %if.then15, label %if.else16, !dbg !7304

if.then15:                                        ; preds = %if.else10
  br label %if.end, !dbg !7304

if.else16:                                        ; preds = %if.else10
  %12 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7305
  store %struct.decNumber* %12, %struct.decNumber** %lhs.addr, align 8, !dbg !7306
  br label %if.end

if.end:                                           ; preds = %if.else16, %if.then15
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then8
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then2
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then
  %13 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !7307
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %13, i32 0, i32 0, !dbg !7309
  %14 = load i32, i32* %digits, align 4, !dbg !7309
  %15 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7310
  %digits20 = getelementptr inbounds %struct.decContext, %struct.decContext* %15, i32 0, i32 0, !dbg !7311
  %16 = load i32, i32* %digits20, align 4, !dbg !7311
  %cmp21 = icmp sle i32 %14, %16, !dbg !7312
  br i1 %cmp21, label %if.then23, label %if.else24, !dbg !7313

if.then23:                                        ; preds = %if.end19
  %17 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7314
  %18 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !7315
  %call = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %17, %struct.decNumber* %18), !dbg !7316
  br label %if.end66, !dbg !7316

if.else24:                                        ; preds = %if.end19
  call void @llvm.dbg.declare(metadata i16** %ul, metadata !7317, metadata !DIExpression()), !dbg !7319
  call void @llvm.dbg.declare(metadata i16** %ur, metadata !7320, metadata !DIExpression()), !dbg !7321
  call void @llvm.dbg.declare(metadata i16** %uresp1, metadata !7322, metadata !DIExpression()), !dbg !7323
  %19 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !7324
  %bits25 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %19, i32 0, i32 2, !dbg !7325
  %20 = load i8, i8* %bits25, align 4, !dbg !7325
  %21 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7326
  %bits26 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %21, i32 0, i32 2, !dbg !7327
  store i8 %20, i8* %bits26, align 4, !dbg !7328
  %22 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7329
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %22, i32 0, i32 3, !dbg !7330
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !7329
  %23 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7331
  %digits27 = getelementptr inbounds %struct.decContext, %struct.decContext* %23, i32 0, i32 0, !dbg !7331
  %24 = load i32, i32* %digits27, align 4, !dbg !7331
  %cmp28 = icmp sle i32 %24, 49, !dbg !7331
  br i1 %cmp28, label %cond.true, label %cond.false, !dbg !7331

cond.true:                                        ; preds = %if.else24
  %25 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7331
  %digits30 = getelementptr inbounds %struct.decContext, %struct.decContext* %25, i32 0, i32 0, !dbg !7331
  %26 = load i32, i32* %digits30, align 4, !dbg !7331
  %idxprom = sext i32 %26 to i64, !dbg !7331
  %arrayidx = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom, !dbg !7331
  %27 = load i8, i8* %arrayidx, align 1, !dbg !7331
  %conv31 = zext i8 %27 to i32, !dbg !7331
  br label %cond.end, !dbg !7331

cond.false:                                       ; preds = %if.else24
  %28 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7331
  %digits32 = getelementptr inbounds %struct.decContext, %struct.decContext* %28, i32 0, i32 0, !dbg !7331
  %29 = load i32, i32* %digits32, align 4, !dbg !7331
  %add = add nsw i32 %29, 3, !dbg !7331
  %sub = sub nsw i32 %add, 1, !dbg !7331
  %div = sdiv i32 %sub, 3, !dbg !7331
  br label %cond.end, !dbg !7331

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv31, %cond.true ], [ %div, %cond.false ], !dbg !7331
  %idx.ext = sext i32 %cond to i64, !dbg !7332
  %add.ptr = getelementptr inbounds i16, i16* %arraydecay, i64 %idx.ext, !dbg !7332
  store i16* %add.ptr, i16** %uresp1, align 8, !dbg !7333
  %30 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7334
  %lsu33 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %30, i32 0, i32 3, !dbg !7336
  %arraydecay34 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu33, i64 0, i64 0, !dbg !7334
  store i16* %arraydecay34, i16** %ur, align 8, !dbg !7337
  %31 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !7338
  %lsu35 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %31, i32 0, i32 3, !dbg !7339
  %arraydecay36 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu35, i64 0, i64 0, !dbg !7338
  store i16* %arraydecay36, i16** %ul, align 8, !dbg !7340
  br label %for.cond, !dbg !7341

for.cond:                                         ; preds = %for.inc, %cond.end
  %32 = load i16*, i16** %ur, align 8, !dbg !7342
  %33 = load i16*, i16** %uresp1, align 8, !dbg !7344
  %cmp37 = icmp ult i16* %32, %33, !dbg !7345
  br i1 %cmp37, label %for.body, label %for.end, !dbg !7346

for.body:                                         ; preds = %for.cond
  %34 = load i16*, i16** %ul, align 8, !dbg !7347
  %35 = load i16, i16* %34, align 2, !dbg !7348
  %36 = load i16*, i16** %ur, align 8, !dbg !7349
  store i16 %35, i16* %36, align 2, !dbg !7350
  br label %for.inc, !dbg !7351

for.inc:                                          ; preds = %for.body
  %37 = load i16*, i16** %ur, align 8, !dbg !7352
  %incdec.ptr = getelementptr inbounds i16, i16* %37, i32 1, !dbg !7352
  store i16* %incdec.ptr, i16** %ur, align 8, !dbg !7352
  %38 = load i16*, i16** %ul, align 8, !dbg !7353
  %incdec.ptr39 = getelementptr inbounds i16, i16* %38, i32 1, !dbg !7353
  store i16* %incdec.ptr39, i16** %ul, align 8, !dbg !7353
  br label %for.cond, !dbg !7354, !llvm.loop !7355

for.end:                                          ; preds = %for.cond
  %39 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7357
  %digits40 = getelementptr inbounds %struct.decContext, %struct.decContext* %39, i32 0, i32 0, !dbg !7357
  %40 = load i32, i32* %digits40, align 4, !dbg !7357
  %cmp41 = icmp sle i32 %40, 49, !dbg !7357
  br i1 %cmp41, label %cond.true43, label %cond.false48, !dbg !7357

cond.true43:                                      ; preds = %for.end
  %41 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7357
  %digits44 = getelementptr inbounds %struct.decContext, %struct.decContext* %41, i32 0, i32 0, !dbg !7357
  %42 = load i32, i32* %digits44, align 4, !dbg !7357
  %idxprom45 = sext i32 %42 to i64, !dbg !7357
  %arrayidx46 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom45, !dbg !7357
  %43 = load i8, i8* %arrayidx46, align 1, !dbg !7357
  %conv47 = zext i8 %43 to i32, !dbg !7357
  br label %cond.end53, !dbg !7357

cond.false48:                                     ; preds = %for.end
  %44 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7357
  %digits49 = getelementptr inbounds %struct.decContext, %struct.decContext* %44, i32 0, i32 0, !dbg !7357
  %45 = load i32, i32* %digits49, align 4, !dbg !7357
  %add50 = add nsw i32 %45, 3, !dbg !7357
  %sub51 = sub nsw i32 %add50, 1, !dbg !7357
  %div52 = sdiv i32 %sub51, 3, !dbg !7357
  br label %cond.end53, !dbg !7357

cond.end53:                                       ; preds = %cond.false48, %cond.true43
  %cond54 = phi i32 [ %conv47, %cond.true43 ], [ %div52, %cond.false48 ], !dbg !7357
  %mul = mul nsw i32 %cond54, 3, !dbg !7358
  %46 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7359
  %digits55 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %46, i32 0, i32 0, !dbg !7360
  store i32 %mul, i32* %digits55, align 4, !dbg !7361
  %47 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7362
  %digits56 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %47, i32 0, i32 0, !dbg !7364
  %48 = load i32, i32* %digits56, align 4, !dbg !7364
  %49 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7365
  %digits57 = getelementptr inbounds %struct.decContext, %struct.decContext* %49, i32 0, i32 0, !dbg !7366
  %50 = load i32, i32* %digits57, align 4, !dbg !7366
  %cmp58 = icmp sgt i32 %48, %50, !dbg !7367
  br i1 %cmp58, label %if.then60, label %if.end65, !dbg !7368

if.then60:                                        ; preds = %cond.end53
  %51 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7369
  %52 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7370
  %digits61 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %52, i32 0, i32 0, !dbg !7371
  %53 = load i32, i32* %digits61, align 4, !dbg !7371
  %54 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7372
  %digits62 = getelementptr inbounds %struct.decContext, %struct.decContext* %54, i32 0, i32 0, !dbg !7373
  %55 = load i32, i32* %digits62, align 4, !dbg !7373
  %sub63 = sub nsw i32 %53, %55, !dbg !7374
  %call64 = call %struct.decNumber* @decDecap(%struct.decNumber* %51, i32 %sub63), !dbg !7375
  br label %if.end65, !dbg !7375

if.end65:                                         ; preds = %if.then60, %cond.end53
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then23
  %56 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7376
  %bits67 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %56, i32 0, i32 2, !dbg !7377
  %57 = load i8, i8* %bits67, align 4, !dbg !7378
  %conv68 = zext i8 %57 to i32, !dbg !7378
  %and69 = and i32 %conv68, -17, !dbg !7378
  %conv70 = trunc i32 %and69 to i8, !dbg !7378
  store i8 %conv70, i8* %bits67, align 4, !dbg !7378
  %58 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7379
  %bits71 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %58, i32 0, i32 2, !dbg !7380
  %59 = load i8, i8* %bits71, align 4, !dbg !7381
  %conv72 = zext i8 %59 to i32, !dbg !7381
  %or73 = or i32 %conv72, 32, !dbg !7381
  %conv74 = trunc i32 %or73 to i8, !dbg !7381
  store i8 %conv74, i8* %bits71, align 4, !dbg !7381
  %60 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7382
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %60, i32 0, i32 1, !dbg !7383
  store i32 0, i32* %exponent, align 4, !dbg !7384
  %61 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7385
  ret %struct.decNumber* %61, !dbg !7386
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberCopyAbs(%struct.decNumber* %res, %struct.decNumber* %rhs) #0 !dbg !7387 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !7388, metadata !DIExpression()), !dbg !7389
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !7390, metadata !DIExpression()), !dbg !7391
  %0 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7392
  %1 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7393
  %call = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %0, %struct.decNumber* %1), !dbg !7394
  %2 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7395
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 2, !dbg !7396
  %3 = load i8, i8* %bits, align 4, !dbg !7397
  %conv = zext i8 %3 to i32, !dbg !7397
  %and = and i32 %conv, -129, !dbg !7397
  %conv1 = trunc i32 %and to i8, !dbg !7397
  store i8 %conv1, i8* %bits, align 4, !dbg !7397
  %4 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7398
  ret %struct.decNumber* %4, !dbg !7399
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberLog10(%struct.decNumber* %res, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !7400 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status = alloca i32, align 4
  %ignore = alloca i32, align 4
  %needbytes = alloca i32, align 4
  %p = alloca i32, align 4
  %t = alloca i32, align 4
  %bufa = alloca [3 x %struct.decNumber], align 16
  %allocbufa = alloca %struct.decNumber*, align 8
  %a = alloca %struct.decNumber*, align 8
  %bufb = alloca [3 x %struct.decNumber], align 16
  %allocbufb = alloca %struct.decNumber*, align 8
  %b = alloca %struct.decNumber*, align 8
  %bufw = alloca [2 x %struct.decNumber], align 16
  %w = alloca %struct.decNumber*, align 8
  %aset = alloca %struct.decContext, align 4
  %residue = alloca i32, align 4
  %copystat = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !7401, metadata !DIExpression()), !dbg !7402
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !7403, metadata !DIExpression()), !dbg !7404
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !7405, metadata !DIExpression()), !dbg !7406
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7407, metadata !DIExpression()), !dbg !7408
  store i32 0, i32* %status, align 4, !dbg !7408
  call void @llvm.dbg.declare(metadata i32* %ignore, metadata !7409, metadata !DIExpression()), !dbg !7410
  store i32 0, i32* %ignore, align 4, !dbg !7410
  call void @llvm.dbg.declare(metadata i32* %needbytes, metadata !7411, metadata !DIExpression()), !dbg !7412
  call void @llvm.dbg.declare(metadata i32* %p, metadata !7413, metadata !DIExpression()), !dbg !7414
  call void @llvm.dbg.declare(metadata i32* %t, metadata !7415, metadata !DIExpression()), !dbg !7416
  call void @llvm.dbg.declare(metadata [3 x %struct.decNumber]* %bufa, metadata !7417, metadata !DIExpression()), !dbg !7418
  call void @llvm.dbg.declare(metadata %struct.decNumber** %allocbufa, metadata !7419, metadata !DIExpression()), !dbg !7420
  store %struct.decNumber* null, %struct.decNumber** %allocbufa, align 8, !dbg !7420
  call void @llvm.dbg.declare(metadata %struct.decNumber** %a, metadata !7421, metadata !DIExpression()), !dbg !7422
  %arraydecay = getelementptr inbounds [3 x %struct.decNumber], [3 x %struct.decNumber]* %bufa, i64 0, i64 0, !dbg !7423
  store %struct.decNumber* %arraydecay, %struct.decNumber** %a, align 8, !dbg !7422
  call void @llvm.dbg.declare(metadata [3 x %struct.decNumber]* %bufb, metadata !7424, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.declare(metadata %struct.decNumber** %allocbufb, metadata !7426, metadata !DIExpression()), !dbg !7427
  store %struct.decNumber* null, %struct.decNumber** %allocbufb, align 8, !dbg !7427
  call void @llvm.dbg.declare(metadata %struct.decNumber** %b, metadata !7428, metadata !DIExpression()), !dbg !7429
  %arraydecay1 = getelementptr inbounds [3 x %struct.decNumber], [3 x %struct.decNumber]* %bufb, i64 0, i64 0, !dbg !7430
  store %struct.decNumber* %arraydecay1, %struct.decNumber** %b, align 8, !dbg !7429
  call void @llvm.dbg.declare(metadata [2 x %struct.decNumber]* %bufw, metadata !7431, metadata !DIExpression()), !dbg !7432
  call void @llvm.dbg.declare(metadata %struct.decNumber** %w, metadata !7433, metadata !DIExpression()), !dbg !7434
  %arraydecay2 = getelementptr inbounds [2 x %struct.decNumber], [2 x %struct.decNumber]* %bufw, i64 0, i64 0, !dbg !7435
  store %struct.decNumber* %arraydecay2, %struct.decNumber** %w, align 8, !dbg !7434
  call void @llvm.dbg.declare(metadata %struct.decContext* %aset, metadata !7436, metadata !DIExpression()), !dbg !7437
  %0 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7438
  %1 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7440
  %call = call i32 @decCheckMath(%struct.decNumber* %0, %struct.decContext* %1, i32* %status), !dbg !7441
  %tobool = icmp ne i32 %call, 0, !dbg !7441
  br i1 %tobool, label %if.end132, label %if.then, !dbg !7442

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7443

do.body:                                          ; preds = %if.then
  %call3 = call %struct.decContext* @decContextDefault(%struct.decContext* %aset, i32 64), !dbg !7444
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7446
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 2, !dbg !7448
  %3 = load i8, i8* %bits, align 4, !dbg !7448
  %conv = zext i8 %3 to i32, !dbg !7446
  %and = and i32 %conv, 240, !dbg !7449
  %tobool4 = icmp ne i32 %and, 0, !dbg !7449
  br i1 %tobool4, label %if.end28, label %land.lhs.true, !dbg !7450

land.lhs.true:                                    ; preds = %do.body
  %4 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7451
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 3, !dbg !7451
  %arraydecay5 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !7451
  %5 = load i16, i16* %arraydecay5, align 2, !dbg !7451
  %conv6 = zext i16 %5 to i32, !dbg !7451
  %cmp = icmp eq i32 %conv6, 0, !dbg !7451
  br i1 %cmp, label %land.lhs.true8, label %if.then17, !dbg !7451

land.lhs.true8:                                   ; preds = %land.lhs.true
  %6 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7451
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %6, i32 0, i32 0, !dbg !7451
  %7 = load i32, i32* %digits, align 4, !dbg !7451
  %cmp9 = icmp eq i32 %7, 1, !dbg !7451
  br i1 %cmp9, label %land.lhs.true11, label %if.then17, !dbg !7451

land.lhs.true11:                                  ; preds = %land.lhs.true8
  %8 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7451
  %bits12 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i32 0, i32 2, !dbg !7451
  %9 = load i8, i8* %bits12, align 4, !dbg !7451
  %conv13 = zext i8 %9 to i32, !dbg !7451
  %and14 = and i32 %conv13, 112, !dbg !7451
  %cmp15 = icmp eq i32 %and14, 0, !dbg !7451
  br i1 %cmp15, label %if.end28, label %if.then17, !dbg !7452

if.then17:                                        ; preds = %land.lhs.true11, %land.lhs.true8, %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %residue, metadata !7453, metadata !DIExpression()), !dbg !7455
  store i32 0, i32* %residue, align 4, !dbg !7455
  call void @llvm.dbg.declare(metadata i32* %copystat, metadata !7456, metadata !DIExpression()), !dbg !7457
  store i32 0, i32* %copystat, align 4, !dbg !7457
  %digits18 = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 0, !dbg !7458
  store i32 1, i32* %digits18, align 4, !dbg !7459
  %10 = load %struct.decNumber*, %struct.decNumber** %w, align 8, !dbg !7460
  %11 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7461
  call void @decCopyFit(%struct.decNumber* %10, %struct.decNumber* %11, %struct.decContext* %aset, i32* %residue, i32* %copystat), !dbg !7462
  %12 = load i32, i32* %copystat, align 4, !dbg !7463
  %and19 = and i32 %12, 32, !dbg !7465
  %tobool20 = icmp ne i32 %and19, 0, !dbg !7465
  br i1 %tobool20, label %if.end, label %land.lhs.true21, !dbg !7466

land.lhs.true21:                                  ; preds = %if.then17
  %13 = load %struct.decNumber*, %struct.decNumber** %w, align 8, !dbg !7467
  %lsu22 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %13, i32 0, i32 3, !dbg !7468
  %arrayidx = getelementptr inbounds [1 x i16], [1 x i16]* %lsu22, i64 0, i64 0, !dbg !7467
  %14 = load i16, i16* %arrayidx, align 2, !dbg !7467
  %conv23 = zext i16 %14 to i32, !dbg !7467
  %cmp24 = icmp eq i32 %conv23, 1, !dbg !7469
  br i1 %cmp24, label %if.then26, label %if.end, !dbg !7470

if.then26:                                        ; preds = %land.lhs.true21
  %15 = load %struct.decNumber*, %struct.decNumber** %w, align 8, !dbg !7471
  %16 = load %struct.decNumber*, %struct.decNumber** %w, align 8, !dbg !7473
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %16, i32 0, i32 1, !dbg !7474
  %17 = load i32, i32* %exponent, align 4, !dbg !7474
  %call27 = call %struct.decNumber* @decNumberFromInt32(%struct.decNumber* %15, i32 %17), !dbg !7475
  store i32 0, i32* %residue, align 4, !dbg !7476
  %18 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7477
  %19 = load %struct.decNumber*, %struct.decNumber** %w, align 8, !dbg !7478
  %20 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7479
  call void @decCopyFit(%struct.decNumber* %18, %struct.decNumber* %19, %struct.decContext* %20, i32* %residue, i32* %status), !dbg !7480
  %21 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7481
  %22 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7481
  call void @decFinalize(%struct.decNumber* %21, %struct.decContext* %22, i32* %residue, i32* %status), !dbg !7481
  br label %do.end, !dbg !7482

if.end:                                           ; preds = %land.lhs.true21, %if.then17
  br label %if.end28, !dbg !7483

if.end28:                                         ; preds = %if.end, %land.lhs.true11, %do.body
  store i32 6, i32* %t, align 4, !dbg !7484
  %23 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7485
  %digits29 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %23, i32 0, i32 0, !dbg !7486
  %24 = load i32, i32* %digits29, align 4, !dbg !7486
  %25 = load i32, i32* %t, align 4, !dbg !7487
  %add = add nsw i32 %24, %25, !dbg !7488
  %26 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7489
  %digits30 = getelementptr inbounds %struct.decContext, %struct.decContext* %26, i32 0, i32 0, !dbg !7490
  %27 = load i32, i32* %digits30, align 4, !dbg !7490
  %cmp31 = icmp sgt i32 %add, %27, !dbg !7491
  br i1 %cmp31, label %cond.true, label %cond.false, !dbg !7485

cond.true:                                        ; preds = %if.end28
  %28 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7492
  %digits33 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %28, i32 0, i32 0, !dbg !7493
  %29 = load i32, i32* %digits33, align 4, !dbg !7493
  %30 = load i32, i32* %t, align 4, !dbg !7494
  %add34 = add nsw i32 %29, %30, !dbg !7495
  br label %cond.end, !dbg !7485

cond.false:                                       ; preds = %if.end28
  %31 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7496
  %digits35 = getelementptr inbounds %struct.decContext, %struct.decContext* %31, i32 0, i32 0, !dbg !7497
  %32 = load i32, i32* %digits35, align 4, !dbg !7497
  br label %cond.end, !dbg !7485

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add34, %cond.true ], [ %32, %cond.false ], !dbg !7485
  %add36 = add nsw i32 %cond, 3, !dbg !7498
  store i32 %add36, i32* %p, align 4, !dbg !7499
  %33 = load i32, i32* %p, align 4, !dbg !7500
  %cmp37 = icmp sle i32 %33, 49, !dbg !7500
  br i1 %cmp37, label %cond.true39, label %cond.false42, !dbg !7500

cond.true39:                                      ; preds = %cond.end
  %34 = load i32, i32* %p, align 4, !dbg !7500
  %idxprom = sext i32 %34 to i64, !dbg !7500
  %arrayidx40 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom, !dbg !7500
  %35 = load i8, i8* %arrayidx40, align 1, !dbg !7500
  %conv41 = zext i8 %35 to i32, !dbg !7500
  br label %cond.end44, !dbg !7500

cond.false42:                                     ; preds = %cond.end
  %36 = load i32, i32* %p, align 4, !dbg !7500
  %add43 = add nsw i32 %36, 3, !dbg !7500
  %sub = sub nsw i32 %add43, 1, !dbg !7500
  %div = sdiv i32 %sub, 3, !dbg !7500
  br label %cond.end44, !dbg !7500

cond.end44:                                       ; preds = %cond.false42, %cond.true39
  %cond45 = phi i32 [ %conv41, %cond.true39 ], [ %div, %cond.false42 ], !dbg !7500
  %sub46 = sub nsw i32 %cond45, 1, !dbg !7501
  %conv47 = sext i32 %sub46 to i64, !dbg !7502
  %mul = mul i64 %conv47, 2, !dbg !7503
  %add48 = add i64 12, %mul, !dbg !7504
  %conv49 = trunc i64 %add48 to i32, !dbg !7505
  store i32 %conv49, i32* %needbytes, align 4, !dbg !7506
  %37 = load i32, i32* %needbytes, align 4, !dbg !7507
  %conv50 = zext i32 %37 to i64, !dbg !7507
  %cmp51 = icmp ugt i64 %conv50, 36, !dbg !7509
  br i1 %cmp51, label %if.then53, label %if.end60, !dbg !7510

if.then53:                                        ; preds = %cond.end44
  %38 = load i32, i32* %needbytes, align 4, !dbg !7511
  %conv54 = zext i32 %38 to i64, !dbg !7511
  %call55 = call noalias i8* @malloc(i64 %conv54) #6, !dbg !7513
  %39 = bitcast i8* %call55 to %struct.decNumber*, !dbg !7514
  store %struct.decNumber* %39, %struct.decNumber** %allocbufa, align 8, !dbg !7515
  %40 = load %struct.decNumber*, %struct.decNumber** %allocbufa, align 8, !dbg !7516
  %cmp56 = icmp eq %struct.decNumber* %40, null, !dbg !7518
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !7519

if.then58:                                        ; preds = %if.then53
  %41 = load i32, i32* %status, align 4, !dbg !7520
  %or = or i32 %41, 16, !dbg !7520
  store i32 %or, i32* %status, align 4, !dbg !7520
  br label %do.end, !dbg !7522

if.end59:                                         ; preds = %if.then53
  %42 = load %struct.decNumber*, %struct.decNumber** %allocbufa, align 8, !dbg !7523
  store %struct.decNumber* %42, %struct.decNumber** %a, align 8, !dbg !7524
  br label %if.end60, !dbg !7525

if.end60:                                         ; preds = %if.end59, %cond.end44
  %43 = load i32, i32* %p, align 4, !dbg !7526
  %digits61 = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 0, !dbg !7527
  store i32 %43, i32* %digits61, align 4, !dbg !7528
  %emax = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 1, !dbg !7529
  store i32 999999, i32* %emax, align 4, !dbg !7530
  %emin = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 2, !dbg !7531
  store i32 -999999, i32* %emin, align 4, !dbg !7532
  %clamp = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 6, !dbg !7533
  store i8 0, i8* %clamp, align 4, !dbg !7534
  %44 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7535
  %45 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7536
  %call62 = call %struct.decNumber* @decLnOp(%struct.decNumber* %44, %struct.decNumber* %45, %struct.decContext* %aset, i32* %status), !dbg !7537
  %46 = load i32, i32* %status, align 4, !dbg !7538
  %and63 = and i32 %46, 221, !dbg !7540
  %tobool64 = icmp ne i32 %and63, 0, !dbg !7540
  br i1 %tobool64, label %land.lhs.true65, label %if.end69, !dbg !7541

land.lhs.true65:                                  ; preds = %if.end60
  %47 = load i32, i32* %status, align 4, !dbg !7542
  %and66 = and i32 %47, 1073741824, !dbg !7543
  %tobool67 = icmp ne i32 %and66, 0, !dbg !7543
  br i1 %tobool67, label %if.end69, label %if.then68, !dbg !7544

if.then68:                                        ; preds = %land.lhs.true65
  br label %do.end, !dbg !7545

if.end69:                                         ; preds = %land.lhs.true65, %if.end60
  %48 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7546
  %bits70 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %48, i32 0, i32 2, !dbg !7548
  %49 = load i8, i8* %bits70, align 4, !dbg !7548
  %conv71 = zext i8 %49 to i32, !dbg !7546
  %and72 = and i32 %conv71, 112, !dbg !7549
  %tobool73 = icmp ne i32 %and72, 0, !dbg !7549
  br i1 %tobool73, label %if.then89, label %lor.lhs.false, !dbg !7550

lor.lhs.false:                                    ; preds = %if.end69
  %50 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7551
  %lsu74 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %50, i32 0, i32 3, !dbg !7551
  %arraydecay75 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu74, i64 0, i64 0, !dbg !7551
  %51 = load i16, i16* %arraydecay75, align 2, !dbg !7551
  %conv76 = zext i16 %51 to i32, !dbg !7551
  %cmp77 = icmp eq i32 %conv76, 0, !dbg !7551
  br i1 %cmp77, label %land.lhs.true79, label %if.end91, !dbg !7551

land.lhs.true79:                                  ; preds = %lor.lhs.false
  %52 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7551
  %digits80 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %52, i32 0, i32 0, !dbg !7551
  %53 = load i32, i32* %digits80, align 4, !dbg !7551
  %cmp81 = icmp eq i32 %53, 1, !dbg !7551
  br i1 %cmp81, label %land.lhs.true83, label %if.end91, !dbg !7551

land.lhs.true83:                                  ; preds = %land.lhs.true79
  %54 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7551
  %bits84 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %54, i32 0, i32 2, !dbg !7551
  %55 = load i8, i8* %bits84, align 4, !dbg !7551
  %conv85 = zext i8 %55 to i32, !dbg !7551
  %and86 = and i32 %conv85, 112, !dbg !7551
  %cmp87 = icmp eq i32 %and86, 0, !dbg !7551
  br i1 %cmp87, label %if.then89, label %if.end91, !dbg !7552

if.then89:                                        ; preds = %land.lhs.true83, %if.end69
  %56 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7553
  %57 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7555
  %call90 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %56, %struct.decNumber* %57), !dbg !7556
  br label %do.end, !dbg !7557

if.end91:                                         ; preds = %land.lhs.true83, %land.lhs.true79, %lor.lhs.false
  %58 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7558
  %digits92 = getelementptr inbounds %struct.decContext, %struct.decContext* %58, i32 0, i32 0, !dbg !7559
  %59 = load i32, i32* %digits92, align 4, !dbg !7559
  %add93 = add nsw i32 %59, 3, !dbg !7560
  store i32 %add93, i32* %p, align 4, !dbg !7561
  %60 = load i32, i32* %p, align 4, !dbg !7562
  %cmp94 = icmp sle i32 %60, 49, !dbg !7562
  br i1 %cmp94, label %cond.true96, label %cond.false100, !dbg !7562

cond.true96:                                      ; preds = %if.end91
  %61 = load i32, i32* %p, align 4, !dbg !7562
  %idxprom97 = sext i32 %61 to i64, !dbg !7562
  %arrayidx98 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom97, !dbg !7562
  %62 = load i8, i8* %arrayidx98, align 1, !dbg !7562
  %conv99 = zext i8 %62 to i32, !dbg !7562
  br label %cond.end104, !dbg !7562

cond.false100:                                    ; preds = %if.end91
  %63 = load i32, i32* %p, align 4, !dbg !7562
  %add101 = add nsw i32 %63, 3, !dbg !7562
  %sub102 = sub nsw i32 %add101, 1, !dbg !7562
  %div103 = sdiv i32 %sub102, 3, !dbg !7562
  br label %cond.end104, !dbg !7562

cond.end104:                                      ; preds = %cond.false100, %cond.true96
  %cond105 = phi i32 [ %conv99, %cond.true96 ], [ %div103, %cond.false100 ], !dbg !7562
  %sub106 = sub nsw i32 %cond105, 1, !dbg !7563
  %conv107 = sext i32 %sub106 to i64, !dbg !7564
  %mul108 = mul i64 %conv107, 2, !dbg !7565
  %add109 = add i64 12, %mul108, !dbg !7566
  %conv110 = trunc i64 %add109 to i32, !dbg !7567
  store i32 %conv110, i32* %needbytes, align 4, !dbg !7568
  %64 = load i32, i32* %needbytes, align 4, !dbg !7569
  %conv111 = zext i32 %64 to i64, !dbg !7569
  %cmp112 = icmp ugt i64 %conv111, 36, !dbg !7571
  br i1 %cmp112, label %if.then114, label %if.end122, !dbg !7572

if.then114:                                       ; preds = %cond.end104
  %65 = load i32, i32* %needbytes, align 4, !dbg !7573
  %conv115 = zext i32 %65 to i64, !dbg !7573
  %call116 = call noalias i8* @malloc(i64 %conv115) #6, !dbg !7575
  %66 = bitcast i8* %call116 to %struct.decNumber*, !dbg !7576
  store %struct.decNumber* %66, %struct.decNumber** %allocbufb, align 8, !dbg !7577
  %67 = load %struct.decNumber*, %struct.decNumber** %allocbufb, align 8, !dbg !7578
  %cmp117 = icmp eq %struct.decNumber* %67, null, !dbg !7580
  br i1 %cmp117, label %if.then119, label %if.end121, !dbg !7581

if.then119:                                       ; preds = %if.then114
  %68 = load i32, i32* %status, align 4, !dbg !7582
  %or120 = or i32 %68, 16, !dbg !7582
  store i32 %or120, i32* %status, align 4, !dbg !7582
  br label %do.end, !dbg !7584

if.end121:                                        ; preds = %if.then114
  %69 = load %struct.decNumber*, %struct.decNumber** %allocbufb, align 8, !dbg !7585
  store %struct.decNumber* %69, %struct.decNumber** %b, align 8, !dbg !7586
  br label %if.end122, !dbg !7587

if.end122:                                        ; preds = %if.end121, %cond.end104
  %70 = load %struct.decNumber*, %struct.decNumber** %w, align 8, !dbg !7588
  %call123 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %70), !dbg !7589
  %71 = load %struct.decNumber*, %struct.decNumber** %w, align 8, !dbg !7590
  %lsu124 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %71, i32 0, i32 3, !dbg !7591
  %arrayidx125 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu124, i64 0, i64 0, !dbg !7590
  store i16 10, i16* %arrayidx125, align 2, !dbg !7592
  %72 = load %struct.decNumber*, %struct.decNumber** %w, align 8, !dbg !7593
  %digits126 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %72, i32 0, i32 0, !dbg !7594
  store i32 2, i32* %digits126, align 4, !dbg !7595
  %73 = load i32, i32* %p, align 4, !dbg !7596
  %digits127 = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 0, !dbg !7597
  store i32 %73, i32* %digits127, align 4, !dbg !7598
  %74 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !7599
  %75 = load %struct.decNumber*, %struct.decNumber** %w, align 8, !dbg !7600
  %call128 = call %struct.decNumber* @decLnOp(%struct.decNumber* %74, %struct.decNumber* %75, %struct.decContext* %aset, i32* %ignore), !dbg !7601
  %76 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7602
  %digits129 = getelementptr inbounds %struct.decContext, %struct.decContext* %76, i32 0, i32 0, !dbg !7603
  %77 = load i32, i32* %digits129, align 4, !dbg !7603
  %digits130 = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 0, !dbg !7604
  store i32 %77, i32* %digits130, align 4, !dbg !7605
  %78 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7606
  %79 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !7607
  %80 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !7608
  %call131 = call %struct.decNumber* @decDivideOp(%struct.decNumber* %78, %struct.decNumber* %79, %struct.decNumber* %80, %struct.decContext* %aset, i8 zeroext -128, i32* %status), !dbg !7609
  br label %do.end, !dbg !7610

do.end:                                           ; preds = %if.end122, %if.then119, %if.then89, %if.then68, %if.then58, %if.then26
  br label %if.end132, !dbg !7610

if.end132:                                        ; preds = %do.end, %entry
  %81 = load %struct.decNumber*, %struct.decNumber** %allocbufa, align 8, !dbg !7611
  %cmp133 = icmp ne %struct.decNumber* %81, null, !dbg !7613
  br i1 %cmp133, label %if.then135, label %if.end136, !dbg !7614

if.then135:                                       ; preds = %if.end132
  %82 = load %struct.decNumber*, %struct.decNumber** %allocbufa, align 8, !dbg !7615
  %83 = bitcast %struct.decNumber* %82 to i8*, !dbg !7615
  call void @free(i8* %83) #6, !dbg !7616
  br label %if.end136, !dbg !7616

if.end136:                                        ; preds = %if.then135, %if.end132
  %84 = load %struct.decNumber*, %struct.decNumber** %allocbufb, align 8, !dbg !7617
  %cmp137 = icmp ne %struct.decNumber* %84, null, !dbg !7619
  br i1 %cmp137, label %if.then139, label %if.end140, !dbg !7620

if.then139:                                       ; preds = %if.end136
  %85 = load %struct.decNumber*, %struct.decNumber** %allocbufb, align 8, !dbg !7621
  %86 = bitcast %struct.decNumber* %85 to i8*, !dbg !7621
  call void @free(i8* %86) #6, !dbg !7622
  br label %if.end140, !dbg !7622

if.end140:                                        ; preds = %if.then139, %if.end136
  %87 = load i32, i32* %status, align 4, !dbg !7623
  %cmp141 = icmp ne i32 %87, 0, !dbg !7625
  br i1 %cmp141, label %if.then143, label %if.end144, !dbg !7626

if.then143:                                       ; preds = %if.end140
  %88 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7627
  %89 = load i32, i32* %status, align 4, !dbg !7628
  %90 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7629
  call void @decStatus(%struct.decNumber* %88, i32 %89, %struct.decContext* %90), !dbg !7630
  br label %if.end144, !dbg !7630

if.end144:                                        ; preds = %if.then143, %if.end140
  %91 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7631
  ret %struct.decNumber* %91, !dbg !7632
}

declare dso_local %struct.decContext* @decContextDefault(%struct.decContext*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @decCopyFit(%struct.decNumber* %dest, %struct.decNumber* %src, %struct.decContext* %set, i32* %residue, i32* %status) #0 !dbg !7633 {
entry:
  %dest.addr = alloca %struct.decNumber*, align 8
  %src.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %residue.addr = alloca i32*, align 8
  %status.addr = alloca i32*, align 8
  store %struct.decNumber* %dest, %struct.decNumber** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dest.addr, metadata !7636, metadata !DIExpression()), !dbg !7637
  store %struct.decNumber* %src, %struct.decNumber** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %src.addr, metadata !7638, metadata !DIExpression()), !dbg !7639
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !7640, metadata !DIExpression()), !dbg !7641
  store i32* %residue, i32** %residue.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %residue.addr, metadata !7642, metadata !DIExpression()), !dbg !7643
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !7644, metadata !DIExpression()), !dbg !7645
  %0 = load %struct.decNumber*, %struct.decNumber** %src.addr, align 8, !dbg !7646
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 2, !dbg !7647
  %1 = load i8, i8* %bits, align 4, !dbg !7647
  %2 = load %struct.decNumber*, %struct.decNumber** %dest.addr, align 8, !dbg !7648
  %bits1 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 2, !dbg !7649
  store i8 %1, i8* %bits1, align 4, !dbg !7650
  %3 = load %struct.decNumber*, %struct.decNumber** %src.addr, align 8, !dbg !7651
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %3, i32 0, i32 1, !dbg !7652
  %4 = load i32, i32* %exponent, align 4, !dbg !7652
  %5 = load %struct.decNumber*, %struct.decNumber** %dest.addr, align 8, !dbg !7653
  %exponent2 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %5, i32 0, i32 1, !dbg !7654
  store i32 %4, i32* %exponent2, align 4, !dbg !7655
  %6 = load %struct.decNumber*, %struct.decNumber** %dest.addr, align 8, !dbg !7656
  %7 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7657
  %8 = load %struct.decNumber*, %struct.decNumber** %src.addr, align 8, !dbg !7658
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i32 0, i32 3, !dbg !7659
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !7658
  %9 = load %struct.decNumber*, %struct.decNumber** %src.addr, align 8, !dbg !7660
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %9, i32 0, i32 0, !dbg !7661
  %10 = load i32, i32* %digits, align 4, !dbg !7661
  %11 = load i32*, i32** %residue.addr, align 8, !dbg !7662
  %12 = load i32*, i32** %status.addr, align 8, !dbg !7663
  call void @decSetCoeff(%struct.decNumber* %6, %struct.decContext* %7, i16* %arraydecay, i32 %10, i32* %11, i32* %12), !dbg !7664
  ret void, !dbg !7665
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberMax(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !7666 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !7667, metadata !DIExpression()), !dbg !7668
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !7669, metadata !DIExpression()), !dbg !7670
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !7671, metadata !DIExpression()), !dbg !7672
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !7673, metadata !DIExpression()), !dbg !7674
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7675, metadata !DIExpression()), !dbg !7676
  store i32 0, i32* %status, align 4, !dbg !7676
  %0 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7677
  %1 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !7678
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7679
  %3 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7680
  %call = call %struct.decNumber* @decCompareOp(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext 2, i32* %status), !dbg !7681
  %4 = load i32, i32* %status, align 4, !dbg !7682
  %cmp = icmp ne i32 %4, 0, !dbg !7684
  br i1 %cmp, label %if.then, label %if.end, !dbg !7685

if.then:                                          ; preds = %entry
  %5 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7686
  %6 = load i32, i32* %status, align 4, !dbg !7687
  %7 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7688
  call void @decStatus(%struct.decNumber* %5, i32 %6, %struct.decContext* %7), !dbg !7689
  br label %if.end, !dbg !7689

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7690
  ret %struct.decNumber* %8, !dbg !7691
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberMaxMag(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !7692 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !7693, metadata !DIExpression()), !dbg !7694
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !7695, metadata !DIExpression()), !dbg !7696
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !7697, metadata !DIExpression()), !dbg !7698
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !7699, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7701, metadata !DIExpression()), !dbg !7702
  store i32 0, i32* %status, align 4, !dbg !7702
  %0 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7703
  %1 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !7704
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7705
  %3 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7706
  %call = call %struct.decNumber* @decCompareOp(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext 7, i32* %status), !dbg !7707
  %4 = load i32, i32* %status, align 4, !dbg !7708
  %cmp = icmp ne i32 %4, 0, !dbg !7710
  br i1 %cmp, label %if.then, label %if.end, !dbg !7711

if.then:                                          ; preds = %entry
  %5 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7712
  %6 = load i32, i32* %status, align 4, !dbg !7713
  %7 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7714
  call void @decStatus(%struct.decNumber* %5, i32 %6, %struct.decContext* %7), !dbg !7715
  br label %if.end, !dbg !7715

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7716
  ret %struct.decNumber* %8, !dbg !7717
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberMin(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !7718 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !7719, metadata !DIExpression()), !dbg !7720
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !7721, metadata !DIExpression()), !dbg !7722
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !7723, metadata !DIExpression()), !dbg !7724
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !7725, metadata !DIExpression()), !dbg !7726
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7727, metadata !DIExpression()), !dbg !7728
  store i32 0, i32* %status, align 4, !dbg !7728
  %0 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7729
  %1 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !7730
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7731
  %3 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7732
  %call = call %struct.decNumber* @decCompareOp(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext 3, i32* %status), !dbg !7733
  %4 = load i32, i32* %status, align 4, !dbg !7734
  %cmp = icmp ne i32 %4, 0, !dbg !7736
  br i1 %cmp, label %if.then, label %if.end, !dbg !7737

if.then:                                          ; preds = %entry
  %5 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7738
  %6 = load i32, i32* %status, align 4, !dbg !7739
  %7 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7740
  call void @decStatus(%struct.decNumber* %5, i32 %6, %struct.decContext* %7), !dbg !7741
  br label %if.end, !dbg !7741

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7742
  ret %struct.decNumber* %8, !dbg !7743
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberMinMag(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !7744 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !7745, metadata !DIExpression()), !dbg !7746
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !7747, metadata !DIExpression()), !dbg !7748
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !7749, metadata !DIExpression()), !dbg !7750
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !7751, metadata !DIExpression()), !dbg !7752
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7753, metadata !DIExpression()), !dbg !7754
  store i32 0, i32* %status, align 4, !dbg !7754
  %0 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7755
  %1 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !7756
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7757
  %3 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7758
  %call = call %struct.decNumber* @decCompareOp(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext 8, i32* %status), !dbg !7759
  %4 = load i32, i32* %status, align 4, !dbg !7760
  %cmp = icmp ne i32 %4, 0, !dbg !7762
  br i1 %cmp, label %if.then, label %if.end, !dbg !7763

if.then:                                          ; preds = %entry
  %5 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7764
  %6 = load i32, i32* %status, align 4, !dbg !7765
  %7 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7766
  call void @decStatus(%struct.decNumber* %5, i32 %6, %struct.decContext* %7), !dbg !7767
  br label %if.end, !dbg !7767

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7768
  ret %struct.decNumber* %8, !dbg !7769
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberMinus(%struct.decNumber* %res, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !7770 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %dzero = alloca %struct.decNumber, align 4
  %status = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !7771, metadata !DIExpression()), !dbg !7772
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !7773, metadata !DIExpression()), !dbg !7774
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !7775, metadata !DIExpression()), !dbg !7776
  call void @llvm.dbg.declare(metadata %struct.decNumber* %dzero, metadata !7777, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7779, metadata !DIExpression()), !dbg !7780
  store i32 0, i32* %status, align 4, !dbg !7780
  %call = call %struct.decNumber* @decNumberZero(%struct.decNumber* %dzero), !dbg !7781
  %0 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7782
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 1, !dbg !7783
  %1 = load i32, i32* %exponent, align 4, !dbg !7783
  %exponent1 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %dzero, i32 0, i32 1, !dbg !7784
  store i32 %1, i32* %exponent1, align 4, !dbg !7785
  %2 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7786
  %3 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7787
  %4 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7788
  %call2 = call %struct.decNumber* @decAddOp(%struct.decNumber* %2, %struct.decNumber* %dzero, %struct.decNumber* %3, %struct.decContext* %4, i8 zeroext -128, i32* %status), !dbg !7789
  %5 = load i32, i32* %status, align 4, !dbg !7790
  %cmp = icmp ne i32 %5, 0, !dbg !7792
  br i1 %cmp, label %if.then, label %if.end, !dbg !7793

if.then:                                          ; preds = %entry
  %6 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7794
  %7 = load i32, i32* %status, align 4, !dbg !7795
  %8 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7796
  call void @decStatus(%struct.decNumber* %6, i32 %7, %struct.decContext* %8), !dbg !7797
  br label %if.end, !dbg !7797

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7798
  ret %struct.decNumber* %9, !dbg !7799
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberNextMinus(%struct.decNumber* %res, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !7800 {
entry:
  %retval = alloca %struct.decNumber*, align 8
  %res.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %dtiny = alloca %struct.decNumber, align 4
  %workset = alloca %struct.decContext, align 4
  %status = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !7801, metadata !DIExpression()), !dbg !7802
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !7803, metadata !DIExpression()), !dbg !7804
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !7805, metadata !DIExpression()), !dbg !7806
  call void @llvm.dbg.declare(metadata %struct.decNumber* %dtiny, metadata !7807, metadata !DIExpression()), !dbg !7808
  call void @llvm.dbg.declare(metadata %struct.decContext* %workset, metadata !7809, metadata !DIExpression()), !dbg !7810
  %0 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7811
  %1 = bitcast %struct.decContext* %workset to i8*, !dbg !7812
  %2 = bitcast %struct.decContext* %0 to i8*, !dbg !7812
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 28, i1 false), !dbg !7812
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7813, metadata !DIExpression()), !dbg !7814
  store i32 0, i32* %status, align 4, !dbg !7814
  %3 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7815
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %3, i32 0, i32 2, !dbg !7817
  %4 = load i8, i8* %bits, align 4, !dbg !7817
  %conv = zext i8 %4 to i32, !dbg !7815
  %and = and i32 %conv, 192, !dbg !7818
  %cmp = icmp eq i32 %and, 64, !dbg !7819
  br i1 %cmp, label %if.then, label %if.end, !dbg !7820

if.then:                                          ; preds = %entry
  %5 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7821
  %6 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7823
  call void @decSetMaxValue(%struct.decNumber* %5, %struct.decContext* %6), !dbg !7824
  %7 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7825
  store %struct.decNumber* %7, %struct.decNumber** %retval, align 8, !dbg !7826
  br label %return, !dbg !7826

if.end:                                           ; preds = %entry
  %call = call %struct.decNumber* @decNumberZero(%struct.decNumber* %dtiny), !dbg !7827
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %dtiny, i32 0, i32 3, !dbg !7828
  %arrayidx = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !7829
  store i16 1, i16* %arrayidx, align 2, !dbg !7830
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %dtiny, i32 0, i32 1, !dbg !7831
  store i32 -1000000000, i32* %exponent, align 4, !dbg !7832
  %round = getelementptr inbounds %struct.decContext, %struct.decContext* %workset, i32 0, i32 3, !dbg !7833
  store i32 6, i32* %round, align 4, !dbg !7834
  %8 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7835
  %9 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7836
  %call2 = call %struct.decNumber* @decAddOp(%struct.decNumber* %8, %struct.decNumber* %9, %struct.decNumber* %dtiny, %struct.decContext* %workset, i8 zeroext -128, i32* %status), !dbg !7837
  %10 = load i32, i32* %status, align 4, !dbg !7838
  %and3 = and i32 %10, 1073741952, !dbg !7838
  store i32 %and3, i32* %status, align 4, !dbg !7838
  %11 = load i32, i32* %status, align 4, !dbg !7839
  %cmp4 = icmp ne i32 %11, 0, !dbg !7841
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !7842

if.then6:                                         ; preds = %if.end
  %12 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7843
  %13 = load i32, i32* %status, align 4, !dbg !7844
  %14 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7845
  call void @decStatus(%struct.decNumber* %12, i32 %13, %struct.decContext* %14), !dbg !7846
  br label %if.end7, !dbg !7846

if.end7:                                          ; preds = %if.then6, %if.end
  %15 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7847
  store %struct.decNumber* %15, %struct.decNumber** %retval, align 8, !dbg !7848
  br label %return, !dbg !7848

return:                                           ; preds = %if.end7, %if.then
  %16 = load %struct.decNumber*, %struct.decNumber** %retval, align 8, !dbg !7849
  ret %struct.decNumber* %16, !dbg !7849
}

; Function Attrs: noinline nounwind uwtable
define internal void @decSetMaxValue(%struct.decNumber* %dn, %struct.decContext* %set) #0 !dbg !7850 {
entry:
  %dn.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %up = alloca i16*, align 8
  %count = alloca i32, align 4
  store %struct.decNumber* %dn, %struct.decNumber** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dn.addr, metadata !7853, metadata !DIExpression()), !dbg !7854
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !7855, metadata !DIExpression()), !dbg !7856
  call void @llvm.dbg.declare(metadata i16** %up, metadata !7857, metadata !DIExpression()), !dbg !7858
  call void @llvm.dbg.declare(metadata i32* %count, metadata !7859, metadata !DIExpression()), !dbg !7860
  %0 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7861
  %digits = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i32 0, i32 0, !dbg !7862
  %1 = load i32, i32* %digits, align 4, !dbg !7862
  store i32 %1, i32* %count, align 4, !dbg !7860
  %2 = load i32, i32* %count, align 4, !dbg !7863
  %3 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !7864
  %digits1 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %3, i32 0, i32 0, !dbg !7865
  store i32 %2, i32* %digits1, align 4, !dbg !7866
  %4 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !7867
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 3, !dbg !7869
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !7867
  store i16* %arraydecay, i16** %up, align 8, !dbg !7870
  br label %for.cond, !dbg !7871

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %count, align 4, !dbg !7872
  %cmp = icmp sgt i32 %5, 3, !dbg !7876
  br i1 %cmp, label %if.then, label %if.else, !dbg !7877

if.then:                                          ; preds = %for.cond
  %6 = load i16*, i16** %up, align 8, !dbg !7878
  store i16 999, i16* %6, align 2, !dbg !7879
  br label %if.end, !dbg !7880

if.else:                                          ; preds = %for.cond
  %7 = load i32, i32* %count, align 4, !dbg !7881
  %idxprom = sext i32 %7 to i64, !dbg !7883
  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom, !dbg !7883
  %8 = load i32, i32* %arrayidx, align 4, !dbg !7883
  %sub = sub i32 %8, 1, !dbg !7884
  %conv = trunc i32 %sub to i16, !dbg !7885
  %9 = load i16*, i16** %up, align 8, !dbg !7886
  store i16 %conv, i16* %9, align 2, !dbg !7887
  br label %for.end, !dbg !7888

if.end:                                           ; preds = %if.then
  %10 = load i32, i32* %count, align 4, !dbg !7889
  %sub2 = sub nsw i32 %10, 3, !dbg !7889
  store i32 %sub2, i32* %count, align 4, !dbg !7889
  br label %for.inc, !dbg !7890

for.inc:                                          ; preds = %if.end
  %11 = load i16*, i16** %up, align 8, !dbg !7891
  %incdec.ptr = getelementptr inbounds i16, i16* %11, i32 1, !dbg !7891
  store i16* %incdec.ptr, i16** %up, align 8, !dbg !7891
  br label %for.cond, !dbg !7892, !llvm.loop !7893

for.end:                                          ; preds = %if.else
  %12 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !7896
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %12, i32 0, i32 2, !dbg !7897
  store i8 0, i8* %bits, align 4, !dbg !7898
  %13 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7899
  %emax = getelementptr inbounds %struct.decContext, %struct.decContext* %13, i32 0, i32 1, !dbg !7900
  %14 = load i32, i32* %emax, align 4, !dbg !7900
  %15 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7901
  %digits3 = getelementptr inbounds %struct.decContext, %struct.decContext* %15, i32 0, i32 0, !dbg !7902
  %16 = load i32, i32* %digits3, align 4, !dbg !7902
  %sub4 = sub nsw i32 %14, %16, !dbg !7903
  %add = add nsw i32 %sub4, 1, !dbg !7904
  %17 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !7905
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %17, i32 0, i32 1, !dbg !7906
  store i32 %add, i32* %exponent, align 4, !dbg !7907
  ret void, !dbg !7908
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberNextPlus(%struct.decNumber* %res, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !7909 {
entry:
  %retval = alloca %struct.decNumber*, align 8
  %res.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %dtiny = alloca %struct.decNumber, align 4
  %workset = alloca %struct.decContext, align 4
  %status = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !7910, metadata !DIExpression()), !dbg !7911
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !7912, metadata !DIExpression()), !dbg !7913
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !7914, metadata !DIExpression()), !dbg !7915
  call void @llvm.dbg.declare(metadata %struct.decNumber* %dtiny, metadata !7916, metadata !DIExpression()), !dbg !7917
  call void @llvm.dbg.declare(metadata %struct.decContext* %workset, metadata !7918, metadata !DIExpression()), !dbg !7919
  %0 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7920
  %1 = bitcast %struct.decContext* %workset to i8*, !dbg !7921
  %2 = bitcast %struct.decContext* %0 to i8*, !dbg !7921
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 28, i1 false), !dbg !7921
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7922, metadata !DIExpression()), !dbg !7923
  store i32 0, i32* %status, align 4, !dbg !7923
  %3 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7924
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %3, i32 0, i32 2, !dbg !7926
  %4 = load i8, i8* %bits, align 4, !dbg !7926
  %conv = zext i8 %4 to i32, !dbg !7924
  %and = and i32 %conv, 192, !dbg !7927
  %cmp = icmp eq i32 %and, 192, !dbg !7928
  br i1 %cmp, label %if.then, label %if.end, !dbg !7929

if.then:                                          ; preds = %entry
  %5 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7930
  %6 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7932
  call void @decSetMaxValue(%struct.decNumber* %5, %struct.decContext* %6), !dbg !7933
  %7 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7934
  %bits2 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %7, i32 0, i32 2, !dbg !7935
  store i8 -128, i8* %bits2, align 4, !dbg !7936
  %8 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7937
  store %struct.decNumber* %8, %struct.decNumber** %retval, align 8, !dbg !7938
  br label %return, !dbg !7938

if.end:                                           ; preds = %entry
  %call = call %struct.decNumber* @decNumberZero(%struct.decNumber* %dtiny), !dbg !7939
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %dtiny, i32 0, i32 3, !dbg !7940
  %arrayidx = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !7941
  store i16 1, i16* %arrayidx, align 2, !dbg !7942
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %dtiny, i32 0, i32 1, !dbg !7943
  store i32 -1000000000, i32* %exponent, align 4, !dbg !7944
  %round = getelementptr inbounds %struct.decContext, %struct.decContext* %workset, i32 0, i32 3, !dbg !7945
  store i32 0, i32* %round, align 4, !dbg !7946
  %9 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7947
  %10 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7948
  %call3 = call %struct.decNumber* @decAddOp(%struct.decNumber* %9, %struct.decNumber* %10, %struct.decNumber* %dtiny, %struct.decContext* %workset, i8 zeroext 0, i32* %status), !dbg !7949
  %11 = load i32, i32* %status, align 4, !dbg !7950
  %and4 = and i32 %11, 1073741952, !dbg !7950
  store i32 %and4, i32* %status, align 4, !dbg !7950
  %12 = load i32, i32* %status, align 4, !dbg !7951
  %cmp5 = icmp ne i32 %12, 0, !dbg !7953
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !7954

if.then7:                                         ; preds = %if.end
  %13 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7955
  %14 = load i32, i32* %status, align 4, !dbg !7956
  %15 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7957
  call void @decStatus(%struct.decNumber* %13, i32 %14, %struct.decContext* %15), !dbg !7958
  br label %if.end8, !dbg !7958

if.end8:                                          ; preds = %if.then7, %if.end
  %16 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7959
  store %struct.decNumber* %16, %struct.decNumber** %retval, align 8, !dbg !7960
  br label %return, !dbg !7960

return:                                           ; preds = %if.end8, %if.then
  %17 = load %struct.decNumber*, %struct.decNumber** %retval, align 8, !dbg !7961
  ret %struct.decNumber* %17, !dbg !7961
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberNextToward(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !7962 {
entry:
  %retval = alloca %struct.decNumber*, align 8
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %dtiny = alloca %struct.decNumber, align 4
  %workset = alloca %struct.decContext, align 4
  %result = alloca i32, align 4
  %status = alloca i32, align 4
  %sub = alloca i8, align 1
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !7963, metadata !DIExpression()), !dbg !7964
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !7965, metadata !DIExpression()), !dbg !7966
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !7967, metadata !DIExpression()), !dbg !7968
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !7969, metadata !DIExpression()), !dbg !7970
  call void @llvm.dbg.declare(metadata %struct.decNumber* %dtiny, metadata !7971, metadata !DIExpression()), !dbg !7972
  call void @llvm.dbg.declare(metadata %struct.decContext* %workset, metadata !7973, metadata !DIExpression()), !dbg !7974
  %0 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7975
  %1 = bitcast %struct.decContext* %workset to i8*, !dbg !7976
  %2 = bitcast %struct.decContext* %0 to i8*, !dbg !7976
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 28, i1 false), !dbg !7976
  call void @llvm.dbg.declare(metadata i32* %result, metadata !7977, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7979, metadata !DIExpression()), !dbg !7980
  store i32 0, i32* %status, align 4, !dbg !7980
  %3 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !7981
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %3, i32 0, i32 2, !dbg !7981
  %4 = load i8, i8* %bits, align 4, !dbg !7981
  %conv = zext i8 %4 to i32, !dbg !7981
  %and = and i32 %conv, 48, !dbg !7981
  %cmp = icmp ne i32 %and, 0, !dbg !7981
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7983

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7984
  %bits2 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %5, i32 0, i32 2, !dbg !7984
  %6 = load i8, i8* %bits2, align 4, !dbg !7984
  %conv3 = zext i8 %6 to i32, !dbg !7984
  %and4 = and i32 %conv3, 48, !dbg !7984
  %cmp5 = icmp ne i32 %and4, 0, !dbg !7984
  br i1 %cmp5, label %if.then, label %if.else, !dbg !7985

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !7986
  %8 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !7988
  %9 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7989
  %10 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !7990
  %call = call %struct.decNumber* @decNaNs(%struct.decNumber* %7, %struct.decNumber* %8, %struct.decNumber* %9, %struct.decContext* %10, i32* %status), !dbg !7991
  br label %if.end44, !dbg !7992

if.else:                                          ; preds = %lor.lhs.false
  %11 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !7993
  %12 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !7995
  %call7 = call i32 @decCompare(%struct.decNumber* %11, %struct.decNumber* %12, i8 zeroext 0), !dbg !7996
  store i32 %call7, i32* %result, align 4, !dbg !7997
  %13 = load i32, i32* %result, align 4, !dbg !7998
  %cmp8 = icmp eq i32 %13, -2147483648, !dbg !8000
  br i1 %cmp8, label %if.then10, label %if.else11, !dbg !8001

if.then10:                                        ; preds = %if.else
  %14 = load i32, i32* %status, align 4, !dbg !8002
  %or = or i32 %14, 16, !dbg !8002
  store i32 %or, i32* %status, align 4, !dbg !8002
  br label %if.end43, !dbg !8003

if.else11:                                        ; preds = %if.else
  %15 = load i32, i32* %result, align 4, !dbg !8004
  %cmp12 = icmp eq i32 %15, 0, !dbg !8007
  br i1 %cmp12, label %if.then14, label %if.else16, !dbg !8008

if.then14:                                        ; preds = %if.else11
  %16 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8009
  %17 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8010
  %18 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8011
  %call15 = call %struct.decNumber* @decNumberCopySign(%struct.decNumber* %16, %struct.decNumber* %17, %struct.decNumber* %18), !dbg !8012
  br label %if.end42, !dbg !8012

if.else16:                                        ; preds = %if.else11
  call void @llvm.dbg.declare(metadata i8* %sub, metadata !8013, metadata !DIExpression()), !dbg !8015
  %19 = load i32, i32* %result, align 4, !dbg !8016
  %cmp17 = icmp slt i32 %19, 0, !dbg !8018
  br i1 %cmp17, label %if.then19, label %if.else27, !dbg !8019

if.then19:                                        ; preds = %if.else16
  %20 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8020
  %bits20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %20, i32 0, i32 2, !dbg !8023
  %21 = load i8, i8* %bits20, align 4, !dbg !8023
  %conv21 = zext i8 %21 to i32, !dbg !8020
  %and22 = and i32 %conv21, 192, !dbg !8024
  %cmp23 = icmp eq i32 %and22, 192, !dbg !8025
  br i1 %cmp23, label %if.then25, label %if.end, !dbg !8026

if.then25:                                        ; preds = %if.then19
  %22 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8027
  %23 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8029
  call void @decSetMaxValue(%struct.decNumber* %22, %struct.decContext* %23), !dbg !8030
  %24 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8031
  %bits26 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %24, i32 0, i32 2, !dbg !8032
  store i8 -128, i8* %bits26, align 4, !dbg !8033
  %25 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8034
  store %struct.decNumber* %25, %struct.decNumber** %retval, align 8, !dbg !8035
  br label %return, !dbg !8035

if.end:                                           ; preds = %if.then19
  %round = getelementptr inbounds %struct.decContext, %struct.decContext* %workset, i32 0, i32 3, !dbg !8036
  store i32 0, i32* %round, align 4, !dbg !8037
  store i8 0, i8* %sub, align 1, !dbg !8038
  br label %if.end36, !dbg !8039

if.else27:                                        ; preds = %if.else16
  %26 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8040
  %bits28 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %26, i32 0, i32 2, !dbg !8043
  %27 = load i8, i8* %bits28, align 4, !dbg !8043
  %conv29 = zext i8 %27 to i32, !dbg !8040
  %and30 = and i32 %conv29, 192, !dbg !8044
  %cmp31 = icmp eq i32 %and30, 64, !dbg !8045
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !8046

if.then33:                                        ; preds = %if.else27
  %28 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8047
  %29 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8049
  call void @decSetMaxValue(%struct.decNumber* %28, %struct.decContext* %29), !dbg !8050
  %30 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8051
  store %struct.decNumber* %30, %struct.decNumber** %retval, align 8, !dbg !8052
  br label %return, !dbg !8052

if.end34:                                         ; preds = %if.else27
  %round35 = getelementptr inbounds %struct.decContext, %struct.decContext* %workset, i32 0, i32 3, !dbg !8053
  store i32 6, i32* %round35, align 4, !dbg !8054
  store i8 -128, i8* %sub, align 1, !dbg !8055
  br label %if.end36

if.end36:                                         ; preds = %if.end34, %if.end
  %call37 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %dtiny), !dbg !8056
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %dtiny, i32 0, i32 3, !dbg !8057
  %arrayidx = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !8058
  store i16 1, i16* %arrayidx, align 2, !dbg !8059
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %dtiny, i32 0, i32 1, !dbg !8060
  store i32 -1000000000, i32* %exponent, align 4, !dbg !8061
  %31 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8062
  %32 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8063
  %33 = load i8, i8* %sub, align 1, !dbg !8064
  %call38 = call %struct.decNumber* @decAddOp(%struct.decNumber* %31, %struct.decNumber* %32, %struct.decNumber* %dtiny, %struct.decContext* %workset, i8 zeroext %33, i32* %status), !dbg !8065
  %34 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8066
  %35 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8068
  %call39 = call i32 @decNumberIsNormal(%struct.decNumber* %34, %struct.decContext* %35), !dbg !8069
  %tobool = icmp ne i32 %call39, 0, !dbg !8069
  br i1 %tobool, label %if.then40, label %if.end41, !dbg !8070

if.then40:                                        ; preds = %if.end36
  store i32 0, i32* %status, align 4, !dbg !8071
  br label %if.end41, !dbg !8072

if.end41:                                         ; preds = %if.then40, %if.end36
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then14
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then10
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then
  %36 = load i32, i32* %status, align 4, !dbg !8073
  %cmp45 = icmp ne i32 %36, 0, !dbg !8075
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !8076

if.then47:                                        ; preds = %if.end44
  %37 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8077
  %38 = load i32, i32* %status, align 4, !dbg !8078
  %39 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8079
  call void @decStatus(%struct.decNumber* %37, i32 %38, %struct.decContext* %39), !dbg !8080
  br label %if.end48, !dbg !8080

if.end48:                                         ; preds = %if.then47, %if.end44
  %40 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8081
  store %struct.decNumber* %40, %struct.decNumber** %retval, align 8, !dbg !8082
  br label %return, !dbg !8082

return:                                           ; preds = %if.end48, %if.then33, %if.then25
  %41 = load %struct.decNumber*, %struct.decNumber** %retval, align 8, !dbg !8083
  ret %struct.decNumber* %41, !dbg !8083
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @decCompare(%struct.decNumber* %lhs, %struct.decNumber* %rhs, i8 zeroext %abs) #0 !dbg !8084 {
entry:
  %retval = alloca i32, align 4
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %abs.addr = alloca i8, align 1
  %result = alloca i32, align 4
  %sigr = alloca i32, align 4
  %compare = alloca i32, align 4
  %temp = alloca %struct.decNumber*, align 8
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !8087, metadata !DIExpression()), !dbg !8088
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !8089, metadata !DIExpression()), !dbg !8090
  store i8 %abs, i8* %abs.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %abs.addr, metadata !8091, metadata !DIExpression()), !dbg !8092
  call void @llvm.dbg.declare(metadata i32* %result, metadata !8093, metadata !DIExpression()), !dbg !8094
  call void @llvm.dbg.declare(metadata i32* %sigr, metadata !8095, metadata !DIExpression()), !dbg !8096
  call void @llvm.dbg.declare(metadata i32* %compare, metadata !8097, metadata !DIExpression()), !dbg !8098
  store i32 1, i32* %result, align 4, !dbg !8099
  %0 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8100
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 3, !dbg !8100
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !8100
  %1 = load i16, i16* %arraydecay, align 2, !dbg !8100
  %conv = zext i16 %1 to i32, !dbg !8100
  %cmp = icmp eq i32 %conv, 0, !dbg !8100
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8100

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8100
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 0, !dbg !8100
  %3 = load i32, i32* %digits, align 4, !dbg !8100
  %cmp2 = icmp eq i32 %3, 1, !dbg !8100
  br i1 %cmp2, label %land.lhs.true4, label %if.end, !dbg !8100

land.lhs.true4:                                   ; preds = %land.lhs.true
  %4 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8100
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 2, !dbg !8100
  %5 = load i8, i8* %bits, align 4, !dbg !8100
  %conv5 = zext i8 %5 to i32, !dbg !8100
  %and = and i32 %conv5, 112, !dbg !8100
  %cmp6 = icmp eq i32 %and, 0, !dbg !8100
  br i1 %cmp6, label %if.then, label %if.end, !dbg !8102

if.then:                                          ; preds = %land.lhs.true4
  store i32 0, i32* %result, align 4, !dbg !8103
  br label %if.end, !dbg !8104

if.end:                                           ; preds = %if.then, %land.lhs.true4, %land.lhs.true, %entry
  %6 = load i8, i8* %abs.addr, align 1, !dbg !8105
  %tobool = icmp ne i8 %6, 0, !dbg !8105
  br i1 %tobool, label %if.then8, label %if.else, !dbg !8107

if.then8:                                         ; preds = %if.end
  %7 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8108
  %lsu9 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %7, i32 0, i32 3, !dbg !8108
  %arraydecay10 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu9, i64 0, i64 0, !dbg !8108
  %8 = load i16, i16* %arraydecay10, align 2, !dbg !8108
  %conv11 = zext i16 %8 to i32, !dbg !8108
  %cmp12 = icmp eq i32 %conv11, 0, !dbg !8108
  br i1 %cmp12, label %land.lhs.true14, label %if.end25, !dbg !8108

land.lhs.true14:                                  ; preds = %if.then8
  %9 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8108
  %digits15 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %9, i32 0, i32 0, !dbg !8108
  %10 = load i32, i32* %digits15, align 4, !dbg !8108
  %cmp16 = icmp eq i32 %10, 1, !dbg !8108
  br i1 %cmp16, label %land.lhs.true18, label %if.end25, !dbg !8108

land.lhs.true18:                                  ; preds = %land.lhs.true14
  %11 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8108
  %bits19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %11, i32 0, i32 2, !dbg !8108
  %12 = load i8, i8* %bits19, align 4, !dbg !8108
  %conv20 = zext i8 %12 to i32, !dbg !8108
  %and21 = and i32 %conv20, 112, !dbg !8108
  %cmp22 = icmp eq i32 %and21, 0, !dbg !8108
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !8111

if.then24:                                        ; preds = %land.lhs.true18
  %13 = load i32, i32* %result, align 4, !dbg !8112
  store i32 %13, i32* %retval, align 4, !dbg !8113
  br label %return, !dbg !8113

if.end25:                                         ; preds = %land.lhs.true18, %land.lhs.true14, %if.then8
  %14 = load i32, i32* %result, align 4, !dbg !8114
  %cmp26 = icmp eq i32 %14, 0, !dbg !8116
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !8117

if.then28:                                        ; preds = %if.end25
  store i32 -1, i32* %retval, align 4, !dbg !8118
  br label %return, !dbg !8118

if.end29:                                         ; preds = %if.end25
  br label %if.end76, !dbg !8119

if.else:                                          ; preds = %if.end
  %15 = load i32, i32* %result, align 4, !dbg !8120
  %tobool30 = icmp ne i32 %15, 0, !dbg !8120
  br i1 %tobool30, label %land.lhs.true31, label %if.end38, !dbg !8123

land.lhs.true31:                                  ; preds = %if.else
  %16 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8124
  %bits32 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %16, i32 0, i32 2, !dbg !8124
  %17 = load i8, i8* %bits32, align 4, !dbg !8124
  %conv33 = zext i8 %17 to i32, !dbg !8124
  %and34 = and i32 %conv33, 128, !dbg !8124
  %cmp35 = icmp ne i32 %and34, 0, !dbg !8124
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !8125

if.then37:                                        ; preds = %land.lhs.true31
  store i32 -1, i32* %result, align 4, !dbg !8126
  br label %if.end38, !dbg !8127

if.end38:                                         ; preds = %if.then37, %land.lhs.true31, %if.else
  store i32 1, i32* %sigr, align 4, !dbg !8128
  %18 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8129
  %lsu39 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %18, i32 0, i32 3, !dbg !8129
  %arraydecay40 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu39, i64 0, i64 0, !dbg !8129
  %19 = load i16, i16* %arraydecay40, align 2, !dbg !8129
  %conv41 = zext i16 %19 to i32, !dbg !8129
  %cmp42 = icmp eq i32 %conv41, 0, !dbg !8129
  br i1 %cmp42, label %land.lhs.true44, label %if.else55, !dbg !8129

land.lhs.true44:                                  ; preds = %if.end38
  %20 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8129
  %digits45 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %20, i32 0, i32 0, !dbg !8129
  %21 = load i32, i32* %digits45, align 4, !dbg !8129
  %cmp46 = icmp eq i32 %21, 1, !dbg !8129
  br i1 %cmp46, label %land.lhs.true48, label %if.else55, !dbg !8129

land.lhs.true48:                                  ; preds = %land.lhs.true44
  %22 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8129
  %bits49 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %22, i32 0, i32 2, !dbg !8129
  %23 = load i8, i8* %bits49, align 4, !dbg !8129
  %conv50 = zext i8 %23 to i32, !dbg !8129
  %and51 = and i32 %conv50, 112, !dbg !8129
  %cmp52 = icmp eq i32 %and51, 0, !dbg !8129
  br i1 %cmp52, label %if.then54, label %if.else55, !dbg !8131

if.then54:                                        ; preds = %land.lhs.true48
  store i32 0, i32* %sigr, align 4, !dbg !8132
  br label %if.end63, !dbg !8133

if.else55:                                        ; preds = %land.lhs.true48, %land.lhs.true44, %if.end38
  %24 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8134
  %bits56 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %24, i32 0, i32 2, !dbg !8134
  %25 = load i8, i8* %bits56, align 4, !dbg !8134
  %conv57 = zext i8 %25 to i32, !dbg !8134
  %and58 = and i32 %conv57, 128, !dbg !8134
  %cmp59 = icmp ne i32 %and58, 0, !dbg !8134
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !8136

if.then61:                                        ; preds = %if.else55
  store i32 -1, i32* %sigr, align 4, !dbg !8137
  br label %if.end62, !dbg !8138

if.end62:                                         ; preds = %if.then61, %if.else55
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then54
  %26 = load i32, i32* %result, align 4, !dbg !8139
  %27 = load i32, i32* %sigr, align 4, !dbg !8141
  %cmp64 = icmp sgt i32 %26, %27, !dbg !8142
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !8143

if.then66:                                        ; preds = %if.end63
  store i32 1, i32* %retval, align 4, !dbg !8144
  br label %return, !dbg !8144

if.end67:                                         ; preds = %if.end63
  %28 = load i32, i32* %result, align 4, !dbg !8145
  %29 = load i32, i32* %sigr, align 4, !dbg !8147
  %cmp68 = icmp slt i32 %28, %29, !dbg !8148
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !8149

if.then70:                                        ; preds = %if.end67
  store i32 -1, i32* %retval, align 4, !dbg !8150
  br label %return, !dbg !8150

if.end71:                                         ; preds = %if.end67
  %30 = load i32, i32* %result, align 4, !dbg !8151
  %cmp72 = icmp eq i32 %30, 0, !dbg !8153
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !8154

if.then74:                                        ; preds = %if.end71
  store i32 0, i32* %retval, align 4, !dbg !8155
  br label %return, !dbg !8155

if.end75:                                         ; preds = %if.end71
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.end29
  %31 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8156
  %bits77 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %31, i32 0, i32 2, !dbg !8158
  %32 = load i8, i8* %bits77, align 4, !dbg !8158
  %conv78 = zext i8 %32 to i32, !dbg !8156
  %33 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8159
  %bits79 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %33, i32 0, i32 2, !dbg !8160
  %34 = load i8, i8* %bits79, align 4, !dbg !8160
  %conv80 = zext i8 %34 to i32, !dbg !8159
  %or = or i32 %conv78, %conv80, !dbg !8161
  %and81 = and i32 %or, 64, !dbg !8162
  %tobool82 = icmp ne i32 %and81, 0, !dbg !8162
  br i1 %tobool82, label %if.then83, label %if.end99, !dbg !8163

if.then83:                                        ; preds = %if.end76
  %35 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8164
  %bits84 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %35, i32 0, i32 2, !dbg !8164
  %36 = load i8, i8* %bits84, align 4, !dbg !8164
  %conv85 = zext i8 %36 to i32, !dbg !8164
  %and86 = and i32 %conv85, 64, !dbg !8164
  %cmp87 = icmp ne i32 %and86, 0, !dbg !8164
  br i1 %cmp87, label %if.then89, label %if.end98, !dbg !8167

if.then89:                                        ; preds = %if.then83
  %37 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8168
  %bits90 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %37, i32 0, i32 2, !dbg !8168
  %38 = load i8, i8* %bits90, align 4, !dbg !8168
  %conv91 = zext i8 %38 to i32, !dbg !8168
  %and92 = and i32 %conv91, 64, !dbg !8168
  %cmp93 = icmp ne i32 %and92, 0, !dbg !8168
  br i1 %cmp93, label %if.then95, label %if.else96, !dbg !8171

if.then95:                                        ; preds = %if.then89
  store i32 0, i32* %result, align 4, !dbg !8172
  br label %if.end97, !dbg !8173

if.else96:                                        ; preds = %if.then89
  %39 = load i32, i32* %result, align 4, !dbg !8174
  %sub = sub nsw i32 0, %39, !dbg !8175
  store i32 %sub, i32* %result, align 4, !dbg !8176
  br label %if.end97

if.end97:                                         ; preds = %if.else96, %if.then95
  br label %if.end98, !dbg !8177

if.end98:                                         ; preds = %if.end97, %if.then83
  %40 = load i32, i32* %result, align 4, !dbg !8178
  store i32 %40, i32* %retval, align 4, !dbg !8179
  br label %return, !dbg !8179

if.end99:                                         ; preds = %if.end76
  %41 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8180
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %41, i32 0, i32 1, !dbg !8182
  %42 = load i32, i32* %exponent, align 4, !dbg !8182
  %43 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8183
  %exponent100 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %43, i32 0, i32 1, !dbg !8184
  %44 = load i32, i32* %exponent100, align 4, !dbg !8184
  %cmp101 = icmp sgt i32 %42, %44, !dbg !8185
  br i1 %cmp101, label %if.then103, label %if.end105, !dbg !8186

if.then103:                                       ; preds = %if.end99
  call void @llvm.dbg.declare(metadata %struct.decNumber** %temp, metadata !8187, metadata !DIExpression()), !dbg !8189
  %45 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8190
  store %struct.decNumber* %45, %struct.decNumber** %temp, align 8, !dbg !8189
  %46 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8191
  store %struct.decNumber* %46, %struct.decNumber** %lhs.addr, align 8, !dbg !8192
  %47 = load %struct.decNumber*, %struct.decNumber** %temp, align 8, !dbg !8193
  store %struct.decNumber* %47, %struct.decNumber** %rhs.addr, align 8, !dbg !8194
  %48 = load i32, i32* %result, align 4, !dbg !8195
  %sub104 = sub nsw i32 0, %48, !dbg !8196
  store i32 %sub104, i32* %result, align 4, !dbg !8197
  br label %if.end105, !dbg !8198

if.end105:                                        ; preds = %if.then103, %if.end99
  %49 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8199
  %lsu106 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %49, i32 0, i32 3, !dbg !8200
  %arraydecay107 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu106, i64 0, i64 0, !dbg !8199
  %50 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8201
  %digits108 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %50, i32 0, i32 0, !dbg !8201
  %51 = load i32, i32* %digits108, align 4, !dbg !8201
  %cmp109 = icmp sle i32 %51, 49, !dbg !8201
  br i1 %cmp109, label %cond.true, label %cond.false, !dbg !8201

cond.true:                                        ; preds = %if.end105
  %52 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8201
  %digits111 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %52, i32 0, i32 0, !dbg !8201
  %53 = load i32, i32* %digits111, align 4, !dbg !8201
  %idxprom = sext i32 %53 to i64, !dbg !8201
  %arrayidx = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom, !dbg !8201
  %54 = load i8, i8* %arrayidx, align 1, !dbg !8201
  %conv112 = zext i8 %54 to i32, !dbg !8201
  br label %cond.end, !dbg !8201

cond.false:                                       ; preds = %if.end105
  %55 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8201
  %digits113 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %55, i32 0, i32 0, !dbg !8201
  %56 = load i32, i32* %digits113, align 4, !dbg !8201
  %add = add nsw i32 %56, 3, !dbg !8201
  %sub114 = sub nsw i32 %add, 1, !dbg !8201
  %div = sdiv i32 %sub114, 3, !dbg !8201
  br label %cond.end, !dbg !8201

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv112, %cond.true ], [ %div, %cond.false ], !dbg !8201
  %57 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8202
  %lsu115 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %57, i32 0, i32 3, !dbg !8203
  %arraydecay116 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu115, i64 0, i64 0, !dbg !8202
  %58 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8204
  %digits117 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %58, i32 0, i32 0, !dbg !8204
  %59 = load i32, i32* %digits117, align 4, !dbg !8204
  %cmp118 = icmp sle i32 %59, 49, !dbg !8204
  br i1 %cmp118, label %cond.true120, label %cond.false125, !dbg !8204

cond.true120:                                     ; preds = %cond.end
  %60 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8204
  %digits121 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %60, i32 0, i32 0, !dbg !8204
  %61 = load i32, i32* %digits121, align 4, !dbg !8204
  %idxprom122 = sext i32 %61 to i64, !dbg !8204
  %arrayidx123 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom122, !dbg !8204
  %62 = load i8, i8* %arrayidx123, align 1, !dbg !8204
  %conv124 = zext i8 %62 to i32, !dbg !8204
  br label %cond.end130, !dbg !8204

cond.false125:                                    ; preds = %cond.end
  %63 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8204
  %digits126 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %63, i32 0, i32 0, !dbg !8204
  %64 = load i32, i32* %digits126, align 4, !dbg !8204
  %add127 = add nsw i32 %64, 3, !dbg !8204
  %sub128 = sub nsw i32 %add127, 1, !dbg !8204
  %div129 = sdiv i32 %sub128, 3, !dbg !8204
  br label %cond.end130, !dbg !8204

cond.end130:                                      ; preds = %cond.false125, %cond.true120
  %cond131 = phi i32 [ %conv124, %cond.true120 ], [ %div129, %cond.false125 ], !dbg !8204
  %65 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8205
  %exponent132 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %65, i32 0, i32 1, !dbg !8206
  %66 = load i32, i32* %exponent132, align 4, !dbg !8206
  %67 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8207
  %exponent133 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %67, i32 0, i32 1, !dbg !8208
  %68 = load i32, i32* %exponent133, align 4, !dbg !8208
  %sub134 = sub nsw i32 %66, %68, !dbg !8209
  %call = call i32 @decUnitCompare(i16* %arraydecay107, i32 %cond, i16* %arraydecay116, i32 %cond131, i32 %sub134), !dbg !8210
  store i32 %call, i32* %compare, align 4, !dbg !8211
  %69 = load i32, i32* %compare, align 4, !dbg !8212
  %cmp135 = icmp ne i32 %69, -2147483648, !dbg !8214
  br i1 %cmp135, label %if.then137, label %if.end138, !dbg !8215

if.then137:                                       ; preds = %cond.end130
  %70 = load i32, i32* %result, align 4, !dbg !8216
  %71 = load i32, i32* %compare, align 4, !dbg !8217
  %mul = mul nsw i32 %71, %70, !dbg !8217
  store i32 %mul, i32* %compare, align 4, !dbg !8217
  br label %if.end138, !dbg !8218

if.end138:                                        ; preds = %if.then137, %cond.end130
  %72 = load i32, i32* %compare, align 4, !dbg !8219
  store i32 %72, i32* %retval, align 4, !dbg !8220
  br label %return, !dbg !8220

return:                                           ; preds = %if.end138, %if.end98, %if.then74, %if.then70, %if.then66, %if.then28, %if.then24
  %73 = load i32, i32* %retval, align 4, !dbg !8221
  ret i32 %73, !dbg !8221
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberCopySign(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs) #0 !dbg !8222 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %sign = alloca i8, align 1
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !8225, metadata !DIExpression()), !dbg !8226
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !8227, metadata !DIExpression()), !dbg !8228
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !8229, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.declare(metadata i8* %sign, metadata !8231, metadata !DIExpression()), !dbg !8232
  %0 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8233
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 2, !dbg !8234
  %1 = load i8, i8* %bits, align 4, !dbg !8234
  %conv = zext i8 %1 to i32, !dbg !8233
  %and = and i32 %conv, 128, !dbg !8235
  %conv1 = trunc i32 %and to i8, !dbg !8233
  store i8 %conv1, i8* %sign, align 1, !dbg !8236
  %2 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8237
  %3 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8238
  %call = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %2, %struct.decNumber* %3), !dbg !8239
  %4 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8240
  %bits2 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 2, !dbg !8241
  %5 = load i8, i8* %bits2, align 4, !dbg !8242
  %conv3 = zext i8 %5 to i32, !dbg !8242
  %and4 = and i32 %conv3, -129, !dbg !8242
  %conv5 = trunc i32 %and4 to i8, !dbg !8242
  store i8 %conv5, i8* %bits2, align 4, !dbg !8242
  %6 = load i8, i8* %sign, align 1, !dbg !8243
  %conv6 = zext i8 %6 to i32, !dbg !8243
  %7 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8244
  %bits7 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %7, i32 0, i32 2, !dbg !8245
  %8 = load i8, i8* %bits7, align 4, !dbg !8246
  %conv8 = zext i8 %8 to i32, !dbg !8246
  %or = or i32 %conv8, %conv6, !dbg !8246
  %conv9 = trunc i32 %or to i8, !dbg !8246
  store i8 %conv9, i8* %bits7, align 4, !dbg !8246
  %9 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8247
  ret %struct.decNumber* %9, !dbg !8248
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @decNumberIsNormal(%struct.decNumber* %dn, %struct.decContext* %set) #0 !dbg !8249 {
entry:
  %retval = alloca i32, align 4
  %dn.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %ae = alloca i32, align 4
  store %struct.decNumber* %dn, %struct.decNumber** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dn.addr, metadata !8250, metadata !DIExpression()), !dbg !8251
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !8252, metadata !DIExpression()), !dbg !8253
  call void @llvm.dbg.declare(metadata i32* %ae, metadata !8254, metadata !DIExpression()), !dbg !8255
  %0 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !8256
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 2, !dbg !8256
  %1 = load i8, i8* %bits, align 4, !dbg !8256
  %conv = zext i8 %1 to i32, !dbg !8256
  %and = and i32 %conv, 112, !dbg !8256
  %cmp = icmp ne i32 %and, 0, !dbg !8256
  br i1 %cmp, label %if.then, label %if.end, !dbg !8258

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8259
  br label %return, !dbg !8259

if.end:                                           ; preds = %entry
  %2 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !8260
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 3, !dbg !8260
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !8260
  %3 = load i16, i16* %arraydecay, align 2, !dbg !8260
  %conv2 = zext i16 %3 to i32, !dbg !8260
  %cmp3 = icmp eq i32 %conv2, 0, !dbg !8260
  br i1 %cmp3, label %land.lhs.true, label %if.end14, !dbg !8260

land.lhs.true:                                    ; preds = %if.end
  %4 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !8260
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 0, !dbg !8260
  %5 = load i32, i32* %digits, align 4, !dbg !8260
  %cmp5 = icmp eq i32 %5, 1, !dbg !8260
  br i1 %cmp5, label %land.lhs.true7, label %if.end14, !dbg !8260

land.lhs.true7:                                   ; preds = %land.lhs.true
  %6 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !8260
  %bits8 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %6, i32 0, i32 2, !dbg !8260
  %7 = load i8, i8* %bits8, align 4, !dbg !8260
  %conv9 = zext i8 %7 to i32, !dbg !8260
  %and10 = and i32 %conv9, 112, !dbg !8260
  %cmp11 = icmp eq i32 %and10, 0, !dbg !8260
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !8262

if.then13:                                        ; preds = %land.lhs.true7
  store i32 0, i32* %retval, align 4, !dbg !8263
  br label %return, !dbg !8263

if.end14:                                         ; preds = %land.lhs.true7, %land.lhs.true, %if.end
  %8 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !8264
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i32 0, i32 1, !dbg !8265
  %9 = load i32, i32* %exponent, align 4, !dbg !8265
  %10 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !8266
  %digits15 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %10, i32 0, i32 0, !dbg !8267
  %11 = load i32, i32* %digits15, align 4, !dbg !8267
  %add = add nsw i32 %9, %11, !dbg !8268
  %sub = sub nsw i32 %add, 1, !dbg !8269
  store i32 %sub, i32* %ae, align 4, !dbg !8270
  %12 = load i32, i32* %ae, align 4, !dbg !8271
  %13 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8273
  %emin = getelementptr inbounds %struct.decContext, %struct.decContext* %13, i32 0, i32 2, !dbg !8274
  %14 = load i32, i32* %emin, align 4, !dbg !8274
  %cmp16 = icmp slt i32 %12, %14, !dbg !8275
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !8276

if.then18:                                        ; preds = %if.end14
  store i32 0, i32* %retval, align 4, !dbg !8277
  br label %return, !dbg !8277

if.end19:                                         ; preds = %if.end14
  store i32 1, i32* %retval, align 4, !dbg !8278
  br label %return, !dbg !8278

return:                                           ; preds = %if.end19, %if.then18, %if.then13, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !8279
  ret i32 %15, !dbg !8279
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberOr(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !8280 {
entry:
  %retval = alloca %struct.decNumber*, align 8
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %ua = alloca i16*, align 8
  %ub = alloca i16*, align 8
  %msua = alloca i16*, align 8
  %msub = alloca i16*, align 8
  %uc = alloca i16*, align 8
  %msuc = alloca i16*, align 8
  %msudigs = alloca i32, align 4
  %a = alloca i16, align 2
  %b = alloca i16, align 2
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !8281, metadata !DIExpression()), !dbg !8282
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !8283, metadata !DIExpression()), !dbg !8284
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !8285, metadata !DIExpression()), !dbg !8286
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !8287, metadata !DIExpression()), !dbg !8288
  call void @llvm.dbg.declare(metadata i16** %ua, metadata !8289, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.declare(metadata i16** %ub, metadata !8291, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.declare(metadata i16** %msua, metadata !8293, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.declare(metadata i16** %msub, metadata !8295, metadata !DIExpression()), !dbg !8296
  call void @llvm.dbg.declare(metadata i16** %uc, metadata !8297, metadata !DIExpression()), !dbg !8298
  call void @llvm.dbg.declare(metadata i16** %msuc, metadata !8299, metadata !DIExpression()), !dbg !8300
  call void @llvm.dbg.declare(metadata i32* %msudigs, metadata !8301, metadata !DIExpression()), !dbg !8302
  %0 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8303
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 1, !dbg !8305
  %1 = load i32, i32* %exponent, align 4, !dbg !8305
  %cmp = icmp ne i32 %1, 0, !dbg !8306
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8307

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8308
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 2, !dbg !8308
  %3 = load i8, i8* %bits, align 4, !dbg !8308
  %conv = zext i8 %3 to i32, !dbg !8308
  %and = and i32 %conv, 112, !dbg !8308
  %cmp1 = icmp ne i32 %and, 0, !dbg !8308
  br i1 %cmp1, label %if.then, label %lor.lhs.false3, !dbg !8309

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %4 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8310
  %bits4 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 2, !dbg !8310
  %5 = load i8, i8* %bits4, align 4, !dbg !8310
  %conv5 = zext i8 %5 to i32, !dbg !8310
  %and6 = and i32 %conv5, 128, !dbg !8310
  %cmp7 = icmp ne i32 %and6, 0, !dbg !8310
  br i1 %cmp7, label %if.then, label %lor.lhs.false9, !dbg !8311

lor.lhs.false9:                                   ; preds = %lor.lhs.false3
  %6 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8312
  %exponent10 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %6, i32 0, i32 1, !dbg !8313
  %7 = load i32, i32* %exponent10, align 4, !dbg !8313
  %cmp11 = icmp ne i32 %7, 0, !dbg !8314
  br i1 %cmp11, label %if.then, label %lor.lhs.false13, !dbg !8315

lor.lhs.false13:                                  ; preds = %lor.lhs.false9
  %8 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8316
  %bits14 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i32 0, i32 2, !dbg !8316
  %9 = load i8, i8* %bits14, align 4, !dbg !8316
  %conv15 = zext i8 %9 to i32, !dbg !8316
  %and16 = and i32 %conv15, 112, !dbg !8316
  %cmp17 = icmp ne i32 %and16, 0, !dbg !8316
  br i1 %cmp17, label %if.then, label %lor.lhs.false19, !dbg !8317

lor.lhs.false19:                                  ; preds = %lor.lhs.false13
  %10 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8318
  %bits20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %10, i32 0, i32 2, !dbg !8318
  %11 = load i8, i8* %bits20, align 4, !dbg !8318
  %conv21 = zext i8 %11 to i32, !dbg !8318
  %and22 = and i32 %conv21, 128, !dbg !8318
  %cmp23 = icmp ne i32 %and22, 0, !dbg !8318
  br i1 %cmp23, label %if.then, label %if.end, !dbg !8319

if.then:                                          ; preds = %lor.lhs.false19, %lor.lhs.false13, %lor.lhs.false9, %lor.lhs.false3, %lor.lhs.false, %entry
  %12 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8320
  %13 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8322
  call void @decStatus(%struct.decNumber* %12, i32 128, %struct.decContext* %13), !dbg !8323
  %14 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8324
  store %struct.decNumber* %14, %struct.decNumber** %retval, align 8, !dbg !8325
  br label %return, !dbg !8325

if.end:                                           ; preds = %lor.lhs.false19
  %15 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8326
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %15, i32 0, i32 3, !dbg !8327
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !8326
  store i16* %arraydecay, i16** %ua, align 8, !dbg !8328
  %16 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8329
  %lsu25 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %16, i32 0, i32 3, !dbg !8330
  %arraydecay26 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu25, i64 0, i64 0, !dbg !8329
  store i16* %arraydecay26, i16** %ub, align 8, !dbg !8331
  %17 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8332
  %lsu27 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %17, i32 0, i32 3, !dbg !8333
  %arraydecay28 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu27, i64 0, i64 0, !dbg !8332
  store i16* %arraydecay28, i16** %uc, align 8, !dbg !8334
  %18 = load i16*, i16** %ua, align 8, !dbg !8335
  %19 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8336
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %19, i32 0, i32 0, !dbg !8336
  %20 = load i32, i32* %digits, align 4, !dbg !8336
  %cmp29 = icmp sle i32 %20, 49, !dbg !8336
  br i1 %cmp29, label %cond.true, label %cond.false, !dbg !8336

cond.true:                                        ; preds = %if.end
  %21 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8336
  %digits31 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %21, i32 0, i32 0, !dbg !8336
  %22 = load i32, i32* %digits31, align 4, !dbg !8336
  %idxprom = sext i32 %22 to i64, !dbg !8336
  %arrayidx = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom, !dbg !8336
  %23 = load i8, i8* %arrayidx, align 1, !dbg !8336
  %conv32 = zext i8 %23 to i32, !dbg !8336
  br label %cond.end, !dbg !8336

cond.false:                                       ; preds = %if.end
  %24 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8336
  %digits33 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %24, i32 0, i32 0, !dbg !8336
  %25 = load i32, i32* %digits33, align 4, !dbg !8336
  %add = add nsw i32 %25, 3, !dbg !8336
  %sub = sub nsw i32 %add, 1, !dbg !8336
  %div = sdiv i32 %sub, 3, !dbg !8336
  br label %cond.end, !dbg !8336

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv32, %cond.true ], [ %div, %cond.false ], !dbg !8336
  %idx.ext = sext i32 %cond to i64, !dbg !8337
  %add.ptr = getelementptr inbounds i16, i16* %18, i64 %idx.ext, !dbg !8337
  %add.ptr34 = getelementptr inbounds i16, i16* %add.ptr, i64 -1, !dbg !8338
  store i16* %add.ptr34, i16** %msua, align 8, !dbg !8339
  %26 = load i16*, i16** %ub, align 8, !dbg !8340
  %27 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8341
  %digits35 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %27, i32 0, i32 0, !dbg !8341
  %28 = load i32, i32* %digits35, align 4, !dbg !8341
  %cmp36 = icmp sle i32 %28, 49, !dbg !8341
  br i1 %cmp36, label %cond.true38, label %cond.false43, !dbg !8341

cond.true38:                                      ; preds = %cond.end
  %29 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8341
  %digits39 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %29, i32 0, i32 0, !dbg !8341
  %30 = load i32, i32* %digits39, align 4, !dbg !8341
  %idxprom40 = sext i32 %30 to i64, !dbg !8341
  %arrayidx41 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom40, !dbg !8341
  %31 = load i8, i8* %arrayidx41, align 1, !dbg !8341
  %conv42 = zext i8 %31 to i32, !dbg !8341
  br label %cond.end48, !dbg !8341

cond.false43:                                     ; preds = %cond.end
  %32 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8341
  %digits44 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %32, i32 0, i32 0, !dbg !8341
  %33 = load i32, i32* %digits44, align 4, !dbg !8341
  %add45 = add nsw i32 %33, 3, !dbg !8341
  %sub46 = sub nsw i32 %add45, 1, !dbg !8341
  %div47 = sdiv i32 %sub46, 3, !dbg !8341
  br label %cond.end48, !dbg !8341

cond.end48:                                       ; preds = %cond.false43, %cond.true38
  %cond49 = phi i32 [ %conv42, %cond.true38 ], [ %div47, %cond.false43 ], !dbg !8341
  %idx.ext50 = sext i32 %cond49 to i64, !dbg !8342
  %add.ptr51 = getelementptr inbounds i16, i16* %26, i64 %idx.ext50, !dbg !8342
  %add.ptr52 = getelementptr inbounds i16, i16* %add.ptr51, i64 -1, !dbg !8343
  store i16* %add.ptr52, i16** %msub, align 8, !dbg !8344
  %34 = load i16*, i16** %uc, align 8, !dbg !8345
  %35 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8346
  %digits53 = getelementptr inbounds %struct.decContext, %struct.decContext* %35, i32 0, i32 0, !dbg !8346
  %36 = load i32, i32* %digits53, align 4, !dbg !8346
  %cmp54 = icmp sle i32 %36, 49, !dbg !8346
  br i1 %cmp54, label %cond.true56, label %cond.false61, !dbg !8346

cond.true56:                                      ; preds = %cond.end48
  %37 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8346
  %digits57 = getelementptr inbounds %struct.decContext, %struct.decContext* %37, i32 0, i32 0, !dbg !8346
  %38 = load i32, i32* %digits57, align 4, !dbg !8346
  %idxprom58 = sext i32 %38 to i64, !dbg !8346
  %arrayidx59 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom58, !dbg !8346
  %39 = load i8, i8* %arrayidx59, align 1, !dbg !8346
  %conv60 = zext i8 %39 to i32, !dbg !8346
  br label %cond.end66, !dbg !8346

cond.false61:                                     ; preds = %cond.end48
  %40 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8346
  %digits62 = getelementptr inbounds %struct.decContext, %struct.decContext* %40, i32 0, i32 0, !dbg !8346
  %41 = load i32, i32* %digits62, align 4, !dbg !8346
  %add63 = add nsw i32 %41, 3, !dbg !8346
  %sub64 = sub nsw i32 %add63, 1, !dbg !8346
  %div65 = sdiv i32 %sub64, 3, !dbg !8346
  br label %cond.end66, !dbg !8346

cond.end66:                                       ; preds = %cond.false61, %cond.true56
  %cond67 = phi i32 [ %conv60, %cond.true56 ], [ %div65, %cond.false61 ], !dbg !8346
  %idx.ext68 = sext i32 %cond67 to i64, !dbg !8347
  %add.ptr69 = getelementptr inbounds i16, i16* %34, i64 %idx.ext68, !dbg !8347
  %add.ptr70 = getelementptr inbounds i16, i16* %add.ptr69, i64 -1, !dbg !8348
  store i16* %add.ptr70, i16** %msuc, align 8, !dbg !8349
  %42 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8350
  %digits71 = getelementptr inbounds %struct.decContext, %struct.decContext* %42, i32 0, i32 0, !dbg !8350
  %43 = load i32, i32* %digits71, align 4, !dbg !8350
  %44 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8350
  %digits72 = getelementptr inbounds %struct.decContext, %struct.decContext* %44, i32 0, i32 0, !dbg !8350
  %45 = load i32, i32* %digits72, align 4, !dbg !8350
  %cmp73 = icmp sle i32 %45, 49, !dbg !8350
  br i1 %cmp73, label %cond.true75, label %cond.false80, !dbg !8350

cond.true75:                                      ; preds = %cond.end66
  %46 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8350
  %digits76 = getelementptr inbounds %struct.decContext, %struct.decContext* %46, i32 0, i32 0, !dbg !8350
  %47 = load i32, i32* %digits76, align 4, !dbg !8350
  %idxprom77 = sext i32 %47 to i64, !dbg !8350
  %arrayidx78 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom77, !dbg !8350
  %48 = load i8, i8* %arrayidx78, align 1, !dbg !8350
  %conv79 = zext i8 %48 to i32, !dbg !8350
  br label %cond.end85, !dbg !8350

cond.false80:                                     ; preds = %cond.end66
  %49 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8350
  %digits81 = getelementptr inbounds %struct.decContext, %struct.decContext* %49, i32 0, i32 0, !dbg !8350
  %50 = load i32, i32* %digits81, align 4, !dbg !8350
  %add82 = add nsw i32 %50, 3, !dbg !8350
  %sub83 = sub nsw i32 %add82, 1, !dbg !8350
  %div84 = sdiv i32 %sub83, 3, !dbg !8350
  br label %cond.end85, !dbg !8350

cond.end85:                                       ; preds = %cond.false80, %cond.true75
  %cond86 = phi i32 [ %conv79, %cond.true75 ], [ %div84, %cond.false80 ], !dbg !8350
  %sub87 = sub nsw i32 %cond86, 1, !dbg !8350
  %mul = mul nsw i32 %sub87, 3, !dbg !8350
  %sub88 = sub nsw i32 %43, %mul, !dbg !8350
  store i32 %sub88, i32* %msudigs, align 4, !dbg !8351
  br label %for.cond, !dbg !8352

for.cond:                                         ; preds = %for.inc143, %cond.end85
  %51 = load i16*, i16** %uc, align 8, !dbg !8353
  %52 = load i16*, i16** %msuc, align 8, !dbg !8356
  %cmp89 = icmp ule i16* %51, %52, !dbg !8357
  br i1 %cmp89, label %for.body, label %for.end146, !dbg !8358

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16* %a, metadata !8359, metadata !DIExpression()), !dbg !8361
  call void @llvm.dbg.declare(metadata i16* %b, metadata !8362, metadata !DIExpression()), !dbg !8363
  %53 = load i16*, i16** %ua, align 8, !dbg !8364
  %54 = load i16*, i16** %msua, align 8, !dbg !8366
  %cmp91 = icmp ugt i16* %53, %54, !dbg !8367
  br i1 %cmp91, label %if.then93, label %if.else, !dbg !8368

if.then93:                                        ; preds = %for.body
  store i16 0, i16* %a, align 2, !dbg !8369
  br label %if.end94, !dbg !8370

if.else:                                          ; preds = %for.body
  %55 = load i16*, i16** %ua, align 8, !dbg !8371
  %56 = load i16, i16* %55, align 2, !dbg !8372
  store i16 %56, i16* %a, align 2, !dbg !8373
  br label %if.end94

if.end94:                                         ; preds = %if.else, %if.then93
  %57 = load i16*, i16** %ub, align 8, !dbg !8374
  %58 = load i16*, i16** %msub, align 8, !dbg !8376
  %cmp95 = icmp ugt i16* %57, %58, !dbg !8377
  br i1 %cmp95, label %if.then97, label %if.else98, !dbg !8378

if.then97:                                        ; preds = %if.end94
  store i16 0, i16* %b, align 2, !dbg !8379
  br label %if.end99, !dbg !8380

if.else98:                                        ; preds = %if.end94
  %59 = load i16*, i16** %ub, align 8, !dbg !8381
  %60 = load i16, i16* %59, align 2, !dbg !8382
  store i16 %60, i16* %b, align 2, !dbg !8383
  br label %if.end99

if.end99:                                         ; preds = %if.else98, %if.then97
  %61 = load i16*, i16** %uc, align 8, !dbg !8384
  store i16 0, i16* %61, align 2, !dbg !8385
  %62 = load i16, i16* %a, align 2, !dbg !8386
  %conv100 = zext i16 %62 to i32, !dbg !8386
  %63 = load i16, i16* %b, align 2, !dbg !8388
  %conv101 = zext i16 %63 to i32, !dbg !8388
  %or = or i32 %conv100, %conv101, !dbg !8389
  %tobool = icmp ne i32 %or, 0, !dbg !8389
  br i1 %tobool, label %if.then102, label %if.end142, !dbg !8390

if.then102:                                       ; preds = %if.end99
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8391, metadata !DIExpression()), !dbg !8393
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8394, metadata !DIExpression()), !dbg !8395
  store i32 0, i32* %i, align 4, !dbg !8396
  br label %for.cond103, !dbg !8398

for.cond103:                                      ; preds = %for.inc, %if.then102
  %64 = load i32, i32* %i, align 4, !dbg !8399
  %cmp104 = icmp slt i32 %64, 3, !dbg !8401
  br i1 %cmp104, label %for.body106, label %for.end, !dbg !8402

for.body106:                                      ; preds = %for.cond103
  %65 = load i16, i16* %a, align 2, !dbg !8403
  %conv107 = zext i16 %65 to i32, !dbg !8403
  %66 = load i16, i16* %b, align 2, !dbg !8406
  %conv108 = zext i16 %66 to i32, !dbg !8406
  %or109 = or i32 %conv107, %conv108, !dbg !8407
  %and110 = and i32 %or109, 1, !dbg !8408
  %tobool111 = icmp ne i32 %and110, 0, !dbg !8408
  br i1 %tobool111, label %if.then112, label %if.end120, !dbg !8409

if.then112:                                       ; preds = %for.body106
  %67 = load i16*, i16** %uc, align 8, !dbg !8410
  %68 = load i16, i16* %67, align 2, !dbg !8411
  %conv113 = zext i16 %68 to i32, !dbg !8411
  %69 = load i32, i32* %i, align 4, !dbg !8412
  %idxprom114 = sext i32 %69 to i64, !dbg !8413
  %arrayidx115 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom114, !dbg !8413
  %70 = load i32, i32* %arrayidx115, align 4, !dbg !8413
  %conv116 = trunc i32 %70 to i16, !dbg !8414
  %conv117 = zext i16 %conv116 to i32, !dbg !8414
  %add118 = add nsw i32 %conv113, %conv117, !dbg !8415
  %conv119 = trunc i32 %add118 to i16, !dbg !8411
  %71 = load i16*, i16** %uc, align 8, !dbg !8416
  store i16 %conv119, i16* %71, align 2, !dbg !8417
  br label %if.end120, !dbg !8418

if.end120:                                        ; preds = %if.then112, %for.body106
  %72 = load i16, i16* %a, align 2, !dbg !8419
  %conv121 = zext i16 %72 to i32, !dbg !8419
  %rem = srem i32 %conv121, 10, !dbg !8420
  store i32 %rem, i32* %j, align 4, !dbg !8421
  %73 = load i16, i16* %a, align 2, !dbg !8422
  %conv122 = zext i16 %73 to i32, !dbg !8422
  %div123 = sdiv i32 %conv122, 10, !dbg !8423
  %conv124 = trunc i32 %div123 to i16, !dbg !8422
  store i16 %conv124, i16* %a, align 2, !dbg !8424
  %74 = load i16, i16* %b, align 2, !dbg !8425
  %conv125 = zext i16 %74 to i32, !dbg !8425
  %rem126 = srem i32 %conv125, 10, !dbg !8426
  %75 = load i32, i32* %j, align 4, !dbg !8427
  %or127 = or i32 %75, %rem126, !dbg !8427
  store i32 %or127, i32* %j, align 4, !dbg !8427
  %76 = load i16, i16* %b, align 2, !dbg !8428
  %conv128 = zext i16 %76 to i32, !dbg !8428
  %div129 = sdiv i32 %conv128, 10, !dbg !8429
  %conv130 = trunc i32 %div129 to i16, !dbg !8428
  store i16 %conv130, i16* %b, align 2, !dbg !8430
  %77 = load i32, i32* %j, align 4, !dbg !8431
  %cmp131 = icmp sgt i32 %77, 1, !dbg !8433
  br i1 %cmp131, label %if.then133, label %if.end134, !dbg !8434

if.then133:                                       ; preds = %if.end120
  %78 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8435
  %79 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8437
  call void @decStatus(%struct.decNumber* %78, i32 128, %struct.decContext* %79), !dbg !8438
  %80 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8439
  store %struct.decNumber* %80, %struct.decNumber** %retval, align 8, !dbg !8440
  br label %return, !dbg !8440

if.end134:                                        ; preds = %if.end120
  %81 = load i16*, i16** %uc, align 8, !dbg !8441
  %82 = load i16*, i16** %msuc, align 8, !dbg !8443
  %cmp135 = icmp eq i16* %81, %82, !dbg !8444
  br i1 %cmp135, label %land.lhs.true, label %if.end141, !dbg !8445

land.lhs.true:                                    ; preds = %if.end134
  %83 = load i32, i32* %i, align 4, !dbg !8446
  %84 = load i32, i32* %msudigs, align 4, !dbg !8447
  %sub137 = sub nsw i32 %84, 1, !dbg !8448
  %cmp138 = icmp eq i32 %83, %sub137, !dbg !8449
  br i1 %cmp138, label %if.then140, label %if.end141, !dbg !8450

if.then140:                                       ; preds = %land.lhs.true
  br label %for.end, !dbg !8451

if.end141:                                        ; preds = %land.lhs.true, %if.end134
  br label %for.inc, !dbg !8452

for.inc:                                          ; preds = %if.end141
  %85 = load i32, i32* %i, align 4, !dbg !8453
  %inc = add nsw i32 %85, 1, !dbg !8453
  store i32 %inc, i32* %i, align 4, !dbg !8453
  br label %for.cond103, !dbg !8454, !llvm.loop !8455

for.end:                                          ; preds = %if.then140, %for.cond103
  br label %if.end142, !dbg !8457

if.end142:                                        ; preds = %for.end, %if.end99
  br label %for.inc143, !dbg !8458

for.inc143:                                       ; preds = %if.end142
  %86 = load i16*, i16** %ua, align 8, !dbg !8459
  %incdec.ptr = getelementptr inbounds i16, i16* %86, i32 1, !dbg !8459
  store i16* %incdec.ptr, i16** %ua, align 8, !dbg !8459
  %87 = load i16*, i16** %ub, align 8, !dbg !8460
  %incdec.ptr144 = getelementptr inbounds i16, i16* %87, i32 1, !dbg !8460
  store i16* %incdec.ptr144, i16** %ub, align 8, !dbg !8460
  %88 = load i16*, i16** %uc, align 8, !dbg !8461
  %incdec.ptr145 = getelementptr inbounds i16, i16* %88, i32 1, !dbg !8461
  store i16* %incdec.ptr145, i16** %uc, align 8, !dbg !8461
  br label %for.cond, !dbg !8462, !llvm.loop !8463

for.end146:                                       ; preds = %for.cond
  %89 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8465
  %lsu147 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %89, i32 0, i32 3, !dbg !8466
  %arraydecay148 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu147, i64 0, i64 0, !dbg !8465
  %90 = load i16*, i16** %uc, align 8, !dbg !8467
  %91 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8468
  %lsu149 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %91, i32 0, i32 3, !dbg !8469
  %arraydecay150 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu149, i64 0, i64 0, !dbg !8468
  %sub.ptr.lhs.cast = ptrtoint i16* %90 to i64, !dbg !8470
  %sub.ptr.rhs.cast = ptrtoint i16* %arraydecay150 to i64, !dbg !8470
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8470
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2, !dbg !8470
  %conv151 = trunc i64 %sub.ptr.div to i32, !dbg !8467
  %call = call i32 @decGetDigits(i16* %arraydecay148, i32 %conv151), !dbg !8471
  %92 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8472
  %digits152 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %92, i32 0, i32 0, !dbg !8473
  store i32 %call, i32* %digits152, align 4, !dbg !8474
  %93 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8475
  %exponent153 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %93, i32 0, i32 1, !dbg !8476
  store i32 0, i32* %exponent153, align 4, !dbg !8477
  %94 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8478
  %bits154 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %94, i32 0, i32 2, !dbg !8479
  store i8 0, i8* %bits154, align 4, !dbg !8480
  %95 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8481
  store %struct.decNumber* %95, %struct.decNumber** %retval, align 8, !dbg !8482
  br label %return, !dbg !8482

return:                                           ; preds = %for.end146, %if.then133, %if.then
  %96 = load %struct.decNumber*, %struct.decNumber** %retval, align 8, !dbg !8483
  ret %struct.decNumber* %96, !dbg !8483
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberPlus(%struct.decNumber* %res, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !8484 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %dzero = alloca %struct.decNumber, align 4
  %status = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !8485, metadata !DIExpression()), !dbg !8486
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !8487, metadata !DIExpression()), !dbg !8488
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !8489, metadata !DIExpression()), !dbg !8490
  call void @llvm.dbg.declare(metadata %struct.decNumber* %dzero, metadata !8491, metadata !DIExpression()), !dbg !8492
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8493, metadata !DIExpression()), !dbg !8494
  store i32 0, i32* %status, align 4, !dbg !8494
  %call = call %struct.decNumber* @decNumberZero(%struct.decNumber* %dzero), !dbg !8495
  %0 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8496
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 1, !dbg !8497
  %1 = load i32, i32* %exponent, align 4, !dbg !8497
  %exponent1 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %dzero, i32 0, i32 1, !dbg !8498
  store i32 %1, i32* %exponent1, align 4, !dbg !8499
  %2 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8500
  %3 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8501
  %4 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8502
  %call2 = call %struct.decNumber* @decAddOp(%struct.decNumber* %2, %struct.decNumber* %dzero, %struct.decNumber* %3, %struct.decContext* %4, i8 zeroext 0, i32* %status), !dbg !8503
  %5 = load i32, i32* %status, align 4, !dbg !8504
  %cmp = icmp ne i32 %5, 0, !dbg !8506
  br i1 %cmp, label %if.then, label %if.end, !dbg !8507

if.then:                                          ; preds = %entry
  %6 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8508
  %7 = load i32, i32* %status, align 4, !dbg !8509
  %8 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8510
  call void @decStatus(%struct.decNumber* %6, i32 %7, %struct.decContext* %8), !dbg !8511
  br label %if.end, !dbg !8511

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8512
  ret %struct.decNumber* %9, !dbg !8513
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberMultiply(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !8514 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !8515, metadata !DIExpression()), !dbg !8516
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !8517, metadata !DIExpression()), !dbg !8518
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !8519, metadata !DIExpression()), !dbg !8520
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !8521, metadata !DIExpression()), !dbg !8522
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8523, metadata !DIExpression()), !dbg !8524
  store i32 0, i32* %status, align 4, !dbg !8524
  %0 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8525
  %1 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8526
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8527
  %3 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8528
  %call = call %struct.decNumber* @decMultiplyOp(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i32* %status), !dbg !8529
  %4 = load i32, i32* %status, align 4, !dbg !8530
  %cmp = icmp ne i32 %4, 0, !dbg !8532
  br i1 %cmp, label %if.then, label %if.end, !dbg !8533

if.then:                                          ; preds = %entry
  %5 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8534
  %6 = load i32, i32* %status, align 4, !dbg !8535
  %7 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8536
  call void @decStatus(%struct.decNumber* %5, i32 %6, %struct.decContext* %7), !dbg !8537
  br label %if.end, !dbg !8537

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8538
  ret %struct.decNumber* %8, !dbg !8539
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberPower(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !8540 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %allocdac = alloca %struct.decNumber*, align 8
  %allocinv = alloca %struct.decNumber*, align 8
  %reqdigits = alloca i32, align 4
  %n = alloca i32, align 4
  %rhsint = alloca i8, align 1
  %useint = alloca i8, align 1
  %isoddint = alloca i8, align 1
  %i = alloca i32, align 4
  %needbytes = alloca i32, align 4
  %seenbit = alloca i8, align 1
  %residue = alloca i32, align 4
  %status = alloca i32, align 4
  %bits = alloca i8, align 1
  %aset = alloca %struct.decContext, align 4
  %dnOne = alloca %struct.decNumber, align 4
  %dacbuff = alloca [4 x %struct.decNumber], align 16
  %dac = alloca %struct.decNumber*, align 8
  %invbuff = alloca [4 x %struct.decNumber], align 16
  %rhsneg = alloca i8, align 1
  %shift = alloca i32, align 4
  %rbits = alloca i8, align 1
  %rbits173 = alloca i8, align 1
  %shift291 = alloca i32, align 4
  %inv = alloca %struct.decNumber*, align 8
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !8541, metadata !DIExpression()), !dbg !8542
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !8543, metadata !DIExpression()), !dbg !8544
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !8545, metadata !DIExpression()), !dbg !8546
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !8547, metadata !DIExpression()), !dbg !8548
  call void @llvm.dbg.declare(metadata %struct.decNumber** %allocdac, metadata !8549, metadata !DIExpression()), !dbg !8550
  store %struct.decNumber* null, %struct.decNumber** %allocdac, align 8, !dbg !8550
  call void @llvm.dbg.declare(metadata %struct.decNumber** %allocinv, metadata !8551, metadata !DIExpression()), !dbg !8552
  store %struct.decNumber* null, %struct.decNumber** %allocinv, align 8, !dbg !8552
  call void @llvm.dbg.declare(metadata i32* %reqdigits, metadata !8553, metadata !DIExpression()), !dbg !8554
  %0 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8555
  %digits = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i32 0, i32 0, !dbg !8556
  %1 = load i32, i32* %digits, align 4, !dbg !8556
  store i32 %1, i32* %reqdigits, align 4, !dbg !8554
  call void @llvm.dbg.declare(metadata i32* %n, metadata !8557, metadata !DIExpression()), !dbg !8558
  call void @llvm.dbg.declare(metadata i8* %rhsint, metadata !8559, metadata !DIExpression()), !dbg !8560
  store i8 0, i8* %rhsint, align 1, !dbg !8560
  call void @llvm.dbg.declare(metadata i8* %useint, metadata !8561, metadata !DIExpression()), !dbg !8562
  store i8 0, i8* %useint, align 1, !dbg !8562
  call void @llvm.dbg.declare(metadata i8* %isoddint, metadata !8563, metadata !DIExpression()), !dbg !8564
  store i8 0, i8* %isoddint, align 1, !dbg !8564
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8565, metadata !DIExpression()), !dbg !8566
  call void @llvm.dbg.declare(metadata i32* %needbytes, metadata !8567, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.declare(metadata i8* %seenbit, metadata !8569, metadata !DIExpression()), !dbg !8570
  call void @llvm.dbg.declare(metadata i32* %residue, metadata !8571, metadata !DIExpression()), !dbg !8572
  store i32 0, i32* %residue, align 4, !dbg !8572
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8573, metadata !DIExpression()), !dbg !8574
  store i32 0, i32* %status, align 4, !dbg !8574
  call void @llvm.dbg.declare(metadata i8* %bits, metadata !8575, metadata !DIExpression()), !dbg !8576
  store i8 0, i8* %bits, align 1, !dbg !8576
  call void @llvm.dbg.declare(metadata %struct.decContext* %aset, metadata !8577, metadata !DIExpression()), !dbg !8578
  call void @llvm.dbg.declare(metadata %struct.decNumber* %dnOne, metadata !8579, metadata !DIExpression()), !dbg !8580
  call void @llvm.dbg.declare(metadata [4 x %struct.decNumber]* %dacbuff, metadata !8581, metadata !DIExpression()), !dbg !8582
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dac, metadata !8583, metadata !DIExpression()), !dbg !8584
  %arraydecay = getelementptr inbounds [4 x %struct.decNumber], [4 x %struct.decNumber]* %dacbuff, i64 0, i64 0, !dbg !8585
  store %struct.decNumber* %arraydecay, %struct.decNumber** %dac, align 8, !dbg !8584
  call void @llvm.dbg.declare(metadata [4 x %struct.decNumber]* %invbuff, metadata !8586, metadata !DIExpression()), !dbg !8587
  br label %do.body, !dbg !8588

do.body:                                          ; preds = %entry
  %2 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8589
  %bits1 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 2, !dbg !8589
  %3 = load i8, i8* %bits1, align 4, !dbg !8589
  %conv = zext i8 %3 to i32, !dbg !8589
  %4 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8589
  %bits2 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 2, !dbg !8589
  %5 = load i8, i8* %bits2, align 4, !dbg !8589
  %conv3 = zext i8 %5 to i32, !dbg !8589
  %or = or i32 %conv, %conv3, !dbg !8589
  %and = and i32 %or, 112, !dbg !8589
  %tobool = icmp ne i32 %and, 0, !dbg !8589
  br i1 %tobool, label %if.then, label %if.end90, !dbg !8592

if.then:                                          ; preds = %do.body
  %6 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8593
  %bits4 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %6, i32 0, i32 2, !dbg !8593
  %7 = load i8, i8* %bits4, align 4, !dbg !8593
  %conv5 = zext i8 %7 to i32, !dbg !8593
  %and6 = and i32 %conv5, 48, !dbg !8593
  %cmp = icmp ne i32 %and6, 0, !dbg !8593
  br i1 %cmp, label %if.then13, label %lor.lhs.false, !dbg !8596

lor.lhs.false:                                    ; preds = %if.then
  %8 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8597
  %bits8 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i32 0, i32 2, !dbg !8597
  %9 = load i8, i8* %bits8, align 4, !dbg !8597
  %conv9 = zext i8 %9 to i32, !dbg !8597
  %and10 = and i32 %conv9, 48, !dbg !8597
  %cmp11 = icmp ne i32 %and10, 0, !dbg !8597
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !8598

if.then13:                                        ; preds = %lor.lhs.false, %if.then
  %10 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8599
  %11 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8601
  %12 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8602
  %13 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8603
  %call = call %struct.decNumber* @decNaNs(%struct.decNumber* %10, %struct.decNumber* %11, %struct.decNumber* %12, %struct.decContext* %13, i32* %status), !dbg !8604
  br label %do.end, !dbg !8605

if.end:                                           ; preds = %lor.lhs.false
  %14 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8606
  %bits14 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %14, i32 0, i32 2, !dbg !8606
  %15 = load i8, i8* %bits14, align 4, !dbg !8606
  %conv15 = zext i8 %15 to i32, !dbg !8606
  %and16 = and i32 %conv15, 64, !dbg !8606
  %cmp17 = icmp ne i32 %and16, 0, !dbg !8606
  br i1 %cmp17, label %if.then19, label %if.end89, !dbg !8608

if.then19:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %rhsneg, metadata !8609, metadata !DIExpression()), !dbg !8611
  %16 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8612
  %bits20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %16, i32 0, i32 2, !dbg !8613
  %17 = load i8, i8* %bits20, align 4, !dbg !8613
  %conv21 = zext i8 %17 to i32, !dbg !8612
  %and22 = and i32 %conv21, 128, !dbg !8614
  %conv23 = trunc i32 %and22 to i8, !dbg !8612
  store i8 %conv23, i8* %rhsneg, align 1, !dbg !8611
  %18 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8615
  %bits24 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %18, i32 0, i32 2, !dbg !8615
  %19 = load i8, i8* %bits24, align 4, !dbg !8615
  %conv25 = zext i8 %19 to i32, !dbg !8615
  %and26 = and i32 %conv25, 128, !dbg !8615
  %cmp27 = icmp ne i32 %and26, 0, !dbg !8615
  br i1 %cmp27, label %land.lhs.true, label %if.else, !dbg !8617

land.lhs.true:                                    ; preds = %if.then19
  %20 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8618
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %20, i32 0, i32 3, !dbg !8618
  %arraydecay29 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !8618
  %21 = load i16, i16* %arraydecay29, align 2, !dbg !8618
  %conv30 = zext i16 %21 to i32, !dbg !8618
  %cmp31 = icmp eq i32 %conv30, 0, !dbg !8618
  br i1 %cmp31, label %land.lhs.true33, label %if.then43, !dbg !8618

land.lhs.true33:                                  ; preds = %land.lhs.true
  %22 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8618
  %digits34 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %22, i32 0, i32 0, !dbg !8618
  %23 = load i32, i32* %digits34, align 4, !dbg !8618
  %cmp35 = icmp eq i32 %23, 1, !dbg !8618
  br i1 %cmp35, label %land.lhs.true37, label %if.then43, !dbg !8618

land.lhs.true37:                                  ; preds = %land.lhs.true33
  %24 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8618
  %bits38 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %24, i32 0, i32 2, !dbg !8618
  %25 = load i8, i8* %bits38, align 4, !dbg !8618
  %conv39 = zext i8 %25 to i32, !dbg !8618
  %and40 = and i32 %conv39, 112, !dbg !8618
  %cmp41 = icmp eq i32 %and40, 0, !dbg !8618
  br i1 %cmp41, label %if.else, label %if.then43, !dbg !8619

if.then43:                                        ; preds = %land.lhs.true37, %land.lhs.true33, %land.lhs.true
  %26 = load i32, i32* %status, align 4, !dbg !8620
  %or44 = or i32 %26, 128, !dbg !8620
  store i32 %or44, i32* %status, align 4, !dbg !8620
  br label %if.end88, !dbg !8621

if.else:                                          ; preds = %land.lhs.true37, %if.then19
  %call45 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %dnOne), !dbg !8622
  %lsu46 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %dnOne, i32 0, i32 3, !dbg !8624
  %arrayidx = getelementptr inbounds [1 x i16], [1 x i16]* %lsu46, i64 0, i64 0, !dbg !8625
  store i16 1, i16* %arrayidx, align 2, !dbg !8626
  %27 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !8627
  %28 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8628
  %29 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8629
  %call47 = call %struct.decNumber* @decNumberCompare(%struct.decNumber* %27, %struct.decNumber* %28, %struct.decNumber* %dnOne, %struct.decContext* %29), !dbg !8630
  %30 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8631
  %call48 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %30), !dbg !8632
  %31 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !8633
  %bits49 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %31, i32 0, i32 2, !dbg !8633
  %32 = load i8, i8* %bits49, align 4, !dbg !8633
  %conv50 = zext i8 %32 to i32, !dbg !8633
  %and51 = and i32 %conv50, 128, !dbg !8633
  %cmp52 = icmp ne i32 %and51, 0, !dbg !8633
  br i1 %cmp52, label %if.then54, label %if.else62, !dbg !8635

if.then54:                                        ; preds = %if.else
  %33 = load i8, i8* %rhsneg, align 1, !dbg !8636
  %tobool55 = icmp ne i8 %33, 0, !dbg !8636
  br i1 %tobool55, label %if.then56, label %if.end61, !dbg !8639

if.then56:                                        ; preds = %if.then54
  %34 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8640
  %bits57 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %34, i32 0, i32 2, !dbg !8641
  %35 = load i8, i8* %bits57, align 4, !dbg !8642
  %conv58 = zext i8 %35 to i32, !dbg !8642
  %or59 = or i32 %conv58, 64, !dbg !8642
  %conv60 = trunc i32 %or59 to i8, !dbg !8642
  store i8 %conv60, i8* %bits57, align 4, !dbg !8642
  br label %if.end61, !dbg !8640

if.end61:                                         ; preds = %if.then56, %if.then54
  br label %if.end87, !dbg !8643

if.else62:                                        ; preds = %if.else
  %36 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !8644
  %lsu63 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %36, i32 0, i32 3, !dbg !8646
  %arrayidx64 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu63, i64 0, i64 0, !dbg !8644
  %37 = load i16, i16* %arrayidx64, align 2, !dbg !8644
  %conv65 = zext i16 %37 to i32, !dbg !8644
  %cmp66 = icmp eq i32 %conv65, 0, !dbg !8647
  br i1 %cmp66, label %if.then68, label %if.else78, !dbg !8648

if.then68:                                        ; preds = %if.else62
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !8649, metadata !DIExpression()), !dbg !8651
  %38 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8652
  %digits69 = getelementptr inbounds %struct.decContext, %struct.decContext* %38, i32 0, i32 0, !dbg !8653
  %39 = load i32, i32* %digits69, align 4, !dbg !8653
  %sub = sub nsw i32 %39, 1, !dbg !8654
  store i32 %sub, i32* %shift, align 4, !dbg !8651
  %40 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8655
  %lsu70 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %40, i32 0, i32 3, !dbg !8656
  %arraydecay71 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu70, i64 0, i64 0, !dbg !8657
  store i16 1, i16* %arraydecay71, align 2, !dbg !8658
  %41 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8659
  %lsu72 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %41, i32 0, i32 3, !dbg !8660
  %arraydecay73 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu72, i64 0, i64 0, !dbg !8659
  %42 = load i32, i32* %shift, align 4, !dbg !8661
  %call74 = call i32 @decShiftToMost(i16* %arraydecay73, i32 1, i32 %42), !dbg !8662
  %43 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8663
  %digits75 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %43, i32 0, i32 0, !dbg !8664
  store i32 %call74, i32* %digits75, align 4, !dbg !8665
  %44 = load i32, i32* %shift, align 4, !dbg !8666
  %sub76 = sub nsw i32 0, %44, !dbg !8667
  %45 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8668
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %45, i32 0, i32 1, !dbg !8669
  store i32 %sub76, i32* %exponent, align 4, !dbg !8670
  %46 = load i32, i32* %status, align 4, !dbg !8671
  %or77 = or i32 %46, 2080, !dbg !8671
  store i32 %or77, i32* %status, align 4, !dbg !8671
  br label %if.end86, !dbg !8672

if.else78:                                        ; preds = %if.else62
  %47 = load i8, i8* %rhsneg, align 1, !dbg !8673
  %tobool79 = icmp ne i8 %47, 0, !dbg !8673
  br i1 %tobool79, label %if.end85, label %if.then80, !dbg !8676

if.then80:                                        ; preds = %if.else78
  %48 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8677
  %bits81 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %48, i32 0, i32 2, !dbg !8678
  %49 = load i8, i8* %bits81, align 4, !dbg !8679
  %conv82 = zext i8 %49 to i32, !dbg !8679
  %or83 = or i32 %conv82, 64, !dbg !8679
  %conv84 = trunc i32 %or83 to i8, !dbg !8679
  store i8 %conv84, i8* %bits81, align 4, !dbg !8679
  br label %if.end85, !dbg !8677

if.end85:                                         ; preds = %if.then80, %if.else78
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.then68
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.end61
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.then43
  br label %do.end, !dbg !8680

if.end89:                                         ; preds = %if.end
  br label %if.end90, !dbg !8681

if.end90:                                         ; preds = %if.end89, %do.body
  %50 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8682
  %call91 = call i32 @decGetInt(%struct.decNumber* %50), !dbg !8683
  store i32 %call91, i32* %n, align 4, !dbg !8684
  %51 = load i32, i32* %n, align 4, !dbg !8685
  %cmp92 = icmp ne i32 %51, -2147483648, !dbg !8687
  br i1 %cmp92, label %if.then94, label %if.end106, !dbg !8688

if.then94:                                        ; preds = %if.end90
  store i8 1, i8* %rhsint, align 1, !dbg !8689
  %52 = load i32, i32* %n, align 4, !dbg !8691
  %conv95 = trunc i32 %52 to i8, !dbg !8692
  %conv96 = zext i8 %conv95 to i32, !dbg !8692
  %and97 = and i32 %conv96, 1, !dbg !8693
  %conv98 = trunc i32 %and97 to i8, !dbg !8692
  store i8 %conv98, i8* %isoddint, align 1, !dbg !8694
  %53 = load i32, i32* %n, align 4, !dbg !8695
  %cmp99 = icmp ne i32 %53, -2147483646, !dbg !8697
  br i1 %cmp99, label %land.lhs.true101, label %if.end105, !dbg !8698

land.lhs.true101:                                 ; preds = %if.then94
  %54 = load i32, i32* %n, align 4, !dbg !8699
  %cmp102 = icmp ne i32 %54, -2147483645, !dbg !8700
  br i1 %cmp102, label %if.then104, label %if.end105, !dbg !8701

if.then104:                                       ; preds = %land.lhs.true101
  store i8 1, i8* %useint, align 1, !dbg !8702
  br label %if.end105, !dbg !8703

if.end105:                                        ; preds = %if.then104, %land.lhs.true101, %if.then94
  br label %if.end106, !dbg !8704

if.end106:                                        ; preds = %if.end105, %if.end90
  %55 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8705
  %bits107 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %55, i32 0, i32 2, !dbg !8705
  %56 = load i8, i8* %bits107, align 4, !dbg !8705
  %conv108 = zext i8 %56 to i32, !dbg !8705
  %and109 = and i32 %conv108, 128, !dbg !8705
  %cmp110 = icmp ne i32 %and109, 0, !dbg !8705
  br i1 %cmp110, label %land.lhs.true112, label %if.end116, !dbg !8707

land.lhs.true112:                                 ; preds = %if.end106
  %57 = load i8, i8* %isoddint, align 1, !dbg !8708
  %conv113 = zext i8 %57 to i32, !dbg !8708
  %tobool114 = icmp ne i32 %conv113, 0, !dbg !8708
  br i1 %tobool114, label %if.then115, label %if.end116, !dbg !8709

if.then115:                                       ; preds = %land.lhs.true112
  store i8 -128, i8* %bits, align 1, !dbg !8710
  br label %if.end116, !dbg !8711

if.end116:                                        ; preds = %if.then115, %land.lhs.true112, %if.end106
  %58 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8712
  %bits117 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %58, i32 0, i32 2, !dbg !8712
  %59 = load i8, i8* %bits117, align 4, !dbg !8712
  %conv118 = zext i8 %59 to i32, !dbg !8712
  %and119 = and i32 %conv118, 64, !dbg !8712
  %cmp120 = icmp ne i32 %and119, 0, !dbg !8712
  br i1 %cmp120, label %if.then122, label %if.end151, !dbg !8714

if.then122:                                       ; preds = %if.end116
  call void @llvm.dbg.declare(metadata i8* %rbits, metadata !8715, metadata !DIExpression()), !dbg !8717
  %60 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8718
  %bits123 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %60, i32 0, i32 2, !dbg !8719
  %61 = load i8, i8* %bits123, align 4, !dbg !8719
  store i8 %61, i8* %rbits, align 1, !dbg !8717
  %62 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8720
  %call124 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %62), !dbg !8721
  %63 = load i32, i32* %n, align 4, !dbg !8722
  %cmp125 = icmp eq i32 %63, 0, !dbg !8724
  br i1 %cmp125, label %if.then127, label %if.else130, !dbg !8725

if.then127:                                       ; preds = %if.then122
  %64 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8726
  %lsu128 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %64, i32 0, i32 3, !dbg !8727
  %arraydecay129 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu128, i64 0, i64 0, !dbg !8728
  store i16 1, i16* %arraydecay129, align 2, !dbg !8729
  br label %if.end150, !dbg !8728

if.else130:                                       ; preds = %if.then122
  %65 = load i8, i8* %rhsint, align 1, !dbg !8730
  %tobool131 = icmp ne i8 %65, 0, !dbg !8730
  br i1 %tobool131, label %if.end140, label %land.lhs.true132, !dbg !8733

land.lhs.true132:                                 ; preds = %if.else130
  %66 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8734
  %bits133 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %66, i32 0, i32 2, !dbg !8734
  %67 = load i8, i8* %bits133, align 4, !dbg !8734
  %conv134 = zext i8 %67 to i32, !dbg !8734
  %and135 = and i32 %conv134, 128, !dbg !8734
  %cmp136 = icmp ne i32 %and135, 0, !dbg !8734
  br i1 %cmp136, label %if.then138, label %if.end140, !dbg !8735

if.then138:                                       ; preds = %land.lhs.true132
  %68 = load i32, i32* %status, align 4, !dbg !8736
  %or139 = or i32 %68, 128, !dbg !8736
  store i32 %or139, i32* %status, align 4, !dbg !8736
  br label %do.end, !dbg !8738

if.end140:                                        ; preds = %land.lhs.true132, %if.else130
  %69 = load i8, i8* %rbits, align 1, !dbg !8739
  %conv141 = zext i8 %69 to i32, !dbg !8739
  %and142 = and i32 %conv141, 128, !dbg !8741
  %tobool143 = icmp ne i32 %and142, 0, !dbg !8741
  br i1 %tobool143, label %if.end148, label %if.then144, !dbg !8742

if.then144:                                       ; preds = %if.end140
  %70 = load i8, i8* %bits, align 1, !dbg !8743
  %conv145 = zext i8 %70 to i32, !dbg !8743
  %or146 = or i32 %conv145, 64, !dbg !8743
  %conv147 = trunc i32 %or146 to i8, !dbg !8743
  store i8 %conv147, i8* %bits, align 1, !dbg !8743
  br label %if.end148, !dbg !8744

if.end148:                                        ; preds = %if.then144, %if.end140
  %71 = load i8, i8* %bits, align 1, !dbg !8745
  %72 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8746
  %bits149 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %72, i32 0, i32 2, !dbg !8747
  store i8 %71, i8* %bits149, align 4, !dbg !8748
  br label %if.end150

if.end150:                                        ; preds = %if.end148, %if.then127
  br label %do.end, !dbg !8749

if.end151:                                        ; preds = %if.end116
  %73 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8750
  %lsu152 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %73, i32 0, i32 3, !dbg !8750
  %arraydecay153 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu152, i64 0, i64 0, !dbg !8750
  %74 = load i16, i16* %arraydecay153, align 2, !dbg !8750
  %conv154 = zext i16 %74 to i32, !dbg !8750
  %cmp155 = icmp eq i32 %conv154, 0, !dbg !8750
  br i1 %cmp155, label %land.lhs.true157, label %if.end186, !dbg !8750

land.lhs.true157:                                 ; preds = %if.end151
  %75 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8750
  %digits158 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %75, i32 0, i32 0, !dbg !8750
  %76 = load i32, i32* %digits158, align 4, !dbg !8750
  %cmp159 = icmp eq i32 %76, 1, !dbg !8750
  br i1 %cmp159, label %land.lhs.true161, label %if.end186, !dbg !8750

land.lhs.true161:                                 ; preds = %land.lhs.true157
  %77 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8750
  %bits162 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %77, i32 0, i32 2, !dbg !8750
  %78 = load i8, i8* %bits162, align 4, !dbg !8750
  %conv163 = zext i8 %78 to i32, !dbg !8750
  %and164 = and i32 %conv163, 112, !dbg !8750
  %cmp165 = icmp eq i32 %and164, 0, !dbg !8750
  br i1 %cmp165, label %if.then167, label %if.end186, !dbg !8752

if.then167:                                       ; preds = %land.lhs.true161
  %79 = load i32, i32* %n, align 4, !dbg !8753
  %cmp168 = icmp eq i32 %79, 0, !dbg !8756
  br i1 %cmp168, label %if.then170, label %if.else172, !dbg !8757

if.then170:                                       ; preds = %if.then167
  %80 = load i32, i32* %status, align 4, !dbg !8758
  %or171 = or i32 %80, 128, !dbg !8758
  store i32 %or171, i32* %status, align 4, !dbg !8758
  br label %if.end185, !dbg !8760

if.else172:                                       ; preds = %if.then167
  call void @llvm.dbg.declare(metadata i8* %rbits173, metadata !8761, metadata !DIExpression()), !dbg !8763
  %81 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8764
  %bits174 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %81, i32 0, i32 2, !dbg !8765
  %82 = load i8, i8* %bits174, align 4, !dbg !8765
  store i8 %82, i8* %rbits173, align 1, !dbg !8763
  %83 = load i8, i8* %rbits173, align 1, !dbg !8766
  %conv175 = zext i8 %83 to i32, !dbg !8766
  %and176 = and i32 %conv175, 128, !dbg !8768
  %tobool177 = icmp ne i32 %and176, 0, !dbg !8768
  br i1 %tobool177, label %if.then178, label %if.end182, !dbg !8769

if.then178:                                       ; preds = %if.else172
  %84 = load i8, i8* %bits, align 1, !dbg !8770
  %conv179 = zext i8 %84 to i32, !dbg !8770
  %or180 = or i32 %conv179, 64, !dbg !8770
  %conv181 = trunc i32 %or180 to i8, !dbg !8770
  store i8 %conv181, i8* %bits, align 1, !dbg !8770
  br label %if.end182, !dbg !8772

if.end182:                                        ; preds = %if.then178, %if.else172
  %85 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8773
  %call183 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %85), !dbg !8774
  %86 = load i8, i8* %bits, align 1, !dbg !8775
  %87 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8776
  %bits184 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %87, i32 0, i32 2, !dbg !8777
  store i8 %86, i8* %bits184, align 4, !dbg !8778
  br label %if.end185

if.end185:                                        ; preds = %if.end182, %if.then170
  br label %do.end, !dbg !8779

if.end186:                                        ; preds = %land.lhs.true161, %land.lhs.true157, %if.end151
  %88 = load i8, i8* %useint, align 1, !dbg !8780
  %tobool187 = icmp ne i8 %88, 0, !dbg !8780
  br i1 %tobool187, label %if.else213, label %if.then188, !dbg !8782

if.then188:                                       ; preds = %if.end186
  %89 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8783
  %bits189 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %89, i32 0, i32 2, !dbg !8783
  %90 = load i8, i8* %bits189, align 4, !dbg !8783
  %conv190 = zext i8 %90 to i32, !dbg !8783
  %and191 = and i32 %conv190, 128, !dbg !8783
  %cmp192 = icmp ne i32 %and191, 0, !dbg !8783
  br i1 %cmp192, label %if.then194, label %if.end196, !dbg !8786

if.then194:                                       ; preds = %if.then188
  %91 = load i32, i32* %status, align 4, !dbg !8787
  %or195 = or i32 %91, 128, !dbg !8787
  store i32 %or195, i32* %status, align 4, !dbg !8787
  br label %do.end, !dbg !8789

if.end196:                                        ; preds = %if.then188
  %92 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8790
  %93 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8792
  %call197 = call i32 @decCheckMath(%struct.decNumber* %92, %struct.decContext* %93, i32* %status), !dbg !8793
  %tobool198 = icmp ne i32 %call197, 0, !dbg !8793
  br i1 %tobool198, label %if.then202, label %lor.lhs.false199, !dbg !8794

lor.lhs.false199:                                 ; preds = %if.end196
  %94 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8795
  %95 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8796
  %call200 = call i32 @decCheckMath(%struct.decNumber* %94, %struct.decContext* %95, i32* %status), !dbg !8797
  %tobool201 = icmp ne i32 %call200, 0, !dbg !8797
  br i1 %tobool201, label %if.then202, label %if.end203, !dbg !8798

if.then202:                                       ; preds = %lor.lhs.false199, %if.end196
  br label %do.end, !dbg !8799

if.end203:                                        ; preds = %lor.lhs.false199
  %call204 = call %struct.decContext* @decContextDefault(%struct.decContext* %aset, i32 64), !dbg !8800
  %emax = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 1, !dbg !8801
  store i32 999999, i32* %emax, align 4, !dbg !8802
  %emin = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 2, !dbg !8803
  store i32 -999999, i32* %emin, align 4, !dbg !8804
  %clamp = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 6, !dbg !8805
  store i8 0, i8* %clamp, align 4, !dbg !8806
  %96 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8807
  %digits205 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %96, i32 0, i32 0, !dbg !8807
  %97 = load i32, i32* %digits205, align 4, !dbg !8807
  %98 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8807
  %digits206 = getelementptr inbounds %struct.decContext, %struct.decContext* %98, i32 0, i32 0, !dbg !8807
  %99 = load i32, i32* %digits206, align 4, !dbg !8807
  %cmp207 = icmp slt i32 %97, %99, !dbg !8807
  br i1 %cmp207, label %cond.true, label %cond.false, !dbg !8807

cond.true:                                        ; preds = %if.end203
  %100 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8807
  %digits209 = getelementptr inbounds %struct.decContext, %struct.decContext* %100, i32 0, i32 0, !dbg !8807
  %101 = load i32, i32* %digits209, align 4, !dbg !8807
  br label %cond.end, !dbg !8807

cond.false:                                       ; preds = %if.end203
  %102 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8807
  %digits210 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %102, i32 0, i32 0, !dbg !8807
  %103 = load i32, i32* %digits210, align 4, !dbg !8807
  br label %cond.end, !dbg !8807

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %101, %cond.true ], [ %103, %cond.false ], !dbg !8807
  %add = add nsw i32 %cond, 6, !dbg !8808
  %add211 = add nsw i32 %add, 4, !dbg !8809
  %digits212 = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 0, !dbg !8810
  store i32 %add211, i32* %digits212, align 4, !dbg !8811
  br label %if.end238, !dbg !8812

if.else213:                                       ; preds = %if.end186
  %104 = load i32, i32* %n, align 4, !dbg !8813
  %cmp214 = icmp eq i32 %104, 0, !dbg !8816
  br i1 %cmp214, label %if.then216, label %if.end220, !dbg !8817

if.then216:                                       ; preds = %if.else213
  %105 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8818
  %call217 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %105), !dbg !8820
  %106 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !8821
  %lsu218 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %106, i32 0, i32 3, !dbg !8822
  %arraydecay219 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu218, i64 0, i64 0, !dbg !8823
  store i16 1, i16* %arraydecay219, align 2, !dbg !8824
  br label %do.end, !dbg !8825

if.end220:                                        ; preds = %if.else213
  %107 = load i32, i32* %n, align 4, !dbg !8826
  %cmp221 = icmp slt i32 %107, 0, !dbg !8828
  br i1 %cmp221, label %if.then223, label %if.end225, !dbg !8829

if.then223:                                       ; preds = %if.end220
  %108 = load i32, i32* %n, align 4, !dbg !8830
  %sub224 = sub nsw i32 0, %108, !dbg !8831
  store i32 %sub224, i32* %n, align 4, !dbg !8832
  br label %if.end225, !dbg !8833

if.end225:                                        ; preds = %if.then223, %if.end220
  %109 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8834
  %110 = bitcast %struct.decContext* %aset to i8*, !dbg !8835
  %111 = bitcast %struct.decContext* %109 to i8*, !dbg !8835
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %110, i8* align 4 %111, i64 28, i1 false), !dbg !8835
  %round = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 3, !dbg !8836
  store i32 3, i32* %round, align 4, !dbg !8837
  %112 = load i32, i32* %reqdigits, align 4, !dbg !8838
  %113 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8839
  %digits226 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %113, i32 0, i32 0, !dbg !8840
  %114 = load i32, i32* %digits226, align 4, !dbg !8840
  %115 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8841
  %exponent227 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %115, i32 0, i32 1, !dbg !8842
  %116 = load i32, i32* %exponent227, align 4, !dbg !8842
  %add228 = add nsw i32 %114, %116, !dbg !8843
  %add229 = add nsw i32 %112, %add228, !dbg !8844
  %add230 = add nsw i32 %add229, 2, !dbg !8845
  %digits231 = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 0, !dbg !8846
  store i32 %add230, i32* %digits231, align 4, !dbg !8847
  %digits232 = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 0, !dbg !8848
  %117 = load i32, i32* %digits232, align 4, !dbg !8848
  %cmp233 = icmp sgt i32 %117, 999999999, !dbg !8850
  br i1 %cmp233, label %if.then235, label %if.end237, !dbg !8851

if.then235:                                       ; preds = %if.end225
  %118 = load i32, i32* %status, align 4, !dbg !8852
  %or236 = or i32 %118, 128, !dbg !8852
  store i32 %or236, i32* %status, align 4, !dbg !8852
  br label %do.end, !dbg !8854

if.end237:                                        ; preds = %if.end225
  br label %if.end238

if.end238:                                        ; preds = %if.end237, %cond.end
  %digits239 = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 0, !dbg !8855
  %119 = load i32, i32* %digits239, align 4, !dbg !8855
  %cmp240 = icmp sle i32 %119, 49, !dbg !8855
  br i1 %cmp240, label %cond.true242, label %cond.false246, !dbg !8855

cond.true242:                                     ; preds = %if.end238
  %digits243 = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 0, !dbg !8855
  %120 = load i32, i32* %digits243, align 4, !dbg !8855
  %idxprom = sext i32 %120 to i64, !dbg !8855
  %arrayidx244 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom, !dbg !8855
  %121 = load i8, i8* %arrayidx244, align 1, !dbg !8855
  %conv245 = zext i8 %121 to i32, !dbg !8855
  br label %cond.end250, !dbg !8855

cond.false246:                                    ; preds = %if.end238
  %digits247 = getelementptr inbounds %struct.decContext, %struct.decContext* %aset, i32 0, i32 0, !dbg !8855
  %122 = load i32, i32* %digits247, align 4, !dbg !8855
  %add248 = add nsw i32 %122, 3, !dbg !8855
  %sub249 = sub nsw i32 %add248, 1, !dbg !8855
  %div = sdiv i32 %sub249, 3, !dbg !8855
  br label %cond.end250, !dbg !8855

cond.end250:                                      ; preds = %cond.false246, %cond.true242
  %cond251 = phi i32 [ %conv245, %cond.true242 ], [ %div, %cond.false246 ], !dbg !8855
  %sub252 = sub nsw i32 %cond251, 1, !dbg !8856
  %conv253 = sext i32 %sub252 to i64, !dbg !8857
  %mul = mul i64 %conv253, 2, !dbg !8858
  %add254 = add i64 12, %mul, !dbg !8859
  %conv255 = trunc i64 %add254 to i32, !dbg !8860
  store i32 %conv255, i32* %needbytes, align 4, !dbg !8861
  %123 = load i32, i32* %needbytes, align 4, !dbg !8862
  %conv256 = zext i32 %123 to i64, !dbg !8862
  %cmp257 = icmp ugt i64 %conv256, 48, !dbg !8864
  br i1 %cmp257, label %if.then259, label %if.end267, !dbg !8865

if.then259:                                       ; preds = %cond.end250
  %124 = load i32, i32* %needbytes, align 4, !dbg !8866
  %conv260 = zext i32 %124 to i64, !dbg !8866
  %call261 = call noalias i8* @malloc(i64 %conv260) #6, !dbg !8868
  %125 = bitcast i8* %call261 to %struct.decNumber*, !dbg !8869
  store %struct.decNumber* %125, %struct.decNumber** %allocdac, align 8, !dbg !8870
  %126 = load %struct.decNumber*, %struct.decNumber** %allocdac, align 8, !dbg !8871
  %cmp262 = icmp eq %struct.decNumber* %126, null, !dbg !8873
  br i1 %cmp262, label %if.then264, label %if.end266, !dbg !8874

if.then264:                                       ; preds = %if.then259
  %127 = load i32, i32* %status, align 4, !dbg !8875
  %or265 = or i32 %127, 16, !dbg !8875
  store i32 %or265, i32* %status, align 4, !dbg !8875
  br label %do.end, !dbg !8877

if.end266:                                        ; preds = %if.then259
  %128 = load %struct.decNumber*, %struct.decNumber** %allocdac, align 8, !dbg !8878
  store %struct.decNumber* %128, %struct.decNumber** %dac, align 8, !dbg !8879
  br label %if.end267, !dbg !8880

if.end267:                                        ; preds = %if.end266, %cond.end250
  %129 = load i8, i8* %useint, align 1, !dbg !8881
  %tobool268 = icmp ne i8 %129, 0, !dbg !8881
  br i1 %tobool268, label %if.else306, label %if.then269, !dbg !8883

if.then269:                                       ; preds = %if.end267
  %130 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !8884
  %131 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8886
  %call270 = call %struct.decNumber* @decLnOp(%struct.decNumber* %130, %struct.decNumber* %131, %struct.decContext* %aset, i32* %status), !dbg !8887
  %132 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !8888
  %lsu271 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %132, i32 0, i32 3, !dbg !8888
  %arraydecay272 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu271, i64 0, i64 0, !dbg !8888
  %133 = load i16, i16* %arraydecay272, align 2, !dbg !8888
  %conv273 = zext i16 %133 to i32, !dbg !8888
  %cmp274 = icmp eq i32 %conv273, 0, !dbg !8888
  br i1 %cmp274, label %land.lhs.true276, label %if.else302, !dbg !8888

land.lhs.true276:                                 ; preds = %if.then269
  %134 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !8888
  %digits277 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %134, i32 0, i32 0, !dbg !8888
  %135 = load i32, i32* %digits277, align 4, !dbg !8888
  %cmp278 = icmp eq i32 %135, 1, !dbg !8888
  br i1 %cmp278, label %land.lhs.true280, label %if.else302, !dbg !8888

land.lhs.true280:                                 ; preds = %land.lhs.true276
  %136 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !8888
  %bits281 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %136, i32 0, i32 2, !dbg !8888
  %137 = load i8, i8* %bits281, align 4, !dbg !8888
  %conv282 = zext i8 %137 to i32, !dbg !8888
  %and283 = and i32 %conv282, 112, !dbg !8888
  %cmp284 = icmp eq i32 %and283, 0, !dbg !8888
  br i1 %cmp284, label %if.then286, label %if.else302, !dbg !8890

if.then286:                                       ; preds = %land.lhs.true280
  %138 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !8891
  %lsu287 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %138, i32 0, i32 3, !dbg !8893
  %arraydecay288 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu287, i64 0, i64 0, !dbg !8894
  store i16 1, i16* %arraydecay288, align 2, !dbg !8895
  %139 = load i8, i8* %rhsint, align 1, !dbg !8896
  %tobool289 = icmp ne i8 %139, 0, !dbg !8896
  br i1 %tobool289, label %if.end301, label %if.then290, !dbg !8898

if.then290:                                       ; preds = %if.then286
  call void @llvm.dbg.declare(metadata i32* %shift291, metadata !8899, metadata !DIExpression()), !dbg !8901
  %140 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !8902
  %digits292 = getelementptr inbounds %struct.decContext, %struct.decContext* %140, i32 0, i32 0, !dbg !8903
  %141 = load i32, i32* %digits292, align 4, !dbg !8903
  %sub293 = sub nsw i32 %141, 1, !dbg !8904
  store i32 %sub293, i32* %shift291, align 4, !dbg !8901
  %142 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !8905
  %lsu294 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %142, i32 0, i32 3, !dbg !8906
  %arraydecay295 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu294, i64 0, i64 0, !dbg !8905
  %143 = load i32, i32* %shift291, align 4, !dbg !8907
  %call296 = call i32 @decShiftToMost(i16* %arraydecay295, i32 1, i32 %143), !dbg !8908
  %144 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !8909
  %digits297 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %144, i32 0, i32 0, !dbg !8910
  store i32 %call296, i32* %digits297, align 4, !dbg !8911
  %145 = load i32, i32* %shift291, align 4, !dbg !8912
  %sub298 = sub nsw i32 0, %145, !dbg !8913
  %146 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !8914
  %exponent299 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %146, i32 0, i32 1, !dbg !8915
  store i32 %sub298, i32* %exponent299, align 4, !dbg !8916
  %147 = load i32, i32* %status, align 4, !dbg !8917
  %or300 = or i32 %147, 2080, !dbg !8917
  store i32 %or300, i32* %status, align 4, !dbg !8917
  br label %if.end301, !dbg !8918

if.end301:                                        ; preds = %if.then290, %if.then286
  br label %if.end305, !dbg !8919

if.else302:                                       ; preds = %land.lhs.true280, %land.lhs.true276, %if.then269
  %148 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !8920
  %149 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !8922
  %150 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8923
  %call303 = call %struct.decNumber* @decMultiplyOp(%struct.decNumber* %148, %struct.decNumber* %149, %struct.decNumber* %150, %struct.decContext* %aset, i32* %status), !dbg !8924
  %151 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !8925
  %152 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !8926
  %call304 = call %struct.decNumber* @decExpOp(%struct.decNumber* %151, %struct.decNumber* %152, %struct.decContext* %aset, i32* %status), !dbg !8927
  br label %if.end305

if.end305:                                        ; preds = %if.else302, %if.end301
  br label %if.end383, !dbg !8928

if.else306:                                       ; preds = %if.end267
  %153 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !8929
  %call307 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %153), !dbg !8931
  %154 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !8932
  %lsu308 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %154, i32 0, i32 3, !dbg !8933
  %arraydecay309 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu308, i64 0, i64 0, !dbg !8934
  store i16 1, i16* %arraydecay309, align 2, !dbg !8935
  %155 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !8936
  %bits310 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %155, i32 0, i32 2, !dbg !8936
  %156 = load i8, i8* %bits310, align 4, !dbg !8936
  %conv311 = zext i8 %156 to i32, !dbg !8936
  %and312 = and i32 %conv311, 128, !dbg !8936
  %cmp313 = icmp ne i32 %and312, 0, !dbg !8936
  br i1 %cmp313, label %if.then315, label %if.end333, !dbg !8938

if.then315:                                       ; preds = %if.else306
  call void @llvm.dbg.declare(metadata %struct.decNumber** %inv, metadata !8939, metadata !DIExpression()), !dbg !8941
  %arraydecay316 = getelementptr inbounds [4 x %struct.decNumber], [4 x %struct.decNumber]* %invbuff, i64 0, i64 0, !dbg !8942
  store %struct.decNumber* %arraydecay316, %struct.decNumber** %inv, align 8, !dbg !8941
  %157 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !8943
  %call317 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %dnOne, %struct.decNumber* %157), !dbg !8944
  %158 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !8945
  %159 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !8946
  %call318 = call %struct.decNumber* @decDivideOp(%struct.decNumber* %158, %struct.decNumber* %dnOne, %struct.decNumber* %159, %struct.decContext* %aset, i8 zeroext -128, i32* %status), !dbg !8947
  %160 = load i32, i32* %needbytes, align 4, !dbg !8948
  %conv319 = zext i32 %160 to i64, !dbg !8948
  %cmp320 = icmp ugt i64 %conv319, 48, !dbg !8950
  br i1 %cmp320, label %if.then322, label %if.end330, !dbg !8951

if.then322:                                       ; preds = %if.then315
  %161 = load i32, i32* %needbytes, align 4, !dbg !8952
  %conv323 = zext i32 %161 to i64, !dbg !8952
  %call324 = call noalias i8* @malloc(i64 %conv323) #6, !dbg !8954
  %162 = bitcast i8* %call324 to %struct.decNumber*, !dbg !8955
  store %struct.decNumber* %162, %struct.decNumber** %allocinv, align 8, !dbg !8956
  %163 = load %struct.decNumber*, %struct.decNumber** %allocinv, align 8, !dbg !8957
  %cmp325 = icmp eq %struct.decNumber* %163, null, !dbg !8959
  br i1 %cmp325, label %if.then327, label %if.end329, !dbg !8960

if.then327:                                       ; preds = %if.then322
  %164 = load i32, i32* %status, align 4, !dbg !8961
  %or328 = or i32 %164, 16, !dbg !8961
  store i32 %or328, i32* %status, align 4, !dbg !8961
  br label %do.end, !dbg !8963

if.end329:                                        ; preds = %if.then322
  %165 = load %struct.decNumber*, %struct.decNumber** %allocinv, align 8, !dbg !8964
  store %struct.decNumber* %165, %struct.decNumber** %inv, align 8, !dbg !8965
  br label %if.end330, !dbg !8966

if.end330:                                        ; preds = %if.end329, %if.then315
  %166 = load %struct.decNumber*, %struct.decNumber** %inv, align 8, !dbg !8967
  %167 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !8968
  %call331 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %166, %struct.decNumber* %167), !dbg !8969
  %168 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !8970
  %call332 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %168, %struct.decNumber* %dnOne), !dbg !8971
  %169 = load %struct.decNumber*, %struct.decNumber** %inv, align 8, !dbg !8972
  store %struct.decNumber* %169, %struct.decNumber** %lhs.addr, align 8, !dbg !8973
  br label %if.end333, !dbg !8974

if.end333:                                        ; preds = %if.end330, %if.else306
  store i8 0, i8* %seenbit, align 1, !dbg !8975
  store i32 1, i32* %i, align 4, !dbg !8976
  br label %for.cond, !dbg !8978

for.cond:                                         ; preds = %for.inc, %if.end333
  %170 = load i32, i32* %status, align 4, !dbg !8979
  %and334 = and i32 %170, 8704, !dbg !8983
  %tobool335 = icmp ne i32 %and334, 0, !dbg !8983
  br i1 %tobool335, label %if.then336, label %if.end357, !dbg !8984

if.then336:                                       ; preds = %for.cond
  %171 = load i32, i32* %status, align 4, !dbg !8985
  %and337 = and i32 %171, 512, !dbg !8988
  %tobool338 = icmp ne i32 %and337, 0, !dbg !8988
  br i1 %tobool338, label %if.then355, label %lor.lhs.false339, !dbg !8989

lor.lhs.false339:                                 ; preds = %if.then336
  %172 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !8990
  %lsu340 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %172, i32 0, i32 3, !dbg !8990
  %arraydecay341 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu340, i64 0, i64 0, !dbg !8990
  %173 = load i16, i16* %arraydecay341, align 2, !dbg !8990
  %conv342 = zext i16 %173 to i32, !dbg !8990
  %cmp343 = icmp eq i32 %conv342, 0, !dbg !8990
  br i1 %cmp343, label %land.lhs.true345, label %if.end356, !dbg !8990

land.lhs.true345:                                 ; preds = %lor.lhs.false339
  %174 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !8990
  %digits346 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %174, i32 0, i32 0, !dbg !8990
  %175 = load i32, i32* %digits346, align 4, !dbg !8990
  %cmp347 = icmp eq i32 %175, 1, !dbg !8990
  br i1 %cmp347, label %land.lhs.true349, label %if.end356, !dbg !8990

land.lhs.true349:                                 ; preds = %land.lhs.true345
  %176 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !8990
  %bits350 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %176, i32 0, i32 2, !dbg !8990
  %177 = load i8, i8* %bits350, align 4, !dbg !8990
  %conv351 = zext i8 %177 to i32, !dbg !8990
  %and352 = and i32 %conv351, 112, !dbg !8990
  %cmp353 = icmp eq i32 %and352, 0, !dbg !8990
  br i1 %cmp353, label %if.then355, label %if.end356, !dbg !8991

if.then355:                                       ; preds = %land.lhs.true349, %if.then336
  br label %for.end, !dbg !8992

if.end356:                                        ; preds = %land.lhs.true349, %land.lhs.true345, %lor.lhs.false339
  br label %if.end357, !dbg !8993

if.end357:                                        ; preds = %if.end356, %for.cond
  %178 = load i32, i32* %n, align 4, !dbg !8994
  %shl = shl i32 %178, 1, !dbg !8995
  store i32 %shl, i32* %n, align 4, !dbg !8996
  %179 = load i32, i32* %n, align 4, !dbg !8997
  %cmp358 = icmp slt i32 %179, 0, !dbg !8999
  br i1 %cmp358, label %if.then360, label %if.end362, !dbg !9000

if.then360:                                       ; preds = %if.end357
  store i8 1, i8* %seenbit, align 1, !dbg !9001
  %180 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !9003
  %181 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !9004
  %182 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !9005
  %call361 = call %struct.decNumber* @decMultiplyOp(%struct.decNumber* %180, %struct.decNumber* %181, %struct.decNumber* %182, %struct.decContext* %aset, i32* %status), !dbg !9006
  br label %if.end362, !dbg !9007

if.end362:                                        ; preds = %if.then360, %if.end357
  %183 = load i32, i32* %i, align 4, !dbg !9008
  %cmp363 = icmp eq i32 %183, 31, !dbg !9010
  br i1 %cmp363, label %if.then365, label %if.end366, !dbg !9011

if.then365:                                       ; preds = %if.end362
  br label %for.end, !dbg !9012

if.end366:                                        ; preds = %if.end362
  %184 = load i8, i8* %seenbit, align 1, !dbg !9013
  %tobool367 = icmp ne i8 %184, 0, !dbg !9013
  br i1 %tobool367, label %if.end369, label %if.then368, !dbg !9015

if.then368:                                       ; preds = %if.end366
  br label %for.inc, !dbg !9016

if.end369:                                        ; preds = %if.end366
  %185 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !9017
  %186 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !9018
  %187 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !9019
  %call370 = call %struct.decNumber* @decMultiplyOp(%struct.decNumber* %185, %struct.decNumber* %186, %struct.decNumber* %187, %struct.decContext* %aset, i32* %status), !dbg !9020
  br label %for.inc, !dbg !9021

for.inc:                                          ; preds = %if.end369, %if.then368
  %188 = load i32, i32* %i, align 4, !dbg !9022
  %inc = add nsw i32 %188, 1, !dbg !9022
  store i32 %inc, i32* %i, align 4, !dbg !9022
  br label %for.cond, !dbg !9023, !llvm.loop !9024

for.end:                                          ; preds = %if.then365, %if.then355
  %189 = load i32, i32* %status, align 4, !dbg !9027
  %and371 = and i32 %189, 8704, !dbg !9029
  %tobool372 = icmp ne i32 %and371, 0, !dbg !9029
  br i1 %tobool372, label %if.then373, label %if.end382, !dbg !9030

if.then373:                                       ; preds = %for.end
  %190 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !9031
  %bits374 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %190, i32 0, i32 2, !dbg !9033
  %191 = load i8, i8* %bits374, align 4, !dbg !9033
  %conv375 = zext i8 %191 to i32, !dbg !9031
  %and376 = and i32 %conv375, -129, !dbg !9034
  %192 = load i8, i8* %bits, align 1, !dbg !9035
  %conv377 = zext i8 %192 to i32, !dbg !9035
  %or378 = or i32 %and376, %conv377, !dbg !9036
  %conv379 = trunc i32 %or378 to i8, !dbg !9037
  %193 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !9038
  %bits380 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %193, i32 0, i32 2, !dbg !9039
  store i8 %conv379, i8* %bits380, align 4, !dbg !9040
  %194 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !9041
  %195 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9042
  call void @decFinalize(%struct.decNumber* %194, %struct.decContext* %195, i32* %residue, i32* %status), !dbg !9043
  %196 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9044
  %197 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !9045
  %call381 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %196, %struct.decNumber* %197), !dbg !9046
  br label %do.end, !dbg !9047

if.end382:                                        ; preds = %for.end
  br label %if.end383

if.end383:                                        ; preds = %if.end382, %if.end305
  %198 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9048
  %199 = load %struct.decNumber*, %struct.decNumber** %dac, align 8, !dbg !9049
  %200 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9050
  call void @decCopyFit(%struct.decNumber* %198, %struct.decNumber* %199, %struct.decContext* %200, i32* %residue, i32* %status), !dbg !9051
  %201 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9052
  %202 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9052
  call void @decFinalize(%struct.decNumber* %201, %struct.decContext* %202, i32* %residue, i32* %status), !dbg !9052
  br label %do.end, !dbg !9053

do.end:                                           ; preds = %if.end383, %if.then373, %if.then327, %if.then264, %if.then235, %if.then216, %if.then202, %if.then194, %if.end185, %if.end150, %if.then138, %if.end88, %if.then13
  %203 = load %struct.decNumber*, %struct.decNumber** %allocdac, align 8, !dbg !9054
  %cmp384 = icmp ne %struct.decNumber* %203, null, !dbg !9056
  br i1 %cmp384, label %if.then386, label %if.end387, !dbg !9057

if.then386:                                       ; preds = %do.end
  %204 = load %struct.decNumber*, %struct.decNumber** %allocdac, align 8, !dbg !9058
  %205 = bitcast %struct.decNumber* %204 to i8*, !dbg !9058
  call void @free(i8* %205) #6, !dbg !9059
  br label %if.end387, !dbg !9059

if.end387:                                        ; preds = %if.then386, %do.end
  %206 = load %struct.decNumber*, %struct.decNumber** %allocinv, align 8, !dbg !9060
  %cmp388 = icmp ne %struct.decNumber* %206, null, !dbg !9062
  br i1 %cmp388, label %if.then390, label %if.end391, !dbg !9063

if.then390:                                       ; preds = %if.end387
  %207 = load %struct.decNumber*, %struct.decNumber** %allocinv, align 8, !dbg !9064
  %208 = bitcast %struct.decNumber* %207 to i8*, !dbg !9064
  call void @free(i8* %208) #6, !dbg !9065
  br label %if.end391, !dbg !9065

if.end391:                                        ; preds = %if.then390, %if.end387
  %209 = load i32, i32* %status, align 4, !dbg !9066
  %cmp392 = icmp ne i32 %209, 0, !dbg !9068
  br i1 %cmp392, label %if.then394, label %if.end395, !dbg !9069

if.then394:                                       ; preds = %if.end391
  %210 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9070
  %211 = load i32, i32* %status, align 4, !dbg !9071
  %212 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9072
  call void @decStatus(%struct.decNumber* %210, i32 %211, %struct.decContext* %212), !dbg !9073
  br label %if.end395, !dbg !9073

if.end395:                                        ; preds = %if.then394, %if.end391
  %213 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9074
  ret %struct.decNumber* %213, !dbg !9075
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @decShiftToMost(i16* %uar, i32 %digits, i32 %shift) #0 !dbg !9076 {
entry:
  %retval = alloca i32, align 4
  %uar.addr = alloca i16*, align 8
  %digits.addr = alloca i32, align 4
  %shift.addr = alloca i32, align 4
  %target = alloca i16*, align 8
  %source = alloca i16*, align 8
  %first = alloca i16*, align 8
  %cut = alloca i32, align 4
  %next = alloca i32, align 4
  %quot = alloca i32, align 4
  %rem = alloca i32, align 4
  store i16* %uar, i16** %uar.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %uar.addr, metadata !9079, metadata !DIExpression()), !dbg !9080
  store i32 %digits, i32* %digits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %digits.addr, metadata !9081, metadata !DIExpression()), !dbg !9082
  store i32 %shift, i32* %shift.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr, metadata !9083, metadata !DIExpression()), !dbg !9084
  call void @llvm.dbg.declare(metadata i16** %target, metadata !9085, metadata !DIExpression()), !dbg !9086
  call void @llvm.dbg.declare(metadata i16** %source, metadata !9087, metadata !DIExpression()), !dbg !9088
  call void @llvm.dbg.declare(metadata i16** %first, metadata !9089, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.declare(metadata i32* %cut, metadata !9091, metadata !DIExpression()), !dbg !9092
  call void @llvm.dbg.declare(metadata i32* %next, metadata !9093, metadata !DIExpression()), !dbg !9094
  %0 = load i32, i32* %shift.addr, align 4, !dbg !9095
  %cmp = icmp eq i32 %0, 0, !dbg !9097
  br i1 %cmp, label %if.then, label %if.end, !dbg !9098

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %digits.addr, align 4, !dbg !9099
  store i32 %1, i32* %retval, align 4, !dbg !9100
  br label %return, !dbg !9100

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %digits.addr, align 4, !dbg !9101
  %3 = load i32, i32* %shift.addr, align 4, !dbg !9103
  %add = add nsw i32 %2, %3, !dbg !9104
  %cmp1 = icmp sle i32 %add, 3, !dbg !9105
  br i1 %cmp1, label %if.then2, label %if.end5, !dbg !9106

if.then2:                                         ; preds = %if.end
  %4 = load i16*, i16** %uar.addr, align 8, !dbg !9107
  %5 = load i16, i16* %4, align 2, !dbg !9109
  %conv = zext i16 %5 to i32, !dbg !9109
  %6 = load i32, i32* %shift.addr, align 4, !dbg !9110
  %idxprom = sext i32 %6 to i64, !dbg !9111
  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom, !dbg !9111
  %7 = load i32, i32* %arrayidx, align 4, !dbg !9111
  %mul = mul i32 %conv, %7, !dbg !9112
  %conv3 = trunc i32 %mul to i16, !dbg !9113
  %8 = load i16*, i16** %uar.addr, align 8, !dbg !9114
  store i16 %conv3, i16* %8, align 2, !dbg !9115
  %9 = load i32, i32* %digits.addr, align 4, !dbg !9116
  %10 = load i32, i32* %shift.addr, align 4, !dbg !9117
  %add4 = add nsw i32 %9, %10, !dbg !9118
  store i32 %add4, i32* %retval, align 4, !dbg !9119
  br label %return, !dbg !9119

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %next, align 4, !dbg !9120
  %11 = load i16*, i16** %uar.addr, align 8, !dbg !9121
  %12 = load i32, i32* %digits.addr, align 4, !dbg !9122
  %cmp6 = icmp sle i32 %12, 49, !dbg !9122
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !9122

cond.true:                                        ; preds = %if.end5
  %13 = load i32, i32* %digits.addr, align 4, !dbg !9122
  %idxprom8 = sext i32 %13 to i64, !dbg !9122
  %arrayidx9 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom8, !dbg !9122
  %14 = load i8, i8* %arrayidx9, align 1, !dbg !9122
  %conv10 = zext i8 %14 to i32, !dbg !9122
  br label %cond.end, !dbg !9122

cond.false:                                       ; preds = %if.end5
  %15 = load i32, i32* %digits.addr, align 4, !dbg !9122
  %add11 = add nsw i32 %15, 3, !dbg !9122
  %sub = sub nsw i32 %add11, 1, !dbg !9122
  %div = sdiv i32 %sub, 3, !dbg !9122
  br label %cond.end, !dbg !9122

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv10, %cond.true ], [ %div, %cond.false ], !dbg !9122
  %idx.ext = sext i32 %cond to i64, !dbg !9123
  %add.ptr = getelementptr inbounds i16, i16* %11, i64 %idx.ext, !dbg !9123
  %add.ptr12 = getelementptr inbounds i16, i16* %add.ptr, i64 -1, !dbg !9124
  store i16* %add.ptr12, i16** %source, align 8, !dbg !9125
  %16 = load i16*, i16** %source, align 8, !dbg !9126
  %17 = load i32, i32* %shift.addr, align 4, !dbg !9127
  %cmp13 = icmp sle i32 %17, 49, !dbg !9127
  br i1 %cmp13, label %cond.true15, label %cond.false19, !dbg !9127

cond.true15:                                      ; preds = %cond.end
  %18 = load i32, i32* %shift.addr, align 4, !dbg !9127
  %idxprom16 = sext i32 %18 to i64, !dbg !9127
  %arrayidx17 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom16, !dbg !9127
  %19 = load i8, i8* %arrayidx17, align 1, !dbg !9127
  %conv18 = zext i8 %19 to i32, !dbg !9127
  br label %cond.end23, !dbg !9127

cond.false19:                                     ; preds = %cond.end
  %20 = load i32, i32* %shift.addr, align 4, !dbg !9127
  %add20 = add nsw i32 %20, 3, !dbg !9127
  %sub21 = sub nsw i32 %add20, 1, !dbg !9127
  %div22 = sdiv i32 %sub21, 3, !dbg !9127
  br label %cond.end23, !dbg !9127

cond.end23:                                       ; preds = %cond.false19, %cond.true15
  %cond24 = phi i32 [ %conv18, %cond.true15 ], [ %div22, %cond.false19 ], !dbg !9127
  %idx.ext25 = sext i32 %cond24 to i64, !dbg !9128
  %add.ptr26 = getelementptr inbounds i16, i16* %16, i64 %idx.ext25, !dbg !9128
  store i16* %add.ptr26, i16** %target, align 8, !dbg !9129
  %21 = load i32, i32* %shift.addr, align 4, !dbg !9130
  %22 = load i32, i32* %shift.addr, align 4, !dbg !9130
  %cmp27 = icmp sle i32 %22, 49, !dbg !9130
  br i1 %cmp27, label %cond.true29, label %cond.false33, !dbg !9130

cond.true29:                                      ; preds = %cond.end23
  %23 = load i32, i32* %shift.addr, align 4, !dbg !9130
  %idxprom30 = sext i32 %23 to i64, !dbg !9130
  %arrayidx31 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom30, !dbg !9130
  %24 = load i8, i8* %arrayidx31, align 1, !dbg !9130
  %conv32 = zext i8 %24 to i32, !dbg !9130
  br label %cond.end37, !dbg !9130

cond.false33:                                     ; preds = %cond.end23
  %25 = load i32, i32* %shift.addr, align 4, !dbg !9130
  %add34 = add nsw i32 %25, 3, !dbg !9130
  %sub35 = sub nsw i32 %add34, 1, !dbg !9130
  %div36 = sdiv i32 %sub35, 3, !dbg !9130
  br label %cond.end37, !dbg !9130

cond.end37:                                       ; preds = %cond.false33, %cond.true29
  %cond38 = phi i32 [ %conv32, %cond.true29 ], [ %div36, %cond.false33 ], !dbg !9130
  %sub39 = sub nsw i32 %cond38, 1, !dbg !9130
  %mul40 = mul nsw i32 %sub39, 3, !dbg !9130
  %sub41 = sub nsw i32 %21, %mul40, !dbg !9130
  %sub42 = sub nsw i32 3, %sub41, !dbg !9131
  store i32 %sub42, i32* %cut, align 4, !dbg !9132
  %26 = load i32, i32* %cut, align 4, !dbg !9133
  %cmp43 = icmp eq i32 %26, 0, !dbg !9135
  br i1 %cmp43, label %if.then45, label %if.else, !dbg !9136

if.then45:                                        ; preds = %cond.end37
  br label %for.cond, !dbg !9137

for.cond:                                         ; preds = %for.inc, %if.then45
  %27 = load i16*, i16** %source, align 8, !dbg !9139
  %28 = load i16*, i16** %uar.addr, align 8, !dbg !9142
  %cmp46 = icmp uge i16* %27, %28, !dbg !9143
  br i1 %cmp46, label %for.body, label %for.end, !dbg !9144

for.body:                                         ; preds = %for.cond
  %29 = load i16*, i16** %source, align 8, !dbg !9145
  %30 = load i16, i16* %29, align 2, !dbg !9146
  %31 = load i16*, i16** %target, align 8, !dbg !9147
  store i16 %30, i16* %31, align 2, !dbg !9148
  br label %for.inc, !dbg !9149

for.inc:                                          ; preds = %for.body
  %32 = load i16*, i16** %source, align 8, !dbg !9150
  %incdec.ptr = getelementptr inbounds i16, i16* %32, i32 -1, !dbg !9150
  store i16* %incdec.ptr, i16** %source, align 8, !dbg !9150
  %33 = load i16*, i16** %target, align 8, !dbg !9151
  %incdec.ptr48 = getelementptr inbounds i16, i16* %33, i32 -1, !dbg !9151
  store i16* %incdec.ptr48, i16** %target, align 8, !dbg !9151
  br label %for.cond, !dbg !9152, !llvm.loop !9153

for.end:                                          ; preds = %for.cond
  br label %if.end95, !dbg !9155

if.else:                                          ; preds = %cond.end37
  %34 = load i16*, i16** %uar.addr, align 8, !dbg !9156
  %35 = load i32, i32* %digits.addr, align 4, !dbg !9158
  %36 = load i32, i32* %shift.addr, align 4, !dbg !9158
  %add49 = add nsw i32 %35, %36, !dbg !9158
  %cmp50 = icmp sle i32 %add49, 49, !dbg !9158
  br i1 %cmp50, label %cond.true52, label %cond.false57, !dbg !9158

cond.true52:                                      ; preds = %if.else
  %37 = load i32, i32* %digits.addr, align 4, !dbg !9158
  %38 = load i32, i32* %shift.addr, align 4, !dbg !9158
  %add53 = add nsw i32 %37, %38, !dbg !9158
  %idxprom54 = sext i32 %add53 to i64, !dbg !9158
  %arrayidx55 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom54, !dbg !9158
  %39 = load i8, i8* %arrayidx55, align 1, !dbg !9158
  %conv56 = zext i8 %39 to i32, !dbg !9158
  br label %cond.end62, !dbg !9158

cond.false57:                                     ; preds = %if.else
  %40 = load i32, i32* %digits.addr, align 4, !dbg !9158
  %41 = load i32, i32* %shift.addr, align 4, !dbg !9158
  %add58 = add nsw i32 %40, %41, !dbg !9158
  %add59 = add nsw i32 %add58, 3, !dbg !9158
  %sub60 = sub nsw i32 %add59, 1, !dbg !9158
  %div61 = sdiv i32 %sub60, 3, !dbg !9158
  br label %cond.end62, !dbg !9158

cond.end62:                                       ; preds = %cond.false57, %cond.true52
  %cond63 = phi i32 [ %conv56, %cond.true52 ], [ %div61, %cond.false57 ], !dbg !9158
  %idx.ext64 = sext i32 %cond63 to i64, !dbg !9159
  %add.ptr65 = getelementptr inbounds i16, i16* %34, i64 %idx.ext64, !dbg !9159
  %add.ptr66 = getelementptr inbounds i16, i16* %add.ptr65, i64 -1, !dbg !9160
  store i16* %add.ptr66, i16** %first, align 8, !dbg !9161
  br label %for.cond67, !dbg !9162

for.cond67:                                       ; preds = %for.inc91, %cond.end62
  %42 = load i16*, i16** %source, align 8, !dbg !9163
  %43 = load i16*, i16** %uar.addr, align 8, !dbg !9166
  %cmp68 = icmp uge i16* %42, %43, !dbg !9167
  br i1 %cmp68, label %for.body70, label %for.end94, !dbg !9168

for.body70:                                       ; preds = %for.cond67
  call void @llvm.dbg.declare(metadata i32* %quot, metadata !9169, metadata !DIExpression()), !dbg !9171
  %44 = load i16*, i16** %source, align 8, !dbg !9172
  %45 = load i16, i16* %44, align 2, !dbg !9172
  %conv71 = zext i16 %45 to i32, !dbg !9172
  %46 = load i32, i32* %cut, align 4, !dbg !9172
  %shr = lshr i32 %conv71, %46, !dbg !9172
  %47 = load i32, i32* %cut, align 4, !dbg !9172
  %idxprom72 = sext i32 %47 to i64, !dbg !9172
  %arrayidx73 = getelementptr inbounds [5 x i32], [5 x i32]* @multies, i64 0, i64 %idxprom72, !dbg !9172
  %48 = load i32, i32* %arrayidx73, align 4, !dbg !9172
  %mul74 = mul i32 %shr, %48, !dbg !9172
  %shr75 = lshr i32 %mul74, 17, !dbg !9172
  store i32 %shr75, i32* %quot, align 4, !dbg !9171
  call void @llvm.dbg.declare(metadata i32* %rem, metadata !9173, metadata !DIExpression()), !dbg !9174
  %49 = load i16*, i16** %source, align 8, !dbg !9175
  %50 = load i16, i16* %49, align 2, !dbg !9176
  %conv76 = zext i16 %50 to i32, !dbg !9176
  %51 = load i32, i32* %quot, align 4, !dbg !9177
  %52 = load i32, i32* %cut, align 4, !dbg !9178
  %idxprom77 = sext i32 %52 to i64, !dbg !9179
  %arrayidx78 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom77, !dbg !9179
  %53 = load i32, i32* %arrayidx78, align 4, !dbg !9179
  %mul79 = mul i32 %51, %53, !dbg !9180
  %sub80 = sub i32 %conv76, %mul79, !dbg !9181
  store i32 %sub80, i32* %rem, align 4, !dbg !9174
  %54 = load i32, i32* %quot, align 4, !dbg !9182
  %55 = load i32, i32* %next, align 4, !dbg !9183
  %add81 = add i32 %55, %54, !dbg !9183
  store i32 %add81, i32* %next, align 4, !dbg !9183
  %56 = load i16*, i16** %target, align 8, !dbg !9184
  %57 = load i16*, i16** %first, align 8, !dbg !9186
  %cmp82 = icmp ule i16* %56, %57, !dbg !9187
  br i1 %cmp82, label %if.then84, label %if.end86, !dbg !9188

if.then84:                                        ; preds = %for.body70
  %58 = load i32, i32* %next, align 4, !dbg !9189
  %conv85 = trunc i32 %58 to i16, !dbg !9190
  %59 = load i16*, i16** %target, align 8, !dbg !9191
  store i16 %conv85, i16* %59, align 2, !dbg !9192
  br label %if.end86, !dbg !9193

if.end86:                                         ; preds = %if.then84, %for.body70
  %60 = load i32, i32* %rem, align 4, !dbg !9194
  %61 = load i32, i32* %cut, align 4, !dbg !9195
  %sub87 = sub nsw i32 3, %61, !dbg !9196
  %idxprom88 = sext i32 %sub87 to i64, !dbg !9197
  %arrayidx89 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom88, !dbg !9197
  %62 = load i32, i32* %arrayidx89, align 4, !dbg !9197
  %mul90 = mul i32 %60, %62, !dbg !9198
  store i32 %mul90, i32* %next, align 4, !dbg !9199
  br label %for.inc91, !dbg !9200

for.inc91:                                        ; preds = %if.end86
  %63 = load i16*, i16** %source, align 8, !dbg !9201
  %incdec.ptr92 = getelementptr inbounds i16, i16* %63, i32 -1, !dbg !9201
  store i16* %incdec.ptr92, i16** %source, align 8, !dbg !9201
  %64 = load i16*, i16** %target, align 8, !dbg !9202
  %incdec.ptr93 = getelementptr inbounds i16, i16* %64, i32 -1, !dbg !9202
  store i16* %incdec.ptr93, i16** %target, align 8, !dbg !9202
  br label %for.cond67, !dbg !9203, !llvm.loop !9204

for.end94:                                        ; preds = %for.cond67
  br label %if.end95

if.end95:                                         ; preds = %for.end94, %for.end
  br label %for.cond96, !dbg !9206

for.cond96:                                       ; preds = %for.inc101, %if.end95
  %65 = load i16*, i16** %target, align 8, !dbg !9207
  %66 = load i16*, i16** %uar.addr, align 8, !dbg !9210
  %cmp97 = icmp uge i16* %65, %66, !dbg !9211
  br i1 %cmp97, label %for.body99, label %for.end103, !dbg !9212

for.body99:                                       ; preds = %for.cond96
  %67 = load i32, i32* %next, align 4, !dbg !9213
  %conv100 = trunc i32 %67 to i16, !dbg !9215
  %68 = load i16*, i16** %target, align 8, !dbg !9216
  store i16 %conv100, i16* %68, align 2, !dbg !9217
  store i32 0, i32* %next, align 4, !dbg !9218
  br label %for.inc101, !dbg !9219

for.inc101:                                       ; preds = %for.body99
  %69 = load i16*, i16** %target, align 8, !dbg !9220
  %incdec.ptr102 = getelementptr inbounds i16, i16* %69, i32 -1, !dbg !9220
  store i16* %incdec.ptr102, i16** %target, align 8, !dbg !9220
  br label %for.cond96, !dbg !9221, !llvm.loop !9222

for.end103:                                       ; preds = %for.cond96
  %70 = load i32, i32* %digits.addr, align 4, !dbg !9224
  %71 = load i32, i32* %shift.addr, align 4, !dbg !9225
  %add104 = add nsw i32 %70, %71, !dbg !9226
  store i32 %add104, i32* %retval, align 4, !dbg !9227
  br label %return, !dbg !9227

return:                                           ; preds = %for.end103, %if.then2, %if.then
  %72 = load i32, i32* %retval, align 4, !dbg !9228
  ret i32 %72, !dbg !9228
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @decGetInt(%struct.decNumber* %dn) #0 !dbg !9229 {
entry:
  %retval = alloca i32, align 4
  %dn.addr = alloca %struct.decNumber*, align 8
  %theInt = alloca i32, align 4
  %up = alloca i16*, align 8
  %got = alloca i32, align 4
  %ilength = alloca i32, align 4
  %neg = alloca i8, align 1
  %count = alloca i32, align 4
  %rem = alloca i32, align 4
  %save = alloca i32, align 4
  store %struct.decNumber* %dn, %struct.decNumber** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dn.addr, metadata !9232, metadata !DIExpression()), !dbg !9233
  call void @llvm.dbg.declare(metadata i32* %theInt, metadata !9234, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.declare(metadata i16** %up, metadata !9236, metadata !DIExpression()), !dbg !9237
  call void @llvm.dbg.declare(metadata i32* %got, metadata !9238, metadata !DIExpression()), !dbg !9239
  call void @llvm.dbg.declare(metadata i32* %ilength, metadata !9240, metadata !DIExpression()), !dbg !9241
  %0 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9242
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 0, !dbg !9243
  %1 = load i32, i32* %digits, align 4, !dbg !9243
  %2 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9244
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 1, !dbg !9245
  %3 = load i32, i32* %exponent, align 4, !dbg !9245
  %add = add nsw i32 %1, %3, !dbg !9246
  store i32 %add, i32* %ilength, align 4, !dbg !9241
  call void @llvm.dbg.declare(metadata i8* %neg, metadata !9247, metadata !DIExpression()), !dbg !9248
  %4 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9249
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 2, !dbg !9249
  %5 = load i8, i8* %bits, align 4, !dbg !9249
  %conv = zext i8 %5 to i32, !dbg !9249
  %and = and i32 %conv, 128, !dbg !9249
  %cmp = icmp ne i32 %and, 0, !dbg !9249
  %conv1 = zext i1 %cmp to i32, !dbg !9249
  %conv2 = trunc i32 %conv1 to i8, !dbg !9249
  store i8 %conv2, i8* %neg, align 1, !dbg !9248
  %6 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9250
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %6, i32 0, i32 3, !dbg !9250
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !9250
  %7 = load i16, i16* %arraydecay, align 2, !dbg !9250
  %conv3 = zext i16 %7 to i32, !dbg !9250
  %cmp4 = icmp eq i32 %conv3, 0, !dbg !9250
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !9250

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9250
  %digits6 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i32 0, i32 0, !dbg !9250
  %9 = load i32, i32* %digits6, align 4, !dbg !9250
  %cmp7 = icmp eq i32 %9, 1, !dbg !9250
  br i1 %cmp7, label %land.lhs.true9, label %if.end, !dbg !9250

land.lhs.true9:                                   ; preds = %land.lhs.true
  %10 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9250
  %bits10 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %10, i32 0, i32 2, !dbg !9250
  %11 = load i8, i8* %bits10, align 4, !dbg !9250
  %conv11 = zext i8 %11 to i32, !dbg !9250
  %and12 = and i32 %conv11, 112, !dbg !9250
  %cmp13 = icmp eq i32 %and12, 0, !dbg !9250
  br i1 %cmp13, label %if.then, label %if.end, !dbg !9252

if.then:                                          ; preds = %land.lhs.true9
  store i32 0, i32* %retval, align 4, !dbg !9253
  br label %return, !dbg !9253

if.end:                                           ; preds = %land.lhs.true9, %land.lhs.true, %entry
  %12 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9254
  %lsu15 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %12, i32 0, i32 3, !dbg !9255
  %arraydecay16 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu15, i64 0, i64 0, !dbg !9254
  store i16* %arraydecay16, i16** %up, align 8, !dbg !9256
  store i32 0, i32* %theInt, align 4, !dbg !9257
  %13 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9258
  %exponent17 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %13, i32 0, i32 1, !dbg !9260
  %14 = load i32, i32* %exponent17, align 4, !dbg !9260
  %cmp18 = icmp sge i32 %14, 0, !dbg !9261
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !9262

if.then20:                                        ; preds = %if.end
  %15 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9263
  %exponent21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %15, i32 0, i32 1, !dbg !9265
  %16 = load i32, i32* %exponent21, align 4, !dbg !9265
  store i32 %16, i32* %got, align 4, !dbg !9266
  br label %if.end49, !dbg !9267

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %count, metadata !9268, metadata !DIExpression()), !dbg !9270
  %17 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9271
  %exponent22 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %17, i32 0, i32 1, !dbg !9272
  %18 = load i32, i32* %exponent22, align 4, !dbg !9272
  %sub = sub nsw i32 0, %18, !dbg !9273
  store i32 %sub, i32* %count, align 4, !dbg !9270
  br label %for.cond, !dbg !9274

for.cond:                                         ; preds = %for.inc, %if.else
  %19 = load i32, i32* %count, align 4, !dbg !9275
  %cmp23 = icmp sge i32 %19, 3, !dbg !9278
  br i1 %cmp23, label %for.body, label %for.end, !dbg !9279

for.body:                                         ; preds = %for.cond
  %20 = load i16*, i16** %up, align 8, !dbg !9280
  %21 = load i16, i16* %20, align 2, !dbg !9283
  %conv25 = zext i16 %21 to i32, !dbg !9283
  %cmp26 = icmp ne i32 %conv25, 0, !dbg !9284
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !9285

if.then28:                                        ; preds = %for.body
  store i32 -2147483648, i32* %retval, align 4, !dbg !9286
  br label %return, !dbg !9286

if.end29:                                         ; preds = %for.body
  %22 = load i32, i32* %count, align 4, !dbg !9287
  %sub30 = sub nsw i32 %22, 3, !dbg !9287
  store i32 %sub30, i32* %count, align 4, !dbg !9287
  br label %for.inc, !dbg !9288

for.inc:                                          ; preds = %if.end29
  %23 = load i16*, i16** %up, align 8, !dbg !9289
  %incdec.ptr = getelementptr inbounds i16, i16* %23, i32 1, !dbg !9289
  store i16* %incdec.ptr, i16** %up, align 8, !dbg !9289
  br label %for.cond, !dbg !9290, !llvm.loop !9291

for.end:                                          ; preds = %for.cond
  %24 = load i32, i32* %count, align 4, !dbg !9293
  %cmp31 = icmp eq i32 %24, 0, !dbg !9295
  br i1 %cmp31, label %if.then33, label %if.else34, !dbg !9296

if.then33:                                        ; preds = %for.end
  store i32 0, i32* %got, align 4, !dbg !9297
  br label %if.end48, !dbg !9298

if.else34:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %rem, metadata !9299, metadata !DIExpression()), !dbg !9301
  %25 = load i16*, i16** %up, align 8, !dbg !9302
  %26 = load i16, i16* %25, align 2, !dbg !9302
  %conv35 = zext i16 %26 to i32, !dbg !9302
  %27 = load i32, i32* %count, align 4, !dbg !9302
  %shr = lshr i32 %conv35, %27, !dbg !9302
  %28 = load i32, i32* %count, align 4, !dbg !9302
  %idxprom = sext i32 %28 to i64, !dbg !9302
  %arrayidx = getelementptr inbounds [5 x i32], [5 x i32]* @multies, i64 0, i64 %idxprom, !dbg !9302
  %29 = load i32, i32* %arrayidx, align 4, !dbg !9302
  %mul = mul i32 %shr, %29, !dbg !9302
  %shr36 = lshr i32 %mul, 17, !dbg !9302
  store i32 %shr36, i32* %theInt, align 4, !dbg !9303
  %30 = load i16*, i16** %up, align 8, !dbg !9304
  %31 = load i16, i16* %30, align 2, !dbg !9305
  %conv37 = zext i16 %31 to i32, !dbg !9305
  %32 = load i32, i32* %theInt, align 4, !dbg !9306
  %33 = load i32, i32* %count, align 4, !dbg !9307
  %idxprom38 = sext i32 %33 to i64, !dbg !9308
  %arrayidx39 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom38, !dbg !9308
  %34 = load i32, i32* %arrayidx39, align 4, !dbg !9308
  %mul40 = mul i32 %32, %34, !dbg !9309
  %sub41 = sub i32 %conv37, %mul40, !dbg !9310
  store i32 %sub41, i32* %rem, align 4, !dbg !9311
  %35 = load i32, i32* %rem, align 4, !dbg !9312
  %cmp42 = icmp ne i32 %35, 0, !dbg !9314
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !9315

if.then44:                                        ; preds = %if.else34
  store i32 -2147483648, i32* %retval, align 4, !dbg !9316
  br label %return, !dbg !9316

if.end45:                                         ; preds = %if.else34
  %36 = load i32, i32* %count, align 4, !dbg !9317
  %sub46 = sub nsw i32 3, %36, !dbg !9318
  store i32 %sub46, i32* %got, align 4, !dbg !9319
  %37 = load i16*, i16** %up, align 8, !dbg !9320
  %incdec.ptr47 = getelementptr inbounds i16, i16* %37, i32 1, !dbg !9320
  store i16* %incdec.ptr47, i16** %up, align 8, !dbg !9320
  br label %if.end48

if.end48:                                         ; preds = %if.end45, %if.then33
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then20
  %38 = load i32, i32* %got, align 4, !dbg !9321
  %cmp50 = icmp eq i32 %38, 0, !dbg !9323
  br i1 %cmp50, label %if.then52, label %if.end56, !dbg !9324

if.then52:                                        ; preds = %if.end49
  %39 = load i16*, i16** %up, align 8, !dbg !9325
  %40 = load i16, i16* %39, align 2, !dbg !9327
  %conv53 = zext i16 %40 to i32, !dbg !9327
  store i32 %conv53, i32* %theInt, align 4, !dbg !9328
  %41 = load i32, i32* %got, align 4, !dbg !9329
  %add54 = add nsw i32 %41, 3, !dbg !9329
  store i32 %add54, i32* %got, align 4, !dbg !9329
  %42 = load i16*, i16** %up, align 8, !dbg !9330
  %incdec.ptr55 = getelementptr inbounds i16, i16* %42, i32 1, !dbg !9330
  store i16* %incdec.ptr55, i16** %up, align 8, !dbg !9330
  br label %if.end56, !dbg !9331

if.end56:                                         ; preds = %if.then52, %if.end49
  %43 = load i32, i32* %ilength, align 4, !dbg !9332
  %cmp57 = icmp slt i32 %43, 11, !dbg !9334
  br i1 %cmp57, label %if.then59, label %if.end103, !dbg !9335

if.then59:                                        ; preds = %if.end56
  call void @llvm.dbg.declare(metadata i32* %save, metadata !9336, metadata !DIExpression()), !dbg !9338
  %44 = load i32, i32* %theInt, align 4, !dbg !9339
  store i32 %44, i32* %save, align 4, !dbg !9338
  br label %for.cond60, !dbg !9340

for.cond60:                                       ; preds = %for.inc70, %if.then59
  %45 = load i32, i32* %got, align 4, !dbg !9341
  %46 = load i32, i32* %ilength, align 4, !dbg !9344
  %cmp61 = icmp slt i32 %45, %46, !dbg !9345
  br i1 %cmp61, label %for.body63, label %for.end72, !dbg !9346

for.body63:                                       ; preds = %for.cond60
  %47 = load i16*, i16** %up, align 8, !dbg !9347
  %48 = load i16, i16* %47, align 2, !dbg !9349
  %conv64 = zext i16 %48 to i32, !dbg !9349
  %49 = load i32, i32* %got, align 4, !dbg !9350
  %idxprom65 = sext i32 %49 to i64, !dbg !9351
  %arrayidx66 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom65, !dbg !9351
  %50 = load i32, i32* %arrayidx66, align 4, !dbg !9351
  %mul67 = mul i32 %conv64, %50, !dbg !9352
  %51 = load i32, i32* %theInt, align 4, !dbg !9353
  %add68 = add i32 %51, %mul67, !dbg !9353
  store i32 %add68, i32* %theInt, align 4, !dbg !9353
  %52 = load i32, i32* %got, align 4, !dbg !9354
  %add69 = add nsw i32 %52, 3, !dbg !9354
  store i32 %add69, i32* %got, align 4, !dbg !9354
  br label %for.inc70, !dbg !9355

for.inc70:                                        ; preds = %for.body63
  %53 = load i16*, i16** %up, align 8, !dbg !9356
  %incdec.ptr71 = getelementptr inbounds i16, i16* %53, i32 1, !dbg !9356
  store i16* %incdec.ptr71, i16** %up, align 8, !dbg !9356
  br label %for.cond60, !dbg !9357, !llvm.loop !9358

for.end72:                                        ; preds = %for.cond60
  %54 = load i32, i32* %ilength, align 4, !dbg !9360
  %cmp73 = icmp eq i32 %54, 10, !dbg !9362
  br i1 %cmp73, label %if.then75, label %if.end102, !dbg !9363

if.then75:                                        ; preds = %for.end72
  %55 = load i32, i32* %theInt, align 4, !dbg !9364
  %56 = load i32, i32* %got, align 4, !dbg !9367
  %sub76 = sub nsw i32 %56, 3, !dbg !9368
  %idxprom77 = sext i32 %sub76 to i64, !dbg !9369
  %arrayidx78 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom77, !dbg !9369
  %57 = load i32, i32* %arrayidx78, align 4, !dbg !9369
  %div = sdiv i32 %55, %57, !dbg !9370
  %58 = load i16*, i16** %up, align 8, !dbg !9371
  %add.ptr = getelementptr inbounds i16, i16* %58, i64 -1, !dbg !9372
  %59 = load i16, i16* %add.ptr, align 2, !dbg !9373
  %conv79 = zext i16 %59 to i32, !dbg !9374
  %cmp80 = icmp ne i32 %div, %conv79, !dbg !9375
  br i1 %cmp80, label %if.then82, label %if.else83, !dbg !9376

if.then82:                                        ; preds = %if.then75
  store i32 11, i32* %ilength, align 4, !dbg !9377
  br label %if.end97, !dbg !9378

if.else83:                                        ; preds = %if.then75
  %60 = load i8, i8* %neg, align 1, !dbg !9379
  %conv84 = zext i8 %60 to i32, !dbg !9379
  %tobool = icmp ne i32 %conv84, 0, !dbg !9379
  br i1 %tobool, label %land.lhs.true85, label %if.else89, !dbg !9381

land.lhs.true85:                                  ; preds = %if.else83
  %61 = load i32, i32* %theInt, align 4, !dbg !9382
  %cmp86 = icmp sgt i32 %61, 1999999997, !dbg !9383
  br i1 %cmp86, label %if.then88, label %if.else89, !dbg !9384

if.then88:                                        ; preds = %land.lhs.true85
  store i32 11, i32* %ilength, align 4, !dbg !9385
  br label %if.end96, !dbg !9386

if.else89:                                        ; preds = %land.lhs.true85, %if.else83
  %62 = load i8, i8* %neg, align 1, !dbg !9387
  %tobool90 = icmp ne i8 %62, 0, !dbg !9387
  br i1 %tobool90, label %if.end95, label %land.lhs.true91, !dbg !9389

land.lhs.true91:                                  ; preds = %if.else89
  %63 = load i32, i32* %theInt, align 4, !dbg !9390
  %cmp92 = icmp sgt i32 %63, 999999999, !dbg !9391
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !9392

if.then94:                                        ; preds = %land.lhs.true91
  store i32 11, i32* %ilength, align 4, !dbg !9393
  br label %if.end95, !dbg !9394

if.end95:                                         ; preds = %if.then94, %land.lhs.true91, %if.else89
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then88
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.then82
  %64 = load i32, i32* %ilength, align 4, !dbg !9395
  %cmp98 = icmp eq i32 %64, 11, !dbg !9397
  br i1 %cmp98, label %if.then100, label %if.end101, !dbg !9398

if.then100:                                       ; preds = %if.end97
  %65 = load i32, i32* %save, align 4, !dbg !9399
  store i32 %65, i32* %theInt, align 4, !dbg !9400
  br label %if.end101, !dbg !9401

if.end101:                                        ; preds = %if.then100, %if.end97
  br label %if.end102, !dbg !9402

if.end102:                                        ; preds = %if.end101, %for.end72
  br label %if.end103, !dbg !9403

if.end103:                                        ; preds = %if.end102, %if.end56
  %66 = load i32, i32* %ilength, align 4, !dbg !9404
  %cmp104 = icmp sgt i32 %66, 10, !dbg !9406
  br i1 %cmp104, label %if.then106, label %if.end111, !dbg !9407

if.then106:                                       ; preds = %if.end103
  %67 = load i32, i32* %theInt, align 4, !dbg !9408
  %and107 = and i32 %67, 1, !dbg !9411
  %tobool108 = icmp ne i32 %and107, 0, !dbg !9411
  br i1 %tobool108, label %if.then109, label %if.end110, !dbg !9412

if.then109:                                       ; preds = %if.then106
  store i32 -2147483645, i32* %retval, align 4, !dbg !9413
  br label %return, !dbg !9413

if.end110:                                        ; preds = %if.then106
  store i32 -2147483646, i32* %retval, align 4, !dbg !9414
  br label %return, !dbg !9414

if.end111:                                        ; preds = %if.end103
  %68 = load i8, i8* %neg, align 1, !dbg !9415
  %tobool112 = icmp ne i8 %68, 0, !dbg !9415
  br i1 %tobool112, label %if.then113, label %if.end115, !dbg !9417

if.then113:                                       ; preds = %if.end111
  %69 = load i32, i32* %theInt, align 4, !dbg !9418
  %sub114 = sub nsw i32 0, %69, !dbg !9419
  store i32 %sub114, i32* %theInt, align 4, !dbg !9420
  br label %if.end115, !dbg !9421

if.end115:                                        ; preds = %if.then113, %if.end111
  %70 = load i32, i32* %theInt, align 4, !dbg !9422
  store i32 %70, i32* %retval, align 4, !dbg !9423
  br label %return, !dbg !9423

return:                                           ; preds = %if.end115, %if.end110, %if.then109, %if.then44, %if.then28, %if.then
  %71 = load i32, i32* %retval, align 4, !dbg !9424
  ret i32 %71, !dbg !9424
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberQuantize(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !9425 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !9426, metadata !DIExpression()), !dbg !9427
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !9428, metadata !DIExpression()), !dbg !9429
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !9430, metadata !DIExpression()), !dbg !9431
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !9432, metadata !DIExpression()), !dbg !9433
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9434, metadata !DIExpression()), !dbg !9435
  store i32 0, i32* %status, align 4, !dbg !9435
  %0 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9436
  %1 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !9437
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !9438
  %3 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9439
  %call = call %struct.decNumber* @decQuantizeOp(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext 1, i32* %status), !dbg !9440
  %4 = load i32, i32* %status, align 4, !dbg !9441
  %cmp = icmp ne i32 %4, 0, !dbg !9443
  br i1 %cmp, label %if.then, label %if.end, !dbg !9444

if.then:                                          ; preds = %entry
  %5 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9445
  %6 = load i32, i32* %status, align 4, !dbg !9446
  %7 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9447
  call void @decStatus(%struct.decNumber* %5, i32 %6, %struct.decContext* %7), !dbg !9448
  br label %if.end, !dbg !9448

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9449
  ret %struct.decNumber* %8, !dbg !9450
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.decNumber* @decQuantizeOp(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set, i8 zeroext %quant, i32* %status) #0 !dbg !9451 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %quant.addr = alloca i8, align 1
  %status.addr = alloca i32*, align 8
  %inrhs = alloca %struct.decNumber*, align 8
  %reqdigits = alloca i32, align 4
  %reqexp = alloca i32, align 4
  %residue = alloca i32, align 4
  %etiny = alloca i32, align 4
  %adjust = alloca i32, align 4
  %workset = alloca %struct.decContext, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !9452, metadata !DIExpression()), !dbg !9453
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !9454, metadata !DIExpression()), !dbg !9455
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !9456, metadata !DIExpression()), !dbg !9457
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !9458, metadata !DIExpression()), !dbg !9459
  store i8 %quant, i8* %quant.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %quant.addr, metadata !9460, metadata !DIExpression()), !dbg !9461
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !9462, metadata !DIExpression()), !dbg !9463
  call void @llvm.dbg.declare(metadata %struct.decNumber** %inrhs, metadata !9464, metadata !DIExpression()), !dbg !9465
  %0 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !9466
  store %struct.decNumber* %0, %struct.decNumber** %inrhs, align 8, !dbg !9465
  call void @llvm.dbg.declare(metadata i32* %reqdigits, metadata !9467, metadata !DIExpression()), !dbg !9468
  %1 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9469
  %digits = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i32 0, i32 0, !dbg !9470
  %2 = load i32, i32* %digits, align 4, !dbg !9470
  store i32 %2, i32* %reqdigits, align 4, !dbg !9468
  call void @llvm.dbg.declare(metadata i32* %reqexp, metadata !9471, metadata !DIExpression()), !dbg !9472
  call void @llvm.dbg.declare(metadata i32* %residue, metadata !9473, metadata !DIExpression()), !dbg !9474
  store i32 0, i32* %residue, align 4, !dbg !9474
  call void @llvm.dbg.declare(metadata i32* %etiny, metadata !9475, metadata !DIExpression()), !dbg !9476
  %3 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9477
  %emin = getelementptr inbounds %struct.decContext, %struct.decContext* %3, i32 0, i32 2, !dbg !9478
  %4 = load i32, i32* %emin, align 4, !dbg !9478
  %5 = load i32, i32* %reqdigits, align 4, !dbg !9479
  %sub = sub nsw i32 %5, 1, !dbg !9480
  %sub1 = sub nsw i32 %4, %sub, !dbg !9481
  store i32 %sub1, i32* %etiny, align 4, !dbg !9476
  br label %do.body, !dbg !9482

do.body:                                          ; preds = %entry
  %6 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !9483
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %6, i32 0, i32 2, !dbg !9483
  %7 = load i8, i8* %bits, align 4, !dbg !9483
  %conv = zext i8 %7 to i32, !dbg !9483
  %8 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !9483
  %bits2 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i32 0, i32 2, !dbg !9483
  %9 = load i8, i8* %bits2, align 4, !dbg !9483
  %conv3 = zext i8 %9 to i32, !dbg !9483
  %or = or i32 %conv, %conv3, !dbg !9483
  %and = and i32 %or, 112, !dbg !9483
  %tobool = icmp ne i32 %and, 0, !dbg !9483
  br i1 %tobool, label %if.then, label %if.end24, !dbg !9486

if.then:                                          ; preds = %do.body
  %10 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !9487
  %bits4 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %10, i32 0, i32 2, !dbg !9487
  %11 = load i8, i8* %bits4, align 4, !dbg !9487
  %conv5 = zext i8 %11 to i32, !dbg !9487
  %12 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !9487
  %bits6 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %12, i32 0, i32 2, !dbg !9487
  %13 = load i8, i8* %bits6, align 4, !dbg !9487
  %conv7 = zext i8 %13 to i32, !dbg !9487
  %or8 = or i32 %conv5, %conv7, !dbg !9487
  %and9 = and i32 %or8, 112, !dbg !9487
  %and10 = and i32 %and9, 48, !dbg !9490
  %tobool11 = icmp ne i32 %and10, 0, !dbg !9490
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !9491

if.then12:                                        ; preds = %if.then
  %14 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9492
  %15 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !9493
  %16 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !9494
  %17 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9495
  %18 = load i32*, i32** %status.addr, align 8, !dbg !9496
  %call = call %struct.decNumber* @decNaNs(%struct.decNumber* %14, %struct.decNumber* %15, %struct.decNumber* %16, %struct.decContext* %17, i32* %18), !dbg !9497
  br label %if.end23, !dbg !9497

if.else:                                          ; preds = %if.then
  %19 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !9498
  %bits13 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %19, i32 0, i32 2, !dbg !9500
  %20 = load i8, i8* %bits13, align 4, !dbg !9500
  %conv14 = zext i8 %20 to i32, !dbg !9498
  %21 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !9501
  %bits15 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %21, i32 0, i32 2, !dbg !9502
  %22 = load i8, i8* %bits15, align 4, !dbg !9502
  %conv16 = zext i8 %22 to i32, !dbg !9501
  %xor = xor i32 %conv14, %conv16, !dbg !9503
  %and17 = and i32 %xor, 64, !dbg !9504
  %tobool18 = icmp ne i32 %and17, 0, !dbg !9504
  br i1 %tobool18, label %if.then19, label %if.else21, !dbg !9505

if.then19:                                        ; preds = %if.else
  %23 = load i32*, i32** %status.addr, align 8, !dbg !9506
  %24 = load i32, i32* %23, align 4, !dbg !9507
  %or20 = or i32 %24, 128, !dbg !9507
  store i32 %or20, i32* %23, align 4, !dbg !9507
  br label %if.end, !dbg !9508

if.else21:                                        ; preds = %if.else
  %25 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9509
  %26 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !9510
  %call22 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %25, %struct.decNumber* %26), !dbg !9511
  br label %if.end

if.end:                                           ; preds = %if.else21, %if.then19
  br label %if.end23

if.end23:                                         ; preds = %if.end, %if.then12
  br label %do.end, !dbg !9512

if.end24:                                         ; preds = %do.body
  %27 = load i8, i8* %quant.addr, align 1, !dbg !9513
  %tobool25 = icmp ne i8 %27, 0, !dbg !9513
  br i1 %tobool25, label %if.then26, label %if.else27, !dbg !9515

if.then26:                                        ; preds = %if.end24
  %28 = load %struct.decNumber*, %struct.decNumber** %inrhs, align 8, !dbg !9516
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %28, i32 0, i32 1, !dbg !9517
  %29 = load i32, i32* %exponent, align 4, !dbg !9517
  store i32 %29, i32* %reqexp, align 4, !dbg !9518
  br label %if.end29, !dbg !9519

if.else27:                                        ; preds = %if.end24
  %30 = load %struct.decNumber*, %struct.decNumber** %inrhs, align 8, !dbg !9520
  %call28 = call i32 @decGetInt(%struct.decNumber* %30), !dbg !9522
  store i32 %call28, i32* %reqexp, align 4, !dbg !9523
  br label %if.end29

if.end29:                                         ; preds = %if.else27, %if.then26
  %31 = load i32, i32* %reqexp, align 4, !dbg !9524
  %cmp = icmp eq i32 %31, -2147483648, !dbg !9526
  br i1 %cmp, label %if.then42, label %lor.lhs.false, !dbg !9527

lor.lhs.false:                                    ; preds = %if.end29
  %32 = load i32, i32* %reqexp, align 4, !dbg !9528
  %cmp31 = icmp eq i32 %32, -2147483645, !dbg !9529
  br i1 %cmp31, label %if.then42, label %lor.lhs.false33, !dbg !9530

lor.lhs.false33:                                  ; preds = %lor.lhs.false
  %33 = load i32, i32* %reqexp, align 4, !dbg !9531
  %cmp34 = icmp eq i32 %33, -2147483646, !dbg !9532
  br i1 %cmp34, label %if.then42, label %lor.lhs.false36, !dbg !9533

lor.lhs.false36:                                  ; preds = %lor.lhs.false33
  %34 = load i32, i32* %reqexp, align 4, !dbg !9534
  %35 = load i32, i32* %etiny, align 4, !dbg !9535
  %cmp37 = icmp slt i32 %34, %35, !dbg !9536
  br i1 %cmp37, label %if.then42, label %lor.lhs.false39, !dbg !9537

lor.lhs.false39:                                  ; preds = %lor.lhs.false36
  %36 = load i32, i32* %reqexp, align 4, !dbg !9538
  %37 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9539
  %emax = getelementptr inbounds %struct.decContext, %struct.decContext* %37, i32 0, i32 1, !dbg !9540
  %38 = load i32, i32* %emax, align 4, !dbg !9540
  %cmp40 = icmp sgt i32 %36, %38, !dbg !9541
  br i1 %cmp40, label %if.then42, label %if.end44, !dbg !9542

if.then42:                                        ; preds = %lor.lhs.false39, %lor.lhs.false36, %lor.lhs.false33, %lor.lhs.false, %if.end29
  %39 = load i32*, i32** %status.addr, align 8, !dbg !9543
  %40 = load i32, i32* %39, align 4, !dbg !9545
  %or43 = or i32 %40, 128, !dbg !9545
  store i32 %or43, i32* %39, align 4, !dbg !9545
  br label %do.end, !dbg !9546

if.end44:                                         ; preds = %lor.lhs.false39
  %41 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !9547
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %41, i32 0, i32 3, !dbg !9547
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !9547
  %42 = load i16, i16* %arraydecay, align 2, !dbg !9547
  %conv45 = zext i16 %42 to i32, !dbg !9547
  %cmp46 = icmp eq i32 %conv45, 0, !dbg !9547
  br i1 %cmp46, label %land.lhs.true, label %if.else60, !dbg !9547

land.lhs.true:                                    ; preds = %if.end44
  %43 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !9547
  %digits48 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %43, i32 0, i32 0, !dbg !9547
  %44 = load i32, i32* %digits48, align 4, !dbg !9547
  %cmp49 = icmp eq i32 %44, 1, !dbg !9547
  br i1 %cmp49, label %land.lhs.true51, label %if.else60, !dbg !9547

land.lhs.true51:                                  ; preds = %land.lhs.true
  %45 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !9547
  %bits52 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %45, i32 0, i32 2, !dbg !9547
  %46 = load i8, i8* %bits52, align 4, !dbg !9547
  %conv53 = zext i8 %46 to i32, !dbg !9547
  %and54 = and i32 %conv53, 112, !dbg !9547
  %cmp55 = icmp eq i32 %and54, 0, !dbg !9547
  br i1 %cmp55, label %if.then57, label %if.else60, !dbg !9549

if.then57:                                        ; preds = %land.lhs.true51
  %47 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9550
  %48 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !9552
  %call58 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %47, %struct.decNumber* %48), !dbg !9553
  %49 = load i32, i32* %reqexp, align 4, !dbg !9554
  %50 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9555
  %exponent59 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %50, i32 0, i32 1, !dbg !9556
  store i32 %49, i32* %exponent59, align 4, !dbg !9557
  br label %if.end108, !dbg !9558

if.else60:                                        ; preds = %land.lhs.true51, %land.lhs.true, %if.end44
  call void @llvm.dbg.declare(metadata i32* %adjust, metadata !9559, metadata !DIExpression()), !dbg !9561
  %51 = load i32, i32* %reqexp, align 4, !dbg !9562
  %52 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !9563
  %exponent61 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %52, i32 0, i32 1, !dbg !9564
  %53 = load i32, i32* %exponent61, align 4, !dbg !9564
  %sub62 = sub nsw i32 %51, %53, !dbg !9565
  store i32 %sub62, i32* %adjust, align 4, !dbg !9561
  %54 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !9566
  %digits63 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %54, i32 0, i32 0, !dbg !9568
  %55 = load i32, i32* %digits63, align 4, !dbg !9568
  %56 = load i32, i32* %adjust, align 4, !dbg !9569
  %sub64 = sub nsw i32 %55, %56, !dbg !9570
  %57 = load i32, i32* %reqdigits, align 4, !dbg !9571
  %cmp65 = icmp sgt i32 %sub64, %57, !dbg !9572
  br i1 %cmp65, label %if.then67, label %if.end69, !dbg !9573

if.then67:                                        ; preds = %if.else60
  %58 = load i32*, i32** %status.addr, align 8, !dbg !9574
  %59 = load i32, i32* %58, align 4, !dbg !9576
  %or68 = or i32 %59, 128, !dbg !9576
  store i32 %or68, i32* %58, align 4, !dbg !9576
  br label %do.end, !dbg !9577

if.end69:                                         ; preds = %if.else60
  %60 = load i32, i32* %adjust, align 4, !dbg !9578
  %cmp70 = icmp sgt i32 %60, 0, !dbg !9580
  br i1 %cmp70, label %if.then72, label %if.else94, !dbg !9581

if.then72:                                        ; preds = %if.end69
  call void @llvm.dbg.declare(metadata %struct.decContext* %workset, metadata !9582, metadata !DIExpression()), !dbg !9584
  %61 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9585
  %62 = bitcast %struct.decContext* %workset to i8*, !dbg !9586
  %63 = bitcast %struct.decContext* %61 to i8*, !dbg !9586
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %62, i8* align 4 %63, i64 28, i1 false), !dbg !9586
  %64 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !9587
  %digits73 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %64, i32 0, i32 0, !dbg !9588
  %65 = load i32, i32* %digits73, align 4, !dbg !9588
  %66 = load i32, i32* %adjust, align 4, !dbg !9589
  %sub74 = sub nsw i32 %65, %66, !dbg !9590
  %digits75 = getelementptr inbounds %struct.decContext, %struct.decContext* %workset, i32 0, i32 0, !dbg !9591
  store i32 %sub74, i32* %digits75, align 4, !dbg !9592
  %67 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9593
  %68 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !9594
  %69 = load i32*, i32** %status.addr, align 8, !dbg !9595
  call void @decCopyFit(%struct.decNumber* %67, %struct.decNumber* %68, %struct.decContext* %workset, i32* %residue, i32* %69), !dbg !9596
  %70 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9597
  %71 = load i32, i32* %residue, align 4, !dbg !9598
  %72 = load i32*, i32** %status.addr, align 8, !dbg !9599
  call void @decApplyRound(%struct.decNumber* %70, %struct.decContext* %workset, i32 %71, i32* %72), !dbg !9600
  store i32 0, i32* %residue, align 4, !dbg !9601
  %73 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9602
  %exponent76 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %73, i32 0, i32 1, !dbg !9604
  %74 = load i32, i32* %exponent76, align 4, !dbg !9604
  %75 = load i32, i32* %reqexp, align 4, !dbg !9605
  %cmp77 = icmp sgt i32 %74, %75, !dbg !9606
  br i1 %cmp77, label %if.then79, label %if.end93, !dbg !9607

if.then79:                                        ; preds = %if.then72
  %76 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9608
  %digits80 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %76, i32 0, i32 0, !dbg !9611
  %77 = load i32, i32* %digits80, align 4, !dbg !9611
  %78 = load i32, i32* %reqdigits, align 4, !dbg !9612
  %cmp81 = icmp eq i32 %77, %78, !dbg !9613
  br i1 %cmp81, label %if.then83, label %if.end86, !dbg !9614

if.then83:                                        ; preds = %if.then79
  %79 = load i32*, i32** %status.addr, align 8, !dbg !9615
  %80 = load i32, i32* %79, align 4, !dbg !9617
  %and84 = and i32 %80, -2081, !dbg !9617
  store i32 %and84, i32* %79, align 4, !dbg !9617
  %81 = load i32*, i32** %status.addr, align 8, !dbg !9618
  %82 = load i32, i32* %81, align 4, !dbg !9619
  %or85 = or i32 %82, 128, !dbg !9619
  store i32 %or85, i32* %81, align 4, !dbg !9619
  br label %do.end, !dbg !9620

if.end86:                                         ; preds = %if.then79
  %83 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9621
  %lsu87 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %83, i32 0, i32 3, !dbg !9622
  %arraydecay88 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu87, i64 0, i64 0, !dbg !9621
  %84 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9623
  %digits89 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %84, i32 0, i32 0, !dbg !9624
  %85 = load i32, i32* %digits89, align 4, !dbg !9624
  %call90 = call i32 @decShiftToMost(i16* %arraydecay88, i32 %85, i32 1), !dbg !9625
  %86 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9626
  %digits91 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %86, i32 0, i32 0, !dbg !9627
  store i32 %call90, i32* %digits91, align 4, !dbg !9628
  %87 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9629
  %exponent92 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %87, i32 0, i32 1, !dbg !9630
  %88 = load i32, i32* %exponent92, align 4, !dbg !9631
  %dec = add nsw i32 %88, -1, !dbg !9631
  store i32 %dec, i32* %exponent92, align 4, !dbg !9631
  br label %if.end93, !dbg !9632

if.end93:                                         ; preds = %if.end86, %if.then72
  br label %if.end107, !dbg !9633

if.else94:                                        ; preds = %if.end69
  %89 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9634
  %90 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !9636
  %call95 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %89, %struct.decNumber* %90), !dbg !9637
  %91 = load i32, i32* %adjust, align 4, !dbg !9638
  %cmp96 = icmp slt i32 %91, 0, !dbg !9640
  br i1 %cmp96, label %if.then98, label %if.end106, !dbg !9641

if.then98:                                        ; preds = %if.else94
  %92 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9642
  %lsu99 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %92, i32 0, i32 3, !dbg !9644
  %arraydecay100 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu99, i64 0, i64 0, !dbg !9642
  %93 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9645
  %digits101 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %93, i32 0, i32 0, !dbg !9646
  %94 = load i32, i32* %digits101, align 4, !dbg !9646
  %95 = load i32, i32* %adjust, align 4, !dbg !9647
  %sub102 = sub nsw i32 0, %95, !dbg !9648
  %call103 = call i32 @decShiftToMost(i16* %arraydecay100, i32 %94, i32 %sub102), !dbg !9649
  %96 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9650
  %digits104 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %96, i32 0, i32 0, !dbg !9651
  store i32 %call103, i32* %digits104, align 4, !dbg !9652
  %97 = load i32, i32* %adjust, align 4, !dbg !9653
  %98 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9654
  %exponent105 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %98, i32 0, i32 1, !dbg !9655
  %99 = load i32, i32* %exponent105, align 4, !dbg !9656
  %add = add nsw i32 %99, %97, !dbg !9656
  store i32 %add, i32* %exponent105, align 4, !dbg !9656
  br label %if.end106, !dbg !9657

if.end106:                                        ; preds = %if.then98, %if.else94
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %if.end93
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.then57
  %100 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9658
  %exponent109 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %100, i32 0, i32 1, !dbg !9660
  %101 = load i32, i32* %exponent109, align 4, !dbg !9660
  %102 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9661
  %emax110 = getelementptr inbounds %struct.decContext, %struct.decContext* %102, i32 0, i32 1, !dbg !9662
  %103 = load i32, i32* %emax110, align 4, !dbg !9662
  %104 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9663
  %digits111 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %104, i32 0, i32 0, !dbg !9664
  %105 = load i32, i32* %digits111, align 4, !dbg !9664
  %sub112 = sub nsw i32 %103, %105, !dbg !9665
  %add113 = add nsw i32 %sub112, 1, !dbg !9666
  %cmp114 = icmp sgt i32 %101, %add113, !dbg !9667
  br i1 %cmp114, label %if.then116, label %if.else118, !dbg !9668

if.then116:                                       ; preds = %if.end108
  %106 = load i32*, i32** %status.addr, align 8, !dbg !9669
  %107 = load i32, i32* %106, align 4, !dbg !9671
  %or117 = or i32 %107, 128, !dbg !9671
  store i32 %or117, i32* %106, align 4, !dbg !9671
  br label %do.end, !dbg !9672

if.else118:                                       ; preds = %if.end108
  %108 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9673
  %109 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9675
  %110 = load i32*, i32** %status.addr, align 8, !dbg !9676
  call void @decFinalize(%struct.decNumber* %108, %struct.decContext* %109, i32* %residue, i32* %110), !dbg !9677
  %111 = load i32*, i32** %status.addr, align 8, !dbg !9678
  %112 = load i32, i32* %111, align 4, !dbg !9679
  %and119 = and i32 %112, -8193, !dbg !9679
  store i32 %and119, i32* %111, align 4, !dbg !9679
  br label %if.end120

if.end120:                                        ; preds = %if.else118
  br label %do.end, !dbg !9680

do.end:                                           ; preds = %if.end120, %if.then116, %if.then83, %if.then67, %if.then42, %if.end23
  %113 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9681
  ret %struct.decNumber* %113, !dbg !9682
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberNormalize(%struct.decNumber* %res, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !9683 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !9684, metadata !DIExpression()), !dbg !9685
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !9686, metadata !DIExpression()), !dbg !9687
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !9688, metadata !DIExpression()), !dbg !9689
  %0 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9690
  %1 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !9691
  %2 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9692
  %call = call %struct.decNumber* @decNumberReduce(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decContext* %2), !dbg !9693
  ret %struct.decNumber* %call, !dbg !9694
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberReduce(%struct.decNumber* %res, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !9695 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status = alloca i32, align 4
  %residue = alloca i32, align 4
  %dropped = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !9696, metadata !DIExpression()), !dbg !9697
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !9698, metadata !DIExpression()), !dbg !9699
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !9700, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9702, metadata !DIExpression()), !dbg !9703
  store i32 0, i32* %status, align 4, !dbg !9703
  call void @llvm.dbg.declare(metadata i32* %residue, metadata !9704, metadata !DIExpression()), !dbg !9705
  store i32 0, i32* %residue, align 4, !dbg !9705
  call void @llvm.dbg.declare(metadata i32* %dropped, metadata !9706, metadata !DIExpression()), !dbg !9707
  br label %do.body, !dbg !9708

do.body:                                          ; preds = %entry
  %0 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !9709
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 2, !dbg !9709
  %1 = load i8, i8* %bits, align 4, !dbg !9709
  %conv = zext i8 %1 to i32, !dbg !9709
  %and = and i32 %conv, 48, !dbg !9709
  %cmp = icmp ne i32 %and, 0, !dbg !9709
  br i1 %cmp, label %if.then, label %if.end, !dbg !9712

if.then:                                          ; preds = %do.body
  %2 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9713
  %3 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !9715
  %4 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9716
  %call = call %struct.decNumber* @decNaNs(%struct.decNumber* %2, %struct.decNumber* %3, %struct.decNumber* null, %struct.decContext* %4, i32* %status), !dbg !9717
  br label %do.end, !dbg !9718

if.end:                                           ; preds = %do.body
  %5 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9719
  %6 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !9720
  %7 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9721
  call void @decCopyFit(%struct.decNumber* %5, %struct.decNumber* %6, %struct.decContext* %7, i32* %residue, i32* %status), !dbg !9722
  %8 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9723
  %9 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9723
  call void @decFinalize(%struct.decNumber* %8, %struct.decContext* %9, i32* %residue, i32* %status), !dbg !9723
  %10 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9724
  %11 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9725
  %call2 = call %struct.decNumber* @decTrim(%struct.decNumber* %10, %struct.decContext* %11, i8 zeroext 1, i8 zeroext 0, i32* %dropped), !dbg !9726
  br label %do.end, !dbg !9727

do.end:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %status, align 4, !dbg !9728
  %cmp3 = icmp ne i32 %12, 0, !dbg !9730
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !9731

if.then5:                                         ; preds = %do.end
  %13 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9732
  %14 = load i32, i32* %status, align 4, !dbg !9733
  %15 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9734
  call void @decStatus(%struct.decNumber* %13, i32 %14, %struct.decContext* %15), !dbg !9735
  br label %if.end6, !dbg !9735

if.end6:                                          ; preds = %if.then5, %do.end
  %16 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9736
  ret %struct.decNumber* %16, !dbg !9737
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.decNumber* @decTrim(%struct.decNumber* %dn, %struct.decContext* %set, i8 zeroext %all, i8 zeroext %noclamp, i32* %dropped) #0 !dbg !9738 {
entry:
  %retval = alloca %struct.decNumber*, align 8
  %dn.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %all.addr = alloca i8, align 1
  %noclamp.addr = alloca i8, align 1
  %dropped.addr = alloca i32*, align 8
  %d = alloca i32, align 4
  %exp = alloca i32, align 4
  %cut = alloca i32, align 4
  %up = alloca i16*, align 8
  %quot = alloca i32, align 4
  %maxd = alloca i32, align 4
  store %struct.decNumber* %dn, %struct.decNumber** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dn.addr, metadata !9741, metadata !DIExpression()), !dbg !9742
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !9743, metadata !DIExpression()), !dbg !9744
  store i8 %all, i8* %all.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %all.addr, metadata !9745, metadata !DIExpression()), !dbg !9746
  store i8 %noclamp, i8* %noclamp.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %noclamp.addr, metadata !9747, metadata !DIExpression()), !dbg !9748
  store i32* %dropped, i32** %dropped.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %dropped.addr, metadata !9749, metadata !DIExpression()), !dbg !9750
  call void @llvm.dbg.declare(metadata i32* %d, metadata !9751, metadata !DIExpression()), !dbg !9752
  call void @llvm.dbg.declare(metadata i32* %exp, metadata !9753, metadata !DIExpression()), !dbg !9754
  call void @llvm.dbg.declare(metadata i32* %cut, metadata !9755, metadata !DIExpression()), !dbg !9756
  call void @llvm.dbg.declare(metadata i16** %up, metadata !9757, metadata !DIExpression()), !dbg !9758
  %0 = load i32*, i32** %dropped.addr, align 8, !dbg !9759
  store i32 0, i32* %0, align 4, !dbg !9760
  %1 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9761
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i32 0, i32 2, !dbg !9763
  %2 = load i8, i8* %bits, align 4, !dbg !9763
  %conv = zext i8 %2 to i32, !dbg !9761
  %and = and i32 %conv, 112, !dbg !9764
  %tobool = icmp ne i32 %and, 0, !dbg !9764
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !9765

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9766
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %3, i32 0, i32 3, !dbg !9767
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !9768
  %4 = load i16, i16* %arraydecay, align 2, !dbg !9768
  %conv1 = zext i16 %4 to i32, !dbg !9768
  %and2 = and i32 %conv1, 1, !dbg !9769
  %tobool3 = icmp ne i32 %and2, 0, !dbg !9769
  br i1 %tobool3, label %if.then, label %if.end, !dbg !9770

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9771
  store %struct.decNumber* %5, %struct.decNumber** %retval, align 8, !dbg !9772
  br label %return, !dbg !9772

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9773
  %lsu4 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %6, i32 0, i32 3, !dbg !9773
  %arraydecay5 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu4, i64 0, i64 0, !dbg !9773
  %7 = load i16, i16* %arraydecay5, align 2, !dbg !9773
  %conv6 = zext i16 %7 to i32, !dbg !9773
  %cmp = icmp eq i32 %conv6, 0, !dbg !9773
  br i1 %cmp, label %land.lhs.true, label %if.end17, !dbg !9773

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9773
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i32 0, i32 0, !dbg !9773
  %9 = load i32, i32* %digits, align 4, !dbg !9773
  %cmp8 = icmp eq i32 %9, 1, !dbg !9773
  br i1 %cmp8, label %land.lhs.true10, label %if.end17, !dbg !9773

land.lhs.true10:                                  ; preds = %land.lhs.true
  %10 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9773
  %bits11 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %10, i32 0, i32 2, !dbg !9773
  %11 = load i8, i8* %bits11, align 4, !dbg !9773
  %conv12 = zext i8 %11 to i32, !dbg !9773
  %and13 = and i32 %conv12, 112, !dbg !9773
  %cmp14 = icmp eq i32 %and13, 0, !dbg !9773
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !9775

if.then16:                                        ; preds = %land.lhs.true10
  %12 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9776
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %12, i32 0, i32 1, !dbg !9778
  store i32 0, i32* %exponent, align 4, !dbg !9779
  %13 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9780
  store %struct.decNumber* %13, %struct.decNumber** %retval, align 8, !dbg !9781
  br label %return, !dbg !9781

if.end17:                                         ; preds = %land.lhs.true10, %land.lhs.true, %if.end
  %14 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9782
  %exponent18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %14, i32 0, i32 1, !dbg !9783
  %15 = load i32, i32* %exponent18, align 4, !dbg !9783
  store i32 %15, i32* %exp, align 4, !dbg !9784
  store i32 1, i32* %cut, align 4, !dbg !9785
  %16 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9786
  %lsu19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %16, i32 0, i32 3, !dbg !9787
  %arraydecay20 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu19, i64 0, i64 0, !dbg !9786
  store i16* %arraydecay20, i16** %up, align 8, !dbg !9788
  store i32 0, i32* %d, align 4, !dbg !9789
  br label %for.cond, !dbg !9791

for.cond:                                         ; preds = %for.inc, %if.end17
  %17 = load i32, i32* %d, align 4, !dbg !9792
  %18 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9794
  %digits21 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %18, i32 0, i32 0, !dbg !9795
  %19 = load i32, i32* %digits21, align 4, !dbg !9795
  %sub = sub nsw i32 %19, 1, !dbg !9796
  %cmp22 = icmp slt i32 %17, %sub, !dbg !9797
  br i1 %cmp22, label %for.body, label %for.end, !dbg !9798

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %quot, metadata !9799, metadata !DIExpression()), !dbg !9801
  %20 = load i16*, i16** %up, align 8, !dbg !9802
  %21 = load i16, i16* %20, align 2, !dbg !9802
  %conv24 = zext i16 %21 to i32, !dbg !9802
  %22 = load i32, i32* %cut, align 4, !dbg !9802
  %shr = lshr i32 %conv24, %22, !dbg !9802
  %23 = load i32, i32* %cut, align 4, !dbg !9802
  %idxprom = zext i32 %23 to i64, !dbg !9802
  %arrayidx = getelementptr inbounds [5 x i32], [5 x i32]* @multies, i64 0, i64 %idxprom, !dbg !9802
  %24 = load i32, i32* %arrayidx, align 4, !dbg !9802
  %mul = mul i32 %shr, %24, !dbg !9802
  %shr25 = lshr i32 %mul, 17, !dbg !9802
  store i32 %shr25, i32* %quot, align 4, !dbg !9801
  %25 = load i16*, i16** %up, align 8, !dbg !9803
  %26 = load i16, i16* %25, align 2, !dbg !9805
  %conv26 = zext i16 %26 to i32, !dbg !9805
  %27 = load i32, i32* %quot, align 4, !dbg !9806
  %28 = load i32, i32* %cut, align 4, !dbg !9807
  %idxprom27 = zext i32 %28 to i64, !dbg !9808
  %arrayidx28 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom27, !dbg !9808
  %29 = load i32, i32* %arrayidx28, align 4, !dbg !9808
  %mul29 = mul i32 %27, %29, !dbg !9809
  %sub30 = sub i32 %conv26, %mul29, !dbg !9810
  %cmp31 = icmp ne i32 %sub30, 0, !dbg !9811
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !9812

if.then33:                                        ; preds = %for.body
  br label %for.end, !dbg !9813

if.end34:                                         ; preds = %for.body
  %30 = load i8, i8* %all.addr, align 1, !dbg !9814
  %tobool35 = icmp ne i8 %30, 0, !dbg !9814
  br i1 %tobool35, label %if.end45, label %if.then36, !dbg !9816

if.then36:                                        ; preds = %if.end34
  %31 = load i32, i32* %exp, align 4, !dbg !9817
  %cmp37 = icmp sle i32 %31, 0, !dbg !9820
  br i1 %cmp37, label %if.then39, label %if.end44, !dbg !9821

if.then39:                                        ; preds = %if.then36
  %32 = load i32, i32* %exp, align 4, !dbg !9822
  %cmp40 = icmp eq i32 %32, 0, !dbg !9825
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !9826

if.then42:                                        ; preds = %if.then39
  br label %for.end, !dbg !9827

if.end43:                                         ; preds = %if.then39
  %33 = load i32, i32* %exp, align 4, !dbg !9828
  %inc = add nsw i32 %33, 1, !dbg !9828
  store i32 %inc, i32* %exp, align 4, !dbg !9828
  br label %if.end44, !dbg !9829

if.end44:                                         ; preds = %if.end43, %if.then36
  br label %if.end45, !dbg !9830

if.end45:                                         ; preds = %if.end44, %if.end34
  %34 = load i32, i32* %cut, align 4, !dbg !9831
  %inc46 = add i32 %34, 1, !dbg !9831
  store i32 %inc46, i32* %cut, align 4, !dbg !9831
  %35 = load i32, i32* %cut, align 4, !dbg !9832
  %cmp47 = icmp ugt i32 %35, 3, !dbg !9834
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !9835

if.then49:                                        ; preds = %if.end45
  %36 = load i16*, i16** %up, align 8, !dbg !9836
  %incdec.ptr = getelementptr inbounds i16, i16* %36, i32 1, !dbg !9836
  store i16* %incdec.ptr, i16** %up, align 8, !dbg !9836
  store i32 1, i32* %cut, align 4, !dbg !9838
  br label %if.end50, !dbg !9839

if.end50:                                         ; preds = %if.then49, %if.end45
  br label %for.inc, !dbg !9840

for.inc:                                          ; preds = %if.end50
  %37 = load i32, i32* %d, align 4, !dbg !9841
  %inc51 = add nsw i32 %37, 1, !dbg !9841
  store i32 %inc51, i32* %d, align 4, !dbg !9841
  br label %for.cond, !dbg !9842, !llvm.loop !9843

for.end:                                          ; preds = %if.then42, %if.then33, %for.cond
  %38 = load i32, i32* %d, align 4, !dbg !9845
  %cmp52 = icmp eq i32 %38, 0, !dbg !9847
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !9848

if.then54:                                        ; preds = %for.end
  %39 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9849
  store %struct.decNumber* %39, %struct.decNumber** %retval, align 8, !dbg !9850
  br label %return, !dbg !9850

if.end55:                                         ; preds = %for.end
  %40 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9851
  %clamp = getelementptr inbounds %struct.decContext, %struct.decContext* %40, i32 0, i32 6, !dbg !9853
  %41 = load i8, i8* %clamp, align 4, !dbg !9853
  %conv56 = zext i8 %41 to i32, !dbg !9851
  %tobool57 = icmp ne i32 %conv56, 0, !dbg !9851
  br i1 %tobool57, label %land.lhs.true58, label %if.end73, !dbg !9854

land.lhs.true58:                                  ; preds = %if.end55
  %42 = load i8, i8* %noclamp.addr, align 1, !dbg !9855
  %tobool59 = icmp ne i8 %42, 0, !dbg !9855
  br i1 %tobool59, label %if.end73, label %if.then60, !dbg !9856

if.then60:                                        ; preds = %land.lhs.true58
  call void @llvm.dbg.declare(metadata i32* %maxd, metadata !9857, metadata !DIExpression()), !dbg !9859
  %43 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9860
  %emax = getelementptr inbounds %struct.decContext, %struct.decContext* %43, i32 0, i32 1, !dbg !9861
  %44 = load i32, i32* %emax, align 4, !dbg !9861
  %45 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9862
  %digits61 = getelementptr inbounds %struct.decContext, %struct.decContext* %45, i32 0, i32 0, !dbg !9863
  %46 = load i32, i32* %digits61, align 4, !dbg !9863
  %sub62 = sub nsw i32 %44, %46, !dbg !9864
  %add = add nsw i32 %sub62, 1, !dbg !9865
  %47 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9866
  %exponent63 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %47, i32 0, i32 1, !dbg !9867
  %48 = load i32, i32* %exponent63, align 4, !dbg !9867
  %sub64 = sub nsw i32 %add, %48, !dbg !9868
  store i32 %sub64, i32* %maxd, align 4, !dbg !9859
  %49 = load i32, i32* %maxd, align 4, !dbg !9869
  %cmp65 = icmp sle i32 %49, 0, !dbg !9871
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !9872

if.then67:                                        ; preds = %if.then60
  %50 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9873
  store %struct.decNumber* %50, %struct.decNumber** %retval, align 8, !dbg !9874
  br label %return, !dbg !9874

if.end68:                                         ; preds = %if.then60
  %51 = load i32, i32* %d, align 4, !dbg !9875
  %52 = load i32, i32* %maxd, align 4, !dbg !9877
  %cmp69 = icmp sgt i32 %51, %52, !dbg !9878
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !9879

if.then71:                                        ; preds = %if.end68
  %53 = load i32, i32* %maxd, align 4, !dbg !9880
  store i32 %53, i32* %d, align 4, !dbg !9881
  br label %if.end72, !dbg !9882

if.end72:                                         ; preds = %if.then71, %if.end68
  br label %if.end73, !dbg !9883

if.end73:                                         ; preds = %if.end72, %land.lhs.true58, %if.end55
  %54 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9884
  %lsu74 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %54, i32 0, i32 3, !dbg !9885
  %arraydecay75 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu74, i64 0, i64 0, !dbg !9884
  %55 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9886
  %digits76 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %55, i32 0, i32 0, !dbg !9886
  %56 = load i32, i32* %digits76, align 4, !dbg !9886
  %cmp77 = icmp sle i32 %56, 49, !dbg !9886
  br i1 %cmp77, label %cond.true, label %cond.false, !dbg !9886

cond.true:                                        ; preds = %if.end73
  %57 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9886
  %digits79 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %57, i32 0, i32 0, !dbg !9886
  %58 = load i32, i32* %digits79, align 4, !dbg !9886
  %idxprom80 = sext i32 %58 to i64, !dbg !9886
  %arrayidx81 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom80, !dbg !9886
  %59 = load i8, i8* %arrayidx81, align 1, !dbg !9886
  %conv82 = zext i8 %59 to i32, !dbg !9886
  br label %cond.end, !dbg !9886

cond.false:                                       ; preds = %if.end73
  %60 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9886
  %digits83 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %60, i32 0, i32 0, !dbg !9886
  %61 = load i32, i32* %digits83, align 4, !dbg !9886
  %add84 = add nsw i32 %61, 3, !dbg !9886
  %sub85 = sub nsw i32 %add84, 1, !dbg !9886
  %div = sdiv i32 %sub85, 3, !dbg !9886
  br label %cond.end, !dbg !9886

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv82, %cond.true ], [ %div, %cond.false ], !dbg !9886
  %62 = load i32, i32* %d, align 4, !dbg !9887
  %call = call i32 @decShiftToLeast(i16* %arraydecay75, i32 %cond, i32 %62), !dbg !9888
  %63 = load i32, i32* %d, align 4, !dbg !9889
  %64 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9890
  %exponent86 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %64, i32 0, i32 1, !dbg !9891
  %65 = load i32, i32* %exponent86, align 4, !dbg !9892
  %add87 = add nsw i32 %65, %63, !dbg !9892
  store i32 %add87, i32* %exponent86, align 4, !dbg !9892
  %66 = load i32, i32* %d, align 4, !dbg !9893
  %67 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9894
  %digits88 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %67, i32 0, i32 0, !dbg !9895
  %68 = load i32, i32* %digits88, align 4, !dbg !9896
  %sub89 = sub nsw i32 %68, %66, !dbg !9896
  store i32 %sub89, i32* %digits88, align 4, !dbg !9896
  %69 = load i32, i32* %d, align 4, !dbg !9897
  %70 = load i32*, i32** %dropped.addr, align 8, !dbg !9898
  store i32 %69, i32* %70, align 4, !dbg !9899
  %71 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !9900
  store %struct.decNumber* %71, %struct.decNumber** %retval, align 8, !dbg !9901
  br label %return, !dbg !9901

return:                                           ; preds = %cond.end, %if.then67, %if.then54, %if.then16, %if.then
  %72 = load %struct.decNumber*, %struct.decNumber** %retval, align 8, !dbg !9902
  ret %struct.decNumber* %72, !dbg !9902
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberRescale(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !9903 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !9904, metadata !DIExpression()), !dbg !9905
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !9906, metadata !DIExpression()), !dbg !9907
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !9908, metadata !DIExpression()), !dbg !9909
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !9910, metadata !DIExpression()), !dbg !9911
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9912, metadata !DIExpression()), !dbg !9913
  store i32 0, i32* %status, align 4, !dbg !9913
  %0 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9914
  %1 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !9915
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !9916
  %3 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9917
  %call = call %struct.decNumber* @decQuantizeOp(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext 0, i32* %status), !dbg !9918
  %4 = load i32, i32* %status, align 4, !dbg !9919
  %cmp = icmp ne i32 %4, 0, !dbg !9921
  br i1 %cmp, label %if.then, label %if.end, !dbg !9922

if.then:                                          ; preds = %entry
  %5 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9923
  %6 = load i32, i32* %status, align 4, !dbg !9924
  %7 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9925
  call void @decStatus(%struct.decNumber* %5, i32 %6, %struct.decContext* %7), !dbg !9926
  br label %if.end, !dbg !9926

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9927
  ret %struct.decNumber* %8, !dbg !9928
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberRemainder(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !9929 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !9930, metadata !DIExpression()), !dbg !9931
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !9932, metadata !DIExpression()), !dbg !9933
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !9934, metadata !DIExpression()), !dbg !9935
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !9936, metadata !DIExpression()), !dbg !9937
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9938, metadata !DIExpression()), !dbg !9939
  store i32 0, i32* %status, align 4, !dbg !9939
  %0 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9940
  %1 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !9941
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !9942
  %3 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9943
  %call = call %struct.decNumber* @decDivideOp(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext 64, i32* %status), !dbg !9944
  %4 = load i32, i32* %status, align 4, !dbg !9945
  %cmp = icmp ne i32 %4, 0, !dbg !9947
  br i1 %cmp, label %if.then, label %if.end, !dbg !9948

if.then:                                          ; preds = %entry
  %5 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9949
  %6 = load i32, i32* %status, align 4, !dbg !9950
  %7 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9951
  call void @decStatus(%struct.decNumber* %5, i32 %6, %struct.decContext* %7), !dbg !9952
  br label %if.end, !dbg !9952

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9953
  ret %struct.decNumber* %8, !dbg !9954
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberRemainderNear(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !9955 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !9956, metadata !DIExpression()), !dbg !9957
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !9958, metadata !DIExpression()), !dbg !9959
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !9960, metadata !DIExpression()), !dbg !9961
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !9962, metadata !DIExpression()), !dbg !9963
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9964, metadata !DIExpression()), !dbg !9965
  store i32 0, i32* %status, align 4, !dbg !9965
  %0 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9966
  %1 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !9967
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !9968
  %3 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9969
  %call = call %struct.decNumber* @decDivideOp(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext 16, i32* %status), !dbg !9970
  %4 = load i32, i32* %status, align 4, !dbg !9971
  %cmp = icmp ne i32 %4, 0, !dbg !9973
  br i1 %cmp, label %if.then, label %if.end, !dbg !9974

if.then:                                          ; preds = %entry
  %5 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9975
  %6 = load i32, i32* %status, align 4, !dbg !9976
  %7 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !9977
  call void @decStatus(%struct.decNumber* %5, i32 %6, %struct.decContext* %7), !dbg !9978
  br label %if.end, !dbg !9978

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9979
  ret %struct.decNumber* %8, !dbg !9980
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberRotate(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !9981 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status = alloca i32, align 4
  %rotate = alloca i32, align 4
  %units = alloca i32, align 4
  %shift = alloca i32, align 4
  %msudigits = alloca i32, align 4
  %msu = alloca i16*, align 8
  %msumax = alloca i16*, align 8
  %save = alloca i32, align 4
  %rem133 = alloca i32, align 4
  %save174 = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !9982, metadata !DIExpression()), !dbg !9983
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !9984, metadata !DIExpression()), !dbg !9985
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !9986, metadata !DIExpression()), !dbg !9987
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !9988, metadata !DIExpression()), !dbg !9989
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9990, metadata !DIExpression()), !dbg !9991
  store i32 0, i32* %status, align 4, !dbg !9991
  call void @llvm.dbg.declare(metadata i32* %rotate, metadata !9992, metadata !DIExpression()), !dbg !9993
  %0 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !9994
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 2, !dbg !9994
  %1 = load i8, i8* %bits, align 4, !dbg !9994
  %conv = zext i8 %1 to i32, !dbg !9994
  %and = and i32 %conv, 48, !dbg !9994
  %cmp = icmp ne i32 %and, 0, !dbg !9994
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9996

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !9997
  %bits2 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 2, !dbg !9997
  %3 = load i8, i8* %bits2, align 4, !dbg !9997
  %conv3 = zext i8 %3 to i32, !dbg !9997
  %and4 = and i32 %conv3, 48, !dbg !9997
  %cmp5 = icmp ne i32 %and4, 0, !dbg !9997
  br i1 %cmp5, label %if.then, label %if.else, !dbg !9998

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !9999
  %5 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !10000
  %6 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10001
  %7 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !10002
  %call = call %struct.decNumber* @decNaNs(%struct.decNumber* %4, %struct.decNumber* %5, %struct.decNumber* %6, %struct.decContext* %7, i32* %status), !dbg !10003
  br label %if.end218, !dbg !10003

if.else:                                          ; preds = %lor.lhs.false
  %8 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10004
  %bits7 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i32 0, i32 2, !dbg !10004
  %9 = load i8, i8* %bits7, align 4, !dbg !10004
  %conv8 = zext i8 %9 to i32, !dbg !10004
  %and9 = and i32 %conv8, 64, !dbg !10004
  %cmp10 = icmp ne i32 %and9, 0, !dbg !10004
  br i1 %cmp10, label %if.then15, label %lor.lhs.false12, !dbg !10006

lor.lhs.false12:                                  ; preds = %if.else
  %10 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10007
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %10, i32 0, i32 1, !dbg !10008
  %11 = load i32, i32* %exponent, align 4, !dbg !10008
  %cmp13 = icmp ne i32 %11, 0, !dbg !10009
  br i1 %cmp13, label %if.then15, label %if.else16, !dbg !10010

if.then15:                                        ; preds = %lor.lhs.false12, %if.else
  store i32 128, i32* %status, align 4, !dbg !10011
  br label %if.end217, !dbg !10012

if.else16:                                        ; preds = %lor.lhs.false12
  %12 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10013
  %call17 = call i32 @decGetInt(%struct.decNumber* %12), !dbg !10015
  store i32 %call17, i32* %rotate, align 4, !dbg !10016
  %13 = load i32, i32* %rotate, align 4, !dbg !10017
  %cmp18 = icmp eq i32 %13, -2147483648, !dbg !10019
  br i1 %cmp18, label %if.then30, label %lor.lhs.false20, !dbg !10020

lor.lhs.false20:                                  ; preds = %if.else16
  %14 = load i32, i32* %rotate, align 4, !dbg !10021
  %cmp21 = icmp eq i32 %14, -2147483645, !dbg !10022
  br i1 %cmp21, label %if.then30, label %lor.lhs.false23, !dbg !10023

lor.lhs.false23:                                  ; preds = %lor.lhs.false20
  %15 = load i32, i32* %rotate, align 4, !dbg !10024
  %cmp24 = icmp eq i32 %15, -2147483646, !dbg !10025
  br i1 %cmp24, label %if.then30, label %lor.lhs.false26, !dbg !10026

lor.lhs.false26:                                  ; preds = %lor.lhs.false23
  %16 = load i32, i32* %rotate, align 4, !dbg !10027
  %call27 = call i32 @abs(i32 %16) #7, !dbg !10028
  %17 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !10029
  %digits = getelementptr inbounds %struct.decContext, %struct.decContext* %17, i32 0, i32 0, !dbg !10030
  %18 = load i32, i32* %digits, align 4, !dbg !10030
  %cmp28 = icmp sgt i32 %call27, %18, !dbg !10031
  br i1 %cmp28, label %if.then30, label %if.else31, !dbg !10032

if.then30:                                        ; preds = %lor.lhs.false26, %lor.lhs.false23, %lor.lhs.false20, %if.else16
  store i32 128, i32* %status, align 4, !dbg !10033
  br label %if.end216, !dbg !10034

if.else31:                                        ; preds = %lor.lhs.false26
  %19 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10035
  %20 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !10037
  %call32 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %19, %struct.decNumber* %20), !dbg !10038
  %21 = load i32, i32* %rotate, align 4, !dbg !10039
  %cmp33 = icmp slt i32 %21, 0, !dbg !10041
  br i1 %cmp33, label %if.then35, label %if.end, !dbg !10042

if.then35:                                        ; preds = %if.else31
  %22 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !10043
  %digits36 = getelementptr inbounds %struct.decContext, %struct.decContext* %22, i32 0, i32 0, !dbg !10044
  %23 = load i32, i32* %digits36, align 4, !dbg !10044
  %24 = load i32, i32* %rotate, align 4, !dbg !10045
  %add = add nsw i32 %23, %24, !dbg !10046
  store i32 %add, i32* %rotate, align 4, !dbg !10047
  br label %if.end, !dbg !10048

if.end:                                           ; preds = %if.then35, %if.else31
  %25 = load i32, i32* %rotate, align 4, !dbg !10049
  %cmp37 = icmp ne i32 %25, 0, !dbg !10051
  br i1 %cmp37, label %land.lhs.true, label %if.end215, !dbg !10052

land.lhs.true:                                    ; preds = %if.end
  %26 = load i32, i32* %rotate, align 4, !dbg !10053
  %27 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !10054
  %digits39 = getelementptr inbounds %struct.decContext, %struct.decContext* %27, i32 0, i32 0, !dbg !10055
  %28 = load i32, i32* %digits39, align 4, !dbg !10055
  %cmp40 = icmp ne i32 %26, %28, !dbg !10056
  br i1 %cmp40, label %land.lhs.true42, label %if.end215, !dbg !10057

land.lhs.true42:                                  ; preds = %land.lhs.true
  %29 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10058
  %bits43 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %29, i32 0, i32 2, !dbg !10058
  %30 = load i8, i8* %bits43, align 4, !dbg !10058
  %conv44 = zext i8 %30 to i32, !dbg !10058
  %and45 = and i32 %conv44, 64, !dbg !10058
  %cmp46 = icmp ne i32 %and45, 0, !dbg !10058
  br i1 %cmp46, label %if.end215, label %if.then48, !dbg !10059

if.then48:                                        ; preds = %land.lhs.true42
  call void @llvm.dbg.declare(metadata i32* %units, metadata !10060, metadata !DIExpression()), !dbg !10062
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !10063, metadata !DIExpression()), !dbg !10064
  call void @llvm.dbg.declare(metadata i32* %msudigits, metadata !10065, metadata !DIExpression()), !dbg !10066
  call void @llvm.dbg.declare(metadata i16** %msu, metadata !10067, metadata !DIExpression()), !dbg !10068
  %31 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10069
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %31, i32 0, i32 3, !dbg !10070
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !10069
  %32 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10071
  %digits49 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %32, i32 0, i32 0, !dbg !10071
  %33 = load i32, i32* %digits49, align 4, !dbg !10071
  %cmp50 = icmp sle i32 %33, 49, !dbg !10071
  br i1 %cmp50, label %cond.true, label %cond.false, !dbg !10071

cond.true:                                        ; preds = %if.then48
  %34 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10071
  %digits52 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %34, i32 0, i32 0, !dbg !10071
  %35 = load i32, i32* %digits52, align 4, !dbg !10071
  %idxprom = sext i32 %35 to i64, !dbg !10071
  %arrayidx = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom, !dbg !10071
  %36 = load i8, i8* %arrayidx, align 1, !dbg !10071
  %conv53 = zext i8 %36 to i32, !dbg !10071
  br label %cond.end, !dbg !10071

cond.false:                                       ; preds = %if.then48
  %37 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10071
  %digits54 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %37, i32 0, i32 0, !dbg !10071
  %38 = load i32, i32* %digits54, align 4, !dbg !10071
  %add55 = add nsw i32 %38, 3, !dbg !10071
  %sub = sub nsw i32 %add55, 1, !dbg !10071
  %div = sdiv i32 %sub, 3, !dbg !10071
  br label %cond.end, !dbg !10071

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv53, %cond.true ], [ %div, %cond.false ], !dbg !10071
  %idx.ext = sext i32 %cond to i64, !dbg !10072
  %add.ptr = getelementptr inbounds i16, i16* %arraydecay, i64 %idx.ext, !dbg !10072
  %add.ptr56 = getelementptr inbounds i16, i16* %add.ptr, i64 -1, !dbg !10073
  store i16* %add.ptr56, i16** %msu, align 8, !dbg !10068
  call void @llvm.dbg.declare(metadata i16** %msumax, metadata !10074, metadata !DIExpression()), !dbg !10075
  %39 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10076
  %lsu57 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %39, i32 0, i32 3, !dbg !10077
  %arraydecay58 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu57, i64 0, i64 0, !dbg !10076
  %40 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !10078
  %digits59 = getelementptr inbounds %struct.decContext, %struct.decContext* %40, i32 0, i32 0, !dbg !10078
  %41 = load i32, i32* %digits59, align 4, !dbg !10078
  %cmp60 = icmp sle i32 %41, 49, !dbg !10078
  br i1 %cmp60, label %cond.true62, label %cond.false67, !dbg !10078

cond.true62:                                      ; preds = %cond.end
  %42 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !10078
  %digits63 = getelementptr inbounds %struct.decContext, %struct.decContext* %42, i32 0, i32 0, !dbg !10078
  %43 = load i32, i32* %digits63, align 4, !dbg !10078
  %idxprom64 = sext i32 %43 to i64, !dbg !10078
  %arrayidx65 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom64, !dbg !10078
  %44 = load i8, i8* %arrayidx65, align 1, !dbg !10078
  %conv66 = zext i8 %44 to i32, !dbg !10078
  br label %cond.end72, !dbg !10078

cond.false67:                                     ; preds = %cond.end
  %45 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !10078
  %digits68 = getelementptr inbounds %struct.decContext, %struct.decContext* %45, i32 0, i32 0, !dbg !10078
  %46 = load i32, i32* %digits68, align 4, !dbg !10078
  %add69 = add nsw i32 %46, 3, !dbg !10078
  %sub70 = sub nsw i32 %add69, 1, !dbg !10078
  %div71 = sdiv i32 %sub70, 3, !dbg !10078
  br label %cond.end72, !dbg !10078

cond.end72:                                       ; preds = %cond.false67, %cond.true62
  %cond73 = phi i32 [ %conv66, %cond.true62 ], [ %div71, %cond.false67 ], !dbg !10078
  %idx.ext74 = sext i32 %cond73 to i64, !dbg !10079
  %add.ptr75 = getelementptr inbounds i16, i16* %arraydecay58, i64 %idx.ext74, !dbg !10079
  %add.ptr76 = getelementptr inbounds i16, i16* %add.ptr75, i64 -1, !dbg !10080
  store i16* %add.ptr76, i16** %msumax, align 8, !dbg !10075
  %47 = load i16*, i16** %msu, align 8, !dbg !10081
  %incdec.ptr = getelementptr inbounds i16, i16* %47, i32 1, !dbg !10081
  store i16* %incdec.ptr, i16** %msu, align 8, !dbg !10081
  br label %for.cond, !dbg !10083

for.cond:                                         ; preds = %for.inc, %cond.end72
  %48 = load i16*, i16** %msu, align 8, !dbg !10084
  %49 = load i16*, i16** %msumax, align 8, !dbg !10086
  %cmp77 = icmp ule i16* %48, %49, !dbg !10087
  br i1 %cmp77, label %for.body, label %for.end, !dbg !10088

for.body:                                         ; preds = %for.cond
  %50 = load i16*, i16** %msu, align 8, !dbg !10089
  store i16 0, i16* %50, align 2, !dbg !10090
  br label %for.inc, !dbg !10091

for.inc:                                          ; preds = %for.body
  %51 = load i16*, i16** %msu, align 8, !dbg !10092
  %incdec.ptr79 = getelementptr inbounds i16, i16* %51, i32 1, !dbg !10092
  store i16* %incdec.ptr79, i16** %msu, align 8, !dbg !10092
  br label %for.cond, !dbg !10093, !llvm.loop !10094

for.end:                                          ; preds = %for.cond
  %52 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !10096
  %digits80 = getelementptr inbounds %struct.decContext, %struct.decContext* %52, i32 0, i32 0, !dbg !10097
  %53 = load i32, i32* %digits80, align 4, !dbg !10097
  %54 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10098
  %digits81 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %54, i32 0, i32 0, !dbg !10099
  store i32 %53, i32* %digits81, align 4, !dbg !10100
  %55 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10101
  %digits82 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %55, i32 0, i32 0, !dbg !10101
  %56 = load i32, i32* %digits82, align 4, !dbg !10101
  %57 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10101
  %digits83 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %57, i32 0, i32 0, !dbg !10101
  %58 = load i32, i32* %digits83, align 4, !dbg !10101
  %cmp84 = icmp sle i32 %58, 49, !dbg !10101
  br i1 %cmp84, label %cond.true86, label %cond.false91, !dbg !10101

cond.true86:                                      ; preds = %for.end
  %59 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10101
  %digits87 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %59, i32 0, i32 0, !dbg !10101
  %60 = load i32, i32* %digits87, align 4, !dbg !10101
  %idxprom88 = sext i32 %60 to i64, !dbg !10101
  %arrayidx89 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom88, !dbg !10101
  %61 = load i8, i8* %arrayidx89, align 1, !dbg !10101
  %conv90 = zext i8 %61 to i32, !dbg !10101
  br label %cond.end96, !dbg !10101

cond.false91:                                     ; preds = %for.end
  %62 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10101
  %digits92 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %62, i32 0, i32 0, !dbg !10101
  %63 = load i32, i32* %digits92, align 4, !dbg !10101
  %add93 = add nsw i32 %63, 3, !dbg !10101
  %sub94 = sub nsw i32 %add93, 1, !dbg !10101
  %div95 = sdiv i32 %sub94, 3, !dbg !10101
  br label %cond.end96, !dbg !10101

cond.end96:                                       ; preds = %cond.false91, %cond.true86
  %cond97 = phi i32 [ %conv90, %cond.true86 ], [ %div95, %cond.false91 ], !dbg !10101
  %sub98 = sub nsw i32 %cond97, 1, !dbg !10101
  %mul = mul nsw i32 %sub98, 3, !dbg !10101
  %sub99 = sub nsw i32 %56, %mul, !dbg !10101
  store i32 %sub99, i32* %msudigits, align 4, !dbg !10102
  %64 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !10103
  %digits100 = getelementptr inbounds %struct.decContext, %struct.decContext* %64, i32 0, i32 0, !dbg !10104
  %65 = load i32, i32* %digits100, align 4, !dbg !10104
  %66 = load i32, i32* %rotate, align 4, !dbg !10105
  %sub101 = sub nsw i32 %65, %66, !dbg !10106
  store i32 %sub101, i32* %rotate, align 4, !dbg !10107
  %67 = load i32, i32* %rotate, align 4, !dbg !10108
  %div102 = sdiv i32 %67, 3, !dbg !10109
  store i32 %div102, i32* %units, align 4, !dbg !10110
  %68 = load i32, i32* %rotate, align 4, !dbg !10111
  %rem = srem i32 %68, 3, !dbg !10112
  store i32 %rem, i32* %shift, align 4, !dbg !10113
  %69 = load i32, i32* %shift, align 4, !dbg !10114
  %cmp103 = icmp ugt i32 %69, 0, !dbg !10116
  br i1 %cmp103, label %if.then105, label %if.end166, !dbg !10117

if.then105:                                       ; preds = %cond.end96
  call void @llvm.dbg.declare(metadata i32* %save, metadata !10118, metadata !DIExpression()), !dbg !10120
  %70 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10121
  %lsu106 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %70, i32 0, i32 3, !dbg !10122
  %arrayidx107 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu106, i64 0, i64 0, !dbg !10121
  %71 = load i16, i16* %arrayidx107, align 2, !dbg !10121
  %conv108 = zext i16 %71 to i32, !dbg !10121
  %72 = load i32, i32* %shift, align 4, !dbg !10123
  %idxprom109 = zext i32 %72 to i64, !dbg !10124
  %arrayidx110 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom109, !dbg !10124
  %73 = load i32, i32* %arrayidx110, align 4, !dbg !10124
  %rem111 = urem i32 %conv108, %73, !dbg !10125
  store i32 %rem111, i32* %save, align 4, !dbg !10120
  %74 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10126
  %lsu112 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %74, i32 0, i32 3, !dbg !10127
  %arraydecay113 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu112, i64 0, i64 0, !dbg !10126
  %75 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10128
  %digits114 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %75, i32 0, i32 0, !dbg !10128
  %76 = load i32, i32* %digits114, align 4, !dbg !10128
  %cmp115 = icmp sle i32 %76, 49, !dbg !10128
  br i1 %cmp115, label %cond.true117, label %cond.false122, !dbg !10128

cond.true117:                                     ; preds = %if.then105
  %77 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10128
  %digits118 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %77, i32 0, i32 0, !dbg !10128
  %78 = load i32, i32* %digits118, align 4, !dbg !10128
  %idxprom119 = sext i32 %78 to i64, !dbg !10128
  %arrayidx120 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom119, !dbg !10128
  %79 = load i8, i8* %arrayidx120, align 1, !dbg !10128
  %conv121 = zext i8 %79 to i32, !dbg !10128
  br label %cond.end127, !dbg !10128

cond.false122:                                    ; preds = %if.then105
  %80 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10128
  %digits123 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %80, i32 0, i32 0, !dbg !10128
  %81 = load i32, i32* %digits123, align 4, !dbg !10128
  %add124 = add nsw i32 %81, 3, !dbg !10128
  %sub125 = sub nsw i32 %add124, 1, !dbg !10128
  %div126 = sdiv i32 %sub125, 3, !dbg !10128
  br label %cond.end127, !dbg !10128

cond.end127:                                      ; preds = %cond.false122, %cond.true117
  %cond128 = phi i32 [ %conv121, %cond.true117 ], [ %div126, %cond.false122 ], !dbg !10128
  %82 = load i32, i32* %shift, align 4, !dbg !10129
  %call129 = call i32 @decShiftToLeast(i16* %arraydecay113, i32 %cond128, i32 %82), !dbg !10130
  %83 = load i32, i32* %shift, align 4, !dbg !10131
  %84 = load i32, i32* %msudigits, align 4, !dbg !10133
  %cmp130 = icmp ugt i32 %83, %84, !dbg !10134
  br i1 %cmp130, label %if.then132, label %if.else155, !dbg !10135

if.then132:                                       ; preds = %cond.end127
  call void @llvm.dbg.declare(metadata i32* %rem133, metadata !10136, metadata !DIExpression()), !dbg !10138
  %85 = load i32, i32* %save, align 4, !dbg !10139
  %86 = load i32, i32* %shift, align 4, !dbg !10140
  %87 = load i32, i32* %msudigits, align 4, !dbg !10141
  %sub134 = sub i32 %86, %87, !dbg !10142
  %idxprom135 = zext i32 %sub134 to i64, !dbg !10143
  %arrayidx136 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom135, !dbg !10143
  %88 = load i32, i32* %arrayidx136, align 4, !dbg !10143
  %rem137 = urem i32 %85, %88, !dbg !10144
  store i32 %rem137, i32* %rem133, align 4, !dbg !10138
  %89 = load i32, i32* %save, align 4, !dbg !10145
  %90 = load i32, i32* %shift, align 4, !dbg !10146
  %91 = load i32, i32* %msudigits, align 4, !dbg !10147
  %sub138 = sub i32 %90, %91, !dbg !10148
  %idxprom139 = zext i32 %sub138 to i64, !dbg !10149
  %arrayidx140 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom139, !dbg !10149
  %92 = load i32, i32* %arrayidx140, align 4, !dbg !10149
  %div141 = udiv i32 %89, %92, !dbg !10150
  %conv142 = trunc i32 %div141 to i16, !dbg !10151
  %93 = load i16*, i16** %msumax, align 8, !dbg !10152
  store i16 %conv142, i16* %93, align 2, !dbg !10153
  %94 = load i16*, i16** %msumax, align 8, !dbg !10154
  %add.ptr143 = getelementptr inbounds i16, i16* %94, i64 -1, !dbg !10155
  %95 = load i16, i16* %add.ptr143, align 2, !dbg !10156
  %conv144 = zext i16 %95 to i32, !dbg !10156
  %96 = load i32, i32* %rem133, align 4, !dbg !10157
  %97 = load i32, i32* %shift, align 4, !dbg !10158
  %98 = load i32, i32* %msudigits, align 4, !dbg !10159
  %sub145 = sub i32 %97, %98, !dbg !10160
  %sub146 = sub i32 3, %sub145, !dbg !10161
  %idxprom147 = zext i32 %sub146 to i64, !dbg !10162
  %arrayidx148 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom147, !dbg !10162
  %99 = load i32, i32* %arrayidx148, align 4, !dbg !10162
  %mul149 = mul i32 %96, %99, !dbg !10163
  %conv150 = trunc i32 %mul149 to i16, !dbg !10164
  %conv151 = zext i16 %conv150 to i32, !dbg !10164
  %add152 = add nsw i32 %conv144, %conv151, !dbg !10165
  %conv153 = trunc i32 %add152 to i16, !dbg !10156
  %100 = load i16*, i16** %msumax, align 8, !dbg !10166
  %add.ptr154 = getelementptr inbounds i16, i16* %100, i64 -1, !dbg !10167
  store i16 %conv153, i16* %add.ptr154, align 2, !dbg !10168
  br label %if.end165, !dbg !10169

if.else155:                                       ; preds = %cond.end127
  %101 = load i16*, i16** %msumax, align 8, !dbg !10170
  %102 = load i16, i16* %101, align 2, !dbg !10172
  %conv156 = zext i16 %102 to i32, !dbg !10172
  %103 = load i32, i32* %save, align 4, !dbg !10173
  %104 = load i32, i32* %msudigits, align 4, !dbg !10174
  %105 = load i32, i32* %shift, align 4, !dbg !10175
  %sub157 = sub i32 %104, %105, !dbg !10176
  %idxprom158 = zext i32 %sub157 to i64, !dbg !10177
  %arrayidx159 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom158, !dbg !10177
  %106 = load i32, i32* %arrayidx159, align 4, !dbg !10177
  %mul160 = mul i32 %103, %106, !dbg !10178
  %conv161 = trunc i32 %mul160 to i16, !dbg !10179
  %conv162 = zext i16 %conv161 to i32, !dbg !10179
  %add163 = add nsw i32 %conv156, %conv162, !dbg !10180
  %conv164 = trunc i32 %add163 to i16, !dbg !10172
  %107 = load i16*, i16** %msumax, align 8, !dbg !10181
  store i16 %conv164, i16* %107, align 2, !dbg !10182
  br label %if.end165

if.end165:                                        ; preds = %if.else155, %if.then132
  br label %if.end166, !dbg !10183

if.end166:                                        ; preds = %if.end165, %cond.end96
  %108 = load i32, i32* %units, align 4, !dbg !10184
  %cmp167 = icmp ugt i32 %108, 0, !dbg !10186
  br i1 %cmp167, label %if.then169, label %if.end206, !dbg !10187

if.then169:                                       ; preds = %if.end166
  %109 = load i32, i32* %msudigits, align 4, !dbg !10188
  %sub170 = sub i32 3, %109, !dbg !10190
  store i32 %sub170, i32* %shift, align 4, !dbg !10191
  %110 = load i32, i32* %shift, align 4, !dbg !10192
  %cmp171 = icmp ugt i32 %110, 0, !dbg !10194
  br i1 %cmp171, label %if.then173, label %if.end192, !dbg !10195

if.then173:                                       ; preds = %if.then169
  call void @llvm.dbg.declare(metadata i32* %save174, metadata !10196, metadata !DIExpression()), !dbg !10198
  %111 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10199
  %lsu175 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %111, i32 0, i32 3, !dbg !10200
  %arrayidx176 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu175, i64 0, i64 0, !dbg !10199
  %112 = load i16, i16* %arrayidx176, align 2, !dbg !10199
  %conv177 = zext i16 %112 to i32, !dbg !10199
  %113 = load i32, i32* %shift, align 4, !dbg !10201
  %idxprom178 = zext i32 %113 to i64, !dbg !10202
  %arrayidx179 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom178, !dbg !10202
  %114 = load i32, i32* %arrayidx179, align 4, !dbg !10202
  %rem180 = urem i32 %conv177, %114, !dbg !10203
  store i32 %rem180, i32* %save174, align 4, !dbg !10198
  %115 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10204
  %lsu181 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %115, i32 0, i32 3, !dbg !10205
  %arraydecay182 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu181, i64 0, i64 0, !dbg !10204
  %116 = load i32, i32* %units, align 4, !dbg !10206
  %117 = load i32, i32* %shift, align 4, !dbg !10207
  %call183 = call i32 @decShiftToLeast(i16* %arraydecay182, i32 %116, i32 %117), !dbg !10208
  %118 = load i16*, i16** %msumax, align 8, !dbg !10209
  %119 = load i16, i16* %118, align 2, !dbg !10210
  %conv184 = zext i16 %119 to i32, !dbg !10210
  %120 = load i32, i32* %save174, align 4, !dbg !10211
  %121 = load i32, i32* %msudigits, align 4, !dbg !10212
  %idxprom185 = zext i32 %121 to i64, !dbg !10213
  %arrayidx186 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom185, !dbg !10213
  %122 = load i32, i32* %arrayidx186, align 4, !dbg !10213
  %mul187 = mul i32 %120, %122, !dbg !10214
  %conv188 = trunc i32 %mul187 to i16, !dbg !10215
  %conv189 = zext i16 %conv188 to i32, !dbg !10215
  %add190 = add nsw i32 %conv184, %conv189, !dbg !10216
  %conv191 = trunc i32 %add190 to i16, !dbg !10210
  %123 = load i16*, i16** %msumax, align 8, !dbg !10217
  store i16 %conv191, i16* %123, align 2, !dbg !10218
  br label %if.end192, !dbg !10219

if.end192:                                        ; preds = %if.then173, %if.then169
  %124 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10220
  %lsu193 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %124, i32 0, i32 3, !dbg !10221
  %arraydecay194 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu193, i64 0, i64 0, !dbg !10220
  %125 = load i32, i32* %units, align 4, !dbg !10222
  %idx.ext195 = zext i32 %125 to i64, !dbg !10223
  %add.ptr196 = getelementptr inbounds i16, i16* %arraydecay194, i64 %idx.ext195, !dbg !10223
  %126 = load i16*, i16** %msumax, align 8, !dbg !10224
  call void @decReverse(i16* %add.ptr196, i16* %126), !dbg !10225
  %127 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10226
  %lsu197 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %127, i32 0, i32 3, !dbg !10227
  %arraydecay198 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu197, i64 0, i64 0, !dbg !10226
  %128 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10228
  %lsu199 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %128, i32 0, i32 3, !dbg !10229
  %arraydecay200 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu199, i64 0, i64 0, !dbg !10228
  %129 = load i32, i32* %units, align 4, !dbg !10230
  %idx.ext201 = zext i32 %129 to i64, !dbg !10231
  %add.ptr202 = getelementptr inbounds i16, i16* %arraydecay200, i64 %idx.ext201, !dbg !10231
  %add.ptr203 = getelementptr inbounds i16, i16* %add.ptr202, i64 -1, !dbg !10232
  call void @decReverse(i16* %arraydecay198, i16* %add.ptr203), !dbg !10233
  %130 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10234
  %lsu204 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %130, i32 0, i32 3, !dbg !10235
  %arraydecay205 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu204, i64 0, i64 0, !dbg !10234
  %131 = load i16*, i16** %msumax, align 8, !dbg !10236
  call void @decReverse(i16* %arraydecay205, i16* %131), !dbg !10237
  br label %if.end206, !dbg !10238

if.end206:                                        ; preds = %if.end192, %if.end166
  %132 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10239
  %lsu207 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %132, i32 0, i32 3, !dbg !10240
  %arraydecay208 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu207, i64 0, i64 0, !dbg !10239
  %133 = load i16*, i16** %msumax, align 8, !dbg !10241
  %134 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10242
  %lsu209 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %134, i32 0, i32 3, !dbg !10243
  %arraydecay210 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu209, i64 0, i64 0, !dbg !10242
  %sub.ptr.lhs.cast = ptrtoint i16* %133 to i64, !dbg !10244
  %sub.ptr.rhs.cast = ptrtoint i16* %arraydecay210 to i64, !dbg !10244
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10244
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2, !dbg !10244
  %add211 = add nsw i64 %sub.ptr.div, 1, !dbg !10245
  %conv212 = trunc i64 %add211 to i32, !dbg !10241
  %call213 = call i32 @decGetDigits(i16* %arraydecay208, i32 %conv212), !dbg !10246
  %135 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10247
  %digits214 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %135, i32 0, i32 0, !dbg !10248
  store i32 %call213, i32* %digits214, align 4, !dbg !10249
  br label %if.end215, !dbg !10250

if.end215:                                        ; preds = %if.end206, %land.lhs.true42, %land.lhs.true, %if.end
  br label %if.end216

if.end216:                                        ; preds = %if.end215, %if.then30
  br label %if.end217

if.end217:                                        ; preds = %if.end216, %if.then15
  br label %if.end218

if.end218:                                        ; preds = %if.end217, %if.then
  %136 = load i32, i32* %status, align 4, !dbg !10251
  %cmp219 = icmp ne i32 %136, 0, !dbg !10253
  br i1 %cmp219, label %if.then221, label %if.end222, !dbg !10254

if.then221:                                       ; preds = %if.end218
  %137 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10255
  %138 = load i32, i32* %status, align 4, !dbg !10256
  %139 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !10257
  call void @decStatus(%struct.decNumber* %137, i32 %138, %struct.decContext* %139), !dbg !10258
  br label %if.end222, !dbg !10258

if.end222:                                        ; preds = %if.then221, %if.end218
  %140 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10259
  ret %struct.decNumber* %140, !dbg !10260
}

; Function Attrs: nounwind readnone
declare dso_local i32 @abs(i32) #5

; Function Attrs: noinline nounwind uwtable
define internal i32 @decShiftToLeast(i16* %uar, i32 %units, i32 %shift) #0 !dbg !10261 {
entry:
  %retval = alloca i32, align 4
  %uar.addr = alloca i16*, align 8
  %units.addr = alloca i32, align 4
  %shift.addr = alloca i32, align 4
  %target = alloca i16*, align 8
  %up = alloca i16*, align 8
  %cut = alloca i32, align 4
  %count = alloca i32, align 4
  %quot = alloca i32, align 4
  %rem = alloca i32, align 4
  store i16* %uar, i16** %uar.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %uar.addr, metadata !10262, metadata !DIExpression()), !dbg !10263
  store i32 %units, i32* %units.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %units.addr, metadata !10264, metadata !DIExpression()), !dbg !10265
  store i32 %shift, i32* %shift.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr, metadata !10266, metadata !DIExpression()), !dbg !10267
  call void @llvm.dbg.declare(metadata i16** %target, metadata !10268, metadata !DIExpression()), !dbg !10269
  call void @llvm.dbg.declare(metadata i16** %up, metadata !10270, metadata !DIExpression()), !dbg !10271
  call void @llvm.dbg.declare(metadata i32* %cut, metadata !10272, metadata !DIExpression()), !dbg !10273
  call void @llvm.dbg.declare(metadata i32* %count, metadata !10274, metadata !DIExpression()), !dbg !10275
  call void @llvm.dbg.declare(metadata i32* %quot, metadata !10276, metadata !DIExpression()), !dbg !10277
  call void @llvm.dbg.declare(metadata i32* %rem, metadata !10278, metadata !DIExpression()), !dbg !10279
  %0 = load i32, i32* %shift.addr, align 4, !dbg !10280
  %cmp = icmp eq i32 %0, 0, !dbg !10282
  br i1 %cmp, label %if.then, label %if.end, !dbg !10283

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %units.addr, align 4, !dbg !10284
  store i32 %1, i32* %retval, align 4, !dbg !10285
  br label %return, !dbg !10285

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %shift.addr, align 4, !dbg !10286
  %3 = load i32, i32* %units.addr, align 4, !dbg !10288
  %mul = mul nsw i32 %3, 3, !dbg !10289
  %cmp1 = icmp eq i32 %2, %mul, !dbg !10290
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !10291

if.then2:                                         ; preds = %if.end
  %4 = load i16*, i16** %uar.addr, align 8, !dbg !10292
  store i16 0, i16* %4, align 2, !dbg !10294
  store i32 1, i32* %retval, align 4, !dbg !10295
  br label %return, !dbg !10295

if.end3:                                          ; preds = %if.end
  %5 = load i16*, i16** %uar.addr, align 8, !dbg !10296
  store i16* %5, i16** %target, align 8, !dbg !10297
  %6 = load i32, i32* %shift.addr, align 4, !dbg !10298
  %7 = load i32, i32* %shift.addr, align 4, !dbg !10298
  %cmp4 = icmp sle i32 %7, 49, !dbg !10298
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !10298

cond.true:                                        ; preds = %if.end3
  %8 = load i32, i32* %shift.addr, align 4, !dbg !10298
  %idxprom = sext i32 %8 to i64, !dbg !10298
  %arrayidx = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom, !dbg !10298
  %9 = load i8, i8* %arrayidx, align 1, !dbg !10298
  %conv = zext i8 %9 to i32, !dbg !10298
  br label %cond.end, !dbg !10298

cond.false:                                       ; preds = %if.end3
  %10 = load i32, i32* %shift.addr, align 4, !dbg !10298
  %add = add nsw i32 %10, 3, !dbg !10298
  %sub = sub nsw i32 %add, 1, !dbg !10298
  %div = sdiv i32 %sub, 3, !dbg !10298
  br label %cond.end, !dbg !10298

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %div, %cond.false ], !dbg !10298
  %sub5 = sub nsw i32 %cond, 1, !dbg !10298
  %mul6 = mul nsw i32 %sub5, 3, !dbg !10298
  %sub7 = sub nsw i32 %6, %mul6, !dbg !10298
  store i32 %sub7, i32* %cut, align 4, !dbg !10299
  %11 = load i32, i32* %cut, align 4, !dbg !10300
  %cmp8 = icmp eq i32 %11, 3, !dbg !10302
  br i1 %cmp8, label %if.then10, label %if.end29, !dbg !10303

if.then10:                                        ; preds = %cond.end
  %12 = load i16*, i16** %uar.addr, align 8, !dbg !10304
  %13 = load i32, i32* %shift.addr, align 4, !dbg !10306
  %cmp11 = icmp sle i32 %13, 49, !dbg !10306
  br i1 %cmp11, label %cond.true13, label %cond.false17, !dbg !10306

cond.true13:                                      ; preds = %if.then10
  %14 = load i32, i32* %shift.addr, align 4, !dbg !10306
  %idxprom14 = sext i32 %14 to i64, !dbg !10306
  %arrayidx15 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom14, !dbg !10306
  %15 = load i8, i8* %arrayidx15, align 1, !dbg !10306
  %conv16 = zext i8 %15 to i32, !dbg !10306
  br label %cond.end21, !dbg !10306

cond.false17:                                     ; preds = %if.then10
  %16 = load i32, i32* %shift.addr, align 4, !dbg !10306
  %add18 = add nsw i32 %16, 3, !dbg !10306
  %sub19 = sub nsw i32 %add18, 1, !dbg !10306
  %div20 = sdiv i32 %sub19, 3, !dbg !10306
  br label %cond.end21, !dbg !10306

cond.end21:                                       ; preds = %cond.false17, %cond.true13
  %cond22 = phi i32 [ %conv16, %cond.true13 ], [ %div20, %cond.false17 ], !dbg !10306
  %idx.ext = sext i32 %cond22 to i64, !dbg !10307
  %add.ptr = getelementptr inbounds i16, i16* %12, i64 %idx.ext, !dbg !10307
  store i16* %add.ptr, i16** %up, align 8, !dbg !10308
  br label %for.cond, !dbg !10309

for.cond:                                         ; preds = %for.inc, %cond.end21
  %17 = load i16*, i16** %up, align 8, !dbg !10310
  %18 = load i16*, i16** %uar.addr, align 8, !dbg !10313
  %19 = load i32, i32* %units.addr, align 4, !dbg !10314
  %idx.ext23 = sext i32 %19 to i64, !dbg !10315
  %add.ptr24 = getelementptr inbounds i16, i16* %18, i64 %idx.ext23, !dbg !10315
  %cmp25 = icmp ult i16* %17, %add.ptr24, !dbg !10316
  br i1 %cmp25, label %for.body, label %for.end, !dbg !10317

for.body:                                         ; preds = %for.cond
  %20 = load i16*, i16** %up, align 8, !dbg !10318
  %21 = load i16, i16* %20, align 2, !dbg !10319
  %22 = load i16*, i16** %target, align 8, !dbg !10320
  store i16 %21, i16* %22, align 2, !dbg !10321
  br label %for.inc, !dbg !10322

for.inc:                                          ; preds = %for.body
  %23 = load i16*, i16** %target, align 8, !dbg !10323
  %incdec.ptr = getelementptr inbounds i16, i16* %23, i32 1, !dbg !10323
  store i16* %incdec.ptr, i16** %target, align 8, !dbg !10323
  %24 = load i16*, i16** %up, align 8, !dbg !10324
  %incdec.ptr27 = getelementptr inbounds i16, i16* %24, i32 1, !dbg !10324
  store i16* %incdec.ptr27, i16** %up, align 8, !dbg !10324
  br label %for.cond, !dbg !10325, !llvm.loop !10326

for.end:                                          ; preds = %for.cond
  %25 = load i16*, i16** %target, align 8, !dbg !10328
  %26 = load i16*, i16** %uar.addr, align 8, !dbg !10329
  %sub.ptr.lhs.cast = ptrtoint i16* %25 to i64, !dbg !10330
  %sub.ptr.rhs.cast = ptrtoint i16* %26 to i64, !dbg !10330
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10330
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2, !dbg !10330
  %conv28 = trunc i64 %sub.ptr.div to i32, !dbg !10328
  store i32 %conv28, i32* %retval, align 4, !dbg !10331
  br label %return, !dbg !10331

if.end29:                                         ; preds = %cond.end
  %27 = load i16*, i16** %uar.addr, align 8, !dbg !10332
  %28 = load i32, i32* %shift.addr, align 4, !dbg !10333
  %29 = load i32, i32* %cut, align 4, !dbg !10333
  %sub30 = sub nsw i32 %28, %29, !dbg !10333
  %cmp31 = icmp sle i32 %sub30, 49, !dbg !10333
  br i1 %cmp31, label %cond.true33, label %cond.false38, !dbg !10333

cond.true33:                                      ; preds = %if.end29
  %30 = load i32, i32* %shift.addr, align 4, !dbg !10333
  %31 = load i32, i32* %cut, align 4, !dbg !10333
  %sub34 = sub nsw i32 %30, %31, !dbg !10333
  %idxprom35 = sext i32 %sub34 to i64, !dbg !10333
  %arrayidx36 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom35, !dbg !10333
  %32 = load i8, i8* %arrayidx36, align 1, !dbg !10333
  %conv37 = zext i8 %32 to i32, !dbg !10333
  br label %cond.end43, !dbg !10333

cond.false38:                                     ; preds = %if.end29
  %33 = load i32, i32* %shift.addr, align 4, !dbg !10333
  %34 = load i32, i32* %cut, align 4, !dbg !10333
  %sub39 = sub nsw i32 %33, %34, !dbg !10333
  %add40 = add nsw i32 %sub39, 3, !dbg !10333
  %sub41 = sub nsw i32 %add40, 1, !dbg !10333
  %div42 = sdiv i32 %sub41, 3, !dbg !10333
  br label %cond.end43, !dbg !10333

cond.end43:                                       ; preds = %cond.false38, %cond.true33
  %cond44 = phi i32 [ %conv37, %cond.true33 ], [ %div42, %cond.false38 ], !dbg !10333
  %idx.ext45 = sext i32 %cond44 to i64, !dbg !10334
  %add.ptr46 = getelementptr inbounds i16, i16* %27, i64 %idx.ext45, !dbg !10334
  store i16* %add.ptr46, i16** %up, align 8, !dbg !10335
  %35 = load i32, i32* %units.addr, align 4, !dbg !10336
  %mul47 = mul nsw i32 %35, 3, !dbg !10337
  %36 = load i32, i32* %shift.addr, align 4, !dbg !10338
  %sub48 = sub nsw i32 %mul47, %36, !dbg !10339
  store i32 %sub48, i32* %count, align 4, !dbg !10340
  %37 = load i16*, i16** %up, align 8, !dbg !10341
  %38 = load i16, i16* %37, align 2, !dbg !10341
  %conv49 = zext i16 %38 to i32, !dbg !10341
  %39 = load i32, i32* %cut, align 4, !dbg !10341
  %shr = lshr i32 %conv49, %39, !dbg !10341
  %40 = load i32, i32* %cut, align 4, !dbg !10341
  %idxprom50 = sext i32 %40 to i64, !dbg !10341
  %arrayidx51 = getelementptr inbounds [5 x i32], [5 x i32]* @multies, i64 0, i64 %idxprom50, !dbg !10341
  %41 = load i32, i32* %arrayidx51, align 4, !dbg !10341
  %mul52 = mul i32 %shr, %41, !dbg !10341
  %shr53 = lshr i32 %mul52, 17, !dbg !10341
  store i32 %shr53, i32* %quot, align 4, !dbg !10342
  br label %for.cond54, !dbg !10343

for.cond54:                                       ; preds = %for.inc86, %cond.end43
  %42 = load i32, i32* %quot, align 4, !dbg !10344
  %conv55 = trunc i32 %42 to i16, !dbg !10348
  %43 = load i16*, i16** %target, align 8, !dbg !10349
  store i16 %conv55, i16* %43, align 2, !dbg !10350
  %44 = load i32, i32* %cut, align 4, !dbg !10351
  %sub56 = sub nsw i32 3, %44, !dbg !10352
  %45 = load i32, i32* %count, align 4, !dbg !10353
  %sub57 = sub nsw i32 %45, %sub56, !dbg !10353
  store i32 %sub57, i32* %count, align 4, !dbg !10353
  %46 = load i32, i32* %count, align 4, !dbg !10354
  %cmp58 = icmp sle i32 %46, 0, !dbg !10356
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !10357

if.then60:                                        ; preds = %for.cond54
  br label %for.end88, !dbg !10358

if.end61:                                         ; preds = %for.cond54
  %47 = load i16*, i16** %up, align 8, !dbg !10359
  %incdec.ptr62 = getelementptr inbounds i16, i16* %47, i32 1, !dbg !10359
  store i16* %incdec.ptr62, i16** %up, align 8, !dbg !10359
  %48 = load i16*, i16** %up, align 8, !dbg !10360
  %49 = load i16, i16* %48, align 2, !dbg !10361
  %conv63 = zext i16 %49 to i32, !dbg !10361
  store i32 %conv63, i32* %quot, align 4, !dbg !10362
  %50 = load i32, i32* %quot, align 4, !dbg !10363
  %51 = load i32, i32* %cut, align 4, !dbg !10363
  %shr64 = lshr i32 %50, %51, !dbg !10363
  %52 = load i32, i32* %cut, align 4, !dbg !10363
  %idxprom65 = sext i32 %52 to i64, !dbg !10363
  %arrayidx66 = getelementptr inbounds [5 x i32], [5 x i32]* @multies, i64 0, i64 %idxprom65, !dbg !10363
  %53 = load i32, i32* %arrayidx66, align 4, !dbg !10363
  %mul67 = mul i32 %shr64, %53, !dbg !10363
  %shr68 = lshr i32 %mul67, 17, !dbg !10363
  store i32 %shr68, i32* %quot, align 4, !dbg !10364
  %54 = load i16*, i16** %up, align 8, !dbg !10365
  %55 = load i16, i16* %54, align 2, !dbg !10366
  %conv69 = zext i16 %55 to i32, !dbg !10366
  %56 = load i32, i32* %quot, align 4, !dbg !10367
  %57 = load i32, i32* %cut, align 4, !dbg !10368
  %idxprom70 = sext i32 %57 to i64, !dbg !10369
  %arrayidx71 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom70, !dbg !10369
  %58 = load i32, i32* %arrayidx71, align 4, !dbg !10369
  %mul72 = mul i32 %56, %58, !dbg !10370
  %sub73 = sub i32 %conv69, %mul72, !dbg !10371
  store i32 %sub73, i32* %rem, align 4, !dbg !10372
  %59 = load i16*, i16** %target, align 8, !dbg !10373
  %60 = load i16, i16* %59, align 2, !dbg !10374
  %conv74 = zext i16 %60 to i32, !dbg !10374
  %61 = load i32, i32* %rem, align 4, !dbg !10375
  %62 = load i32, i32* %cut, align 4, !dbg !10376
  %sub75 = sub nsw i32 3, %62, !dbg !10377
  %idxprom76 = sext i32 %sub75 to i64, !dbg !10378
  %arrayidx77 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom76, !dbg !10378
  %63 = load i32, i32* %arrayidx77, align 4, !dbg !10378
  %mul78 = mul i32 %61, %63, !dbg !10379
  %add79 = add i32 %conv74, %mul78, !dbg !10380
  %conv80 = trunc i32 %add79 to i16, !dbg !10381
  %64 = load i16*, i16** %target, align 8, !dbg !10382
  store i16 %conv80, i16* %64, align 2, !dbg !10383
  %65 = load i32, i32* %cut, align 4, !dbg !10384
  %66 = load i32, i32* %count, align 4, !dbg !10385
  %sub81 = sub nsw i32 %66, %65, !dbg !10385
  store i32 %sub81, i32* %count, align 4, !dbg !10385
  %67 = load i32, i32* %count, align 4, !dbg !10386
  %cmp82 = icmp sle i32 %67, 0, !dbg !10388
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !10389

if.then84:                                        ; preds = %if.end61
  br label %for.end88, !dbg !10390

if.end85:                                         ; preds = %if.end61
  br label %for.inc86, !dbg !10391

for.inc86:                                        ; preds = %if.end85
  %68 = load i16*, i16** %target, align 8, !dbg !10392
  %incdec.ptr87 = getelementptr inbounds i16, i16* %68, i32 1, !dbg !10392
  store i16* %incdec.ptr87, i16** %target, align 8, !dbg !10392
  br label %for.cond54, !dbg !10393, !llvm.loop !10394

for.end88:                                        ; preds = %if.then84, %if.then60
  %69 = load i16*, i16** %target, align 8, !dbg !10397
  %70 = load i16*, i16** %uar.addr, align 8, !dbg !10398
  %sub.ptr.lhs.cast89 = ptrtoint i16* %69 to i64, !dbg !10399
  %sub.ptr.rhs.cast90 = ptrtoint i16* %70 to i64, !dbg !10399
  %sub.ptr.sub91 = sub i64 %sub.ptr.lhs.cast89, %sub.ptr.rhs.cast90, !dbg !10399
  %sub.ptr.div92 = sdiv exact i64 %sub.ptr.sub91, 2, !dbg !10399
  %add93 = add nsw i64 %sub.ptr.div92, 1, !dbg !10400
  %conv94 = trunc i64 %add93 to i32, !dbg !10397
  store i32 %conv94, i32* %retval, align 4, !dbg !10401
  br label %return, !dbg !10401

return:                                           ; preds = %for.end88, %for.end, %if.then2, %if.then
  %71 = load i32, i32* %retval, align 4, !dbg !10402
  ret i32 %71, !dbg !10402
}

; Function Attrs: noinline nounwind uwtable
define internal void @decReverse(i16* %ulo, i16* %uhi) #0 !dbg !10403 {
entry:
  %ulo.addr = alloca i16*, align 8
  %uhi.addr = alloca i16*, align 8
  %temp = alloca i16, align 2
  store i16* %ulo, i16** %ulo.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %ulo.addr, metadata !10406, metadata !DIExpression()), !dbg !10407
  store i16* %uhi, i16** %uhi.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %uhi.addr, metadata !10408, metadata !DIExpression()), !dbg !10409
  call void @llvm.dbg.declare(metadata i16* %temp, metadata !10410, metadata !DIExpression()), !dbg !10411
  br label %for.cond, !dbg !10412

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i16*, i16** %ulo.addr, align 8, !dbg !10413
  %1 = load i16*, i16** %uhi.addr, align 8, !dbg !10416
  %cmp = icmp ult i16* %0, %1, !dbg !10417
  br i1 %cmp, label %for.body, label %for.end, !dbg !10418

for.body:                                         ; preds = %for.cond
  %2 = load i16*, i16** %ulo.addr, align 8, !dbg !10419
  %3 = load i16, i16* %2, align 2, !dbg !10421
  store i16 %3, i16* %temp, align 2, !dbg !10422
  %4 = load i16*, i16** %uhi.addr, align 8, !dbg !10423
  %5 = load i16, i16* %4, align 2, !dbg !10424
  %6 = load i16*, i16** %ulo.addr, align 8, !dbg !10425
  store i16 %5, i16* %6, align 2, !dbg !10426
  %7 = load i16, i16* %temp, align 2, !dbg !10427
  %8 = load i16*, i16** %uhi.addr, align 8, !dbg !10428
  store i16 %7, i16* %8, align 2, !dbg !10429
  br label %for.inc, !dbg !10430

for.inc:                                          ; preds = %for.body
  %9 = load i16*, i16** %ulo.addr, align 8, !dbg !10431
  %incdec.ptr = getelementptr inbounds i16, i16* %9, i32 1, !dbg !10431
  store i16* %incdec.ptr, i16** %ulo.addr, align 8, !dbg !10431
  %10 = load i16*, i16** %uhi.addr, align 8, !dbg !10432
  %incdec.ptr1 = getelementptr inbounds i16, i16* %10, i32 -1, !dbg !10432
  store i16* %incdec.ptr1, i16** %uhi.addr, align 8, !dbg !10432
  br label %for.cond, !dbg !10433, !llvm.loop !10434

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10436
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberSameQuantum(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs) #0 !dbg !10437 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %ret = alloca i16, align 2
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !10438, metadata !DIExpression()), !dbg !10439
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !10440, metadata !DIExpression()), !dbg !10441
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !10442, metadata !DIExpression()), !dbg !10443
  call void @llvm.dbg.declare(metadata i16* %ret, metadata !10444, metadata !DIExpression()), !dbg !10445
  store i16 0, i16* %ret, align 2, !dbg !10445
  %0 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !10446
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 2, !dbg !10446
  %1 = load i8, i8* %bits, align 4, !dbg !10446
  %conv = zext i8 %1 to i32, !dbg !10446
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10446
  %bits1 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 2, !dbg !10446
  %3 = load i8, i8* %bits1, align 4, !dbg !10446
  %conv2 = zext i8 %3 to i32, !dbg !10446
  %or = or i32 %conv, %conv2, !dbg !10446
  %and = and i32 %or, 112, !dbg !10446
  %tobool = icmp ne i32 %and, 0, !dbg !10446
  br i1 %tobool, label %if.then, label %if.else26, !dbg !10448

if.then:                                          ; preds = %entry
  %4 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !10449
  %bits3 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 2, !dbg !10449
  %5 = load i8, i8* %bits3, align 4, !dbg !10449
  %conv4 = zext i8 %5 to i32, !dbg !10449
  %and5 = and i32 %conv4, 48, !dbg !10449
  %cmp = icmp ne i32 %and5, 0, !dbg !10449
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !10452

land.lhs.true:                                    ; preds = %if.then
  %6 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10453
  %bits7 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %6, i32 0, i32 2, !dbg !10453
  %7 = load i8, i8* %bits7, align 4, !dbg !10453
  %conv8 = zext i8 %7 to i32, !dbg !10453
  %and9 = and i32 %conv8, 48, !dbg !10453
  %cmp10 = icmp ne i32 %and9, 0, !dbg !10453
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !10454

if.then12:                                        ; preds = %land.lhs.true
  store i16 1, i16* %ret, align 2, !dbg !10455
  br label %if.end25, !dbg !10456

if.else:                                          ; preds = %land.lhs.true, %if.then
  %8 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !10457
  %bits13 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i32 0, i32 2, !dbg !10457
  %9 = load i8, i8* %bits13, align 4, !dbg !10457
  %conv14 = zext i8 %9 to i32, !dbg !10457
  %and15 = and i32 %conv14, 64, !dbg !10457
  %cmp16 = icmp ne i32 %and15, 0, !dbg !10457
  br i1 %cmp16, label %land.lhs.true18, label %if.end, !dbg !10459

land.lhs.true18:                                  ; preds = %if.else
  %10 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10460
  %bits19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %10, i32 0, i32 2, !dbg !10460
  %11 = load i8, i8* %bits19, align 4, !dbg !10460
  %conv20 = zext i8 %11 to i32, !dbg !10460
  %and21 = and i32 %conv20, 64, !dbg !10460
  %cmp22 = icmp ne i32 %and21, 0, !dbg !10460
  br i1 %cmp22, label %if.then24, label %if.end, !dbg !10461

if.then24:                                        ; preds = %land.lhs.true18
  store i16 1, i16* %ret, align 2, !dbg !10462
  br label %if.end, !dbg !10463

if.end:                                           ; preds = %if.then24, %land.lhs.true18, %if.else
  br label %if.end25

if.end25:                                         ; preds = %if.end, %if.then12
  br label %if.end32, !dbg !10464

if.else26:                                        ; preds = %entry
  %12 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !10465
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %12, i32 0, i32 1, !dbg !10467
  %13 = load i32, i32* %exponent, align 4, !dbg !10467
  %14 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10468
  %exponent27 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %14, i32 0, i32 1, !dbg !10469
  %15 = load i32, i32* %exponent27, align 4, !dbg !10469
  %cmp28 = icmp eq i32 %13, %15, !dbg !10470
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !10471

if.then30:                                        ; preds = %if.else26
  store i16 1, i16* %ret, align 2, !dbg !10472
  br label %if.end31, !dbg !10473

if.end31:                                         ; preds = %if.then30, %if.else26
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.end25
  %16 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10474
  %call = call %struct.decNumber* @decNumberZero(%struct.decNumber* %16), !dbg !10475
  %17 = load i16, i16* %ret, align 2, !dbg !10476
  %18 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10477
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %18, i32 0, i32 3, !dbg !10478
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !10479
  store i16 %17, i16* %arraydecay, align 2, !dbg !10480
  %19 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10481
  ret %struct.decNumber* %19, !dbg !10482
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberScaleB(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !10483 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %reqexp = alloca i32, align 4
  %status = alloca i32, align 4
  %residue = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !10484, metadata !DIExpression()), !dbg !10485
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !10486, metadata !DIExpression()), !dbg !10487
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !10488, metadata !DIExpression()), !dbg !10489
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !10490, metadata !DIExpression()), !dbg !10491
  call void @llvm.dbg.declare(metadata i32* %reqexp, metadata !10492, metadata !DIExpression()), !dbg !10493
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10494, metadata !DIExpression()), !dbg !10495
  store i32 0, i32* %status, align 4, !dbg !10495
  call void @llvm.dbg.declare(metadata i32* %residue, metadata !10496, metadata !DIExpression()), !dbg !10497
  %0 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !10498
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 2, !dbg !10498
  %1 = load i8, i8* %bits, align 4, !dbg !10498
  %conv = zext i8 %1 to i32, !dbg !10498
  %and = and i32 %conv, 48, !dbg !10498
  %cmp = icmp ne i32 %and, 0, !dbg !10498
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10500

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10501
  %bits2 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 2, !dbg !10501
  %3 = load i8, i8* %bits2, align 4, !dbg !10501
  %conv3 = zext i8 %3 to i32, !dbg !10501
  %and4 = and i32 %conv3, 48, !dbg !10501
  %cmp5 = icmp ne i32 %and4, 0, !dbg !10501
  br i1 %cmp5, label %if.then, label %if.else, !dbg !10502

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10503
  %5 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !10504
  %6 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10505
  %7 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !10506
  %call = call %struct.decNumber* @decNaNs(%struct.decNumber* %4, %struct.decNumber* %5, %struct.decNumber* %6, %struct.decContext* %7, i32* %status), !dbg !10507
  br label %if.end43, !dbg !10507

if.else:                                          ; preds = %lor.lhs.false
  %8 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10508
  %bits7 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i32 0, i32 2, !dbg !10508
  %9 = load i8, i8* %bits7, align 4, !dbg !10508
  %conv8 = zext i8 %9 to i32, !dbg !10508
  %and9 = and i32 %conv8, 64, !dbg !10508
  %cmp10 = icmp ne i32 %and9, 0, !dbg !10508
  br i1 %cmp10, label %if.then15, label %lor.lhs.false12, !dbg !10510

lor.lhs.false12:                                  ; preds = %if.else
  %10 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10511
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %10, i32 0, i32 1, !dbg !10512
  %11 = load i32, i32* %exponent, align 4, !dbg !10512
  %cmp13 = icmp ne i32 %11, 0, !dbg !10513
  br i1 %cmp13, label %if.then15, label %if.else16, !dbg !10514

if.then15:                                        ; preds = %lor.lhs.false12, %if.else
  store i32 128, i32* %status, align 4, !dbg !10515
  br label %if.end42, !dbg !10516

if.else16:                                        ; preds = %lor.lhs.false12
  %12 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10517
  %call17 = call i32 @decGetInt(%struct.decNumber* %12), !dbg !10519
  store i32 %call17, i32* %reqexp, align 4, !dbg !10520
  %13 = load i32, i32* %reqexp, align 4, !dbg !10521
  %cmp18 = icmp eq i32 %13, -2147483648, !dbg !10523
  br i1 %cmp18, label %if.then30, label %lor.lhs.false20, !dbg !10524

lor.lhs.false20:                                  ; preds = %if.else16
  %14 = load i32, i32* %reqexp, align 4, !dbg !10525
  %cmp21 = icmp eq i32 %14, -2147483645, !dbg !10526
  br i1 %cmp21, label %if.then30, label %lor.lhs.false23, !dbg !10527

lor.lhs.false23:                                  ; preds = %lor.lhs.false20
  %15 = load i32, i32* %reqexp, align 4, !dbg !10528
  %cmp24 = icmp eq i32 %15, -2147483646, !dbg !10529
  br i1 %cmp24, label %if.then30, label %lor.lhs.false26, !dbg !10530

lor.lhs.false26:                                  ; preds = %lor.lhs.false23
  %16 = load i32, i32* %reqexp, align 4, !dbg !10531
  %call27 = call i32 @abs(i32 %16) #7, !dbg !10532
  %17 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !10533
  %digits = getelementptr inbounds %struct.decContext, %struct.decContext* %17, i32 0, i32 0, !dbg !10534
  %18 = load i32, i32* %digits, align 4, !dbg !10534
  %19 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !10535
  %emax = getelementptr inbounds %struct.decContext, %struct.decContext* %19, i32 0, i32 1, !dbg !10536
  %20 = load i32, i32* %emax, align 4, !dbg !10536
  %add = add nsw i32 %18, %20, !dbg !10537
  %mul = mul nsw i32 2, %add, !dbg !10538
  %cmp28 = icmp sgt i32 %call27, %mul, !dbg !10539
  br i1 %cmp28, label %if.then30, label %if.else31, !dbg !10540

if.then30:                                        ; preds = %lor.lhs.false26, %lor.lhs.false23, %lor.lhs.false20, %if.else16
  store i32 128, i32* %status, align 4, !dbg !10541
  br label %if.end41, !dbg !10542

if.else31:                                        ; preds = %lor.lhs.false26
  %21 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10543
  %22 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !10545
  %call32 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %21, %struct.decNumber* %22), !dbg !10546
  %23 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10547
  %bits33 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %23, i32 0, i32 2, !dbg !10547
  %24 = load i8, i8* %bits33, align 4, !dbg !10547
  %conv34 = zext i8 %24 to i32, !dbg !10547
  %and35 = and i32 %conv34, 64, !dbg !10547
  %cmp36 = icmp ne i32 %and35, 0, !dbg !10547
  br i1 %cmp36, label %if.end, label %if.then38, !dbg !10549

if.then38:                                        ; preds = %if.else31
  %25 = load i32, i32* %reqexp, align 4, !dbg !10550
  %26 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10552
  %exponent39 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %26, i32 0, i32 1, !dbg !10553
  %27 = load i32, i32* %exponent39, align 4, !dbg !10554
  %add40 = add nsw i32 %27, %25, !dbg !10554
  store i32 %add40, i32* %exponent39, align 4, !dbg !10554
  store i32 0, i32* %residue, align 4, !dbg !10555
  %28 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10556
  %29 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !10557
  call void @decFinalize(%struct.decNumber* %28, %struct.decContext* %29, i32* %residue, i32* %status), !dbg !10558
  br label %if.end, !dbg !10559

if.end:                                           ; preds = %if.then38, %if.else31
  br label %if.end41

if.end41:                                         ; preds = %if.end, %if.then30
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then15
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then
  %30 = load i32, i32* %status, align 4, !dbg !10560
  %cmp44 = icmp ne i32 %30, 0, !dbg !10562
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !10563

if.then46:                                        ; preds = %if.end43
  %31 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10564
  %32 = load i32, i32* %status, align 4, !dbg !10565
  %33 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !10566
  call void @decStatus(%struct.decNumber* %31, i32 %32, %struct.decContext* %33), !dbg !10567
  br label %if.end47, !dbg !10567

if.end47:                                         ; preds = %if.then46, %if.end43
  %34 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10568
  ret %struct.decNumber* %34, !dbg !10569
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberShift(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !10570 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status = alloca i32, align 4
  %shift = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !10571, metadata !DIExpression()), !dbg !10572
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !10573, metadata !DIExpression()), !dbg !10574
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !10575, metadata !DIExpression()), !dbg !10576
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !10577, metadata !DIExpression()), !dbg !10578
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10579, metadata !DIExpression()), !dbg !10580
  store i32 0, i32* %status, align 4, !dbg !10580
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !10581, metadata !DIExpression()), !dbg !10582
  %0 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !10583
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 2, !dbg !10583
  %1 = load i8, i8* %bits, align 4, !dbg !10583
  %conv = zext i8 %1 to i32, !dbg !10583
  %and = and i32 %conv, 48, !dbg !10583
  %cmp = icmp ne i32 %and, 0, !dbg !10583
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10585

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10586
  %bits2 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 2, !dbg !10586
  %3 = load i8, i8* %bits2, align 4, !dbg !10586
  %conv3 = zext i8 %3 to i32, !dbg !10586
  %and4 = and i32 %conv3, 48, !dbg !10586
  %cmp5 = icmp ne i32 %and4, 0, !dbg !10586
  br i1 %cmp5, label %if.then, label %if.else, !dbg !10587

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10588
  %5 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !10589
  %6 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10590
  %7 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !10591
  %call = call %struct.decNumber* @decNaNs(%struct.decNumber* %4, %struct.decNumber* %5, %struct.decNumber* %6, %struct.decContext* %7, i32* %status), !dbg !10592
  br label %if.end104, !dbg !10592

if.else:                                          ; preds = %lor.lhs.false
  %8 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10593
  %bits7 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i32 0, i32 2, !dbg !10593
  %9 = load i8, i8* %bits7, align 4, !dbg !10593
  %conv8 = zext i8 %9 to i32, !dbg !10593
  %and9 = and i32 %conv8, 64, !dbg !10593
  %cmp10 = icmp ne i32 %and9, 0, !dbg !10593
  br i1 %cmp10, label %if.then15, label %lor.lhs.false12, !dbg !10595

lor.lhs.false12:                                  ; preds = %if.else
  %10 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10596
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %10, i32 0, i32 1, !dbg !10597
  %11 = load i32, i32* %exponent, align 4, !dbg !10597
  %cmp13 = icmp ne i32 %11, 0, !dbg !10598
  br i1 %cmp13, label %if.then15, label %if.else16, !dbg !10599

if.then15:                                        ; preds = %lor.lhs.false12, %if.else
  store i32 128, i32* %status, align 4, !dbg !10600
  br label %if.end103, !dbg !10601

if.else16:                                        ; preds = %lor.lhs.false12
  %12 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10602
  %call17 = call i32 @decGetInt(%struct.decNumber* %12), !dbg !10604
  store i32 %call17, i32* %shift, align 4, !dbg !10605
  %13 = load i32, i32* %shift, align 4, !dbg !10606
  %cmp18 = icmp eq i32 %13, -2147483648, !dbg !10608
  br i1 %cmp18, label %if.then30, label %lor.lhs.false20, !dbg !10609

lor.lhs.false20:                                  ; preds = %if.else16
  %14 = load i32, i32* %shift, align 4, !dbg !10610
  %cmp21 = icmp eq i32 %14, -2147483645, !dbg !10611
  br i1 %cmp21, label %if.then30, label %lor.lhs.false23, !dbg !10612

lor.lhs.false23:                                  ; preds = %lor.lhs.false20
  %15 = load i32, i32* %shift, align 4, !dbg !10613
  %cmp24 = icmp eq i32 %15, -2147483646, !dbg !10614
  br i1 %cmp24, label %if.then30, label %lor.lhs.false26, !dbg !10615

lor.lhs.false26:                                  ; preds = %lor.lhs.false23
  %16 = load i32, i32* %shift, align 4, !dbg !10616
  %call27 = call i32 @abs(i32 %16) #7, !dbg !10617
  %17 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !10618
  %digits = getelementptr inbounds %struct.decContext, %struct.decContext* %17, i32 0, i32 0, !dbg !10619
  %18 = load i32, i32* %digits, align 4, !dbg !10619
  %cmp28 = icmp sgt i32 %call27, %18, !dbg !10620
  br i1 %cmp28, label %if.then30, label %if.else31, !dbg !10621

if.then30:                                        ; preds = %lor.lhs.false26, %lor.lhs.false23, %lor.lhs.false20, %if.else16
  store i32 128, i32* %status, align 4, !dbg !10622
  br label %if.end102, !dbg !10623

if.else31:                                        ; preds = %lor.lhs.false26
  %19 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10624
  %20 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !10626
  %call32 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %19, %struct.decNumber* %20), !dbg !10627
  %21 = load i32, i32* %shift, align 4, !dbg !10628
  %cmp33 = icmp ne i32 %21, 0, !dbg !10630
  br i1 %cmp33, label %land.lhs.true, label %if.end101, !dbg !10631

land.lhs.true:                                    ; preds = %if.else31
  %22 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10632
  %bits35 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %22, i32 0, i32 2, !dbg !10632
  %23 = load i8, i8* %bits35, align 4, !dbg !10632
  %conv36 = zext i8 %23 to i32, !dbg !10632
  %and37 = and i32 %conv36, 64, !dbg !10632
  %cmp38 = icmp ne i32 %and37, 0, !dbg !10632
  br i1 %cmp38, label %if.end101, label %if.then40, !dbg !10633

if.then40:                                        ; preds = %land.lhs.true
  %24 = load i32, i32* %shift, align 4, !dbg !10634
  %cmp41 = icmp sgt i32 %24, 0, !dbg !10637
  br i1 %cmp41, label %if.then43, label %if.else74, !dbg !10638

if.then43:                                        ; preds = %if.then40
  %25 = load i32, i32* %shift, align 4, !dbg !10639
  %26 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !10642
  %digits44 = getelementptr inbounds %struct.decContext, %struct.decContext* %26, i32 0, i32 0, !dbg !10643
  %27 = load i32, i32* %digits44, align 4, !dbg !10643
  %cmp45 = icmp eq i32 %25, %27, !dbg !10644
  br i1 %cmp45, label %if.then47, label %if.else49, !dbg !10645

if.then47:                                        ; preds = %if.then43
  %28 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10646
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %28, i32 0, i32 3, !dbg !10648
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !10649
  store i16 0, i16* %arraydecay, align 2, !dbg !10650
  %29 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10651
  %digits48 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %29, i32 0, i32 0, !dbg !10652
  store i32 1, i32* %digits48, align 4, !dbg !10653
  br label %if.end73, !dbg !10654

if.else49:                                        ; preds = %if.then43
  %30 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10655
  %digits50 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %30, i32 0, i32 0, !dbg !10658
  %31 = load i32, i32* %digits50, align 4, !dbg !10658
  %32 = load i32, i32* %shift, align 4, !dbg !10659
  %add = add nsw i32 %31, %32, !dbg !10660
  %33 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !10661
  %digits51 = getelementptr inbounds %struct.decContext, %struct.decContext* %33, i32 0, i32 0, !dbg !10662
  %34 = load i32, i32* %digits51, align 4, !dbg !10662
  %cmp52 = icmp sgt i32 %add, %34, !dbg !10663
  br i1 %cmp52, label %if.then54, label %if.end, !dbg !10664

if.then54:                                        ; preds = %if.else49
  %35 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10665
  %36 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10667
  %digits55 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %36, i32 0, i32 0, !dbg !10668
  %37 = load i32, i32* %digits55, align 4, !dbg !10668
  %38 = load i32, i32* %shift, align 4, !dbg !10669
  %add56 = add nsw i32 %37, %38, !dbg !10670
  %39 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !10671
  %digits57 = getelementptr inbounds %struct.decContext, %struct.decContext* %39, i32 0, i32 0, !dbg !10672
  %40 = load i32, i32* %digits57, align 4, !dbg !10672
  %sub = sub nsw i32 %add56, %40, !dbg !10673
  %call58 = call %struct.decNumber* @decDecap(%struct.decNumber* %35, i32 %sub), !dbg !10674
  br label %if.end, !dbg !10675

if.end:                                           ; preds = %if.then54, %if.else49
  %41 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10676
  %digits59 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %41, i32 0, i32 0, !dbg !10678
  %42 = load i32, i32* %digits59, align 4, !dbg !10678
  %cmp60 = icmp sgt i32 %42, 1, !dbg !10679
  br i1 %cmp60, label %if.then66, label %lor.lhs.false62, !dbg !10680

lor.lhs.false62:                                  ; preds = %if.end
  %43 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10681
  %lsu63 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %43, i32 0, i32 3, !dbg !10682
  %arraydecay64 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu63, i64 0, i64 0, !dbg !10683
  %44 = load i16, i16* %arraydecay64, align 2, !dbg !10683
  %conv65 = zext i16 %44 to i32, !dbg !10683
  %tobool = icmp ne i32 %conv65, 0, !dbg !10683
  br i1 %tobool, label %if.then66, label %if.end72, !dbg !10684

if.then66:                                        ; preds = %lor.lhs.false62, %if.end
  %45 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10685
  %lsu67 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %45, i32 0, i32 3, !dbg !10686
  %arraydecay68 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu67, i64 0, i64 0, !dbg !10685
  %46 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10687
  %digits69 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %46, i32 0, i32 0, !dbg !10688
  %47 = load i32, i32* %digits69, align 4, !dbg !10688
  %48 = load i32, i32* %shift, align 4, !dbg !10689
  %call70 = call i32 @decShiftToMost(i16* %arraydecay68, i32 %47, i32 %48), !dbg !10690
  %49 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10691
  %digits71 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %49, i32 0, i32 0, !dbg !10692
  store i32 %call70, i32* %digits71, align 4, !dbg !10693
  br label %if.end72, !dbg !10691

if.end72:                                         ; preds = %if.then66, %lor.lhs.false62
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.then47
  br label %if.end100, !dbg !10694

if.else74:                                        ; preds = %if.then40
  %50 = load i32, i32* %shift, align 4, !dbg !10695
  %sub75 = sub nsw i32 0, %50, !dbg !10698
  %51 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10699
  %digits76 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %51, i32 0, i32 0, !dbg !10700
  %52 = load i32, i32* %digits76, align 4, !dbg !10700
  %cmp77 = icmp sge i32 %sub75, %52, !dbg !10701
  br i1 %cmp77, label %if.then79, label %if.else83, !dbg !10702

if.then79:                                        ; preds = %if.else74
  %53 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10703
  %lsu80 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %53, i32 0, i32 3, !dbg !10705
  %arraydecay81 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu80, i64 0, i64 0, !dbg !10706
  store i16 0, i16* %arraydecay81, align 2, !dbg !10707
  %54 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10708
  %digits82 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %54, i32 0, i32 0, !dbg !10709
  store i32 1, i32* %digits82, align 4, !dbg !10710
  br label %if.end99, !dbg !10711

if.else83:                                        ; preds = %if.else74
  %55 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10712
  %lsu84 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %55, i32 0, i32 3, !dbg !10714
  %arraydecay85 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu84, i64 0, i64 0, !dbg !10712
  %56 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10715
  %digits86 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %56, i32 0, i32 0, !dbg !10715
  %57 = load i32, i32* %digits86, align 4, !dbg !10715
  %cmp87 = icmp sle i32 %57, 49, !dbg !10715
  br i1 %cmp87, label %cond.true, label %cond.false, !dbg !10715

cond.true:                                        ; preds = %if.else83
  %58 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10715
  %digits89 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %58, i32 0, i32 0, !dbg !10715
  %59 = load i32, i32* %digits89, align 4, !dbg !10715
  %idxprom = sext i32 %59 to i64, !dbg !10715
  %arrayidx = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom, !dbg !10715
  %60 = load i8, i8* %arrayidx, align 1, !dbg !10715
  %conv90 = zext i8 %60 to i32, !dbg !10715
  br label %cond.end, !dbg !10715

cond.false:                                       ; preds = %if.else83
  %61 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10715
  %digits91 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %61, i32 0, i32 0, !dbg !10715
  %62 = load i32, i32* %digits91, align 4, !dbg !10715
  %add92 = add nsw i32 %62, 3, !dbg !10715
  %sub93 = sub nsw i32 %add92, 1, !dbg !10715
  %div = sdiv i32 %sub93, 3, !dbg !10715
  br label %cond.end, !dbg !10715

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv90, %cond.true ], [ %div, %cond.false ], !dbg !10715
  %63 = load i32, i32* %shift, align 4, !dbg !10716
  %sub94 = sub nsw i32 0, %63, !dbg !10717
  %call95 = call i32 @decShiftToLeast(i16* %arraydecay85, i32 %cond, i32 %sub94), !dbg !10718
  %64 = load i32, i32* %shift, align 4, !dbg !10719
  %sub96 = sub nsw i32 0, %64, !dbg !10720
  %65 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10721
  %digits97 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %65, i32 0, i32 0, !dbg !10722
  %66 = load i32, i32* %digits97, align 4, !dbg !10723
  %sub98 = sub nsw i32 %66, %sub96, !dbg !10723
  store i32 %sub98, i32* %digits97, align 4, !dbg !10723
  br label %if.end99

if.end99:                                         ; preds = %cond.end, %if.then79
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end73
  br label %if.end101, !dbg !10724

if.end101:                                        ; preds = %if.end100, %land.lhs.true, %if.else31
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.then30
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.then15
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.then
  %67 = load i32, i32* %status, align 4, !dbg !10725
  %cmp105 = icmp ne i32 %67, 0, !dbg !10727
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !10728

if.then107:                                       ; preds = %if.end104
  %68 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10729
  %69 = load i32, i32* %status, align 4, !dbg !10730
  %70 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !10731
  call void @decStatus(%struct.decNumber* %68, i32 %69, %struct.decContext* %70), !dbg !10732
  br label %if.end108, !dbg !10732

if.end108:                                        ; preds = %if.then107, %if.end104
  %71 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10733
  ret %struct.decNumber* %71, !dbg !10734
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.decNumber* @decDecap(%struct.decNumber* %dn, i32 %drop) #0 !dbg !10735 {
entry:
  %retval = alloca %struct.decNumber*, align 8
  %dn.addr = alloca %struct.decNumber*, align 8
  %drop.addr = alloca i32, align 4
  %msu = alloca i16*, align 8
  %cut = alloca i32, align 4
  store %struct.decNumber* %dn, %struct.decNumber** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dn.addr, metadata !10736, metadata !DIExpression()), !dbg !10737
  store i32 %drop, i32* %drop.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %drop.addr, metadata !10738, metadata !DIExpression()), !dbg !10739
  call void @llvm.dbg.declare(metadata i16** %msu, metadata !10740, metadata !DIExpression()), !dbg !10741
  call void @llvm.dbg.declare(metadata i32* %cut, metadata !10742, metadata !DIExpression()), !dbg !10743
  %0 = load i32, i32* %drop.addr, align 4, !dbg !10744
  %1 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !10746
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i32 0, i32 0, !dbg !10747
  %2 = load i32, i32* %digits, align 4, !dbg !10747
  %cmp = icmp sge i32 %0, %2, !dbg !10748
  br i1 %cmp, label %if.then, label %if.end, !dbg !10749

if.then:                                          ; preds = %entry
  %3 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !10750
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %3, i32 0, i32 3, !dbg !10752
  %arrayidx = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !10750
  store i16 0, i16* %arrayidx, align 2, !dbg !10753
  %4 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !10754
  %digits1 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 0, !dbg !10755
  store i32 1, i32* %digits1, align 4, !dbg !10756
  %5 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !10757
  store %struct.decNumber* %5, %struct.decNumber** %retval, align 8, !dbg !10758
  br label %return, !dbg !10758

if.end:                                           ; preds = %entry
  %6 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !10759
  %lsu2 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %6, i32 0, i32 3, !dbg !10760
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu2, i64 0, i64 0, !dbg !10759
  %7 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !10761
  %digits3 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %7, i32 0, i32 0, !dbg !10761
  %8 = load i32, i32* %digits3, align 4, !dbg !10761
  %9 = load i32, i32* %drop.addr, align 4, !dbg !10761
  %sub = sub nsw i32 %8, %9, !dbg !10761
  %cmp4 = icmp sle i32 %sub, 49, !dbg !10761
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !10761

cond.true:                                        ; preds = %if.end
  %10 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !10761
  %digits5 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %10, i32 0, i32 0, !dbg !10761
  %11 = load i32, i32* %digits5, align 4, !dbg !10761
  %12 = load i32, i32* %drop.addr, align 4, !dbg !10761
  %sub6 = sub nsw i32 %11, %12, !dbg !10761
  %idxprom = sext i32 %sub6 to i64, !dbg !10761
  %arrayidx7 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom, !dbg !10761
  %13 = load i8, i8* %arrayidx7, align 1, !dbg !10761
  %conv = zext i8 %13 to i32, !dbg !10761
  br label %cond.end, !dbg !10761

cond.false:                                       ; preds = %if.end
  %14 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !10761
  %digits8 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %14, i32 0, i32 0, !dbg !10761
  %15 = load i32, i32* %digits8, align 4, !dbg !10761
  %16 = load i32, i32* %drop.addr, align 4, !dbg !10761
  %sub9 = sub nsw i32 %15, %16, !dbg !10761
  %add = add nsw i32 %sub9, 3, !dbg !10761
  %sub10 = sub nsw i32 %add, 1, !dbg !10761
  %div = sdiv i32 %sub10, 3, !dbg !10761
  br label %cond.end, !dbg !10761

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %div, %cond.false ], !dbg !10761
  %idx.ext = sext i32 %cond to i64, !dbg !10762
  %add.ptr = getelementptr inbounds i16, i16* %arraydecay, i64 %idx.ext, !dbg !10762
  %add.ptr11 = getelementptr inbounds i16, i16* %add.ptr, i64 -1, !dbg !10763
  store i16* %add.ptr11, i16** %msu, align 8, !dbg !10764
  %17 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !10765
  %digits12 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %17, i32 0, i32 0, !dbg !10765
  %18 = load i32, i32* %digits12, align 4, !dbg !10765
  %19 = load i32, i32* %drop.addr, align 4, !dbg !10765
  %sub13 = sub nsw i32 %18, %19, !dbg !10765
  %20 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !10765
  %digits14 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %20, i32 0, i32 0, !dbg !10765
  %21 = load i32, i32* %digits14, align 4, !dbg !10765
  %22 = load i32, i32* %drop.addr, align 4, !dbg !10765
  %sub15 = sub nsw i32 %21, %22, !dbg !10765
  %cmp16 = icmp sle i32 %sub15, 49, !dbg !10765
  br i1 %cmp16, label %cond.true18, label %cond.false24, !dbg !10765

cond.true18:                                      ; preds = %cond.end
  %23 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !10765
  %digits19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %23, i32 0, i32 0, !dbg !10765
  %24 = load i32, i32* %digits19, align 4, !dbg !10765
  %25 = load i32, i32* %drop.addr, align 4, !dbg !10765
  %sub20 = sub nsw i32 %24, %25, !dbg !10765
  %idxprom21 = sext i32 %sub20 to i64, !dbg !10765
  %arrayidx22 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom21, !dbg !10765
  %26 = load i8, i8* %arrayidx22, align 1, !dbg !10765
  %conv23 = zext i8 %26 to i32, !dbg !10765
  br label %cond.end30, !dbg !10765

cond.false24:                                     ; preds = %cond.end
  %27 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !10765
  %digits25 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %27, i32 0, i32 0, !dbg !10765
  %28 = load i32, i32* %digits25, align 4, !dbg !10765
  %29 = load i32, i32* %drop.addr, align 4, !dbg !10765
  %sub26 = sub nsw i32 %28, %29, !dbg !10765
  %add27 = add nsw i32 %sub26, 3, !dbg !10765
  %sub28 = sub nsw i32 %add27, 1, !dbg !10765
  %div29 = sdiv i32 %sub28, 3, !dbg !10765
  br label %cond.end30, !dbg !10765

cond.end30:                                       ; preds = %cond.false24, %cond.true18
  %cond31 = phi i32 [ %conv23, %cond.true18 ], [ %div29, %cond.false24 ], !dbg !10765
  %sub32 = sub nsw i32 %cond31, 1, !dbg !10765
  %mul = mul nsw i32 %sub32, 3, !dbg !10765
  %sub33 = sub nsw i32 %sub13, %mul, !dbg !10765
  store i32 %sub33, i32* %cut, align 4, !dbg !10766
  %30 = load i32, i32* %cut, align 4, !dbg !10767
  %cmp34 = icmp ne i32 %30, 3, !dbg !10769
  br i1 %cmp34, label %if.then36, label %if.end41, !dbg !10770

if.then36:                                        ; preds = %cond.end30
  %31 = load i32, i32* %cut, align 4, !dbg !10771
  %idxprom37 = sext i32 %31 to i64, !dbg !10772
  %arrayidx38 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom37, !dbg !10772
  %32 = load i32, i32* %arrayidx38, align 4, !dbg !10772
  %33 = load i16*, i16** %msu, align 8, !dbg !10773
  %34 = load i16, i16* %33, align 2, !dbg !10774
  %conv39 = zext i16 %34 to i32, !dbg !10774
  %rem = urem i32 %conv39, %32, !dbg !10774
  %conv40 = trunc i32 %rem to i16, !dbg !10774
  store i16 %conv40, i16* %33, align 2, !dbg !10774
  br label %if.end41, !dbg !10775

if.end41:                                         ; preds = %if.then36, %cond.end30
  %35 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !10776
  %lsu42 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %35, i32 0, i32 3, !dbg !10777
  %arraydecay43 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu42, i64 0, i64 0, !dbg !10776
  %36 = load i16*, i16** %msu, align 8, !dbg !10778
  %37 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !10779
  %lsu44 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %37, i32 0, i32 3, !dbg !10780
  %arraydecay45 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu44, i64 0, i64 0, !dbg !10779
  %sub.ptr.lhs.cast = ptrtoint i16* %36 to i64, !dbg !10781
  %sub.ptr.rhs.cast = ptrtoint i16* %arraydecay45 to i64, !dbg !10781
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10781
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2, !dbg !10781
  %add46 = add nsw i64 %sub.ptr.div, 1, !dbg !10782
  %conv47 = trunc i64 %add46 to i32, !dbg !10778
  %call = call i32 @decGetDigits(i16* %arraydecay43, i32 %conv47), !dbg !10783
  %38 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !10784
  %digits48 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %38, i32 0, i32 0, !dbg !10785
  store i32 %call, i32* %digits48, align 4, !dbg !10786
  %39 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !10787
  store %struct.decNumber* %39, %struct.decNumber** %retval, align 8, !dbg !10788
  br label %return, !dbg !10788

return:                                           ; preds = %if.end41, %if.then
  %40 = load %struct.decNumber*, %struct.decNumber** %retval, align 8, !dbg !10789
  ret %struct.decNumber* %40, !dbg !10789
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberSquareRoot(%struct.decNumber* %res, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !10790 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %workset = alloca %struct.decContext, align 4
  %approxset = alloca %struct.decContext, align 4
  %dzero = alloca %struct.decNumber, align 4
  %maxp = alloca i32, align 4
  %workp = alloca i32, align 4
  %residue = alloca i32, align 4
  %status = alloca i32, align 4
  %ignore = alloca i32, align 4
  %rstatus = alloca i32, align 4
  %exp = alloca i32, align 4
  %ideal = alloca i32, align 4
  %needbytes = alloca i32, align 4
  %dropped = alloca i32, align 4
  %buff = alloca [3 x %struct.decNumber], align 16
  %bufa = alloca [3 x %struct.decNumber], align 16
  %bufb = alloca [3 x %struct.decNumber], align 16
  %allocbuff = alloca %struct.decNumber*, align 8
  %allocbufa = alloca %struct.decNumber*, align 8
  %allocbufb = alloca %struct.decNumber*, align 8
  %f = alloca %struct.decNumber*, align 8
  %a = alloca %struct.decNumber*, align 8
  %b = alloca %struct.decNumber*, align 8
  %buft = alloca [1 x %struct.decNumber], align 4
  %t = alloca %struct.decNumber*, align 8
  %mstatus = alloca i32, align 4
  %todrop = alloca i32, align 4
  %maxexp = alloca i32, align 4
  %maxdrop = alloca i32, align 4
  %ae = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !10791, metadata !DIExpression()), !dbg !10792
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !10793, metadata !DIExpression()), !dbg !10794
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !10795, metadata !DIExpression()), !dbg !10796
  call void @llvm.dbg.declare(metadata %struct.decContext* %workset, metadata !10797, metadata !DIExpression()), !dbg !10798
  call void @llvm.dbg.declare(metadata %struct.decContext* %approxset, metadata !10799, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.declare(metadata %struct.decNumber* %dzero, metadata !10801, metadata !DIExpression()), !dbg !10802
  call void @llvm.dbg.declare(metadata i32* %maxp, metadata !10803, metadata !DIExpression()), !dbg !10804
  call void @llvm.dbg.declare(metadata i32* %workp, metadata !10805, metadata !DIExpression()), !dbg !10806
  call void @llvm.dbg.declare(metadata i32* %residue, metadata !10807, metadata !DIExpression()), !dbg !10808
  store i32 0, i32* %residue, align 4, !dbg !10808
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10809, metadata !DIExpression()), !dbg !10810
  store i32 0, i32* %status, align 4, !dbg !10810
  call void @llvm.dbg.declare(metadata i32* %ignore, metadata !10811, metadata !DIExpression()), !dbg !10812
  store i32 0, i32* %ignore, align 4, !dbg !10812
  call void @llvm.dbg.declare(metadata i32* %rstatus, metadata !10813, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.declare(metadata i32* %exp, metadata !10815, metadata !DIExpression()), !dbg !10816
  call void @llvm.dbg.declare(metadata i32* %ideal, metadata !10817, metadata !DIExpression()), !dbg !10818
  call void @llvm.dbg.declare(metadata i32* %needbytes, metadata !10819, metadata !DIExpression()), !dbg !10820
  call void @llvm.dbg.declare(metadata i32* %dropped, metadata !10821, metadata !DIExpression()), !dbg !10822
  call void @llvm.dbg.declare(metadata [3 x %struct.decNumber]* %buff, metadata !10823, metadata !DIExpression()), !dbg !10824
  call void @llvm.dbg.declare(metadata [3 x %struct.decNumber]* %bufa, metadata !10825, metadata !DIExpression()), !dbg !10826
  call void @llvm.dbg.declare(metadata [3 x %struct.decNumber]* %bufb, metadata !10827, metadata !DIExpression()), !dbg !10828
  call void @llvm.dbg.declare(metadata %struct.decNumber** %allocbuff, metadata !10829, metadata !DIExpression()), !dbg !10830
  store %struct.decNumber* null, %struct.decNumber** %allocbuff, align 8, !dbg !10830
  call void @llvm.dbg.declare(metadata %struct.decNumber** %allocbufa, metadata !10831, metadata !DIExpression()), !dbg !10832
  store %struct.decNumber* null, %struct.decNumber** %allocbufa, align 8, !dbg !10832
  call void @llvm.dbg.declare(metadata %struct.decNumber** %allocbufb, metadata !10833, metadata !DIExpression()), !dbg !10834
  store %struct.decNumber* null, %struct.decNumber** %allocbufb, align 8, !dbg !10834
  call void @llvm.dbg.declare(metadata %struct.decNumber** %f, metadata !10835, metadata !DIExpression()), !dbg !10836
  %arraydecay = getelementptr inbounds [3 x %struct.decNumber], [3 x %struct.decNumber]* %buff, i64 0, i64 0, !dbg !10837
  store %struct.decNumber* %arraydecay, %struct.decNumber** %f, align 8, !dbg !10836
  call void @llvm.dbg.declare(metadata %struct.decNumber** %a, metadata !10838, metadata !DIExpression()), !dbg !10839
  %arraydecay1 = getelementptr inbounds [3 x %struct.decNumber], [3 x %struct.decNumber]* %bufa, i64 0, i64 0, !dbg !10840
  store %struct.decNumber* %arraydecay1, %struct.decNumber** %a, align 8, !dbg !10839
  call void @llvm.dbg.declare(metadata %struct.decNumber** %b, metadata !10841, metadata !DIExpression()), !dbg !10842
  %arraydecay2 = getelementptr inbounds [3 x %struct.decNumber], [3 x %struct.decNumber]* %bufb, i64 0, i64 0, !dbg !10843
  store %struct.decNumber* %arraydecay2, %struct.decNumber** %b, align 8, !dbg !10842
  call void @llvm.dbg.declare(metadata [1 x %struct.decNumber]* %buft, metadata !10844, metadata !DIExpression()), !dbg !10846
  call void @llvm.dbg.declare(metadata %struct.decNumber** %t, metadata !10847, metadata !DIExpression()), !dbg !10848
  %arraydecay3 = getelementptr inbounds [1 x %struct.decNumber], [1 x %struct.decNumber]* %buft, i64 0, i64 0, !dbg !10849
  store %struct.decNumber* %arraydecay3, %struct.decNumber** %t, align 8, !dbg !10848
  br label %do.body, !dbg !10850

do.body:                                          ; preds = %entry
  %0 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10851
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 2, !dbg !10851
  %1 = load i8, i8* %bits, align 4, !dbg !10851
  %conv = zext i8 %1 to i32, !dbg !10851
  %and = and i32 %conv, 112, !dbg !10851
  %tobool = icmp ne i32 %and, 0, !dbg !10851
  br i1 %tobool, label %if.then, label %if.end18, !dbg !10854

if.then:                                          ; preds = %do.body
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10855
  %bits4 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 2, !dbg !10855
  %3 = load i8, i8* %bits4, align 4, !dbg !10855
  %conv5 = zext i8 %3 to i32, !dbg !10855
  %and6 = and i32 %conv5, 64, !dbg !10855
  %cmp = icmp ne i32 %and6, 0, !dbg !10855
  br i1 %cmp, label %if.then8, label %if.else15, !dbg !10858

if.then8:                                         ; preds = %if.then
  %4 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10859
  %bits9 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 2, !dbg !10859
  %5 = load i8, i8* %bits9, align 4, !dbg !10859
  %conv10 = zext i8 %5 to i32, !dbg !10859
  %and11 = and i32 %conv10, 128, !dbg !10859
  %cmp12 = icmp ne i32 %and11, 0, !dbg !10859
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !10862

if.then14:                                        ; preds = %if.then8
  %6 = load i32, i32* %status, align 4, !dbg !10863
  %or = or i32 %6, 128, !dbg !10863
  store i32 %or, i32* %status, align 4, !dbg !10863
  br label %if.end, !dbg !10864

if.else:                                          ; preds = %if.then8
  %7 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10865
  %8 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10866
  %call = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %7, %struct.decNumber* %8), !dbg !10867
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then14
  br label %if.end17, !dbg !10868

if.else15:                                        ; preds = %if.then
  %9 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10869
  %10 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10870
  %11 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !10871
  %call16 = call %struct.decNumber* @decNaNs(%struct.decNumber* %9, %struct.decNumber* %10, %struct.decNumber* null, %struct.decContext* %11, i32* %status), !dbg !10872
  br label %if.end17

if.end17:                                         ; preds = %if.else15, %if.end
  br label %do.end, !dbg !10873

if.end18:                                         ; preds = %do.body
  %12 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10874
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %12, i32 0, i32 1, !dbg !10875
  %13 = load i32, i32* %exponent, align 4, !dbg !10875
  %and19 = and i32 %13, -2, !dbg !10876
  %div = sdiv i32 %and19, 2, !dbg !10877
  store i32 %div, i32* %ideal, align 4, !dbg !10878
  %14 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10879
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %14, i32 0, i32 3, !dbg !10879
  %arraydecay20 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !10879
  %15 = load i16, i16* %arraydecay20, align 2, !dbg !10879
  %conv21 = zext i16 %15 to i32, !dbg !10879
  %cmp22 = icmp eq i32 %conv21, 0, !dbg !10879
  br i1 %cmp22, label %land.lhs.true, label %if.end35, !dbg !10879

land.lhs.true:                                    ; preds = %if.end18
  %16 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10879
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %16, i32 0, i32 0, !dbg !10879
  %17 = load i32, i32* %digits, align 4, !dbg !10879
  %cmp24 = icmp eq i32 %17, 1, !dbg !10879
  br i1 %cmp24, label %land.lhs.true26, label %if.end35, !dbg !10879

land.lhs.true26:                                  ; preds = %land.lhs.true
  %18 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10879
  %bits27 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %18, i32 0, i32 2, !dbg !10879
  %19 = load i8, i8* %bits27, align 4, !dbg !10879
  %conv28 = zext i8 %19 to i32, !dbg !10879
  %and29 = and i32 %conv28, 112, !dbg !10879
  %cmp30 = icmp eq i32 %and29, 0, !dbg !10879
  br i1 %cmp30, label %if.then32, label %if.end35, !dbg !10881

if.then32:                                        ; preds = %land.lhs.true26
  %20 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10882
  %21 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10884
  %call33 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %20, %struct.decNumber* %21), !dbg !10885
  %22 = load i32, i32* %ideal, align 4, !dbg !10886
  %23 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10887
  %exponent34 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %23, i32 0, i32 1, !dbg !10888
  store i32 %22, i32* %exponent34, align 4, !dbg !10889
  %24 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !10890
  %25 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !10890
  call void @decFinalize(%struct.decNumber* %24, %struct.decContext* %25, i32* %residue, i32* %status), !dbg !10890
  br label %do.end, !dbg !10891

if.end35:                                         ; preds = %land.lhs.true26, %land.lhs.true, %if.end18
  %26 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10892
  %bits36 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %26, i32 0, i32 2, !dbg !10892
  %27 = load i8, i8* %bits36, align 4, !dbg !10892
  %conv37 = zext i8 %27 to i32, !dbg !10892
  %and38 = and i32 %conv37, 128, !dbg !10892
  %cmp39 = icmp ne i32 %and38, 0, !dbg !10892
  br i1 %cmp39, label %if.then41, label %if.end43, !dbg !10894

if.then41:                                        ; preds = %if.end35
  %28 = load i32, i32* %status, align 4, !dbg !10895
  %or42 = or i32 %28, 128, !dbg !10895
  store i32 %or42, i32* %status, align 4, !dbg !10895
  br label %do.end, !dbg !10897

if.end43:                                         ; preds = %if.end35
  %29 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !10898
  %digits44 = getelementptr inbounds %struct.decContext, %struct.decContext* %29, i32 0, i32 0, !dbg !10898
  %30 = load i32, i32* %digits44, align 4, !dbg !10898
  %add = add nsw i32 %30, 1, !dbg !10898
  %31 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10898
  %digits45 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %31, i32 0, i32 0, !dbg !10898
  %32 = load i32, i32* %digits45, align 4, !dbg !10898
  %cmp46 = icmp slt i32 %add, %32, !dbg !10898
  br i1 %cmp46, label %cond.true, label %cond.false, !dbg !10898

cond.true:                                        ; preds = %if.end43
  %33 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10898
  %digits48 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %33, i32 0, i32 0, !dbg !10898
  %34 = load i32, i32* %digits48, align 4, !dbg !10898
  br label %cond.end, !dbg !10898

cond.false:                                       ; preds = %if.end43
  %35 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !10898
  %digits49 = getelementptr inbounds %struct.decContext, %struct.decContext* %35, i32 0, i32 0, !dbg !10898
  %36 = load i32, i32* %digits49, align 4, !dbg !10898
  %add50 = add nsw i32 %36, 1, !dbg !10898
  br label %cond.end, !dbg !10898

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %34, %cond.true ], [ %add50, %cond.false ], !dbg !10898
  store i32 %cond, i32* %workp, align 4, !dbg !10899
  %37 = load i32, i32* %workp, align 4, !dbg !10900
  %cmp51 = icmp slt i32 %37, 7, !dbg !10900
  br i1 %cmp51, label %cond.true53, label %cond.false54, !dbg !10900

cond.true53:                                      ; preds = %cond.end
  br label %cond.end55, !dbg !10900

cond.false54:                                     ; preds = %cond.end
  %38 = load i32, i32* %workp, align 4, !dbg !10900
  br label %cond.end55, !dbg !10900

cond.end55:                                       ; preds = %cond.false54, %cond.true53
  %cond56 = phi i32 [ 7, %cond.true53 ], [ %38, %cond.false54 ], !dbg !10900
  store i32 %cond56, i32* %workp, align 4, !dbg !10901
  %39 = load i32, i32* %workp, align 4, !dbg !10902
  %add57 = add nsw i32 %39, 2, !dbg !10903
  store i32 %add57, i32* %maxp, align 4, !dbg !10904
  %40 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10905
  %digits58 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %40, i32 0, i32 0, !dbg !10905
  %41 = load i32, i32* %digits58, align 4, !dbg !10905
  %cmp59 = icmp sle i32 %41, 49, !dbg !10905
  br i1 %cmp59, label %cond.true61, label %cond.false64, !dbg !10905

cond.true61:                                      ; preds = %cond.end55
  %42 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10905
  %digits62 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %42, i32 0, i32 0, !dbg !10905
  %43 = load i32, i32* %digits62, align 4, !dbg !10905
  %idxprom = sext i32 %43 to i64, !dbg !10905
  %arrayidx = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom, !dbg !10905
  %44 = load i8, i8* %arrayidx, align 1, !dbg !10905
  %conv63 = zext i8 %44 to i32, !dbg !10905
  br label %cond.end68, !dbg !10905

cond.false64:                                     ; preds = %cond.end55
  %45 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10905
  %digits65 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %45, i32 0, i32 0, !dbg !10905
  %46 = load i32, i32* %digits65, align 4, !dbg !10905
  %add66 = add nsw i32 %46, 3, !dbg !10905
  %sub = sub nsw i32 %add66, 1, !dbg !10905
  %div67 = sdiv i32 %sub, 3, !dbg !10905
  br label %cond.end68, !dbg !10905

cond.end68:                                       ; preds = %cond.false64, %cond.true61
  %cond69 = phi i32 [ %conv63, %cond.true61 ], [ %div67, %cond.false64 ], !dbg !10905
  %sub70 = sub nsw i32 %cond69, 1, !dbg !10906
  %conv71 = sext i32 %sub70 to i64, !dbg !10907
  %mul = mul i64 %conv71, 2, !dbg !10908
  %add72 = add i64 12, %mul, !dbg !10909
  %conv73 = trunc i64 %add72 to i32, !dbg !10910
  store i32 %conv73, i32* %needbytes, align 4, !dbg !10911
  %47 = load i32, i32* %needbytes, align 4, !dbg !10912
  %cmp74 = icmp sgt i32 %47, 36, !dbg !10914
  br i1 %cmp74, label %if.then76, label %if.end84, !dbg !10915

if.then76:                                        ; preds = %cond.end68
  %48 = load i32, i32* %needbytes, align 4, !dbg !10916
  %conv77 = sext i32 %48 to i64, !dbg !10916
  %call78 = call noalias i8* @malloc(i64 %conv77) #6, !dbg !10918
  %49 = bitcast i8* %call78 to %struct.decNumber*, !dbg !10919
  store %struct.decNumber* %49, %struct.decNumber** %allocbuff, align 8, !dbg !10920
  %50 = load %struct.decNumber*, %struct.decNumber** %allocbuff, align 8, !dbg !10921
  %cmp79 = icmp eq %struct.decNumber* %50, null, !dbg !10923
  br i1 %cmp79, label %if.then81, label %if.end83, !dbg !10924

if.then81:                                        ; preds = %if.then76
  %51 = load i32, i32* %status, align 4, !dbg !10925
  %or82 = or i32 %51, 16, !dbg !10925
  store i32 %or82, i32* %status, align 4, !dbg !10925
  br label %do.end, !dbg !10927

if.end83:                                         ; preds = %if.then76
  %52 = load %struct.decNumber*, %struct.decNumber** %allocbuff, align 8, !dbg !10928
  store %struct.decNumber* %52, %struct.decNumber** %f, align 8, !dbg !10929
  br label %if.end84, !dbg !10930

if.end84:                                         ; preds = %if.end83, %cond.end68
  %53 = load i32, i32* %maxp, align 4, !dbg !10931
  %cmp85 = icmp sle i32 %53, 49, !dbg !10931
  br i1 %cmp85, label %cond.true87, label %cond.false91, !dbg !10931

cond.true87:                                      ; preds = %if.end84
  %54 = load i32, i32* %maxp, align 4, !dbg !10931
  %idxprom88 = sext i32 %54 to i64, !dbg !10931
  %arrayidx89 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom88, !dbg !10931
  %55 = load i8, i8* %arrayidx89, align 1, !dbg !10931
  %conv90 = zext i8 %55 to i32, !dbg !10931
  br label %cond.end95, !dbg !10931

cond.false91:                                     ; preds = %if.end84
  %56 = load i32, i32* %maxp, align 4, !dbg !10931
  %add92 = add nsw i32 %56, 3, !dbg !10931
  %sub93 = sub nsw i32 %add92, 1, !dbg !10931
  %div94 = sdiv i32 %sub93, 3, !dbg !10931
  br label %cond.end95, !dbg !10931

cond.end95:                                       ; preds = %cond.false91, %cond.true87
  %cond96 = phi i32 [ %conv90, %cond.true87 ], [ %div94, %cond.false91 ], !dbg !10931
  %sub97 = sub nsw i32 %cond96, 1, !dbg !10932
  %conv98 = sext i32 %sub97 to i64, !dbg !10933
  %mul99 = mul i64 %conv98, 2, !dbg !10934
  %add100 = add i64 12, %mul99, !dbg !10935
  %conv101 = trunc i64 %add100 to i32, !dbg !10936
  store i32 %conv101, i32* %needbytes, align 4, !dbg !10937
  %57 = load i32, i32* %needbytes, align 4, !dbg !10938
  %cmp102 = icmp sgt i32 %57, 36, !dbg !10940
  br i1 %cmp102, label %if.then104, label %if.end116, !dbg !10941

if.then104:                                       ; preds = %cond.end95
  %58 = load i32, i32* %needbytes, align 4, !dbg !10942
  %conv105 = sext i32 %58 to i64, !dbg !10942
  %call106 = call noalias i8* @malloc(i64 %conv105) #6, !dbg !10944
  %59 = bitcast i8* %call106 to %struct.decNumber*, !dbg !10945
  store %struct.decNumber* %59, %struct.decNumber** %allocbufa, align 8, !dbg !10946
  %60 = load i32, i32* %needbytes, align 4, !dbg !10947
  %conv107 = sext i32 %60 to i64, !dbg !10947
  %call108 = call noalias i8* @malloc(i64 %conv107) #6, !dbg !10948
  %61 = bitcast i8* %call108 to %struct.decNumber*, !dbg !10949
  store %struct.decNumber* %61, %struct.decNumber** %allocbufb, align 8, !dbg !10950
  %62 = load %struct.decNumber*, %struct.decNumber** %allocbufa, align 8, !dbg !10951
  %cmp109 = icmp eq %struct.decNumber* %62, null, !dbg !10953
  br i1 %cmp109, label %if.then113, label %lor.lhs.false, !dbg !10954

lor.lhs.false:                                    ; preds = %if.then104
  %63 = load %struct.decNumber*, %struct.decNumber** %allocbufb, align 8, !dbg !10955
  %cmp111 = icmp eq %struct.decNumber* %63, null, !dbg !10956
  br i1 %cmp111, label %if.then113, label %if.end115, !dbg !10957

if.then113:                                       ; preds = %lor.lhs.false, %if.then104
  %64 = load i32, i32* %status, align 4, !dbg !10958
  %or114 = or i32 %64, 16, !dbg !10958
  store i32 %or114, i32* %status, align 4, !dbg !10958
  br label %do.end, !dbg !10960

if.end115:                                        ; preds = %lor.lhs.false
  %65 = load %struct.decNumber*, %struct.decNumber** %allocbufa, align 8, !dbg !10961
  store %struct.decNumber* %65, %struct.decNumber** %a, align 8, !dbg !10962
  %66 = load %struct.decNumber*, %struct.decNumber** %allocbufb, align 8, !dbg !10963
  store %struct.decNumber* %66, %struct.decNumber** %b, align 8, !dbg !10964
  br label %if.end116, !dbg !10965

if.end116:                                        ; preds = %if.end115, %cond.end95
  %67 = load %struct.decNumber*, %struct.decNumber** %f, align 8, !dbg !10966
  %68 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !10967
  %call117 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %67, %struct.decNumber* %68), !dbg !10968
  %69 = load %struct.decNumber*, %struct.decNumber** %f, align 8, !dbg !10969
  %exponent118 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %69, i32 0, i32 1, !dbg !10970
  %70 = load i32, i32* %exponent118, align 4, !dbg !10970
  %71 = load %struct.decNumber*, %struct.decNumber** %f, align 8, !dbg !10971
  %digits119 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %71, i32 0, i32 0, !dbg !10972
  %72 = load i32, i32* %digits119, align 4, !dbg !10972
  %add120 = add nsw i32 %70, %72, !dbg !10973
  store i32 %add120, i32* %exp, align 4, !dbg !10974
  %73 = load %struct.decNumber*, %struct.decNumber** %f, align 8, !dbg !10975
  %digits121 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %73, i32 0, i32 0, !dbg !10976
  %74 = load i32, i32* %digits121, align 4, !dbg !10976
  %sub122 = sub nsw i32 0, %74, !dbg !10977
  %75 = load %struct.decNumber*, %struct.decNumber** %f, align 8, !dbg !10978
  %exponent123 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %75, i32 0, i32 1, !dbg !10979
  store i32 %sub122, i32* %exponent123, align 4, !dbg !10980
  %call124 = call %struct.decContext* @decContextDefault(%struct.decContext* %workset, i32 64), !dbg !10981
  %emax = getelementptr inbounds %struct.decContext, %struct.decContext* %workset, i32 0, i32 1, !dbg !10982
  store i32 999999999, i32* %emax, align 4, !dbg !10983
  %emin = getelementptr inbounds %struct.decContext, %struct.decContext* %workset, i32 0, i32 2, !dbg !10984
  store i32 -999999999, i32* %emin, align 4, !dbg !10985
  %76 = load i32, i32* %workp, align 4, !dbg !10986
  %digits125 = getelementptr inbounds %struct.decContext, %struct.decContext* %workset, i32 0, i32 0, !dbg !10987
  store i32 %76, i32* %digits125, align 4, !dbg !10988
  %77 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !10989
  %bits126 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %77, i32 0, i32 2, !dbg !10990
  store i8 0, i8* %bits126, align 4, !dbg !10991
  %78 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !10992
  %digits127 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %78, i32 0, i32 0, !dbg !10993
  store i32 3, i32* %digits127, align 4, !dbg !10994
  %79 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !10995
  %bits128 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %79, i32 0, i32 2, !dbg !10996
  store i8 0, i8* %bits128, align 4, !dbg !10997
  %80 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !10998
  %digits129 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %80, i32 0, i32 0, !dbg !10999
  store i32 3, i32* %digits129, align 4, !dbg !11000
  %81 = load i32, i32* %exp, align 4, !dbg !11001
  %and130 = and i32 %81, 1, !dbg !11003
  %cmp131 = icmp eq i32 %and130, 0, !dbg !11004
  br i1 %cmp131, label %if.then133, label %if.else140, !dbg !11005

if.then133:                                       ; preds = %if.end116
  %82 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !11006
  %exponent134 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %82, i32 0, i32 1, !dbg !11008
  store i32 -3, i32* %exponent134, align 4, !dbg !11009
  %83 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11010
  %exponent135 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %83, i32 0, i32 1, !dbg !11011
  store i32 -3, i32* %exponent135, align 4, !dbg !11012
  %84 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !11013
  %lsu136 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %84, i32 0, i32 3, !dbg !11014
  %arrayidx137 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu136, i64 0, i64 0, !dbg !11013
  store i16 259, i16* %arrayidx137, align 2, !dbg !11015
  %85 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11016
  %lsu138 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %85, i32 0, i32 3, !dbg !11017
  %arrayidx139 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu138, i64 0, i64 0, !dbg !11016
  store i16 819, i16* %arrayidx139, align 2, !dbg !11018
  br label %if.end148, !dbg !11019

if.else140:                                       ; preds = %if.end116
  %86 = load %struct.decNumber*, %struct.decNumber** %f, align 8, !dbg !11020
  %exponent141 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %86, i32 0, i32 1, !dbg !11022
  %87 = load i32, i32* %exponent141, align 4, !dbg !11023
  %dec = add nsw i32 %87, -1, !dbg !11023
  store i32 %dec, i32* %exponent141, align 4, !dbg !11023
  %88 = load i32, i32* %exp, align 4, !dbg !11024
  %inc = add nsw i32 %88, 1, !dbg !11024
  store i32 %inc, i32* %exp, align 4, !dbg !11024
  %89 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !11025
  %exponent142 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %89, i32 0, i32 1, !dbg !11026
  store i32 -4, i32* %exponent142, align 4, !dbg !11027
  %90 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11028
  %exponent143 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %90, i32 0, i32 1, !dbg !11029
  store i32 -2, i32* %exponent143, align 4, !dbg !11030
  %91 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !11031
  %lsu144 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %91, i32 0, i32 3, !dbg !11032
  %arrayidx145 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu144, i64 0, i64 0, !dbg !11031
  store i16 819, i16* %arrayidx145, align 2, !dbg !11033
  %92 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11034
  %lsu146 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %92, i32 0, i32 3, !dbg !11035
  %arrayidx147 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu146, i64 0, i64 0, !dbg !11034
  store i16 259, i16* %arrayidx147, align 2, !dbg !11036
  br label %if.end148

if.end148:                                        ; preds = %if.else140, %if.then133
  %93 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11037
  %94 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11038
  %95 = load %struct.decNumber*, %struct.decNumber** %f, align 8, !dbg !11039
  %call149 = call %struct.decNumber* @decMultiplyOp(%struct.decNumber* %93, %struct.decNumber* %94, %struct.decNumber* %95, %struct.decContext* %workset, i32* %ignore), !dbg !11040
  %96 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11041
  %97 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11042
  %98 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !11043
  %call150 = call %struct.decNumber* @decAddOp(%struct.decNumber* %96, %struct.decNumber* %97, %struct.decNumber* %98, %struct.decContext* %workset, i8 zeroext 0, i32* %ignore), !dbg !11044
  %call151 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %dzero), !dbg !11045
  %99 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !11046
  %call152 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %99), !dbg !11047
  %100 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !11048
  %lsu153 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %100, i32 0, i32 3, !dbg !11049
  %arrayidx154 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu153, i64 0, i64 0, !dbg !11048
  store i16 5, i16* %arrayidx154, align 2, !dbg !11050
  %101 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !11051
  %exponent155 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %101, i32 0, i32 1, !dbg !11052
  store i32 -1, i32* %exponent155, align 4, !dbg !11053
  %digits156 = getelementptr inbounds %struct.decContext, %struct.decContext* %workset, i32 0, i32 0, !dbg !11054
  store i32 3, i32* %digits156, align 4, !dbg !11055
  br label %for.cond, !dbg !11056

for.cond:                                         ; preds = %cond.end170, %if.end148
  %digits157 = getelementptr inbounds %struct.decContext, %struct.decContext* %workset, i32 0, i32 0, !dbg !11057
  %102 = load i32, i32* %digits157, align 4, !dbg !11057
  %103 = load i32, i32* %maxp, align 4, !dbg !11060
  %cmp158 = icmp slt i32 %102, %103, !dbg !11061
  br i1 %cmp158, label %for.body, label %for.end, !dbg !11062

for.body:                                         ; preds = %for.cond
  %digits160 = getelementptr inbounds %struct.decContext, %struct.decContext* %workset, i32 0, i32 0, !dbg !11063
  %104 = load i32, i32* %digits160, align 4, !dbg !11063
  %mul161 = mul nsw i32 %104, 2, !dbg !11063
  %sub162 = sub nsw i32 %mul161, 2, !dbg !11063
  %105 = load i32, i32* %maxp, align 4, !dbg !11063
  %cmp163 = icmp sgt i32 %sub162, %105, !dbg !11063
  br i1 %cmp163, label %cond.true165, label %cond.false166, !dbg !11063

cond.true165:                                     ; preds = %for.body
  %106 = load i32, i32* %maxp, align 4, !dbg !11063
  br label %cond.end170, !dbg !11063

cond.false166:                                    ; preds = %for.body
  %digits167 = getelementptr inbounds %struct.decContext, %struct.decContext* %workset, i32 0, i32 0, !dbg !11063
  %107 = load i32, i32* %digits167, align 4, !dbg !11063
  %mul168 = mul nsw i32 %107, 2, !dbg !11063
  %sub169 = sub nsw i32 %mul168, 2, !dbg !11063
  br label %cond.end170, !dbg !11063

cond.end170:                                      ; preds = %cond.false166, %cond.true165
  %cond171 = phi i32 [ %106, %cond.true165 ], [ %sub169, %cond.false166 ], !dbg !11063
  %digits172 = getelementptr inbounds %struct.decContext, %struct.decContext* %workset, i32 0, i32 0, !dbg !11065
  store i32 %cond171, i32* %digits172, align 4, !dbg !11066
  %108 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !11067
  %109 = load %struct.decNumber*, %struct.decNumber** %f, align 8, !dbg !11068
  %110 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11069
  %call173 = call %struct.decNumber* @decDivideOp(%struct.decNumber* %108, %struct.decNumber* %109, %struct.decNumber* %110, %struct.decContext* %workset, i8 zeroext -128, i32* %ignore), !dbg !11070
  %111 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !11071
  %112 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !11072
  %113 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11073
  %call174 = call %struct.decNumber* @decAddOp(%struct.decNumber* %111, %struct.decNumber* %112, %struct.decNumber* %113, %struct.decContext* %workset, i8 zeroext 0, i32* %ignore), !dbg !11074
  %114 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11075
  %115 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !11076
  %116 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !11077
  %call175 = call %struct.decNumber* @decMultiplyOp(%struct.decNumber* %114, %struct.decNumber* %115, %struct.decNumber* %116, %struct.decContext* %workset, i32* %ignore), !dbg !11078
  br label %for.cond, !dbg !11079, !llvm.loop !11080

for.end:                                          ; preds = %for.cond
  %117 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !11082
  %118 = bitcast %struct.decContext* %approxset to i8*, !dbg !11083
  %119 = bitcast %struct.decContext* %117 to i8*, !dbg !11083
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %118, i8* align 4 %119, i64 28, i1 false), !dbg !11083
  %round = getelementptr inbounds %struct.decContext, %struct.decContext* %approxset, i32 0, i32 3, !dbg !11084
  store i32 3, i32* %round, align 4, !dbg !11085
  %120 = load i32, i32* %exp, align 4, !dbg !11086
  %div176 = sdiv i32 %120, 2, !dbg !11087
  %121 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11088
  %exponent177 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %121, i32 0, i32 1, !dbg !11089
  %122 = load i32, i32* %exponent177, align 4, !dbg !11090
  %add178 = add nsw i32 %122, %div176, !dbg !11090
  store i32 %add178, i32* %exponent177, align 4, !dbg !11090
  store i32 0, i32* %rstatus, align 4, !dbg !11091
  store i32 0, i32* %residue, align 4, !dbg !11092
  %123 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11093
  %124 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11094
  call void @decCopyFit(%struct.decNumber* %123, %struct.decNumber* %124, %struct.decContext* %approxset, i32* %residue, i32* %rstatus), !dbg !11095
  %125 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11096
  call void @decFinalize(%struct.decNumber* %125, %struct.decContext* %approxset, i32* %residue, i32* %rstatus), !dbg !11096
  %126 = load i32, i32* %rstatus, align 4, !dbg !11097
  %and179 = and i32 %126, 512, !dbg !11099
  %tobool180 = icmp ne i32 %and179, 0, !dbg !11099
  br i1 %tobool180, label %if.then181, label %if.end183, !dbg !11100

if.then181:                                       ; preds = %for.end
  %127 = load i32, i32* %rstatus, align 4, !dbg !11101
  store i32 %127, i32* %status, align 4, !dbg !11103
  %128 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11104
  %129 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11105
  %call182 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %128, %struct.decNumber* %129), !dbg !11106
  br label %do.end, !dbg !11107

if.end183:                                        ; preds = %for.end
  %130 = load i32, i32* %rstatus, align 4, !dbg !11108
  %and184 = and i32 %130, -2081, !dbg !11109
  %131 = load i32, i32* %status, align 4, !dbg !11110
  %or185 = or i32 %131, %and184, !dbg !11110
  store i32 %or185, i32* %status, align 4, !dbg !11110
  %132 = load i32, i32* %exp, align 4, !dbg !11111
  %div186 = sdiv i32 %132, 2, !dbg !11112
  %133 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11113
  %exponent187 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %133, i32 0, i32 1, !dbg !11114
  %134 = load i32, i32* %exponent187, align 4, !dbg !11115
  %sub188 = sub nsw i32 %134, %div186, !dbg !11115
  store i32 %sub188, i32* %exponent187, align 4, !dbg !11115
  %digits189 = getelementptr inbounds %struct.decContext, %struct.decContext* %workset, i32 0, i32 0, !dbg !11116
  %135 = load i32, i32* %digits189, align 4, !dbg !11117
  %dec190 = add nsw i32 %135, -1, !dbg !11117
  store i32 %dec190, i32* %digits189, align 4, !dbg !11117
  %136 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11118
  %digits191 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %136, i32 0, i32 0, !dbg !11119
  %137 = load i32, i32* %digits191, align 4, !dbg !11119
  %sub192 = sub nsw i32 0, %137, !dbg !11120
  %sub193 = sub nsw i32 %sub192, 1, !dbg !11121
  %138 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !11122
  %exponent194 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %138, i32 0, i32 1, !dbg !11123
  store i32 %sub193, i32* %exponent194, align 4, !dbg !11124
  %139 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !11125
  %140 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11126
  %141 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !11127
  %call195 = call %struct.decNumber* @decAddOp(%struct.decNumber* %139, %struct.decNumber* %140, %struct.decNumber* %141, %struct.decContext* %workset, i8 zeroext -128, i32* %ignore), !dbg !11128
  %round196 = getelementptr inbounds %struct.decContext, %struct.decContext* %workset, i32 0, i32 3, !dbg !11129
  store i32 1, i32* %round196, align 4, !dbg !11130
  %142 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !11131
  %143 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !11132
  %144 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !11133
  %call197 = call %struct.decNumber* @decMultiplyOp(%struct.decNumber* %142, %struct.decNumber* %143, %struct.decNumber* %144, %struct.decContext* %workset, i32* %ignore), !dbg !11134
  %145 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !11135
  %146 = load %struct.decNumber*, %struct.decNumber** %f, align 8, !dbg !11136
  %147 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !11137
  %call198 = call %struct.decNumber* @decCompareOp(%struct.decNumber* %145, %struct.decNumber* %146, %struct.decNumber* %147, %struct.decContext* %workset, i8 zeroext 1, i32* %ignore), !dbg !11138
  %148 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !11139
  %bits199 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %148, i32 0, i32 2, !dbg !11139
  %149 = load i8, i8* %bits199, align 4, !dbg !11139
  %conv200 = zext i8 %149 to i32, !dbg !11139
  %and201 = and i32 %conv200, 128, !dbg !11139
  %cmp202 = icmp ne i32 %and201, 0, !dbg !11139
  br i1 %cmp202, label %if.then204, label %if.else217, !dbg !11141

if.then204:                                       ; preds = %if.end183
  %150 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !11142
  %exponent205 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %150, i32 0, i32 1, !dbg !11144
  %151 = load i32, i32* %exponent205, align 4, !dbg !11145
  %inc206 = add nsw i32 %151, 1, !dbg !11145
  store i32 %inc206, i32* %exponent205, align 4, !dbg !11145
  %152 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !11146
  %lsu207 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %152, i32 0, i32 3, !dbg !11147
  %arrayidx208 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu207, i64 0, i64 0, !dbg !11146
  store i16 1, i16* %arrayidx208, align 2, !dbg !11148
  %153 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11149
  %154 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11150
  %155 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !11151
  %call209 = call %struct.decNumber* @decAddOp(%struct.decNumber* %153, %struct.decNumber* %154, %struct.decNumber* %155, %struct.decContext* %workset, i8 zeroext -128, i32* %ignore), !dbg !11152
  %156 = load i32, i32* %exp, align 4, !dbg !11153
  %div210 = sdiv i32 %156, 2, !dbg !11154
  %emin211 = getelementptr inbounds %struct.decContext, %struct.decContext* %approxset, i32 0, i32 2, !dbg !11155
  %157 = load i32, i32* %emin211, align 4, !dbg !11156
  %sub212 = sub nsw i32 %157, %div210, !dbg !11156
  store i32 %sub212, i32* %emin211, align 4, !dbg !11156
  %158 = load i32, i32* %exp, align 4, !dbg !11157
  %div213 = sdiv i32 %158, 2, !dbg !11158
  %emax214 = getelementptr inbounds %struct.decContext, %struct.decContext* %approxset, i32 0, i32 1, !dbg !11159
  %159 = load i32, i32* %emax214, align 4, !dbg !11160
  %sub215 = sub nsw i32 %159, %div213, !dbg !11160
  store i32 %sub215, i32* %emax214, align 4, !dbg !11160
  %160 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11161
  %161 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11162
  %call216 = call %struct.decNumber* @decAddOp(%struct.decNumber* %160, %struct.decNumber* %dzero, %struct.decNumber* %161, %struct.decContext* %approxset, i8 zeroext 0, i32* %ignore), !dbg !11163
  br label %if.end241, !dbg !11164

if.else217:                                       ; preds = %if.end183
  %162 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !11165
  %163 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11167
  %164 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !11168
  %call218 = call %struct.decNumber* @decAddOp(%struct.decNumber* %162, %struct.decNumber* %163, %struct.decNumber* %164, %struct.decContext* %workset, i8 zeroext 0, i32* %ignore), !dbg !11169
  %round219 = getelementptr inbounds %struct.decContext, %struct.decContext* %workset, i32 0, i32 3, !dbg !11170
  store i32 5, i32* %round219, align 4, !dbg !11171
  %165 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !11172
  %166 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !11173
  %167 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !11174
  %call220 = call %struct.decNumber* @decMultiplyOp(%struct.decNumber* %165, %struct.decNumber* %166, %struct.decNumber* %167, %struct.decContext* %workset, i32* %ignore), !dbg !11175
  %168 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !11176
  %169 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !11177
  %170 = load %struct.decNumber*, %struct.decNumber** %f, align 8, !dbg !11178
  %call221 = call %struct.decNumber* @decCompareOp(%struct.decNumber* %168, %struct.decNumber* %169, %struct.decNumber* %170, %struct.decContext* %workset, i8 zeroext 1, i32* %ignore), !dbg !11179
  %171 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !11180
  %bits222 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %171, i32 0, i32 2, !dbg !11180
  %172 = load i8, i8* %bits222, align 4, !dbg !11180
  %conv223 = zext i8 %172 to i32, !dbg !11180
  %and224 = and i32 %conv223, 128, !dbg !11180
  %cmp225 = icmp ne i32 %and224, 0, !dbg !11180
  br i1 %cmp225, label %if.then227, label %if.end240, !dbg !11182

if.then227:                                       ; preds = %if.else217
  %173 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !11183
  %exponent228 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %173, i32 0, i32 1, !dbg !11185
  %174 = load i32, i32* %exponent228, align 4, !dbg !11186
  %inc229 = add nsw i32 %174, 1, !dbg !11186
  store i32 %inc229, i32* %exponent228, align 4, !dbg !11186
  %175 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !11187
  %lsu230 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %175, i32 0, i32 3, !dbg !11188
  %arrayidx231 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu230, i64 0, i64 0, !dbg !11187
  store i16 1, i16* %arrayidx231, align 2, !dbg !11189
  %176 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11190
  %177 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11191
  %178 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !11192
  %call232 = call %struct.decNumber* @decAddOp(%struct.decNumber* %176, %struct.decNumber* %177, %struct.decNumber* %178, %struct.decContext* %workset, i8 zeroext 0, i32* %ignore), !dbg !11193
  %179 = load i32, i32* %exp, align 4, !dbg !11194
  %div233 = sdiv i32 %179, 2, !dbg !11195
  %emin234 = getelementptr inbounds %struct.decContext, %struct.decContext* %approxset, i32 0, i32 2, !dbg !11196
  %180 = load i32, i32* %emin234, align 4, !dbg !11197
  %sub235 = sub nsw i32 %180, %div233, !dbg !11197
  store i32 %sub235, i32* %emin234, align 4, !dbg !11197
  %181 = load i32, i32* %exp, align 4, !dbg !11198
  %div236 = sdiv i32 %181, 2, !dbg !11199
  %emax237 = getelementptr inbounds %struct.decContext, %struct.decContext* %approxset, i32 0, i32 1, !dbg !11200
  %182 = load i32, i32* %emax237, align 4, !dbg !11201
  %sub238 = sub nsw i32 %182, %div236, !dbg !11201
  store i32 %sub238, i32* %emax237, align 4, !dbg !11201
  %183 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11202
  %184 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11203
  %call239 = call %struct.decNumber* @decAddOp(%struct.decNumber* %183, %struct.decNumber* %dzero, %struct.decNumber* %184, %struct.decContext* %approxset, i8 zeroext 0, i32* %ignore), !dbg !11204
  br label %if.end240, !dbg !11205

if.end240:                                        ; preds = %if.then227, %if.else217
  br label %if.end241

if.end241:                                        ; preds = %if.end240, %if.then204
  %185 = load i32, i32* %exp, align 4, !dbg !11206
  %div242 = sdiv i32 %185, 2, !dbg !11207
  %186 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11208
  %exponent243 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %186, i32 0, i32 1, !dbg !11209
  %187 = load i32, i32* %exponent243, align 4, !dbg !11210
  %add244 = add nsw i32 %187, %div242, !dbg !11210
  store i32 %add244, i32* %exponent243, align 4, !dbg !11210
  %188 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !11211
  %189 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11212
  %call245 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %188, %struct.decNumber* %189), !dbg !11213
  %190 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !11214
  %191 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !11215
  %call246 = call %struct.decNumber* @decTrim(%struct.decNumber* %190, %struct.decContext* %191, i8 zeroext 1, i8 zeroext 1, i32* %dropped), !dbg !11216
  %192 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !11217
  %digits247 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %192, i32 0, i32 0, !dbg !11219
  %193 = load i32, i32* %digits247, align 4, !dbg !11219
  %mul248 = mul nsw i32 %193, 2, !dbg !11220
  %sub249 = sub nsw i32 %mul248, 1, !dbg !11221
  %194 = load i32, i32* %workp, align 4, !dbg !11222
  %cmp250 = icmp sgt i32 %sub249, %194, !dbg !11223
  br i1 %cmp250, label %if.then252, label %if.else254, !dbg !11224

if.then252:                                       ; preds = %if.end241
  %195 = load i32, i32* %status, align 4, !dbg !11225
  %or253 = or i32 %195, 2080, !dbg !11225
  store i32 %or253, i32* %status, align 4, !dbg !11225
  br label %if.end335, !dbg !11227

if.else254:                                       ; preds = %if.end241
  call void @llvm.dbg.declare(metadata i32* %mstatus, metadata !11228, metadata !DIExpression()), !dbg !11230
  store i32 0, i32* %mstatus, align 4, !dbg !11230
  %196 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !11231
  %197 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !11232
  %198 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !11233
  %call255 = call %struct.decNumber* @decMultiplyOp(%struct.decNumber* %196, %struct.decNumber* %197, %struct.decNumber* %198, %struct.decContext* %workset, i32* %mstatus), !dbg !11234
  %199 = load i32, i32* %mstatus, align 4, !dbg !11235
  %and256 = and i32 %199, 512, !dbg !11237
  %tobool257 = icmp ne i32 %and256, 0, !dbg !11237
  br i1 %tobool257, label %if.then258, label %if.else260, !dbg !11238

if.then258:                                       ; preds = %if.else254
  %200 = load i32, i32* %status, align 4, !dbg !11239
  %or259 = or i32 %200, 2080, !dbg !11239
  store i32 %or259, i32* %status, align 4, !dbg !11239
  br label %if.end334, !dbg !11241

if.else260:                                       ; preds = %if.else254
  %201 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !11242
  %202 = load %struct.decNumber*, %struct.decNumber** %b, align 8, !dbg !11244
  %203 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !11245
  %call261 = call %struct.decNumber* @decCompareOp(%struct.decNumber* %201, %struct.decNumber* %202, %struct.decNumber* %203, %struct.decContext* %workset, i8 zeroext 1, i32* %mstatus), !dbg !11246
  %204 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !11247
  %lsu262 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %204, i32 0, i32 3, !dbg !11247
  %arraydecay263 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu262, i64 0, i64 0, !dbg !11247
  %205 = load i16, i16* %arraydecay263, align 2, !dbg !11247
  %conv264 = zext i16 %205 to i32, !dbg !11247
  %cmp265 = icmp eq i32 %conv264, 0, !dbg !11247
  br i1 %cmp265, label %land.lhs.true267, label %if.then277, !dbg !11247

land.lhs.true267:                                 ; preds = %if.else260
  %206 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !11247
  %digits268 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %206, i32 0, i32 0, !dbg !11247
  %207 = load i32, i32* %digits268, align 4, !dbg !11247
  %cmp269 = icmp eq i32 %207, 1, !dbg !11247
  br i1 %cmp269, label %land.lhs.true271, label %if.then277, !dbg !11247

land.lhs.true271:                                 ; preds = %land.lhs.true267
  %208 = load %struct.decNumber*, %struct.decNumber** %t, align 8, !dbg !11247
  %bits272 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %208, i32 0, i32 2, !dbg !11247
  %209 = load i8, i8* %bits272, align 4, !dbg !11247
  %conv273 = zext i8 %209 to i32, !dbg !11247
  %and274 = and i32 %conv273, 112, !dbg !11247
  %cmp275 = icmp eq i32 %and274, 0, !dbg !11247
  br i1 %cmp275, label %if.else279, label %if.then277, !dbg !11249

if.then277:                                       ; preds = %land.lhs.true271, %land.lhs.true267, %if.else260
  %210 = load i32, i32* %status, align 4, !dbg !11250
  %or278 = or i32 %210, 2080, !dbg !11250
  store i32 %or278, i32* %status, align 4, !dbg !11250
  br label %if.end333, !dbg !11251

if.else279:                                       ; preds = %land.lhs.true271
  call void @llvm.dbg.declare(metadata i32* %todrop, metadata !11252, metadata !DIExpression()), !dbg !11254
  %211 = load i32, i32* %ideal, align 4, !dbg !11255
  %212 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11256
  %exponent280 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %212, i32 0, i32 1, !dbg !11257
  %213 = load i32, i32* %exponent280, align 4, !dbg !11257
  %sub281 = sub nsw i32 %211, %213, !dbg !11258
  store i32 %sub281, i32* %todrop, align 4, !dbg !11254
  %214 = load i32, i32* %todrop, align 4, !dbg !11259
  %cmp282 = icmp slt i32 %214, 0, !dbg !11261
  br i1 %cmp282, label %if.then284, label %if.else286, !dbg !11262

if.then284:                                       ; preds = %if.else279
  %215 = load i32, i32* %status, align 4, !dbg !11263
  %or285 = or i32 %215, 2048, !dbg !11263
  store i32 %or285, i32* %status, align 4, !dbg !11263
  br label %if.end332, !dbg !11264

if.else286:                                       ; preds = %if.else279
  call void @llvm.dbg.declare(metadata i32* %maxexp, metadata !11265, metadata !DIExpression()), !dbg !11267
  %216 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !11268
  %emax287 = getelementptr inbounds %struct.decContext, %struct.decContext* %216, i32 0, i32 1, !dbg !11269
  %217 = load i32, i32* %emax287, align 4, !dbg !11269
  %218 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !11270
  %digits288 = getelementptr inbounds %struct.decContext, %struct.decContext* %218, i32 0, i32 0, !dbg !11271
  %219 = load i32, i32* %digits288, align 4, !dbg !11271
  %sub289 = sub nsw i32 %217, %219, !dbg !11272
  %add290 = add nsw i32 %sub289, 1, !dbg !11273
  store i32 %add290, i32* %maxexp, align 4, !dbg !11267
  call void @llvm.dbg.declare(metadata i32* %maxdrop, metadata !11274, metadata !DIExpression()), !dbg !11275
  %220 = load i32, i32* %maxexp, align 4, !dbg !11276
  %221 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11277
  %exponent291 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %221, i32 0, i32 1, !dbg !11278
  %222 = load i32, i32* %exponent291, align 4, !dbg !11278
  %sub292 = sub nsw i32 %220, %222, !dbg !11279
  store i32 %sub292, i32* %maxdrop, align 4, !dbg !11275
  %223 = load i32, i32* %todrop, align 4, !dbg !11280
  %224 = load i32, i32* %maxdrop, align 4, !dbg !11282
  %cmp293 = icmp sgt i32 %223, %224, !dbg !11283
  br i1 %cmp293, label %land.lhs.true295, label %if.end300, !dbg !11284

land.lhs.true295:                                 ; preds = %if.else286
  %225 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !11285
  %clamp = getelementptr inbounds %struct.decContext, %struct.decContext* %225, i32 0, i32 6, !dbg !11286
  %226 = load i8, i8* %clamp, align 4, !dbg !11286
  %conv296 = zext i8 %226 to i32, !dbg !11285
  %tobool297 = icmp ne i32 %conv296, 0, !dbg !11285
  br i1 %tobool297, label %if.then298, label %if.end300, !dbg !11287

if.then298:                                       ; preds = %land.lhs.true295
  %227 = load i32, i32* %maxdrop, align 4, !dbg !11288
  store i32 %227, i32* %todrop, align 4, !dbg !11290
  %228 = load i32, i32* %status, align 4, !dbg !11291
  %or299 = or i32 %228, 1024, !dbg !11291
  store i32 %or299, i32* %status, align 4, !dbg !11291
  br label %if.end300, !dbg !11292

if.end300:                                        ; preds = %if.then298, %land.lhs.true295, %if.else286
  %229 = load i32, i32* %dropped, align 4, !dbg !11293
  %230 = load i32, i32* %todrop, align 4, !dbg !11295
  %cmp301 = icmp slt i32 %229, %230, !dbg !11296
  br i1 %cmp301, label %if.then303, label %if.end305, !dbg !11297

if.then303:                                       ; preds = %if.end300
  %231 = load i32, i32* %dropped, align 4, !dbg !11298
  store i32 %231, i32* %todrop, align 4, !dbg !11300
  %232 = load i32, i32* %status, align 4, !dbg !11301
  %or304 = or i32 %232, 1024, !dbg !11301
  store i32 %or304, i32* %status, align 4, !dbg !11301
  br label %if.end305, !dbg !11302

if.end305:                                        ; preds = %if.then303, %if.end300
  %233 = load i32, i32* %todrop, align 4, !dbg !11303
  %cmp306 = icmp sgt i32 %233, 0, !dbg !11305
  br i1 %cmp306, label %if.then308, label %if.end331, !dbg !11306

if.then308:                                       ; preds = %if.end305
  %234 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11307
  %lsu309 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %234, i32 0, i32 3, !dbg !11309
  %arraydecay310 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu309, i64 0, i64 0, !dbg !11307
  %235 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11310
  %digits311 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %235, i32 0, i32 0, !dbg !11310
  %236 = load i32, i32* %digits311, align 4, !dbg !11310
  %cmp312 = icmp sle i32 %236, 49, !dbg !11310
  br i1 %cmp312, label %cond.true314, label %cond.false319, !dbg !11310

cond.true314:                                     ; preds = %if.then308
  %237 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11310
  %digits315 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %237, i32 0, i32 0, !dbg !11310
  %238 = load i32, i32* %digits315, align 4, !dbg !11310
  %idxprom316 = sext i32 %238 to i64, !dbg !11310
  %arrayidx317 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom316, !dbg !11310
  %239 = load i8, i8* %arrayidx317, align 1, !dbg !11310
  %conv318 = zext i8 %239 to i32, !dbg !11310
  br label %cond.end324, !dbg !11310

cond.false319:                                    ; preds = %if.then308
  %240 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11310
  %digits320 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %240, i32 0, i32 0, !dbg !11310
  %241 = load i32, i32* %digits320, align 4, !dbg !11310
  %add321 = add nsw i32 %241, 3, !dbg !11310
  %sub322 = sub nsw i32 %add321, 1, !dbg !11310
  %div323 = sdiv i32 %sub322, 3, !dbg !11310
  br label %cond.end324, !dbg !11310

cond.end324:                                      ; preds = %cond.false319, %cond.true314
  %cond325 = phi i32 [ %conv318, %cond.true314 ], [ %div323, %cond.false319 ], !dbg !11310
  %242 = load i32, i32* %todrop, align 4, !dbg !11311
  %call326 = call i32 @decShiftToLeast(i16* %arraydecay310, i32 %cond325, i32 %242), !dbg !11312
  %243 = load i32, i32* %todrop, align 4, !dbg !11313
  %244 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11314
  %exponent327 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %244, i32 0, i32 1, !dbg !11315
  %245 = load i32, i32* %exponent327, align 4, !dbg !11316
  %add328 = add nsw i32 %245, %243, !dbg !11316
  store i32 %add328, i32* %exponent327, align 4, !dbg !11316
  %246 = load i32, i32* %todrop, align 4, !dbg !11317
  %247 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11318
  %digits329 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %247, i32 0, i32 0, !dbg !11319
  %248 = load i32, i32* %digits329, align 4, !dbg !11320
  %sub330 = sub nsw i32 %248, %246, !dbg !11320
  store i32 %sub330, i32* %digits329, align 4, !dbg !11320
  br label %if.end331, !dbg !11321

if.end331:                                        ; preds = %cond.end324, %if.end305
  br label %if.end332

if.end332:                                        ; preds = %if.end331, %if.then284
  br label %if.end333

if.end333:                                        ; preds = %if.end332, %if.then277
  br label %if.end334

if.end334:                                        ; preds = %if.end333, %if.then258
  br label %if.end335

if.end335:                                        ; preds = %if.end334, %if.then252
  %249 = load i32, i32* %status, align 4, !dbg !11322
  %and336 = and i32 %249, 8192, !dbg !11324
  %tobool337 = icmp ne i32 %and336, 0, !dbg !11324
  br i1 %tobool337, label %if.then338, label %if.end355, !dbg !11325

if.then338:                                       ; preds = %if.end335
  call void @llvm.dbg.declare(metadata i32* %ae, metadata !11326, metadata !DIExpression()), !dbg !11328
  %250 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !11329
  %exponent339 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %250, i32 0, i32 1, !dbg !11330
  %251 = load i32, i32* %exponent339, align 4, !dbg !11330
  %252 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !11331
  %digits340 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %252, i32 0, i32 0, !dbg !11332
  %253 = load i32, i32* %digits340, align 4, !dbg !11332
  %add341 = add nsw i32 %251, %253, !dbg !11333
  %sub342 = sub nsw i32 %add341, 1, !dbg !11334
  store i32 %sub342, i32* %ae, align 4, !dbg !11328
  %254 = load i32, i32* %ae, align 4, !dbg !11335
  %255 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !11337
  %emin343 = getelementptr inbounds %struct.decContext, %struct.decContext* %255, i32 0, i32 2, !dbg !11338
  %256 = load i32, i32* %emin343, align 4, !dbg !11338
  %mul344 = mul nsw i32 %256, 2, !dbg !11339
  %cmp345 = icmp sge i32 %254, %mul344, !dbg !11340
  br i1 %cmp345, label %if.then347, label %if.end349, !dbg !11341

if.then347:                                       ; preds = %if.then338
  %257 = load i32, i32* %status, align 4, !dbg !11342
  %and348 = and i32 %257, -12289, !dbg !11342
  store i32 %and348, i32* %status, align 4, !dbg !11342
  br label %if.end349, !dbg !11343

if.end349:                                        ; preds = %if.then347, %if.then338
  %258 = load i32, i32* %status, align 4, !dbg !11344
  %and350 = and i32 %258, 32, !dbg !11346
  %tobool351 = icmp ne i32 %and350, 0, !dbg !11346
  br i1 %tobool351, label %if.end354, label %if.then352, !dbg !11347

if.then352:                                       ; preds = %if.end349
  %259 = load i32, i32* %status, align 4, !dbg !11348
  %and353 = and i32 %259, -8193, !dbg !11348
  store i32 %and353, i32* %status, align 4, !dbg !11348
  br label %if.end354, !dbg !11349

if.end354:                                        ; preds = %if.then352, %if.end349
  br label %if.end355, !dbg !11350

if.end355:                                        ; preds = %if.end354, %if.end335
  %260 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11351
  %261 = load %struct.decNumber*, %struct.decNumber** %a, align 8, !dbg !11352
  %call356 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %260, %struct.decNumber* %261), !dbg !11353
  br label %do.end, !dbg !11354

do.end:                                           ; preds = %if.end355, %if.then181, %if.then113, %if.then81, %if.then41, %if.then32, %if.end17
  %262 = load %struct.decNumber*, %struct.decNumber** %allocbuff, align 8, !dbg !11355
  %cmp357 = icmp ne %struct.decNumber* %262, null, !dbg !11357
  br i1 %cmp357, label %if.then359, label %if.end360, !dbg !11358

if.then359:                                       ; preds = %do.end
  %263 = load %struct.decNumber*, %struct.decNumber** %allocbuff, align 8, !dbg !11359
  %264 = bitcast %struct.decNumber* %263 to i8*, !dbg !11359
  call void @free(i8* %264) #6, !dbg !11360
  br label %if.end360, !dbg !11360

if.end360:                                        ; preds = %if.then359, %do.end
  %265 = load %struct.decNumber*, %struct.decNumber** %allocbufa, align 8, !dbg !11361
  %cmp361 = icmp ne %struct.decNumber* %265, null, !dbg !11363
  br i1 %cmp361, label %if.then363, label %if.end364, !dbg !11364

if.then363:                                       ; preds = %if.end360
  %266 = load %struct.decNumber*, %struct.decNumber** %allocbufa, align 8, !dbg !11365
  %267 = bitcast %struct.decNumber* %266 to i8*, !dbg !11365
  call void @free(i8* %267) #6, !dbg !11366
  br label %if.end364, !dbg !11366

if.end364:                                        ; preds = %if.then363, %if.end360
  %268 = load %struct.decNumber*, %struct.decNumber** %allocbufb, align 8, !dbg !11367
  %cmp365 = icmp ne %struct.decNumber* %268, null, !dbg !11369
  br i1 %cmp365, label %if.then367, label %if.end368, !dbg !11370

if.then367:                                       ; preds = %if.end364
  %269 = load %struct.decNumber*, %struct.decNumber** %allocbufb, align 8, !dbg !11371
  %270 = bitcast %struct.decNumber* %269 to i8*, !dbg !11371
  call void @free(i8* %270) #6, !dbg !11372
  br label %if.end368, !dbg !11372

if.end368:                                        ; preds = %if.then367, %if.end364
  %271 = load i32, i32* %status, align 4, !dbg !11373
  %cmp369 = icmp ne i32 %271, 0, !dbg !11375
  br i1 %cmp369, label %if.then371, label %if.end372, !dbg !11376

if.then371:                                       ; preds = %if.end368
  %272 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11377
  %273 = load i32, i32* %status, align 4, !dbg !11378
  %274 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !11379
  call void @decStatus(%struct.decNumber* %272, i32 %273, %struct.decContext* %274), !dbg !11380
  br label %if.end372, !dbg !11380

if.end372:                                        ; preds = %if.then371, %if.end368
  %275 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11381
  ret %struct.decNumber* %275, !dbg !11382
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberSubtract(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !11383 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !11384, metadata !DIExpression()), !dbg !11385
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !11386, metadata !DIExpression()), !dbg !11387
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !11388, metadata !DIExpression()), !dbg !11389
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !11390, metadata !DIExpression()), !dbg !11391
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11392, metadata !DIExpression()), !dbg !11393
  store i32 0, i32* %status, align 4, !dbg !11393
  %0 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11394
  %1 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !11395
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !11396
  %3 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !11397
  %call = call %struct.decNumber* @decAddOp(%struct.decNumber* %0, %struct.decNumber* %1, %struct.decNumber* %2, %struct.decContext* %3, i8 zeroext -128, i32* %status), !dbg !11398
  %4 = load i32, i32* %status, align 4, !dbg !11399
  %cmp = icmp ne i32 %4, 0, !dbg !11401
  br i1 %cmp, label %if.then, label %if.end, !dbg !11402

if.then:                                          ; preds = %entry
  %5 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11403
  %6 = load i32, i32* %status, align 4, !dbg !11404
  %7 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !11405
  call void @decStatus(%struct.decNumber* %5, i32 %6, %struct.decContext* %7), !dbg !11406
  br label %if.end, !dbg !11406

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11407
  ret %struct.decNumber* %8, !dbg !11408
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberToIntegralExact(%struct.decNumber* %res, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !11409 {
entry:
  %retval = alloca %struct.decNumber*, align 8
  %res.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %dn = alloca %struct.decNumber, align 4
  %workset = alloca %struct.decContext, align 4
  %status = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !11410, metadata !DIExpression()), !dbg !11411
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !11412, metadata !DIExpression()), !dbg !11413
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !11414, metadata !DIExpression()), !dbg !11415
  call void @llvm.dbg.declare(metadata %struct.decNumber* %dn, metadata !11416, metadata !DIExpression()), !dbg !11417
  call void @llvm.dbg.declare(metadata %struct.decContext* %workset, metadata !11418, metadata !DIExpression()), !dbg !11419
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11420, metadata !DIExpression()), !dbg !11421
  store i32 0, i32* %status, align 4, !dbg !11421
  %0 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !11422
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 2, !dbg !11422
  %1 = load i8, i8* %bits, align 4, !dbg !11422
  %conv = zext i8 %1 to i32, !dbg !11422
  %and = and i32 %conv, 112, !dbg !11422
  %tobool = icmp ne i32 %and, 0, !dbg !11422
  br i1 %tobool, label %if.then, label %if.else7, !dbg !11424

if.then:                                          ; preds = %entry
  %2 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !11425
  %bits1 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 2, !dbg !11425
  %3 = load i8, i8* %bits1, align 4, !dbg !11425
  %conv2 = zext i8 %3 to i32, !dbg !11425
  %and3 = and i32 %conv2, 64, !dbg !11425
  %cmp = icmp ne i32 %and3, 0, !dbg !11425
  br i1 %cmp, label %if.then5, label %if.else, !dbg !11428

if.then5:                                         ; preds = %if.then
  %4 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11429
  %5 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !11430
  %call = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %4, %struct.decNumber* %5), !dbg !11431
  br label %if.end, !dbg !11431

if.else:                                          ; preds = %if.then
  %6 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11432
  %7 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !11433
  %8 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !11434
  %call6 = call %struct.decNumber* @decNaNs(%struct.decNumber* %6, %struct.decNumber* %7, %struct.decNumber* null, %struct.decContext* %8, i32* %status), !dbg !11435
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %if.end17, !dbg !11436

if.else7:                                         ; preds = %entry
  %9 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !11437
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %9, i32 0, i32 1, !dbg !11440
  %10 = load i32, i32* %exponent, align 4, !dbg !11440
  %cmp8 = icmp sge i32 %10, 0, !dbg !11441
  br i1 %cmp8, label %if.then10, label %if.end12, !dbg !11442

if.then10:                                        ; preds = %if.else7
  %11 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11443
  %12 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !11444
  %call11 = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %11, %struct.decNumber* %12), !dbg !11445
  store %struct.decNumber* %call11, %struct.decNumber** %retval, align 8, !dbg !11446
  br label %return, !dbg !11446

if.end12:                                         ; preds = %if.else7
  %13 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !11447
  %14 = bitcast %struct.decContext* %workset to i8*, !dbg !11448
  %15 = bitcast %struct.decContext* %13 to i8*, !dbg !11448
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 28, i1 false), !dbg !11448
  %16 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !11449
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %16, i32 0, i32 0, !dbg !11450
  %17 = load i32, i32* %digits, align 4, !dbg !11450
  %digits13 = getelementptr inbounds %struct.decContext, %struct.decContext* %workset, i32 0, i32 0, !dbg !11451
  store i32 %17, i32* %digits13, align 4, !dbg !11452
  %traps = getelementptr inbounds %struct.decContext, %struct.decContext* %workset, i32 0, i32 4, !dbg !11453
  store i32 0, i32* %traps, align 4, !dbg !11454
  %call14 = call %struct.decNumber* @decNumberZero(%struct.decNumber* %dn), !dbg !11455
  %18 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11456
  %19 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !11457
  %call15 = call %struct.decNumber* @decNumberQuantize(%struct.decNumber* %18, %struct.decNumber* %19, %struct.decNumber* %dn, %struct.decContext* %workset), !dbg !11458
  %status16 = getelementptr inbounds %struct.decContext, %struct.decContext* %workset, i32 0, i32 5, !dbg !11459
  %20 = load i32, i32* %status16, align 4, !dbg !11459
  %21 = load i32, i32* %status, align 4, !dbg !11460
  %or = or i32 %21, %20, !dbg !11460
  store i32 %or, i32* %status, align 4, !dbg !11460
  br label %if.end17

if.end17:                                         ; preds = %if.end12, %if.end
  %22 = load i32, i32* %status, align 4, !dbg !11461
  %cmp18 = icmp ne i32 %22, 0, !dbg !11463
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !11464

if.then20:                                        ; preds = %if.end17
  %23 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11465
  %24 = load i32, i32* %status, align 4, !dbg !11466
  %25 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !11467
  call void @decStatus(%struct.decNumber* %23, i32 %24, %struct.decContext* %25), !dbg !11468
  br label %if.end21, !dbg !11468

if.end21:                                         ; preds = %if.then20, %if.end17
  %26 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11469
  store %struct.decNumber* %26, %struct.decNumber** %retval, align 8, !dbg !11470
  br label %return, !dbg !11470

return:                                           ; preds = %if.end21, %if.then10
  %27 = load %struct.decNumber*, %struct.decNumber** %retval, align 8, !dbg !11471
  ret %struct.decNumber* %27, !dbg !11471
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberToIntegralValue(%struct.decNumber* %res, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !11472 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %workset = alloca %struct.decContext, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !11473, metadata !DIExpression()), !dbg !11474
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !11475, metadata !DIExpression()), !dbg !11476
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !11477, metadata !DIExpression()), !dbg !11478
  call void @llvm.dbg.declare(metadata %struct.decContext* %workset, metadata !11479, metadata !DIExpression()), !dbg !11480
  %0 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !11481
  %1 = bitcast %struct.decContext* %workset to i8*, !dbg !11482
  %2 = bitcast %struct.decContext* %0 to i8*, !dbg !11482
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 28, i1 false), !dbg !11482
  %traps = getelementptr inbounds %struct.decContext, %struct.decContext* %workset, i32 0, i32 4, !dbg !11483
  store i32 0, i32* %traps, align 4, !dbg !11484
  %3 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11485
  %4 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !11486
  %call = call %struct.decNumber* @decNumberToIntegralExact(%struct.decNumber* %3, %struct.decNumber* %4, %struct.decContext* %workset), !dbg !11487
  %status = getelementptr inbounds %struct.decContext, %struct.decContext* %workset, i32 0, i32 5, !dbg !11488
  %5 = load i32, i32* %status, align 4, !dbg !11488
  %and = and i32 %5, 128, !dbg !11489
  %6 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !11490
  %status1 = getelementptr inbounds %struct.decContext, %struct.decContext* %6, i32 0, i32 5, !dbg !11491
  %7 = load i32, i32* %status1, align 4, !dbg !11492
  %or = or i32 %7, %and, !dbg !11492
  store i32 %or, i32* %status1, align 4, !dbg !11492
  %8 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11493
  ret %struct.decNumber* %8, !dbg !11494
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberXor(%struct.decNumber* %res, %struct.decNumber* %lhs, %struct.decNumber* %rhs, %struct.decContext* %set) #0 !dbg !11495 {
entry:
  %retval = alloca %struct.decNumber*, align 8
  %res.addr = alloca %struct.decNumber*, align 8
  %lhs.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %ua = alloca i16*, align 8
  %ub = alloca i16*, align 8
  %msua = alloca i16*, align 8
  %msub = alloca i16*, align 8
  %uc = alloca i16*, align 8
  %msuc = alloca i16*, align 8
  %msudigs = alloca i32, align 4
  %a = alloca i16, align 2
  %b = alloca i16, align 2
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !11496, metadata !DIExpression()), !dbg !11497
  store %struct.decNumber* %lhs, %struct.decNumber** %lhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %lhs.addr, metadata !11498, metadata !DIExpression()), !dbg !11499
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !11500, metadata !DIExpression()), !dbg !11501
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !11502, metadata !DIExpression()), !dbg !11503
  call void @llvm.dbg.declare(metadata i16** %ua, metadata !11504, metadata !DIExpression()), !dbg !11505
  call void @llvm.dbg.declare(metadata i16** %ub, metadata !11506, metadata !DIExpression()), !dbg !11507
  call void @llvm.dbg.declare(metadata i16** %msua, metadata !11508, metadata !DIExpression()), !dbg !11509
  call void @llvm.dbg.declare(metadata i16** %msub, metadata !11510, metadata !DIExpression()), !dbg !11511
  call void @llvm.dbg.declare(metadata i16** %uc, metadata !11512, metadata !DIExpression()), !dbg !11513
  call void @llvm.dbg.declare(metadata i16** %msuc, metadata !11514, metadata !DIExpression()), !dbg !11515
  call void @llvm.dbg.declare(metadata i32* %msudigs, metadata !11516, metadata !DIExpression()), !dbg !11517
  %0 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !11518
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 1, !dbg !11520
  %1 = load i32, i32* %exponent, align 4, !dbg !11520
  %cmp = icmp ne i32 %1, 0, !dbg !11521
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11522

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !11523
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 2, !dbg !11523
  %3 = load i8, i8* %bits, align 4, !dbg !11523
  %conv = zext i8 %3 to i32, !dbg !11523
  %and = and i32 %conv, 112, !dbg !11523
  %cmp1 = icmp ne i32 %and, 0, !dbg !11523
  br i1 %cmp1, label %if.then, label %lor.lhs.false3, !dbg !11524

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %4 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !11525
  %bits4 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 2, !dbg !11525
  %5 = load i8, i8* %bits4, align 4, !dbg !11525
  %conv5 = zext i8 %5 to i32, !dbg !11525
  %and6 = and i32 %conv5, 128, !dbg !11525
  %cmp7 = icmp ne i32 %and6, 0, !dbg !11525
  br i1 %cmp7, label %if.then, label %lor.lhs.false9, !dbg !11526

lor.lhs.false9:                                   ; preds = %lor.lhs.false3
  %6 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !11527
  %exponent10 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %6, i32 0, i32 1, !dbg !11528
  %7 = load i32, i32* %exponent10, align 4, !dbg !11528
  %cmp11 = icmp ne i32 %7, 0, !dbg !11529
  br i1 %cmp11, label %if.then, label %lor.lhs.false13, !dbg !11530

lor.lhs.false13:                                  ; preds = %lor.lhs.false9
  %8 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !11531
  %bits14 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i32 0, i32 2, !dbg !11531
  %9 = load i8, i8* %bits14, align 4, !dbg !11531
  %conv15 = zext i8 %9 to i32, !dbg !11531
  %and16 = and i32 %conv15, 112, !dbg !11531
  %cmp17 = icmp ne i32 %and16, 0, !dbg !11531
  br i1 %cmp17, label %if.then, label %lor.lhs.false19, !dbg !11532

lor.lhs.false19:                                  ; preds = %lor.lhs.false13
  %10 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !11533
  %bits20 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %10, i32 0, i32 2, !dbg !11533
  %11 = load i8, i8* %bits20, align 4, !dbg !11533
  %conv21 = zext i8 %11 to i32, !dbg !11533
  %and22 = and i32 %conv21, 128, !dbg !11533
  %cmp23 = icmp ne i32 %and22, 0, !dbg !11533
  br i1 %cmp23, label %if.then, label %if.end, !dbg !11534

if.then:                                          ; preds = %lor.lhs.false19, %lor.lhs.false13, %lor.lhs.false9, %lor.lhs.false3, %lor.lhs.false, %entry
  %12 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11535
  %13 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !11537
  call void @decStatus(%struct.decNumber* %12, i32 128, %struct.decContext* %13), !dbg !11538
  %14 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11539
  store %struct.decNumber* %14, %struct.decNumber** %retval, align 8, !dbg !11540
  br label %return, !dbg !11540

if.end:                                           ; preds = %lor.lhs.false19
  %15 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !11541
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %15, i32 0, i32 3, !dbg !11542
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !11541
  store i16* %arraydecay, i16** %ua, align 8, !dbg !11543
  %16 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !11544
  %lsu25 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %16, i32 0, i32 3, !dbg !11545
  %arraydecay26 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu25, i64 0, i64 0, !dbg !11544
  store i16* %arraydecay26, i16** %ub, align 8, !dbg !11546
  %17 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11547
  %lsu27 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %17, i32 0, i32 3, !dbg !11548
  %arraydecay28 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu27, i64 0, i64 0, !dbg !11547
  store i16* %arraydecay28, i16** %uc, align 8, !dbg !11549
  %18 = load i16*, i16** %ua, align 8, !dbg !11550
  %19 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !11551
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %19, i32 0, i32 0, !dbg !11551
  %20 = load i32, i32* %digits, align 4, !dbg !11551
  %cmp29 = icmp sle i32 %20, 49, !dbg !11551
  br i1 %cmp29, label %cond.true, label %cond.false, !dbg !11551

cond.true:                                        ; preds = %if.end
  %21 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !11551
  %digits31 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %21, i32 0, i32 0, !dbg !11551
  %22 = load i32, i32* %digits31, align 4, !dbg !11551
  %idxprom = sext i32 %22 to i64, !dbg !11551
  %arrayidx = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom, !dbg !11551
  %23 = load i8, i8* %arrayidx, align 1, !dbg !11551
  %conv32 = zext i8 %23 to i32, !dbg !11551
  br label %cond.end, !dbg !11551

cond.false:                                       ; preds = %if.end
  %24 = load %struct.decNumber*, %struct.decNumber** %lhs.addr, align 8, !dbg !11551
  %digits33 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %24, i32 0, i32 0, !dbg !11551
  %25 = load i32, i32* %digits33, align 4, !dbg !11551
  %add = add nsw i32 %25, 3, !dbg !11551
  %sub = sub nsw i32 %add, 1, !dbg !11551
  %div = sdiv i32 %sub, 3, !dbg !11551
  br label %cond.end, !dbg !11551

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv32, %cond.true ], [ %div, %cond.false ], !dbg !11551
  %idx.ext = sext i32 %cond to i64, !dbg !11552
  %add.ptr = getelementptr inbounds i16, i16* %18, i64 %idx.ext, !dbg !11552
  %add.ptr34 = getelementptr inbounds i16, i16* %add.ptr, i64 -1, !dbg !11553
  store i16* %add.ptr34, i16** %msua, align 8, !dbg !11554
  %26 = load i16*, i16** %ub, align 8, !dbg !11555
  %27 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !11556
  %digits35 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %27, i32 0, i32 0, !dbg !11556
  %28 = load i32, i32* %digits35, align 4, !dbg !11556
  %cmp36 = icmp sle i32 %28, 49, !dbg !11556
  br i1 %cmp36, label %cond.true38, label %cond.false43, !dbg !11556

cond.true38:                                      ; preds = %cond.end
  %29 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !11556
  %digits39 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %29, i32 0, i32 0, !dbg !11556
  %30 = load i32, i32* %digits39, align 4, !dbg !11556
  %idxprom40 = sext i32 %30 to i64, !dbg !11556
  %arrayidx41 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom40, !dbg !11556
  %31 = load i8, i8* %arrayidx41, align 1, !dbg !11556
  %conv42 = zext i8 %31 to i32, !dbg !11556
  br label %cond.end48, !dbg !11556

cond.false43:                                     ; preds = %cond.end
  %32 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !11556
  %digits44 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %32, i32 0, i32 0, !dbg !11556
  %33 = load i32, i32* %digits44, align 4, !dbg !11556
  %add45 = add nsw i32 %33, 3, !dbg !11556
  %sub46 = sub nsw i32 %add45, 1, !dbg !11556
  %div47 = sdiv i32 %sub46, 3, !dbg !11556
  br label %cond.end48, !dbg !11556

cond.end48:                                       ; preds = %cond.false43, %cond.true38
  %cond49 = phi i32 [ %conv42, %cond.true38 ], [ %div47, %cond.false43 ], !dbg !11556
  %idx.ext50 = sext i32 %cond49 to i64, !dbg !11557
  %add.ptr51 = getelementptr inbounds i16, i16* %26, i64 %idx.ext50, !dbg !11557
  %add.ptr52 = getelementptr inbounds i16, i16* %add.ptr51, i64 -1, !dbg !11558
  store i16* %add.ptr52, i16** %msub, align 8, !dbg !11559
  %34 = load i16*, i16** %uc, align 8, !dbg !11560
  %35 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !11561
  %digits53 = getelementptr inbounds %struct.decContext, %struct.decContext* %35, i32 0, i32 0, !dbg !11561
  %36 = load i32, i32* %digits53, align 4, !dbg !11561
  %cmp54 = icmp sle i32 %36, 49, !dbg !11561
  br i1 %cmp54, label %cond.true56, label %cond.false61, !dbg !11561

cond.true56:                                      ; preds = %cond.end48
  %37 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !11561
  %digits57 = getelementptr inbounds %struct.decContext, %struct.decContext* %37, i32 0, i32 0, !dbg !11561
  %38 = load i32, i32* %digits57, align 4, !dbg !11561
  %idxprom58 = sext i32 %38 to i64, !dbg !11561
  %arrayidx59 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom58, !dbg !11561
  %39 = load i8, i8* %arrayidx59, align 1, !dbg !11561
  %conv60 = zext i8 %39 to i32, !dbg !11561
  br label %cond.end66, !dbg !11561

cond.false61:                                     ; preds = %cond.end48
  %40 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !11561
  %digits62 = getelementptr inbounds %struct.decContext, %struct.decContext* %40, i32 0, i32 0, !dbg !11561
  %41 = load i32, i32* %digits62, align 4, !dbg !11561
  %add63 = add nsw i32 %41, 3, !dbg !11561
  %sub64 = sub nsw i32 %add63, 1, !dbg !11561
  %div65 = sdiv i32 %sub64, 3, !dbg !11561
  br label %cond.end66, !dbg !11561

cond.end66:                                       ; preds = %cond.false61, %cond.true56
  %cond67 = phi i32 [ %conv60, %cond.true56 ], [ %div65, %cond.false61 ], !dbg !11561
  %idx.ext68 = sext i32 %cond67 to i64, !dbg !11562
  %add.ptr69 = getelementptr inbounds i16, i16* %34, i64 %idx.ext68, !dbg !11562
  %add.ptr70 = getelementptr inbounds i16, i16* %add.ptr69, i64 -1, !dbg !11563
  store i16* %add.ptr70, i16** %msuc, align 8, !dbg !11564
  %42 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !11565
  %digits71 = getelementptr inbounds %struct.decContext, %struct.decContext* %42, i32 0, i32 0, !dbg !11565
  %43 = load i32, i32* %digits71, align 4, !dbg !11565
  %44 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !11565
  %digits72 = getelementptr inbounds %struct.decContext, %struct.decContext* %44, i32 0, i32 0, !dbg !11565
  %45 = load i32, i32* %digits72, align 4, !dbg !11565
  %cmp73 = icmp sle i32 %45, 49, !dbg !11565
  br i1 %cmp73, label %cond.true75, label %cond.false80, !dbg !11565

cond.true75:                                      ; preds = %cond.end66
  %46 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !11565
  %digits76 = getelementptr inbounds %struct.decContext, %struct.decContext* %46, i32 0, i32 0, !dbg !11565
  %47 = load i32, i32* %digits76, align 4, !dbg !11565
  %idxprom77 = sext i32 %47 to i64, !dbg !11565
  %arrayidx78 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom77, !dbg !11565
  %48 = load i8, i8* %arrayidx78, align 1, !dbg !11565
  %conv79 = zext i8 %48 to i32, !dbg !11565
  br label %cond.end85, !dbg !11565

cond.false80:                                     ; preds = %cond.end66
  %49 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !11565
  %digits81 = getelementptr inbounds %struct.decContext, %struct.decContext* %49, i32 0, i32 0, !dbg !11565
  %50 = load i32, i32* %digits81, align 4, !dbg !11565
  %add82 = add nsw i32 %50, 3, !dbg !11565
  %sub83 = sub nsw i32 %add82, 1, !dbg !11565
  %div84 = sdiv i32 %sub83, 3, !dbg !11565
  br label %cond.end85, !dbg !11565

cond.end85:                                       ; preds = %cond.false80, %cond.true75
  %cond86 = phi i32 [ %conv79, %cond.true75 ], [ %div84, %cond.false80 ], !dbg !11565
  %sub87 = sub nsw i32 %cond86, 1, !dbg !11565
  %mul = mul nsw i32 %sub87, 3, !dbg !11565
  %sub88 = sub nsw i32 %43, %mul, !dbg !11565
  store i32 %sub88, i32* %msudigs, align 4, !dbg !11566
  br label %for.cond, !dbg !11567

for.cond:                                         ; preds = %for.inc142, %cond.end85
  %51 = load i16*, i16** %uc, align 8, !dbg !11568
  %52 = load i16*, i16** %msuc, align 8, !dbg !11571
  %cmp89 = icmp ule i16* %51, %52, !dbg !11572
  br i1 %cmp89, label %for.body, label %for.end145, !dbg !11573

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16* %a, metadata !11574, metadata !DIExpression()), !dbg !11576
  call void @llvm.dbg.declare(metadata i16* %b, metadata !11577, metadata !DIExpression()), !dbg !11578
  %53 = load i16*, i16** %ua, align 8, !dbg !11579
  %54 = load i16*, i16** %msua, align 8, !dbg !11581
  %cmp91 = icmp ugt i16* %53, %54, !dbg !11582
  br i1 %cmp91, label %if.then93, label %if.else, !dbg !11583

if.then93:                                        ; preds = %for.body
  store i16 0, i16* %a, align 2, !dbg !11584
  br label %if.end94, !dbg !11585

if.else:                                          ; preds = %for.body
  %55 = load i16*, i16** %ua, align 8, !dbg !11586
  %56 = load i16, i16* %55, align 2, !dbg !11587
  store i16 %56, i16* %a, align 2, !dbg !11588
  br label %if.end94

if.end94:                                         ; preds = %if.else, %if.then93
  %57 = load i16*, i16** %ub, align 8, !dbg !11589
  %58 = load i16*, i16** %msub, align 8, !dbg !11591
  %cmp95 = icmp ugt i16* %57, %58, !dbg !11592
  br i1 %cmp95, label %if.then97, label %if.else98, !dbg !11593

if.then97:                                        ; preds = %if.end94
  store i16 0, i16* %b, align 2, !dbg !11594
  br label %if.end99, !dbg !11595

if.else98:                                        ; preds = %if.end94
  %59 = load i16*, i16** %ub, align 8, !dbg !11596
  %60 = load i16, i16* %59, align 2, !dbg !11597
  store i16 %60, i16* %b, align 2, !dbg !11598
  br label %if.end99

if.end99:                                         ; preds = %if.else98, %if.then97
  %61 = load i16*, i16** %uc, align 8, !dbg !11599
  store i16 0, i16* %61, align 2, !dbg !11600
  %62 = load i16, i16* %a, align 2, !dbg !11601
  %conv100 = zext i16 %62 to i32, !dbg !11601
  %63 = load i16, i16* %b, align 2, !dbg !11603
  %conv101 = zext i16 %63 to i32, !dbg !11603
  %or = or i32 %conv100, %conv101, !dbg !11604
  %tobool = icmp ne i32 %or, 0, !dbg !11604
  br i1 %tobool, label %if.then102, label %if.end141, !dbg !11605

if.then102:                                       ; preds = %if.end99
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11606, metadata !DIExpression()), !dbg !11608
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11609, metadata !DIExpression()), !dbg !11610
  store i32 0, i32* %i, align 4, !dbg !11611
  br label %for.cond103, !dbg !11613

for.cond103:                                      ; preds = %for.inc, %if.then102
  %64 = load i32, i32* %i, align 4, !dbg !11614
  %cmp104 = icmp slt i32 %64, 3, !dbg !11616
  br i1 %cmp104, label %for.body106, label %for.end, !dbg !11617

for.body106:                                      ; preds = %for.cond103
  %65 = load i16, i16* %a, align 2, !dbg !11618
  %conv107 = zext i16 %65 to i32, !dbg !11618
  %66 = load i16, i16* %b, align 2, !dbg !11621
  %conv108 = zext i16 %66 to i32, !dbg !11621
  %xor = xor i32 %conv107, %conv108, !dbg !11622
  %and109 = and i32 %xor, 1, !dbg !11623
  %tobool110 = icmp ne i32 %and109, 0, !dbg !11623
  br i1 %tobool110, label %if.then111, label %if.end119, !dbg !11624

if.then111:                                       ; preds = %for.body106
  %67 = load i16*, i16** %uc, align 8, !dbg !11625
  %68 = load i16, i16* %67, align 2, !dbg !11626
  %conv112 = zext i16 %68 to i32, !dbg !11626
  %69 = load i32, i32* %i, align 4, !dbg !11627
  %idxprom113 = sext i32 %69 to i64, !dbg !11628
  %arrayidx114 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom113, !dbg !11628
  %70 = load i32, i32* %arrayidx114, align 4, !dbg !11628
  %conv115 = trunc i32 %70 to i16, !dbg !11629
  %conv116 = zext i16 %conv115 to i32, !dbg !11629
  %add117 = add nsw i32 %conv112, %conv116, !dbg !11630
  %conv118 = trunc i32 %add117 to i16, !dbg !11626
  %71 = load i16*, i16** %uc, align 8, !dbg !11631
  store i16 %conv118, i16* %71, align 2, !dbg !11632
  br label %if.end119, !dbg !11633

if.end119:                                        ; preds = %if.then111, %for.body106
  %72 = load i16, i16* %a, align 2, !dbg !11634
  %conv120 = zext i16 %72 to i32, !dbg !11634
  %rem = srem i32 %conv120, 10, !dbg !11635
  store i32 %rem, i32* %j, align 4, !dbg !11636
  %73 = load i16, i16* %a, align 2, !dbg !11637
  %conv121 = zext i16 %73 to i32, !dbg !11637
  %div122 = sdiv i32 %conv121, 10, !dbg !11638
  %conv123 = trunc i32 %div122 to i16, !dbg !11637
  store i16 %conv123, i16* %a, align 2, !dbg !11639
  %74 = load i16, i16* %b, align 2, !dbg !11640
  %conv124 = zext i16 %74 to i32, !dbg !11640
  %rem125 = srem i32 %conv124, 10, !dbg !11641
  %75 = load i32, i32* %j, align 4, !dbg !11642
  %or126 = or i32 %75, %rem125, !dbg !11642
  store i32 %or126, i32* %j, align 4, !dbg !11642
  %76 = load i16, i16* %b, align 2, !dbg !11643
  %conv127 = zext i16 %76 to i32, !dbg !11643
  %div128 = sdiv i32 %conv127, 10, !dbg !11644
  %conv129 = trunc i32 %div128 to i16, !dbg !11643
  store i16 %conv129, i16* %b, align 2, !dbg !11645
  %77 = load i32, i32* %j, align 4, !dbg !11646
  %cmp130 = icmp sgt i32 %77, 1, !dbg !11648
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !11649

if.then132:                                       ; preds = %if.end119
  %78 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11650
  %79 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !11652
  call void @decStatus(%struct.decNumber* %78, i32 128, %struct.decContext* %79), !dbg !11653
  %80 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11654
  store %struct.decNumber* %80, %struct.decNumber** %retval, align 8, !dbg !11655
  br label %return, !dbg !11655

if.end133:                                        ; preds = %if.end119
  %81 = load i16*, i16** %uc, align 8, !dbg !11656
  %82 = load i16*, i16** %msuc, align 8, !dbg !11658
  %cmp134 = icmp eq i16* %81, %82, !dbg !11659
  br i1 %cmp134, label %land.lhs.true, label %if.end140, !dbg !11660

land.lhs.true:                                    ; preds = %if.end133
  %83 = load i32, i32* %i, align 4, !dbg !11661
  %84 = load i32, i32* %msudigs, align 4, !dbg !11662
  %sub136 = sub nsw i32 %84, 1, !dbg !11663
  %cmp137 = icmp eq i32 %83, %sub136, !dbg !11664
  br i1 %cmp137, label %if.then139, label %if.end140, !dbg !11665

if.then139:                                       ; preds = %land.lhs.true
  br label %for.end, !dbg !11666

if.end140:                                        ; preds = %land.lhs.true, %if.end133
  br label %for.inc, !dbg !11667

for.inc:                                          ; preds = %if.end140
  %85 = load i32, i32* %i, align 4, !dbg !11668
  %inc = add nsw i32 %85, 1, !dbg !11668
  store i32 %inc, i32* %i, align 4, !dbg !11668
  br label %for.cond103, !dbg !11669, !llvm.loop !11670

for.end:                                          ; preds = %if.then139, %for.cond103
  br label %if.end141, !dbg !11672

if.end141:                                        ; preds = %for.end, %if.end99
  br label %for.inc142, !dbg !11673

for.inc142:                                       ; preds = %if.end141
  %86 = load i16*, i16** %ua, align 8, !dbg !11674
  %incdec.ptr = getelementptr inbounds i16, i16* %86, i32 1, !dbg !11674
  store i16* %incdec.ptr, i16** %ua, align 8, !dbg !11674
  %87 = load i16*, i16** %ub, align 8, !dbg !11675
  %incdec.ptr143 = getelementptr inbounds i16, i16* %87, i32 1, !dbg !11675
  store i16* %incdec.ptr143, i16** %ub, align 8, !dbg !11675
  %88 = load i16*, i16** %uc, align 8, !dbg !11676
  %incdec.ptr144 = getelementptr inbounds i16, i16* %88, i32 1, !dbg !11676
  store i16* %incdec.ptr144, i16** %uc, align 8, !dbg !11676
  br label %for.cond, !dbg !11677, !llvm.loop !11678

for.end145:                                       ; preds = %for.cond
  %89 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11680
  %lsu146 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %89, i32 0, i32 3, !dbg !11681
  %arraydecay147 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu146, i64 0, i64 0, !dbg !11680
  %90 = load i16*, i16** %uc, align 8, !dbg !11682
  %91 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11683
  %lsu148 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %91, i32 0, i32 3, !dbg !11684
  %arraydecay149 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu148, i64 0, i64 0, !dbg !11683
  %sub.ptr.lhs.cast = ptrtoint i16* %90 to i64, !dbg !11685
  %sub.ptr.rhs.cast = ptrtoint i16* %arraydecay149 to i64, !dbg !11685
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11685
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2, !dbg !11685
  %conv150 = trunc i64 %sub.ptr.div to i32, !dbg !11682
  %call = call i32 @decGetDigits(i16* %arraydecay147, i32 %conv150), !dbg !11686
  %92 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11687
  %digits151 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %92, i32 0, i32 0, !dbg !11688
  store i32 %call, i32* %digits151, align 4, !dbg !11689
  %93 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11690
  %exponent152 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %93, i32 0, i32 1, !dbg !11691
  store i32 0, i32* %exponent152, align 4, !dbg !11692
  %94 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11693
  %bits153 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %94, i32 0, i32 2, !dbg !11694
  store i8 0, i8* %bits153, align 4, !dbg !11695
  %95 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11696
  store %struct.decNumber* %95, %struct.decNumber** %retval, align 8, !dbg !11697
  br label %return, !dbg !11697

return:                                           ; preds = %for.end145, %if.then132, %if.then
  %96 = load %struct.decNumber*, %struct.decNumber** %retval, align 8, !dbg !11698
  ret %struct.decNumber* %96, !dbg !11698
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @decNumberClass(%struct.decNumber* %dn, %struct.decContext* %set) #0 !dbg !11699 {
entry:
  %retval = alloca i32, align 4
  %dn.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  store %struct.decNumber* %dn, %struct.decNumber** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dn.addr, metadata !11702, metadata !DIExpression()), !dbg !11703
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !11704, metadata !DIExpression()), !dbg !11705
  %0 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11706
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 2, !dbg !11706
  %1 = load i8, i8* %bits, align 4, !dbg !11706
  %conv = zext i8 %1 to i32, !dbg !11706
  %and = and i32 %conv, 112, !dbg !11706
  %cmp = icmp ne i32 %and, 0, !dbg !11706
  br i1 %cmp, label %if.then, label %if.end22, !dbg !11708

if.then:                                          ; preds = %entry
  %2 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11709
  %bits2 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 2, !dbg !11709
  %3 = load i8, i8* %bits2, align 4, !dbg !11709
  %conv3 = zext i8 %3 to i32, !dbg !11709
  %and4 = and i32 %conv3, 32, !dbg !11709
  %cmp5 = icmp ne i32 %and4, 0, !dbg !11709
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !11712

if.then7:                                         ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !11713
  br label %return, !dbg !11713

if.end:                                           ; preds = %if.then
  %4 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11714
  %bits8 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 2, !dbg !11714
  %5 = load i8, i8* %bits8, align 4, !dbg !11714
  %conv9 = zext i8 %5 to i32, !dbg !11714
  %and10 = and i32 %conv9, 16, !dbg !11714
  %cmp11 = icmp ne i32 %and10, 0, !dbg !11714
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !11716

if.then13:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11717
  br label %return, !dbg !11717

if.end14:                                         ; preds = %if.end
  %6 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11718
  %bits15 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %6, i32 0, i32 2, !dbg !11718
  %7 = load i8, i8* %bits15, align 4, !dbg !11718
  %conv16 = zext i8 %7 to i32, !dbg !11718
  %and17 = and i32 %conv16, 128, !dbg !11718
  %cmp18 = icmp ne i32 %and17, 0, !dbg !11718
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !11720

if.then20:                                        ; preds = %if.end14
  store i32 2, i32* %retval, align 4, !dbg !11721
  br label %return, !dbg !11721

if.end21:                                         ; preds = %if.end14
  store i32 9, i32* %retval, align 4, !dbg !11722
  br label %return, !dbg !11722

if.end22:                                         ; preds = %entry
  %8 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11723
  %9 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !11725
  %call = call i32 @decNumberIsNormal(%struct.decNumber* %8, %struct.decContext* %9), !dbg !11726
  %tobool = icmp ne i32 %call, 0, !dbg !11726
  br i1 %tobool, label %if.then23, label %if.end31, !dbg !11727

if.then23:                                        ; preds = %if.end22
  %10 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11728
  %bits24 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %10, i32 0, i32 2, !dbg !11728
  %11 = load i8, i8* %bits24, align 4, !dbg !11728
  %conv25 = zext i8 %11 to i32, !dbg !11728
  %and26 = and i32 %conv25, 128, !dbg !11728
  %cmp27 = icmp ne i32 %and26, 0, !dbg !11728
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !11731

if.then29:                                        ; preds = %if.then23
  store i32 3, i32* %retval, align 4, !dbg !11732
  br label %return, !dbg !11732

if.end30:                                         ; preds = %if.then23
  store i32 8, i32* %retval, align 4, !dbg !11733
  br label %return, !dbg !11733

if.end31:                                         ; preds = %if.end22
  %12 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11734
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %12, i32 0, i32 3, !dbg !11734
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !11734
  %13 = load i16, i16* %arraydecay, align 2, !dbg !11734
  %conv32 = zext i16 %13 to i32, !dbg !11734
  %cmp33 = icmp eq i32 %conv32, 0, !dbg !11734
  br i1 %cmp33, label %land.lhs.true, label %if.end51, !dbg !11734

land.lhs.true:                                    ; preds = %if.end31
  %14 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11734
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %14, i32 0, i32 0, !dbg !11734
  %15 = load i32, i32* %digits, align 4, !dbg !11734
  %cmp35 = icmp eq i32 %15, 1, !dbg !11734
  br i1 %cmp35, label %land.lhs.true37, label %if.end51, !dbg !11734

land.lhs.true37:                                  ; preds = %land.lhs.true
  %16 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11734
  %bits38 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %16, i32 0, i32 2, !dbg !11734
  %17 = load i8, i8* %bits38, align 4, !dbg !11734
  %conv39 = zext i8 %17 to i32, !dbg !11734
  %and40 = and i32 %conv39, 112, !dbg !11734
  %cmp41 = icmp eq i32 %and40, 0, !dbg !11734
  br i1 %cmp41, label %if.then43, label %if.end51, !dbg !11736

if.then43:                                        ; preds = %land.lhs.true37
  %18 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11737
  %bits44 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %18, i32 0, i32 2, !dbg !11737
  %19 = load i8, i8* %bits44, align 4, !dbg !11737
  %conv45 = zext i8 %19 to i32, !dbg !11737
  %and46 = and i32 %conv45, 128, !dbg !11737
  %cmp47 = icmp ne i32 %and46, 0, !dbg !11737
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !11740

if.then49:                                        ; preds = %if.then43
  store i32 5, i32* %retval, align 4, !dbg !11741
  br label %return, !dbg !11741

if.end50:                                         ; preds = %if.then43
  store i32 6, i32* %retval, align 4, !dbg !11742
  br label %return, !dbg !11742

if.end51:                                         ; preds = %land.lhs.true37, %land.lhs.true, %if.end31
  %20 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11743
  %bits52 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %20, i32 0, i32 2, !dbg !11743
  %21 = load i8, i8* %bits52, align 4, !dbg !11743
  %conv53 = zext i8 %21 to i32, !dbg !11743
  %and54 = and i32 %conv53, 128, !dbg !11743
  %cmp55 = icmp ne i32 %and54, 0, !dbg !11743
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !11745

if.then57:                                        ; preds = %if.end51
  store i32 4, i32* %retval, align 4, !dbg !11746
  br label %return, !dbg !11746

if.end58:                                         ; preds = %if.end51
  store i32 7, i32* %retval, align 4, !dbg !11747
  br label %return, !dbg !11747

return:                                           ; preds = %if.end58, %if.then57, %if.end50, %if.then49, %if.end30, %if.then29, %if.end21, %if.then20, %if.then13, %if.then7
  %22 = load i32, i32* %retval, align 4, !dbg !11748
  ret i32 %22, !dbg !11748
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @decNumberClassToString(i32 %eclass) #0 !dbg !11749 {
entry:
  %retval = alloca i8*, align 8
  %eclass.addr = alloca i32, align 4
  store i32 %eclass, i32* %eclass.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %eclass.addr, metadata !11752, metadata !DIExpression()), !dbg !11753
  %0 = load i32, i32* %eclass.addr, align 4, !dbg !11754
  %cmp = icmp eq i32 %0, 8, !dbg !11756
  br i1 %cmp, label %if.then, label %if.end, !dbg !11757

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i8** %retval, align 8, !dbg !11758
  br label %return, !dbg !11758

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %eclass.addr, align 4, !dbg !11759
  %cmp1 = icmp eq i32 %1, 3, !dbg !11761
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !11762

if.then2:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i8** %retval, align 8, !dbg !11763
  br label %return, !dbg !11763

if.end3:                                          ; preds = %if.end
  %2 = load i32, i32* %eclass.addr, align 4, !dbg !11764
  %cmp4 = icmp eq i32 %2, 6, !dbg !11766
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !11767

if.then5:                                         ; preds = %if.end3
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i8** %retval, align 8, !dbg !11768
  br label %return, !dbg !11768

if.end6:                                          ; preds = %if.end3
  %3 = load i32, i32* %eclass.addr, align 4, !dbg !11769
  %cmp7 = icmp eq i32 %3, 5, !dbg !11771
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !11772

if.then8:                                         ; preds = %if.end6
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i8** %retval, align 8, !dbg !11773
  br label %return, !dbg !11773

if.end9:                                          ; preds = %if.end6
  %4 = load i32, i32* %eclass.addr, align 4, !dbg !11774
  %cmp10 = icmp eq i32 %4, 7, !dbg !11776
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !11777

if.then11:                                        ; preds = %if.end9
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8** %retval, align 8, !dbg !11778
  br label %return, !dbg !11778

if.end12:                                         ; preds = %if.end9
  %5 = load i32, i32* %eclass.addr, align 4, !dbg !11779
  %cmp13 = icmp eq i32 %5, 4, !dbg !11781
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !11782

if.then14:                                        ; preds = %if.end12
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8** %retval, align 8, !dbg !11783
  br label %return, !dbg !11783

if.end15:                                         ; preds = %if.end12
  %6 = load i32, i32* %eclass.addr, align 4, !dbg !11784
  %cmp16 = icmp eq i32 %6, 9, !dbg !11786
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !11787

if.then17:                                        ; preds = %if.end15
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i8** %retval, align 8, !dbg !11788
  br label %return, !dbg !11788

if.end18:                                         ; preds = %if.end15
  %7 = load i32, i32* %eclass.addr, align 4, !dbg !11789
  %cmp19 = icmp eq i32 %7, 2, !dbg !11791
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !11792

if.then20:                                        ; preds = %if.end18
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i8** %retval, align 8, !dbg !11793
  br label %return, !dbg !11793

if.end21:                                         ; preds = %if.end18
  %8 = load i32, i32* %eclass.addr, align 4, !dbg !11794
  %cmp22 = icmp eq i32 %8, 1, !dbg !11796
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !11797

if.then23:                                        ; preds = %if.end21
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8** %retval, align 8, !dbg !11798
  br label %return, !dbg !11798

if.end24:                                         ; preds = %if.end21
  %9 = load i32, i32* %eclass.addr, align 4, !dbg !11799
  %cmp25 = icmp eq i32 %9, 0, !dbg !11801
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !11802

if.then26:                                        ; preds = %if.end24
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i8** %retval, align 8, !dbg !11803
  br label %return, !dbg !11803

if.end27:                                         ; preds = %if.end24
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), i8** %retval, align 8, !dbg !11804
  br label %return, !dbg !11804

return:                                           ; preds = %if.end27, %if.then26, %if.then23, %if.then20, %if.then17, %if.then14, %if.then11, %if.then8, %if.then5, %if.then2, %if.then
  %10 = load i8*, i8** %retval, align 8, !dbg !11805
  ret i8* %10, !dbg !11805
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberCopyNegate(%struct.decNumber* %res, %struct.decNumber* %rhs) #0 !dbg !11806 {
entry:
  %res.addr = alloca %struct.decNumber*, align 8
  %rhs.addr = alloca %struct.decNumber*, align 8
  store %struct.decNumber* %res, %struct.decNumber** %res.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %res.addr, metadata !11807, metadata !DIExpression()), !dbg !11808
  store %struct.decNumber* %rhs, %struct.decNumber** %rhs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %rhs.addr, metadata !11809, metadata !DIExpression()), !dbg !11810
  %0 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11811
  %1 = load %struct.decNumber*, %struct.decNumber** %rhs.addr, align 8, !dbg !11812
  %call = call %struct.decNumber* @decNumberCopy(%struct.decNumber* %0, %struct.decNumber* %1), !dbg !11813
  %2 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11814
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 2, !dbg !11815
  %3 = load i8, i8* %bits, align 4, !dbg !11816
  %conv = zext i8 %3 to i32, !dbg !11816
  %xor = xor i32 %conv, 128, !dbg !11816
  %conv1 = trunc i32 %xor to i8, !dbg !11816
  store i8 %conv1, i8* %bits, align 4, !dbg !11816
  %4 = load %struct.decNumber*, %struct.decNumber** %res.addr, align 8, !dbg !11817
  ret %struct.decNumber* %4, !dbg !11818
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @decNumberGetBCD(%struct.decNumber* %dn, i8* %bcd) #0 !dbg !11819 {
entry:
  %dn.addr = alloca %struct.decNumber*, align 8
  %bcd.addr = alloca i8*, align 8
  %ub = alloca i8*, align 8
  %up = alloca i16*, align 8
  %u = alloca i32, align 4
  %cut = alloca i32, align 4
  store %struct.decNumber* %dn, %struct.decNumber** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dn.addr, metadata !11823, metadata !DIExpression()), !dbg !11824
  store i8* %bcd, i8** %bcd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bcd.addr, metadata !11825, metadata !DIExpression()), !dbg !11826
  call void @llvm.dbg.declare(metadata i8** %ub, metadata !11827, metadata !DIExpression()), !dbg !11828
  %0 = load i8*, i8** %bcd.addr, align 8, !dbg !11829
  %1 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11830
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i32 0, i32 0, !dbg !11831
  %2 = load i32, i32* %digits, align 4, !dbg !11831
  %idx.ext = sext i32 %2 to i64, !dbg !11832
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext, !dbg !11832
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !11833
  store i8* %add.ptr1, i8** %ub, align 8, !dbg !11828
  call void @llvm.dbg.declare(metadata i16** %up, metadata !11834, metadata !DIExpression()), !dbg !11835
  %3 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11836
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %3, i32 0, i32 3, !dbg !11837
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !11836
  store i16* %arraydecay, i16** %up, align 8, !dbg !11835
  call void @llvm.dbg.declare(metadata i32* %u, metadata !11838, metadata !DIExpression()), !dbg !11839
  %4 = load i16*, i16** %up, align 8, !dbg !11840
  %5 = load i16, i16* %4, align 2, !dbg !11841
  %conv = zext i16 %5 to i32, !dbg !11841
  store i32 %conv, i32* %u, align 4, !dbg !11839
  call void @llvm.dbg.declare(metadata i32* %cut, metadata !11842, metadata !DIExpression()), !dbg !11843
  store i32 3, i32* %cut, align 4, !dbg !11843
  br label %for.cond, !dbg !11844

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i8*, i8** %ub, align 8, !dbg !11845
  %7 = load i8*, i8** %bcd.addr, align 8, !dbg !11848
  %cmp = icmp uge i8* %6, %7, !dbg !11849
  br i1 %cmp, label %for.body, label %for.end, !dbg !11850

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %u, align 4, !dbg !11851
  %rem = urem i32 %8, 10, !dbg !11853
  %conv3 = trunc i32 %rem to i8, !dbg !11854
  %9 = load i8*, i8** %ub, align 8, !dbg !11855
  store i8 %conv3, i8* %9, align 1, !dbg !11856
  %10 = load i32, i32* %u, align 4, !dbg !11857
  %div = udiv i32 %10, 10, !dbg !11858
  store i32 %div, i32* %u, align 4, !dbg !11859
  %11 = load i32, i32* %cut, align 4, !dbg !11860
  %dec = add i32 %11, -1, !dbg !11860
  store i32 %dec, i32* %cut, align 4, !dbg !11860
  %12 = load i32, i32* %cut, align 4, !dbg !11861
  %cmp4 = icmp ugt i32 %12, 0, !dbg !11863
  br i1 %cmp4, label %if.then, label %if.end, !dbg !11864

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !11865

if.end:                                           ; preds = %for.body
  %13 = load i16*, i16** %up, align 8, !dbg !11866
  %incdec.ptr = getelementptr inbounds i16, i16* %13, i32 1, !dbg !11866
  store i16* %incdec.ptr, i16** %up, align 8, !dbg !11866
  %14 = load i16*, i16** %up, align 8, !dbg !11867
  %15 = load i16, i16* %14, align 2, !dbg !11868
  %conv6 = zext i16 %15 to i32, !dbg !11868
  store i32 %conv6, i32* %u, align 4, !dbg !11869
  store i32 3, i32* %cut, align 4, !dbg !11870
  br label %for.inc, !dbg !11871

for.inc:                                          ; preds = %if.end, %if.then
  %16 = load i8*, i8** %ub, align 8, !dbg !11872
  %incdec.ptr7 = getelementptr inbounds i8, i8* %16, i32 -1, !dbg !11872
  store i8* %incdec.ptr7, i8** %ub, align 8, !dbg !11872
  br label %for.cond, !dbg !11873, !llvm.loop !11874

for.end:                                          ; preds = %for.cond
  %17 = load i8*, i8** %bcd.addr, align 8, !dbg !11876
  ret i8* %17, !dbg !11877
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberSetBCD(%struct.decNumber* %dn, i8* %bcd, i32 %n) #0 !dbg !11878 {
entry:
  %dn.addr = alloca %struct.decNumber*, align 8
  %bcd.addr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  %up = alloca i16*, align 8
  %ub = alloca i8*, align 8
  %cut = alloca i32, align 4
  store %struct.decNumber* %dn, %struct.decNumber** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dn.addr, metadata !11882, metadata !DIExpression()), !dbg !11883
  store i8* %bcd, i8** %bcd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bcd.addr, metadata !11884, metadata !DIExpression()), !dbg !11885
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !11886, metadata !DIExpression()), !dbg !11887
  call void @llvm.dbg.declare(metadata i16** %up, metadata !11888, metadata !DIExpression()), !dbg !11889
  %0 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11890
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 3, !dbg !11891
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !11890
  %1 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11892
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %1, i32 0, i32 0, !dbg !11892
  %2 = load i32, i32* %digits, align 4, !dbg !11892
  %cmp = icmp sle i32 %2, 49, !dbg !11892
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11892

cond.true:                                        ; preds = %entry
  %3 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11892
  %digits1 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %3, i32 0, i32 0, !dbg !11892
  %4 = load i32, i32* %digits1, align 4, !dbg !11892
  %idxprom = sext i32 %4 to i64, !dbg !11892
  %arrayidx = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom, !dbg !11892
  %5 = load i8, i8* %arrayidx, align 1, !dbg !11892
  %conv = zext i8 %5 to i32, !dbg !11892
  br label %cond.end, !dbg !11892

cond.false:                                       ; preds = %entry
  %6 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11892
  %digits2 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %6, i32 0, i32 0, !dbg !11892
  %7 = load i32, i32* %digits2, align 4, !dbg !11892
  %add = add nsw i32 %7, 3, !dbg !11892
  %sub = sub nsw i32 %add, 1, !dbg !11892
  %div = sdiv i32 %sub, 3, !dbg !11892
  br label %cond.end, !dbg !11892

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %div, %cond.false ], !dbg !11892
  %idx.ext = sext i32 %cond to i64, !dbg !11893
  %add.ptr = getelementptr inbounds i16, i16* %arraydecay, i64 %idx.ext, !dbg !11893
  %add.ptr3 = getelementptr inbounds i16, i16* %add.ptr, i64 -1, !dbg !11894
  store i16* %add.ptr3, i16** %up, align 8, !dbg !11889
  call void @llvm.dbg.declare(metadata i8** %ub, metadata !11895, metadata !DIExpression()), !dbg !11896
  %8 = load i8*, i8** %bcd.addr, align 8, !dbg !11897
  store i8* %8, i8** %ub, align 8, !dbg !11896
  call void @llvm.dbg.declare(metadata i32* %cut, metadata !11898, metadata !DIExpression()), !dbg !11899
  %9 = load i32, i32* %n.addr, align 4, !dbg !11900
  %10 = load i32, i32* %n.addr, align 4, !dbg !11900
  %cmp4 = icmp ule i32 %10, 49, !dbg !11900
  br i1 %cmp4, label %cond.true6, label %cond.false10, !dbg !11900

cond.true6:                                       ; preds = %cond.end
  %11 = load i32, i32* %n.addr, align 4, !dbg !11900
  %idxprom7 = zext i32 %11 to i64, !dbg !11900
  %arrayidx8 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom7, !dbg !11900
  %12 = load i8, i8* %arrayidx8, align 1, !dbg !11900
  %conv9 = zext i8 %12 to i32, !dbg !11900
  br label %cond.end14, !dbg !11900

cond.false10:                                     ; preds = %cond.end
  %13 = load i32, i32* %n.addr, align 4, !dbg !11900
  %add11 = add i32 %13, 3, !dbg !11900
  %sub12 = sub i32 %add11, 1, !dbg !11900
  %div13 = udiv i32 %sub12, 3, !dbg !11900
  br label %cond.end14, !dbg !11900

cond.end14:                                       ; preds = %cond.false10, %cond.true6
  %cond15 = phi i32 [ %conv9, %cond.true6 ], [ %div13, %cond.false10 ], !dbg !11900
  %sub16 = sub i32 %cond15, 1, !dbg !11900
  %mul = mul i32 %sub16, 3, !dbg !11900
  %sub17 = sub i32 %9, %mul, !dbg !11900
  store i32 %sub17, i32* %cut, align 4, !dbg !11899
  br label %for.cond, !dbg !11901

for.cond:                                         ; preds = %for.inc33, %cond.end14
  %14 = load i16*, i16** %up, align 8, !dbg !11902
  %15 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11905
  %lsu18 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %15, i32 0, i32 3, !dbg !11906
  %arraydecay19 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu18, i64 0, i64 0, !dbg !11905
  %cmp20 = icmp uge i16* %14, %arraydecay19, !dbg !11907
  br i1 %cmp20, label %for.body, label %for.end35, !dbg !11908

for.body:                                         ; preds = %for.cond
  %16 = load i16*, i16** %up, align 8, !dbg !11909
  store i16 0, i16* %16, align 2, !dbg !11911
  br label %for.cond22, !dbg !11912

for.cond22:                                       ; preds = %for.inc, %for.body
  %17 = load i32, i32* %cut, align 4, !dbg !11913
  %cmp23 = icmp sgt i32 %17, 0, !dbg !11916
  br i1 %cmp23, label %for.body25, label %for.end, !dbg !11917

for.body25:                                       ; preds = %for.cond22
  %18 = load i16*, i16** %up, align 8, !dbg !11918
  %19 = load i16, i16* %18, align 2, !dbg !11918
  %conv26 = zext i16 %19 to i32, !dbg !11918
  %shl = shl i32 %conv26, 1, !dbg !11918
  %20 = load i16*, i16** %up, align 8, !dbg !11918
  %21 = load i16, i16* %20, align 2, !dbg !11918
  %conv27 = zext i16 %21 to i32, !dbg !11918
  %shl28 = shl i32 %conv27, 3, !dbg !11918
  %add29 = add nsw i32 %shl, %shl28, !dbg !11918
  %22 = load i8*, i8** %ub, align 8, !dbg !11919
  %23 = load i8, i8* %22, align 1, !dbg !11920
  %conv30 = zext i8 %23 to i32, !dbg !11920
  %add31 = add nsw i32 %add29, %conv30, !dbg !11921
  %conv32 = trunc i32 %add31 to i16, !dbg !11918
  %24 = load i16*, i16** %up, align 8, !dbg !11922
  store i16 %conv32, i16* %24, align 2, !dbg !11923
  br label %for.inc, !dbg !11924

for.inc:                                          ; preds = %for.body25
  %25 = load i8*, i8** %ub, align 8, !dbg !11925
  %incdec.ptr = getelementptr inbounds i8, i8* %25, i32 1, !dbg !11925
  store i8* %incdec.ptr, i8** %ub, align 8, !dbg !11925
  %26 = load i32, i32* %cut, align 4, !dbg !11926
  %dec = add nsw i32 %26, -1, !dbg !11926
  store i32 %dec, i32* %cut, align 4, !dbg !11926
  br label %for.cond22, !dbg !11927, !llvm.loop !11928

for.end:                                          ; preds = %for.cond22
  store i32 3, i32* %cut, align 4, !dbg !11930
  br label %for.inc33, !dbg !11931

for.inc33:                                        ; preds = %for.end
  %27 = load i16*, i16** %up, align 8, !dbg !11932
  %incdec.ptr34 = getelementptr inbounds i16, i16* %27, i32 -1, !dbg !11932
  store i16* %incdec.ptr34, i16** %up, align 8, !dbg !11932
  br label %for.cond, !dbg !11933, !llvm.loop !11934

for.end35:                                        ; preds = %for.cond
  %28 = load i32, i32* %n.addr, align 4, !dbg !11936
  %29 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11937
  %digits36 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %29, i32 0, i32 0, !dbg !11938
  store i32 %28, i32* %digits36, align 4, !dbg !11939
  %30 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11940
  ret %struct.decNumber* %30, !dbg !11941
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @decNumberIsSubnormal(%struct.decNumber* %dn, %struct.decContext* %set) #0 !dbg !11942 {
entry:
  %retval = alloca i32, align 4
  %dn.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %ae = alloca i32, align 4
  store %struct.decNumber* %dn, %struct.decNumber** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dn.addr, metadata !11943, metadata !DIExpression()), !dbg !11944
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !11945, metadata !DIExpression()), !dbg !11946
  call void @llvm.dbg.declare(metadata i32* %ae, metadata !11947, metadata !DIExpression()), !dbg !11948
  %0 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11949
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 2, !dbg !11949
  %1 = load i8, i8* %bits, align 4, !dbg !11949
  %conv = zext i8 %1 to i32, !dbg !11949
  %and = and i32 %conv, 112, !dbg !11949
  %cmp = icmp ne i32 %and, 0, !dbg !11949
  br i1 %cmp, label %if.then, label %if.end, !dbg !11951

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11952
  br label %return, !dbg !11952

if.end:                                           ; preds = %entry
  %2 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11953
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 3, !dbg !11953
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !11953
  %3 = load i16, i16* %arraydecay, align 2, !dbg !11953
  %conv2 = zext i16 %3 to i32, !dbg !11953
  %cmp3 = icmp eq i32 %conv2, 0, !dbg !11953
  br i1 %cmp3, label %land.lhs.true, label %if.end14, !dbg !11953

land.lhs.true:                                    ; preds = %if.end
  %4 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11953
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 0, !dbg !11953
  %5 = load i32, i32* %digits, align 4, !dbg !11953
  %cmp5 = icmp eq i32 %5, 1, !dbg !11953
  br i1 %cmp5, label %land.lhs.true7, label %if.end14, !dbg !11953

land.lhs.true7:                                   ; preds = %land.lhs.true
  %6 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11953
  %bits8 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %6, i32 0, i32 2, !dbg !11953
  %7 = load i8, i8* %bits8, align 4, !dbg !11953
  %conv9 = zext i8 %7 to i32, !dbg !11953
  %and10 = and i32 %conv9, 112, !dbg !11953
  %cmp11 = icmp eq i32 %and10, 0, !dbg !11953
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !11955

if.then13:                                        ; preds = %land.lhs.true7
  store i32 0, i32* %retval, align 4, !dbg !11956
  br label %return, !dbg !11956

if.end14:                                         ; preds = %land.lhs.true7, %land.lhs.true, %if.end
  %8 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11957
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i32 0, i32 1, !dbg !11958
  %9 = load i32, i32* %exponent, align 4, !dbg !11958
  %10 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11959
  %digits15 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %10, i32 0, i32 0, !dbg !11960
  %11 = load i32, i32* %digits15, align 4, !dbg !11960
  %add = add nsw i32 %9, %11, !dbg !11961
  %sub = sub nsw i32 %add, 1, !dbg !11962
  store i32 %sub, i32* %ae, align 4, !dbg !11963
  %12 = load i32, i32* %ae, align 4, !dbg !11964
  %13 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !11966
  %emin = getelementptr inbounds %struct.decContext, %struct.decContext* %13, i32 0, i32 2, !dbg !11967
  %14 = load i32, i32* %emin, align 4, !dbg !11967
  %cmp16 = icmp slt i32 %12, %14, !dbg !11968
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !11969

if.then18:                                        ; preds = %if.end14
  store i32 1, i32* %retval, align 4, !dbg !11970
  br label %return, !dbg !11970

if.end19:                                         ; preds = %if.end14
  store i32 0, i32* %retval, align 4, !dbg !11971
  br label %return, !dbg !11971

return:                                           ; preds = %if.end19, %if.then18, %if.then13, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !11972
  ret i32 %15, !dbg !11972
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.decNumber* @decNumberTrim(%struct.decNumber* %dn) #0 !dbg !11973 {
entry:
  %dn.addr = alloca %struct.decNumber*, align 8
  %dropped = alloca i32, align 4
  %set = alloca %struct.decContext, align 4
  store %struct.decNumber* %dn, %struct.decNumber** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dn.addr, metadata !11974, metadata !DIExpression()), !dbg !11975
  call void @llvm.dbg.declare(metadata i32* %dropped, metadata !11976, metadata !DIExpression()), !dbg !11977
  call void @llvm.dbg.declare(metadata %struct.decContext* %set, metadata !11978, metadata !DIExpression()), !dbg !11979
  %call = call %struct.decContext* @decContextDefault(%struct.decContext* %set, i32 0), !dbg !11980
  %0 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !11981
  %call1 = call %struct.decNumber* @decTrim(%struct.decNumber* %0, %struct.decContext* %set, i8 zeroext 0, i8 zeroext 1, i32* %dropped), !dbg !11982
  ret %struct.decNumber* %call1, !dbg !11983
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @decNumberVersion() #0 !dbg !11984 {
entry:
  ret i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0), !dbg !11987
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @decUnitAddSub(i16* %a, i32 %alength, i16* %b, i32 %blength, i32 %bshift, i16* %c, i32 %m) #0 !dbg !11988 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i16*, align 8
  %alength.addr = alloca i32, align 4
  %b.addr = alloca i16*, align 8
  %blength.addr = alloca i32, align 4
  %bshift.addr = alloca i32, align 4
  %c.addr = alloca i16*, align 8
  %m.addr = alloca i32, align 4
  %alsu = alloca i16*, align 8
  %clsu = alloca i16*, align 8
  %minC = alloca i16*, align 8
  %maxC = alloca i16*, align 8
  %carry = alloca i32, align 4
  %add = alloca i32, align 4
  %est = alloca i32, align 4
  %hold = alloca i16*, align 8
  store i16* %a, i16** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %a.addr, metadata !11991, metadata !DIExpression()), !dbg !11992
  store i32 %alength, i32* %alength.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alength.addr, metadata !11993, metadata !DIExpression()), !dbg !11994
  store i16* %b, i16** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %b.addr, metadata !11995, metadata !DIExpression()), !dbg !11996
  store i32 %blength, i32* %blength.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blength.addr, metadata !11997, metadata !DIExpression()), !dbg !11998
  store i32 %bshift, i32* %bshift.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bshift.addr, metadata !11999, metadata !DIExpression()), !dbg !12000
  store i16* %c, i16** %c.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %c.addr, metadata !12001, metadata !DIExpression()), !dbg !12002
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !12003, metadata !DIExpression()), !dbg !12004
  call void @llvm.dbg.declare(metadata i16** %alsu, metadata !12005, metadata !DIExpression()), !dbg !12006
  %0 = load i16*, i16** %a.addr, align 8, !dbg !12007
  store i16* %0, i16** %alsu, align 8, !dbg !12006
  call void @llvm.dbg.declare(metadata i16** %clsu, metadata !12008, metadata !DIExpression()), !dbg !12009
  %1 = load i16*, i16** %c.addr, align 8, !dbg !12010
  store i16* %1, i16** %clsu, align 8, !dbg !12009
  call void @llvm.dbg.declare(metadata i16** %minC, metadata !12011, metadata !DIExpression()), !dbg !12012
  call void @llvm.dbg.declare(metadata i16** %maxC, metadata !12013, metadata !DIExpression()), !dbg !12014
  call void @llvm.dbg.declare(metadata i32* %carry, metadata !12015, metadata !DIExpression()), !dbg !12016
  store i32 0, i32* %carry, align 4, !dbg !12016
  call void @llvm.dbg.declare(metadata i32* %add, metadata !12017, metadata !DIExpression()), !dbg !12018
  call void @llvm.dbg.declare(metadata i32* %est, metadata !12019, metadata !DIExpression()), !dbg !12020
  %2 = load i16*, i16** %c.addr, align 8, !dbg !12021
  %3 = load i32, i32* %alength.addr, align 4, !dbg !12022
  %idx.ext = sext i32 %3 to i64, !dbg !12023
  %add.ptr = getelementptr inbounds i16, i16* %2, i64 %idx.ext, !dbg !12023
  store i16* %add.ptr, i16** %maxC, align 8, !dbg !12024
  %4 = load i16*, i16** %c.addr, align 8, !dbg !12025
  %5 = load i32, i32* %blength.addr, align 4, !dbg !12026
  %idx.ext1 = sext i32 %5 to i64, !dbg !12027
  %add.ptr2 = getelementptr inbounds i16, i16* %4, i64 %idx.ext1, !dbg !12027
  store i16* %add.ptr2, i16** %minC, align 8, !dbg !12028
  %6 = load i32, i32* %bshift.addr, align 4, !dbg !12029
  %cmp = icmp ne i32 %6, 0, !dbg !12031
  br i1 %cmp, label %if.then, label %if.end22, !dbg !12032

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %bshift.addr, align 4, !dbg !12033
  %8 = load i16*, i16** %minC, align 8, !dbg !12035
  %idx.ext3 = sext i32 %7 to i64, !dbg !12035
  %add.ptr4 = getelementptr inbounds i16, i16* %8, i64 %idx.ext3, !dbg !12035
  store i16* %add.ptr4, i16** %minC, align 8, !dbg !12035
  %9 = load i16*, i16** %a.addr, align 8, !dbg !12036
  %10 = load i16*, i16** %c.addr, align 8, !dbg !12038
  %cmp5 = icmp eq i16* %9, %10, !dbg !12039
  br i1 %cmp5, label %land.lhs.true, label %if.else, !dbg !12040

land.lhs.true:                                    ; preds = %if.then
  %11 = load i32, i32* %bshift.addr, align 4, !dbg !12041
  %12 = load i32, i32* %alength.addr, align 4, !dbg !12042
  %cmp6 = icmp sle i32 %11, %12, !dbg !12043
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !12044

if.then7:                                         ; preds = %land.lhs.true
  %13 = load i32, i32* %bshift.addr, align 4, !dbg !12045
  %14 = load i16*, i16** %c.addr, align 8, !dbg !12047
  %idx.ext8 = sext i32 %13 to i64, !dbg !12047
  %add.ptr9 = getelementptr inbounds i16, i16* %14, i64 %idx.ext8, !dbg !12047
  store i16* %add.ptr9, i16** %c.addr, align 8, !dbg !12047
  %15 = load i32, i32* %bshift.addr, align 4, !dbg !12048
  %16 = load i16*, i16** %a.addr, align 8, !dbg !12049
  %idx.ext10 = sext i32 %15 to i64, !dbg !12049
  %add.ptr11 = getelementptr inbounds i16, i16* %16, i64 %idx.ext10, !dbg !12049
  store i16* %add.ptr11, i16** %a.addr, align 8, !dbg !12049
  br label %if.end21, !dbg !12050

if.else:                                          ; preds = %land.lhs.true, %if.then
  br label %for.cond, !dbg !12051

for.cond:                                         ; preds = %for.inc, %if.else
  %17 = load i16*, i16** %c.addr, align 8, !dbg !12052
  %18 = load i16*, i16** %clsu, align 8, !dbg !12055
  %19 = load i32, i32* %bshift.addr, align 4, !dbg !12056
  %idx.ext12 = sext i32 %19 to i64, !dbg !12057
  %add.ptr13 = getelementptr inbounds i16, i16* %18, i64 %idx.ext12, !dbg !12057
  %cmp14 = icmp ult i16* %17, %add.ptr13, !dbg !12058
  br i1 %cmp14, label %for.body, label %for.end, !dbg !12059

for.body:                                         ; preds = %for.cond
  %20 = load i16*, i16** %a.addr, align 8, !dbg !12060
  %21 = load i16*, i16** %alsu, align 8, !dbg !12063
  %22 = load i32, i32* %alength.addr, align 4, !dbg !12064
  %idx.ext15 = sext i32 %22 to i64, !dbg !12065
  %add.ptr16 = getelementptr inbounds i16, i16* %21, i64 %idx.ext15, !dbg !12065
  %cmp17 = icmp ult i16* %20, %add.ptr16, !dbg !12066
  br i1 %cmp17, label %if.then18, label %if.else19, !dbg !12067

if.then18:                                        ; preds = %for.body
  %23 = load i16*, i16** %a.addr, align 8, !dbg !12068
  %24 = load i16, i16* %23, align 2, !dbg !12069
  %25 = load i16*, i16** %c.addr, align 8, !dbg !12070
  store i16 %24, i16* %25, align 2, !dbg !12071
  br label %if.end, !dbg !12072

if.else19:                                        ; preds = %for.body
  %26 = load i16*, i16** %c.addr, align 8, !dbg !12073
  store i16 0, i16* %26, align 2, !dbg !12074
  br label %if.end

if.end:                                           ; preds = %if.else19, %if.then18
  br label %for.inc, !dbg !12075

for.inc:                                          ; preds = %if.end
  %27 = load i16*, i16** %a.addr, align 8, !dbg !12076
  %incdec.ptr = getelementptr inbounds i16, i16* %27, i32 1, !dbg !12076
  store i16* %incdec.ptr, i16** %a.addr, align 8, !dbg !12076
  %28 = load i16*, i16** %c.addr, align 8, !dbg !12077
  %incdec.ptr20 = getelementptr inbounds i16, i16* %28, i32 1, !dbg !12077
  store i16* %incdec.ptr20, i16** %c.addr, align 8, !dbg !12077
  br label %for.cond, !dbg !12078, !llvm.loop !12079

for.end:                                          ; preds = %for.cond
  br label %if.end21

if.end21:                                         ; preds = %for.end, %if.then7
  br label %if.end22, !dbg !12081

if.end22:                                         ; preds = %if.end21, %entry
  %29 = load i16*, i16** %minC, align 8, !dbg !12082
  %30 = load i16*, i16** %maxC, align 8, !dbg !12084
  %cmp23 = icmp ugt i16* %29, %30, !dbg !12085
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !12086

if.then24:                                        ; preds = %if.end22
  call void @llvm.dbg.declare(metadata i16** %hold, metadata !12087, metadata !DIExpression()), !dbg !12089
  %31 = load i16*, i16** %minC, align 8, !dbg !12090
  store i16* %31, i16** %hold, align 8, !dbg !12089
  %32 = load i16*, i16** %maxC, align 8, !dbg !12091
  store i16* %32, i16** %minC, align 8, !dbg !12092
  %33 = load i16*, i16** %hold, align 8, !dbg !12093
  store i16* %33, i16** %maxC, align 8, !dbg !12094
  br label %if.end25, !dbg !12095

if.end25:                                         ; preds = %if.then24, %if.end22
  br label %for.cond26, !dbg !12096

for.cond26:                                       ; preds = %for.inc72, %if.end25
  %34 = load i16*, i16** %c.addr, align 8, !dbg !12097
  %35 = load i16*, i16** %minC, align 8, !dbg !12100
  %cmp27 = icmp ult i16* %34, %35, !dbg !12101
  br i1 %cmp27, label %for.body28, label %for.end74, !dbg !12102

for.body28:                                       ; preds = %for.cond26
  %36 = load i16*, i16** %a.addr, align 8, !dbg !12103
  %37 = load i16, i16* %36, align 2, !dbg !12105
  %conv = zext i16 %37 to i32, !dbg !12105
  %38 = load i32, i32* %carry, align 4, !dbg !12106
  %add29 = add nsw i32 %38, %conv, !dbg !12106
  store i32 %add29, i32* %carry, align 4, !dbg !12106
  %39 = load i16*, i16** %a.addr, align 8, !dbg !12107
  %incdec.ptr30 = getelementptr inbounds i16, i16* %39, i32 1, !dbg !12107
  store i16* %incdec.ptr30, i16** %a.addr, align 8, !dbg !12107
  %40 = load i16*, i16** %b.addr, align 8, !dbg !12108
  %41 = load i16, i16* %40, align 2, !dbg !12109
  %conv31 = zext i16 %41 to i32, !dbg !12110
  %42 = load i32, i32* %m.addr, align 4, !dbg !12111
  %mul = mul nsw i32 %conv31, %42, !dbg !12112
  %43 = load i32, i32* %carry, align 4, !dbg !12113
  %add32 = add nsw i32 %43, %mul, !dbg !12113
  store i32 %add32, i32* %carry, align 4, !dbg !12113
  %44 = load i16*, i16** %b.addr, align 8, !dbg !12114
  %incdec.ptr33 = getelementptr inbounds i16, i16* %44, i32 1, !dbg !12114
  store i16* %incdec.ptr33, i16** %b.addr, align 8, !dbg !12114
  %45 = load i32, i32* %carry, align 4, !dbg !12115
  %cmp34 = icmp ule i32 %45, 999, !dbg !12117
  br i1 %cmp34, label %if.then36, label %if.end38, !dbg !12118

if.then36:                                        ; preds = %for.body28
  %46 = load i32, i32* %carry, align 4, !dbg !12119
  %conv37 = trunc i32 %46 to i16, !dbg !12121
  %47 = load i16*, i16** %c.addr, align 8, !dbg !12122
  store i16 %conv37, i16* %47, align 2, !dbg !12123
  store i32 0, i32* %carry, align 4, !dbg !12124
  br label %for.inc72, !dbg !12125

if.end38:                                         ; preds = %for.body28
  %48 = load i32, i32* %carry, align 4, !dbg !12126
  %cmp39 = icmp sge i32 %48, 0, !dbg !12128
  br i1 %cmp39, label %if.then41, label %if.end54, !dbg !12129

if.then41:                                        ; preds = %if.end38
  %49 = load i32, i32* %carry, align 4, !dbg !12130
  %shr = lshr i32 %49, 3, !dbg !12132
  %mul42 = mul i32 %shr, 16777, !dbg !12133
  %shr43 = lshr i32 %mul42, 21, !dbg !12134
  store i32 %shr43, i32* %est, align 4, !dbg !12135
  %50 = load i32, i32* %carry, align 4, !dbg !12136
  %51 = load i32, i32* %est, align 4, !dbg !12137
  %mul44 = mul nsw i32 %51, 1000, !dbg !12138
  %sub = sub nsw i32 %50, %mul44, !dbg !12139
  %conv45 = trunc i32 %sub to i16, !dbg !12140
  %52 = load i16*, i16** %c.addr, align 8, !dbg !12141
  store i16 %conv45, i16* %52, align 2, !dbg !12142
  %53 = load i32, i32* %est, align 4, !dbg !12143
  store i32 %53, i32* %carry, align 4, !dbg !12144
  %54 = load i16*, i16** %c.addr, align 8, !dbg !12145
  %55 = load i16, i16* %54, align 2, !dbg !12147
  %conv46 = zext i16 %55 to i32, !dbg !12147
  %cmp47 = icmp slt i32 %conv46, 1000, !dbg !12148
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !12149

if.then49:                                        ; preds = %if.then41
  br label %for.inc72, !dbg !12150

if.end50:                                         ; preds = %if.then41
  %56 = load i32, i32* %carry, align 4, !dbg !12151
  %inc = add nsw i32 %56, 1, !dbg !12151
  store i32 %inc, i32* %carry, align 4, !dbg !12151
  %57 = load i16*, i16** %c.addr, align 8, !dbg !12152
  %58 = load i16, i16* %57, align 2, !dbg !12153
  %conv51 = zext i16 %58 to i32, !dbg !12153
  %sub52 = sub nsw i32 %conv51, 1000, !dbg !12153
  %conv53 = trunc i32 %sub52 to i16, !dbg !12153
  store i16 %conv53, i16* %57, align 2, !dbg !12153
  br label %for.inc72, !dbg !12154

if.end54:                                         ; preds = %if.end38
  %59 = load i32, i32* %carry, align 4, !dbg !12155
  %add55 = add nsw i32 %59, 1000000, !dbg !12156
  store i32 %add55, i32* %carry, align 4, !dbg !12157
  %60 = load i32, i32* %carry, align 4, !dbg !12158
  %shr56 = lshr i32 %60, 3, !dbg !12159
  %mul57 = mul i32 %shr56, 16777, !dbg !12160
  %shr58 = lshr i32 %mul57, 21, !dbg !12161
  store i32 %shr58, i32* %est, align 4, !dbg !12162
  %61 = load i32, i32* %carry, align 4, !dbg !12163
  %62 = load i32, i32* %est, align 4, !dbg !12164
  %mul59 = mul nsw i32 %62, 1000, !dbg !12165
  %sub60 = sub nsw i32 %61, %mul59, !dbg !12166
  %conv61 = trunc i32 %sub60 to i16, !dbg !12167
  %63 = load i16*, i16** %c.addr, align 8, !dbg !12168
  store i16 %conv61, i16* %63, align 2, !dbg !12169
  %64 = load i32, i32* %est, align 4, !dbg !12170
  %sub62 = sub nsw i32 %64, 1000, !dbg !12171
  store i32 %sub62, i32* %carry, align 4, !dbg !12172
  %65 = load i16*, i16** %c.addr, align 8, !dbg !12173
  %66 = load i16, i16* %65, align 2, !dbg !12175
  %conv63 = zext i16 %66 to i32, !dbg !12175
  %cmp64 = icmp slt i32 %conv63, 1000, !dbg !12176
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !12177

if.then66:                                        ; preds = %if.end54
  br label %for.inc72, !dbg !12178

if.end67:                                         ; preds = %if.end54
  %67 = load i32, i32* %carry, align 4, !dbg !12179
  %inc68 = add nsw i32 %67, 1, !dbg !12179
  store i32 %inc68, i32* %carry, align 4, !dbg !12179
  %68 = load i16*, i16** %c.addr, align 8, !dbg !12180
  %69 = load i16, i16* %68, align 2, !dbg !12181
  %conv69 = zext i16 %69 to i32, !dbg !12181
  %sub70 = sub nsw i32 %conv69, 1000, !dbg !12181
  %conv71 = trunc i32 %sub70 to i16, !dbg !12181
  store i16 %conv71, i16* %68, align 2, !dbg !12181
  br label %for.inc72, !dbg !12182

for.inc72:                                        ; preds = %if.end67, %if.then66, %if.end50, %if.then49, %if.then36
  %70 = load i16*, i16** %c.addr, align 8, !dbg !12183
  %incdec.ptr73 = getelementptr inbounds i16, i16* %70, i32 1, !dbg !12183
  store i16* %incdec.ptr73, i16** %c.addr, align 8, !dbg !12183
  br label %for.cond26, !dbg !12184, !llvm.loop !12185

for.end74:                                        ; preds = %for.cond26
  %71 = load i16*, i16** %c.addr, align 8, !dbg !12187
  %72 = load i16*, i16** %maxC, align 8, !dbg !12189
  %cmp75 = icmp ult i16* %71, %72, !dbg !12190
  br i1 %cmp75, label %if.then77, label %if.end140, !dbg !12191

if.then77:                                        ; preds = %for.end74
  br label %for.cond78, !dbg !12192

for.cond78:                                       ; preds = %for.inc137, %if.then77
  %73 = load i16*, i16** %c.addr, align 8, !dbg !12193
  %74 = load i16*, i16** %maxC, align 8, !dbg !12196
  %cmp79 = icmp ult i16* %73, %74, !dbg !12197
  br i1 %cmp79, label %for.body81, label %for.end139, !dbg !12198

for.body81:                                       ; preds = %for.cond78
  %75 = load i16*, i16** %a.addr, align 8, !dbg !12199
  %76 = load i16*, i16** %alsu, align 8, !dbg !12202
  %77 = load i32, i32* %alength.addr, align 4, !dbg !12203
  %idx.ext82 = sext i32 %77 to i64, !dbg !12204
  %add.ptr83 = getelementptr inbounds i16, i16* %76, i64 %idx.ext82, !dbg !12204
  %cmp84 = icmp ult i16* %75, %add.ptr83, !dbg !12205
  br i1 %cmp84, label %if.then86, label %if.else90, !dbg !12206

if.then86:                                        ; preds = %for.body81
  %78 = load i16*, i16** %a.addr, align 8, !dbg !12207
  %79 = load i16, i16* %78, align 2, !dbg !12209
  %conv87 = zext i16 %79 to i32, !dbg !12209
  %80 = load i32, i32* %carry, align 4, !dbg !12210
  %add88 = add nsw i32 %80, %conv87, !dbg !12210
  store i32 %add88, i32* %carry, align 4, !dbg !12210
  %81 = load i16*, i16** %a.addr, align 8, !dbg !12211
  %incdec.ptr89 = getelementptr inbounds i16, i16* %81, i32 1, !dbg !12211
  store i16* %incdec.ptr89, i16** %a.addr, align 8, !dbg !12211
  br label %if.end95, !dbg !12212

if.else90:                                        ; preds = %for.body81
  %82 = load i16*, i16** %b.addr, align 8, !dbg !12213
  %83 = load i16, i16* %82, align 2, !dbg !12215
  %conv91 = zext i16 %83 to i32, !dbg !12216
  %84 = load i32, i32* %m.addr, align 4, !dbg !12217
  %mul92 = mul nsw i32 %conv91, %84, !dbg !12218
  %85 = load i32, i32* %carry, align 4, !dbg !12219
  %add93 = add nsw i32 %85, %mul92, !dbg !12219
  store i32 %add93, i32* %carry, align 4, !dbg !12219
  %86 = load i16*, i16** %b.addr, align 8, !dbg !12220
  %incdec.ptr94 = getelementptr inbounds i16, i16* %86, i32 1, !dbg !12220
  store i16* %incdec.ptr94, i16** %b.addr, align 8, !dbg !12220
  br label %if.end95

if.end95:                                         ; preds = %if.else90, %if.then86
  %87 = load i32, i32* %carry, align 4, !dbg !12221
  %cmp96 = icmp ule i32 %87, 999, !dbg !12223
  br i1 %cmp96, label %if.then98, label %if.end100, !dbg !12224

if.then98:                                        ; preds = %if.end95
  %88 = load i32, i32* %carry, align 4, !dbg !12225
  %conv99 = trunc i32 %88 to i16, !dbg !12227
  %89 = load i16*, i16** %c.addr, align 8, !dbg !12228
  store i16 %conv99, i16* %89, align 2, !dbg !12229
  store i32 0, i32* %carry, align 4, !dbg !12230
  br label %for.inc137, !dbg !12231

if.end100:                                        ; preds = %if.end95
  %90 = load i32, i32* %carry, align 4, !dbg !12232
  %cmp101 = icmp sge i32 %90, 0, !dbg !12234
  br i1 %cmp101, label %if.then103, label %if.end119, !dbg !12235

if.then103:                                       ; preds = %if.end100
  %91 = load i32, i32* %carry, align 4, !dbg !12236
  %shr104 = lshr i32 %91, 3, !dbg !12238
  %mul105 = mul i32 %shr104, 16777, !dbg !12239
  %shr106 = lshr i32 %mul105, 21, !dbg !12240
  store i32 %shr106, i32* %est, align 4, !dbg !12241
  %92 = load i32, i32* %carry, align 4, !dbg !12242
  %93 = load i32, i32* %est, align 4, !dbg !12243
  %mul107 = mul nsw i32 %93, 1000, !dbg !12244
  %sub108 = sub nsw i32 %92, %mul107, !dbg !12245
  %conv109 = trunc i32 %sub108 to i16, !dbg !12246
  %94 = load i16*, i16** %c.addr, align 8, !dbg !12247
  store i16 %conv109, i16* %94, align 2, !dbg !12248
  %95 = load i32, i32* %est, align 4, !dbg !12249
  store i32 %95, i32* %carry, align 4, !dbg !12250
  %96 = load i16*, i16** %c.addr, align 8, !dbg !12251
  %97 = load i16, i16* %96, align 2, !dbg !12253
  %conv110 = zext i16 %97 to i32, !dbg !12253
  %cmp111 = icmp slt i32 %conv110, 1000, !dbg !12254
  br i1 %cmp111, label %if.then113, label %if.end114, !dbg !12255

if.then113:                                       ; preds = %if.then103
  br label %for.inc137, !dbg !12256

if.end114:                                        ; preds = %if.then103
  %98 = load i32, i32* %carry, align 4, !dbg !12257
  %inc115 = add nsw i32 %98, 1, !dbg !12257
  store i32 %inc115, i32* %carry, align 4, !dbg !12257
  %99 = load i16*, i16** %c.addr, align 8, !dbg !12258
  %100 = load i16, i16* %99, align 2, !dbg !12259
  %conv116 = zext i16 %100 to i32, !dbg !12259
  %sub117 = sub nsw i32 %conv116, 1000, !dbg !12259
  %conv118 = trunc i32 %sub117 to i16, !dbg !12259
  store i16 %conv118, i16* %99, align 2, !dbg !12259
  br label %for.inc137, !dbg !12260

if.end119:                                        ; preds = %if.end100
  %101 = load i32, i32* %carry, align 4, !dbg !12261
  %add120 = add nsw i32 %101, 1000000, !dbg !12262
  store i32 %add120, i32* %carry, align 4, !dbg !12263
  %102 = load i32, i32* %carry, align 4, !dbg !12264
  %shr121 = lshr i32 %102, 3, !dbg !12265
  %mul122 = mul i32 %shr121, 16777, !dbg !12266
  %shr123 = lshr i32 %mul122, 21, !dbg !12267
  store i32 %shr123, i32* %est, align 4, !dbg !12268
  %103 = load i32, i32* %carry, align 4, !dbg !12269
  %104 = load i32, i32* %est, align 4, !dbg !12270
  %mul124 = mul nsw i32 %104, 1000, !dbg !12271
  %sub125 = sub nsw i32 %103, %mul124, !dbg !12272
  %conv126 = trunc i32 %sub125 to i16, !dbg !12273
  %105 = load i16*, i16** %c.addr, align 8, !dbg !12274
  store i16 %conv126, i16* %105, align 2, !dbg !12275
  %106 = load i32, i32* %est, align 4, !dbg !12276
  %sub127 = sub nsw i32 %106, 1000, !dbg !12277
  store i32 %sub127, i32* %carry, align 4, !dbg !12278
  %107 = load i16*, i16** %c.addr, align 8, !dbg !12279
  %108 = load i16, i16* %107, align 2, !dbg !12281
  %conv128 = zext i16 %108 to i32, !dbg !12281
  %cmp129 = icmp slt i32 %conv128, 1000, !dbg !12282
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !12283

if.then131:                                       ; preds = %if.end119
  br label %for.inc137, !dbg !12284

if.end132:                                        ; preds = %if.end119
  %109 = load i32, i32* %carry, align 4, !dbg !12285
  %inc133 = add nsw i32 %109, 1, !dbg !12285
  store i32 %inc133, i32* %carry, align 4, !dbg !12285
  %110 = load i16*, i16** %c.addr, align 8, !dbg !12286
  %111 = load i16, i16* %110, align 2, !dbg !12287
  %conv134 = zext i16 %111 to i32, !dbg !12287
  %sub135 = sub nsw i32 %conv134, 1000, !dbg !12287
  %conv136 = trunc i32 %sub135 to i16, !dbg !12287
  store i16 %conv136, i16* %110, align 2, !dbg !12287
  br label %for.inc137, !dbg !12288

for.inc137:                                       ; preds = %if.end132, %if.then131, %if.end114, %if.then113, %if.then98
  %112 = load i16*, i16** %c.addr, align 8, !dbg !12289
  %incdec.ptr138 = getelementptr inbounds i16, i16* %112, i32 1, !dbg !12289
  store i16* %incdec.ptr138, i16** %c.addr, align 8, !dbg !12289
  br label %for.cond78, !dbg !12290, !llvm.loop !12291

for.end139:                                       ; preds = %for.cond78
  br label %if.end140, !dbg !12292

if.end140:                                        ; preds = %for.end139, %for.end74
  %113 = load i32, i32* %carry, align 4, !dbg !12293
  %cmp141 = icmp eq i32 %113, 0, !dbg !12295
  br i1 %cmp141, label %if.then143, label %if.end145, !dbg !12296

if.then143:                                       ; preds = %if.end140
  %114 = load i16*, i16** %c.addr, align 8, !dbg !12297
  %115 = load i16*, i16** %clsu, align 8, !dbg !12298
  %sub.ptr.lhs.cast = ptrtoint i16* %114 to i64, !dbg !12299
  %sub.ptr.rhs.cast = ptrtoint i16* %115 to i64, !dbg !12299
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12299
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2, !dbg !12299
  %conv144 = trunc i64 %sub.ptr.div to i32, !dbg !12297
  store i32 %conv144, i32* %retval, align 4, !dbg !12300
  br label %return, !dbg !12300

if.end145:                                        ; preds = %if.end140
  %116 = load i32, i32* %carry, align 4, !dbg !12301
  %cmp146 = icmp sgt i32 %116, 0, !dbg !12303
  br i1 %cmp146, label %if.then148, label %if.end156, !dbg !12304

if.then148:                                       ; preds = %if.end145
  %117 = load i32, i32* %carry, align 4, !dbg !12305
  %conv149 = trunc i32 %117 to i16, !dbg !12307
  %118 = load i16*, i16** %c.addr, align 8, !dbg !12308
  store i16 %conv149, i16* %118, align 2, !dbg !12309
  %119 = load i16*, i16** %c.addr, align 8, !dbg !12310
  %incdec.ptr150 = getelementptr inbounds i16, i16* %119, i32 1, !dbg !12310
  store i16* %incdec.ptr150, i16** %c.addr, align 8, !dbg !12310
  %120 = load i16*, i16** %c.addr, align 8, !dbg !12311
  %121 = load i16*, i16** %clsu, align 8, !dbg !12312
  %sub.ptr.lhs.cast151 = ptrtoint i16* %120 to i64, !dbg !12313
  %sub.ptr.rhs.cast152 = ptrtoint i16* %121 to i64, !dbg !12313
  %sub.ptr.sub153 = sub i64 %sub.ptr.lhs.cast151, %sub.ptr.rhs.cast152, !dbg !12313
  %sub.ptr.div154 = sdiv exact i64 %sub.ptr.sub153, 2, !dbg !12313
  %conv155 = trunc i64 %sub.ptr.div154 to i32, !dbg !12311
  store i32 %conv155, i32* %retval, align 4, !dbg !12314
  br label %return, !dbg !12314

if.end156:                                        ; preds = %if.end145
  store i32 1, i32* %add, align 4, !dbg !12315
  %122 = load i16*, i16** %clsu, align 8, !dbg !12316
  store i16* %122, i16** %c.addr, align 8, !dbg !12318
  br label %for.cond157, !dbg !12319

for.cond157:                                      ; preds = %for.inc170, %if.end156
  %123 = load i16*, i16** %c.addr, align 8, !dbg !12320
  %124 = load i16*, i16** %maxC, align 8, !dbg !12322
  %cmp158 = icmp ult i16* %123, %124, !dbg !12323
  br i1 %cmp158, label %for.body160, label %for.end172, !dbg !12324

for.body160:                                      ; preds = %for.cond157
  %125 = load i32, i32* %add, align 4, !dbg !12325
  %add161 = add nsw i32 999, %125, !dbg !12327
  %126 = load i16*, i16** %c.addr, align 8, !dbg !12328
  %127 = load i16, i16* %126, align 2, !dbg !12329
  %conv162 = zext i16 %127 to i32, !dbg !12329
  %sub163 = sub nsw i32 %add161, %conv162, !dbg !12330
  store i32 %sub163, i32* %add, align 4, !dbg !12331
  %128 = load i32, i32* %add, align 4, !dbg !12332
  %cmp164 = icmp sle i32 %128, 999, !dbg !12334
  br i1 %cmp164, label %if.then166, label %if.else168, !dbg !12335

if.then166:                                       ; preds = %for.body160
  %129 = load i32, i32* %add, align 4, !dbg !12336
  %conv167 = trunc i32 %129 to i16, !dbg !12338
  %130 = load i16*, i16** %c.addr, align 8, !dbg !12339
  store i16 %conv167, i16* %130, align 2, !dbg !12340
  store i32 0, i32* %add, align 4, !dbg !12341
  br label %if.end169, !dbg !12342

if.else168:                                       ; preds = %for.body160
  %131 = load i16*, i16** %c.addr, align 8, !dbg !12343
  store i16 0, i16* %131, align 2, !dbg !12345
  store i32 1, i32* %add, align 4, !dbg !12346
  br label %if.end169

if.end169:                                        ; preds = %if.else168, %if.then166
  br label %for.inc170, !dbg !12347

for.inc170:                                       ; preds = %if.end169
  %132 = load i16*, i16** %c.addr, align 8, !dbg !12348
  %incdec.ptr171 = getelementptr inbounds i16, i16* %132, i32 1, !dbg !12348
  store i16* %incdec.ptr171, i16** %c.addr, align 8, !dbg !12348
  br label %for.cond157, !dbg !12349, !llvm.loop !12350

for.end172:                                       ; preds = %for.cond157
  %133 = load i32, i32* %add, align 4, !dbg !12352
  %134 = load i32, i32* %carry, align 4, !dbg !12354
  %sub173 = sub nsw i32 %133, %134, !dbg !12355
  %sub174 = sub nsw i32 %sub173, 1, !dbg !12356
  %cmp175 = icmp ne i32 %sub174, 0, !dbg !12357
  br i1 %cmp175, label %if.then177, label %if.end182, !dbg !12358

if.then177:                                       ; preds = %for.end172
  %135 = load i32, i32* %add, align 4, !dbg !12359
  %136 = load i32, i32* %carry, align 4, !dbg !12361
  %sub178 = sub nsw i32 %135, %136, !dbg !12362
  %sub179 = sub nsw i32 %sub178, 1, !dbg !12363
  %conv180 = trunc i32 %sub179 to i16, !dbg !12364
  %137 = load i16*, i16** %c.addr, align 8, !dbg !12365
  store i16 %conv180, i16* %137, align 2, !dbg !12366
  %138 = load i16*, i16** %c.addr, align 8, !dbg !12367
  %incdec.ptr181 = getelementptr inbounds i16, i16* %138, i32 1, !dbg !12367
  store i16* %incdec.ptr181, i16** %c.addr, align 8, !dbg !12367
  br label %if.end182, !dbg !12368

if.end182:                                        ; preds = %if.then177, %for.end172
  %139 = load i16*, i16** %clsu, align 8, !dbg !12369
  %140 = load i16*, i16** %c.addr, align 8, !dbg !12370
  %sub.ptr.lhs.cast183 = ptrtoint i16* %139 to i64, !dbg !12371
  %sub.ptr.rhs.cast184 = ptrtoint i16* %140 to i64, !dbg !12371
  %sub.ptr.sub185 = sub i64 %sub.ptr.lhs.cast183, %sub.ptr.rhs.cast184, !dbg !12371
  %sub.ptr.div186 = sdiv exact i64 %sub.ptr.sub185, 2, !dbg !12371
  %conv187 = trunc i64 %sub.ptr.div186 to i32, !dbg !12369
  store i32 %conv187, i32* %retval, align 4, !dbg !12372
  br label %return, !dbg !12372

return:                                           ; preds = %if.end182, %if.then148, %if.then143
  %141 = load i32, i32* %retval, align 4, !dbg !12373
  ret i32 %141, !dbg !12373
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @decUnitCompare(i16* %a, i32 %alength, i16* %b, i32 %blength, i32 %exp) #0 !dbg !12374 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i16*, align 8
  %alength.addr = alloca i32, align 4
  %b.addr = alloca i16*, align 8
  %blength.addr = alloca i32, align 4
  %exp.addr = alloca i32, align 4
  %acc = alloca i16*, align 8
  %accbuff = alloca [25 x i16], align 16
  %allocacc = alloca i16*, align 8
  %accunits = alloca i32, align 4
  %need = alloca i32, align 4
  %l = alloca i16*, align 8
  %r = alloca i16*, align 8
  %u = alloca i16*, align 8
  %expunits = alloca i32, align 4
  %exprem = alloca i32, align 4
  %result = alloca i32, align 4
  store i16* %a, i16** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %a.addr, metadata !12377, metadata !DIExpression()), !dbg !12378
  store i32 %alength, i32* %alength.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alength.addr, metadata !12379, metadata !DIExpression()), !dbg !12380
  store i16* %b, i16** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %b.addr, metadata !12381, metadata !DIExpression()), !dbg !12382
  store i32 %blength, i32* %blength.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %blength.addr, metadata !12383, metadata !DIExpression()), !dbg !12384
  store i32 %exp, i32* %exp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %exp.addr, metadata !12385, metadata !DIExpression()), !dbg !12386
  call void @llvm.dbg.declare(metadata i16** %acc, metadata !12387, metadata !DIExpression()), !dbg !12388
  call void @llvm.dbg.declare(metadata [25 x i16]* %accbuff, metadata !12389, metadata !DIExpression()), !dbg !12390
  call void @llvm.dbg.declare(metadata i16** %allocacc, metadata !12391, metadata !DIExpression()), !dbg !12392
  store i16* null, i16** %allocacc, align 8, !dbg !12392
  call void @llvm.dbg.declare(metadata i32* %accunits, metadata !12393, metadata !DIExpression()), !dbg !12394
  call void @llvm.dbg.declare(metadata i32* %need, metadata !12395, metadata !DIExpression()), !dbg !12396
  call void @llvm.dbg.declare(metadata i16** %l, metadata !12397, metadata !DIExpression()), !dbg !12398
  call void @llvm.dbg.declare(metadata i16** %r, metadata !12399, metadata !DIExpression()), !dbg !12400
  call void @llvm.dbg.declare(metadata i16** %u, metadata !12401, metadata !DIExpression()), !dbg !12402
  call void @llvm.dbg.declare(metadata i32* %expunits, metadata !12403, metadata !DIExpression()), !dbg !12404
  call void @llvm.dbg.declare(metadata i32* %exprem, metadata !12405, metadata !DIExpression()), !dbg !12406
  call void @llvm.dbg.declare(metadata i32* %result, metadata !12407, metadata !DIExpression()), !dbg !12408
  %0 = load i32, i32* %exp.addr, align 4, !dbg !12409
  %cmp = icmp eq i32 %0, 0, !dbg !12411
  br i1 %cmp, label %if.then, label %if.end23, !dbg !12412

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %alength.addr, align 4, !dbg !12413
  %2 = load i32, i32* %blength.addr, align 4, !dbg !12416
  %cmp1 = icmp sgt i32 %1, %2, !dbg !12417
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !12418

if.then2:                                         ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !12419
  br label %return, !dbg !12419

if.end:                                           ; preds = %if.then
  %3 = load i32, i32* %alength.addr, align 4, !dbg !12420
  %4 = load i32, i32* %blength.addr, align 4, !dbg !12422
  %cmp3 = icmp slt i32 %3, %4, !dbg !12423
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !12424

if.then4:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !12425
  br label %return, !dbg !12425

if.end5:                                          ; preds = %if.end
  %5 = load i16*, i16** %a.addr, align 8, !dbg !12426
  %6 = load i32, i32* %alength.addr, align 4, !dbg !12427
  %idx.ext = sext i32 %6 to i64, !dbg !12428
  %add.ptr = getelementptr inbounds i16, i16* %5, i64 %idx.ext, !dbg !12428
  %add.ptr6 = getelementptr inbounds i16, i16* %add.ptr, i64 -1, !dbg !12429
  store i16* %add.ptr6, i16** %l, align 8, !dbg !12430
  %7 = load i16*, i16** %b.addr, align 8, !dbg !12431
  %8 = load i32, i32* %alength.addr, align 4, !dbg !12432
  %idx.ext7 = sext i32 %8 to i64, !dbg !12433
  %add.ptr8 = getelementptr inbounds i16, i16* %7, i64 %idx.ext7, !dbg !12433
  %add.ptr9 = getelementptr inbounds i16, i16* %add.ptr8, i64 -1, !dbg !12434
  store i16* %add.ptr9, i16** %r, align 8, !dbg !12435
  br label %for.cond, !dbg !12436

for.cond:                                         ; preds = %for.inc, %if.end5
  %9 = load i16*, i16** %l, align 8, !dbg !12437
  %10 = load i16*, i16** %a.addr, align 8, !dbg !12440
  %cmp10 = icmp uge i16* %9, %10, !dbg !12441
  br i1 %cmp10, label %for.body, label %for.end, !dbg !12442

for.body:                                         ; preds = %for.cond
  %11 = load i16*, i16** %l, align 8, !dbg !12443
  %12 = load i16, i16* %11, align 2, !dbg !12446
  %conv = zext i16 %12 to i32, !dbg !12446
  %13 = load i16*, i16** %r, align 8, !dbg !12447
  %14 = load i16, i16* %13, align 2, !dbg !12448
  %conv11 = zext i16 %14 to i32, !dbg !12448
  %cmp12 = icmp sgt i32 %conv, %conv11, !dbg !12449
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !12450

if.then14:                                        ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !12451
  br label %return, !dbg !12451

if.end15:                                         ; preds = %for.body
  %15 = load i16*, i16** %l, align 8, !dbg !12452
  %16 = load i16, i16* %15, align 2, !dbg !12454
  %conv16 = zext i16 %16 to i32, !dbg !12454
  %17 = load i16*, i16** %r, align 8, !dbg !12455
  %18 = load i16, i16* %17, align 2, !dbg !12456
  %conv17 = zext i16 %18 to i32, !dbg !12456
  %cmp18 = icmp slt i32 %conv16, %conv17, !dbg !12457
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !12458

if.then20:                                        ; preds = %if.end15
  store i32 -1, i32* %retval, align 4, !dbg !12459
  br label %return, !dbg !12459

if.end21:                                         ; preds = %if.end15
  br label %for.inc, !dbg !12460

for.inc:                                          ; preds = %if.end21
  %19 = load i16*, i16** %l, align 8, !dbg !12461
  %incdec.ptr = getelementptr inbounds i16, i16* %19, i32 -1, !dbg !12461
  store i16* %incdec.ptr, i16** %l, align 8, !dbg !12461
  %20 = load i16*, i16** %r, align 8, !dbg !12462
  %incdec.ptr22 = getelementptr inbounds i16, i16* %20, i32 -1, !dbg !12462
  store i16* %incdec.ptr22, i16** %r, align 8, !dbg !12462
  br label %for.cond, !dbg !12463, !llvm.loop !12464

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !12466
  br label %return, !dbg !12466

if.end23:                                         ; preds = %entry
  %21 = load i32, i32* %alength.addr, align 4, !dbg !12467
  %22 = load i32, i32* %blength.addr, align 4, !dbg !12469
  %23 = load i32, i32* %exp.addr, align 4, !dbg !12470
  %cmp24 = icmp sle i32 %23, 49, !dbg !12470
  br i1 %cmp24, label %cond.true, label %cond.false, !dbg !12470

cond.true:                                        ; preds = %if.end23
  %24 = load i32, i32* %exp.addr, align 4, !dbg !12470
  %idxprom = sext i32 %24 to i64, !dbg !12470
  %arrayidx = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom, !dbg !12470
  %25 = load i8, i8* %arrayidx, align 1, !dbg !12470
  %conv26 = zext i8 %25 to i32, !dbg !12470
  br label %cond.end, !dbg !12470

cond.false:                                       ; preds = %if.end23
  %26 = load i32, i32* %exp.addr, align 4, !dbg !12470
  %add = add nsw i32 %26, 3, !dbg !12470
  %sub = sub nsw i32 %add, 1, !dbg !12470
  %div = sdiv i32 %sub, 3, !dbg !12470
  br label %cond.end, !dbg !12470

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv26, %cond.true ], [ %div, %cond.false ], !dbg !12470
  %add27 = add nsw i32 %22, %cond, !dbg !12471
  %cmp28 = icmp sgt i32 %21, %add27, !dbg !12472
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !12473

if.then30:                                        ; preds = %cond.end
  store i32 1, i32* %retval, align 4, !dbg !12474
  br label %return, !dbg !12474

if.end31:                                         ; preds = %cond.end
  %27 = load i32, i32* %alength.addr, align 4, !dbg !12475
  %add32 = add nsw i32 %27, 1, !dbg !12477
  %28 = load i32, i32* %blength.addr, align 4, !dbg !12478
  %29 = load i32, i32* %exp.addr, align 4, !dbg !12479
  %cmp33 = icmp sle i32 %29, 49, !dbg !12479
  br i1 %cmp33, label %cond.true35, label %cond.false39, !dbg !12479

cond.true35:                                      ; preds = %if.end31
  %30 = load i32, i32* %exp.addr, align 4, !dbg !12479
  %idxprom36 = sext i32 %30 to i64, !dbg !12479
  %arrayidx37 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom36, !dbg !12479
  %31 = load i8, i8* %arrayidx37, align 1, !dbg !12479
  %conv38 = zext i8 %31 to i32, !dbg !12479
  br label %cond.end43, !dbg !12479

cond.false39:                                     ; preds = %if.end31
  %32 = load i32, i32* %exp.addr, align 4, !dbg !12479
  %add40 = add nsw i32 %32, 3, !dbg !12479
  %sub41 = sub nsw i32 %add40, 1, !dbg !12479
  %div42 = sdiv i32 %sub41, 3, !dbg !12479
  br label %cond.end43, !dbg !12479

cond.end43:                                       ; preds = %cond.false39, %cond.true35
  %cond44 = phi i32 [ %conv38, %cond.true35 ], [ %div42, %cond.false39 ], !dbg !12479
  %add45 = add nsw i32 %28, %cond44, !dbg !12480
  %cmp46 = icmp slt i32 %add32, %add45, !dbg !12481
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !12482

if.then48:                                        ; preds = %cond.end43
  store i32 -1, i32* %retval, align 4, !dbg !12483
  br label %return, !dbg !12483

if.end49:                                         ; preds = %cond.end43
  %33 = load i32, i32* %blength.addr, align 4, !dbg !12484
  %34 = load i32, i32* %exp.addr, align 4, !dbg !12485
  %cmp50 = icmp sle i32 %34, 49, !dbg !12485
  br i1 %cmp50, label %cond.true52, label %cond.false56, !dbg !12485

cond.true52:                                      ; preds = %if.end49
  %35 = load i32, i32* %exp.addr, align 4, !dbg !12485
  %idxprom53 = sext i32 %35 to i64, !dbg !12485
  %arrayidx54 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom53, !dbg !12485
  %36 = load i8, i8* %arrayidx54, align 1, !dbg !12485
  %conv55 = zext i8 %36 to i32, !dbg !12485
  br label %cond.end60, !dbg !12485

cond.false56:                                     ; preds = %if.end49
  %37 = load i32, i32* %exp.addr, align 4, !dbg !12485
  %add57 = add nsw i32 %37, 3, !dbg !12485
  %sub58 = sub nsw i32 %add57, 1, !dbg !12485
  %div59 = sdiv i32 %sub58, 3, !dbg !12485
  br label %cond.end60, !dbg !12485

cond.end60:                                       ; preds = %cond.false56, %cond.true52
  %cond61 = phi i32 [ %conv55, %cond.true52 ], [ %div59, %cond.false56 ], !dbg !12485
  %add62 = add nsw i32 %33, %cond61, !dbg !12486
  store i32 %add62, i32* %need, align 4, !dbg !12487
  %38 = load i32, i32* %need, align 4, !dbg !12488
  %39 = load i32, i32* %alength.addr, align 4, !dbg !12490
  %cmp63 = icmp slt i32 %38, %39, !dbg !12491
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !12492

if.then65:                                        ; preds = %cond.end60
  %40 = load i32, i32* %alength.addr, align 4, !dbg !12493
  store i32 %40, i32* %need, align 4, !dbg !12494
  br label %if.end66, !dbg !12495

if.end66:                                         ; preds = %if.then65, %cond.end60
  %41 = load i32, i32* %need, align 4, !dbg !12496
  %add67 = add nsw i32 %41, 2, !dbg !12496
  store i32 %add67, i32* %need, align 4, !dbg !12496
  %arraydecay = getelementptr inbounds [25 x i16], [25 x i16]* %accbuff, i64 0, i64 0, !dbg !12497
  store i16* %arraydecay, i16** %acc, align 8, !dbg !12498
  %42 = load i32, i32* %need, align 4, !dbg !12499
  %conv68 = sext i32 %42 to i64, !dbg !12499
  %mul = mul i64 %conv68, 2, !dbg !12501
  %cmp69 = icmp ugt i64 %mul, 50, !dbg !12502
  br i1 %cmp69, label %if.then71, label %if.end78, !dbg !12503

if.then71:                                        ; preds = %if.end66
  %43 = load i32, i32* %need, align 4, !dbg !12504
  %conv72 = sext i32 %43 to i64, !dbg !12504
  %mul73 = mul i64 %conv72, 2, !dbg !12506
  %call = call noalias i8* @malloc(i64 %mul73) #6, !dbg !12507
  %44 = bitcast i8* %call to i16*, !dbg !12508
  store i16* %44, i16** %allocacc, align 8, !dbg !12509
  %45 = load i16*, i16** %allocacc, align 8, !dbg !12510
  %cmp74 = icmp eq i16* %45, null, !dbg !12512
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !12513

if.then76:                                        ; preds = %if.then71
  store i32 -2147483648, i32* %retval, align 4, !dbg !12514
  br label %return, !dbg !12514

if.end77:                                         ; preds = %if.then71
  %46 = load i16*, i16** %allocacc, align 8, !dbg !12515
  store i16* %46, i16** %acc, align 8, !dbg !12516
  br label %if.end78, !dbg !12517

if.end78:                                         ; preds = %if.end77, %if.end66
  %47 = load i32, i32* %exp.addr, align 4, !dbg !12518
  %div79 = sdiv i32 %47, 3, !dbg !12519
  store i32 %div79, i32* %expunits, align 4, !dbg !12520
  %48 = load i32, i32* %exp.addr, align 4, !dbg !12521
  %rem = srem i32 %48, 3, !dbg !12522
  store i32 %rem, i32* %exprem, align 4, !dbg !12523
  %49 = load i16*, i16** %a.addr, align 8, !dbg !12524
  %50 = load i32, i32* %alength.addr, align 4, !dbg !12525
  %51 = load i16*, i16** %b.addr, align 8, !dbg !12526
  %52 = load i32, i32* %blength.addr, align 4, !dbg !12527
  %53 = load i32, i32* %expunits, align 4, !dbg !12528
  %54 = load i16*, i16** %acc, align 8, !dbg !12529
  %55 = load i32, i32* %exprem, align 4, !dbg !12530
  %idxprom80 = sext i32 %55 to i64, !dbg !12531
  %arrayidx81 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom80, !dbg !12531
  %56 = load i32, i32* %arrayidx81, align 4, !dbg !12531
  %sub82 = sub nsw i32 0, %56, !dbg !12532
  %call83 = call i32 @decUnitAddSub(i16* %49, i32 %50, i16* %51, i32 %52, i32 %53, i16* %54, i32 %sub82), !dbg !12533
  store i32 %call83, i32* %accunits, align 4, !dbg !12534
  %57 = load i32, i32* %accunits, align 4, !dbg !12535
  %cmp84 = icmp slt i32 %57, 0, !dbg !12537
  br i1 %cmp84, label %if.then86, label %if.else, !dbg !12538

if.then86:                                        ; preds = %if.end78
  store i32 -1, i32* %result, align 4, !dbg !12539
  br label %if.end103, !dbg !12540

if.else:                                          ; preds = %if.end78
  %58 = load i16*, i16** %acc, align 8, !dbg !12541
  store i16* %58, i16** %u, align 8, !dbg !12544
  br label %for.cond87, !dbg !12545

for.cond87:                                       ; preds = %for.body96, %if.else
  %59 = load i16*, i16** %u, align 8, !dbg !12546
  %60 = load i16*, i16** %acc, align 8, !dbg !12548
  %61 = load i32, i32* %accunits, align 4, !dbg !12549
  %idx.ext88 = sext i32 %61 to i64, !dbg !12550
  %add.ptr89 = getelementptr inbounds i16, i16* %60, i64 %idx.ext88, !dbg !12550
  %add.ptr90 = getelementptr inbounds i16, i16* %add.ptr89, i64 -1, !dbg !12551
  %cmp91 = icmp ult i16* %59, %add.ptr90, !dbg !12552
  br i1 %cmp91, label %land.rhs, label %land.end, !dbg !12553

land.rhs:                                         ; preds = %for.cond87
  %62 = load i16*, i16** %u, align 8, !dbg !12554
  %63 = load i16, i16* %62, align 2, !dbg !12555
  %conv93 = zext i16 %63 to i32, !dbg !12555
  %cmp94 = icmp eq i32 %conv93, 0, !dbg !12556
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond87
  %64 = phi i1 [ false, %for.cond87 ], [ %cmp94, %land.rhs ], !dbg !12557
  br i1 %64, label %for.body96, label %for.end98, !dbg !12558

for.body96:                                       ; preds = %land.end
  %65 = load i16*, i16** %u, align 8, !dbg !12559
  %incdec.ptr97 = getelementptr inbounds i16, i16* %65, i32 1, !dbg !12559
  store i16* %incdec.ptr97, i16** %u, align 8, !dbg !12559
  br label %for.cond87, !dbg !12560, !llvm.loop !12561

for.end98:                                        ; preds = %land.end
  %66 = load i16*, i16** %u, align 8, !dbg !12563
  %67 = load i16, i16* %66, align 2, !dbg !12564
  %conv99 = zext i16 %67 to i32, !dbg !12564
  %cmp100 = icmp eq i32 %conv99, 0, !dbg !12565
  %68 = zext i1 %cmp100 to i64, !dbg !12564
  %cond102 = select i1 %cmp100, i32 0, i32 1, !dbg !12564
  store i32 %cond102, i32* %result, align 4, !dbg !12566
  br label %if.end103

if.end103:                                        ; preds = %for.end98, %if.then86
  %69 = load i16*, i16** %allocacc, align 8, !dbg !12567
  %cmp104 = icmp ne i16* %69, null, !dbg !12569
  br i1 %cmp104, label %if.then106, label %if.end107, !dbg !12570

if.then106:                                       ; preds = %if.end103
  %70 = load i16*, i16** %allocacc, align 8, !dbg !12571
  %71 = bitcast i16* %70 to i8*, !dbg !12571
  call void @free(i8* %71) #6, !dbg !12572
  br label %if.end107, !dbg !12572

if.end107:                                        ; preds = %if.then106, %if.end103
  %72 = load i32, i32* %result, align 4, !dbg !12573
  store i32 %72, i32* %retval, align 4, !dbg !12574
  br label %return, !dbg !12574

return:                                           ; preds = %if.end107, %if.then76, %if.then48, %if.then30, %for.end, %if.then20, %if.then14, %if.then4, %if.then2
  %73 = load i32, i32* %retval, align 4, !dbg !12575
  ret i32 %73, !dbg !12575
}

; Function Attrs: noinline nounwind uwtable
define internal void @decApplyRound(%struct.decNumber* %dn, %struct.decContext* %set, i32 %residue, i32* %status) #0 !dbg !12576 {
entry:
  %dn.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %residue.addr = alloca i32, align 4
  %status.addr = alloca i32*, align 8
  %bump = alloca i32, align 4
  %lsd5 = alloca i32, align 4
  %up = alloca i16*, align 8
  %count = alloca i32, align 4
  %up126 = alloca i16*, align 8
  %sup = alloca i16*, align 8
  %count127 = alloca i32, align 4
  store %struct.decNumber* %dn, %struct.decNumber** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dn.addr, metadata !12579, metadata !DIExpression()), !dbg !12580
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !12581, metadata !DIExpression()), !dbg !12582
  store i32 %residue, i32* %residue.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %residue.addr, metadata !12583, metadata !DIExpression()), !dbg !12584
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !12585, metadata !DIExpression()), !dbg !12586
  call void @llvm.dbg.declare(metadata i32* %bump, metadata !12587, metadata !DIExpression()), !dbg !12588
  %0 = load i32, i32* %residue.addr, align 4, !dbg !12589
  %cmp = icmp eq i32 %0, 0, !dbg !12591
  br i1 %cmp, label %if.then, label %if.end, !dbg !12592

if.then:                                          ; preds = %entry
  br label %return, !dbg !12593

if.end:                                           ; preds = %entry
  store i32 0, i32* %bump, align 4, !dbg !12594
  %1 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !12595
  %round = getelementptr inbounds %struct.decContext, %struct.decContext* %1, i32 0, i32 3, !dbg !12596
  %2 = load i32, i32* %round, align 4, !dbg !12596
  switch i32 %2, label %sw.default [
    i32 7, label %sw.bb
    i32 5, label %sw.bb14
    i32 4, label %sw.bb19
    i32 3, label %sw.bb24
    i32 2, label %sw.bb39
    i32 1, label %sw.bb44
    i32 0, label %sw.bb49
    i32 6, label %sw.bb65
  ], !dbg !12597

sw.bb:                                            ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %lsd5, metadata !12598, metadata !DIExpression()), !dbg !12601
  %3 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12602
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %3, i32 0, i32 3, !dbg !12603
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !12604
  %4 = load i16, i16* %arraydecay, align 2, !dbg !12604
  %conv = zext i16 %4 to i32, !dbg !12604
  %rem = srem i32 %conv, 5, !dbg !12605
  store i32 %rem, i32* %lsd5, align 4, !dbg !12601
  %5 = load i32, i32* %residue.addr, align 4, !dbg !12606
  %cmp1 = icmp slt i32 %5, 0, !dbg !12608
  br i1 %cmp1, label %land.lhs.true, label %if.else, !dbg !12609

land.lhs.true:                                    ; preds = %sw.bb
  %6 = load i32, i32* %lsd5, align 4, !dbg !12610
  %cmp3 = icmp ne i32 %6, 1, !dbg !12611
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !12612

if.then5:                                         ; preds = %land.lhs.true
  store i32 -1, i32* %bump, align 4, !dbg !12613
  br label %if.end13, !dbg !12614

if.else:                                          ; preds = %land.lhs.true, %sw.bb
  %7 = load i32, i32* %residue.addr, align 4, !dbg !12615
  %cmp6 = icmp sgt i32 %7, 0, !dbg !12617
  br i1 %cmp6, label %land.lhs.true8, label %if.end12, !dbg !12618

land.lhs.true8:                                   ; preds = %if.else
  %8 = load i32, i32* %lsd5, align 4, !dbg !12619
  %cmp9 = icmp eq i32 %8, 0, !dbg !12620
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !12621

if.then11:                                        ; preds = %land.lhs.true8
  store i32 1, i32* %bump, align 4, !dbg !12622
  br label %if.end12, !dbg !12623

if.end12:                                         ; preds = %if.then11, %land.lhs.true8, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.then5
  br label %sw.epilog, !dbg !12624

sw.bb14:                                          ; preds = %if.end
  %9 = load i32, i32* %residue.addr, align 4, !dbg !12625
  %cmp15 = icmp slt i32 %9, 0, !dbg !12628
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !12629

if.then17:                                        ; preds = %sw.bb14
  store i32 -1, i32* %bump, align 4, !dbg !12630
  br label %if.end18, !dbg !12631

if.end18:                                         ; preds = %if.then17, %sw.bb14
  br label %sw.epilog, !dbg !12632

sw.bb19:                                          ; preds = %if.end
  %10 = load i32, i32* %residue.addr, align 4, !dbg !12633
  %cmp20 = icmp sgt i32 %10, 5, !dbg !12636
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !12637

if.then22:                                        ; preds = %sw.bb19
  store i32 1, i32* %bump, align 4, !dbg !12638
  br label %if.end23, !dbg !12639

if.end23:                                         ; preds = %if.then22, %sw.bb19
  br label %sw.epilog, !dbg !12640

sw.bb24:                                          ; preds = %if.end
  %11 = load i32, i32* %residue.addr, align 4, !dbg !12641
  %cmp25 = icmp sgt i32 %11, 5, !dbg !12644
  br i1 %cmp25, label %if.then27, label %if.else28, !dbg !12645

if.then27:                                        ; preds = %sw.bb24
  store i32 1, i32* %bump, align 4, !dbg !12646
  br label %if.end38, !dbg !12647

if.else28:                                        ; preds = %sw.bb24
  %12 = load i32, i32* %residue.addr, align 4, !dbg !12648
  %cmp29 = icmp eq i32 %12, 5, !dbg !12650
  br i1 %cmp29, label %if.then31, label %if.end37, !dbg !12651

if.then31:                                        ; preds = %if.else28
  %13 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12652
  %lsu32 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %13, i32 0, i32 3, !dbg !12655
  %arraydecay33 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu32, i64 0, i64 0, !dbg !12656
  %14 = load i16, i16* %arraydecay33, align 2, !dbg !12656
  %conv34 = zext i16 %14 to i32, !dbg !12656
  %and = and i32 %conv34, 1, !dbg !12657
  %tobool = icmp ne i32 %and, 0, !dbg !12657
  br i1 %tobool, label %if.then35, label %if.end36, !dbg !12658

if.then35:                                        ; preds = %if.then31
  store i32 1, i32* %bump, align 4, !dbg !12659
  br label %if.end36, !dbg !12660

if.end36:                                         ; preds = %if.then35, %if.then31
  br label %if.end37, !dbg !12661

if.end37:                                         ; preds = %if.end36, %if.else28
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then27
  br label %sw.epilog, !dbg !12662

sw.bb39:                                          ; preds = %if.end
  %15 = load i32, i32* %residue.addr, align 4, !dbg !12663
  %cmp40 = icmp sge i32 %15, 5, !dbg !12666
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !12667

if.then42:                                        ; preds = %sw.bb39
  store i32 1, i32* %bump, align 4, !dbg !12668
  br label %if.end43, !dbg !12669

if.end43:                                         ; preds = %if.then42, %sw.bb39
  br label %sw.epilog, !dbg !12670

sw.bb44:                                          ; preds = %if.end
  %16 = load i32, i32* %residue.addr, align 4, !dbg !12671
  %cmp45 = icmp sgt i32 %16, 0, !dbg !12674
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !12675

if.then47:                                        ; preds = %sw.bb44
  store i32 1, i32* %bump, align 4, !dbg !12676
  br label %if.end48, !dbg !12677

if.end48:                                         ; preds = %if.then47, %sw.bb44
  br label %sw.epilog, !dbg !12678

sw.bb49:                                          ; preds = %if.end
  %17 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12679
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %17, i32 0, i32 2, !dbg !12679
  %18 = load i8, i8* %bits, align 4, !dbg !12679
  %conv50 = zext i8 %18 to i32, !dbg !12679
  %and51 = and i32 %conv50, 128, !dbg !12679
  %cmp52 = icmp ne i32 %and51, 0, !dbg !12679
  br i1 %cmp52, label %if.then54, label %if.else59, !dbg !12682

if.then54:                                        ; preds = %sw.bb49
  %19 = load i32, i32* %residue.addr, align 4, !dbg !12683
  %cmp55 = icmp slt i32 %19, 0, !dbg !12686
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !12687

if.then57:                                        ; preds = %if.then54
  store i32 -1, i32* %bump, align 4, !dbg !12688
  br label %if.end58, !dbg !12689

if.end58:                                         ; preds = %if.then57, %if.then54
  br label %if.end64, !dbg !12690

if.else59:                                        ; preds = %sw.bb49
  %20 = load i32, i32* %residue.addr, align 4, !dbg !12691
  %cmp60 = icmp sgt i32 %20, 0, !dbg !12694
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !12695

if.then62:                                        ; preds = %if.else59
  store i32 1, i32* %bump, align 4, !dbg !12696
  br label %if.end63, !dbg !12697

if.end63:                                         ; preds = %if.then62, %if.else59
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.end58
  br label %sw.epilog, !dbg !12698

sw.bb65:                                          ; preds = %if.end
  %21 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12699
  %bits66 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %21, i32 0, i32 2, !dbg !12699
  %22 = load i8, i8* %bits66, align 4, !dbg !12699
  %conv67 = zext i8 %22 to i32, !dbg !12699
  %and68 = and i32 %conv67, 128, !dbg !12699
  %cmp69 = icmp ne i32 %and68, 0, !dbg !12699
  br i1 %cmp69, label %if.else76, label %if.then71, !dbg !12702

if.then71:                                        ; preds = %sw.bb65
  %23 = load i32, i32* %residue.addr, align 4, !dbg !12703
  %cmp72 = icmp slt i32 %23, 0, !dbg !12706
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !12707

if.then74:                                        ; preds = %if.then71
  store i32 -1, i32* %bump, align 4, !dbg !12708
  br label %if.end75, !dbg !12709

if.end75:                                         ; preds = %if.then74, %if.then71
  br label %if.end81, !dbg !12710

if.else76:                                        ; preds = %sw.bb65
  %24 = load i32, i32* %residue.addr, align 4, !dbg !12711
  %cmp77 = icmp sgt i32 %24, 0, !dbg !12714
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !12715

if.then79:                                        ; preds = %if.else76
  store i32 1, i32* %bump, align 4, !dbg !12716
  br label %if.end80, !dbg !12717

if.end80:                                         ; preds = %if.then79, %if.else76
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.end75
  br label %sw.epilog, !dbg !12718

sw.default:                                       ; preds = %if.end
  %25 = load i32*, i32** %status.addr, align 8, !dbg !12719
  %26 = load i32, i32* %25, align 4, !dbg !12721
  %or = or i32 %26, 64, !dbg !12721
  store i32 %or, i32* %25, align 4, !dbg !12721
  br label %sw.epilog, !dbg !12722

sw.epilog:                                        ; preds = %sw.default, %if.end81, %if.end64, %if.end48, %if.end43, %if.end38, %if.end23, %if.end18, %if.end13
  %27 = load i32, i32* %bump, align 4, !dbg !12723
  %cmp82 = icmp eq i32 %27, 0, !dbg !12725
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !12726

if.then84:                                        ; preds = %sw.epilog
  br label %return, !dbg !12727

if.end85:                                         ; preds = %sw.epilog
  %28 = load i32, i32* %bump, align 4, !dbg !12728
  %cmp86 = icmp sgt i32 %28, 0, !dbg !12730
  br i1 %cmp86, label %if.then88, label %if.else125, !dbg !12731

if.then88:                                        ; preds = %if.end85
  call void @llvm.dbg.declare(metadata i16** %up, metadata !12732, metadata !DIExpression()), !dbg !12734
  call void @llvm.dbg.declare(metadata i32* %count, metadata !12735, metadata !DIExpression()), !dbg !12736
  %29 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12737
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %29, i32 0, i32 0, !dbg !12738
  %30 = load i32, i32* %digits, align 4, !dbg !12738
  store i32 %30, i32* %count, align 4, !dbg !12736
  %31 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12739
  %lsu89 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %31, i32 0, i32 3, !dbg !12741
  %arraydecay90 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu89, i64 0, i64 0, !dbg !12739
  store i16* %arraydecay90, i16** %up, align 8, !dbg !12742
  br label %for.cond, !dbg !12743

for.cond:                                         ; preds = %for.inc122, %if.then88
  %32 = load i32, i32* %count, align 4, !dbg !12744
  %cmp91 = icmp ule i32 %32, 3, !dbg !12748
  br i1 %cmp91, label %if.then93, label %if.end115, !dbg !12749

if.then93:                                        ; preds = %for.cond
  %33 = load i16*, i16** %up, align 8, !dbg !12750
  %34 = load i16, i16* %33, align 2, !dbg !12753
  %conv94 = zext i16 %34 to i32, !dbg !12753
  %35 = load i32, i32* %count, align 4, !dbg !12754
  %idxprom = zext i32 %35 to i64, !dbg !12755
  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom, !dbg !12755
  %36 = load i32, i32* %arrayidx, align 4, !dbg !12755
  %sub = sub i32 %36, 1, !dbg !12756
  %cmp95 = icmp ne i32 %conv94, %sub, !dbg !12757
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !12758

if.then97:                                        ; preds = %if.then93
  br label %for.end124, !dbg !12759

if.end98:                                         ; preds = %if.then93
  %37 = load i32, i32* %count, align 4, !dbg !12760
  %sub99 = sub i32 %37, 1, !dbg !12761
  %idxprom100 = zext i32 %sub99 to i64, !dbg !12762
  %arrayidx101 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom100, !dbg !12762
  %38 = load i32, i32* %arrayidx101, align 4, !dbg !12762
  %conv102 = trunc i32 %38 to i16, !dbg !12763
  %39 = load i16*, i16** %up, align 8, !dbg !12764
  store i16 %conv102, i16* %39, align 2, !dbg !12765
  %40 = load i16*, i16** %up, align 8, !dbg !12766
  %add.ptr = getelementptr inbounds i16, i16* %40, i64 -1, !dbg !12768
  store i16* %add.ptr, i16** %up, align 8, !dbg !12769
  br label %for.cond103, !dbg !12770

for.cond103:                                      ; preds = %for.inc, %if.end98
  %41 = load i16*, i16** %up, align 8, !dbg !12771
  %42 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12773
  %lsu104 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %42, i32 0, i32 3, !dbg !12774
  %arraydecay105 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu104, i64 0, i64 0, !dbg !12773
  %cmp106 = icmp uge i16* %41, %arraydecay105, !dbg !12775
  br i1 %cmp106, label %for.body, label %for.end, !dbg !12776

for.body:                                         ; preds = %for.cond103
  %43 = load i16*, i16** %up, align 8, !dbg !12777
  store i16 0, i16* %43, align 2, !dbg !12778
  br label %for.inc, !dbg !12779

for.inc:                                          ; preds = %for.body
  %44 = load i16*, i16** %up, align 8, !dbg !12780
  %incdec.ptr = getelementptr inbounds i16, i16* %44, i32 -1, !dbg !12780
  store i16* %incdec.ptr, i16** %up, align 8, !dbg !12780
  br label %for.cond103, !dbg !12781, !llvm.loop !12782

for.end:                                          ; preds = %for.cond103
  %45 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12784
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %45, i32 0, i32 1, !dbg !12785
  %46 = load i32, i32* %exponent, align 4, !dbg !12786
  %inc = add nsw i32 %46, 1, !dbg !12786
  store i32 %inc, i32* %exponent, align 4, !dbg !12786
  %47 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12787
  %exponent108 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %47, i32 0, i32 1, !dbg !12789
  %48 = load i32, i32* %exponent108, align 4, !dbg !12789
  %49 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12790
  %digits109 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %49, i32 0, i32 0, !dbg !12791
  %50 = load i32, i32* %digits109, align 4, !dbg !12791
  %add = add nsw i32 %48, %50, !dbg !12792
  %51 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !12793
  %emax = getelementptr inbounds %struct.decContext, %struct.decContext* %51, i32 0, i32 1, !dbg !12794
  %52 = load i32, i32* %emax, align 4, !dbg !12794
  %add110 = add nsw i32 %52, 1, !dbg !12795
  %cmp111 = icmp sgt i32 %add, %add110, !dbg !12796
  br i1 %cmp111, label %if.then113, label %if.end114, !dbg !12797

if.then113:                                       ; preds = %for.end
  %53 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12798
  %54 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !12800
  %55 = load i32*, i32** %status.addr, align 8, !dbg !12801
  call void @decSetOverflow(%struct.decNumber* %53, %struct.decContext* %54, i32* %55), !dbg !12802
  br label %if.end114, !dbg !12803

if.end114:                                        ; preds = %if.then113, %for.end
  br label %return, !dbg !12804

if.end115:                                        ; preds = %for.cond
  %56 = load i16*, i16** %up, align 8, !dbg !12805
  %57 = load i16, i16* %56, align 2, !dbg !12807
  %conv116 = zext i16 %57 to i32, !dbg !12807
  %cmp117 = icmp ne i32 %conv116, 999, !dbg !12808
  br i1 %cmp117, label %if.then119, label %if.end120, !dbg !12809

if.then119:                                       ; preds = %if.end115
  br label %for.end124, !dbg !12810

if.end120:                                        ; preds = %if.end115
  %58 = load i32, i32* %count, align 4, !dbg !12811
  %sub121 = sub i32 %58, 3, !dbg !12811
  store i32 %sub121, i32* %count, align 4, !dbg !12811
  br label %for.inc122, !dbg !12812

for.inc122:                                       ; preds = %if.end120
  %59 = load i16*, i16** %up, align 8, !dbg !12813
  %incdec.ptr123 = getelementptr inbounds i16, i16* %59, i32 1, !dbg !12813
  store i16* %incdec.ptr123, i16** %up, align 8, !dbg !12813
  br label %for.cond, !dbg !12814, !llvm.loop !12815

for.end124:                                       ; preds = %if.then119, %if.then97
  br label %if.end204, !dbg !12818

if.else125:                                       ; preds = %if.end85
  call void @llvm.dbg.declare(metadata i16** %up126, metadata !12819, metadata !DIExpression()), !dbg !12821
  call void @llvm.dbg.declare(metadata i16** %sup, metadata !12822, metadata !DIExpression()), !dbg !12823
  call void @llvm.dbg.declare(metadata i32* %count127, metadata !12824, metadata !DIExpression()), !dbg !12825
  %60 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12826
  %digits128 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %60, i32 0, i32 0, !dbg !12827
  %61 = load i32, i32* %digits128, align 4, !dbg !12827
  store i32 %61, i32* %count127, align 4, !dbg !12825
  %62 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12828
  %lsu129 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %62, i32 0, i32 3, !dbg !12830
  %arraydecay130 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu129, i64 0, i64 0, !dbg !12828
  store i16* %arraydecay130, i16** %up126, align 8, !dbg !12831
  br label %for.cond131, !dbg !12832

for.cond131:                                      ; preds = %for.inc201, %if.else125
  %63 = load i32, i32* %count127, align 4, !dbg !12833
  %cmp132 = icmp ule i32 %63, 3, !dbg !12837
  br i1 %cmp132, label %if.then134, label %if.end194, !dbg !12838

if.then134:                                       ; preds = %for.cond131
  %64 = load i16*, i16** %up126, align 8, !dbg !12839
  %65 = load i16, i16* %64, align 2, !dbg !12842
  %conv135 = zext i16 %65 to i32, !dbg !12842
  %66 = load i32, i32* %count127, align 4, !dbg !12843
  %sub136 = sub i32 %66, 1, !dbg !12844
  %idxprom137 = zext i32 %sub136 to i64, !dbg !12845
  %arrayidx138 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom137, !dbg !12845
  %67 = load i32, i32* %arrayidx138, align 4, !dbg !12845
  %cmp139 = icmp ne i32 %conv135, %67, !dbg !12846
  br i1 %cmp139, label %if.then141, label %if.end142, !dbg !12847

if.then141:                                       ; preds = %if.then134
  br label %for.end203, !dbg !12848

if.end142:                                        ; preds = %if.then134
  %68 = load i16*, i16** %up126, align 8, !dbg !12849
  store i16* %68, i16** %sup, align 8, !dbg !12850
  %69 = load i32, i32* %count127, align 4, !dbg !12851
  %idxprom143 = zext i32 %69 to i64, !dbg !12852
  %arrayidx144 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom143, !dbg !12852
  %70 = load i32, i32* %arrayidx144, align 4, !dbg !12852
  %conv145 = trunc i32 %70 to i16, !dbg !12853
  %conv146 = zext i16 %conv145 to i32, !dbg !12853
  %sub147 = sub nsw i32 %conv146, 1, !dbg !12854
  %conv148 = trunc i32 %sub147 to i16, !dbg !12853
  %71 = load i16*, i16** %up126, align 8, !dbg !12855
  store i16 %conv148, i16* %71, align 2, !dbg !12856
  %72 = load i16*, i16** %up126, align 8, !dbg !12857
  %add.ptr149 = getelementptr inbounds i16, i16* %72, i64 -1, !dbg !12859
  store i16* %add.ptr149, i16** %up126, align 8, !dbg !12860
  br label %for.cond150, !dbg !12861

for.cond150:                                      ; preds = %for.inc160, %if.end142
  %73 = load i16*, i16** %up126, align 8, !dbg !12862
  %74 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12864
  %lsu151 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %74, i32 0, i32 3, !dbg !12865
  %arraydecay152 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu151, i64 0, i64 0, !dbg !12864
  %cmp153 = icmp uge i16* %73, %arraydecay152, !dbg !12866
  br i1 %cmp153, label %for.body155, label %for.end162, !dbg !12867

for.body155:                                      ; preds = %for.cond150
  %75 = load i32, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 3), align 4, !dbg !12868
  %conv156 = trunc i32 %75 to i16, !dbg !12869
  %conv157 = zext i16 %conv156 to i32, !dbg !12869
  %sub158 = sub nsw i32 %conv157, 1, !dbg !12870
  %conv159 = trunc i32 %sub158 to i16, !dbg !12869
  %76 = load i16*, i16** %up126, align 8, !dbg !12871
  store i16 %conv159, i16* %76, align 2, !dbg !12872
  br label %for.inc160, !dbg !12873

for.inc160:                                       ; preds = %for.body155
  %77 = load i16*, i16** %up126, align 8, !dbg !12874
  %incdec.ptr161 = getelementptr inbounds i16, i16* %77, i32 -1, !dbg !12874
  store i16* %incdec.ptr161, i16** %up126, align 8, !dbg !12874
  br label %for.cond150, !dbg !12875, !llvm.loop !12876

for.end162:                                       ; preds = %for.cond150
  %78 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12878
  %exponent163 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %78, i32 0, i32 1, !dbg !12879
  %79 = load i32, i32* %exponent163, align 4, !dbg !12880
  %dec = add nsw i32 %79, -1, !dbg !12880
  store i32 %dec, i32* %exponent163, align 4, !dbg !12880
  %80 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12881
  %exponent164 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %80, i32 0, i32 1, !dbg !12883
  %81 = load i32, i32* %exponent164, align 4, !dbg !12883
  %add165 = add nsw i32 %81, 1, !dbg !12884
  %82 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !12885
  %emin = getelementptr inbounds %struct.decContext, %struct.decContext* %82, i32 0, i32 2, !dbg !12886
  %83 = load i32, i32* %emin, align 4, !dbg !12886
  %84 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !12887
  %digits166 = getelementptr inbounds %struct.decContext, %struct.decContext* %84, i32 0, i32 0, !dbg !12888
  %85 = load i32, i32* %digits166, align 4, !dbg !12888
  %sub167 = sub nsw i32 %83, %85, !dbg !12889
  %add168 = add nsw i32 %sub167, 1, !dbg !12890
  %cmp169 = icmp eq i32 %add165, %add168, !dbg !12891
  br i1 %cmp169, label %if.then171, label %if.end193, !dbg !12892

if.then171:                                       ; preds = %for.end162
  %86 = load i32, i32* %count127, align 4, !dbg !12893
  %cmp172 = icmp eq i32 %86, 1, !dbg !12896
  br i1 %cmp172, label %land.lhs.true174, label %if.else179, !dbg !12897

land.lhs.true174:                                 ; preds = %if.then171
  %87 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12898
  %digits175 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %87, i32 0, i32 0, !dbg !12899
  %88 = load i32, i32* %digits175, align 4, !dbg !12899
  %cmp176 = icmp eq i32 %88, 1, !dbg !12900
  br i1 %cmp176, label %if.then178, label %if.else179, !dbg !12901

if.then178:                                       ; preds = %land.lhs.true174
  %89 = load i16*, i16** %sup, align 8, !dbg !12902
  store i16 0, i16* %89, align 2, !dbg !12903
  br label %if.end189, !dbg !12904

if.else179:                                       ; preds = %land.lhs.true174, %if.then171
  %90 = load i32, i32* %count127, align 4, !dbg !12905
  %sub180 = sub i32 %90, 1, !dbg !12907
  %idxprom181 = zext i32 %sub180 to i64, !dbg !12908
  %arrayidx182 = getelementptr inbounds [10 x i32], [10 x i32]* @DECPOWERS, i64 0, i64 %idxprom181, !dbg !12908
  %91 = load i32, i32* %arrayidx182, align 4, !dbg !12908
  %conv183 = trunc i32 %91 to i16, !dbg !12909
  %conv184 = zext i16 %conv183 to i32, !dbg !12909
  %sub185 = sub nsw i32 %conv184, 1, !dbg !12910
  %conv186 = trunc i32 %sub185 to i16, !dbg !12909
  %92 = load i16*, i16** %sup, align 8, !dbg !12911
  store i16 %conv186, i16* %92, align 2, !dbg !12912
  %93 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12913
  %digits187 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %93, i32 0, i32 0, !dbg !12914
  %94 = load i32, i32* %digits187, align 4, !dbg !12915
  %dec188 = add nsw i32 %94, -1, !dbg !12915
  store i32 %dec188, i32* %digits187, align 4, !dbg !12915
  br label %if.end189

if.end189:                                        ; preds = %if.else179, %if.then178
  %95 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12916
  %exponent190 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %95, i32 0, i32 1, !dbg !12917
  %96 = load i32, i32* %exponent190, align 4, !dbg !12918
  %inc191 = add nsw i32 %96, 1, !dbg !12918
  store i32 %inc191, i32* %exponent190, align 4, !dbg !12918
  %97 = load i32*, i32** %status.addr, align 8, !dbg !12919
  %98 = load i32, i32* %97, align 4, !dbg !12920
  %or192 = or i32 %98, 14368, !dbg !12920
  store i32 %or192, i32* %97, align 4, !dbg !12920
  br label %if.end193, !dbg !12921

if.end193:                                        ; preds = %if.end189, %for.end162
  br label %return, !dbg !12922

if.end194:                                        ; preds = %for.cond131
  %99 = load i16*, i16** %up126, align 8, !dbg !12923
  %100 = load i16, i16* %99, align 2, !dbg !12925
  %conv195 = zext i16 %100 to i32, !dbg !12925
  %cmp196 = icmp ne i32 %conv195, 0, !dbg !12926
  br i1 %cmp196, label %if.then198, label %if.end199, !dbg !12927

if.then198:                                       ; preds = %if.end194
  br label %for.end203, !dbg !12928

if.end199:                                        ; preds = %if.end194
  %101 = load i32, i32* %count127, align 4, !dbg !12929
  %sub200 = sub i32 %101, 3, !dbg !12929
  store i32 %sub200, i32* %count127, align 4, !dbg !12929
  br label %for.inc201, !dbg !12930

for.inc201:                                       ; preds = %if.end199
  %102 = load i16*, i16** %up126, align 8, !dbg !12931
  %incdec.ptr202 = getelementptr inbounds i16, i16* %102, i32 1, !dbg !12931
  store i16* %incdec.ptr202, i16** %up126, align 8, !dbg !12931
  br label %for.cond131, !dbg !12932, !llvm.loop !12933

for.end203:                                       ; preds = %if.then198, %if.then141
  br label %if.end204

if.end204:                                        ; preds = %for.end203, %for.end124
  %103 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12936
  %lsu205 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %103, i32 0, i32 3, !dbg !12937
  %arraydecay206 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu205, i64 0, i64 0, !dbg !12936
  %104 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12938
  %digits207 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %104, i32 0, i32 0, !dbg !12938
  %105 = load i32, i32* %digits207, align 4, !dbg !12938
  %cmp208 = icmp sle i32 %105, 49, !dbg !12938
  br i1 %cmp208, label %cond.true, label %cond.false, !dbg !12938

cond.true:                                        ; preds = %if.end204
  %106 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12938
  %digits210 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %106, i32 0, i32 0, !dbg !12938
  %107 = load i32, i32* %digits210, align 4, !dbg !12938
  %idxprom211 = sext i32 %107 to i64, !dbg !12938
  %arrayidx212 = getelementptr inbounds [50 x i8], [50 x i8]* @d2utable, i64 0, i64 %idxprom211, !dbg !12938
  %108 = load i8, i8* %arrayidx212, align 1, !dbg !12938
  %conv213 = zext i8 %108 to i32, !dbg !12938
  br label %cond.end, !dbg !12938

cond.false:                                       ; preds = %if.end204
  %109 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12938
  %digits214 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %109, i32 0, i32 0, !dbg !12938
  %110 = load i32, i32* %digits214, align 4, !dbg !12938
  %add215 = add nsw i32 %110, 3, !dbg !12938
  %sub216 = sub nsw i32 %add215, 1, !dbg !12938
  %div = sdiv i32 %sub216, 3, !dbg !12938
  br label %cond.end, !dbg !12938

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv213, %cond.true ], [ %div, %cond.false ], !dbg !12938
  %111 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12939
  %lsu217 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %111, i32 0, i32 3, !dbg !12940
  %arraydecay218 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu217, i64 0, i64 0, !dbg !12939
  %112 = load i32, i32* %bump, align 4, !dbg !12941
  %call = call i32 @decUnitAddSub(i16* %arraydecay206, i32 %cond, i16* getelementptr inbounds ([1 x i16], [1 x i16]* @uarrone, i64 0, i64 0), i32 1, i32 0, i16* %arraydecay218, i32 %112), !dbg !12942
  br label %return, !dbg !12943

return:                                           ; preds = %cond.end, %if.end193, %if.end114, %if.then84, %if.then
  ret void, !dbg !12943
}

; Function Attrs: noinline nounwind uwtable
define internal void @decSetOverflow(%struct.decNumber* %dn, %struct.decContext* %set, i32* %status) #0 !dbg !12944 {
entry:
  %dn.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %status.addr = alloca i32*, align 8
  %needmax = alloca i8, align 1
  %sign = alloca i8, align 1
  %emax = alloca i32, align 4
  store %struct.decNumber* %dn, %struct.decNumber** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dn.addr, metadata !12947, metadata !DIExpression()), !dbg !12948
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !12949, metadata !DIExpression()), !dbg !12950
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !12951, metadata !DIExpression()), !dbg !12952
  call void @llvm.dbg.declare(metadata i8* %needmax, metadata !12953, metadata !DIExpression()), !dbg !12954
  store i8 0, i8* %needmax, align 1, !dbg !12954
  call void @llvm.dbg.declare(metadata i8* %sign, metadata !12955, metadata !DIExpression()), !dbg !12956
  %0 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12957
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %0, i32 0, i32 2, !dbg !12958
  %1 = load i8, i8* %bits, align 4, !dbg !12958
  %conv = zext i8 %1 to i32, !dbg !12957
  %and = and i32 %conv, 128, !dbg !12959
  %conv1 = trunc i32 %and to i8, !dbg !12957
  store i8 %conv1, i8* %sign, align 1, !dbg !12956
  %2 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12960
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %2, i32 0, i32 3, !dbg !12960
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !12960
  %3 = load i16, i16* %arraydecay, align 2, !dbg !12960
  %conv2 = zext i16 %3 to i32, !dbg !12960
  %cmp = icmp eq i32 %conv2, 0, !dbg !12960
  br i1 %cmp, label %land.lhs.true, label %if.end21, !dbg !12960

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12960
  %digits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 0, !dbg !12960
  %5 = load i32, i32* %digits, align 4, !dbg !12960
  %cmp4 = icmp eq i32 %5, 1, !dbg !12960
  br i1 %cmp4, label %land.lhs.true6, label %if.end21, !dbg !12960

land.lhs.true6:                                   ; preds = %land.lhs.true
  %6 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12960
  %bits7 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %6, i32 0, i32 2, !dbg !12960
  %7 = load i8, i8* %bits7, align 4, !dbg !12960
  %conv8 = zext i8 %7 to i32, !dbg !12960
  %and9 = and i32 %conv8, 112, !dbg !12960
  %cmp10 = icmp eq i32 %and9, 0, !dbg !12960
  br i1 %cmp10, label %if.then, label %if.end21, !dbg !12962

if.then:                                          ; preds = %land.lhs.true6
  call void @llvm.dbg.declare(metadata i32* %emax, metadata !12963, metadata !DIExpression()), !dbg !12965
  %8 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !12966
  %emax12 = getelementptr inbounds %struct.decContext, %struct.decContext* %8, i32 0, i32 1, !dbg !12967
  %9 = load i32, i32* %emax12, align 4, !dbg !12967
  store i32 %9, i32* %emax, align 4, !dbg !12965
  %10 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !12968
  %clamp = getelementptr inbounds %struct.decContext, %struct.decContext* %10, i32 0, i32 6, !dbg !12970
  %11 = load i8, i8* %clamp, align 4, !dbg !12970
  %tobool = icmp ne i8 %11, 0, !dbg !12968
  br i1 %tobool, label %if.then13, label %if.end, !dbg !12971

if.then13:                                        ; preds = %if.then
  %12 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !12972
  %digits14 = getelementptr inbounds %struct.decContext, %struct.decContext* %12, i32 0, i32 0, !dbg !12973
  %13 = load i32, i32* %digits14, align 4, !dbg !12973
  %sub = sub nsw i32 %13, 1, !dbg !12974
  %14 = load i32, i32* %emax, align 4, !dbg !12975
  %sub15 = sub nsw i32 %14, %sub, !dbg !12975
  store i32 %sub15, i32* %emax, align 4, !dbg !12975
  br label %if.end, !dbg !12976

if.end:                                           ; preds = %if.then13, %if.then
  %15 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12977
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %15, i32 0, i32 1, !dbg !12979
  %16 = load i32, i32* %exponent, align 4, !dbg !12979
  %17 = load i32, i32* %emax, align 4, !dbg !12980
  %cmp16 = icmp sgt i32 %16, %17, !dbg !12981
  br i1 %cmp16, label %if.then18, label %if.end20, !dbg !12982

if.then18:                                        ; preds = %if.end
  %18 = load i32, i32* %emax, align 4, !dbg !12983
  %19 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12985
  %exponent19 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %19, i32 0, i32 1, !dbg !12986
  store i32 %18, i32* %exponent19, align 4, !dbg !12987
  %20 = load i32*, i32** %status.addr, align 8, !dbg !12988
  %21 = load i32, i32* %20, align 4, !dbg !12989
  %or = or i32 %21, 1024, !dbg !12989
  store i32 %or, i32* %20, align 4, !dbg !12989
  br label %if.end20, !dbg !12990

if.end20:                                         ; preds = %if.then18, %if.end
  br label %return, !dbg !12991

if.end21:                                         ; preds = %land.lhs.true6, %land.lhs.true, %entry
  %22 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !12992
  %call = call %struct.decNumber* @decNumberZero(%struct.decNumber* %22), !dbg !12993
  %23 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !12994
  %round = getelementptr inbounds %struct.decContext, %struct.decContext* %23, i32 0, i32 3, !dbg !12995
  %24 = load i32, i32* %round, align 4, !dbg !12995
  switch i32 %24, label %sw.default [
    i32 5, label %sw.bb
    i32 7, label %sw.bb22
    i32 0, label %sw.bb23
    i32 6, label %sw.bb27
  ], !dbg !12996

sw.bb:                                            ; preds = %if.end21
  store i8 1, i8* %needmax, align 1, !dbg !12997
  br label %sw.epilog, !dbg !13000

sw.bb22:                                          ; preds = %if.end21
  store i8 1, i8* %needmax, align 1, !dbg !13001
  br label %sw.epilog, !dbg !13003

sw.bb23:                                          ; preds = %if.end21
  %25 = load i8, i8* %sign, align 1, !dbg !13004
  %tobool24 = icmp ne i8 %25, 0, !dbg !13004
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !13007

if.then25:                                        ; preds = %sw.bb23
  store i8 1, i8* %needmax, align 1, !dbg !13008
  br label %if.end26, !dbg !13009

if.end26:                                         ; preds = %if.then25, %sw.bb23
  br label %sw.epilog, !dbg !13010

sw.bb27:                                          ; preds = %if.end21
  %26 = load i8, i8* %sign, align 1, !dbg !13011
  %tobool28 = icmp ne i8 %26, 0, !dbg !13011
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !13014

if.then29:                                        ; preds = %sw.bb27
  store i8 1, i8* %needmax, align 1, !dbg !13015
  br label %if.end30, !dbg !13016

if.end30:                                         ; preds = %if.then29, %sw.bb27
  br label %sw.epilog, !dbg !13017

sw.default:                                       ; preds = %if.end21
  br label %sw.epilog, !dbg !13018

sw.epilog:                                        ; preds = %sw.default, %if.end30, %if.end26, %sw.bb22, %sw.bb
  %27 = load i8, i8* %needmax, align 1, !dbg !13019
  %tobool31 = icmp ne i8 %27, 0, !dbg !13019
  br i1 %tobool31, label %if.then32, label %if.else, !dbg !13021

if.then32:                                        ; preds = %sw.epilog
  %28 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !13022
  %29 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !13024
  call void @decSetMaxValue(%struct.decNumber* %28, %struct.decContext* %29), !dbg !13025
  %30 = load i8, i8* %sign, align 1, !dbg !13026
  %31 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !13027
  %bits33 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %31, i32 0, i32 2, !dbg !13028
  store i8 %30, i8* %bits33, align 4, !dbg !13029
  br label %if.end38, !dbg !13030

if.else:                                          ; preds = %sw.epilog
  %32 = load i8, i8* %sign, align 1, !dbg !13031
  %conv34 = zext i8 %32 to i32, !dbg !13031
  %or35 = or i32 %conv34, 64, !dbg !13032
  %conv36 = trunc i32 %or35 to i8, !dbg !13031
  %33 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !13033
  %bits37 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %33, i32 0, i32 2, !dbg !13034
  store i8 %conv36, i8* %bits37, align 4, !dbg !13035
  br label %if.end38

if.end38:                                         ; preds = %if.else, %if.then32
  %34 = load i32*, i32** %status.addr, align 8, !dbg !13036
  %35 = load i32, i32* %34, align 4, !dbg !13037
  %or39 = or i32 %35, 2592, !dbg !13037
  store i32 %or39, i32* %34, align 4, !dbg !13037
  br label %return, !dbg !13038

return:                                           ; preds = %if.end38, %if.end20
  ret void, !dbg !13038
}

; Function Attrs: noinline nounwind uwtable
define internal void @decSetSubnormal(%struct.decNumber* %dn, %struct.decContext* %set, i32* %residue, i32* %status) #0 !dbg !13039 {
entry:
  %dn.addr = alloca %struct.decNumber*, align 8
  %set.addr = alloca %struct.decContext*, align 8
  %residue.addr = alloca i32*, align 8
  %status.addr = alloca i32*, align 8
  %workset = alloca %struct.decContext, align 4
  %etiny = alloca i32, align 4
  %adjust = alloca i32, align 4
  store %struct.decNumber* %dn, %struct.decNumber** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decNumber** %dn.addr, metadata !13040, metadata !DIExpression()), !dbg !13041
  store %struct.decContext* %set, %struct.decContext** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.decContext** %set.addr, metadata !13042, metadata !DIExpression()), !dbg !13043
  store i32* %residue, i32** %residue.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %residue.addr, metadata !13044, metadata !DIExpression()), !dbg !13045
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !13046, metadata !DIExpression()), !dbg !13047
  call void @llvm.dbg.declare(metadata %struct.decContext* %workset, metadata !13048, metadata !DIExpression()), !dbg !13049
  call void @llvm.dbg.declare(metadata i32* %etiny, metadata !13050, metadata !DIExpression()), !dbg !13051
  call void @llvm.dbg.declare(metadata i32* %adjust, metadata !13052, metadata !DIExpression()), !dbg !13053
  %0 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !13054
  %emin = getelementptr inbounds %struct.decContext, %struct.decContext* %0, i32 0, i32 2, !dbg !13055
  %1 = load i32, i32* %emin, align 4, !dbg !13055
  %2 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !13056
  %digits = getelementptr inbounds %struct.decContext, %struct.decContext* %2, i32 0, i32 0, !dbg !13057
  %3 = load i32, i32* %digits, align 4, !dbg !13057
  %sub = sub nsw i32 %3, 1, !dbg !13058
  %sub1 = sub nsw i32 %1, %sub, !dbg !13059
  store i32 %sub1, i32* %etiny, align 4, !dbg !13060
  %4 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !13061
  %lsu = getelementptr inbounds %struct.decNumber, %struct.decNumber* %4, i32 0, i32 3, !dbg !13061
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %lsu, i64 0, i64 0, !dbg !13061
  %5 = load i16, i16* %arraydecay, align 2, !dbg !13061
  %conv = zext i16 %5 to i32, !dbg !13061
  %cmp = icmp eq i32 %conv, 0, !dbg !13061
  br i1 %cmp, label %land.lhs.true, label %if.end14, !dbg !13061

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !13061
  %digits3 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %6, i32 0, i32 0, !dbg !13061
  %7 = load i32, i32* %digits3, align 4, !dbg !13061
  %cmp4 = icmp eq i32 %7, 1, !dbg !13061
  br i1 %cmp4, label %land.lhs.true6, label %if.end14, !dbg !13061

land.lhs.true6:                                   ; preds = %land.lhs.true
  %8 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !13061
  %bits = getelementptr inbounds %struct.decNumber, %struct.decNumber* %8, i32 0, i32 2, !dbg !13061
  %9 = load i8, i8* %bits, align 4, !dbg !13061
  %conv7 = zext i8 %9 to i32, !dbg !13061
  %and = and i32 %conv7, 112, !dbg !13061
  %cmp8 = icmp eq i32 %and, 0, !dbg !13061
  br i1 %cmp8, label %if.then, label %if.end14, !dbg !13063

if.then:                                          ; preds = %land.lhs.true6
  %10 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !13064
  %exponent = getelementptr inbounds %struct.decNumber, %struct.decNumber* %10, i32 0, i32 1, !dbg !13067
  %11 = load i32, i32* %exponent, align 4, !dbg !13067
  %12 = load i32, i32* %etiny, align 4, !dbg !13068
  %cmp10 = icmp slt i32 %11, %12, !dbg !13069
  br i1 %cmp10, label %if.then12, label %if.end, !dbg !13070

if.then12:                                        ; preds = %if.then
  %13 = load i32, i32* %etiny, align 4, !dbg !13071
  %14 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !13073
  %exponent13 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %14, i32 0, i32 1, !dbg !13074
  store i32 %13, i32* %exponent13, align 4, !dbg !13075
  %15 = load i32*, i32** %status.addr, align 8, !dbg !13076
  %16 = load i32, i32* %15, align 4, !dbg !13077
  %or = or i32 %16, 1024, !dbg !13077
  store i32 %or, i32* %15, align 4, !dbg !13077
  br label %if.end, !dbg !13078

if.end:                                           ; preds = %if.then12, %if.then
  br label %if.end66, !dbg !13079

if.end14:                                         ; preds = %land.lhs.true6, %land.lhs.true, %entry
  %17 = load i32*, i32** %status.addr, align 8, !dbg !13080
  %18 = load i32, i32* %17, align 4, !dbg !13081
  %or15 = or i32 %18, 4096, !dbg !13081
  store i32 %or15, i32* %17, align 4, !dbg !13081
  %19 = load i32, i32* %etiny, align 4, !dbg !13082
  %20 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !13083
  %exponent16 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %20, i32 0, i32 1, !dbg !13084
  %21 = load i32, i32* %exponent16, align 4, !dbg !13084
  %sub17 = sub nsw i32 %19, %21, !dbg !13085
  store i32 %sub17, i32* %adjust, align 4, !dbg !13086
  %22 = load i32, i32* %adjust, align 4, !dbg !13087
  %cmp18 = icmp sle i32 %22, 0, !dbg !13089
  br i1 %cmp18, label %if.then20, label %if.end25, !dbg !13090

if.then20:                                        ; preds = %if.end14
  %23 = load i32*, i32** %status.addr, align 8, !dbg !13091
  %24 = load i32, i32* %23, align 4, !dbg !13094
  %and21 = and i32 %24, 32, !dbg !13095
  %tobool = icmp ne i32 %and21, 0, !dbg !13095
  br i1 %tobool, label %if.then22, label %if.end24, !dbg !13096

if.then22:                                        ; preds = %if.then20
  %25 = load i32*, i32** %status.addr, align 8, !dbg !13097
  %26 = load i32, i32* %25, align 4, !dbg !13098
  %or23 = or i32 %26, 8192, !dbg !13098
  store i32 %or23, i32* %25, align 4, !dbg !13098
  br label %if.end24, !dbg !13099

if.end24:                                         ; preds = %if.then22, %if.then20
  br label %if.end66, !dbg !13100

if.end25:                                         ; preds = %if.end14
  %27 = load %struct.decContext*, %struct.decContext** %set.addr, align 8, !dbg !13101
  %28 = bitcast %struct.decContext* %workset to i8*, !dbg !13102
  %29 = bitcast %struct.decContext* %27 to i8*, !dbg !13102
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %29, i64 28, i1 false), !dbg !13102
  %30 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !13103
  %digits26 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %30, i32 0, i32 0, !dbg !13104
  %31 = load i32, i32* %digits26, align 4, !dbg !13104
  %32 = load i32, i32* %adjust, align 4, !dbg !13105
  %sub27 = sub nsw i32 %31, %32, !dbg !13106
  %digits28 = getelementptr inbounds %struct.decContext, %struct.decContext* %workset, i32 0, i32 0, !dbg !13107
  store i32 %sub27, i32* %digits28, align 4, !dbg !13108
  %33 = load i32, i32* %adjust, align 4, !dbg !13109
  %emin29 = getelementptr inbounds %struct.decContext, %struct.decContext* %workset, i32 0, i32 2, !dbg !13110
  %34 = load i32, i32* %emin29, align 4, !dbg !13111
  %sub30 = sub nsw i32 %34, %33, !dbg !13111
  store i32 %sub30, i32* %emin29, align 4, !dbg !13111
  %35 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !13112
  %36 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !13113
  %lsu31 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %36, i32 0, i32 3, !dbg !13114
  %arraydecay32 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu31, i64 0, i64 0, !dbg !13113
  %37 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !13115
  %digits33 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %37, i32 0, i32 0, !dbg !13116
  %38 = load i32, i32* %digits33, align 4, !dbg !13116
  %39 = load i32*, i32** %residue.addr, align 8, !dbg !13117
  %40 = load i32*, i32** %status.addr, align 8, !dbg !13118
  call void @decSetCoeff(%struct.decNumber* %35, %struct.decContext* %workset, i16* %arraydecay32, i32 %38, i32* %39, i32* %40), !dbg !13119
  %41 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !13120
  %42 = load i32*, i32** %residue.addr, align 8, !dbg !13121
  %43 = load i32, i32* %42, align 4, !dbg !13122
  %44 = load i32*, i32** %status.addr, align 8, !dbg !13123
  call void @decApplyRound(%struct.decNumber* %41, %struct.decContext* %workset, i32 %43, i32* %44), !dbg !13124
  %45 = load i32*, i32** %status.addr, align 8, !dbg !13125
  %46 = load i32, i32* %45, align 4, !dbg !13127
  %and34 = and i32 %46, 32, !dbg !13128
  %tobool35 = icmp ne i32 %and34, 0, !dbg !13128
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !13129

if.then36:                                        ; preds = %if.end25
  %47 = load i32*, i32** %status.addr, align 8, !dbg !13130
  %48 = load i32, i32* %47, align 4, !dbg !13131
  %or37 = or i32 %48, 8192, !dbg !13131
  store i32 %or37, i32* %47, align 4, !dbg !13131
  br label %if.end38, !dbg !13132

if.end38:                                         ; preds = %if.then36, %if.end25
  %49 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !13133
  %exponent39 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %49, i32 0, i32 1, !dbg !13135
  %50 = load i32, i32* %exponent39, align 4, !dbg !13135
  %51 = load i32, i32* %etiny, align 4, !dbg !13136
  %cmp40 = icmp sgt i32 %50, %51, !dbg !13137
  br i1 %cmp40, label %if.then42, label %if.end48, !dbg !13138

if.then42:                                        ; preds = %if.end38
  %52 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !13139
  %lsu43 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %52, i32 0, i32 3, !dbg !13141
  %arraydecay44 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu43, i64 0, i64 0, !dbg !13139
  %53 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !13142
  %digits45 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %53, i32 0, i32 0, !dbg !13143
  %54 = load i32, i32* %digits45, align 4, !dbg !13143
  %call = call i32 @decShiftToMost(i16* %arraydecay44, i32 %54, i32 1), !dbg !13144
  %55 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !13145
  %digits46 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %55, i32 0, i32 0, !dbg !13146
  store i32 %call, i32* %digits46, align 4, !dbg !13147
  %56 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !13148
  %exponent47 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %56, i32 0, i32 1, !dbg !13149
  %57 = load i32, i32* %exponent47, align 4, !dbg !13150
  %dec = add nsw i32 %57, -1, !dbg !13150
  store i32 %dec, i32* %exponent47, align 4, !dbg !13150
  br label %if.end48, !dbg !13151

if.end48:                                         ; preds = %if.then42, %if.end38
  %58 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !13152
  %lsu49 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %58, i32 0, i32 3, !dbg !13152
  %arraydecay50 = getelementptr inbounds [1 x i16], [1 x i16]* %lsu49, i64 0, i64 0, !dbg !13152
  %59 = load i16, i16* %arraydecay50, align 2, !dbg !13152
  %conv51 = zext i16 %59 to i32, !dbg !13152
  %cmp52 = icmp eq i32 %conv51, 0, !dbg !13152
  br i1 %cmp52, label %land.lhs.true54, label %if.end66, !dbg !13152

land.lhs.true54:                                  ; preds = %if.end48
  %60 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !13152
  %digits55 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %60, i32 0, i32 0, !dbg !13152
  %61 = load i32, i32* %digits55, align 4, !dbg !13152
  %cmp56 = icmp eq i32 %61, 1, !dbg !13152
  br i1 %cmp56, label %land.lhs.true58, label %if.end66, !dbg !13152

land.lhs.true58:                                  ; preds = %land.lhs.true54
  %62 = load %struct.decNumber*, %struct.decNumber** %dn.addr, align 8, !dbg !13152
  %bits59 = getelementptr inbounds %struct.decNumber, %struct.decNumber* %62, i32 0, i32 2, !dbg !13152
  %63 = load i8, i8* %bits59, align 4, !dbg !13152
  %conv60 = zext i8 %63 to i32, !dbg !13152
  %and61 = and i32 %conv60, 112, !dbg !13152
  %cmp62 = icmp eq i32 %and61, 0, !dbg !13152
  br i1 %cmp62, label %if.then64, label %if.end66, !dbg !13154

if.then64:                                        ; preds = %land.lhs.true58
  %64 = load i32*, i32** %status.addr, align 8, !dbg !13155
  %65 = load i32, i32* %64, align 4, !dbg !13156
  %or65 = or i32 %65, 1024, !dbg !13156
  store i32 %or65, i32* %64, align 4, !dbg !13156
  br label %if.end66, !dbg !13157

if.end66:                                         ; preds = %if.end, %if.end24, %if.then64, %land.lhs.true58, %land.lhs.true54, %if.end48
  ret void, !dbg !13158
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!88, !89, !90}
!llvm.ident = !{!91}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "d2utable", scope: !2, file: !3, line: 185, type: !85, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !30, globals: !64, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "decNumber.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !18}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rounding", file: !6, line: 69, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./decContext.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17}
!9 = !DIEnumerator(name: "DEC_ROUND_CEILING", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "DEC_ROUND_UP", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "DEC_ROUND_HALF_UP", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "DEC_ROUND_HALF_EVEN", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "DEC_ROUND_HALF_DOWN", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "DEC_ROUND_DOWN", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "DEC_ROUND_FLOOR", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "DEC_ROUND_05UP", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "DEC_ROUND_MAX", value: 8, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "decClass", file: !6, line: 107, baseType: !7, size: 32, elements: !19)
!19 = !{!20, !21, !22, !23, !24, !25, !26, !27, !28, !29}
!20 = !DIEnumerator(name: "DEC_CLASS_SNAN", value: 0, isUnsigned: true)
!21 = !DIEnumerator(name: "DEC_CLASS_QNAN", value: 1, isUnsigned: true)
!22 = !DIEnumerator(name: "DEC_CLASS_NEG_INF", value: 2, isUnsigned: true)
!23 = !DIEnumerator(name: "DEC_CLASS_NEG_NORMAL", value: 3, isUnsigned: true)
!24 = !DIEnumerator(name: "DEC_CLASS_NEG_SUBNORMAL", value: 4, isUnsigned: true)
!25 = !DIEnumerator(name: "DEC_CLASS_NEG_ZERO", value: 5, isUnsigned: true)
!26 = !DIEnumerator(name: "DEC_CLASS_POS_ZERO", value: 6, isUnsigned: true)
!27 = !DIEnumerator(name: "DEC_CLASS_POS_SUBNORMAL", value: 7, isUnsigned: true)
!28 = !DIEnumerator(name: "DEC_CLASS_POS_NORMAL", value: 8, isUnsigned: true)
!29 = !DIEnumerator(name: "DEC_CLASS_POS_INF", value: 9, isUnsigned: true)
!30 = !{!31, !36, !39, !42, !43, !44, !47, !59, !60, !61}
!31 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !32, line: 26, baseType: !33)
!32 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", directory: "")
!33 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !34, line: 41, baseType: !35)
!34 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!35 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!36 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !37, line: 26, baseType: !38)
!37 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !34, line: 42, baseType: !7)
!39 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !37, line: 25, baseType: !40)
!40 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !34, line: 40, baseType: !41)
!41 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!42 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !39, size: 64)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !37, line: 24, baseType: !45)
!45 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !34, line: 38, baseType: !46)
!46 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!47 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64)
!48 = !DIDerivedType(tag: DW_TAG_typedef, name: "decNumber", file: !49, line: 84, baseType: !50)
!49 = !DIFile(filename: "./decNumber.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!50 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !49, line: 77, size: 96, elements: !51)
!51 = !{!52, !53, !54, !55}
!52 = !DIDerivedType(tag: DW_TAG_member, name: "digits", scope: !50, file: !49, line: 78, baseType: !31, size: 32)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "exponent", scope: !50, file: !49, line: 79, baseType: !31, size: 32, offset: 32)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !50, file: !49, line: 81, baseType: !44, size: 8, offset: 64)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "lsu", scope: !50, file: !49, line: 83, baseType: !56, size: 16, offset: 80)
!56 = !DICompositeType(tag: DW_TAG_array_type, baseType: !39, size: 16, elements: !57)
!57 = !{!58}
!58 = !DISubrange(count: 1)
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 64)
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 64)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !37, line: 27, baseType: !62)
!62 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !34, line: 45, baseType: !63)
!63 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!64 = !{!0, !65, !71, !77, !79}
!65 = !DIGlobalVariableExpression(var: !66, expr: !DIExpression())
!66 = distinct !DIGlobalVariable(name: "LNnn", scope: !2, file: !3, line: 5509, type: !67, isLocal: false, isDefinition: true)
!67 = !DICompositeType(tag: DW_TAG_array_type, baseType: !68, size: 1440, elements: !69)
!68 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !39)
!69 = !{!70}
!70 = !DISubrange(count: 90)
!71 = !DIGlobalVariableExpression(var: !72, expr: !DIExpression())
!72 = distinct !DIGlobalVariable(name: "multies", scope: !2, file: !3, line: 219, type: !73, isLocal: true, isDefinition: true)
!73 = !DICompositeType(tag: DW_TAG_array_type, baseType: !74, size: 160, elements: !75)
!74 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !36)
!75 = !{!76}
!76 = !DISubrange(count: 5)
!77 = !DIGlobalVariableExpression(var: !78, expr: !DIExpression())
!78 = distinct !DIGlobalVariable(name: "uarrone", scope: !2, file: !3, line: 210, type: !56, isLocal: true, isDefinition: true)
!79 = !DIGlobalVariableExpression(var: !80, expr: !DIExpression())
!80 = distinct !DIGlobalVariable(name: "resmap", scope: !2, file: !3, line: 6882, type: !81, isLocal: true, isDefinition: true)
!81 = !DICompositeType(tag: DW_TAG_array_type, baseType: !82, size: 80, elements: !83)
!82 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !44)
!83 = !{!84}
!84 = !DISubrange(count: 10)
!85 = !DICompositeType(tag: DW_TAG_array_type, baseType: !82, size: 400, elements: !86)
!86 = !{!87}
!87 = !DISubrange(count: 50)
!88 = !{i32 7, !"Dwarf Version", i32 4}
!89 = !{i32 2, !"Debug Info Version", i32 3}
!90 = !{i32 1, !"wchar_size", i32 4}
!91 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!92 = distinct !DISubprogram(name: "decNumberFromInt32", scope: !3, file: !3, line: 345, type: !93, scopeLine: 345, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!93 = !DISubroutineType(types: !94)
!94 = !{!47, !47, !31}
!95 = !{}
!96 = !DILocalVariable(name: "dn", arg: 1, scope: !92, file: !3, line: 345, type: !47)
!97 = !DILocation(line: 345, column: 43, scope: !92)
!98 = !DILocalVariable(name: "in", arg: 2, scope: !92, file: !3, line: 345, type: !31)
!99 = !DILocation(line: 345, column: 51, scope: !92)
!100 = !DILocalVariable(name: "unsig", scope: !92, file: !3, line: 346, type: !36)
!101 = !DILocation(line: 346, column: 8, scope: !92)
!102 = !DILocation(line: 347, column: 7, scope: !103)
!103 = distinct !DILexicalBlock(scope: !92, file: !3, line: 347, column: 7)
!104 = !DILocation(line: 347, column: 9, scope: !103)
!105 = !DILocation(line: 347, column: 7, scope: !92)
!106 = !DILocation(line: 347, column: 20, scope: !103)
!107 = !DILocation(line: 347, column: 19, scope: !103)
!108 = !DILocation(line: 347, column: 14, scope: !103)
!109 = !DILocation(line: 349, column: 9, scope: !110)
!110 = distinct !DILexicalBlock(scope: !111, file: !3, line: 349, column: 9)
!111 = distinct !DILexicalBlock(scope: !103, file: !3, line: 348, column: 9)
!112 = !DILocation(line: 349, column: 11, scope: !110)
!113 = !DILocation(line: 349, column: 9, scope: !111)
!114 = !DILocation(line: 349, column: 26, scope: !110)
!115 = !DILocation(line: 349, column: 21, scope: !110)
!116 = !DILocation(line: 350, column: 18, scope: !110)
!117 = !DILocation(line: 350, column: 17, scope: !110)
!118 = !DILocation(line: 350, column: 16, scope: !110)
!119 = !DILocation(line: 353, column: 23, scope: !92)
!120 = !DILocation(line: 353, column: 27, scope: !92)
!121 = !DILocation(line: 353, column: 3, scope: !92)
!122 = !DILocation(line: 354, column: 7, scope: !123)
!123 = distinct !DILexicalBlock(scope: !92, file: !3, line: 354, column: 7)
!124 = !DILocation(line: 354, column: 9, scope: !123)
!125 = !DILocation(line: 354, column: 7, scope: !92)
!126 = !DILocation(line: 354, column: 13, scope: !123)
!127 = !DILocation(line: 354, column: 17, scope: !123)
!128 = !DILocation(line: 354, column: 21, scope: !123)
!129 = !DILocation(line: 355, column: 10, scope: !92)
!130 = !DILocation(line: 355, column: 3, scope: !92)
!131 = distinct !DISubprogram(name: "decNumberFromUInt32", scope: !3, file: !3, line: 358, type: !132, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!132 = !DISubroutineType(types: !133)
!133 = !{!47, !47, !36}
!134 = !DILocalVariable(name: "dn", arg: 1, scope: !131, file: !3, line: 358, type: !47)
!135 = !DILocation(line: 358, column: 44, scope: !131)
!136 = !DILocalVariable(name: "uin", arg: 2, scope: !131, file: !3, line: 358, type: !36)
!137 = !DILocation(line: 358, column: 53, scope: !131)
!138 = !DILocalVariable(name: "up", scope: !131, file: !3, line: 359, type: !43)
!139 = !DILocation(line: 359, column: 9, scope: !131)
!140 = !DILocation(line: 360, column: 17, scope: !131)
!141 = !DILocation(line: 360, column: 3, scope: !131)
!142 = !DILocation(line: 361, column: 7, scope: !143)
!143 = distinct !DILexicalBlock(scope: !131, file: !3, line: 361, column: 7)
!144 = !DILocation(line: 361, column: 10, scope: !143)
!145 = !DILocation(line: 361, column: 7, scope: !131)
!146 = !DILocation(line: 361, column: 22, scope: !143)
!147 = !DILocation(line: 361, column: 15, scope: !143)
!148 = !DILocation(line: 362, column: 11, scope: !149)
!149 = distinct !DILexicalBlock(scope: !131, file: !3, line: 362, column: 3)
!150 = !DILocation(line: 362, column: 15, scope: !149)
!151 = !DILocation(line: 362, column: 10, scope: !149)
!152 = !DILocation(line: 362, column: 8, scope: !149)
!153 = !DILocation(line: 362, column: 20, scope: !154)
!154 = distinct !DILexicalBlock(scope: !149, file: !3, line: 362, column: 3)
!155 = !DILocation(line: 362, column: 23, scope: !154)
!156 = !DILocation(line: 362, column: 3, scope: !149)
!157 = !DILocation(line: 363, column: 16, scope: !158)
!158 = distinct !DILexicalBlock(scope: !154, file: !3, line: 362, column: 33)
!159 = !DILocation(line: 363, column: 19, scope: !158)
!160 = !DILocation(line: 363, column: 9, scope: !158)
!161 = !DILocation(line: 363, column: 6, scope: !158)
!162 = !DILocation(line: 363, column: 8, scope: !158)
!163 = !DILocation(line: 364, column: 9, scope: !158)
!164 = !DILocation(line: 364, column: 12, scope: !158)
!165 = !DILocation(line: 364, column: 8, scope: !158)
!166 = !DILocation(line: 365, column: 5, scope: !158)
!167 = !DILocation(line: 362, column: 29, scope: !154)
!168 = !DILocation(line: 362, column: 3, scope: !154)
!169 = distinct !{!169, !156, !170}
!170 = !DILocation(line: 365, column: 5, scope: !149)
!171 = !DILocation(line: 366, column: 27, scope: !131)
!172 = !DILocation(line: 366, column: 31, scope: !131)
!173 = !DILocation(line: 366, column: 36, scope: !131)
!174 = !DILocation(line: 366, column: 39, scope: !131)
!175 = !DILocation(line: 366, column: 43, scope: !131)
!176 = !DILocation(line: 366, column: 38, scope: !131)
!177 = !DILocation(line: 366, column: 14, scope: !131)
!178 = !DILocation(line: 366, column: 3, scope: !131)
!179 = !DILocation(line: 366, column: 7, scope: !131)
!180 = !DILocation(line: 366, column: 13, scope: !131)
!181 = !DILocation(line: 367, column: 10, scope: !131)
!182 = !DILocation(line: 367, column: 3, scope: !131)
!183 = !DILocation(line: 368, column: 3, scope: !131)
!184 = distinct !DISubprogram(name: "decNumberZero", scope: !3, file: !3, line: 3582, type: !185, scopeLine: 3582, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!185 = !DISubroutineType(types: !186)
!186 = !{!47, !47}
!187 = !DILocalVariable(name: "dn", arg: 1, scope: !184, file: !3, line: 3582, type: !47)
!188 = !DILocation(line: 3582, column: 38, scope: !184)
!189 = !DILocation(line: 3588, column: 3, scope: !184)
!190 = !DILocation(line: 3588, column: 7, scope: !184)
!191 = !DILocation(line: 3588, column: 11, scope: !184)
!192 = !DILocation(line: 3589, column: 3, scope: !184)
!193 = !DILocation(line: 3589, column: 7, scope: !184)
!194 = !DILocation(line: 3589, column: 15, scope: !184)
!195 = !DILocation(line: 3590, column: 3, scope: !184)
!196 = !DILocation(line: 3590, column: 7, scope: !184)
!197 = !DILocation(line: 3590, column: 13, scope: !184)
!198 = !DILocation(line: 3591, column: 3, scope: !184)
!199 = !DILocation(line: 3591, column: 7, scope: !184)
!200 = !DILocation(line: 3591, column: 13, scope: !184)
!201 = !DILocation(line: 3592, column: 10, scope: !184)
!202 = !DILocation(line: 3592, column: 3, scope: !184)
!203 = distinct !DISubprogram(name: "decGetDigits", scope: !3, file: !3, line: 7761, type: !204, scopeLine: 7761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!204 = !DISubroutineType(types: !205)
!205 = !{!31, !43, !31}
!206 = !DILocalVariable(name: "uar", arg: 1, scope: !203, file: !3, line: 7761, type: !43)
!207 = !DILocation(line: 7761, column: 31, scope: !203)
!208 = !DILocalVariable(name: "len", arg: 2, scope: !203, file: !3, line: 7761, type: !31)
!209 = !DILocation(line: 7761, column: 40, scope: !203)
!210 = !DILocalVariable(name: "up", scope: !203, file: !3, line: 7762, type: !43)
!211 = !DILocation(line: 7762, column: 9, scope: !203)
!212 = !DILocation(line: 7762, column: 12, scope: !203)
!213 = !DILocation(line: 7762, column: 17, scope: !203)
!214 = !DILocation(line: 7762, column: 20, scope: !203)
!215 = !DILocation(line: 7762, column: 15, scope: !203)
!216 = !DILocalVariable(name: "digits", scope: !203, file: !3, line: 7763, type: !31)
!217 = !DILocation(line: 7763, column: 8, scope: !203)
!218 = !DILocation(line: 7763, column: 16, scope: !203)
!219 = !DILocation(line: 7763, column: 19, scope: !203)
!220 = !DILocation(line: 7763, column: 22, scope: !203)
!221 = !DILocation(line: 7763, column: 30, scope: !203)
!222 = !DILocation(line: 7772, column: 3, scope: !203)
!223 = !DILocation(line: 7772, column: 10, scope: !224)
!224 = distinct !DILexicalBlock(scope: !225, file: !3, line: 7772, column: 3)
!225 = distinct !DILexicalBlock(scope: !203, file: !3, line: 7772, column: 3)
!226 = !DILocation(line: 7772, column: 14, scope: !224)
!227 = !DILocation(line: 7772, column: 12, scope: !224)
!228 = !DILocation(line: 7772, column: 3, scope: !225)
!229 = !DILocation(line: 7773, column: 10, scope: !230)
!230 = distinct !DILexicalBlock(scope: !231, file: !3, line: 7773, column: 9)
!231 = distinct !DILexicalBlock(scope: !224, file: !3, line: 7772, column: 25)
!232 = !DILocation(line: 7773, column: 9, scope: !230)
!233 = !DILocation(line: 7773, column: 12, scope: !230)
!234 = !DILocation(line: 7773, column: 9, scope: !231)
!235 = !DILocation(line: 7774, column: 11, scope: !236)
!236 = distinct !DILexicalBlock(scope: !237, file: !3, line: 7774, column: 11)
!237 = distinct !DILexicalBlock(scope: !230, file: !3, line: 7773, column: 17)
!238 = !DILocation(line: 7774, column: 17, scope: !236)
!239 = !DILocation(line: 7774, column: 11, scope: !237)
!240 = !DILocation(line: 7774, column: 22, scope: !236)
!241 = !DILocation(line: 7775, column: 13, scope: !237)
!242 = !DILocation(line: 7776, column: 7, scope: !237)
!243 = !DILocation(line: 7779, column: 10, scope: !244)
!244 = distinct !DILexicalBlock(scope: !231, file: !3, line: 7779, column: 9)
!245 = !DILocation(line: 7779, column: 9, scope: !244)
!246 = !DILocation(line: 7779, column: 12, scope: !244)
!247 = !DILocation(line: 7779, column: 9, scope: !231)
!248 = !DILocation(line: 7779, column: 17, scope: !244)
!249 = !DILocation(line: 7780, column: 11, scope: !231)
!250 = !DILocation(line: 7782, column: 10, scope: !251)
!251 = distinct !DILexicalBlock(scope: !231, file: !3, line: 7782, column: 9)
!252 = !DILocation(line: 7782, column: 9, scope: !251)
!253 = !DILocation(line: 7782, column: 12, scope: !251)
!254 = !DILocation(line: 7782, column: 9, scope: !231)
!255 = !DILocation(line: 7782, column: 18, scope: !251)
!256 = !DILocation(line: 7783, column: 11, scope: !231)
!257 = !DILocation(line: 7793, column: 5, scope: !231)
!258 = !DILocation(line: 7772, column: 21, scope: !224)
!259 = !DILocation(line: 7772, column: 3, scope: !224)
!260 = distinct !{!260, !228, !261}
!261 = !DILocation(line: 7794, column: 5, scope: !225)
!262 = !DILocation(line: 7795, column: 10, scope: !203)
!263 = !DILocation(line: 7795, column: 3, scope: !203)
!264 = distinct !DISubprogram(name: "decNumberToInt32", scope: !3, file: !3, line: 380, type: !265, scopeLine: 380, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!265 = !DISubroutineType(types: !266)
!266 = !{!31, !267, !269}
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !48)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64)
!270 = !DIDerivedType(tag: DW_TAG_typedef, name: "decContext", file: !6, line: 93, baseType: !271)
!271 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 82, size: 224, elements: !272)
!272 = !{!273, !274, !275, !276, !277, !278, !279}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "digits", scope: !271, file: !6, line: 83, baseType: !31, size: 32)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "emax", scope: !271, file: !6, line: 84, baseType: !31, size: 32, offset: 32)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "emin", scope: !271, file: !6, line: 85, baseType: !31, size: 32, offset: 64)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "round", scope: !271, file: !6, line: 86, baseType: !5, size: 32, offset: 96)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "traps", scope: !271, file: !6, line: 87, baseType: !36, size: 32, offset: 128)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !271, file: !6, line: 88, baseType: !36, size: 32, offset: 160)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "clamp", scope: !271, file: !6, line: 89, baseType: !44, size: 8, offset: 192)
!280 = !DILocalVariable(name: "dn", arg: 1, scope: !264, file: !3, line: 380, type: !267)
!281 = !DILocation(line: 380, column: 39, scope: !264)
!282 = !DILocalVariable(name: "set", arg: 2, scope: !264, file: !3, line: 380, type: !269)
!283 = !DILocation(line: 380, column: 55, scope: !264)
!284 = !DILocation(line: 386, column: 7, scope: !285)
!285 = distinct !DILexicalBlock(scope: !264, file: !3, line: 386, column: 7)
!286 = !DILocation(line: 386, column: 11, scope: !285)
!287 = !DILocation(line: 386, column: 15, scope: !285)
!288 = !DILocation(line: 386, column: 27, scope: !285)
!289 = !DILocation(line: 386, column: 30, scope: !285)
!290 = !DILocation(line: 386, column: 34, scope: !285)
!291 = !DILocation(line: 386, column: 40, scope: !285)
!292 = !DILocation(line: 386, column: 44, scope: !285)
!293 = !DILocation(line: 386, column: 47, scope: !285)
!294 = !DILocation(line: 386, column: 51, scope: !285)
!295 = !DILocation(line: 386, column: 59, scope: !285)
!296 = !DILocation(line: 386, column: 7, scope: !264)
!297 = !DILocalVariable(name: "d", scope: !298, file: !3, line: 388, type: !31)
!298 = distinct !DILexicalBlock(scope: !285, file: !3, line: 387, column: 9)
!299 = !DILocation(line: 388, column: 9, scope: !298)
!300 = !DILocalVariable(name: "up", scope: !298, file: !3, line: 389, type: !301)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !68, size: 64)
!302 = !DILocation(line: 389, column: 17, scope: !298)
!303 = !DILocalVariable(name: "hi", scope: !298, file: !3, line: 390, type: !36)
!304 = !DILocation(line: 390, column: 10, scope: !298)
!305 = !DILocalVariable(name: "lo", scope: !298, file: !3, line: 390, type: !36)
!306 = !DILocation(line: 390, column: 16, scope: !298)
!307 = !DILocation(line: 391, column: 8, scope: !298)
!308 = !DILocation(line: 391, column: 12, scope: !298)
!309 = !DILocation(line: 391, column: 7, scope: !298)
!310 = !DILocation(line: 392, column: 9, scope: !298)
!311 = !DILocation(line: 392, column: 8, scope: !298)
!312 = !DILocation(line: 392, column: 7, scope: !298)
!313 = !DILocation(line: 394, column: 10, scope: !298)
!314 = !DILocation(line: 394, column: 12, scope: !298)
!315 = !DILocation(line: 394, column: 9, scope: !298)
!316 = !DILocation(line: 395, column: 10, scope: !298)
!317 = !DILocation(line: 395, column: 12, scope: !298)
!318 = !DILocation(line: 395, column: 9, scope: !298)
!319 = !DILocation(line: 397, column: 7, scope: !298)
!320 = !DILocation(line: 399, column: 11, scope: !321)
!321 = distinct !DILexicalBlock(scope: !298, file: !3, line: 399, column: 5)
!322 = !DILocation(line: 399, column: 10, scope: !321)
!323 = !DILocation(line: 399, column: 21, scope: !324)
!324 = distinct !DILexicalBlock(scope: !321, file: !3, line: 399, column: 5)
!325 = !DILocation(line: 399, column: 23, scope: !324)
!326 = !DILocation(line: 399, column: 27, scope: !324)
!327 = !DILocation(line: 399, column: 22, scope: !324)
!328 = !DILocation(line: 399, column: 5, scope: !321)
!329 = !DILocation(line: 399, column: 58, scope: !324)
!330 = !DILocation(line: 399, column: 57, scope: !324)
!331 = !DILocation(line: 399, column: 68, scope: !324)
!332 = !DILocation(line: 399, column: 69, scope: !324)
!333 = !DILocation(line: 399, column: 61, scope: !324)
!334 = !DILocation(line: 399, column: 60, scope: !324)
!335 = !DILocation(line: 399, column: 55, scope: !324)
!336 = !DILocation(line: 399, column: 53, scope: !324)
!337 = !DILocation(line: 399, column: 37, scope: !324)
!338 = !DILocation(line: 399, column: 42, scope: !324)
!339 = !DILocation(line: 399, column: 5, scope: !324)
!340 = distinct !{!340, !328, !341}
!341 = !DILocation(line: 399, column: 71, scope: !321)
!342 = !DILocation(line: 401, column: 9, scope: !343)
!343 = distinct !DILexicalBlock(scope: !298, file: !3, line: 401, column: 9)
!344 = !DILocation(line: 401, column: 11, scope: !343)
!345 = !DILocation(line: 401, column: 22, scope: !343)
!346 = !DILocation(line: 401, column: 26, scope: !343)
!347 = !DILocation(line: 401, column: 28, scope: !343)
!348 = !DILocation(line: 401, column: 40, scope: !343)
!349 = !DILocation(line: 401, column: 43, scope: !343)
!350 = !DILocation(line: 401, column: 45, scope: !343)
!351 = !DILocation(line: 401, column: 9, scope: !298)
!352 = !DILocation(line: 403, column: 11, scope: !353)
!353 = distinct !DILexicalBlock(scope: !354, file: !3, line: 403, column: 11)
!354 = distinct !DILexicalBlock(scope: !343, file: !3, line: 401, column: 50)
!355 = !DILocation(line: 403, column: 15, scope: !353)
!356 = !DILocation(line: 403, column: 19, scope: !353)
!357 = !DILocation(line: 403, column: 27, scope: !353)
!358 = !DILocation(line: 403, column: 30, scope: !353)
!359 = !DILocation(line: 403, column: 32, scope: !353)
!360 = !DILocation(line: 403, column: 44, scope: !353)
!361 = !DILocation(line: 403, column: 47, scope: !353)
!362 = !DILocation(line: 403, column: 49, scope: !353)
!363 = !DILocation(line: 403, column: 11, scope: !354)
!364 = !DILocation(line: 403, column: 54, scope: !353)
!365 = !DILocation(line: 405, column: 7, scope: !354)
!366 = !DILocalVariable(name: "i", scope: !367, file: !3, line: 407, type: !31)
!367 = distinct !DILexicalBlock(scope: !343, file: !3, line: 406, column: 11)
!368 = !DILocation(line: 407, column: 11, scope: !367)
!369 = !DILocation(line: 407, column: 13, scope: !367)
!370 = !DILocation(line: 407, column: 21, scope: !367)
!371 = !DILocation(line: 407, column: 20, scope: !367)
!372 = !DILocation(line: 408, column: 11, scope: !373)
!373 = distinct !DILexicalBlock(scope: !367, file: !3, line: 408, column: 11)
!374 = !DILocation(line: 408, column: 15, scope: !373)
!375 = !DILocation(line: 408, column: 19, scope: !373)
!376 = !DILocation(line: 408, column: 11, scope: !367)
!377 = !DILocation(line: 408, column: 36, scope: !373)
!378 = !DILocation(line: 408, column: 35, scope: !373)
!379 = !DILocation(line: 408, column: 28, scope: !373)
!380 = !DILocation(line: 409, column: 14, scope: !367)
!381 = !DILocation(line: 409, column: 7, scope: !367)
!382 = !DILocation(line: 412, column: 23, scope: !264)
!383 = !DILocation(line: 412, column: 3, scope: !264)
!384 = !DILocation(line: 413, column: 3, scope: !264)
!385 = !DILocation(line: 414, column: 3, scope: !264)
!386 = distinct !DISubprogram(name: "decNumberToUInt32", scope: !3, file: !3, line: 416, type: !387, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!387 = !DISubroutineType(types: !388)
!388 = !{!36, !267, !269}
!389 = !DILocalVariable(name: "dn", arg: 1, scope: !386, file: !3, line: 416, type: !267)
!390 = !DILocation(line: 416, column: 41, scope: !386)
!391 = !DILocalVariable(name: "set", arg: 2, scope: !386, file: !3, line: 416, type: !269)
!392 = !DILocation(line: 416, column: 57, scope: !386)
!393 = !DILocation(line: 421, column: 7, scope: !394)
!394 = distinct !DILexicalBlock(scope: !386, file: !3, line: 421, column: 7)
!395 = !DILocation(line: 421, column: 11, scope: !394)
!396 = !DILocation(line: 421, column: 15, scope: !394)
!397 = !DILocation(line: 421, column: 27, scope: !394)
!398 = !DILocation(line: 421, column: 30, scope: !394)
!399 = !DILocation(line: 421, column: 34, scope: !394)
!400 = !DILocation(line: 421, column: 40, scope: !394)
!401 = !DILocation(line: 421, column: 44, scope: !394)
!402 = !DILocation(line: 421, column: 47, scope: !394)
!403 = !DILocation(line: 421, column: 51, scope: !394)
!404 = !DILocation(line: 421, column: 59, scope: !394)
!405 = !DILocation(line: 422, column: 5, scope: !394)
!406 = !DILocation(line: 422, column: 9, scope: !394)
!407 = !DILocation(line: 422, column: 13, scope: !394)
!408 = !DILocation(line: 422, column: 17, scope: !394)
!409 = !DILocation(line: 422, column: 25, scope: !394)
!410 = !DILocation(line: 422, column: 29, scope: !394)
!411 = !DILocation(line: 421, column: 7, scope: !386)
!412 = !DILocalVariable(name: "d", scope: !413, file: !3, line: 424, type: !31)
!413 = distinct !DILexicalBlock(scope: !394, file: !3, line: 423, column: 9)
!414 = !DILocation(line: 424, column: 9, scope: !413)
!415 = !DILocalVariable(name: "up", scope: !413, file: !3, line: 425, type: !301)
!416 = !DILocation(line: 425, column: 17, scope: !413)
!417 = !DILocalVariable(name: "hi", scope: !413, file: !3, line: 426, type: !36)
!418 = !DILocation(line: 426, column: 10, scope: !413)
!419 = !DILocalVariable(name: "lo", scope: !413, file: !3, line: 426, type: !36)
!420 = !DILocation(line: 426, column: 16, scope: !413)
!421 = !DILocation(line: 427, column: 8, scope: !413)
!422 = !DILocation(line: 427, column: 12, scope: !413)
!423 = !DILocation(line: 427, column: 7, scope: !413)
!424 = !DILocation(line: 428, column: 9, scope: !413)
!425 = !DILocation(line: 428, column: 8, scope: !413)
!426 = !DILocation(line: 428, column: 7, scope: !413)
!427 = !DILocation(line: 430, column: 10, scope: !413)
!428 = !DILocation(line: 430, column: 12, scope: !413)
!429 = !DILocation(line: 430, column: 9, scope: !413)
!430 = !DILocation(line: 431, column: 10, scope: !413)
!431 = !DILocation(line: 431, column: 12, scope: !413)
!432 = !DILocation(line: 431, column: 9, scope: !413)
!433 = !DILocation(line: 433, column: 7, scope: !413)
!434 = !DILocation(line: 435, column: 11, scope: !435)
!435 = distinct !DILexicalBlock(scope: !413, file: !3, line: 435, column: 5)
!436 = !DILocation(line: 435, column: 10, scope: !435)
!437 = !DILocation(line: 435, column: 21, scope: !438)
!438 = distinct !DILexicalBlock(scope: !435, file: !3, line: 435, column: 5)
!439 = !DILocation(line: 435, column: 23, scope: !438)
!440 = !DILocation(line: 435, column: 27, scope: !438)
!441 = !DILocation(line: 435, column: 22, scope: !438)
!442 = !DILocation(line: 435, column: 5, scope: !435)
!443 = !DILocation(line: 435, column: 58, scope: !438)
!444 = !DILocation(line: 435, column: 57, scope: !438)
!445 = !DILocation(line: 435, column: 68, scope: !438)
!446 = !DILocation(line: 435, column: 69, scope: !438)
!447 = !DILocation(line: 435, column: 61, scope: !438)
!448 = !DILocation(line: 435, column: 60, scope: !438)
!449 = !DILocation(line: 435, column: 55, scope: !438)
!450 = !DILocation(line: 435, column: 53, scope: !438)
!451 = !DILocation(line: 435, column: 37, scope: !438)
!452 = !DILocation(line: 435, column: 42, scope: !438)
!453 = !DILocation(line: 435, column: 5, scope: !438)
!454 = distinct !{!454, !442, !455}
!455 = !DILocation(line: 435, column: 71, scope: !435)
!456 = !DILocation(line: 438, column: 9, scope: !457)
!457 = distinct !DILexicalBlock(scope: !413, file: !3, line: 438, column: 9)
!458 = !DILocation(line: 438, column: 11, scope: !457)
!459 = !DILocation(line: 438, column: 22, scope: !457)
!460 = !DILocation(line: 438, column: 26, scope: !457)
!461 = !DILocation(line: 438, column: 28, scope: !457)
!462 = !DILocation(line: 438, column: 40, scope: !457)
!463 = !DILocation(line: 438, column: 43, scope: !457)
!464 = !DILocation(line: 438, column: 45, scope: !457)
!465 = !DILocation(line: 438, column: 9, scope: !413)
!466 = !DILocation(line: 439, column: 18, scope: !457)
!467 = !DILocation(line: 439, column: 26, scope: !457)
!468 = !DILocation(line: 439, column: 25, scope: !457)
!469 = !DILocation(line: 439, column: 11, scope: !457)
!470 = !DILocation(line: 441, column: 23, scope: !386)
!471 = !DILocation(line: 441, column: 3, scope: !386)
!472 = !DILocation(line: 442, column: 3, scope: !386)
!473 = !DILocation(line: 443, column: 3, scope: !386)
!474 = distinct !DISubprogram(name: "decNumberToString", scope: !3, file: !3, line: 459, type: !475, scopeLine: 459, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!475 = !DISubroutineType(types: !476)
!476 = !{!477, !267, !477}
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64)
!478 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!479 = !DILocalVariable(name: "dn", arg: 1, scope: !474, file: !3, line: 459, type: !267)
!480 = !DILocation(line: 459, column: 43, scope: !474)
!481 = !DILocalVariable(name: "string", arg: 2, scope: !474, file: !3, line: 459, type: !477)
!482 = !DILocation(line: 459, column: 53, scope: !474)
!483 = !DILocation(line: 460, column: 15, scope: !474)
!484 = !DILocation(line: 460, column: 19, scope: !474)
!485 = !DILocation(line: 460, column: 3, scope: !474)
!486 = !DILocation(line: 461, column: 10, scope: !474)
!487 = !DILocation(line: 461, column: 3, scope: !474)
!488 = distinct !DISubprogram(name: "decToString", scope: !3, file: !3, line: 3615, type: !489, scopeLine: 3615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!489 = !DISubroutineType(types: !490)
!490 = !{null, !267, !477, !44}
!491 = !DILocalVariable(name: "dn", arg: 1, scope: !488, file: !3, line: 3615, type: !267)
!492 = !DILocation(line: 3615, column: 42, scope: !488)
!493 = !DILocalVariable(name: "string", arg: 2, scope: !488, file: !3, line: 3615, type: !477)
!494 = !DILocation(line: 3615, column: 52, scope: !488)
!495 = !DILocalVariable(name: "eng", arg: 3, scope: !488, file: !3, line: 3615, type: !44)
!496 = !DILocation(line: 3615, column: 65, scope: !488)
!497 = !DILocalVariable(name: "exp", scope: !488, file: !3, line: 3616, type: !31)
!498 = !DILocation(line: 3616, column: 7, scope: !488)
!499 = !DILocation(line: 3616, column: 11, scope: !488)
!500 = !DILocation(line: 3616, column: 15, scope: !488)
!501 = !DILocalVariable(name: "e", scope: !488, file: !3, line: 3617, type: !31)
!502 = !DILocation(line: 3617, column: 7, scope: !488)
!503 = !DILocalVariable(name: "pre", scope: !488, file: !3, line: 3618, type: !31)
!504 = !DILocation(line: 3618, column: 7, scope: !488)
!505 = !DILocalVariable(name: "cut", scope: !488, file: !3, line: 3619, type: !31)
!506 = !DILocation(line: 3619, column: 7, scope: !488)
!507 = !DILocalVariable(name: "c", scope: !488, file: !3, line: 3620, type: !477)
!508 = !DILocation(line: 3620, column: 9, scope: !488)
!509 = !DILocation(line: 3620, column: 11, scope: !488)
!510 = !DILocalVariable(name: "up", scope: !488, file: !3, line: 3621, type: !301)
!511 = !DILocation(line: 3621, column: 15, scope: !488)
!512 = !DILocation(line: 3621, column: 18, scope: !488)
!513 = !DILocation(line: 3621, column: 22, scope: !488)
!514 = !DILocation(line: 3621, column: 26, scope: !488)
!515 = !DILocation(line: 3621, column: 25, scope: !488)
!516 = !DILocation(line: 3621, column: 41, scope: !488)
!517 = !DILocalVariable(name: "u", scope: !488, file: !3, line: 3622, type: !36)
!518 = !DILocation(line: 3622, column: 8, scope: !488)
!519 = !DILocalVariable(name: "pow", scope: !488, file: !3, line: 3622, type: !36)
!520 = !DILocation(line: 3622, column: 11, scope: !488)
!521 = !DILocation(line: 3630, column: 7, scope: !522)
!522 = distinct !DILexicalBlock(scope: !488, file: !3, line: 3630, column: 7)
!523 = !DILocation(line: 3630, column: 7, scope: !488)
!524 = !DILocation(line: 3631, column: 6, scope: !525)
!525 = distinct !DILexicalBlock(scope: !522, file: !3, line: 3630, column: 32)
!526 = !DILocation(line: 3631, column: 7, scope: !525)
!527 = !DILocation(line: 3632, column: 6, scope: !525)
!528 = !DILocation(line: 3633, column: 5, scope: !525)
!529 = !DILocation(line: 3634, column: 7, scope: !530)
!530 = distinct !DILexicalBlock(scope: !488, file: !3, line: 3634, column: 7)
!531 = !DILocation(line: 3634, column: 11, scope: !530)
!532 = !DILocation(line: 3634, column: 15, scope: !530)
!533 = !DILocation(line: 3634, column: 7, scope: !488)
!534 = !DILocation(line: 3635, column: 9, scope: !535)
!535 = distinct !DILexicalBlock(scope: !536, file: !3, line: 3635, column: 9)
!536 = distinct !DILexicalBlock(scope: !530, file: !3, line: 3634, column: 28)
!537 = !DILocation(line: 3635, column: 9, scope: !536)
!538 = !DILocation(line: 3636, column: 14, scope: !539)
!539 = distinct !DILexicalBlock(scope: !535, file: !3, line: 3635, column: 34)
!540 = !DILocation(line: 3636, column: 7, scope: !539)
!541 = !DILocation(line: 3637, column: 14, scope: !539)
!542 = !DILocation(line: 3637, column: 15, scope: !539)
!543 = !DILocation(line: 3637, column: 7, scope: !539)
!544 = !DILocation(line: 3638, column: 7, scope: !539)
!545 = !DILocation(line: 3640, column: 9, scope: !546)
!546 = distinct !DILexicalBlock(scope: !536, file: !3, line: 3640, column: 9)
!547 = !DILocation(line: 3640, column: 13, scope: !546)
!548 = !DILocation(line: 3640, column: 17, scope: !546)
!549 = !DILocation(line: 3640, column: 9, scope: !536)
!550 = !DILocation(line: 3641, column: 8, scope: !551)
!551 = distinct !DILexicalBlock(scope: !546, file: !3, line: 3640, column: 27)
!552 = !DILocation(line: 3641, column: 9, scope: !551)
!553 = !DILocation(line: 3642, column: 8, scope: !551)
!554 = !DILocation(line: 3643, column: 7, scope: !551)
!555 = !DILocation(line: 3644, column: 12, scope: !536)
!556 = !DILocation(line: 3644, column: 5, scope: !536)
!557 = !DILocation(line: 3645, column: 6, scope: !536)
!558 = !DILocation(line: 3648, column: 9, scope: !559)
!559 = distinct !DILexicalBlock(scope: !536, file: !3, line: 3648, column: 9)
!560 = !DILocation(line: 3648, column: 12, scope: !559)
!561 = !DILocation(line: 3648, column: 16, scope: !559)
!562 = !DILocation(line: 3648, column: 21, scope: !559)
!563 = !DILocation(line: 3648, column: 25, scope: !559)
!564 = !DILocation(line: 3648, column: 20, scope: !559)
!565 = !DILocation(line: 3648, column: 28, scope: !559)
!566 = !DILocation(line: 3648, column: 32, scope: !559)
!567 = !DILocation(line: 3648, column: 35, scope: !559)
!568 = !DILocation(line: 3648, column: 39, scope: !559)
!569 = !DILocation(line: 3648, column: 45, scope: !559)
!570 = !DILocation(line: 3648, column: 9, scope: !536)
!571 = !DILocation(line: 3648, column: 51, scope: !559)
!572 = !DILocation(line: 3650, column: 5, scope: !536)
!573 = !DILocation(line: 3653, column: 7, scope: !488)
!574 = !DILocation(line: 3653, column: 6, scope: !488)
!575 = !DILocation(line: 3654, column: 6, scope: !488)
!576 = !DILocation(line: 3656, column: 7, scope: !577)
!577 = distinct !DILexicalBlock(scope: !488, file: !3, line: 3656, column: 7)
!578 = !DILocation(line: 3656, column: 10, scope: !577)
!579 = !DILocation(line: 3656, column: 7, scope: !488)
!580 = !DILocation(line: 3657, column: 5, scope: !581)
!581 = distinct !DILexicalBlock(scope: !577, file: !3, line: 3656, column: 15)
!582 = !DILocation(line: 3657, column: 11, scope: !583)
!583 = distinct !DILexicalBlock(scope: !584, file: !3, line: 3657, column: 5)
!584 = distinct !DILexicalBlock(scope: !581, file: !3, line: 3657, column: 5)
!585 = !DILocation(line: 3657, column: 15, scope: !583)
!586 = !DILocation(line: 3657, column: 19, scope: !583)
!587 = !DILocation(line: 3657, column: 13, scope: !583)
!588 = !DILocation(line: 3657, column: 5, scope: !584)
!589 = !DILocation(line: 3658, column: 10, scope: !590)
!590 = distinct !DILexicalBlock(scope: !583, file: !3, line: 3657, column: 30)
!591 = !DILocation(line: 3658, column: 9, scope: !590)
!592 = !DILocation(line: 3658, column: 8, scope: !590)
!593 = !DILocation(line: 3659, column: 7, scope: !590)
!594 = !DILocation(line: 3659, column: 14, scope: !595)
!595 = distinct !DILexicalBlock(scope: !596, file: !3, line: 3659, column: 7)
!596 = distinct !DILexicalBlock(scope: !590, file: !3, line: 3659, column: 7)
!597 = !DILocation(line: 3659, column: 17, scope: !595)
!598 = !DILocation(line: 3659, column: 7, scope: !596)
!599 = !DILocation(line: 3659, column: 34, scope: !600)
!600 = distinct !DILexicalBlock(scope: !595, file: !3, line: 3659, column: 34)
!601 = !DILocation(line: 3659, column: 34, scope: !602)
!602 = distinct !DILexicalBlock(scope: !600, file: !3, line: 3659, column: 34)
!603 = !DILocation(line: 3659, column: 34, scope: !604)
!604 = distinct !DILexicalBlock(scope: !602, file: !3, line: 3659, column: 34)
!605 = !DILocation(line: 3659, column: 34, scope: !606)
!606 = distinct !DILexicalBlock(scope: !604, file: !3, line: 3659, column: 34)
!607 = !DILocation(line: 3659, column: 34, scope: !608)
!608 = distinct !DILexicalBlock(scope: !606, file: !3, line: 3659, column: 34)
!609 = !DILocation(line: 3659, column: 34, scope: !610)
!610 = distinct !DILexicalBlock(scope: !604, file: !3, line: 3659, column: 34)
!611 = !DILocation(line: 3659, column: 34, scope: !612)
!612 = distinct !DILexicalBlock(scope: !610, file: !3, line: 3659, column: 34)
!613 = !DILocation(line: 3659, column: 34, scope: !614)
!614 = distinct !DILexicalBlock(scope: !600, file: !3, line: 3659, column: 34)
!615 = !DILocation(line: 3659, column: 34, scope: !616)
!616 = distinct !DILexicalBlock(scope: !614, file: !3, line: 3659, column: 34)
!617 = !DILocation(line: 3659, column: 34, scope: !618)
!618 = distinct !DILexicalBlock(scope: !600, file: !3, line: 3659, column: 34)
!619 = !DILocation(line: 3659, column: 34, scope: !620)
!620 = distinct !DILexicalBlock(scope: !618, file: !3, line: 3659, column: 34)
!621 = !DILocation(line: 3659, column: 23, scope: !595)
!622 = !DILocation(line: 3659, column: 30, scope: !595)
!623 = !DILocation(line: 3659, column: 7, scope: !595)
!624 = distinct !{!624, !598, !625}
!625 = !DILocation(line: 3659, column: 34, scope: !596)
!626 = !DILocation(line: 3660, column: 10, scope: !590)
!627 = !DILocation(line: 3661, column: 7, scope: !590)
!628 = !DILocation(line: 3657, column: 26, scope: !583)
!629 = !DILocation(line: 3657, column: 5, scope: !583)
!630 = distinct !{!630, !588, !631}
!631 = !DILocation(line: 3661, column: 7, scope: !584)
!632 = !DILocation(line: 3662, column: 6, scope: !581)
!633 = !DILocation(line: 3662, column: 7, scope: !581)
!634 = !DILocation(line: 3663, column: 5, scope: !581)
!635 = !DILocation(line: 3666, column: 7, scope: !488)
!636 = !DILocation(line: 3666, column: 11, scope: !488)
!637 = !DILocation(line: 3666, column: 18, scope: !488)
!638 = !DILocation(line: 3666, column: 17, scope: !488)
!639 = !DILocation(line: 3666, column: 6, scope: !488)
!640 = !DILocation(line: 3667, column: 4, scope: !488)
!641 = !DILocation(line: 3668, column: 8, scope: !642)
!642 = distinct !DILexicalBlock(scope: !488, file: !3, line: 3668, column: 7)
!643 = !DILocation(line: 3668, column: 11, scope: !642)
!644 = !DILocation(line: 3668, column: 15, scope: !642)
!645 = !DILocation(line: 3668, column: 19, scope: !642)
!646 = !DILocation(line: 3668, column: 22, scope: !642)
!647 = !DILocation(line: 3668, column: 7, scope: !488)
!648 = !DILocation(line: 3669, column: 7, scope: !649)
!649 = distinct !DILexicalBlock(scope: !642, file: !3, line: 3668, column: 28)
!650 = !DILocation(line: 3669, column: 11, scope: !649)
!651 = !DILocation(line: 3669, column: 15, scope: !649)
!652 = !DILocation(line: 3669, column: 10, scope: !649)
!653 = !DILocation(line: 3669, column: 21, scope: !649)
!654 = !DILocation(line: 3669, column: 6, scope: !649)
!655 = !DILocation(line: 3670, column: 8, scope: !649)
!656 = !DILocation(line: 3671, column: 9, scope: !657)
!657 = distinct !DILexicalBlock(scope: !649, file: !3, line: 3671, column: 9)
!658 = !DILocation(line: 3671, column: 13, scope: !657)
!659 = !DILocation(line: 3671, column: 17, scope: !657)
!660 = !DILocation(line: 3671, column: 18, scope: !657)
!661 = !DILocation(line: 3671, column: 9, scope: !649)
!662 = !DILocalVariable(name: "adj", scope: !663, file: !3, line: 3672, type: !31)
!663 = distinct !DILexicalBlock(scope: !657, file: !3, line: 3671, column: 24)
!664 = !DILocation(line: 3672, column: 11, scope: !663)
!665 = !DILocation(line: 3675, column: 11, scope: !666)
!666 = distinct !DILexicalBlock(scope: !663, file: !3, line: 3675, column: 11)
!667 = !DILocation(line: 3675, column: 12, scope: !666)
!668 = !DILocation(line: 3675, column: 11, scope: !663)
!669 = !DILocation(line: 3676, column: 8, scope: !670)
!670 = distinct !DILexicalBlock(scope: !666, file: !3, line: 3675, column: 16)
!671 = !DILocation(line: 3676, column: 7, scope: !670)
!672 = !DILocation(line: 3676, column: 10, scope: !670)
!673 = !DILocation(line: 3676, column: 5, scope: !670)
!674 = !DILocation(line: 3677, column: 6, scope: !675)
!675 = distinct !DILexicalBlock(scope: !670, file: !3, line: 3677, column: 6)
!676 = !DILocation(line: 3677, column: 9, scope: !675)
!677 = !DILocation(line: 3677, column: 6, scope: !670)
!678 = !DILocation(line: 3677, column: 20, scope: !675)
!679 = !DILocation(line: 3677, column: 19, scope: !675)
!680 = !DILocation(line: 3677, column: 17, scope: !675)
!681 = !DILocation(line: 3677, column: 14, scope: !675)
!682 = !DILocation(line: 3678, column: 2, scope: !670)
!683 = !DILocation(line: 3680, column: 6, scope: !684)
!684 = distinct !DILexicalBlock(scope: !666, file: !3, line: 3679, column: 13)
!685 = !DILocation(line: 3680, column: 7, scope: !684)
!686 = !DILocation(line: 3680, column: 5, scope: !684)
!687 = !DILocation(line: 3682, column: 9, scope: !663)
!688 = !DILocation(line: 3682, column: 11, scope: !663)
!689 = !DILocation(line: 3682, column: 10, scope: !663)
!690 = !DILocation(line: 3682, column: 8, scope: !663)
!691 = !DILocation(line: 3686, column: 12, scope: !692)
!692 = distinct !DILexicalBlock(scope: !663, file: !3, line: 3686, column: 11)
!693 = !DILocation(line: 3686, column: 11, scope: !663)
!694 = !DILocation(line: 3686, column: 29, scope: !692)
!695 = !DILocation(line: 3686, column: 27, scope: !692)
!696 = !DILocation(line: 3686, column: 24, scope: !692)
!697 = !DILocation(line: 3688, column: 6, scope: !698)
!698 = distinct !DILexicalBlock(scope: !699, file: !3, line: 3688, column: 6)
!699 = distinct !DILexicalBlock(scope: !692, file: !3, line: 3687, column: 13)
!700 = !DILocation(line: 3688, column: 9, scope: !698)
!701 = !DILocation(line: 3688, column: 6, scope: !699)
!702 = !DILocation(line: 3689, column: 6, scope: !703)
!703 = distinct !DILexicalBlock(scope: !698, file: !3, line: 3688, column: 14)
!704 = !DILocation(line: 3689, column: 7, scope: !703)
!705 = !DILocation(line: 3689, column: 5, scope: !703)
!706 = !DILocation(line: 3690, column: 12, scope: !703)
!707 = !DILocation(line: 3690, column: 11, scope: !703)
!708 = !DILocation(line: 3690, column: 8, scope: !703)
!709 = !DILocation(line: 3690, column: 7, scope: !703)
!710 = !DILocation(line: 3691, column: 4, scope: !703)
!711 = !DILocation(line: 3693, column: 7, scope: !663)
!712 = !DILocation(line: 3694, column: 5, scope: !649)
!713 = !DILocation(line: 3697, column: 6, scope: !488)
!714 = !DILocation(line: 3697, column: 5, scope: !488)
!715 = !DILocation(line: 3697, column: 4, scope: !488)
!716 = !DILocation(line: 3698, column: 7, scope: !717)
!717 = distinct !DILexicalBlock(scope: !488, file: !3, line: 3698, column: 7)
!718 = !DILocation(line: 3698, column: 10, scope: !717)
!719 = !DILocation(line: 3698, column: 7, scope: !488)
!720 = !DILocalVariable(name: "n", scope: !721, file: !3, line: 3699, type: !31)
!721 = distinct !DILexicalBlock(scope: !717, file: !3, line: 3698, column: 14)
!722 = !DILocation(line: 3699, column: 9, scope: !721)
!723 = !DILocation(line: 3699, column: 11, scope: !721)
!724 = !DILocation(line: 3700, column: 5, scope: !721)
!725 = !DILocation(line: 3700, column: 12, scope: !726)
!726 = distinct !DILexicalBlock(scope: !727, file: !3, line: 3700, column: 5)
!727 = distinct !DILexicalBlock(scope: !721, file: !3, line: 3700, column: 5)
!728 = !DILocation(line: 3700, column: 15, scope: !726)
!729 = !DILocation(line: 3700, column: 5, scope: !727)
!730 = !DILocation(line: 3701, column: 11, scope: !731)
!731 = distinct !DILexicalBlock(scope: !732, file: !3, line: 3701, column: 11)
!732 = distinct !DILexicalBlock(scope: !726, file: !3, line: 3700, column: 38)
!733 = !DILocation(line: 3701, column: 14, scope: !731)
!734 = !DILocation(line: 3701, column: 11, scope: !732)
!735 = !DILocation(line: 3702, column: 6, scope: !736)
!736 = distinct !DILexicalBlock(scope: !737, file: !3, line: 3702, column: 6)
!737 = distinct !DILexicalBlock(scope: !731, file: !3, line: 3701, column: 18)
!738 = !DILocation(line: 3702, column: 10, scope: !736)
!739 = !DILocation(line: 3702, column: 14, scope: !736)
!740 = !DILocation(line: 3702, column: 8, scope: !736)
!741 = !DILocation(line: 3702, column: 6, scope: !737)
!742 = !DILocation(line: 3702, column: 19, scope: !736)
!743 = !DILocation(line: 3703, column: 4, scope: !737)
!744 = !DILocation(line: 3704, column: 5, scope: !737)
!745 = !DILocation(line: 3705, column: 5, scope: !737)
!746 = !DILocation(line: 3705, column: 4, scope: !737)
!747 = !DILocation(line: 3705, column: 3, scope: !737)
!748 = !DILocation(line: 3706, column: 2, scope: !737)
!749 = !DILocation(line: 3707, column: 7, scope: !750)
!750 = distinct !DILexicalBlock(scope: !732, file: !3, line: 3707, column: 7)
!751 = !DILocation(line: 3707, column: 7, scope: !752)
!752 = distinct !DILexicalBlock(scope: !750, file: !3, line: 3707, column: 7)
!753 = !DILocation(line: 3707, column: 7, scope: !754)
!754 = distinct !DILexicalBlock(scope: !752, file: !3, line: 3707, column: 7)
!755 = !DILocation(line: 3707, column: 7, scope: !756)
!756 = distinct !DILexicalBlock(scope: !754, file: !3, line: 3707, column: 7)
!757 = !DILocation(line: 3707, column: 7, scope: !758)
!758 = distinct !DILexicalBlock(scope: !756, file: !3, line: 3707, column: 7)
!759 = !DILocation(line: 3707, column: 7, scope: !760)
!760 = distinct !DILexicalBlock(scope: !754, file: !3, line: 3707, column: 7)
!761 = !DILocation(line: 3707, column: 7, scope: !762)
!762 = distinct !DILexicalBlock(scope: !760, file: !3, line: 3707, column: 7)
!763 = !DILocation(line: 3707, column: 7, scope: !764)
!764 = distinct !DILexicalBlock(scope: !750, file: !3, line: 3707, column: 7)
!765 = !DILocation(line: 3707, column: 7, scope: !766)
!766 = distinct !DILexicalBlock(scope: !764, file: !3, line: 3707, column: 7)
!767 = !DILocation(line: 3707, column: 7, scope: !768)
!768 = distinct !DILexicalBlock(scope: !750, file: !3, line: 3707, column: 7)
!769 = !DILocation(line: 3707, column: 7, scope: !770)
!770 = distinct !DILexicalBlock(scope: !768, file: !3, line: 3707, column: 7)
!771 = !DILocation(line: 3708, column: 7, scope: !732)
!772 = !DILocation(line: 3700, column: 22, scope: !726)
!773 = !DILocation(line: 3700, column: 27, scope: !726)
!774 = !DILocation(line: 3700, column: 34, scope: !726)
!775 = !DILocation(line: 3700, column: 5, scope: !726)
!776 = distinct !{!776, !729, !777}
!777 = !DILocation(line: 3708, column: 7, scope: !727)
!778 = !DILocation(line: 3709, column: 9, scope: !779)
!779 = distinct !DILexicalBlock(scope: !721, file: !3, line: 3709, column: 9)
!780 = !DILocation(line: 3709, column: 11, scope: !779)
!781 = !DILocation(line: 3709, column: 15, scope: !779)
!782 = !DILocation(line: 3709, column: 10, scope: !779)
!783 = !DILocation(line: 3709, column: 9, scope: !721)
!784 = !DILocation(line: 3710, column: 8, scope: !785)
!785 = distinct !DILexicalBlock(scope: !779, file: !3, line: 3709, column: 23)
!786 = !DILocation(line: 3710, column: 9, scope: !785)
!787 = !DILocation(line: 3710, column: 16, scope: !785)
!788 = !DILocation(line: 3711, column: 7, scope: !785)
!789 = !DILocation(line: 3712, column: 6, scope: !790)
!790 = distinct !DILexicalBlock(scope: !791, file: !3, line: 3712, column: 6)
!791 = distinct !DILexicalBlock(scope: !792, file: !3, line: 3711, column: 27)
!792 = distinct !DILexicalBlock(scope: !793, file: !3, line: 3711, column: 7)
!793 = distinct !DILexicalBlock(scope: !785, file: !3, line: 3711, column: 7)
!794 = !DILocation(line: 3712, column: 9, scope: !790)
!795 = !DILocation(line: 3712, column: 6, scope: !791)
!796 = !DILocation(line: 3713, column: 8, scope: !797)
!797 = distinct !DILexicalBlock(scope: !798, file: !3, line: 3713, column: 8)
!798 = distinct !DILexicalBlock(scope: !790, file: !3, line: 3712, column: 13)
!799 = !DILocation(line: 3713, column: 12, scope: !797)
!800 = !DILocation(line: 3713, column: 16, scope: !797)
!801 = !DILocation(line: 3713, column: 10, scope: !797)
!802 = !DILocation(line: 3713, column: 8, scope: !798)
!803 = !DILocation(line: 3713, column: 21, scope: !797)
!804 = !DILocation(line: 3714, column: 6, scope: !798)
!805 = !DILocation(line: 3715, column: 7, scope: !798)
!806 = !DILocation(line: 3716, column: 7, scope: !798)
!807 = !DILocation(line: 3716, column: 6, scope: !798)
!808 = !DILocation(line: 3716, column: 5, scope: !798)
!809 = !DILocation(line: 3717, column: 4, scope: !798)
!810 = !DILocation(line: 3718, column: 2, scope: !811)
!811 = distinct !DILexicalBlock(scope: !791, file: !3, line: 3718, column: 2)
!812 = !DILocation(line: 3718, column: 2, scope: !813)
!813 = distinct !DILexicalBlock(scope: !811, file: !3, line: 3718, column: 2)
!814 = !DILocation(line: 3718, column: 2, scope: !815)
!815 = distinct !DILexicalBlock(scope: !813, file: !3, line: 3718, column: 2)
!816 = !DILocation(line: 3718, column: 2, scope: !817)
!817 = distinct !DILexicalBlock(scope: !815, file: !3, line: 3718, column: 2)
!818 = !DILocation(line: 3718, column: 2, scope: !819)
!819 = distinct !DILexicalBlock(scope: !817, file: !3, line: 3718, column: 2)
!820 = !DILocation(line: 3718, column: 2, scope: !821)
!821 = distinct !DILexicalBlock(scope: !815, file: !3, line: 3718, column: 2)
!822 = !DILocation(line: 3718, column: 2, scope: !823)
!823 = distinct !DILexicalBlock(scope: !821, file: !3, line: 3718, column: 2)
!824 = !DILocation(line: 3718, column: 2, scope: !825)
!825 = distinct !DILexicalBlock(scope: !811, file: !3, line: 3718, column: 2)
!826 = !DILocation(line: 3718, column: 2, scope: !827)
!827 = distinct !DILexicalBlock(scope: !825, file: !3, line: 3718, column: 2)
!828 = !DILocation(line: 3718, column: 2, scope: !829)
!829 = distinct !DILexicalBlock(scope: !811, file: !3, line: 3718, column: 2)
!830 = !DILocation(line: 3718, column: 2, scope: !831)
!831 = distinct !DILexicalBlock(scope: !829, file: !3, line: 3718, column: 2)
!832 = !DILocation(line: 3719, column: 2, scope: !791)
!833 = !DILocation(line: 3711, column: 16, scope: !792)
!834 = !DILocation(line: 3711, column: 23, scope: !792)
!835 = !DILocation(line: 3711, column: 7, scope: !792)
!836 = distinct !{!836, !837, !838}
!837 = !DILocation(line: 3711, column: 7, scope: !793)
!838 = !DILocation(line: 3719, column: 2, scope: !793)
!839 = !DILocation(line: 3720, column: 7, scope: !785)
!840 = !DILocation(line: 3721, column: 11, scope: !779)
!841 = !DILocation(line: 3721, column: 18, scope: !842)
!842 = distinct !DILexicalBlock(scope: !843, file: !3, line: 3721, column: 11)
!843 = distinct !DILexicalBlock(scope: !779, file: !3, line: 3721, column: 11)
!844 = !DILocation(line: 3721, column: 21, scope: !842)
!845 = !DILocation(line: 3721, column: 11, scope: !843)
!846 = !DILocation(line: 3721, column: 38, scope: !842)
!847 = !DILocation(line: 3721, column: 39, scope: !842)
!848 = !DILocation(line: 3721, column: 37, scope: !842)
!849 = !DILocation(line: 3721, column: 28, scope: !842)
!850 = !DILocation(line: 3721, column: 33, scope: !842)
!851 = !DILocation(line: 3721, column: 11, scope: !842)
!852 = distinct !{!852, !845, !853}
!853 = !DILocation(line: 3721, column: 40, scope: !843)
!854 = !DILocation(line: 3722, column: 5, scope: !721)
!855 = !DILocation(line: 3724, column: 6, scope: !856)
!856 = distinct !DILexicalBlock(scope: !717, file: !3, line: 3723, column: 9)
!857 = !DILocation(line: 3724, column: 7, scope: !856)
!858 = !DILocation(line: 3724, column: 14, scope: !856)
!859 = !DILocation(line: 3725, column: 6, scope: !856)
!860 = !DILocation(line: 3725, column: 7, scope: !856)
!861 = !DILocation(line: 3725, column: 14, scope: !856)
!862 = !DILocation(line: 3726, column: 5, scope: !856)
!863 = !DILocation(line: 3726, column: 12, scope: !864)
!864 = distinct !DILexicalBlock(scope: !865, file: !3, line: 3726, column: 5)
!865 = distinct !DILexicalBlock(scope: !856, file: !3, line: 3726, column: 5)
!866 = !DILocation(line: 3726, column: 15, scope: !864)
!867 = !DILocation(line: 3726, column: 5, scope: !865)
!868 = !DILocation(line: 3726, column: 32, scope: !864)
!869 = !DILocation(line: 3726, column: 33, scope: !864)
!870 = !DILocation(line: 3726, column: 31, scope: !864)
!871 = !DILocation(line: 3726, column: 22, scope: !864)
!872 = !DILocation(line: 3726, column: 27, scope: !864)
!873 = !DILocation(line: 3726, column: 5, scope: !864)
!874 = distinct !{!874, !867, !875}
!875 = !DILocation(line: 3726, column: 34, scope: !865)
!876 = !DILocation(line: 3727, column: 5, scope: !856)
!877 = !DILocation(line: 3728, column: 11, scope: !878)
!878 = distinct !DILexicalBlock(scope: !879, file: !3, line: 3728, column: 11)
!879 = distinct !DILexicalBlock(scope: !880, file: !3, line: 3727, column: 26)
!880 = distinct !DILexicalBlock(scope: !881, file: !3, line: 3727, column: 5)
!881 = distinct !DILexicalBlock(scope: !856, file: !3, line: 3727, column: 5)
!882 = !DILocation(line: 3728, column: 14, scope: !878)
!883 = !DILocation(line: 3728, column: 11, scope: !879)
!884 = !DILocation(line: 3729, column: 6, scope: !885)
!885 = distinct !DILexicalBlock(scope: !886, file: !3, line: 3729, column: 6)
!886 = distinct !DILexicalBlock(scope: !878, file: !3, line: 3728, column: 18)
!887 = !DILocation(line: 3729, column: 10, scope: !885)
!888 = !DILocation(line: 3729, column: 14, scope: !885)
!889 = !DILocation(line: 3729, column: 8, scope: !885)
!890 = !DILocation(line: 3729, column: 6, scope: !886)
!891 = !DILocation(line: 3729, column: 19, scope: !885)
!892 = !DILocation(line: 3730, column: 4, scope: !886)
!893 = !DILocation(line: 3731, column: 5, scope: !886)
!894 = !DILocation(line: 3732, column: 5, scope: !886)
!895 = !DILocation(line: 3732, column: 4, scope: !886)
!896 = !DILocation(line: 3732, column: 3, scope: !886)
!897 = !DILocation(line: 3733, column: 2, scope: !886)
!898 = !DILocation(line: 3734, column: 7, scope: !899)
!899 = distinct !DILexicalBlock(scope: !879, file: !3, line: 3734, column: 7)
!900 = !DILocation(line: 3734, column: 7, scope: !901)
!901 = distinct !DILexicalBlock(scope: !899, file: !3, line: 3734, column: 7)
!902 = !DILocation(line: 3734, column: 7, scope: !903)
!903 = distinct !DILexicalBlock(scope: !901, file: !3, line: 3734, column: 7)
!904 = !DILocation(line: 3734, column: 7, scope: !905)
!905 = distinct !DILexicalBlock(scope: !903, file: !3, line: 3734, column: 7)
!906 = !DILocation(line: 3734, column: 7, scope: !907)
!907 = distinct !DILexicalBlock(scope: !905, file: !3, line: 3734, column: 7)
!908 = !DILocation(line: 3734, column: 7, scope: !909)
!909 = distinct !DILexicalBlock(scope: !903, file: !3, line: 3734, column: 7)
!910 = !DILocation(line: 3734, column: 7, scope: !911)
!911 = distinct !DILexicalBlock(scope: !909, file: !3, line: 3734, column: 7)
!912 = !DILocation(line: 3734, column: 7, scope: !913)
!913 = distinct !DILexicalBlock(scope: !899, file: !3, line: 3734, column: 7)
!914 = !DILocation(line: 3734, column: 7, scope: !915)
!915 = distinct !DILexicalBlock(scope: !913, file: !3, line: 3734, column: 7)
!916 = !DILocation(line: 3734, column: 7, scope: !917)
!917 = distinct !DILexicalBlock(scope: !899, file: !3, line: 3734, column: 7)
!918 = !DILocation(line: 3734, column: 7, scope: !919)
!919 = distinct !DILexicalBlock(scope: !917, file: !3, line: 3734, column: 7)
!920 = !DILocation(line: 3735, column: 7, scope: !879)
!921 = !DILocation(line: 3727, column: 15, scope: !880)
!922 = !DILocation(line: 3727, column: 22, scope: !880)
!923 = !DILocation(line: 3727, column: 5, scope: !880)
!924 = distinct !{!924, !925, !926}
!925 = !DILocation(line: 3727, column: 5, scope: !881)
!926 = !DILocation(line: 3735, column: 7, scope: !881)
!927 = !DILocation(line: 3741, column: 7, scope: !928)
!928 = distinct !DILexicalBlock(scope: !488, file: !3, line: 3741, column: 7)
!929 = !DILocation(line: 3741, column: 8, scope: !928)
!930 = !DILocation(line: 3741, column: 7, scope: !488)
!931 = !DILocalVariable(name: "had", scope: !932, file: !3, line: 3742, type: !44)
!932 = distinct !DILexicalBlock(scope: !928, file: !3, line: 3741, column: 13)
!933 = !DILocation(line: 3742, column: 10, scope: !932)
!934 = !DILocation(line: 3743, column: 6, scope: !932)
!935 = !DILocation(line: 3743, column: 7, scope: !932)
!936 = !DILocation(line: 3743, column: 14, scope: !932)
!937 = !DILocation(line: 3744, column: 6, scope: !932)
!938 = !DILocation(line: 3744, column: 7, scope: !932)
!939 = !DILocation(line: 3744, column: 14, scope: !932)
!940 = !DILocation(line: 3745, column: 7, scope: !932)
!941 = !DILocation(line: 3745, column: 6, scope: !932)
!942 = !DILocation(line: 3746, column: 9, scope: !943)
!943 = distinct !DILexicalBlock(scope: !932, file: !3, line: 3746, column: 9)
!944 = !DILocation(line: 3746, column: 10, scope: !943)
!945 = !DILocation(line: 3746, column: 9, scope: !932)
!946 = !DILocation(line: 3747, column: 9, scope: !947)
!947 = distinct !DILexicalBlock(scope: !943, file: !3, line: 3746, column: 14)
!948 = !DILocation(line: 3747, column: 10, scope: !947)
!949 = !DILocation(line: 3747, column: 13, scope: !947)
!950 = !DILocation(line: 3748, column: 10, scope: !947)
!951 = !DILocation(line: 3748, column: 9, scope: !947)
!952 = !DILocation(line: 3748, column: 8, scope: !947)
!953 = !DILocation(line: 3749, column: 7, scope: !947)
!954 = !DILocation(line: 3751, column: 13, scope: !955)
!955 = distinct !DILexicalBlock(scope: !932, file: !3, line: 3751, column: 5)
!956 = !DILocation(line: 3751, column: 10, scope: !955)
!957 = !DILocation(line: 3751, column: 17, scope: !958)
!958 = distinct !DILexicalBlock(scope: !955, file: !3, line: 3751, column: 5)
!959 = !DILocation(line: 3751, column: 20, scope: !958)
!960 = !DILocation(line: 3751, column: 5, scope: !955)
!961 = !DILocation(line: 3752, column: 7, scope: !962)
!962 = distinct !DILexicalBlock(scope: !963, file: !3, line: 3752, column: 7)
!963 = distinct !DILexicalBlock(scope: !958, file: !3, line: 3751, column: 32)
!964 = !DILocation(line: 3752, column: 7, scope: !965)
!965 = distinct !DILexicalBlock(scope: !962, file: !3, line: 3752, column: 7)
!966 = !DILocation(line: 3752, column: 7, scope: !967)
!967 = distinct !DILexicalBlock(scope: !965, file: !3, line: 3752, column: 7)
!968 = !DILocation(line: 3752, column: 7, scope: !969)
!969 = distinct !DILexicalBlock(scope: !967, file: !3, line: 3752, column: 7)
!970 = !DILocation(line: 3752, column: 7, scope: !971)
!971 = distinct !DILexicalBlock(scope: !969, file: !3, line: 3752, column: 7)
!972 = !DILocation(line: 3752, column: 7, scope: !973)
!973 = distinct !DILexicalBlock(scope: !967, file: !3, line: 3752, column: 7)
!974 = !DILocation(line: 3752, column: 7, scope: !975)
!975 = distinct !DILexicalBlock(scope: !973, file: !3, line: 3752, column: 7)
!976 = !DILocation(line: 3752, column: 7, scope: !977)
!977 = distinct !DILexicalBlock(scope: !962, file: !3, line: 3752, column: 7)
!978 = !DILocation(line: 3752, column: 7, scope: !979)
!979 = distinct !DILexicalBlock(scope: !977, file: !3, line: 3752, column: 7)
!980 = !DILocation(line: 3752, column: 7, scope: !981)
!981 = distinct !DILexicalBlock(scope: !962, file: !3, line: 3752, column: 7)
!982 = !DILocation(line: 3752, column: 7, scope: !983)
!983 = distinct !DILexicalBlock(scope: !981, file: !3, line: 3752, column: 7)
!984 = !DILocation(line: 3753, column: 12, scope: !985)
!985 = distinct !DILexicalBlock(scope: !963, file: !3, line: 3753, column: 11)
!986 = !DILocation(line: 3753, column: 11, scope: !985)
!987 = !DILocation(line: 3753, column: 13, scope: !985)
!988 = !DILocation(line: 3753, column: 19, scope: !985)
!989 = !DILocation(line: 3753, column: 23, scope: !985)
!990 = !DILocation(line: 3753, column: 11, scope: !963)
!991 = !DILocation(line: 3753, column: 28, scope: !985)
!992 = !DILocation(line: 3754, column: 10, scope: !963)
!993 = !DILocation(line: 3755, column: 8, scope: !963)
!994 = !DILocation(line: 3756, column: 7, scope: !963)
!995 = !DILocation(line: 3751, column: 28, scope: !958)
!996 = !DILocation(line: 3751, column: 5, scope: !958)
!997 = distinct !{!997, !960, !998}
!998 = !DILocation(line: 3756, column: 7, scope: !955)
!999 = !DILocation(line: 3757, column: 5, scope: !932)
!1000 = !DILocation(line: 3758, column: 4, scope: !488)
!1001 = !DILocation(line: 3758, column: 5, scope: !488)
!1002 = !DILocation(line: 3759, column: 3, scope: !488)
!1003 = !DILocation(line: 3760, column: 3, scope: !488)
!1004 = distinct !DISubprogram(name: "decNumberToEngString", scope: !3, file: !3, line: 464, type: !475, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!1005 = !DILocalVariable(name: "dn", arg: 1, scope: !1004, file: !3, line: 464, type: !267)
!1006 = !DILocation(line: 464, column: 46, scope: !1004)
!1007 = !DILocalVariable(name: "string", arg: 2, scope: !1004, file: !3, line: 464, type: !477)
!1008 = !DILocation(line: 464, column: 56, scope: !1004)
!1009 = !DILocation(line: 465, column: 15, scope: !1004)
!1010 = !DILocation(line: 465, column: 19, scope: !1004)
!1011 = !DILocation(line: 465, column: 3, scope: !1004)
!1012 = !DILocation(line: 466, column: 10, scope: !1004)
!1013 = !DILocation(line: 466, column: 3, scope: !1004)
!1014 = distinct !DISubprogram(name: "decNumberFromString", scope: !3, file: !3, line: 489, type: !1015, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{!47, !47, !1017, !269}
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !478)
!1019 = !DILocalVariable(name: "dn", arg: 1, scope: !1014, file: !3, line: 489, type: !47)
!1020 = !DILocation(line: 489, column: 44, scope: !1014)
!1021 = !DILocalVariable(name: "chars", arg: 2, scope: !1014, file: !3, line: 489, type: !1017)
!1022 = !DILocation(line: 489, column: 59, scope: !1014)
!1023 = !DILocalVariable(name: "set", arg: 3, scope: !1014, file: !3, line: 490, type: !269)
!1024 = !DILocation(line: 490, column: 17, scope: !1014)
!1025 = !DILocalVariable(name: "exponent", scope: !1014, file: !3, line: 491, type: !31)
!1026 = !DILocation(line: 491, column: 7, scope: !1014)
!1027 = !DILocalVariable(name: "bits", scope: !1014, file: !3, line: 492, type: !44)
!1028 = !DILocation(line: 492, column: 9, scope: !1014)
!1029 = !DILocalVariable(name: "res", scope: !1014, file: !3, line: 493, type: !43)
!1030 = !DILocation(line: 493, column: 9, scope: !1014)
!1031 = !DILocalVariable(name: "resbuff", scope: !1014, file: !3, line: 494, type: !1032)
!1032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !39, size: 240, elements: !1033)
!1033 = !{!1034}
!1034 = !DISubrange(count: 15)
!1035 = !DILocation(line: 494, column: 8, scope: !1014)
!1036 = !DILocalVariable(name: "allocres", scope: !1014, file: !3, line: 496, type: !43)
!1037 = !DILocation(line: 496, column: 9, scope: !1014)
!1038 = !DILocalVariable(name: "d", scope: !1014, file: !3, line: 497, type: !31)
!1039 = !DILocation(line: 497, column: 7, scope: !1014)
!1040 = !DILocalVariable(name: "dotchar", scope: !1014, file: !3, line: 498, type: !1017)
!1041 = !DILocation(line: 498, column: 15, scope: !1014)
!1042 = !DILocalVariable(name: "cfirst", scope: !1014, file: !3, line: 499, type: !1017)
!1043 = !DILocation(line: 499, column: 15, scope: !1014)
!1044 = !DILocation(line: 499, column: 22, scope: !1014)
!1045 = !DILocalVariable(name: "last", scope: !1014, file: !3, line: 500, type: !1017)
!1046 = !DILocation(line: 500, column: 15, scope: !1014)
!1047 = !DILocalVariable(name: "c", scope: !1014, file: !3, line: 501, type: !1017)
!1048 = !DILocation(line: 501, column: 15, scope: !1014)
!1049 = !DILocalVariable(name: "up", scope: !1014, file: !3, line: 502, type: !43)
!1050 = !DILocation(line: 502, column: 9, scope: !1014)
!1051 = !DILocalVariable(name: "cut", scope: !1014, file: !3, line: 504, type: !31)
!1052 = !DILocation(line: 504, column: 7, scope: !1014)
!1053 = !DILocalVariable(name: "out", scope: !1014, file: !3, line: 504, type: !31)
!1054 = !DILocation(line: 504, column: 12, scope: !1014)
!1055 = !DILocalVariable(name: "residue", scope: !1014, file: !3, line: 506, type: !31)
!1056 = !DILocation(line: 506, column: 7, scope: !1014)
!1057 = !DILocalVariable(name: "status", scope: !1014, file: !3, line: 507, type: !36)
!1058 = !DILocation(line: 507, column: 8, scope: !1014)
!1059 = !DILocation(line: 514, column: 3, scope: !1014)
!1060 = !DILocation(line: 515, column: 12, scope: !1061)
!1061 = distinct !DILexicalBlock(scope: !1062, file: !3, line: 515, column: 5)
!1062 = distinct !DILexicalBlock(scope: !1014, file: !3, line: 514, column: 6)
!1063 = !DILocation(line: 515, column: 11, scope: !1061)
!1064 = !DILocation(line: 515, column: 10, scope: !1061)
!1065 = !DILocation(line: 516, column: 12, scope: !1066)
!1066 = distinct !DILexicalBlock(scope: !1067, file: !3, line: 516, column: 11)
!1067 = distinct !DILexicalBlock(scope: !1068, file: !3, line: 515, column: 25)
!1068 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 515, column: 5)
!1069 = !DILocation(line: 516, column: 11, scope: !1066)
!1070 = !DILocation(line: 516, column: 13, scope: !1066)
!1071 = !DILocation(line: 516, column: 19, scope: !1066)
!1072 = !DILocation(line: 516, column: 23, scope: !1066)
!1073 = !DILocation(line: 516, column: 22, scope: !1066)
!1074 = !DILocation(line: 516, column: 24, scope: !1066)
!1075 = !DILocation(line: 516, column: 11, scope: !1067)
!1076 = !DILocation(line: 517, column: 7, scope: !1077)
!1077 = distinct !DILexicalBlock(scope: !1066, file: !3, line: 516, column: 31)
!1078 = !DILocation(line: 517, column: 6, scope: !1077)
!1079 = !DILocation(line: 518, column: 3, scope: !1077)
!1080 = !DILocation(line: 519, column: 2, scope: !1077)
!1081 = !DILocation(line: 521, column: 12, scope: !1082)
!1082 = distinct !DILexicalBlock(scope: !1067, file: !3, line: 521, column: 11)
!1083 = !DILocation(line: 521, column: 11, scope: !1082)
!1084 = !DILocation(line: 521, column: 13, scope: !1082)
!1085 = !DILocation(line: 521, column: 19, scope: !1082)
!1086 = !DILocation(line: 521, column: 22, scope: !1082)
!1087 = !DILocation(line: 521, column: 29, scope: !1082)
!1088 = !DILocation(line: 521, column: 11, scope: !1067)
!1089 = !DILocation(line: 522, column: 10, scope: !1090)
!1090 = distinct !DILexicalBlock(scope: !1082, file: !3, line: 521, column: 37)
!1091 = !DILocation(line: 522, column: 9, scope: !1090)
!1092 = !DILocation(line: 523, column: 6, scope: !1093)
!1093 = distinct !DILexicalBlock(scope: !1090, file: !3, line: 523, column: 6)
!1094 = !DILocation(line: 523, column: 9, scope: !1093)
!1095 = !DILocation(line: 523, column: 7, scope: !1093)
!1096 = !DILocation(line: 523, column: 6, scope: !1090)
!1097 = !DILocation(line: 523, column: 23, scope: !1093)
!1098 = !DILocation(line: 523, column: 17, scope: !1093)
!1099 = !DILocation(line: 524, column: 2, scope: !1090)
!1100 = !DILocation(line: 525, column: 11, scope: !1101)
!1101 = distinct !DILexicalBlock(scope: !1067, file: !3, line: 525, column: 11)
!1102 = !DILocation(line: 525, column: 14, scope: !1101)
!1103 = !DILocation(line: 525, column: 12, scope: !1101)
!1104 = !DILocation(line: 525, column: 11, scope: !1067)
!1105 = !DILocation(line: 526, column: 7, scope: !1106)
!1106 = distinct !DILexicalBlock(scope: !1107, file: !3, line: 526, column: 6)
!1107 = distinct !DILexicalBlock(scope: !1101, file: !3, line: 525, column: 21)
!1108 = !DILocation(line: 526, column: 6, scope: !1106)
!1109 = !DILocation(line: 526, column: 8, scope: !1106)
!1110 = !DILocation(line: 526, column: 6, scope: !1107)
!1111 = !DILocation(line: 527, column: 10, scope: !1112)
!1112 = distinct !DILexicalBlock(scope: !1106, file: !3, line: 526, column: 15)
!1113 = !DILocation(line: 528, column: 8, scope: !1112)
!1114 = !DILocation(line: 529, column: 4, scope: !1112)
!1115 = !DILocation(line: 530, column: 7, scope: !1116)
!1116 = distinct !DILexicalBlock(scope: !1107, file: !3, line: 530, column: 6)
!1117 = !DILocation(line: 530, column: 6, scope: !1116)
!1118 = !DILocation(line: 530, column: 8, scope: !1116)
!1119 = !DILocation(line: 530, column: 6, scope: !1107)
!1120 = !DILocation(line: 531, column: 10, scope: !1121)
!1121 = distinct !DILexicalBlock(scope: !1116, file: !3, line: 530, column: 15)
!1122 = !DILocation(line: 532, column: 4, scope: !1121)
!1123 = !DILocation(line: 533, column: 2, scope: !1107)
!1124 = !DILocation(line: 535, column: 7, scope: !1067)
!1125 = !DILocation(line: 515, column: 21, scope: !1068)
!1126 = !DILocation(line: 515, column: 5, scope: !1068)
!1127 = distinct !{!1127, !1128, !1129}
!1128 = !DILocation(line: 515, column: 5, scope: !1061)
!1129 = !DILocation(line: 536, column: 7, scope: !1061)
!1130 = !DILocation(line: 538, column: 9, scope: !1131)
!1131 = distinct !DILexicalBlock(scope: !1062, file: !3, line: 538, column: 9)
!1132 = !DILocation(line: 538, column: 13, scope: !1131)
!1133 = !DILocation(line: 538, column: 9, scope: !1062)
!1134 = !DILocation(line: 539, column: 13, scope: !1135)
!1135 = distinct !DILexicalBlock(scope: !1131, file: !3, line: 538, column: 21)
!1136 = !DILocation(line: 540, column: 12, scope: !1137)
!1137 = distinct !DILexicalBlock(scope: !1135, file: !3, line: 540, column: 11)
!1138 = !DILocation(line: 540, column: 11, scope: !1137)
!1139 = !DILocation(line: 540, column: 13, scope: !1137)
!1140 = !DILocation(line: 540, column: 11, scope: !1135)
!1141 = !DILocation(line: 540, column: 21, scope: !1137)
!1142 = !DILocation(line: 546, column: 11, scope: !1143)
!1143 = distinct !DILexicalBlock(scope: !1135, file: !3, line: 546, column: 11)
!1144 = !DILocation(line: 546, column: 18, scope: !1143)
!1145 = !DILocation(line: 546, column: 11, scope: !1135)
!1146 = !DILocation(line: 546, column: 26, scope: !1143)
!1147 = !DILocation(line: 547, column: 21, scope: !1135)
!1148 = !DILocation(line: 547, column: 7, scope: !1135)
!1149 = !DILocation(line: 548, column: 20, scope: !1150)
!1150 = distinct !DILexicalBlock(scope: !1135, file: !3, line: 548, column: 11)
!1151 = !DILocation(line: 548, column: 11, scope: !1150)
!1152 = !DILocation(line: 549, column: 8, scope: !1150)
!1153 = !DILocation(line: 549, column: 20, scope: !1150)
!1154 = !DILocation(line: 549, column: 11, scope: !1150)
!1155 = !DILocation(line: 548, column: 11, scope: !1135)
!1156 = !DILocation(line: 550, column: 11, scope: !1157)
!1157 = distinct !DILexicalBlock(scope: !1150, file: !3, line: 549, column: 38)
!1158 = !DILocation(line: 550, column: 16, scope: !1157)
!1159 = !DILocation(line: 550, column: 2, scope: !1157)
!1160 = !DILocation(line: 550, column: 6, scope: !1157)
!1161 = !DILocation(line: 550, column: 10, scope: !1157)
!1162 = !DILocation(line: 551, column: 8, scope: !1157)
!1163 = !DILocation(line: 552, column: 2, scope: !1157)
!1164 = !DILocation(line: 556, column: 16, scope: !1135)
!1165 = !DILocation(line: 556, column: 21, scope: !1135)
!1166 = !DILocation(line: 556, column: 7, scope: !1135)
!1167 = !DILocation(line: 556, column: 11, scope: !1135)
!1168 = !DILocation(line: 556, column: 15, scope: !1135)
!1169 = !DILocation(line: 557, column: 12, scope: !1170)
!1170 = distinct !DILexicalBlock(scope: !1135, file: !3, line: 557, column: 11)
!1171 = !DILocation(line: 557, column: 11, scope: !1170)
!1172 = !DILocation(line: 557, column: 13, scope: !1170)
!1173 = !DILocation(line: 557, column: 19, scope: !1170)
!1174 = !DILocation(line: 557, column: 23, scope: !1170)
!1175 = !DILocation(line: 557, column: 22, scope: !1170)
!1176 = !DILocation(line: 557, column: 24, scope: !1170)
!1177 = !DILocation(line: 557, column: 11, scope: !1135)
!1178 = !DILocation(line: 558, column: 3, scope: !1179)
!1179 = distinct !DILexicalBlock(scope: !1170, file: !3, line: 557, column: 31)
!1180 = !DILocation(line: 559, column: 11, scope: !1179)
!1181 = !DILocation(line: 559, column: 16, scope: !1179)
!1182 = !DILocation(line: 559, column: 2, scope: !1179)
!1183 = !DILocation(line: 559, column: 6, scope: !1179)
!1184 = !DILocation(line: 559, column: 10, scope: !1179)
!1185 = !DILocation(line: 560, column: 2, scope: !1179)
!1186 = !DILocation(line: 561, column: 12, scope: !1187)
!1187 = distinct !DILexicalBlock(scope: !1135, file: !3, line: 561, column: 11)
!1188 = !DILocation(line: 561, column: 11, scope: !1187)
!1189 = !DILocation(line: 561, column: 13, scope: !1187)
!1190 = !DILocation(line: 561, column: 19, scope: !1187)
!1191 = !DILocation(line: 561, column: 23, scope: !1187)
!1192 = !DILocation(line: 561, column: 22, scope: !1187)
!1193 = !DILocation(line: 561, column: 24, scope: !1187)
!1194 = !DILocation(line: 561, column: 11, scope: !1135)
!1195 = !DILocation(line: 561, column: 31, scope: !1187)
!1196 = !DILocation(line: 562, column: 8, scope: !1135)
!1197 = !DILocation(line: 563, column: 12, scope: !1198)
!1198 = distinct !DILexicalBlock(scope: !1135, file: !3, line: 563, column: 11)
!1199 = !DILocation(line: 563, column: 11, scope: !1198)
!1200 = !DILocation(line: 563, column: 13, scope: !1198)
!1201 = !DILocation(line: 563, column: 19, scope: !1198)
!1202 = !DILocation(line: 563, column: 23, scope: !1198)
!1203 = !DILocation(line: 563, column: 22, scope: !1198)
!1204 = !DILocation(line: 563, column: 24, scope: !1198)
!1205 = !DILocation(line: 563, column: 11, scope: !1135)
!1206 = !DILocation(line: 563, column: 31, scope: !1198)
!1207 = !DILocation(line: 564, column: 8, scope: !1135)
!1208 = !DILocation(line: 565, column: 12, scope: !1209)
!1209 = distinct !DILexicalBlock(scope: !1135, file: !3, line: 565, column: 11)
!1210 = !DILocation(line: 565, column: 11, scope: !1209)
!1211 = !DILocation(line: 565, column: 13, scope: !1209)
!1212 = !DILocation(line: 565, column: 19, scope: !1209)
!1213 = !DILocation(line: 565, column: 23, scope: !1209)
!1214 = !DILocation(line: 565, column: 22, scope: !1209)
!1215 = !DILocation(line: 565, column: 24, scope: !1209)
!1216 = !DILocation(line: 565, column: 11, scope: !1135)
!1217 = !DILocation(line: 565, column: 31, scope: !1209)
!1218 = !DILocation(line: 566, column: 8, scope: !1135)
!1219 = !DILocation(line: 569, column: 19, scope: !1220)
!1220 = distinct !DILexicalBlock(scope: !1135, file: !3, line: 569, column: 7)
!1221 = !DILocation(line: 569, column: 18, scope: !1220)
!1222 = !DILocation(line: 569, column: 12, scope: !1220)
!1223 = !DILocation(line: 569, column: 23, scope: !1224)
!1224 = distinct !DILexicalBlock(scope: !1220, file: !3, line: 569, column: 7)
!1225 = !DILocation(line: 569, column: 22, scope: !1224)
!1226 = !DILocation(line: 569, column: 29, scope: !1224)
!1227 = !DILocation(line: 569, column: 7, scope: !1220)
!1228 = !DILocation(line: 569, column: 43, scope: !1224)
!1229 = !DILocation(line: 569, column: 7, scope: !1224)
!1230 = distinct !{!1230, !1227, !1231}
!1231 = !DILocation(line: 569, column: 43, scope: !1220)
!1232 = !DILocation(line: 570, column: 12, scope: !1233)
!1233 = distinct !DILexicalBlock(scope: !1135, file: !3, line: 570, column: 11)
!1234 = !DILocation(line: 570, column: 11, scope: !1233)
!1235 = !DILocation(line: 570, column: 18, scope: !1233)
!1236 = !DILocation(line: 570, column: 11, scope: !1135)
!1237 = !DILocation(line: 571, column: 8, scope: !1238)
!1238 = distinct !DILexicalBlock(scope: !1233, file: !3, line: 570, column: 26)
!1239 = !DILocation(line: 572, column: 2, scope: !1238)
!1240 = !DILocation(line: 575, column: 14, scope: !1241)
!1241 = distinct !DILexicalBlock(scope: !1135, file: !3, line: 575, column: 7)
!1242 = !DILocation(line: 575, column: 13, scope: !1241)
!1243 = !DILocation(line: 575, column: 12, scope: !1241)
!1244 = !DILocation(line: 576, column: 7, scope: !1245)
!1245 = distinct !DILexicalBlock(scope: !1246, file: !3, line: 576, column: 6)
!1246 = distinct !DILexicalBlock(scope: !1247, file: !3, line: 575, column: 33)
!1247 = distinct !DILexicalBlock(scope: !1241, file: !3, line: 575, column: 7)
!1248 = !DILocation(line: 576, column: 6, scope: !1245)
!1249 = !DILocation(line: 576, column: 8, scope: !1245)
!1250 = !DILocation(line: 576, column: 13, scope: !1245)
!1251 = !DILocation(line: 576, column: 17, scope: !1245)
!1252 = !DILocation(line: 576, column: 16, scope: !1245)
!1253 = !DILocation(line: 576, column: 18, scope: !1245)
!1254 = !DILocation(line: 576, column: 6, scope: !1246)
!1255 = !DILocation(line: 576, column: 24, scope: !1245)
!1256 = !DILocation(line: 577, column: 7, scope: !1246)
!1257 = !DILocation(line: 577, column: 6, scope: !1246)
!1258 = !DILocation(line: 578, column: 2, scope: !1246)
!1259 = !DILocation(line: 575, column: 24, scope: !1247)
!1260 = !DILocation(line: 575, column: 29, scope: !1247)
!1261 = !DILocation(line: 575, column: 7, scope: !1247)
!1262 = distinct !{!1262, !1263, !1264}
!1263 = !DILocation(line: 575, column: 7, scope: !1241)
!1264 = !DILocation(line: 578, column: 2, scope: !1241)
!1265 = !DILocation(line: 579, column: 12, scope: !1266)
!1266 = distinct !DILexicalBlock(scope: !1135, file: !3, line: 579, column: 11)
!1267 = !DILocation(line: 579, column: 11, scope: !1266)
!1268 = !DILocation(line: 579, column: 13, scope: !1266)
!1269 = !DILocation(line: 579, column: 11, scope: !1135)
!1270 = !DILocation(line: 579, column: 21, scope: !1266)
!1271 = !DILocation(line: 580, column: 11, scope: !1272)
!1272 = distinct !DILexicalBlock(scope: !1135, file: !3, line: 580, column: 11)
!1273 = !DILocation(line: 580, column: 13, scope: !1272)
!1274 = !DILocation(line: 580, column: 18, scope: !1272)
!1275 = !DILocation(line: 580, column: 24, scope: !1272)
!1276 = !DILocation(line: 580, column: 12, scope: !1272)
!1277 = !DILocation(line: 580, column: 11, scope: !1135)
!1278 = !DILocation(line: 583, column: 6, scope: !1279)
!1279 = distinct !DILexicalBlock(scope: !1280, file: !3, line: 583, column: 6)
!1280 = distinct !DILexicalBlock(scope: !1272, file: !3, line: 580, column: 28)
!1281 = !DILocation(line: 583, column: 11, scope: !1279)
!1282 = !DILocation(line: 583, column: 6, scope: !1280)
!1283 = !DILocation(line: 583, column: 18, scope: !1279)
!1284 = !DILocation(line: 584, column: 6, scope: !1285)
!1285 = distinct !DILexicalBlock(scope: !1280, file: !3, line: 584, column: 6)
!1286 = !DILocation(line: 584, column: 8, scope: !1285)
!1287 = !DILocation(line: 584, column: 13, scope: !1285)
!1288 = !DILocation(line: 584, column: 7, scope: !1285)
!1289 = !DILocation(line: 584, column: 6, scope: !1280)
!1290 = !DILocation(line: 584, column: 21, scope: !1285)
!1291 = !DILocation(line: 585, column: 2, scope: !1280)
!1292 = !DILocation(line: 587, column: 13, scope: !1135)
!1293 = !DILocation(line: 588, column: 12, scope: !1135)
!1294 = !DILocation(line: 588, column: 16, scope: !1135)
!1295 = !DILocation(line: 588, column: 11, scope: !1135)
!1296 = !DILocation(line: 589, column: 7, scope: !1135)
!1297 = !DILocation(line: 591, column: 16, scope: !1298)
!1298 = distinct !DILexicalBlock(scope: !1131, file: !3, line: 591, column: 15)
!1299 = !DILocation(line: 591, column: 15, scope: !1298)
!1300 = !DILocation(line: 591, column: 17, scope: !1298)
!1301 = !DILocation(line: 591, column: 15, scope: !1131)
!1302 = !DILocalVariable(name: "nege", scope: !1303, file: !3, line: 593, type: !44)
!1303 = distinct !DILexicalBlock(scope: !1298, file: !3, line: 591, column: 25)
!1304 = !DILocation(line: 593, column: 12, scope: !1303)
!1305 = !DILocalVariable(name: "firstexp", scope: !1303, file: !3, line: 594, type: !1017)
!1306 = !DILocation(line: 594, column: 19, scope: !1303)
!1307 = !DILocation(line: 595, column: 13, scope: !1303)
!1308 = !DILocation(line: 596, column: 12, scope: !1309)
!1309 = distinct !DILexicalBlock(scope: !1303, file: !3, line: 596, column: 11)
!1310 = !DILocation(line: 596, column: 11, scope: !1309)
!1311 = !DILocation(line: 596, column: 13, scope: !1309)
!1312 = !DILocation(line: 596, column: 19, scope: !1309)
!1313 = !DILocation(line: 596, column: 23, scope: !1309)
!1314 = !DILocation(line: 596, column: 22, scope: !1309)
!1315 = !DILocation(line: 596, column: 24, scope: !1309)
!1316 = !DILocation(line: 596, column: 11, scope: !1303)
!1317 = !DILocation(line: 596, column: 31, scope: !1309)
!1318 = !DILocation(line: 599, column: 11, scope: !1303)
!1319 = !DILocation(line: 600, column: 8, scope: !1303)
!1320 = !DILocation(line: 601, column: 12, scope: !1321)
!1321 = distinct !DILexicalBlock(scope: !1303, file: !3, line: 601, column: 11)
!1322 = !DILocation(line: 601, column: 11, scope: !1321)
!1323 = !DILocation(line: 601, column: 13, scope: !1321)
!1324 = !DILocation(line: 601, column: 11, scope: !1303)
!1325 = !DILocation(line: 601, column: 25, scope: !1326)
!1326 = distinct !DILexicalBlock(scope: !1321, file: !3, line: 601, column: 20)
!1327 = !DILocation(line: 601, column: 30, scope: !1326)
!1328 = !DILocation(line: 601, column: 33, scope: !1326)
!1329 = !DILocation(line: 602, column: 18, scope: !1330)
!1330 = distinct !DILexicalBlock(scope: !1321, file: !3, line: 602, column: 17)
!1331 = !DILocation(line: 602, column: 17, scope: !1330)
!1332 = !DILocation(line: 602, column: 19, scope: !1330)
!1333 = !DILocation(line: 602, column: 17, scope: !1321)
!1334 = !DILocation(line: 602, column: 27, scope: !1330)
!1335 = !DILocation(line: 602, column: 26, scope: !1330)
!1336 = !DILocation(line: 603, column: 12, scope: !1337)
!1337 = distinct !DILexicalBlock(scope: !1303, file: !3, line: 603, column: 11)
!1338 = !DILocation(line: 603, column: 11, scope: !1337)
!1339 = !DILocation(line: 603, column: 13, scope: !1337)
!1340 = !DILocation(line: 603, column: 11, scope: !1303)
!1341 = !DILocation(line: 603, column: 21, scope: !1337)
!1342 = !DILocation(line: 605, column: 7, scope: !1303)
!1343 = !DILocation(line: 605, column: 15, scope: !1344)
!1344 = distinct !DILexicalBlock(scope: !1345, file: !3, line: 605, column: 7)
!1345 = distinct !DILexicalBlock(scope: !1303, file: !3, line: 605, column: 7)
!1346 = !DILocation(line: 605, column: 14, scope: !1344)
!1347 = !DILocation(line: 605, column: 16, scope: !1344)
!1348 = !DILocation(line: 605, column: 22, scope: !1344)
!1349 = !DILocation(line: 605, column: 27, scope: !1344)
!1350 = !DILocation(line: 605, column: 28, scope: !1344)
!1351 = !DILocation(line: 605, column: 25, scope: !1344)
!1352 = !DILocation(line: 605, column: 31, scope: !1344)
!1353 = !DILocation(line: 0, scope: !1344)
!1354 = !DILocation(line: 605, column: 7, scope: !1345)
!1355 = !DILocation(line: 605, column: 41, scope: !1344)
!1356 = !DILocation(line: 605, column: 7, scope: !1344)
!1357 = distinct !{!1357, !1354, !1358}
!1358 = !DILocation(line: 605, column: 41, scope: !1345)
!1359 = !DILocation(line: 606, column: 16, scope: !1303)
!1360 = !DILocation(line: 606, column: 15, scope: !1303)
!1361 = !DILocation(line: 607, column: 7, scope: !1303)
!1362 = !DILocation(line: 608, column: 7, scope: !1363)
!1363 = distinct !DILexicalBlock(scope: !1364, file: !3, line: 608, column: 6)
!1364 = distinct !DILexicalBlock(scope: !1365, file: !3, line: 607, column: 20)
!1365 = distinct !DILexicalBlock(scope: !1366, file: !3, line: 607, column: 7)
!1366 = distinct !DILexicalBlock(scope: !1303, file: !3, line: 607, column: 7)
!1367 = !DILocation(line: 608, column: 6, scope: !1363)
!1368 = !DILocation(line: 608, column: 8, scope: !1363)
!1369 = !DILocation(line: 608, column: 13, scope: !1363)
!1370 = !DILocation(line: 608, column: 17, scope: !1363)
!1371 = !DILocation(line: 608, column: 16, scope: !1363)
!1372 = !DILocation(line: 608, column: 18, scope: !1363)
!1373 = !DILocation(line: 608, column: 6, scope: !1364)
!1374 = !DILocation(line: 608, column: 24, scope: !1363)
!1375 = !DILocation(line: 609, column: 11, scope: !1364)
!1376 = !DILocation(line: 609, column: 31, scope: !1364)
!1377 = !DILocation(line: 609, column: 30, scope: !1364)
!1378 = !DILocation(line: 609, column: 25, scope: !1364)
!1379 = !DILocation(line: 609, column: 24, scope: !1364)
!1380 = !DILocation(line: 609, column: 32, scope: !1364)
!1381 = !DILocation(line: 609, column: 10, scope: !1364)
!1382 = !DILocation(line: 610, column: 2, scope: !1364)
!1383 = !DILocation(line: 607, column: 16, scope: !1365)
!1384 = !DILocation(line: 607, column: 7, scope: !1365)
!1385 = distinct !{!1385, !1386, !1387}
!1386 = !DILocation(line: 607, column: 7, scope: !1366)
!1387 = !DILocation(line: 610, column: 2, scope: !1366)
!1388 = !DILocation(line: 612, column: 12, scope: !1389)
!1389 = distinct !DILexicalBlock(scope: !1303, file: !3, line: 612, column: 11)
!1390 = !DILocation(line: 612, column: 11, scope: !1389)
!1391 = !DILocation(line: 612, column: 13, scope: !1389)
!1392 = !DILocation(line: 612, column: 11, scope: !1303)
!1393 = !DILocation(line: 612, column: 21, scope: !1389)
!1394 = !DILocation(line: 617, column: 11, scope: !1395)
!1395 = distinct !DILexicalBlock(scope: !1303, file: !3, line: 617, column: 11)
!1396 = !DILocation(line: 617, column: 14, scope: !1395)
!1397 = !DILocation(line: 617, column: 22, scope: !1395)
!1398 = !DILocation(line: 617, column: 24, scope: !1395)
!1399 = !DILocation(line: 617, column: 12, scope: !1395)
!1400 = !DILocation(line: 617, column: 11, scope: !1303)
!1401 = !DILocation(line: 618, column: 6, scope: !1402)
!1402 = distinct !DILexicalBlock(scope: !1403, file: !3, line: 618, column: 6)
!1403 = distinct !DILexicalBlock(scope: !1395, file: !3, line: 617, column: 28)
!1404 = !DILocation(line: 618, column: 8, scope: !1402)
!1405 = !DILocation(line: 618, column: 16, scope: !1402)
!1406 = !DILocation(line: 618, column: 18, scope: !1402)
!1407 = !DILocation(line: 618, column: 7, scope: !1402)
!1408 = !DILocation(line: 618, column: 21, scope: !1402)
!1409 = !DILocation(line: 618, column: 25, scope: !1402)
!1410 = !DILocation(line: 618, column: 24, scope: !1402)
!1411 = !DILocation(line: 618, column: 33, scope: !1402)
!1412 = !DILocation(line: 618, column: 6, scope: !1403)
!1413 = !DILocation(line: 618, column: 47, scope: !1402)
!1414 = !DILocation(line: 618, column: 39, scope: !1402)
!1415 = !DILocation(line: 620, column: 2, scope: !1403)
!1416 = !DILocation(line: 621, column: 11, scope: !1417)
!1417 = distinct !DILexicalBlock(scope: !1303, file: !3, line: 621, column: 11)
!1418 = !DILocation(line: 621, column: 11, scope: !1303)
!1419 = !DILocation(line: 621, column: 27, scope: !1417)
!1420 = !DILocation(line: 621, column: 26, scope: !1417)
!1421 = !DILocation(line: 621, column: 25, scope: !1417)
!1422 = !DILocation(line: 621, column: 17, scope: !1417)
!1423 = !DILocation(line: 622, column: 13, scope: !1303)
!1424 = !DILocation(line: 623, column: 7, scope: !1303)
!1425 = !DILocation(line: 629, column: 10, scope: !1426)
!1426 = distinct !DILexicalBlock(scope: !1062, file: !3, line: 629, column: 9)
!1427 = !DILocation(line: 629, column: 9, scope: !1426)
!1428 = !DILocation(line: 629, column: 16, scope: !1426)
!1429 = !DILocation(line: 629, column: 9, scope: !1062)
!1430 = !DILocation(line: 630, column: 14, scope: !1431)
!1431 = distinct !DILexicalBlock(scope: !1432, file: !3, line: 630, column: 7)
!1432 = distinct !DILexicalBlock(scope: !1426, file: !3, line: 629, column: 23)
!1433 = !DILocation(line: 630, column: 13, scope: !1431)
!1434 = !DILocation(line: 630, column: 12, scope: !1431)
!1435 = !DILocation(line: 630, column: 22, scope: !1436)
!1436 = distinct !DILexicalBlock(scope: !1431, file: !3, line: 630, column: 7)
!1437 = !DILocation(line: 630, column: 24, scope: !1436)
!1438 = !DILocation(line: 630, column: 23, scope: !1436)
!1439 = !DILocation(line: 630, column: 7, scope: !1431)
!1440 = !DILocation(line: 631, column: 7, scope: !1441)
!1441 = distinct !DILexicalBlock(scope: !1442, file: !3, line: 631, column: 6)
!1442 = distinct !DILexicalBlock(scope: !1436, file: !3, line: 630, column: 45)
!1443 = !DILocation(line: 631, column: 6, scope: !1441)
!1444 = !DILocation(line: 631, column: 8, scope: !1441)
!1445 = !DILocation(line: 631, column: 6, scope: !1442)
!1446 = !DILocation(line: 631, column: 15, scope: !1441)
!1447 = !DILocation(line: 632, column: 7, scope: !1448)
!1448 = distinct !DILexicalBlock(scope: !1442, file: !3, line: 632, column: 6)
!1449 = !DILocation(line: 632, column: 6, scope: !1448)
!1450 = !DILocation(line: 632, column: 8, scope: !1448)
!1451 = !DILocation(line: 632, column: 6, scope: !1442)
!1452 = !DILocation(line: 632, column: 15, scope: !1448)
!1453 = !DILocation(line: 633, column: 3, scope: !1442)
!1454 = !DILocation(line: 634, column: 2, scope: !1442)
!1455 = !DILocation(line: 630, column: 31, scope: !1436)
!1456 = !DILocation(line: 630, column: 41, scope: !1436)
!1457 = !DILocation(line: 630, column: 7, scope: !1436)
!1458 = distinct !{!1458, !1439, !1459}
!1459 = !DILocation(line: 634, column: 2, scope: !1431)
!1460 = !DILocation(line: 642, column: 7, scope: !1432)
!1461 = !DILocation(line: 645, column: 9, scope: !1462)
!1462 = distinct !DILexicalBlock(scope: !1062, file: !3, line: 645, column: 9)
!1463 = !DILocation(line: 645, column: 16, scope: !1462)
!1464 = !DILocation(line: 645, column: 23, scope: !1462)
!1465 = !DILocation(line: 645, column: 26, scope: !1462)
!1466 = !DILocation(line: 645, column: 34, scope: !1462)
!1467 = !DILocation(line: 645, column: 33, scope: !1462)
!1468 = !DILocation(line: 645, column: 9, scope: !1062)
!1469 = !DILocation(line: 646, column: 18, scope: !1462)
!1470 = !DILocation(line: 646, column: 23, scope: !1462)
!1471 = !DILocation(line: 646, column: 22, scope: !1462)
!1472 = !DILocation(line: 646, column: 15, scope: !1462)
!1473 = !DILocation(line: 646, column: 7, scope: !1462)
!1474 = !DILocation(line: 651, column: 9, scope: !1475)
!1475 = distinct !DILexicalBlock(scope: !1062, file: !3, line: 651, column: 9)
!1476 = !DILocation(line: 651, column: 12, scope: !1475)
!1477 = !DILocation(line: 651, column: 17, scope: !1475)
!1478 = !DILocation(line: 651, column: 10, scope: !1475)
!1479 = !DILocation(line: 651, column: 9, scope: !1062)
!1480 = !DILocation(line: 651, column: 29, scope: !1475)
!1481 = !DILocation(line: 651, column: 33, scope: !1475)
!1482 = !DILocation(line: 651, column: 28, scope: !1475)
!1483 = !DILocation(line: 651, column: 25, scope: !1475)
!1484 = !DILocalVariable(name: "needbytes", scope: !1485, file: !3, line: 653, type: !31)
!1485 = distinct !DILexicalBlock(scope: !1475, file: !3, line: 652, column: 11)
!1486 = !DILocation(line: 653, column: 11, scope: !1485)
!1487 = !DILocation(line: 653, column: 21, scope: !1485)
!1488 = !DILocation(line: 653, column: 27, scope: !1485)
!1489 = !DILocation(line: 654, column: 11, scope: !1485)
!1490 = !DILocation(line: 654, column: 10, scope: !1485)
!1491 = !DILocation(line: 655, column: 11, scope: !1492)
!1492 = distinct !DILexicalBlock(scope: !1485, file: !3, line: 655, column: 11)
!1493 = !DILocation(line: 655, column: 20, scope: !1492)
!1494 = !DILocation(line: 655, column: 11, scope: !1485)
!1495 = !DILocation(line: 656, column: 26, scope: !1496)
!1496 = distinct !DILexicalBlock(scope: !1492, file: !3, line: 655, column: 43)
!1497 = !DILocation(line: 656, column: 19, scope: !1496)
!1498 = !DILocation(line: 656, column: 11, scope: !1496)
!1499 = !DILocation(line: 656, column: 10, scope: !1496)
!1500 = !DILocation(line: 657, column: 6, scope: !1501)
!1501 = distinct !DILexicalBlock(scope: !1496, file: !3, line: 657, column: 6)
!1502 = !DILocation(line: 657, column: 14, scope: !1501)
!1503 = !DILocation(line: 657, column: 6, scope: !1496)
!1504 = !DILocation(line: 657, column: 29, scope: !1505)
!1505 = distinct !DILexicalBlock(scope: !1501, file: !3, line: 657, column: 22)
!1506 = !DILocation(line: 657, column: 57, scope: !1505)
!1507 = !DILocation(line: 658, column: 6, scope: !1496)
!1508 = !DILocation(line: 658, column: 5, scope: !1496)
!1509 = !DILocation(line: 659, column: 2, scope: !1496)
!1510 = !DILocation(line: 666, column: 8, scope: !1062)
!1511 = !DILocation(line: 667, column: 8, scope: !1062)
!1512 = !DILocation(line: 667, column: 12, scope: !1062)
!1513 = !DILocation(line: 667, column: 11, scope: !1062)
!1514 = !DILocation(line: 667, column: 18, scope: !1062)
!1515 = !DILocation(line: 667, column: 7, scope: !1062)
!1516 = !DILocation(line: 668, column: 9, scope: !1062)
!1517 = !DILocation(line: 668, column: 12, scope: !1062)
!1518 = !DILocation(line: 668, column: 15, scope: !1062)
!1519 = !DILocation(line: 668, column: 14, scope: !1062)
!1520 = !DILocation(line: 668, column: 19, scope: !1062)
!1521 = !DILocation(line: 668, column: 10, scope: !1062)
!1522 = !DILocation(line: 668, column: 8, scope: !1062)
!1523 = !DILocation(line: 669, column: 12, scope: !1524)
!1524 = distinct !DILexicalBlock(scope: !1062, file: !3, line: 669, column: 5)
!1525 = !DILocation(line: 669, column: 11, scope: !1524)
!1526 = !DILocation(line: 669, column: 10, scope: !1524)
!1527 = !DILocation(line: 670, column: 12, scope: !1528)
!1528 = distinct !DILexicalBlock(scope: !1529, file: !3, line: 670, column: 11)
!1529 = distinct !DILexicalBlock(scope: !1530, file: !3, line: 669, column: 26)
!1530 = distinct !DILexicalBlock(scope: !1524, file: !3, line: 669, column: 5)
!1531 = !DILocation(line: 670, column: 11, scope: !1528)
!1532 = !DILocation(line: 670, column: 13, scope: !1528)
!1533 = !DILocation(line: 670, column: 11, scope: !1529)
!1534 = !DILocation(line: 670, column: 20, scope: !1528)
!1535 = !DILocation(line: 671, column: 11, scope: !1529)
!1536 = !DILocation(line: 671, column: 26, scope: !1529)
!1537 = !DILocation(line: 671, column: 25, scope: !1529)
!1538 = !DILocation(line: 671, column: 20, scope: !1529)
!1539 = !DILocation(line: 671, column: 19, scope: !1529)
!1540 = !DILocation(line: 671, column: 27, scope: !1529)
!1541 = !DILocation(line: 671, column: 10, scope: !1529)
!1542 = !DILocation(line: 672, column: 11, scope: !1543)
!1543 = distinct !DILexicalBlock(scope: !1529, file: !3, line: 672, column: 11)
!1544 = !DILocation(line: 672, column: 14, scope: !1543)
!1545 = !DILocation(line: 672, column: 12, scope: !1543)
!1546 = !DILocation(line: 672, column: 11, scope: !1529)
!1547 = !DILocation(line: 672, column: 20, scope: !1543)
!1548 = !DILocation(line: 673, column: 10, scope: !1529)
!1549 = !DILocation(line: 674, column: 11, scope: !1550)
!1550 = distinct !DILexicalBlock(scope: !1529, file: !3, line: 674, column: 11)
!1551 = !DILocation(line: 674, column: 14, scope: !1550)
!1552 = !DILocation(line: 674, column: 11, scope: !1529)
!1553 = !DILocation(line: 674, column: 18, scope: !1550)
!1554 = !DILocation(line: 675, column: 17, scope: !1529)
!1555 = !DILocation(line: 675, column: 11, scope: !1529)
!1556 = !DILocation(line: 675, column: 8, scope: !1529)
!1557 = !DILocation(line: 675, column: 10, scope: !1529)
!1558 = !DILocation(line: 676, column: 9, scope: !1529)
!1559 = !DILocation(line: 677, column: 10, scope: !1529)
!1560 = !DILocation(line: 678, column: 10, scope: !1529)
!1561 = !DILocation(line: 679, column: 7, scope: !1529)
!1562 = !DILocation(line: 669, column: 22, scope: !1530)
!1563 = !DILocation(line: 669, column: 5, scope: !1530)
!1564 = distinct !{!1564, !1565, !1566}
!1565 = !DILocation(line: 669, column: 5, scope: !1524)
!1566 = !DILocation(line: 679, column: 7, scope: !1524)
!1567 = !DILocation(line: 680, column: 15, scope: !1062)
!1568 = !DILocation(line: 680, column: 9, scope: !1062)
!1569 = !DILocation(line: 680, column: 6, scope: !1062)
!1570 = !DILocation(line: 680, column: 8, scope: !1062)
!1571 = !DILocation(line: 692, column: 14, scope: !1062)
!1572 = !DILocation(line: 692, column: 5, scope: !1062)
!1573 = !DILocation(line: 692, column: 9, scope: !1062)
!1574 = !DILocation(line: 692, column: 13, scope: !1062)
!1575 = !DILocation(line: 693, column: 18, scope: !1062)
!1576 = !DILocation(line: 693, column: 5, scope: !1062)
!1577 = !DILocation(line: 693, column: 9, scope: !1062)
!1578 = !DILocation(line: 693, column: 17, scope: !1062)
!1579 = !DILocation(line: 694, column: 16, scope: !1062)
!1580 = !DILocation(line: 694, column: 5, scope: !1062)
!1581 = !DILocation(line: 694, column: 9, scope: !1062)
!1582 = !DILocation(line: 694, column: 15, scope: !1062)
!1583 = !DILocation(line: 697, column: 9, scope: !1584)
!1584 = distinct !DILexicalBlock(scope: !1062, file: !3, line: 697, column: 9)
!1585 = !DILocation(line: 697, column: 11, scope: !1584)
!1586 = !DILocation(line: 697, column: 16, scope: !1584)
!1587 = !DILocation(line: 697, column: 10, scope: !1584)
!1588 = !DILocation(line: 697, column: 9, scope: !1062)
!1589 = !DILocation(line: 698, column: 14, scope: !1590)
!1590 = distinct !DILexicalBlock(scope: !1584, file: !3, line: 697, column: 24)
!1591 = !DILocation(line: 699, column: 19, scope: !1590)
!1592 = !DILocation(line: 699, column: 23, scope: !1590)
!1593 = !DILocation(line: 699, column: 28, scope: !1590)
!1594 = !DILocation(line: 699, column: 33, scope: !1590)
!1595 = !DILocation(line: 699, column: 7, scope: !1590)
!1596 = !DILocation(line: 701, column: 19, scope: !1590)
!1597 = !DILocation(line: 701, column: 23, scope: !1590)
!1598 = !DILocation(line: 701, column: 7, scope: !1590)
!1599 = !DILocation(line: 702, column: 7, scope: !1590)
!1600 = !DILocation(line: 705, column: 12, scope: !1601)
!1601 = distinct !DILexicalBlock(scope: !1602, file: !3, line: 705, column: 11)
!1602 = distinct !DILexicalBlock(scope: !1584, file: !3, line: 703, column: 11)
!1603 = !DILocation(line: 705, column: 16, scope: !1601)
!1604 = !DILocation(line: 705, column: 24, scope: !1601)
!1605 = !DILocation(line: 705, column: 27, scope: !1601)
!1606 = !DILocation(line: 705, column: 32, scope: !1601)
!1607 = !DILocation(line: 705, column: 37, scope: !1601)
!1608 = !DILocation(line: 705, column: 41, scope: !1601)
!1609 = !DILocation(line: 705, column: 36, scope: !1601)
!1610 = !DILocation(line: 705, column: 26, scope: !1601)
!1611 = !DILocation(line: 706, column: 8, scope: !1601)
!1612 = !DILocation(line: 706, column: 12, scope: !1601)
!1613 = !DILocation(line: 706, column: 16, scope: !1601)
!1614 = !DILocation(line: 706, column: 24, scope: !1601)
!1615 = !DILocation(line: 706, column: 27, scope: !1601)
!1616 = !DILocation(line: 706, column: 32, scope: !1601)
!1617 = !DILocation(line: 706, column: 37, scope: !1601)
!1618 = !DILocation(line: 706, column: 42, scope: !1601)
!1619 = !DILocation(line: 706, column: 36, scope: !1601)
!1620 = !DILocation(line: 706, column: 26, scope: !1601)
!1621 = !DILocation(line: 705, column: 11, scope: !1602)
!1622 = !DILocation(line: 707, column: 9, scope: !1623)
!1623 = distinct !DILexicalBlock(scope: !1601, file: !3, line: 706, column: 51)
!1624 = !DILocation(line: 708, column: 14, scope: !1623)
!1625 = !DILocation(line: 708, column: 18, scope: !1623)
!1626 = !DILocation(line: 708, column: 2, scope: !1623)
!1627 = !DILocation(line: 709, column: 2, scope: !1623)
!1628 = !DILocation(line: 712, column: 5, scope: !1062)
!1629 = !DILocation(line: 714, column: 7, scope: !1630)
!1630 = distinct !DILexicalBlock(scope: !1014, file: !3, line: 714, column: 7)
!1631 = !DILocation(line: 714, column: 15, scope: !1630)
!1632 = !DILocation(line: 714, column: 7, scope: !1014)
!1633 = !DILocation(line: 714, column: 28, scope: !1630)
!1634 = !DILocation(line: 714, column: 23, scope: !1630)
!1635 = !DILocation(line: 715, column: 7, scope: !1636)
!1636 = distinct !DILexicalBlock(scope: !1014, file: !3, line: 715, column: 7)
!1637 = !DILocation(line: 715, column: 13, scope: !1636)
!1638 = !DILocation(line: 715, column: 7, scope: !1014)
!1639 = !DILocation(line: 715, column: 28, scope: !1636)
!1640 = !DILocation(line: 715, column: 32, scope: !1636)
!1641 = !DILocation(line: 715, column: 40, scope: !1636)
!1642 = !DILocation(line: 715, column: 18, scope: !1636)
!1643 = !DILocation(line: 716, column: 10, scope: !1014)
!1644 = !DILocation(line: 716, column: 3, scope: !1014)
!1645 = distinct !DISubprogram(name: "decBiStr", scope: !3, file: !3, line: 7661, type: !1646, scopeLine: 7661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!1646 = !DISubroutineType(types: !1647)
!1647 = !{!44, !1017, !1017, !1017}
!1648 = !DILocalVariable(name: "targ", arg: 1, scope: !1645, file: !3, line: 7661, type: !1017)
!1649 = !DILocation(line: 7661, column: 34, scope: !1645)
!1650 = !DILocalVariable(name: "str1", arg: 2, scope: !1645, file: !3, line: 7661, type: !1017)
!1651 = !DILocation(line: 7661, column: 52, scope: !1645)
!1652 = !DILocalVariable(name: "str2", arg: 3, scope: !1645, file: !3, line: 7661, type: !1017)
!1653 = !DILocation(line: 7661, column: 70, scope: !1645)
!1654 = !DILocation(line: 7662, column: 3, scope: !1645)
!1655 = !DILocation(line: 7663, column: 10, scope: !1656)
!1656 = distinct !DILexicalBlock(scope: !1657, file: !3, line: 7663, column: 9)
!1657 = distinct !DILexicalBlock(scope: !1658, file: !3, line: 7662, column: 34)
!1658 = distinct !DILexicalBlock(scope: !1659, file: !3, line: 7662, column: 3)
!1659 = distinct !DILexicalBlock(scope: !1645, file: !3, line: 7662, column: 3)
!1660 = !DILocation(line: 7663, column: 9, scope: !1656)
!1661 = !DILocation(line: 7663, column: 17, scope: !1656)
!1662 = !DILocation(line: 7663, column: 16, scope: !1656)
!1663 = !DILocation(line: 7663, column: 14, scope: !1656)
!1664 = !DILocation(line: 7663, column: 22, scope: !1656)
!1665 = !DILocation(line: 7663, column: 26, scope: !1656)
!1666 = !DILocation(line: 7663, column: 25, scope: !1656)
!1667 = !DILocation(line: 7663, column: 33, scope: !1656)
!1668 = !DILocation(line: 7663, column: 32, scope: !1656)
!1669 = !DILocation(line: 7663, column: 30, scope: !1656)
!1670 = !DILocation(line: 7663, column: 9, scope: !1657)
!1671 = !DILocation(line: 7663, column: 39, scope: !1656)
!1672 = !DILocation(line: 7665, column: 10, scope: !1673)
!1673 = distinct !DILexicalBlock(scope: !1657, file: !3, line: 7665, column: 9)
!1674 = !DILocation(line: 7665, column: 9, scope: !1673)
!1675 = !DILocation(line: 7665, column: 14, scope: !1673)
!1676 = !DILocation(line: 7665, column: 9, scope: !1657)
!1677 = !DILocation(line: 7665, column: 22, scope: !1673)
!1678 = !DILocation(line: 7666, column: 5, scope: !1657)
!1679 = !DILocation(line: 7662, column: 14, scope: !1658)
!1680 = !DILocation(line: 7662, column: 22, scope: !1658)
!1681 = !DILocation(line: 7662, column: 30, scope: !1658)
!1682 = !DILocation(line: 7662, column: 3, scope: !1658)
!1683 = distinct !{!1683, !1684, !1685}
!1684 = !DILocation(line: 7662, column: 3, scope: !1659)
!1685 = !DILocation(line: 7666, column: 5, scope: !1659)
!1686 = !DILocation(line: 7667, column: 3, scope: !1645)
!1687 = !DILocation(line: 7668, column: 3, scope: !1645)
!1688 = distinct !DISubprogram(name: "decSetCoeff", scope: !3, file: !3, line: 6883, type: !1689, scopeLine: 6884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!1689 = !DISubroutineType(types: !1690)
!1690 = !{null, !47, !269, !301, !31, !1691, !59}
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64)
!1692 = !DILocalVariable(name: "dn", arg: 1, scope: !1688, file: !3, line: 6883, type: !47)
!1693 = !DILocation(line: 6883, column: 36, scope: !1688)
!1694 = !DILocalVariable(name: "set", arg: 2, scope: !1688, file: !3, line: 6883, type: !269)
!1695 = !DILocation(line: 6883, column: 52, scope: !1688)
!1696 = !DILocalVariable(name: "lsu", arg: 3, scope: !1688, file: !3, line: 6883, type: !301)
!1697 = !DILocation(line: 6883, column: 69, scope: !1688)
!1698 = !DILocalVariable(name: "len", arg: 4, scope: !1688, file: !3, line: 6884, type: !31)
!1699 = !DILocation(line: 6884, column: 8, scope: !1688)
!1700 = !DILocalVariable(name: "residue", arg: 5, scope: !1688, file: !3, line: 6884, type: !1691)
!1701 = !DILocation(line: 6884, column: 18, scope: !1688)
!1702 = !DILocalVariable(name: "status", arg: 6, scope: !1688, file: !3, line: 6884, type: !59)
!1703 = !DILocation(line: 6884, column: 33, scope: !1688)
!1704 = !DILocalVariable(name: "discard", scope: !1688, file: !3, line: 6885, type: !31)
!1705 = !DILocation(line: 6885, column: 7, scope: !1688)
!1706 = !DILocalVariable(name: "cut", scope: !1688, file: !3, line: 6886, type: !36)
!1707 = !DILocation(line: 6886, column: 8, scope: !1688)
!1708 = !DILocalVariable(name: "up", scope: !1688, file: !3, line: 6887, type: !301)
!1709 = !DILocation(line: 6887, column: 15, scope: !1688)
!1710 = !DILocalVariable(name: "target", scope: !1688, file: !3, line: 6888, type: !43)
!1711 = !DILocation(line: 6888, column: 9, scope: !1688)
!1712 = !DILocalVariable(name: "count", scope: !1688, file: !3, line: 6889, type: !31)
!1713 = !DILocation(line: 6889, column: 7, scope: !1688)
!1714 = !DILocalVariable(name: "temp", scope: !1688, file: !3, line: 6891, type: !36)
!1715 = !DILocation(line: 6891, column: 8, scope: !1688)
!1716 = !DILocation(line: 6894, column: 11, scope: !1688)
!1717 = !DILocation(line: 6894, column: 15, scope: !1688)
!1718 = !DILocation(line: 6894, column: 20, scope: !1688)
!1719 = !DILocation(line: 6894, column: 14, scope: !1688)
!1720 = !DILocation(line: 6894, column: 10, scope: !1688)
!1721 = !DILocation(line: 6895, column: 7, scope: !1722)
!1722 = distinct !DILexicalBlock(scope: !1688, file: !3, line: 6895, column: 7)
!1723 = !DILocation(line: 6895, column: 14, scope: !1722)
!1724 = !DILocation(line: 6895, column: 7, scope: !1688)
!1725 = !DILocation(line: 6896, column: 9, scope: !1726)
!1726 = distinct !DILexicalBlock(scope: !1727, file: !3, line: 6896, column: 9)
!1727 = distinct !DILexicalBlock(scope: !1722, file: !3, line: 6895, column: 19)
!1728 = !DILocation(line: 6896, column: 13, scope: !1726)
!1729 = !DILocation(line: 6896, column: 18, scope: !1726)
!1730 = !DILocation(line: 6896, column: 16, scope: !1726)
!1731 = !DILocation(line: 6896, column: 9, scope: !1727)
!1732 = !DILocation(line: 6898, column: 13, scope: !1733)
!1733 = distinct !DILexicalBlock(scope: !1726, file: !3, line: 6896, column: 23)
!1734 = !DILocation(line: 6898, column: 12, scope: !1733)
!1735 = !DILocation(line: 6899, column: 10, scope: !1733)
!1736 = !DILocation(line: 6899, column: 9, scope: !1733)
!1737 = !DILocation(line: 6900, column: 19, scope: !1738)
!1738 = distinct !DILexicalBlock(scope: !1733, file: !3, line: 6900, column: 7)
!1739 = !DILocation(line: 6900, column: 23, scope: !1738)
!1740 = !DILocation(line: 6900, column: 18, scope: !1738)
!1741 = !DILocation(line: 6900, column: 12, scope: !1738)
!1742 = !DILocation(line: 6900, column: 28, scope: !1743)
!1743 = distinct !DILexicalBlock(scope: !1738, file: !3, line: 6900, column: 7)
!1744 = !DILocation(line: 6900, column: 33, scope: !1743)
!1745 = !DILocation(line: 6900, column: 7, scope: !1738)
!1746 = !DILocation(line: 6901, column: 11, scope: !1743)
!1747 = !DILocation(line: 6901, column: 10, scope: !1743)
!1748 = !DILocation(line: 6901, column: 3, scope: !1743)
!1749 = !DILocation(line: 6901, column: 9, scope: !1743)
!1750 = !DILocation(line: 6901, column: 2, scope: !1743)
!1751 = !DILocation(line: 6900, column: 43, scope: !1743)
!1752 = !DILocation(line: 6900, column: 49, scope: !1743)
!1753 = !DILocation(line: 6900, column: 58, scope: !1743)
!1754 = !DILocation(line: 6900, column: 7, scope: !1743)
!1755 = distinct !{!1755, !1745, !1756}
!1756 = !DILocation(line: 6901, column: 11, scope: !1738)
!1757 = !DILocation(line: 6902, column: 18, scope: !1733)
!1758 = !DILocation(line: 6902, column: 7, scope: !1733)
!1759 = !DILocation(line: 6902, column: 11, scope: !1733)
!1760 = !DILocation(line: 6902, column: 17, scope: !1733)
!1761 = !DILocation(line: 6903, column: 7, scope: !1733)
!1762 = !DILocation(line: 6905, column: 10, scope: !1763)
!1763 = distinct !DILexicalBlock(scope: !1727, file: !3, line: 6905, column: 9)
!1764 = !DILocation(line: 6905, column: 9, scope: !1763)
!1765 = !DILocation(line: 6905, column: 17, scope: !1763)
!1766 = !DILocation(line: 6905, column: 9, scope: !1727)
!1767 = !DILocation(line: 6905, column: 23, scope: !1763)
!1768 = !DILocation(line: 6905, column: 29, scope: !1763)
!1769 = !DILocation(line: 6905, column: 22, scope: !1763)
!1770 = !DILocation(line: 6906, column: 5, scope: !1727)
!1771 = !DILocation(line: 6910, column: 17, scope: !1688)
!1772 = !DILocation(line: 6910, column: 3, scope: !1688)
!1773 = !DILocation(line: 6910, column: 7, scope: !1688)
!1774 = !DILocation(line: 6910, column: 15, scope: !1688)
!1775 = !DILocation(line: 6911, column: 4, scope: !1688)
!1776 = !DILocation(line: 6911, column: 10, scope: !1688)
!1777 = !DILocation(line: 6912, column: 8, scope: !1778)
!1778 = distinct !DILexicalBlock(scope: !1688, file: !3, line: 6912, column: 7)
!1779 = !DILocation(line: 6912, column: 7, scope: !1778)
!1780 = !DILocation(line: 6912, column: 15, scope: !1778)
!1781 = !DILocation(line: 6912, column: 7, scope: !1688)
!1782 = !DILocation(line: 6912, column: 20, scope: !1778)
!1783 = !DILocation(line: 6912, column: 27, scope: !1778)
!1784 = !DILocation(line: 6912, column: 19, scope: !1778)
!1785 = !DILocation(line: 6914, column: 7, scope: !1786)
!1786 = distinct !DILexicalBlock(scope: !1688, file: !3, line: 6914, column: 7)
!1787 = !DILocation(line: 6914, column: 15, scope: !1786)
!1788 = !DILocation(line: 6914, column: 14, scope: !1786)
!1789 = !DILocation(line: 6914, column: 7, scope: !1688)
!1790 = !DILocation(line: 6917, column: 10, scope: !1791)
!1791 = distinct !DILexicalBlock(scope: !1792, file: !3, line: 6917, column: 9)
!1792 = distinct !DILexicalBlock(scope: !1786, file: !3, line: 6914, column: 20)
!1793 = !DILocation(line: 6917, column: 9, scope: !1791)
!1794 = !DILocation(line: 6917, column: 17, scope: !1791)
!1795 = !DILocation(line: 6917, column: 9, scope: !1792)
!1796 = !DILocation(line: 6918, column: 13, scope: !1797)
!1797 = distinct !DILexicalBlock(scope: !1791, file: !3, line: 6917, column: 22)
!1798 = !DILocation(line: 6918, column: 12, scope: !1797)
!1799 = !DILocation(line: 6919, column: 15, scope: !1800)
!1800 = distinct !DILexicalBlock(scope: !1797, file: !3, line: 6919, column: 7)
!1801 = !DILocation(line: 6919, column: 14, scope: !1800)
!1802 = !DILocation(line: 6919, column: 12, scope: !1800)
!1803 = !DILocation(line: 6919, column: 20, scope: !1804)
!1804 = distinct !DILexicalBlock(scope: !1800, file: !3, line: 6919, column: 7)
!1805 = !DILocation(line: 6919, column: 25, scope: !1804)
!1806 = !DILocation(line: 6919, column: 7, scope: !1800)
!1807 = !DILocation(line: 6919, column: 56, scope: !1808)
!1808 = distinct !DILexicalBlock(scope: !1804, file: !3, line: 6919, column: 55)
!1809 = !DILocation(line: 6919, column: 55, scope: !1808)
!1810 = !DILocation(line: 6919, column: 58, scope: !1808)
!1811 = !DILocation(line: 6919, column: 55, scope: !1804)
!1812 = !DILocation(line: 6920, column: 3, scope: !1813)
!1813 = distinct !DILexicalBlock(scope: !1808, file: !3, line: 6919, column: 63)
!1814 = !DILocation(line: 6920, column: 10, scope: !1813)
!1815 = !DILocation(line: 6921, column: 2, scope: !1813)
!1816 = !DILocation(line: 6919, column: 60, scope: !1808)
!1817 = !DILocation(line: 6919, column: 31, scope: !1804)
!1818 = !DILocation(line: 6919, column: 40, scope: !1804)
!1819 = !DILocation(line: 6919, column: 7, scope: !1804)
!1820 = distinct !{!1820, !1806, !1821}
!1821 = !DILocation(line: 6922, column: 2, scope: !1800)
!1822 = !DILocation(line: 6923, column: 7, scope: !1797)
!1823 = !DILocation(line: 6924, column: 10, scope: !1824)
!1824 = distinct !DILexicalBlock(scope: !1792, file: !3, line: 6924, column: 9)
!1825 = !DILocation(line: 6924, column: 9, scope: !1824)
!1826 = !DILocation(line: 6924, column: 17, scope: !1824)
!1827 = !DILocation(line: 6924, column: 9, scope: !1792)
!1828 = !DILocation(line: 6924, column: 23, scope: !1824)
!1829 = !DILocation(line: 6924, column: 29, scope: !1824)
!1830 = !DILocation(line: 6924, column: 22, scope: !1824)
!1831 = !DILocation(line: 6925, column: 6, scope: !1792)
!1832 = !DILocation(line: 6925, column: 10, scope: !1792)
!1833 = !DILocation(line: 6925, column: 5, scope: !1792)
!1834 = !DILocation(line: 6925, column: 13, scope: !1792)
!1835 = !DILocation(line: 6926, column: 5, scope: !1792)
!1836 = !DILocation(line: 6926, column: 9, scope: !1792)
!1837 = !DILocation(line: 6926, column: 15, scope: !1792)
!1838 = !DILocation(line: 6927, column: 5, scope: !1792)
!1839 = !DILocation(line: 6936, column: 8, scope: !1688)
!1840 = !DILocation(line: 6937, column: 11, scope: !1841)
!1841 = distinct !DILexicalBlock(scope: !1688, file: !3, line: 6937, column: 3)
!1842 = !DILocation(line: 6937, column: 10, scope: !1841)
!1843 = !DILocation(line: 6937, column: 8, scope: !1841)
!1844 = !DILocation(line: 6938, column: 10, scope: !1845)
!1845 = distinct !DILexicalBlock(scope: !1846, file: !3, line: 6937, column: 23)
!1846 = distinct !DILexicalBlock(scope: !1841, file: !3, line: 6937, column: 3)
!1847 = !DILocation(line: 6939, column: 9, scope: !1848)
!1848 = distinct !DILexicalBlock(scope: !1845, file: !3, line: 6939, column: 9)
!1849 = !DILocation(line: 6939, column: 16, scope: !1848)
!1850 = !DILocation(line: 6939, column: 14, scope: !1848)
!1851 = !DILocation(line: 6939, column: 9, scope: !1845)
!1852 = !DILocation(line: 6939, column: 25, scope: !1848)
!1853 = !DILocation(line: 6940, column: 10, scope: !1854)
!1854 = distinct !DILexicalBlock(scope: !1845, file: !3, line: 6940, column: 9)
!1855 = !DILocation(line: 6940, column: 9, scope: !1854)
!1856 = !DILocation(line: 6940, column: 12, scope: !1854)
!1857 = !DILocation(line: 6940, column: 9, scope: !1845)
!1858 = !DILocation(line: 6940, column: 18, scope: !1854)
!1859 = !DILocation(line: 6940, column: 25, scope: !1854)
!1860 = !DILocation(line: 6940, column: 17, scope: !1854)
!1861 = !DILocation(line: 6941, column: 5, scope: !1845)
!1862 = !DILocation(line: 6937, column: 19, scope: !1846)
!1863 = !DILocation(line: 6937, column: 3, scope: !1846)
!1864 = distinct !{!1864, !1865, !1866}
!1865 = !DILocation(line: 6937, column: 3, scope: !1841)
!1866 = !DILocation(line: 6941, column: 5, scope: !1841)
!1867 = !DILocation(line: 6944, column: 7, scope: !1688)
!1868 = !DILocation(line: 6944, column: 16, scope: !1688)
!1869 = !DILocation(line: 6944, column: 21, scope: !1688)
!1870 = !DILocation(line: 6944, column: 14, scope: !1688)
!1871 = !DILocation(line: 6944, column: 30, scope: !1688)
!1872 = !DILocation(line: 6944, column: 6, scope: !1688)
!1873 = !DILocation(line: 6945, column: 7, scope: !1874)
!1874 = distinct !DILexicalBlock(scope: !1688, file: !3, line: 6945, column: 7)
!1875 = !DILocation(line: 6945, column: 10, scope: !1874)
!1876 = !DILocation(line: 6945, column: 7, scope: !1688)
!1877 = !DILocalVariable(name: "half", scope: !1878, file: !3, line: 6946, type: !39)
!1878 = distinct !DILexicalBlock(scope: !1874, file: !3, line: 6945, column: 23)
!1879 = !DILocation(line: 6946, column: 10, scope: !1878)
!1880 = !DILocation(line: 6946, column: 21, scope: !1878)
!1881 = !DILocation(line: 6946, column: 15, scope: !1878)
!1882 = !DILocation(line: 6946, column: 36, scope: !1878)
!1883 = !DILocation(line: 6948, column: 10, scope: !1884)
!1884 = distinct !DILexicalBlock(scope: !1878, file: !3, line: 6948, column: 9)
!1885 = !DILocation(line: 6948, column: 9, scope: !1884)
!1886 = !DILocation(line: 6948, column: 14, scope: !1884)
!1887 = !DILocation(line: 6948, column: 12, scope: !1884)
!1888 = !DILocation(line: 6948, column: 9, scope: !1878)
!1889 = !DILocation(line: 6949, column: 12, scope: !1890)
!1890 = distinct !DILexicalBlock(scope: !1891, file: !3, line: 6949, column: 11)
!1891 = distinct !DILexicalBlock(scope: !1884, file: !3, line: 6948, column: 20)
!1892 = !DILocation(line: 6949, column: 11, scope: !1890)
!1893 = !DILocation(line: 6949, column: 15, scope: !1890)
!1894 = !DILocation(line: 6949, column: 14, scope: !1890)
!1895 = !DILocation(line: 6949, column: 11, scope: !1891)
!1896 = !DILocation(line: 6949, column: 22, scope: !1890)
!1897 = !DILocation(line: 6949, column: 29, scope: !1890)
!1898 = !DILocation(line: 6949, column: 21, scope: !1890)
!1899 = !DILocation(line: 6950, column: 13, scope: !1890)
!1900 = !DILocation(line: 6950, column: 20, scope: !1890)
!1901 = !DILocation(line: 6951, column: 7, scope: !1891)
!1902 = !DILocation(line: 6953, column: 12, scope: !1903)
!1903 = distinct !DILexicalBlock(scope: !1904, file: !3, line: 6953, column: 11)
!1904 = distinct !DILexicalBlock(scope: !1884, file: !3, line: 6952, column: 11)
!1905 = !DILocation(line: 6953, column: 11, scope: !1903)
!1906 = !DILocation(line: 6953, column: 14, scope: !1903)
!1907 = !DILocation(line: 6953, column: 11, scope: !1904)
!1908 = !DILocation(line: 6953, column: 20, scope: !1903)
!1909 = !DILocation(line: 6953, column: 27, scope: !1903)
!1910 = !DILocation(line: 6953, column: 19, scope: !1903)
!1911 = !DILocation(line: 6955, column: 9, scope: !1912)
!1912 = distinct !DILexicalBlock(scope: !1878, file: !3, line: 6955, column: 9)
!1913 = !DILocation(line: 6955, column: 14, scope: !1912)
!1914 = !DILocation(line: 6955, column: 20, scope: !1912)
!1915 = !DILocation(line: 6955, column: 9, scope: !1878)
!1916 = !DILocation(line: 6956, column: 8, scope: !1917)
!1917 = distinct !DILexicalBlock(scope: !1912, file: !3, line: 6955, column: 25)
!1918 = !DILocation(line: 6956, column: 12, scope: !1917)
!1919 = !DILocation(line: 6956, column: 7, scope: !1917)
!1920 = !DILocation(line: 6956, column: 15, scope: !1917)
!1921 = !DILocation(line: 6957, column: 7, scope: !1917)
!1922 = !DILocation(line: 6957, column: 11, scope: !1917)
!1923 = !DILocation(line: 6957, column: 17, scope: !1917)
!1924 = !DILocation(line: 6958, column: 7, scope: !1917)
!1925 = !DILocation(line: 6960, column: 13, scope: !1926)
!1926 = distinct !DILexicalBlock(scope: !1912, file: !3, line: 6959, column: 11)
!1927 = !DILocation(line: 6960, column: 18, scope: !1926)
!1928 = !DILocation(line: 6960, column: 12, scope: !1926)
!1929 = !DILocation(line: 6961, column: 18, scope: !1926)
!1930 = !DILocation(line: 6961, column: 7, scope: !1926)
!1931 = !DILocation(line: 6961, column: 11, scope: !1926)
!1932 = !DILocation(line: 6961, column: 17, scope: !1926)
!1933 = !DILocation(line: 6962, column: 9, scope: !1926)
!1934 = !DILocation(line: 6964, column: 19, scope: !1935)
!1935 = distinct !DILexicalBlock(scope: !1926, file: !3, line: 6964, column: 7)
!1936 = !DILocation(line: 6964, column: 23, scope: !1935)
!1937 = !DILocation(line: 6964, column: 18, scope: !1935)
!1938 = !DILocation(line: 6964, column: 12, scope: !1935)
!1939 = !DILocation(line: 6964, column: 28, scope: !1940)
!1940 = distinct !DILexicalBlock(scope: !1935, file: !3, line: 6964, column: 7)
!1941 = !DILocation(line: 6964, column: 33, scope: !1940)
!1942 = !DILocation(line: 6964, column: 7, scope: !1935)
!1943 = !DILocation(line: 6965, column: 11, scope: !1940)
!1944 = !DILocation(line: 6965, column: 10, scope: !1940)
!1945 = !DILocation(line: 6965, column: 3, scope: !1940)
!1946 = !DILocation(line: 6965, column: 9, scope: !1940)
!1947 = !DILocation(line: 6965, column: 2, scope: !1940)
!1948 = !DILocation(line: 6964, column: 43, scope: !1940)
!1949 = !DILocation(line: 6964, column: 49, scope: !1940)
!1950 = !DILocation(line: 6964, column: 58, scope: !1940)
!1951 = !DILocation(line: 6964, column: 7, scope: !1940)
!1952 = distinct !{!1952, !1942, !1953}
!1953 = !DILocation(line: 6965, column: 11, scope: !1935)
!1954 = !DILocation(line: 6967, column: 5, scope: !1878)
!1955 = !DILocalVariable(name: "discard1", scope: !1956, file: !3, line: 6970, type: !36)
!1956 = distinct !DILexicalBlock(scope: !1874, file: !3, line: 6969, column: 9)
!1957 = !DILocation(line: 6970, column: 11, scope: !1956)
!1958 = !DILocalVariable(name: "quot", scope: !1956, file: !3, line: 6971, type: !36)
!1959 = !DILocation(line: 6971, column: 11, scope: !1956)
!1960 = !DILocalVariable(name: "rem", scope: !1956, file: !3, line: 6971, type: !36)
!1961 = !DILocation(line: 6971, column: 17, scope: !1956)
!1962 = !DILocation(line: 6972, column: 9, scope: !1963)
!1963 = distinct !DILexicalBlock(scope: !1956, file: !3, line: 6972, column: 9)
!1964 = !DILocation(line: 6972, column: 12, scope: !1963)
!1965 = !DILocation(line: 6972, column: 9, scope: !1956)
!1966 = !DILocation(line: 6972, column: 23, scope: !1963)
!1967 = !DILocation(line: 6972, column: 22, scope: !1963)
!1968 = !DILocation(line: 6972, column: 21, scope: !1963)
!1969 = !DILocation(line: 6972, column: 17, scope: !1963)
!1970 = !DILocation(line: 6975, column: 7, scope: !1971)
!1971 = distinct !DILexicalBlock(scope: !1963, file: !3, line: 6973, column: 23)
!1972 = !DILocation(line: 6975, column: 6, scope: !1971)
!1973 = !DILocation(line: 6976, column: 7, scope: !1971)
!1974 = !DILocation(line: 6976, column: 6, scope: !1971)
!1975 = !DILocation(line: 6976, column: 10, scope: !1971)
!1976 = !DILocation(line: 6976, column: 22, scope: !1971)
!1977 = !DILocation(line: 6976, column: 15, scope: !1971)
!1978 = !DILocation(line: 6976, column: 14, scope: !1971)
!1979 = !DILocation(line: 6976, column: 9, scope: !1971)
!1980 = !DILocation(line: 6976, column: 5, scope: !1971)
!1981 = !DILocation(line: 6981, column: 11, scope: !1982)
!1982 = distinct !DILexicalBlock(scope: !1971, file: !3, line: 6981, column: 11)
!1983 = !DILocation(line: 6981, column: 14, scope: !1982)
!1984 = !DILocation(line: 6981, column: 11, scope: !1971)
!1985 = !DILocation(line: 6981, column: 20, scope: !1982)
!1986 = !DILocation(line: 6981, column: 27, scope: !1982)
!1987 = !DILocation(line: 6981, column: 19, scope: !1982)
!1988 = !DILocation(line: 6985, column: 13, scope: !1956)
!1989 = !DILocation(line: 6985, column: 17, scope: !1956)
!1990 = !DILocation(line: 6985, column: 23, scope: !1956)
!1991 = !DILocation(line: 6985, column: 11, scope: !1956)
!1992 = !DILocation(line: 6987, column: 16, scope: !1956)
!1993 = !DILocation(line: 6987, column: 21, scope: !1956)
!1994 = !DILocation(line: 6987, column: 20, scope: !1956)
!1995 = !DILocation(line: 6987, column: 15, scope: !1956)
!1996 = !DILocation(line: 6988, column: 12, scope: !1956)
!1997 = !DILocation(line: 6988, column: 11, scope: !1956)
!1998 = !DILocation(line: 6995, column: 22, scope: !1956)
!1999 = !DILocation(line: 6995, column: 15, scope: !1956)
!2000 = !DILocation(line: 6995, column: 6, scope: !1956)
!2001 = !DILocation(line: 6995, column: 13, scope: !1956)
!2002 = !DILocation(line: 6996, column: 8, scope: !1956)
!2003 = !DILocation(line: 7000, column: 9, scope: !2004)
!2004 = distinct !DILexicalBlock(scope: !1956, file: !3, line: 7000, column: 9)
!2005 = !DILocation(line: 7000, column: 14, scope: !2004)
!2006 = !DILocation(line: 7000, column: 20, scope: !2004)
!2007 = !DILocation(line: 7000, column: 9, scope: !1956)
!2008 = !DILocation(line: 7001, column: 8, scope: !2009)
!2009 = distinct !DILexicalBlock(scope: !2004, file: !3, line: 7000, column: 25)
!2010 = !DILocation(line: 7001, column: 12, scope: !2009)
!2011 = !DILocation(line: 7001, column: 7, scope: !2009)
!2012 = !DILocation(line: 7001, column: 15, scope: !2009)
!2013 = !DILocation(line: 7002, column: 7, scope: !2009)
!2014 = !DILocation(line: 7002, column: 11, scope: !2009)
!2015 = !DILocation(line: 7002, column: 17, scope: !2009)
!2016 = !DILocation(line: 7003, column: 7, scope: !2009)
!2017 = !DILocation(line: 7005, column: 13, scope: !2018)
!2018 = distinct !DILexicalBlock(scope: !2004, file: !3, line: 7004, column: 11)
!2019 = !DILocation(line: 7005, column: 18, scope: !2018)
!2020 = !DILocation(line: 7005, column: 12, scope: !2018)
!2021 = !DILocation(line: 7006, column: 18, scope: !2018)
!2022 = !DILocation(line: 7006, column: 7, scope: !2018)
!2023 = !DILocation(line: 7006, column: 11, scope: !2018)
!2024 = !DILocation(line: 7006, column: 17, scope: !2018)
!2025 = !DILocation(line: 7008, column: 19, scope: !2026)
!2026 = distinct !DILexicalBlock(scope: !2018, file: !3, line: 7008, column: 7)
!2027 = !DILocation(line: 7008, column: 23, scope: !2026)
!2028 = !DILocation(line: 7008, column: 18, scope: !2026)
!2029 = !DILocation(line: 7008, column: 12, scope: !2026)
!2030 = !DILocation(line: 7009, column: 16, scope: !2031)
!2031 = distinct !DILexicalBlock(scope: !2032, file: !3, line: 7008, column: 40)
!2032 = distinct !DILexicalBlock(scope: !2026, file: !3, line: 7008, column: 7)
!2033 = !DILocation(line: 7009, column: 10, scope: !2031)
!2034 = !DILocation(line: 7009, column: 3, scope: !2031)
!2035 = !DILocation(line: 7009, column: 9, scope: !2031)
!2036 = !DILocation(line: 7010, column: 18, scope: !2031)
!2037 = !DILocation(line: 7010, column: 17, scope: !2031)
!2038 = !DILocation(line: 7010, column: 7, scope: !2031)
!2039 = !DILocation(line: 7011, column: 6, scope: !2040)
!2040 = distinct !DILexicalBlock(scope: !2031, file: !3, line: 7011, column: 6)
!2041 = !DILocation(line: 7011, column: 11, scope: !2040)
!2042 = !DILocation(line: 7011, column: 6, scope: !2031)
!2043 = !DILocation(line: 7011, column: 16, scope: !2040)
!2044 = !DILocation(line: 7012, column: 4, scope: !2031)
!2045 = !DILocation(line: 7013, column: 8, scope: !2031)
!2046 = !DILocation(line: 7013, column: 7, scope: !2031)
!2047 = !DILocation(line: 7013, column: 6, scope: !2031)
!2048 = !DILocation(line: 7015, column: 9, scope: !2031)
!2049 = !DILocation(line: 7015, column: 8, scope: !2031)
!2050 = !DILocation(line: 7016, column: 9, scope: !2031)
!2051 = !DILocation(line: 7016, column: 8, scope: !2031)
!2052 = !DILocation(line: 7016, column: 12, scope: !2031)
!2053 = !DILocation(line: 7016, column: 24, scope: !2031)
!2054 = !DILocation(line: 7016, column: 17, scope: !2031)
!2055 = !DILocation(line: 7016, column: 16, scope: !2031)
!2056 = !DILocation(line: 7016, column: 11, scope: !2031)
!2057 = !DILocation(line: 7016, column: 7, scope: !2031)
!2058 = !DILocation(line: 7021, column: 18, scope: !2031)
!2059 = !DILocation(line: 7021, column: 17, scope: !2031)
!2060 = !DILocation(line: 7021, column: 25, scope: !2031)
!2061 = !DILocation(line: 7021, column: 44, scope: !2031)
!2062 = !DILocation(line: 7021, column: 43, scope: !2031)
!2063 = !DILocation(line: 7021, column: 29, scope: !2031)
!2064 = !DILocation(line: 7021, column: 28, scope: !2031)
!2065 = !DILocation(line: 7021, column: 24, scope: !2031)
!2066 = !DILocation(line: 7021, column: 10, scope: !2031)
!2067 = !DILocation(line: 7021, column: 3, scope: !2031)
!2068 = !DILocation(line: 7021, column: 9, scope: !2031)
!2069 = !DILocation(line: 7022, column: 9, scope: !2031)
!2070 = !DILocation(line: 7022, column: 7, scope: !2031)
!2071 = !DILocation(line: 7023, column: 6, scope: !2072)
!2072 = distinct !DILexicalBlock(scope: !2031, file: !3, line: 7023, column: 6)
!2073 = !DILocation(line: 7023, column: 11, scope: !2072)
!2074 = !DILocation(line: 7023, column: 6, scope: !2031)
!2075 = !DILocation(line: 7023, column: 16, scope: !2072)
!2076 = !DILocation(line: 7024, column: 2, scope: !2031)
!2077 = !DILocation(line: 7008, column: 36, scope: !2032)
!2078 = !DILocation(line: 7008, column: 7, scope: !2032)
!2079 = distinct !{!2079, !2080, !2081}
!2080 = !DILocation(line: 7008, column: 7, scope: !2026)
!2081 = !DILocation(line: 7024, column: 2, scope: !2026)
!2082 = !DILocation(line: 7028, column: 8, scope: !2083)
!2083 = distinct !DILexicalBlock(scope: !1688, file: !3, line: 7028, column: 7)
!2084 = !DILocation(line: 7028, column: 7, scope: !2083)
!2085 = !DILocation(line: 7028, column: 15, scope: !2083)
!2086 = !DILocation(line: 7028, column: 7, scope: !1688)
!2087 = !DILocation(line: 7028, column: 21, scope: !2083)
!2088 = !DILocation(line: 7028, column: 27, scope: !2083)
!2089 = !DILocation(line: 7028, column: 20, scope: !2083)
!2090 = !DILocation(line: 7029, column: 3, scope: !1688)
!2091 = !DILocation(line: 7030, column: 3, scope: !1688)
!2092 = distinct !DISubprogram(name: "decFinalize", scope: !3, file: !3, line: 7268, type: !2093, scopeLine: 7269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!2093 = !DISubroutineType(types: !2094)
!2094 = !{null, !47, !269, !1691, !59}
!2095 = !DILocalVariable(name: "dn", arg: 1, scope: !2092, file: !3, line: 7268, type: !47)
!2096 = !DILocation(line: 7268, column: 36, scope: !2092)
!2097 = !DILocalVariable(name: "set", arg: 2, scope: !2092, file: !3, line: 7268, type: !269)
!2098 = !DILocation(line: 7268, column: 52, scope: !2092)
!2099 = !DILocalVariable(name: "residue", arg: 3, scope: !2092, file: !3, line: 7268, type: !1691)
!2100 = !DILocation(line: 7268, column: 62, scope: !2092)
!2101 = !DILocalVariable(name: "status", arg: 4, scope: !2092, file: !3, line: 7269, type: !59)
!2102 = !DILocation(line: 7269, column: 10, scope: !2092)
!2103 = !DILocalVariable(name: "shift", scope: !2092, file: !3, line: 7270, type: !31)
!2104 = !DILocation(line: 7270, column: 7, scope: !2092)
!2105 = !DILocalVariable(name: "tinyexp", scope: !2092, file: !3, line: 7271, type: !31)
!2106 = !DILocation(line: 7271, column: 7, scope: !2092)
!2107 = !DILocation(line: 7271, column: 15, scope: !2092)
!2108 = !DILocation(line: 7271, column: 20, scope: !2092)
!2109 = !DILocation(line: 7271, column: 25, scope: !2092)
!2110 = !DILocation(line: 7271, column: 29, scope: !2092)
!2111 = !DILocation(line: 7271, column: 24, scope: !2092)
!2112 = !DILocation(line: 7271, column: 35, scope: !2092)
!2113 = !DILocation(line: 7279, column: 7, scope: !2114)
!2114 = distinct !DILexicalBlock(scope: !2092, file: !3, line: 7279, column: 7)
!2115 = !DILocation(line: 7279, column: 11, scope: !2114)
!2116 = !DILocation(line: 7279, column: 21, scope: !2114)
!2117 = !DILocation(line: 7279, column: 19, scope: !2114)
!2118 = !DILocation(line: 7279, column: 7, scope: !2092)
!2119 = !DILocalVariable(name: "comp", scope: !2120, file: !3, line: 7280, type: !31)
!2120 = distinct !DILexicalBlock(scope: !2114, file: !3, line: 7279, column: 30)
!2121 = !DILocation(line: 7280, column: 9, scope: !2120)
!2122 = !DILocalVariable(name: "nmin", scope: !2120, file: !3, line: 7281, type: !48)
!2123 = !DILocation(line: 7281, column: 15, scope: !2120)
!2124 = !DILocation(line: 7283, column: 9, scope: !2125)
!2125 = distinct !DILexicalBlock(scope: !2120, file: !3, line: 7283, column: 9)
!2126 = !DILocation(line: 7283, column: 13, scope: !2125)
!2127 = !DILocation(line: 7283, column: 22, scope: !2125)
!2128 = !DILocation(line: 7283, column: 21, scope: !2125)
!2129 = !DILocation(line: 7283, column: 9, scope: !2120)
!2130 = !DILocation(line: 7285, column: 23, scope: !2131)
!2131 = distinct !DILexicalBlock(scope: !2125, file: !3, line: 7283, column: 31)
!2132 = !DILocation(line: 7285, column: 27, scope: !2131)
!2133 = !DILocation(line: 7285, column: 32, scope: !2131)
!2134 = !DILocation(line: 7285, column: 41, scope: !2131)
!2135 = !DILocation(line: 7285, column: 7, scope: !2131)
!2136 = !DILocation(line: 7286, column: 7, scope: !2131)
!2137 = !DILocation(line: 7289, column: 5, scope: !2120)
!2138 = !DILocation(line: 7290, column: 10, scope: !2120)
!2139 = !DILocation(line: 7290, column: 5, scope: !2120)
!2140 = !DILocation(line: 7290, column: 16, scope: !2120)
!2141 = !DILocation(line: 7291, column: 19, scope: !2120)
!2142 = !DILocation(line: 7291, column: 24, scope: !2120)
!2143 = !DILocation(line: 7291, column: 10, scope: !2120)
!2144 = !DILocation(line: 7291, column: 18, scope: !2120)
!2145 = !DILocation(line: 7292, column: 21, scope: !2120)
!2146 = !DILocation(line: 7292, column: 10, scope: !2120)
!2147 = !DILocation(line: 7292, column: 9, scope: !2120)
!2148 = !DILocation(line: 7293, column: 9, scope: !2149)
!2149 = distinct !DILexicalBlock(scope: !2120, file: !3, line: 7293, column: 9)
!2150 = !DILocation(line: 7293, column: 13, scope: !2149)
!2151 = !DILocation(line: 7293, column: 9, scope: !2120)
!2152 = !DILocation(line: 7294, column: 8, scope: !2153)
!2153 = distinct !DILexicalBlock(scope: !2149, file: !3, line: 7293, column: 23)
!2154 = !DILocation(line: 7294, column: 14, scope: !2153)
!2155 = !DILocation(line: 7295, column: 7, scope: !2153)
!2156 = !DILocation(line: 7297, column: 10, scope: !2157)
!2157 = distinct !DILexicalBlock(scope: !2120, file: !3, line: 7297, column: 9)
!2158 = !DILocation(line: 7297, column: 9, scope: !2157)
!2159 = !DILocation(line: 7297, column: 17, scope: !2157)
!2160 = !DILocation(line: 7297, column: 20, scope: !2157)
!2161 = !DILocation(line: 7297, column: 23, scope: !2157)
!2162 = !DILocation(line: 7297, column: 27, scope: !2157)
!2163 = !DILocation(line: 7297, column: 9, scope: !2120)
!2164 = !DILocation(line: 7298, column: 21, scope: !2165)
!2165 = distinct !DILexicalBlock(scope: !2157, file: !3, line: 7297, column: 32)
!2166 = !DILocation(line: 7298, column: 25, scope: !2165)
!2167 = !DILocation(line: 7298, column: 31, scope: !2165)
!2168 = !DILocation(line: 7298, column: 30, scope: !2165)
!2169 = !DILocation(line: 7298, column: 40, scope: !2165)
!2170 = !DILocation(line: 7298, column: 7, scope: !2165)
!2171 = !DILocation(line: 7299, column: 23, scope: !2165)
!2172 = !DILocation(line: 7299, column: 27, scope: !2165)
!2173 = !DILocation(line: 7299, column: 32, scope: !2165)
!2174 = !DILocation(line: 7299, column: 41, scope: !2165)
!2175 = !DILocation(line: 7299, column: 7, scope: !2165)
!2176 = !DILocation(line: 7300, column: 7, scope: !2165)
!2177 = !DILocation(line: 7302, column: 5, scope: !2120)
!2178 = !DILocation(line: 7305, column: 8, scope: !2179)
!2179 = distinct !DILexicalBlock(scope: !2092, file: !3, line: 7305, column: 7)
!2180 = !DILocation(line: 7305, column: 7, scope: !2179)
!2181 = !DILocation(line: 7305, column: 15, scope: !2179)
!2182 = !DILocation(line: 7305, column: 7, scope: !2092)
!2183 = !DILocation(line: 7305, column: 34, scope: !2179)
!2184 = !DILocation(line: 7305, column: 38, scope: !2179)
!2185 = !DILocation(line: 7305, column: 44, scope: !2179)
!2186 = !DILocation(line: 7305, column: 43, scope: !2179)
!2187 = !DILocation(line: 7305, column: 53, scope: !2179)
!2188 = !DILocation(line: 7305, column: 20, scope: !2179)
!2189 = !DILocation(line: 7308, column: 7, scope: !2190)
!2190 = distinct !DILexicalBlock(scope: !2092, file: !3, line: 7308, column: 7)
!2191 = !DILocation(line: 7308, column: 11, scope: !2190)
!2192 = !DILocation(line: 7308, column: 21, scope: !2190)
!2193 = !DILocation(line: 7308, column: 26, scope: !2190)
!2194 = !DILocation(line: 7308, column: 31, scope: !2190)
!2195 = !DILocation(line: 7308, column: 36, scope: !2190)
!2196 = !DILocation(line: 7308, column: 30, scope: !2190)
!2197 = !DILocation(line: 7308, column: 42, scope: !2190)
!2198 = !DILocation(line: 7308, column: 19, scope: !2190)
!2199 = !DILocation(line: 7308, column: 7, scope: !2092)
!2200 = !DILocation(line: 7308, column: 46, scope: !2190)
!2201 = !DILocation(line: 7312, column: 7, scope: !2202)
!2202 = distinct !DILexicalBlock(scope: !2092, file: !3, line: 7312, column: 7)
!2203 = !DILocation(line: 7312, column: 11, scope: !2202)
!2204 = !DILocation(line: 7312, column: 20, scope: !2202)
!2205 = !DILocation(line: 7312, column: 25, scope: !2202)
!2206 = !DILocation(line: 7312, column: 30, scope: !2202)
!2207 = !DILocation(line: 7312, column: 34, scope: !2202)
!2208 = !DILocation(line: 7312, column: 29, scope: !2202)
!2209 = !DILocation(line: 7312, column: 40, scope: !2202)
!2210 = !DILocation(line: 7312, column: 19, scope: !2202)
!2211 = !DILocation(line: 7312, column: 7, scope: !2092)
!2212 = !DILocation(line: 7313, column: 20, scope: !2213)
!2213 = distinct !DILexicalBlock(scope: !2202, file: !3, line: 7312, column: 44)
!2214 = !DILocation(line: 7313, column: 24, scope: !2213)
!2215 = !DILocation(line: 7313, column: 29, scope: !2213)
!2216 = !DILocation(line: 7313, column: 5, scope: !2213)
!2217 = !DILocation(line: 7314, column: 5, scope: !2213)
!2218 = !DILocation(line: 7317, column: 8, scope: !2219)
!2219 = distinct !DILexicalBlock(scope: !2092, file: !3, line: 7317, column: 7)
!2220 = !DILocation(line: 7317, column: 13, scope: !2219)
!2221 = !DILocation(line: 7317, column: 7, scope: !2092)
!2222 = !DILocation(line: 7317, column: 20, scope: !2219)
!2223 = !DILocation(line: 7320, column: 9, scope: !2092)
!2224 = !DILocation(line: 7320, column: 13, scope: !2092)
!2225 = !DILocation(line: 7320, column: 23, scope: !2092)
!2226 = !DILocation(line: 7320, column: 28, scope: !2092)
!2227 = !DILocation(line: 7320, column: 33, scope: !2092)
!2228 = !DILocation(line: 7320, column: 38, scope: !2092)
!2229 = !DILocation(line: 7320, column: 32, scope: !2092)
!2230 = !DILocation(line: 7320, column: 44, scope: !2092)
!2231 = !DILocation(line: 7320, column: 21, scope: !2092)
!2232 = !DILocation(line: 7320, column: 8, scope: !2092)
!2233 = !DILocation(line: 7323, column: 8, scope: !2234)
!2234 = distinct !DILexicalBlock(scope: !2092, file: !3, line: 7323, column: 7)
!2235 = !DILocation(line: 7323, column: 7, scope: !2092)
!2236 = !DILocation(line: 7324, column: 31, scope: !2237)
!2237 = distinct !DILexicalBlock(scope: !2234, file: !3, line: 7323, column: 20)
!2238 = !DILocation(line: 7324, column: 35, scope: !2237)
!2239 = !DILocation(line: 7324, column: 40, scope: !2237)
!2240 = !DILocation(line: 7324, column: 44, scope: !2237)
!2241 = !DILocation(line: 7324, column: 52, scope: !2237)
!2242 = !DILocation(line: 7324, column: 16, scope: !2237)
!2243 = !DILocation(line: 7324, column: 5, scope: !2237)
!2244 = !DILocation(line: 7324, column: 9, scope: !2237)
!2245 = !DILocation(line: 7324, column: 15, scope: !2237)
!2246 = !DILocation(line: 7325, column: 5, scope: !2237)
!2247 = !DILocation(line: 7326, column: 17, scope: !2092)
!2248 = !DILocation(line: 7326, column: 3, scope: !2092)
!2249 = !DILocation(line: 7326, column: 7, scope: !2092)
!2250 = !DILocation(line: 7326, column: 15, scope: !2092)
!2251 = !DILocation(line: 7327, column: 4, scope: !2092)
!2252 = !DILocation(line: 7327, column: 10, scope: !2092)
!2253 = !DILocation(line: 7328, column: 3, scope: !2092)
!2254 = !DILocation(line: 7329, column: 3, scope: !2092)
!2255 = distinct !DISubprogram(name: "decStatus", scope: !3, file: !3, line: 7735, type: !2256, scopeLine: 7735, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!2256 = !DISubroutineType(types: !2257)
!2257 = !{null, !47, !36, !269}
!2258 = !DILocalVariable(name: "dn", arg: 1, scope: !2255, file: !3, line: 7735, type: !47)
!2259 = !DILocation(line: 7735, column: 34, scope: !2255)
!2260 = !DILocalVariable(name: "status", arg: 2, scope: !2255, file: !3, line: 7735, type: !36)
!2261 = !DILocation(line: 7735, column: 43, scope: !2255)
!2262 = !DILocalVariable(name: "set", arg: 3, scope: !2255, file: !3, line: 7735, type: !269)
!2263 = !DILocation(line: 7735, column: 63, scope: !2255)
!2264 = !DILocation(line: 7736, column: 7, scope: !2265)
!2265 = distinct !DILexicalBlock(scope: !2255, file: !3, line: 7736, column: 7)
!2266 = !DILocation(line: 7736, column: 14, scope: !2265)
!2267 = !DILocation(line: 7736, column: 7, scope: !2255)
!2268 = !DILocation(line: 7738, column: 9, scope: !2269)
!2269 = distinct !DILexicalBlock(scope: !2270, file: !3, line: 7738, column: 9)
!2270 = distinct !DILexicalBlock(scope: !2265, file: !3, line: 7736, column: 26)
!2271 = !DILocation(line: 7738, column: 16, scope: !2269)
!2272 = !DILocation(line: 7738, column: 9, scope: !2270)
!2273 = !DILocation(line: 7738, column: 34, scope: !2269)
!2274 = !DILocation(line: 7738, column: 28, scope: !2269)
!2275 = !DILocation(line: 7740, column: 21, scope: !2276)
!2276 = distinct !DILexicalBlock(scope: !2269, file: !3, line: 7739, column: 11)
!2277 = !DILocation(line: 7740, column: 7, scope: !2276)
!2278 = !DILocation(line: 7741, column: 7, scope: !2276)
!2279 = !DILocation(line: 7741, column: 11, scope: !2276)
!2280 = !DILocation(line: 7741, column: 15, scope: !2276)
!2281 = !DILocation(line: 7743, column: 5, scope: !2270)
!2282 = !DILocation(line: 7744, column: 23, scope: !2255)
!2283 = !DILocation(line: 7744, column: 28, scope: !2255)
!2284 = !DILocation(line: 7744, column: 3, scope: !2255)
!2285 = !DILocation(line: 7745, column: 3, scope: !2255)
!2286 = distinct !DISubprogram(name: "decNumberAbs", scope: !3, file: !3, line: 738, type: !2287, scopeLine: 739, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!2287 = !DISubroutineType(types: !2288)
!2288 = !{!47, !47, !267, !269}
!2289 = !DILocalVariable(name: "res", arg: 1, scope: !2286, file: !3, line: 738, type: !47)
!2290 = !DILocation(line: 738, column: 37, scope: !2286)
!2291 = !DILocalVariable(name: "rhs", arg: 2, scope: !2286, file: !3, line: 738, type: !267)
!2292 = !DILocation(line: 738, column: 59, scope: !2286)
!2293 = !DILocalVariable(name: "set", arg: 3, scope: !2286, file: !3, line: 739, type: !269)
!2294 = !DILocation(line: 739, column: 17, scope: !2286)
!2295 = !DILocalVariable(name: "dzero", scope: !2286, file: !3, line: 740, type: !48)
!2296 = !DILocation(line: 740, column: 13, scope: !2286)
!2297 = !DILocalVariable(name: "status", scope: !2286, file: !3, line: 741, type: !36)
!2298 = !DILocation(line: 741, column: 8, scope: !2286)
!2299 = !DILocation(line: 747, column: 3, scope: !2286)
!2300 = !DILocation(line: 748, column: 18, scope: !2286)
!2301 = !DILocation(line: 748, column: 23, scope: !2286)
!2302 = !DILocation(line: 748, column: 9, scope: !2286)
!2303 = !DILocation(line: 748, column: 17, scope: !2286)
!2304 = !DILocation(line: 749, column: 12, scope: !2286)
!2305 = !DILocation(line: 749, column: 25, scope: !2286)
!2306 = !DILocation(line: 749, column: 30, scope: !2286)
!2307 = !DILocation(line: 749, column: 43, scope: !2286)
!2308 = !DILocation(line: 749, column: 48, scope: !2286)
!2309 = !DILocation(line: 749, column: 53, scope: !2286)
!2310 = !DILocation(line: 749, column: 35, scope: !2286)
!2311 = !DILocation(line: 749, column: 3, scope: !2286)
!2312 = !DILocation(line: 750, column: 7, scope: !2313)
!2313 = distinct !DILexicalBlock(scope: !2286, file: !3, line: 750, column: 7)
!2314 = !DILocation(line: 750, column: 13, scope: !2313)
!2315 = !DILocation(line: 750, column: 7, scope: !2286)
!2316 = !DILocation(line: 750, column: 28, scope: !2313)
!2317 = !DILocation(line: 750, column: 33, scope: !2313)
!2318 = !DILocation(line: 750, column: 41, scope: !2313)
!2319 = !DILocation(line: 750, column: 18, scope: !2313)
!2320 = !DILocation(line: 754, column: 10, scope: !2286)
!2321 = !DILocation(line: 754, column: 3, scope: !2286)
!2322 = distinct !DISubprogram(name: "decAddOp", scope: !3, file: !3, line: 3797, type: !2323, scopeLine: 3799, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!2323 = !DISubroutineType(types: !2324)
!2324 = !{!47, !47, !267, !267, !269, !44, !59}
!2325 = !DILocalVariable(name: "res", arg: 1, scope: !2322, file: !3, line: 3797, type: !47)
!2326 = !DILocation(line: 3797, column: 40, scope: !2322)
!2327 = !DILocalVariable(name: "lhs", arg: 2, scope: !2322, file: !3, line: 3797, type: !267)
!2328 = !DILocation(line: 3797, column: 62, scope: !2322)
!2329 = !DILocalVariable(name: "rhs", arg: 3, scope: !2322, file: !3, line: 3798, type: !267)
!2330 = !DILocation(line: 3798, column: 25, scope: !2322)
!2331 = !DILocalVariable(name: "set", arg: 4, scope: !2322, file: !3, line: 3798, type: !269)
!2332 = !DILocation(line: 3798, column: 42, scope: !2322)
!2333 = !DILocalVariable(name: "negate", arg: 5, scope: !2322, file: !3, line: 3799, type: !44)
!2334 = !DILocation(line: 3799, column: 14, scope: !2322)
!2335 = !DILocalVariable(name: "status", arg: 6, scope: !2322, file: !3, line: 3799, type: !59)
!2336 = !DILocation(line: 3799, column: 28, scope: !2322)
!2337 = !DILocalVariable(name: "rhsshift", scope: !2322, file: !3, line: 3804, type: !31)
!2338 = !DILocation(line: 3804, column: 7, scope: !2322)
!2339 = !DILocalVariable(name: "maxdigits", scope: !2322, file: !3, line: 3805, type: !31)
!2340 = !DILocation(line: 3805, column: 7, scope: !2322)
!2341 = !DILocalVariable(name: "mult", scope: !2322, file: !3, line: 3806, type: !31)
!2342 = !DILocation(line: 3806, column: 7, scope: !2322)
!2343 = !DILocalVariable(name: "residue", scope: !2322, file: !3, line: 3807, type: !31)
!2344 = !DILocation(line: 3807, column: 7, scope: !2322)
!2345 = !DILocalVariable(name: "bits", scope: !2322, file: !3, line: 3808, type: !44)
!2346 = !DILocation(line: 3808, column: 9, scope: !2322)
!2347 = !DILocalVariable(name: "diffsign", scope: !2322, file: !3, line: 3809, type: !44)
!2348 = !DILocation(line: 3809, column: 8, scope: !2322)
!2349 = !DILocalVariable(name: "acc", scope: !2322, file: !3, line: 3810, type: !43)
!2350 = !DILocation(line: 3810, column: 9, scope: !2322)
!2351 = !DILocalVariable(name: "accbuff", scope: !2322, file: !3, line: 3811, type: !2352)
!2352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !39, size: 496, elements: !2353)
!2353 = !{!2354}
!2354 = !DISubrange(count: 31)
!2355 = !DILocation(line: 3811, column: 8, scope: !2322)
!2356 = !DILocalVariable(name: "allocacc", scope: !2322, file: !3, line: 3814, type: !43)
!2357 = !DILocation(line: 3814, column: 9, scope: !2322)
!2358 = !DILocalVariable(name: "reqdigits", scope: !2322, file: !3, line: 3815, type: !31)
!2359 = !DILocation(line: 3815, column: 7, scope: !2322)
!2360 = !DILocation(line: 3815, column: 17, scope: !2322)
!2361 = !DILocation(line: 3815, column: 22, scope: !2322)
!2362 = !DILocalVariable(name: "padding", scope: !2322, file: !3, line: 3816, type: !31)
!2363 = !DILocation(line: 3816, column: 7, scope: !2322)
!2364 = !DILocation(line: 3822, column: 3, scope: !2322)
!2365 = !DILocation(line: 3841, column: 22, scope: !2366)
!2366 = distinct !DILexicalBlock(scope: !2322, file: !3, line: 3822, column: 6)
!2367 = !DILocation(line: 3841, column: 27, scope: !2366)
!2368 = !DILocation(line: 3841, column: 32, scope: !2366)
!2369 = !DILocation(line: 3841, column: 37, scope: !2366)
!2370 = !DILocation(line: 3841, column: 31, scope: !2366)
!2371 = !DILocation(line: 3841, column: 42, scope: !2366)
!2372 = !DILocation(line: 3841, column: 41, scope: !2366)
!2373 = !DILocation(line: 3841, column: 49, scope: !2366)
!2374 = !DILocation(line: 3841, column: 14, scope: !2366)
!2375 = !DILocation(line: 3841, column: 13, scope: !2366)
!2376 = !DILocation(line: 3844, column: 9, scope: !2377)
!2377 = distinct !DILexicalBlock(scope: !2366, file: !3, line: 3844, column: 9)
!2378 = !DILocation(line: 3844, column: 9, scope: !2366)
!2379 = !DILocation(line: 3845, column: 11, scope: !2380)
!2380 = distinct !DILexicalBlock(scope: !2381, file: !3, line: 3845, column: 11)
!2381 = distinct !DILexicalBlock(scope: !2377, file: !3, line: 3844, column: 22)
!2382 = !DILocation(line: 3845, column: 23, scope: !2380)
!2383 = !DILocation(line: 3845, column: 11, scope: !2381)
!2384 = !DILocation(line: 3846, column: 10, scope: !2380)
!2385 = !DILocation(line: 3846, column: 15, scope: !2380)
!2386 = !DILocation(line: 3846, column: 20, scope: !2380)
!2387 = !DILocation(line: 3846, column: 25, scope: !2380)
!2388 = !DILocation(line: 3846, column: 30, scope: !2380)
!2389 = !DILocation(line: 3846, column: 2, scope: !2380)
!2390 = !DILocation(line: 3848, column: 6, scope: !2391)
!2391 = distinct !DILexicalBlock(scope: !2392, file: !3, line: 3848, column: 6)
!2392 = distinct !DILexicalBlock(scope: !2380, file: !3, line: 3847, column: 13)
!2393 = !DILocation(line: 3848, column: 6, scope: !2392)
!2394 = !DILocation(line: 3850, column: 8, scope: !2395)
!2395 = distinct !DILexicalBlock(scope: !2396, file: !3, line: 3850, column: 8)
!2396 = distinct !DILexicalBlock(scope: !2391, file: !3, line: 3848, column: 32)
!2397 = !DILocation(line: 3850, column: 33, scope: !2395)
!2398 = !DILocation(line: 3850, column: 36, scope: !2395)
!2399 = !DILocation(line: 3850, column: 8, scope: !2396)
!2400 = !DILocation(line: 3851, column: 7, scope: !2401)
!2401 = distinct !DILexicalBlock(scope: !2395, file: !3, line: 3850, column: 46)
!2402 = !DILocation(line: 3851, column: 13, scope: !2401)
!2403 = !DILocation(line: 3852, column: 6, scope: !2401)
!2404 = !DILocation(line: 3854, column: 9, scope: !2396)
!2405 = !DILocation(line: 3854, column: 14, scope: !2396)
!2406 = !DILocation(line: 3854, column: 19, scope: !2396)
!2407 = !DILocation(line: 3854, column: 8, scope: !2396)
!2408 = !DILocation(line: 3855, column: 4, scope: !2396)
!2409 = !DILocation(line: 3856, column: 14, scope: !2391)
!2410 = !DILocation(line: 3856, column: 19, scope: !2391)
!2411 = !DILocation(line: 3856, column: 24, scope: !2391)
!2412 = !DILocation(line: 3856, column: 23, scope: !2391)
!2413 = !DILocation(line: 3856, column: 32, scope: !2391)
!2414 = !DILocation(line: 3856, column: 13, scope: !2391)
!2415 = !DILocation(line: 3856, column: 12, scope: !2391)
!2416 = !DILocation(line: 3857, column: 6, scope: !2392)
!2417 = !DILocation(line: 3858, column: 16, scope: !2392)
!2418 = !DILocation(line: 3858, column: 2, scope: !2392)
!2419 = !DILocation(line: 3859, column: 12, scope: !2392)
!2420 = !DILocation(line: 3859, column: 2, scope: !2392)
!2421 = !DILocation(line: 3859, column: 7, scope: !2392)
!2422 = !DILocation(line: 3859, column: 11, scope: !2392)
!2423 = !DILocation(line: 3861, column: 7, scope: !2381)
!2424 = !DILocation(line: 3865, column: 9, scope: !2425)
!2425 = distinct !DILexicalBlock(scope: !2366, file: !3, line: 3865, column: 9)
!2426 = !DILocation(line: 3865, column: 9, scope: !2366)
!2427 = !DILocalVariable(name: "adjust", scope: !2428, file: !3, line: 3866, type: !31)
!2428 = distinct !DILexicalBlock(scope: !2425, file: !3, line: 3865, column: 22)
!2429 = !DILocation(line: 3866, column: 11, scope: !2428)
!2430 = !DILocalVariable(name: "lexp", scope: !2428, file: !3, line: 3867, type: !31)
!2431 = !DILocation(line: 3867, column: 11, scope: !2428)
!2432 = !DILocation(line: 3867, column: 16, scope: !2428)
!2433 = !DILocation(line: 3867, column: 21, scope: !2428)
!2434 = !DILocation(line: 3868, column: 12, scope: !2428)
!2435 = !DILocation(line: 3868, column: 17, scope: !2428)
!2436 = !DILocation(line: 3868, column: 11, scope: !2428)
!2437 = !DILocation(line: 3869, column: 14, scope: !2428)
!2438 = !DILocation(line: 3870, column: 18, scope: !2428)
!2439 = !DILocation(line: 3870, column: 23, scope: !2428)
!2440 = !DILocation(line: 3870, column: 28, scope: !2428)
!2441 = !DILocation(line: 3870, column: 43, scope: !2428)
!2442 = !DILocation(line: 3870, column: 7, scope: !2428)
!2443 = !DILocation(line: 3871, column: 18, scope: !2428)
!2444 = !DILocation(line: 3871, column: 7, scope: !2428)
!2445 = !DILocation(line: 3871, column: 12, scope: !2428)
!2446 = !DILocation(line: 3871, column: 16, scope: !2428)
!2447 = !DILocation(line: 3876, column: 9, scope: !2428)
!2448 = !DILocation(line: 3876, column: 14, scope: !2428)
!2449 = !DILocation(line: 3876, column: 19, scope: !2428)
!2450 = !DILocation(line: 3876, column: 13, scope: !2428)
!2451 = !DILocation(line: 3876, column: 8, scope: !2428)
!2452 = !DILocation(line: 3877, column: 6, scope: !2453)
!2453 = distinct !DILexicalBlock(scope: !2428, file: !3, line: 3877, column: 6)
!2454 = !DILocation(line: 3877, column: 6, scope: !2428)
!2455 = !DILocation(line: 3878, column: 8, scope: !2456)
!2456 = distinct !DILexicalBlock(scope: !2457, file: !3, line: 3878, column: 8)
!2457 = distinct !DILexicalBlock(scope: !2453, file: !3, line: 3877, column: 19)
!2458 = !DILocation(line: 3878, column: 14, scope: !2456)
!2459 = !DILocation(line: 3878, column: 8, scope: !2457)
!2460 = !DILocation(line: 3878, column: 32, scope: !2456)
!2461 = !DILocation(line: 3878, column: 18, scope: !2456)
!2462 = !DILocation(line: 3878, column: 23, scope: !2456)
!2463 = !DILocation(line: 3878, column: 31, scope: !2456)
!2464 = !DILocation(line: 3880, column: 8, scope: !2465)
!2465 = distinct !DILexicalBlock(scope: !2457, file: !3, line: 3880, column: 8)
!2466 = !DILocation(line: 3880, column: 8, scope: !2457)
!2467 = !DILocation(line: 3881, column: 10, scope: !2468)
!2468 = distinct !DILexicalBlock(scope: !2469, file: !3, line: 3881, column: 10)
!2469 = distinct !DILexicalBlock(scope: !2465, file: !3, line: 3880, column: 18)
!2470 = !DILocation(line: 3881, column: 15, scope: !2468)
!2471 = !DILocation(line: 3881, column: 20, scope: !2468)
!2472 = !DILocation(line: 3881, column: 10, scope: !2469)
!2473 = !DILocation(line: 3881, column: 39, scope: !2468)
!2474 = !DILocation(line: 3881, column: 44, scope: !2468)
!2475 = !DILocation(line: 3881, column: 48, scope: !2468)
!2476 = !DILocation(line: 3882, column: 12, scope: !2468)
!2477 = !DILocation(line: 3882, column: 17, scope: !2468)
!2478 = !DILocation(line: 3882, column: 21, scope: !2468)
!2479 = !DILocation(line: 3883, column: 6, scope: !2469)
!2480 = !DILocation(line: 3884, column: 4, scope: !2457)
!2481 = !DILocation(line: 3886, column: 8, scope: !2482)
!2482 = distinct !DILexicalBlock(scope: !2483, file: !3, line: 3886, column: 8)
!2483 = distinct !DILexicalBlock(scope: !2453, file: !3, line: 3885, column: 8)
!2484 = !DILocation(line: 3886, column: 14, scope: !2482)
!2485 = !DILocation(line: 3886, column: 8, scope: !2483)
!2486 = !DILocation(line: 3887, column: 11, scope: !2487)
!2487 = distinct !DILexicalBlock(scope: !2488, file: !3, line: 3887, column: 10)
!2488 = distinct !DILexicalBlock(scope: !2482, file: !3, line: 3886, column: 18)
!2489 = !DILocation(line: 3887, column: 16, scope: !2487)
!2490 = !DILocation(line: 3887, column: 23, scope: !2487)
!2491 = !DILocation(line: 3887, column: 22, scope: !2487)
!2492 = !DILocation(line: 3887, column: 31, scope: !2487)
!2493 = !DILocation(line: 3887, column: 36, scope: !2487)
!2494 = !DILocation(line: 3887, column: 30, scope: !2487)
!2495 = !DILocation(line: 3887, column: 10, scope: !2488)
!2496 = !DILocation(line: 3888, column: 15, scope: !2497)
!2497 = distinct !DILexicalBlock(scope: !2487, file: !3, line: 3887, column: 44)
!2498 = !DILocation(line: 3888, column: 20, scope: !2497)
!2499 = !DILocation(line: 3888, column: 27, scope: !2497)
!2500 = !DILocation(line: 3888, column: 32, scope: !2497)
!2501 = !DILocation(line: 3888, column: 26, scope: !2497)
!2502 = !DILocation(line: 3888, column: 14, scope: !2497)
!2503 = !DILocation(line: 3889, column: 9, scope: !2497)
!2504 = !DILocation(line: 3889, column: 15, scope: !2497)
!2505 = !DILocation(line: 3890, column: 8, scope: !2497)
!2506 = !DILocation(line: 3891, column: 33, scope: !2488)
!2507 = !DILocation(line: 3891, column: 38, scope: !2488)
!2508 = !DILocation(line: 3891, column: 43, scope: !2488)
!2509 = !DILocation(line: 3891, column: 48, scope: !2488)
!2510 = !DILocation(line: 3891, column: 57, scope: !2488)
!2511 = !DILocation(line: 3891, column: 56, scope: !2488)
!2512 = !DILocation(line: 3891, column: 18, scope: !2488)
!2513 = !DILocation(line: 3891, column: 6, scope: !2488)
!2514 = !DILocation(line: 3891, column: 11, scope: !2488)
!2515 = !DILocation(line: 3891, column: 17, scope: !2488)
!2516 = !DILocation(line: 3892, column: 21, scope: !2488)
!2517 = !DILocation(line: 3892, column: 6, scope: !2488)
!2518 = !DILocation(line: 3892, column: 11, scope: !2488)
!2519 = !DILocation(line: 3892, column: 19, scope: !2488)
!2520 = !DILocation(line: 3893, column: 6, scope: !2488)
!2521 = !DILocation(line: 3898, column: 7, scope: !2428)
!2522 = !DILocation(line: 3899, column: 7, scope: !2428)
!2523 = !DILocation(line: 3901, column: 9, scope: !2524)
!2524 = distinct !DILexicalBlock(scope: !2366, file: !3, line: 3901, column: 9)
!2525 = !DILocation(line: 3901, column: 9, scope: !2366)
!2526 = !DILocalVariable(name: "adjust", scope: !2527, file: !3, line: 3902, type: !31)
!2527 = distinct !DILexicalBlock(scope: !2524, file: !3, line: 3901, column: 22)
!2528 = !DILocation(line: 3902, column: 11, scope: !2527)
!2529 = !DILocalVariable(name: "rexp", scope: !2527, file: !3, line: 3903, type: !31)
!2530 = !DILocation(line: 3903, column: 11, scope: !2527)
!2531 = !DILocation(line: 3903, column: 16, scope: !2527)
!2532 = !DILocation(line: 3903, column: 21, scope: !2527)
!2533 = !DILocation(line: 3904, column: 12, scope: !2527)
!2534 = !DILocation(line: 3904, column: 17, scope: !2527)
!2535 = !DILocation(line: 3904, column: 11, scope: !2527)
!2536 = !DILocation(line: 3905, column: 14, scope: !2527)
!2537 = !DILocation(line: 3906, column: 18, scope: !2527)
!2538 = !DILocation(line: 3906, column: 23, scope: !2527)
!2539 = !DILocation(line: 3906, column: 28, scope: !2527)
!2540 = !DILocation(line: 3906, column: 43, scope: !2527)
!2541 = !DILocation(line: 3906, column: 7, scope: !2527)
!2542 = !DILocation(line: 3912, column: 9, scope: !2527)
!2543 = !DILocation(line: 3912, column: 14, scope: !2527)
!2544 = !DILocation(line: 3912, column: 19, scope: !2527)
!2545 = !DILocation(line: 3912, column: 13, scope: !2527)
!2546 = !DILocation(line: 3912, column: 8, scope: !2527)
!2547 = !DILocation(line: 3913, column: 6, scope: !2548)
!2548 = distinct !DILexicalBlock(scope: !2527, file: !3, line: 3913, column: 6)
!2549 = !DILocation(line: 3913, column: 12, scope: !2548)
!2550 = !DILocation(line: 3913, column: 6, scope: !2527)
!2551 = !DILocation(line: 3914, column: 9, scope: !2552)
!2552 = distinct !DILexicalBlock(scope: !2553, file: !3, line: 3914, column: 8)
!2553 = distinct !DILexicalBlock(scope: !2548, file: !3, line: 3913, column: 16)
!2554 = !DILocation(line: 3914, column: 14, scope: !2552)
!2555 = !DILocation(line: 3914, column: 21, scope: !2552)
!2556 = !DILocation(line: 3914, column: 20, scope: !2552)
!2557 = !DILocation(line: 3914, column: 29, scope: !2552)
!2558 = !DILocation(line: 3914, column: 34, scope: !2552)
!2559 = !DILocation(line: 3914, column: 28, scope: !2552)
!2560 = !DILocation(line: 3914, column: 8, scope: !2553)
!2561 = !DILocation(line: 3915, column: 13, scope: !2562)
!2562 = distinct !DILexicalBlock(scope: !2552, file: !3, line: 3914, column: 42)
!2563 = !DILocation(line: 3915, column: 18, scope: !2562)
!2564 = !DILocation(line: 3915, column: 25, scope: !2562)
!2565 = !DILocation(line: 3915, column: 30, scope: !2562)
!2566 = !DILocation(line: 3915, column: 24, scope: !2562)
!2567 = !DILocation(line: 3915, column: 12, scope: !2562)
!2568 = !DILocation(line: 3916, column: 7, scope: !2562)
!2569 = !DILocation(line: 3916, column: 13, scope: !2562)
!2570 = !DILocation(line: 3917, column: 6, scope: !2562)
!2571 = !DILocation(line: 3918, column: 31, scope: !2553)
!2572 = !DILocation(line: 3918, column: 36, scope: !2553)
!2573 = !DILocation(line: 3918, column: 41, scope: !2553)
!2574 = !DILocation(line: 3918, column: 46, scope: !2553)
!2575 = !DILocation(line: 3918, column: 55, scope: !2553)
!2576 = !DILocation(line: 3918, column: 54, scope: !2553)
!2577 = !DILocation(line: 3918, column: 16, scope: !2553)
!2578 = !DILocation(line: 3918, column: 4, scope: !2553)
!2579 = !DILocation(line: 3918, column: 9, scope: !2553)
!2580 = !DILocation(line: 3918, column: 15, scope: !2553)
!2581 = !DILocation(line: 3919, column: 19, scope: !2553)
!2582 = !DILocation(line: 3919, column: 4, scope: !2553)
!2583 = !DILocation(line: 3919, column: 9, scope: !2553)
!2584 = !DILocation(line: 3919, column: 17, scope: !2553)
!2585 = !DILocation(line: 3920, column: 4, scope: !2553)
!2586 = !DILocation(line: 3924, column: 7, scope: !2527)
!2587 = !DILocation(line: 3925, column: 7, scope: !2527)
!2588 = !DILocation(line: 3931, column: 13, scope: !2366)
!2589 = !DILocation(line: 3931, column: 18, scope: !2366)
!2590 = !DILocation(line: 3931, column: 27, scope: !2366)
!2591 = !DILocation(line: 3931, column: 32, scope: !2366)
!2592 = !DILocation(line: 3931, column: 26, scope: !2366)
!2593 = !DILocation(line: 3931, column: 12, scope: !2366)
!2594 = !DILocation(line: 3936, column: 9, scope: !2595)
!2595 = distinct !DILexicalBlock(scope: !2366, file: !3, line: 3936, column: 9)
!2596 = !DILocation(line: 3936, column: 16, scope: !2595)
!2597 = !DILocation(line: 3937, column: 2, scope: !2595)
!2598 = !DILocation(line: 3937, column: 5, scope: !2595)
!2599 = !DILocation(line: 3937, column: 10, scope: !2595)
!2600 = !DILocation(line: 3937, column: 16, scope: !2595)
!2601 = !DILocation(line: 3938, column: 2, scope: !2595)
!2602 = !DILocation(line: 3938, column: 5, scope: !2595)
!2603 = !DILocation(line: 3938, column: 10, scope: !2595)
!2604 = !DILocation(line: 3938, column: 20, scope: !2595)
!2605 = !DILocation(line: 3938, column: 25, scope: !2595)
!2606 = !DILocation(line: 3938, column: 18, scope: !2595)
!2607 = !DILocation(line: 3939, column: 2, scope: !2595)
!2608 = !DILocation(line: 3939, column: 5, scope: !2595)
!2609 = !DILocation(line: 3939, column: 10, scope: !2595)
!2610 = !DILocation(line: 3939, column: 20, scope: !2595)
!2611 = !DILocation(line: 3939, column: 25, scope: !2595)
!2612 = !DILocation(line: 3939, column: 30, scope: !2595)
!2613 = !DILocation(line: 3939, column: 35, scope: !2595)
!2614 = !DILocation(line: 3939, column: 29, scope: !2595)
!2615 = !DILocation(line: 3939, column: 41, scope: !2595)
!2616 = !DILocation(line: 3939, column: 18, scope: !2595)
!2617 = !DILocation(line: 3940, column: 2, scope: !2595)
!2618 = !DILocation(line: 3940, column: 5, scope: !2595)
!2619 = !DILocation(line: 3940, column: 10, scope: !2595)
!2620 = !DILocation(line: 3940, column: 18, scope: !2595)
!2621 = !DILocation(line: 3940, column: 16, scope: !2595)
!2622 = !DILocation(line: 3941, column: 2, scope: !2595)
!2623 = !DILocation(line: 3941, column: 5, scope: !2595)
!2624 = !DILocation(line: 3941, column: 10, scope: !2595)
!2625 = !DILocation(line: 3941, column: 18, scope: !2595)
!2626 = !DILocation(line: 3941, column: 16, scope: !2595)
!2627 = !DILocation(line: 3936, column: 9, scope: !2366)
!2628 = !DILocalVariable(name: "partial", scope: !2629, file: !3, line: 3942, type: !31)
!2629 = distinct !DILexicalBlock(scope: !2595, file: !3, line: 3941, column: 29)
!2630 = !DILocation(line: 3942, column: 11, scope: !2629)
!2631 = !DILocation(line: 3942, column: 20, scope: !2629)
!2632 = !DILocation(line: 3942, column: 25, scope: !2629)
!2633 = !DILocation(line: 3942, column: 19, scope: !2629)
!2634 = !DILocation(line: 3943, column: 12, scope: !2635)
!2635 = distinct !DILexicalBlock(scope: !2629, file: !3, line: 3943, column: 11)
!2636 = !DILocation(line: 3943, column: 11, scope: !2629)
!2637 = !DILocation(line: 3944, column: 12, scope: !2638)
!2638 = distinct !DILexicalBlock(scope: !2635, file: !3, line: 3943, column: 22)
!2639 = !DILocation(line: 3944, column: 17, scope: !2638)
!2640 = !DILocation(line: 3944, column: 11, scope: !2638)
!2641 = !DILocation(line: 3944, column: 9, scope: !2638)
!2642 = !DILocation(line: 3945, column: 7, scope: !2643)
!2643 = distinct !DILexicalBlock(scope: !2638, file: !3, line: 3945, column: 6)
!2644 = !DILocation(line: 3945, column: 14, scope: !2643)
!2645 = !DILocation(line: 3946, column: 3, scope: !2643)
!2646 = !DILocation(line: 3946, column: 7, scope: !2643)
!2647 = !DILocation(line: 3946, column: 12, scope: !2643)
!2648 = !DILocation(line: 3946, column: 18, scope: !2643)
!2649 = !DILocation(line: 3946, column: 28, scope: !2643)
!2650 = !DILocation(line: 3947, column: 7, scope: !2643)
!2651 = !DILocation(line: 3947, column: 27, scope: !2643)
!2652 = !DILocation(line: 3947, column: 32, scope: !2643)
!2653 = !DILocation(line: 3947, column: 20, scope: !2643)
!2654 = !DILocation(line: 3947, column: 14, scope: !2643)
!2655 = !DILocation(line: 3945, column: 6, scope: !2638)
!2656 = !DILocation(line: 3948, column: 8, scope: !2657)
!2657 = distinct !DILexicalBlock(scope: !2658, file: !3, line: 3948, column: 8)
!2658 = distinct !DILexicalBlock(scope: !2643, file: !3, line: 3947, column: 42)
!2659 = !DILocation(line: 3948, column: 13, scope: !2657)
!2660 = !DILocation(line: 3948, column: 11, scope: !2657)
!2661 = !DILocation(line: 3948, column: 8, scope: !2658)
!2662 = !DILocation(line: 3948, column: 32, scope: !2657)
!2663 = !DILocation(line: 3948, column: 37, scope: !2657)
!2664 = !DILocation(line: 3948, column: 18, scope: !2657)
!2665 = !DILocation(line: 3949, column: 20, scope: !2658)
!2666 = !DILocation(line: 3949, column: 14, scope: !2658)
!2667 = !DILocation(line: 3949, column: 5, scope: !2658)
!2668 = !DILocation(line: 3949, column: 10, scope: !2658)
!2669 = !DILocation(line: 3949, column: 4, scope: !2658)
!2670 = !DILocation(line: 3949, column: 13, scope: !2658)
!2671 = !DILocation(line: 3950, column: 4, scope: !2658)
!2672 = !DILocation(line: 3953, column: 2, scope: !2638)
!2673 = !DILocation(line: 3955, column: 12, scope: !2674)
!2674 = distinct !DILexicalBlock(scope: !2635, file: !3, line: 3954, column: 13)
!2675 = !DILocation(line: 3955, column: 17, scope: !2674)
!2676 = !DILocation(line: 3955, column: 11, scope: !2674)
!2677 = !DILocation(line: 3955, column: 9, scope: !2674)
!2678 = !DILocation(line: 3956, column: 6, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !2674, file: !3, line: 3956, column: 6)
!2680 = !DILocation(line: 3956, column: 13, scope: !2679)
!2681 = !DILocation(line: 3956, column: 6, scope: !2674)
!2682 = !DILocation(line: 3957, column: 8, scope: !2683)
!2683 = distinct !DILexicalBlock(scope: !2684, file: !3, line: 3957, column: 8)
!2684 = distinct !DILexicalBlock(scope: !2679, file: !3, line: 3956, column: 17)
!2685 = !DILocation(line: 3957, column: 13, scope: !2683)
!2686 = !DILocation(line: 3957, column: 11, scope: !2683)
!2687 = !DILocation(line: 3957, column: 8, scope: !2684)
!2688 = !DILocation(line: 3957, column: 32, scope: !2683)
!2689 = !DILocation(line: 3957, column: 37, scope: !2683)
!2690 = !DILocation(line: 3957, column: 18, scope: !2683)
!2691 = !DILocation(line: 3958, column: 20, scope: !2684)
!2692 = !DILocation(line: 3958, column: 14, scope: !2684)
!2693 = !DILocation(line: 3958, column: 5, scope: !2684)
!2694 = !DILocation(line: 3958, column: 10, scope: !2684)
!2695 = !DILocation(line: 3958, column: 4, scope: !2684)
!2696 = !DILocation(line: 3958, column: 13, scope: !2684)
!2697 = !DILocation(line: 3960, column: 29, scope: !2684)
!2698 = !DILocation(line: 3960, column: 34, scope: !2684)
!2699 = !DILocation(line: 3960, column: 39, scope: !2684)
!2700 = !DILocation(line: 3960, column: 16, scope: !2684)
!2701 = !DILocation(line: 3960, column: 4, scope: !2684)
!2702 = !DILocation(line: 3960, column: 9, scope: !2684)
!2703 = !DILocation(line: 3960, column: 15, scope: !2684)
!2704 = !DILocation(line: 3961, column: 4, scope: !2684)
!2705 = !DILocation(line: 3965, column: 7, scope: !2629)
!2706 = !DILocation(line: 3974, column: 13, scope: !2366)
!2707 = !DILocation(line: 3975, column: 10, scope: !2366)
!2708 = !DILocation(line: 3975, column: 15, scope: !2366)
!2709 = !DILocation(line: 3975, column: 9, scope: !2366)
!2710 = !DILocation(line: 3976, column: 9, scope: !2366)
!2711 = !DILocation(line: 3979, column: 9, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !2366, file: !3, line: 3979, column: 9)
!2713 = !DILocation(line: 3979, column: 16, scope: !2712)
!2714 = !DILocation(line: 3979, column: 9, scope: !2366)
!2715 = !DILocalVariable(name: "swapped", scope: !2716, file: !3, line: 3983, type: !44)
!2716 = distinct !DILexicalBlock(scope: !2712, file: !3, line: 3979, column: 21)
!2717 = !DILocation(line: 3983, column: 12, scope: !2716)
!2718 = !DILocation(line: 3984, column: 11, scope: !2719)
!2719 = distinct !DILexicalBlock(scope: !2716, file: !3, line: 3984, column: 11)
!2720 = !DILocation(line: 3984, column: 18, scope: !2719)
!2721 = !DILocation(line: 3984, column: 11, scope: !2716)
!2722 = !DILocalVariable(name: "t", scope: !2723, file: !3, line: 3985, type: !267)
!2723 = distinct !DILexicalBlock(scope: !2719, file: !3, line: 3984, column: 22)
!2724 = !DILocation(line: 3985, column: 19, scope: !2723)
!2725 = !DILocation(line: 3986, column: 11, scope: !2723)
!2726 = !DILocation(line: 3986, column: 10, scope: !2723)
!2727 = !DILocation(line: 3986, column: 9, scope: !2723)
!2728 = !DILocation(line: 3987, column: 15, scope: !2723)
!2729 = !DILocation(line: 3987, column: 20, scope: !2723)
!2730 = !DILocation(line: 3987, column: 25, scope: !2723)
!2731 = !DILocation(line: 3987, column: 24, scope: !2723)
!2732 = !DILocation(line: 3987, column: 7, scope: !2723)
!2733 = !DILocation(line: 3987, column: 6, scope: !2723)
!2734 = !DILocation(line: 3988, column: 4, scope: !2723)
!2735 = !DILocation(line: 3988, column: 3, scope: !2723)
!2736 = !DILocation(line: 3988, column: 13, scope: !2723)
!2737 = !DILocation(line: 3988, column: 12, scope: !2723)
!2738 = !DILocation(line: 3988, column: 22, scope: !2723)
!2739 = !DILocation(line: 3988, column: 21, scope: !2723)
!2740 = !DILocation(line: 3989, column: 9, scope: !2723)
!2741 = !DILocation(line: 3990, column: 2, scope: !2723)
!2742 = !DILocation(line: 3995, column: 11, scope: !2743)
!2743 = distinct !DILexicalBlock(scope: !2716, file: !3, line: 3995, column: 11)
!2744 = !DILocation(line: 3995, column: 16, scope: !2743)
!2745 = !DILocation(line: 3995, column: 23, scope: !2743)
!2746 = !DILocation(line: 3995, column: 22, scope: !2743)
!2747 = !DILocation(line: 3995, column: 33, scope: !2743)
!2748 = !DILocation(line: 3995, column: 38, scope: !2743)
!2749 = !DILocation(line: 3995, column: 45, scope: !2743)
!2750 = !DILocation(line: 3995, column: 44, scope: !2743)
!2751 = !DILocation(line: 3995, column: 54, scope: !2743)
!2752 = !DILocation(line: 3995, column: 31, scope: !2743)
!2753 = !DILocation(line: 3995, column: 11, scope: !2716)
!2754 = !DILocalVariable(name: "shift", scope: !2755, file: !3, line: 3998, type: !31)
!2755 = distinct !DILexicalBlock(scope: !2743, file: !3, line: 3995, column: 58)
!2756 = !DILocation(line: 3998, column: 6, scope: !2755)
!2757 = !DILocation(line: 3998, column: 12, scope: !2755)
!2758 = !DILocation(line: 3998, column: 22, scope: !2755)
!2759 = !DILocation(line: 3998, column: 27, scope: !2755)
!2760 = !DILocation(line: 3998, column: 21, scope: !2755)
!2761 = !DILocation(line: 3999, column: 9, scope: !2755)
!2762 = !DILocation(line: 4000, column: 6, scope: !2763)
!2763 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 4000, column: 6)
!2764 = !DILocation(line: 4000, column: 6, scope: !2755)
!2765 = !DILocation(line: 4000, column: 25, scope: !2763)
!2766 = !DILocation(line: 4000, column: 24, scope: !2763)
!2767 = !DILocation(line: 4000, column: 23, scope: !2763)
!2768 = !DILocation(line: 4000, column: 16, scope: !2763)
!2769 = !DILocation(line: 4002, column: 13, scope: !2755)
!2770 = !DILocation(line: 4002, column: 18, scope: !2755)
!2771 = !DILocation(line: 4002, column: 23, scope: !2755)
!2772 = !DILocation(line: 4002, column: 38, scope: !2755)
!2773 = !DILocation(line: 4002, column: 2, scope: !2755)
!2774 = !DILocation(line: 4004, column: 6, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 4004, column: 6)
!2776 = !DILocation(line: 4004, column: 11, scope: !2775)
!2777 = !DILocation(line: 4004, column: 6, scope: !2755)
!2778 = !DILocation(line: 4005, column: 31, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !2775, file: !3, line: 4004, column: 15)
!2780 = !DILocation(line: 4005, column: 36, scope: !2779)
!2781 = !DILocation(line: 4005, column: 41, scope: !2779)
!2782 = !DILocation(line: 4005, column: 46, scope: !2779)
!2783 = !DILocation(line: 4005, column: 54, scope: !2779)
!2784 = !DILocation(line: 4005, column: 16, scope: !2779)
!2785 = !DILocation(line: 4005, column: 4, scope: !2779)
!2786 = !DILocation(line: 4005, column: 9, scope: !2779)
!2787 = !DILocation(line: 4005, column: 15, scope: !2779)
!2788 = !DILocation(line: 4006, column: 19, scope: !2779)
!2789 = !DILocation(line: 4006, column: 4, scope: !2779)
!2790 = !DILocation(line: 4006, column: 9, scope: !2779)
!2791 = !DILocation(line: 4006, column: 17, scope: !2779)
!2792 = !DILocation(line: 4007, column: 4, scope: !2779)
!2793 = !DILocation(line: 4009, column: 7, scope: !2794)
!2794 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 4009, column: 6)
!2795 = !DILocation(line: 4009, column: 6, scope: !2755)
!2796 = !DILocation(line: 4009, column: 27, scope: !2794)
!2797 = !DILocation(line: 4009, column: 16, scope: !2794)
!2798 = !DILocation(line: 4009, column: 21, scope: !2794)
!2799 = !DILocation(line: 4009, column: 25, scope: !2794)
!2800 = !DILocation(line: 4010, column: 2, scope: !2755)
!2801 = !DILocation(line: 4011, column: 2, scope: !2755)
!2802 = !DILocation(line: 4014, column: 16, scope: !2716)
!2803 = !DILocation(line: 4014, column: 30, scope: !2716)
!2804 = !DILocation(line: 4014, column: 15, scope: !2716)
!2805 = !DILocation(line: 4015, column: 19, scope: !2716)
!2806 = !DILocation(line: 4015, column: 28, scope: !2716)
!2807 = !DILocation(line: 4015, column: 36, scope: !2716)
!2808 = !DILocation(line: 4015, column: 26, scope: !2716)
!2809 = !DILocation(line: 4015, column: 12, scope: !2716)
!2810 = !DILocation(line: 4015, column: 11, scope: !2716)
!2811 = !DILocation(line: 4016, column: 7, scope: !2716)
!2812 = !DILocation(line: 4018, column: 9, scope: !2813)
!2813 = distinct !DILexicalBlock(scope: !2366, file: !3, line: 4018, column: 9)
!2814 = !DILocation(line: 4018, column: 9, scope: !2366)
!2815 = !DILocation(line: 4018, column: 25, scope: !2813)
!2816 = !DILocation(line: 4018, column: 24, scope: !2813)
!2817 = !DILocation(line: 4018, column: 23, scope: !2813)
!2818 = !DILocation(line: 4018, column: 19, scope: !2813)
!2819 = !DILocation(line: 4021, column: 15, scope: !2366)
!2820 = !DILocation(line: 4021, column: 20, scope: !2366)
!2821 = !DILocation(line: 4021, column: 27, scope: !2366)
!2822 = !DILocation(line: 4021, column: 26, scope: !2366)
!2823 = !DILocation(line: 4021, column: 14, scope: !2366)
!2824 = !DILocation(line: 4022, column: 9, scope: !2825)
!2825 = distinct !DILexicalBlock(scope: !2366, file: !3, line: 4022, column: 9)
!2826 = !DILocation(line: 4022, column: 14, scope: !2825)
!2827 = !DILocation(line: 4022, column: 21, scope: !2825)
!2828 = !DILocation(line: 4022, column: 20, scope: !2825)
!2829 = !DILocation(line: 4022, column: 9, scope: !2366)
!2830 = !DILocation(line: 4022, column: 42, scope: !2825)
!2831 = !DILocation(line: 4022, column: 47, scope: !2825)
!2832 = !DILocation(line: 4022, column: 41, scope: !2825)
!2833 = !DILocation(line: 4022, column: 32, scope: !2825)
!2834 = !DILocation(line: 4026, column: 9, scope: !2366)
!2835 = !DILocation(line: 4026, column: 14, scope: !2366)
!2836 = !DILocation(line: 4026, column: 8, scope: !2366)
!2837 = !DILocation(line: 4030, column: 10, scope: !2838)
!2838 = distinct !DILexicalBlock(scope: !2366, file: !3, line: 4030, column: 9)
!2839 = !DILocation(line: 4030, column: 21, scope: !2838)
!2840 = !DILocation(line: 4030, column: 19, scope: !2838)
!2841 = !DILocation(line: 4031, column: 6, scope: !2838)
!2842 = !DILocation(line: 4031, column: 10, scope: !2838)
!2843 = !DILocation(line: 4031, column: 15, scope: !2838)
!2844 = !DILocation(line: 4031, column: 13, scope: !2838)
!2845 = !DILocation(line: 4031, column: 19, scope: !2838)
!2846 = !DILocation(line: 4031, column: 22, scope: !2838)
!2847 = !DILocation(line: 4031, column: 30, scope: !2838)
!2848 = !DILocation(line: 4030, column: 9, scope: !2366)
!2849 = !DILocalVariable(name: "need", scope: !2850, file: !3, line: 4034, type: !31)
!2850 = distinct !DILexicalBlock(scope: !2838, file: !3, line: 4031, column: 35)
!2851 = !DILocation(line: 4034, column: 11, scope: !2850)
!2852 = !DILocation(line: 4034, column: 16, scope: !2850)
!2853 = !DILocation(line: 4034, column: 30, scope: !2850)
!2854 = !DILocation(line: 4035, column: 11, scope: !2850)
!2855 = !DILocation(line: 4035, column: 10, scope: !2850)
!2856 = !DILocation(line: 4036, column: 11, scope: !2857)
!2857 = distinct !DILexicalBlock(scope: !2850, file: !3, line: 4036, column: 11)
!2858 = !DILocation(line: 4036, column: 15, scope: !2857)
!2859 = !DILocation(line: 4036, column: 28, scope: !2857)
!2860 = !DILocation(line: 4036, column: 11, scope: !2850)
!2861 = !DILocation(line: 4038, column: 26, scope: !2862)
!2862 = distinct !DILexicalBlock(scope: !2857, file: !3, line: 4036, column: 46)
!2863 = !DILocation(line: 4038, column: 30, scope: !2862)
!2864 = !DILocation(line: 4038, column: 19, scope: !2862)
!2865 = !DILocation(line: 4038, column: 11, scope: !2862)
!2866 = !DILocation(line: 4038, column: 10, scope: !2862)
!2867 = !DILocation(line: 4039, column: 6, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2862, file: !3, line: 4039, column: 6)
!2869 = !DILocation(line: 4039, column: 14, scope: !2868)
!2870 = !DILocation(line: 4039, column: 6, scope: !2862)
!2871 = !DILocation(line: 4040, column: 5, scope: !2872)
!2872 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 4039, column: 22)
!2873 = !DILocation(line: 4040, column: 11, scope: !2872)
!2874 = !DILocation(line: 4041, column: 4, scope: !2872)
!2875 = !DILocation(line: 4042, column: 6, scope: !2862)
!2876 = !DILocation(line: 4042, column: 5, scope: !2862)
!2877 = !DILocation(line: 4043, column: 2, scope: !2862)
!2878 = !DILocation(line: 4044, column: 7, scope: !2850)
!2879 = !DILocation(line: 4046, column: 23, scope: !2366)
!2880 = !DILocation(line: 4046, column: 27, scope: !2366)
!2881 = !DILocation(line: 4046, column: 15, scope: !2366)
!2882 = !DILocation(line: 4046, column: 5, scope: !2366)
!2883 = !DILocation(line: 4046, column: 10, scope: !2366)
!2884 = !DILocation(line: 4046, column: 14, scope: !2366)
!2885 = !DILocation(line: 4047, column: 19, scope: !2366)
!2886 = !DILocation(line: 4047, column: 24, scope: !2366)
!2887 = !DILocation(line: 4047, column: 5, scope: !2366)
!2888 = !DILocation(line: 4047, column: 10, scope: !2366)
!2889 = !DILocation(line: 4047, column: 18, scope: !2366)
!2890 = !DILocation(line: 4056, column: 31, scope: !2366)
!2891 = !DILocation(line: 4056, column: 36, scope: !2366)
!2892 = !DILocation(line: 4056, column: 41, scope: !2366)
!2893 = !DILocation(line: 4057, column: 10, scope: !2366)
!2894 = !DILocation(line: 4057, column: 15, scope: !2366)
!2895 = !DILocation(line: 4057, column: 20, scope: !2366)
!2896 = !DILocation(line: 4058, column: 10, scope: !2366)
!2897 = !DILocation(line: 4058, column: 20, scope: !2366)
!2898 = !DILocation(line: 4058, column: 25, scope: !2366)
!2899 = !DILocation(line: 4056, column: 17, scope: !2366)
!2900 = !DILocation(line: 4059, column: 9, scope: !2366)
!2901 = !DILocation(line: 4056, column: 5, scope: !2366)
!2902 = !DILocation(line: 4056, column: 10, scope: !2366)
!2903 = !DILocation(line: 4056, column: 16, scope: !2366)
!2904 = !DILocation(line: 4060, column: 9, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2366, file: !3, line: 4060, column: 9)
!2906 = !DILocation(line: 4060, column: 14, scope: !2905)
!2907 = !DILocation(line: 4060, column: 20, scope: !2905)
!2908 = !DILocation(line: 4060, column: 9, scope: !2366)
!2909 = !DILocation(line: 4061, column: 20, scope: !2910)
!2910 = distinct !DILexicalBlock(scope: !2905, file: !3, line: 4060, column: 24)
!2911 = !DILocation(line: 4061, column: 25, scope: !2910)
!2912 = !DILocation(line: 4061, column: 19, scope: !2910)
!2913 = !DILocation(line: 4061, column: 7, scope: !2910)
!2914 = !DILocation(line: 4061, column: 12, scope: !2910)
!2915 = !DILocation(line: 4061, column: 18, scope: !2910)
!2916 = !DILocation(line: 4062, column: 7, scope: !2910)
!2917 = !DILocation(line: 4062, column: 12, scope: !2910)
!2918 = !DILocation(line: 4062, column: 16, scope: !2910)
!2919 = !DILocation(line: 4063, column: 7, scope: !2910)
!2920 = !DILocation(line: 4071, column: 12, scope: !2366)
!2921 = !DILocation(line: 4072, column: 9, scope: !2922)
!2922 = distinct !DILexicalBlock(scope: !2366, file: !3, line: 4072, column: 9)
!2923 = !DILocation(line: 4072, column: 14, scope: !2922)
!2924 = !DILocation(line: 4072, column: 19, scope: !2922)
!2925 = !DILocation(line: 4072, column: 12, scope: !2922)
!2926 = !DILocation(line: 4072, column: 9, scope: !2366)
!2927 = !DILocation(line: 4078, column: 6, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2929, file: !3, line: 4078, column: 6)
!2929 = distinct !DILexicalBlock(scope: !2922, file: !3, line: 4072, column: 24)
!2930 = !DILocation(line: 4078, column: 11, scope: !2928)
!2931 = !DILocation(line: 4078, column: 18, scope: !2928)
!2932 = !DILocation(line: 4078, column: 17, scope: !2928)
!2933 = !DILocation(line: 4078, column: 6, scope: !2929)
!2934 = !DILocation(line: 4079, column: 29, scope: !2928)
!2935 = !DILocation(line: 4079, column: 34, scope: !2928)
!2936 = !DILocation(line: 4079, column: 16, scope: !2928)
!2937 = !DILocation(line: 4079, column: 4, scope: !2928)
!2938 = !DILocation(line: 4079, column: 9, scope: !2928)
!2939 = !DILocation(line: 4079, column: 15, scope: !2928)
!2940 = !DILocation(line: 4080, column: 14, scope: !2929)
!2941 = !DILocation(line: 4080, column: 19, scope: !2929)
!2942 = !DILocation(line: 4080, column: 24, scope: !2929)
!2943 = !DILocation(line: 4080, column: 29, scope: !2929)
!2944 = !DILocation(line: 4080, column: 34, scope: !2929)
!2945 = !DILocation(line: 4080, column: 52, scope: !2929)
!2946 = !DILocation(line: 4080, column: 2, scope: !2929)
!2947 = !DILocation(line: 4111, column: 7, scope: !2929)
!2948 = !DILocation(line: 4114, column: 30, scope: !2366)
!2949 = !DILocation(line: 4114, column: 35, scope: !2366)
!2950 = !DILocation(line: 4114, column: 40, scope: !2366)
!2951 = !DILocation(line: 4114, column: 17, scope: !2366)
!2952 = !DILocation(line: 4114, column: 5, scope: !2366)
!2953 = !DILocation(line: 4114, column: 10, scope: !2366)
!2954 = !DILocation(line: 4114, column: 16, scope: !2366)
!2955 = !DILocation(line: 4117, column: 5, scope: !2366)
!2956 = !DILocation(line: 4123, column: 9, scope: !2957)
!2957 = distinct !DILexicalBlock(scope: !2366, file: !3, line: 4123, column: 9)
!2958 = !DILocation(line: 4123, column: 21, scope: !2957)
!2959 = !DILocation(line: 4123, column: 24, scope: !2957)
!2960 = !DILocation(line: 4127, column: 6, scope: !2957)
!2961 = !DILocation(line: 4127, column: 11, scope: !2957)
!2962 = !DILocation(line: 4127, column: 10, scope: !2957)
!2963 = !DILocation(line: 4127, column: 17, scope: !2957)
!2964 = !DILocation(line: 4127, column: 30, scope: !2957)
!2965 = !DILocation(line: 4123, column: 9, scope: !2366)
!2966 = !DILocation(line: 4128, column: 11, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2968, file: !3, line: 4128, column: 11)
!2968 = distinct !DILexicalBlock(scope: !2957, file: !3, line: 4127, column: 35)
!2969 = !DILocation(line: 4128, column: 16, scope: !2967)
!2970 = !DILocation(line: 4128, column: 21, scope: !2967)
!2971 = !DILocation(line: 4128, column: 11, scope: !2968)
!2972 = !DILocation(line: 4128, column: 40, scope: !2967)
!2973 = !DILocation(line: 4128, column: 45, scope: !2967)
!2974 = !DILocation(line: 4128, column: 49, scope: !2967)
!2975 = !DILocation(line: 4129, column: 12, scope: !2967)
!2976 = !DILocation(line: 4129, column: 17, scope: !2967)
!2977 = !DILocation(line: 4129, column: 21, scope: !2967)
!2978 = !DILocation(line: 4130, column: 7, scope: !2968)
!2979 = !DILocation(line: 4131, column: 5, scope: !2366)
!2980 = !DILocation(line: 4133, column: 7, scope: !2981)
!2981 = distinct !DILexicalBlock(scope: !2322, file: !3, line: 4133, column: 7)
!2982 = !DILocation(line: 4133, column: 15, scope: !2981)
!2983 = !DILocation(line: 4133, column: 7, scope: !2322)
!2984 = !DILocation(line: 4133, column: 28, scope: !2981)
!2985 = !DILocation(line: 4133, column: 23, scope: !2981)
!2986 = !DILocation(line: 4138, column: 10, scope: !2322)
!2987 = !DILocation(line: 4138, column: 3, scope: !2322)
!2988 = distinct !DISubprogram(name: "decNumberAdd", scope: !3, file: !3, line: 770, type: !2989, scopeLine: 771, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!2989 = !DISubroutineType(types: !2990)
!2990 = !{!47, !47, !267, !267, !269}
!2991 = !DILocalVariable(name: "res", arg: 1, scope: !2988, file: !3, line: 770, type: !47)
!2992 = !DILocation(line: 770, column: 37, scope: !2988)
!2993 = !DILocalVariable(name: "lhs", arg: 2, scope: !2988, file: !3, line: 770, type: !267)
!2994 = !DILocation(line: 770, column: 59, scope: !2988)
!2995 = !DILocalVariable(name: "rhs", arg: 3, scope: !2988, file: !3, line: 771, type: !267)
!2996 = !DILocation(line: 771, column: 22, scope: !2988)
!2997 = !DILocalVariable(name: "set", arg: 4, scope: !2988, file: !3, line: 771, type: !269)
!2998 = !DILocation(line: 771, column: 39, scope: !2988)
!2999 = !DILocalVariable(name: "status", scope: !2988, file: !3, line: 772, type: !36)
!3000 = !DILocation(line: 772, column: 8, scope: !2988)
!3001 = !DILocation(line: 773, column: 12, scope: !2988)
!3002 = !DILocation(line: 773, column: 17, scope: !2988)
!3003 = !DILocation(line: 773, column: 22, scope: !2988)
!3004 = !DILocation(line: 773, column: 27, scope: !2988)
!3005 = !DILocation(line: 773, column: 3, scope: !2988)
!3006 = !DILocation(line: 774, column: 7, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !2988, file: !3, line: 774, column: 7)
!3008 = !DILocation(line: 774, column: 13, scope: !3007)
!3009 = !DILocation(line: 774, column: 7, scope: !2988)
!3010 = !DILocation(line: 774, column: 28, scope: !3007)
!3011 = !DILocation(line: 774, column: 33, scope: !3007)
!3012 = !DILocation(line: 774, column: 41, scope: !3007)
!3013 = !DILocation(line: 774, column: 18, scope: !3007)
!3014 = !DILocation(line: 778, column: 10, scope: !2988)
!3015 = !DILocation(line: 778, column: 3, scope: !2988)
!3016 = distinct !DISubprogram(name: "decNumberAnd", scope: !3, file: !3, line: 796, type: !2989, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!3017 = !DILocalVariable(name: "res", arg: 1, scope: !3016, file: !3, line: 796, type: !47)
!3018 = !DILocation(line: 796, column: 37, scope: !3016)
!3019 = !DILocalVariable(name: "lhs", arg: 2, scope: !3016, file: !3, line: 796, type: !267)
!3020 = !DILocation(line: 796, column: 59, scope: !3016)
!3021 = !DILocalVariable(name: "rhs", arg: 3, scope: !3016, file: !3, line: 797, type: !267)
!3022 = !DILocation(line: 797, column: 22, scope: !3016)
!3023 = !DILocalVariable(name: "set", arg: 4, scope: !3016, file: !3, line: 797, type: !269)
!3024 = !DILocation(line: 797, column: 39, scope: !3016)
!3025 = !DILocalVariable(name: "ua", scope: !3016, file: !3, line: 798, type: !301)
!3026 = !DILocation(line: 798, column: 15, scope: !3016)
!3027 = !DILocalVariable(name: "ub", scope: !3016, file: !3, line: 798, type: !301)
!3028 = !DILocation(line: 798, column: 20, scope: !3016)
!3029 = !DILocalVariable(name: "msua", scope: !3016, file: !3, line: 799, type: !301)
!3030 = !DILocation(line: 799, column: 15, scope: !3016)
!3031 = !DILocalVariable(name: "msub", scope: !3016, file: !3, line: 799, type: !301)
!3032 = !DILocation(line: 799, column: 22, scope: !3016)
!3033 = !DILocalVariable(name: "uc", scope: !3016, file: !3, line: 800, type: !43)
!3034 = !DILocation(line: 800, column: 9, scope: !3016)
!3035 = !DILocalVariable(name: "msuc", scope: !3016, file: !3, line: 800, type: !43)
!3036 = !DILocation(line: 800, column: 15, scope: !3016)
!3037 = !DILocalVariable(name: "msudigs", scope: !3016, file: !3, line: 801, type: !31)
!3038 = !DILocation(line: 801, column: 7, scope: !3016)
!3039 = !DILocation(line: 806, column: 7, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !3016, file: !3, line: 806, column: 7)
!3041 = !DILocation(line: 806, column: 12, scope: !3040)
!3042 = !DILocation(line: 806, column: 20, scope: !3040)
!3043 = !DILocation(line: 806, column: 24, scope: !3040)
!3044 = !DILocation(line: 806, column: 27, scope: !3040)
!3045 = !DILocation(line: 806, column: 51, scope: !3040)
!3046 = !DILocation(line: 806, column: 54, scope: !3040)
!3047 = !DILocation(line: 807, column: 4, scope: !3040)
!3048 = !DILocation(line: 807, column: 7, scope: !3040)
!3049 = !DILocation(line: 807, column: 12, scope: !3040)
!3050 = !DILocation(line: 807, column: 20, scope: !3040)
!3051 = !DILocation(line: 807, column: 24, scope: !3040)
!3052 = !DILocation(line: 807, column: 27, scope: !3040)
!3053 = !DILocation(line: 807, column: 51, scope: !3040)
!3054 = !DILocation(line: 807, column: 54, scope: !3040)
!3055 = !DILocation(line: 806, column: 7, scope: !3016)
!3056 = !DILocation(line: 808, column: 15, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !3040, file: !3, line: 807, column: 80)
!3058 = !DILocation(line: 808, column: 43, scope: !3057)
!3059 = !DILocation(line: 808, column: 5, scope: !3057)
!3060 = !DILocation(line: 809, column: 12, scope: !3057)
!3061 = !DILocation(line: 809, column: 5, scope: !3057)
!3062 = !DILocation(line: 813, column: 6, scope: !3016)
!3063 = !DILocation(line: 813, column: 11, scope: !3016)
!3064 = !DILocation(line: 813, column: 5, scope: !3016)
!3065 = !DILocation(line: 814, column: 6, scope: !3016)
!3066 = !DILocation(line: 814, column: 11, scope: !3016)
!3067 = !DILocation(line: 814, column: 5, scope: !3016)
!3068 = !DILocation(line: 815, column: 6, scope: !3016)
!3069 = !DILocation(line: 815, column: 11, scope: !3016)
!3070 = !DILocation(line: 815, column: 5, scope: !3016)
!3071 = !DILocation(line: 816, column: 8, scope: !3016)
!3072 = !DILocation(line: 816, column: 11, scope: !3016)
!3073 = !DILocation(line: 816, column: 10, scope: !3016)
!3074 = !DILocation(line: 816, column: 27, scope: !3016)
!3075 = !DILocation(line: 816, column: 7, scope: !3016)
!3076 = !DILocation(line: 817, column: 8, scope: !3016)
!3077 = !DILocation(line: 817, column: 11, scope: !3016)
!3078 = !DILocation(line: 817, column: 10, scope: !3016)
!3079 = !DILocation(line: 817, column: 27, scope: !3016)
!3080 = !DILocation(line: 817, column: 7, scope: !3016)
!3081 = !DILocation(line: 818, column: 8, scope: !3016)
!3082 = !DILocation(line: 818, column: 11, scope: !3016)
!3083 = !DILocation(line: 818, column: 10, scope: !3016)
!3084 = !DILocation(line: 818, column: 27, scope: !3016)
!3085 = !DILocation(line: 818, column: 7, scope: !3016)
!3086 = !DILocation(line: 819, column: 11, scope: !3016)
!3087 = !DILocation(line: 819, column: 10, scope: !3016)
!3088 = !DILocation(line: 820, column: 3, scope: !3016)
!3089 = !DILocation(line: 820, column: 10, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 820, column: 3)
!3091 = distinct !DILexicalBlock(scope: !3016, file: !3, line: 820, column: 3)
!3092 = !DILocation(line: 820, column: 14, scope: !3090)
!3093 = !DILocation(line: 820, column: 12, scope: !3090)
!3094 = !DILocation(line: 820, column: 3, scope: !3091)
!3095 = !DILocalVariable(name: "a", scope: !3096, file: !3, line: 821, type: !39)
!3096 = distinct !DILexicalBlock(scope: !3090, file: !3, line: 820, column: 38)
!3097 = !DILocation(line: 821, column: 10, scope: !3096)
!3098 = !DILocalVariable(name: "b", scope: !3096, file: !3, line: 821, type: !39)
!3099 = !DILocation(line: 821, column: 13, scope: !3096)
!3100 = !DILocation(line: 822, column: 9, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3096, file: !3, line: 822, column: 9)
!3102 = !DILocation(line: 822, column: 12, scope: !3101)
!3103 = !DILocation(line: 822, column: 11, scope: !3101)
!3104 = !DILocation(line: 822, column: 9, scope: !3096)
!3105 = !DILocation(line: 822, column: 19, scope: !3101)
!3106 = !DILocation(line: 822, column: 18, scope: !3101)
!3107 = !DILocation(line: 823, column: 14, scope: !3101)
!3108 = !DILocation(line: 823, column: 13, scope: !3101)
!3109 = !DILocation(line: 823, column: 12, scope: !3101)
!3110 = !DILocation(line: 824, column: 9, scope: !3111)
!3111 = distinct !DILexicalBlock(scope: !3096, file: !3, line: 824, column: 9)
!3112 = !DILocation(line: 824, column: 12, scope: !3111)
!3113 = !DILocation(line: 824, column: 11, scope: !3111)
!3114 = !DILocation(line: 824, column: 9, scope: !3096)
!3115 = !DILocation(line: 824, column: 19, scope: !3111)
!3116 = !DILocation(line: 824, column: 18, scope: !3111)
!3117 = !DILocation(line: 825, column: 14, scope: !3111)
!3118 = !DILocation(line: 825, column: 13, scope: !3111)
!3119 = !DILocation(line: 825, column: 12, scope: !3111)
!3120 = !DILocation(line: 826, column: 6, scope: !3096)
!3121 = !DILocation(line: 826, column: 8, scope: !3096)
!3122 = !DILocation(line: 827, column: 9, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !3096, file: !3, line: 827, column: 9)
!3124 = !DILocation(line: 827, column: 11, scope: !3123)
!3125 = !DILocation(line: 827, column: 10, scope: !3123)
!3126 = !DILocation(line: 827, column: 9, scope: !3096)
!3127 = !DILocalVariable(name: "i", scope: !3128, file: !3, line: 828, type: !31)
!3128 = distinct !DILexicalBlock(scope: !3123, file: !3, line: 827, column: 14)
!3129 = !DILocation(line: 828, column: 11, scope: !3128)
!3130 = !DILocalVariable(name: "j", scope: !3128, file: !3, line: 828, type: !31)
!3131 = !DILocation(line: 828, column: 14, scope: !3128)
!3132 = !DILocation(line: 829, column: 8, scope: !3128)
!3133 = !DILocation(line: 829, column: 10, scope: !3128)
!3134 = !DILocation(line: 831, column: 13, scope: !3135)
!3135 = distinct !DILexicalBlock(scope: !3128, file: !3, line: 831, column: 7)
!3136 = !DILocation(line: 831, column: 12, scope: !3135)
!3137 = !DILocation(line: 831, column: 17, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !3135, file: !3, line: 831, column: 7)
!3139 = !DILocation(line: 831, column: 18, scope: !3138)
!3140 = !DILocation(line: 831, column: 7, scope: !3135)
!3141 = !DILocation(line: 832, column: 6, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !3143, file: !3, line: 832, column: 6)
!3143 = distinct !DILexicalBlock(scope: !3138, file: !3, line: 831, column: 33)
!3144 = !DILocation(line: 832, column: 8, scope: !3142)
!3145 = !DILocation(line: 832, column: 7, scope: !3142)
!3146 = !DILocation(line: 832, column: 9, scope: !3142)
!3147 = !DILocation(line: 832, column: 6, scope: !3143)
!3148 = !DILocation(line: 832, column: 18, scope: !3142)
!3149 = !DILocation(line: 832, column: 17, scope: !3142)
!3150 = !DILocation(line: 832, column: 34, scope: !3142)
!3151 = !DILocation(line: 832, column: 27, scope: !3142)
!3152 = !DILocation(line: 832, column: 21, scope: !3142)
!3153 = !DILocation(line: 832, column: 20, scope: !3142)
!3154 = !DILocation(line: 832, column: 14, scope: !3142)
!3155 = !DILocation(line: 832, column: 16, scope: !3142)
!3156 = !DILocation(line: 832, column: 13, scope: !3142)
!3157 = !DILocation(line: 833, column: 4, scope: !3143)
!3158 = !DILocation(line: 833, column: 5, scope: !3143)
!3159 = !DILocation(line: 833, column: 3, scope: !3143)
!3160 = !DILocation(line: 834, column: 4, scope: !3143)
!3161 = !DILocation(line: 834, column: 5, scope: !3143)
!3162 = !DILocation(line: 834, column: 3, scope: !3143)
!3163 = !DILocation(line: 835, column: 5, scope: !3143)
!3164 = !DILocation(line: 835, column: 6, scope: !3143)
!3165 = !DILocation(line: 835, column: 3, scope: !3143)
!3166 = !DILocation(line: 836, column: 4, scope: !3143)
!3167 = !DILocation(line: 836, column: 5, scope: !3143)
!3168 = !DILocation(line: 836, column: 3, scope: !3143)
!3169 = !DILocation(line: 837, column: 6, scope: !3170)
!3170 = distinct !DILexicalBlock(scope: !3143, file: !3, line: 837, column: 6)
!3171 = !DILocation(line: 837, column: 7, scope: !3170)
!3172 = !DILocation(line: 837, column: 6, scope: !3143)
!3173 = !DILocation(line: 838, column: 14, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3170, file: !3, line: 837, column: 11)
!3175 = !DILocation(line: 838, column: 42, scope: !3174)
!3176 = !DILocation(line: 838, column: 4, scope: !3174)
!3177 = !DILocation(line: 839, column: 11, scope: !3174)
!3178 = !DILocation(line: 839, column: 4, scope: !3174)
!3179 = !DILocation(line: 841, column: 6, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !3143, file: !3, line: 841, column: 6)
!3181 = !DILocation(line: 841, column: 10, scope: !3180)
!3182 = !DILocation(line: 841, column: 8, scope: !3180)
!3183 = !DILocation(line: 841, column: 15, scope: !3180)
!3184 = !DILocation(line: 841, column: 18, scope: !3180)
!3185 = !DILocation(line: 841, column: 21, scope: !3180)
!3186 = !DILocation(line: 841, column: 28, scope: !3180)
!3187 = !DILocation(line: 841, column: 19, scope: !3180)
!3188 = !DILocation(line: 841, column: 6, scope: !3143)
!3189 = !DILocation(line: 841, column: 32, scope: !3180)
!3190 = !DILocation(line: 842, column: 2, scope: !3143)
!3191 = !DILocation(line: 831, column: 29, scope: !3138)
!3192 = !DILocation(line: 831, column: 7, scope: !3138)
!3193 = distinct !{!3193, !3140, !3194}
!3194 = !DILocation(line: 842, column: 2, scope: !3135)
!3195 = !DILocation(line: 843, column: 7, scope: !3128)
!3196 = !DILocation(line: 844, column: 5, scope: !3096)
!3197 = !DILocation(line: 820, column: 22, scope: !3090)
!3198 = !DILocation(line: 820, column: 28, scope: !3090)
!3199 = !DILocation(line: 820, column: 34, scope: !3090)
!3200 = !DILocation(line: 820, column: 3, scope: !3090)
!3201 = distinct !{!3201, !3094, !3202}
!3202 = !DILocation(line: 844, column: 5, scope: !3091)
!3203 = !DILocation(line: 846, column: 28, scope: !3016)
!3204 = !DILocation(line: 846, column: 33, scope: !3016)
!3205 = !DILocation(line: 846, column: 38, scope: !3016)
!3206 = !DILocation(line: 846, column: 41, scope: !3016)
!3207 = !DILocation(line: 846, column: 46, scope: !3016)
!3208 = !DILocation(line: 846, column: 40, scope: !3016)
!3209 = !DILocation(line: 846, column: 15, scope: !3016)
!3210 = !DILocation(line: 846, column: 3, scope: !3016)
!3211 = !DILocation(line: 846, column: 8, scope: !3016)
!3212 = !DILocation(line: 846, column: 14, scope: !3016)
!3213 = !DILocation(line: 847, column: 3, scope: !3016)
!3214 = !DILocation(line: 847, column: 8, scope: !3016)
!3215 = !DILocation(line: 847, column: 16, scope: !3016)
!3216 = !DILocation(line: 848, column: 3, scope: !3016)
!3217 = !DILocation(line: 848, column: 8, scope: !3016)
!3218 = !DILocation(line: 848, column: 12, scope: !3016)
!3219 = !DILocation(line: 849, column: 10, scope: !3016)
!3220 = !DILocation(line: 849, column: 3, scope: !3016)
!3221 = !DILocation(line: 850, column: 3, scope: !3016)
!3222 = distinct !DISubprogram(name: "decNumberCompare", scope: !3, file: !3, line: 864, type: !2989, scopeLine: 865, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!3223 = !DILocalVariable(name: "res", arg: 1, scope: !3222, file: !3, line: 864, type: !47)
!3224 = !DILocation(line: 864, column: 41, scope: !3222)
!3225 = !DILocalVariable(name: "lhs", arg: 2, scope: !3222, file: !3, line: 864, type: !267)
!3226 = !DILocation(line: 864, column: 63, scope: !3222)
!3227 = !DILocalVariable(name: "rhs", arg: 3, scope: !3222, file: !3, line: 865, type: !267)
!3228 = !DILocation(line: 865, column: 26, scope: !3222)
!3229 = !DILocalVariable(name: "set", arg: 4, scope: !3222, file: !3, line: 865, type: !269)
!3230 = !DILocation(line: 865, column: 43, scope: !3222)
!3231 = !DILocalVariable(name: "status", scope: !3222, file: !3, line: 866, type: !36)
!3232 = !DILocation(line: 866, column: 8, scope: !3222)
!3233 = !DILocation(line: 867, column: 16, scope: !3222)
!3234 = !DILocation(line: 867, column: 21, scope: !3222)
!3235 = !DILocation(line: 867, column: 26, scope: !3222)
!3236 = !DILocation(line: 867, column: 31, scope: !3222)
!3237 = !DILocation(line: 867, column: 3, scope: !3222)
!3238 = !DILocation(line: 868, column: 7, scope: !3239)
!3239 = distinct !DILexicalBlock(scope: !3222, file: !3, line: 868, column: 7)
!3240 = !DILocation(line: 868, column: 13, scope: !3239)
!3241 = !DILocation(line: 868, column: 7, scope: !3222)
!3242 = !DILocation(line: 868, column: 28, scope: !3239)
!3243 = !DILocation(line: 868, column: 33, scope: !3239)
!3244 = !DILocation(line: 868, column: 41, scope: !3239)
!3245 = !DILocation(line: 868, column: 18, scope: !3239)
!3246 = !DILocation(line: 869, column: 10, scope: !3222)
!3247 = !DILocation(line: 869, column: 3, scope: !3222)
!3248 = distinct !DISubprogram(name: "decCompareOp", scope: !3, file: !3, line: 5998, type: !2323, scopeLine: 6000, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!3249 = !DILocalVariable(name: "res", arg: 1, scope: !3248, file: !3, line: 5998, type: !47)
!3250 = !DILocation(line: 5998, column: 37, scope: !3248)
!3251 = !DILocalVariable(name: "lhs", arg: 2, scope: !3248, file: !3, line: 5998, type: !267)
!3252 = !DILocation(line: 5998, column: 59, scope: !3248)
!3253 = !DILocalVariable(name: "rhs", arg: 3, scope: !3248, file: !3, line: 5999, type: !267)
!3254 = !DILocation(line: 5999, column: 22, scope: !3248)
!3255 = !DILocalVariable(name: "set", arg: 4, scope: !3248, file: !3, line: 5999, type: !269)
!3256 = !DILocation(line: 5999, column: 39, scope: !3248)
!3257 = !DILocalVariable(name: "op", arg: 5, scope: !3248, file: !3, line: 6000, type: !44)
!3258 = !DILocation(line: 6000, column: 10, scope: !3248)
!3259 = !DILocalVariable(name: "status", arg: 6, scope: !3248, file: !3, line: 6000, type: !59)
!3260 = !DILocation(line: 6000, column: 20, scope: !3248)
!3261 = !DILocalVariable(name: "result", scope: !3248, file: !3, line: 6005, type: !31)
!3262 = !DILocation(line: 6005, column: 7, scope: !3248)
!3263 = !DILocalVariable(name: "merged", scope: !3248, file: !3, line: 6006, type: !44)
!3264 = !DILocation(line: 6006, column: 9, scope: !3248)
!3265 = !DILocation(line: 6012, column: 3, scope: !3248)
!3266 = !DILocation(line: 6031, column: 9, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !3268, file: !3, line: 6031, column: 9)
!3268 = distinct !DILexicalBlock(scope: !3248, file: !3, line: 6012, column: 6)
!3269 = !DILocation(line: 6031, column: 11, scope: !3267)
!3270 = !DILocation(line: 6031, column: 9, scope: !3268)
!3271 = !DILocation(line: 6032, column: 11, scope: !3272)
!3272 = distinct !DILexicalBlock(scope: !3273, file: !3, line: 6032, column: 11)
!3273 = distinct !DILexicalBlock(scope: !3267, file: !3, line: 6031, column: 24)
!3274 = !DILocation(line: 6032, column: 39, scope: !3272)
!3275 = !DILocation(line: 6032, column: 38, scope: !3272)
!3276 = !DILocation(line: 6032, column: 36, scope: !3272)
!3277 = !DILocation(line: 6032, column: 11, scope: !3273)
!3278 = !DILocation(line: 6033, column: 8, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3272, file: !3, line: 6032, column: 65)
!3280 = !DILocation(line: 6034, column: 2, scope: !3279)
!3281 = !DILocation(line: 6036, column: 12, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3273, file: !3, line: 6036, column: 11)
!3283 = !DILocation(line: 6036, column: 11, scope: !3282)
!3284 = !DILocation(line: 6036, column: 39, scope: !3282)
!3285 = !DILocation(line: 6036, column: 37, scope: !3282)
!3286 = !DILocation(line: 6036, column: 11, scope: !3273)
!3287 = !DILocation(line: 6037, column: 8, scope: !3288)
!3288 = distinct !DILexicalBlock(scope: !3282, file: !3, line: 6036, column: 65)
!3289 = !DILocation(line: 6038, column: 2, scope: !3288)
!3290 = !DILocation(line: 6040, column: 7, scope: !3273)
!3291 = !DILocation(line: 6044, column: 13, scope: !3268)
!3292 = !DILocation(line: 6044, column: 18, scope: !3268)
!3293 = !DILocation(line: 6044, column: 25, scope: !3268)
!3294 = !DILocation(line: 6044, column: 30, scope: !3268)
!3295 = !DILocation(line: 6044, column: 23, scope: !3268)
!3296 = !DILocation(line: 6044, column: 36, scope: !3268)
!3297 = !DILocation(line: 6044, column: 12, scope: !3268)
!3298 = !DILocation(line: 6044, column: 11, scope: !3268)
!3299 = !DILocation(line: 6045, column: 9, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3268, file: !3, line: 6045, column: 9)
!3301 = !DILocation(line: 6045, column: 9, scope: !3268)
!3302 = !DILocation(line: 6046, column: 11, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3304, file: !3, line: 6046, column: 11)
!3304 = distinct !DILexicalBlock(scope: !3300, file: !3, line: 6045, column: 17)
!3305 = !DILocation(line: 6046, column: 13, scope: !3303)
!3306 = !DILocation(line: 6046, column: 11, scope: !3304)
!3307 = !DILocation(line: 6047, column: 17, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !3303, file: !3, line: 6047, column: 17)
!3309 = !DILocation(line: 6047, column: 19, scope: !3308)
!3310 = !DILocation(line: 6047, column: 17, scope: !3303)
!3311 = !DILocation(line: 6048, column: 3, scope: !3308)
!3312 = !DILocation(line: 6048, column: 9, scope: !3308)
!3313 = !DILocation(line: 6048, column: 2, scope: !3308)
!3314 = !DILocation(line: 6049, column: 17, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3308, file: !3, line: 6049, column: 17)
!3316 = !DILocation(line: 6049, column: 19, scope: !3315)
!3317 = !DILocation(line: 6049, column: 17, scope: !3308)
!3318 = !DILocation(line: 6052, column: 7, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3320, file: !3, line: 6052, column: 6)
!3320 = distinct !DILexicalBlock(scope: !3315, file: !3, line: 6049, column: 32)
!3321 = !DILocation(line: 6052, column: 6, scope: !3320)
!3322 = !DILocation(line: 6052, column: 34, scope: !3319)
!3323 = !DILocation(line: 6052, column: 28, scope: !3319)
!3324 = !DILocation(line: 6053, column: 13, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !3319, file: !3, line: 6053, column: 12)
!3326 = !DILocation(line: 6053, column: 12, scope: !3319)
!3327 = !DILocation(line: 6053, column: 40, scope: !3325)
!3328 = !DILocation(line: 6053, column: 34, scope: !3325)
!3329 = !DILocation(line: 6055, column: 12, scope: !3330)
!3330 = distinct !DILexicalBlock(scope: !3325, file: !3, line: 6055, column: 12)
!3331 = !DILocation(line: 6055, column: 33, scope: !3330)
!3332 = !DILocation(line: 6055, column: 36, scope: !3330)
!3333 = !DILocation(line: 6055, column: 12, scope: !3325)
!3334 = !DILocation(line: 6055, column: 64, scope: !3330)
!3335 = !DILocation(line: 6055, column: 58, scope: !3330)
!3336 = !DILocation(line: 6056, column: 12, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3330, file: !3, line: 6056, column: 12)
!3338 = !DILocation(line: 6056, column: 33, scope: !3337)
!3339 = !DILocation(line: 6056, column: 36, scope: !3337)
!3340 = !DILocation(line: 6056, column: 12, scope: !3330)
!3341 = !DILocation(line: 6056, column: 64, scope: !3337)
!3342 = !DILocation(line: 6056, column: 58, scope: !3337)
!3343 = !DILocation(line: 6059, column: 26, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3337, file: !3, line: 6057, column: 8)
!3345 = !DILocation(line: 6059, column: 31, scope: !3344)
!3346 = !DILocation(line: 6059, column: 36, scope: !3344)
!3347 = !DILocation(line: 6060, column: 5, scope: !3344)
!3348 = !DILocation(line: 6060, column: 10, scope: !3344)
!3349 = !DILocation(line: 6060, column: 15, scope: !3344)
!3350 = !DILocation(line: 6059, column: 11, scope: !3344)
!3351 = !DILocation(line: 6059, column: 10, scope: !3344)
!3352 = !DILocation(line: 6063, column: 6, scope: !3353)
!3353 = distinct !DILexicalBlock(scope: !3320, file: !3, line: 6063, column: 6)
!3354 = !DILocation(line: 6063, column: 6, scope: !3320)
!3355 = !DILocation(line: 6063, column: 40, scope: !3353)
!3356 = !DILocation(line: 6063, column: 39, scope: !3353)
!3357 = !DILocation(line: 6063, column: 38, scope: !3353)
!3358 = !DILocation(line: 6063, column: 32, scope: !3353)
!3359 = !DILocation(line: 6064, column: 2, scope: !3320)
!3360 = !DILocation(line: 6067, column: 17, scope: !3361)
!3361 = distinct !DILexicalBlock(scope: !3315, file: !3, line: 6067, column: 17)
!3362 = !DILocation(line: 6067, column: 24, scope: !3361)
!3363 = !DILocation(line: 6067, column: 17, scope: !3315)
!3364 = !DILocation(line: 6070, column: 7, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3366, file: !3, line: 6070, column: 6)
!3366 = distinct !DILexicalBlock(scope: !3361, file: !3, line: 6068, column: 13)
!3367 = !DILocation(line: 6070, column: 27, scope: !3365)
!3368 = !DILocation(line: 6070, column: 31, scope: !3365)
!3369 = !DILocation(line: 6070, column: 6, scope: !3366)
!3370 = !DILocation(line: 6072, column: 6, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3365, file: !3, line: 6070, column: 52)
!3372 = !DILocation(line: 6073, column: 8, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 6073, column: 8)
!3374 = !DILocation(line: 6073, column: 13, scope: !3373)
!3375 = !DILocation(line: 6073, column: 18, scope: !3373)
!3376 = !DILocation(line: 6073, column: 8, scope: !3371)
!3377 = !DILocation(line: 6073, column: 34, scope: !3373)
!3378 = !DILocation(line: 6073, column: 28, scope: !3373)
!3379 = !DILocation(line: 6074, column: 20, scope: !3373)
!3380 = !DILocation(line: 6075, column: 4, scope: !3371)
!3381 = !DILocation(line: 6078, column: 9, scope: !3304)
!3382 = !DILocation(line: 6079, column: 15, scope: !3304)
!3383 = !DILocation(line: 6079, column: 20, scope: !3304)
!3384 = !DILocation(line: 6079, column: 25, scope: !3304)
!3385 = !DILocation(line: 6079, column: 30, scope: !3304)
!3386 = !DILocation(line: 6079, column: 35, scope: !3304)
!3387 = !DILocation(line: 6079, column: 7, scope: !3304)
!3388 = !DILocation(line: 6080, column: 7, scope: !3304)
!3389 = !DILocation(line: 6083, column: 9, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3268, file: !3, line: 6083, column: 9)
!3391 = !DILocation(line: 6083, column: 11, scope: !3390)
!3392 = !DILocation(line: 6083, column: 24, scope: !3390)
!3393 = !DILocation(line: 6083, column: 27, scope: !3390)
!3394 = !DILocation(line: 6083, column: 29, scope: !3390)
!3395 = !DILocation(line: 6083, column: 9, scope: !3268)
!3396 = !DILocation(line: 6083, column: 61, scope: !3390)
!3397 = !DILocation(line: 6083, column: 66, scope: !3390)
!3398 = !DILocation(line: 6083, column: 50, scope: !3390)
!3399 = !DILocation(line: 6083, column: 49, scope: !3390)
!3400 = !DILocation(line: 6083, column: 43, scope: !3390)
!3401 = !DILocation(line: 6084, column: 29, scope: !3390)
!3402 = !DILocation(line: 6084, column: 34, scope: !3390)
!3403 = !DILocation(line: 6084, column: 18, scope: !3390)
!3404 = !DILocation(line: 6084, column: 17, scope: !3390)
!3405 = !DILocation(line: 6085, column: 5, scope: !3268)
!3406 = !DILocation(line: 6087, column: 7, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3248, file: !3, line: 6087, column: 7)
!3408 = !DILocation(line: 6087, column: 13, scope: !3407)
!3409 = !DILocation(line: 6087, column: 7, scope: !3248)
!3410 = !DILocation(line: 6087, column: 24, scope: !3407)
!3411 = !DILocation(line: 6087, column: 30, scope: !3407)
!3412 = !DILocation(line: 6087, column: 23, scope: !3407)
!3413 = !DILocation(line: 6089, column: 9, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3415, file: !3, line: 6089, column: 9)
!3415 = distinct !DILexicalBlock(scope: !3407, file: !3, line: 6088, column: 9)
!3416 = !DILocation(line: 6089, column: 11, scope: !3414)
!3417 = !DILocation(line: 6089, column: 21, scope: !3414)
!3418 = !DILocation(line: 6089, column: 24, scope: !3414)
!3419 = !DILocation(line: 6089, column: 26, scope: !3414)
!3420 = !DILocation(line: 6089, column: 36, scope: !3414)
!3421 = !DILocation(line: 6089, column: 38, scope: !3414)
!3422 = !DILocation(line: 6089, column: 40, scope: !3414)
!3423 = !DILocation(line: 6089, column: 9, scope: !3415)
!3424 = !DILocation(line: 6090, column: 11, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3426, file: !3, line: 6090, column: 11)
!3426 = distinct !DILexicalBlock(scope: !3414, file: !3, line: 6089, column: 53)
!3427 = !DILocation(line: 6090, column: 13, scope: !3425)
!3428 = !DILocation(line: 6090, column: 25, scope: !3425)
!3429 = !DILocation(line: 6090, column: 28, scope: !3425)
!3430 = !DILocation(line: 6090, column: 34, scope: !3425)
!3431 = !DILocation(line: 6090, column: 11, scope: !3426)
!3432 = !DILocation(line: 6093, column: 6, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3434, file: !3, line: 6093, column: 6)
!3434 = distinct !DILexicalBlock(scope: !3425, file: !3, line: 6090, column: 39)
!3435 = !DILocation(line: 6093, column: 11, scope: !3433)
!3436 = !DILocation(line: 6093, column: 21, scope: !3433)
!3437 = !DILocation(line: 6093, column: 26, scope: !3433)
!3438 = !DILocation(line: 6093, column: 19, scope: !3433)
!3439 = !DILocation(line: 6093, column: 6, scope: !3434)
!3440 = !DILocation(line: 6094, column: 8, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3442, file: !3, line: 6094, column: 8)
!3442 = distinct !DILexicalBlock(scope: !3433, file: !3, line: 6093, column: 36)
!3443 = !DILocation(line: 6094, column: 13, scope: !3441)
!3444 = !DILocation(line: 6094, column: 22, scope: !3441)
!3445 = !DILocation(line: 6094, column: 27, scope: !3441)
!3446 = !DILocation(line: 6094, column: 21, scope: !3441)
!3447 = !DILocation(line: 6094, column: 8, scope: !3442)
!3448 = !DILocation(line: 6094, column: 43, scope: !3441)
!3449 = !DILocation(line: 6094, column: 37, scope: !3441)
!3450 = !DILocation(line: 6095, column: 16, scope: !3441)
!3451 = !DILocation(line: 6096, column: 8, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3442, file: !3, line: 6096, column: 8)
!3453 = !DILocation(line: 6096, column: 8, scope: !3442)
!3454 = !DILocation(line: 6096, column: 42, scope: !3452)
!3455 = !DILocation(line: 6096, column: 41, scope: !3452)
!3456 = !DILocation(line: 6096, column: 40, scope: !3452)
!3457 = !DILocation(line: 6096, column: 34, scope: !3452)
!3458 = !DILocation(line: 6097, column: 4, scope: !3442)
!3459 = !DILocation(line: 6098, column: 2, scope: !3434)
!3460 = !DILocation(line: 6099, column: 21, scope: !3426)
!3461 = !DILocation(line: 6099, column: 7, scope: !3426)
!3462 = !DILocation(line: 6100, column: 11, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3426, file: !3, line: 6100, column: 11)
!3464 = !DILocation(line: 6100, column: 17, scope: !3463)
!3465 = !DILocation(line: 6100, column: 11, scope: !3426)
!3466 = !DILocation(line: 6101, column: 3, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3463, file: !3, line: 6100, column: 22)
!3468 = !DILocation(line: 6101, column: 8, scope: !3467)
!3469 = !DILocation(line: 6101, column: 2, scope: !3467)
!3470 = !DILocation(line: 6101, column: 11, scope: !3467)
!3471 = !DILocation(line: 6102, column: 6, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3467, file: !3, line: 6102, column: 6)
!3473 = !DILocation(line: 6102, column: 12, scope: !3472)
!3474 = !DILocation(line: 6102, column: 6, scope: !3467)
!3475 = !DILocation(line: 6102, column: 16, scope: !3472)
!3476 = !DILocation(line: 6102, column: 21, scope: !3472)
!3477 = !DILocation(line: 6102, column: 25, scope: !3472)
!3478 = !DILocation(line: 6103, column: 2, scope: !3467)
!3479 = !DILocation(line: 6104, column: 7, scope: !3426)
!3480 = !DILocation(line: 6105, column: 15, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3414, file: !3, line: 6105, column: 15)
!3482 = !DILocation(line: 6105, column: 17, scope: !3481)
!3483 = !DILocation(line: 6105, column: 15, scope: !3414)
!3484 = !DILocalVariable(name: "residue", scope: !3485, file: !3, line: 6107, type: !31)
!3485 = distinct !DILexicalBlock(scope: !3481, file: !3, line: 6106, column: 11)
!3486 = !DILocation(line: 6107, column: 11, scope: !3485)
!3487 = !DILocalVariable(name: "choice", scope: !3485, file: !3, line: 6109, type: !267)
!3488 = !DILocation(line: 6109, column: 24, scope: !3485)
!3489 = !DILocation(line: 6110, column: 11, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !3485, file: !3, line: 6110, column: 11)
!3491 = !DILocation(line: 6110, column: 17, scope: !3490)
!3492 = !DILocation(line: 6110, column: 11, scope: !3485)
!3493 = !DILocalVariable(name: "slhs", scope: !3494, file: !3, line: 6112, type: !44)
!3494 = distinct !DILexicalBlock(scope: !3490, file: !3, line: 6110, column: 22)
!3495 = !DILocation(line: 6112, column: 8, scope: !3494)
!3496 = !DILocation(line: 6112, column: 14, scope: !3494)
!3497 = !DILocation(line: 6112, column: 19, scope: !3494)
!3498 = !DILocation(line: 6112, column: 24, scope: !3494)
!3499 = !DILocation(line: 6112, column: 13, scope: !3494)
!3500 = !DILocalVariable(name: "srhs", scope: !3494, file: !3, line: 6113, type: !44)
!3501 = !DILocation(line: 6113, column: 8, scope: !3494)
!3502 = !DILocation(line: 6113, column: 14, scope: !3494)
!3503 = !DILocation(line: 6113, column: 19, scope: !3494)
!3504 = !DILocation(line: 6113, column: 24, scope: !3494)
!3505 = !DILocation(line: 6113, column: 13, scope: !3494)
!3506 = !DILocation(line: 6121, column: 6, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3494, file: !3, line: 6121, column: 6)
!3508 = !DILocation(line: 6121, column: 12, scope: !3507)
!3509 = !DILocation(line: 6121, column: 10, scope: !3507)
!3510 = !DILocation(line: 6121, column: 6, scope: !3494)
!3511 = !DILocation(line: 6122, column: 8, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3513, file: !3, line: 6122, column: 8)
!3513 = distinct !DILexicalBlock(scope: !3507, file: !3, line: 6121, column: 18)
!3514 = !DILocation(line: 6122, column: 8, scope: !3513)
!3515 = !DILocation(line: 6122, column: 20, scope: !3512)
!3516 = !DILocation(line: 6122, column: 14, scope: !3512)
!3517 = !DILocation(line: 6123, column: 20, scope: !3512)
!3518 = !DILocation(line: 6124, column: 4, scope: !3513)
!3519 = !DILocation(line: 6125, column: 12, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3507, file: !3, line: 6125, column: 12)
!3521 = !DILocation(line: 6125, column: 17, scope: !3520)
!3522 = !DILocation(line: 6125, column: 20, scope: !3520)
!3523 = !DILocation(line: 6125, column: 12, scope: !3507)
!3524 = !DILocation(line: 6126, column: 8, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3526, file: !3, line: 6126, column: 8)
!3526 = distinct !DILexicalBlock(scope: !3520, file: !3, line: 6125, column: 26)
!3527 = !DILocation(line: 6126, column: 13, scope: !3525)
!3528 = !DILocation(line: 6126, column: 22, scope: !3525)
!3529 = !DILocation(line: 6126, column: 27, scope: !3525)
!3530 = !DILocation(line: 6126, column: 21, scope: !3525)
!3531 = !DILocation(line: 6126, column: 8, scope: !3526)
!3532 = !DILocation(line: 6126, column: 43, scope: !3525)
!3533 = !DILocation(line: 6126, column: 37, scope: !3525)
!3534 = !DILocation(line: 6127, column: 22, scope: !3525)
!3535 = !DILocation(line: 6129, column: 4, scope: !3526)
!3536 = !DILocation(line: 6131, column: 8, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3538, file: !3, line: 6131, column: 8)
!3538 = distinct !DILexicalBlock(scope: !3520, file: !3, line: 6130, column: 8)
!3539 = !DILocation(line: 6131, column: 13, scope: !3537)
!3540 = !DILocation(line: 6131, column: 22, scope: !3537)
!3541 = !DILocation(line: 6131, column: 27, scope: !3537)
!3542 = !DILocation(line: 6131, column: 21, scope: !3537)
!3543 = !DILocation(line: 6131, column: 8, scope: !3538)
!3544 = !DILocation(line: 6131, column: 43, scope: !3537)
!3545 = !DILocation(line: 6131, column: 37, scope: !3537)
!3546 = !DILocation(line: 6132, column: 22, scope: !3537)
!3547 = !DILocation(line: 6135, column: 2, scope: !3494)
!3548 = !DILocation(line: 6137, column: 11, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3485, file: !3, line: 6137, column: 11)
!3550 = !DILocation(line: 6137, column: 13, scope: !3549)
!3551 = !DILocation(line: 6137, column: 23, scope: !3549)
!3552 = !DILocation(line: 6137, column: 26, scope: !3549)
!3553 = !DILocation(line: 6137, column: 28, scope: !3549)
!3554 = !DILocation(line: 6137, column: 11, scope: !3485)
!3555 = !DILocation(line: 6137, column: 50, scope: !3549)
!3556 = !DILocation(line: 6137, column: 49, scope: !3549)
!3557 = !DILocation(line: 6137, column: 48, scope: !3549)
!3558 = !DILocation(line: 6137, column: 42, scope: !3549)
!3559 = !DILocation(line: 6138, column: 15, scope: !3485)
!3560 = !DILocation(line: 6138, column: 21, scope: !3485)
!3561 = !DILocation(line: 6138, column: 26, scope: !3485)
!3562 = !DILocation(line: 6138, column: 32, scope: !3485)
!3563 = !DILocation(line: 6138, column: 13, scope: !3485)
!3564 = !DILocation(line: 6140, column: 18, scope: !3485)
!3565 = !DILocation(line: 6140, column: 23, scope: !3485)
!3566 = !DILocation(line: 6140, column: 31, scope: !3485)
!3567 = !DILocation(line: 6140, column: 46, scope: !3485)
!3568 = !DILocation(line: 6140, column: 7, scope: !3485)
!3569 = !DILocation(line: 6141, column: 7, scope: !3485)
!3570 = !DILocation(line: 6148, column: 10, scope: !3248)
!3571 = !DILocation(line: 6148, column: 3, scope: !3248)
!3572 = distinct !DISubprogram(name: "decNumberCompareSignal", scope: !3, file: !3, line: 884, type: !2989, scopeLine: 885, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!3573 = !DILocalVariable(name: "res", arg: 1, scope: !3572, file: !3, line: 884, type: !47)
!3574 = !DILocation(line: 884, column: 47, scope: !3572)
!3575 = !DILocalVariable(name: "lhs", arg: 2, scope: !3572, file: !3, line: 884, type: !267)
!3576 = !DILocation(line: 884, column: 69, scope: !3572)
!3577 = !DILocalVariable(name: "rhs", arg: 3, scope: !3572, file: !3, line: 885, type: !267)
!3578 = !DILocation(line: 885, column: 25, scope: !3572)
!3579 = !DILocalVariable(name: "set", arg: 4, scope: !3572, file: !3, line: 885, type: !269)
!3580 = !DILocation(line: 885, column: 42, scope: !3572)
!3581 = !DILocalVariable(name: "status", scope: !3572, file: !3, line: 886, type: !36)
!3582 = !DILocation(line: 886, column: 8, scope: !3572)
!3583 = !DILocation(line: 887, column: 16, scope: !3572)
!3584 = !DILocation(line: 887, column: 21, scope: !3572)
!3585 = !DILocation(line: 887, column: 26, scope: !3572)
!3586 = !DILocation(line: 887, column: 31, scope: !3572)
!3587 = !DILocation(line: 887, column: 3, scope: !3572)
!3588 = !DILocation(line: 888, column: 7, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3572, file: !3, line: 888, column: 7)
!3590 = !DILocation(line: 888, column: 13, scope: !3589)
!3591 = !DILocation(line: 888, column: 7, scope: !3572)
!3592 = !DILocation(line: 888, column: 28, scope: !3589)
!3593 = !DILocation(line: 888, column: 33, scope: !3589)
!3594 = !DILocation(line: 888, column: 41, scope: !3589)
!3595 = !DILocation(line: 888, column: 18, scope: !3589)
!3596 = !DILocation(line: 889, column: 10, scope: !3572)
!3597 = !DILocation(line: 889, column: 3, scope: !3572)
!3598 = distinct !DISubprogram(name: "decNumberCompareTotal", scope: !3, file: !3, line: 905, type: !2989, scopeLine: 906, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!3599 = !DILocalVariable(name: "res", arg: 1, scope: !3598, file: !3, line: 905, type: !47)
!3600 = !DILocation(line: 905, column: 46, scope: !3598)
!3601 = !DILocalVariable(name: "lhs", arg: 2, scope: !3598, file: !3, line: 905, type: !267)
!3602 = !DILocation(line: 905, column: 68, scope: !3598)
!3603 = !DILocalVariable(name: "rhs", arg: 3, scope: !3598, file: !3, line: 906, type: !267)
!3604 = !DILocation(line: 906, column: 24, scope: !3598)
!3605 = !DILocalVariable(name: "set", arg: 4, scope: !3598, file: !3, line: 906, type: !269)
!3606 = !DILocation(line: 906, column: 41, scope: !3598)
!3607 = !DILocalVariable(name: "status", scope: !3598, file: !3, line: 907, type: !36)
!3608 = !DILocation(line: 907, column: 8, scope: !3598)
!3609 = !DILocation(line: 908, column: 16, scope: !3598)
!3610 = !DILocation(line: 908, column: 21, scope: !3598)
!3611 = !DILocation(line: 908, column: 26, scope: !3598)
!3612 = !DILocation(line: 908, column: 31, scope: !3598)
!3613 = !DILocation(line: 908, column: 3, scope: !3598)
!3614 = !DILocation(line: 909, column: 7, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3598, file: !3, line: 909, column: 7)
!3616 = !DILocation(line: 909, column: 13, scope: !3615)
!3617 = !DILocation(line: 909, column: 7, scope: !3598)
!3618 = !DILocation(line: 909, column: 28, scope: !3615)
!3619 = !DILocation(line: 909, column: 33, scope: !3615)
!3620 = !DILocation(line: 909, column: 41, scope: !3615)
!3621 = !DILocation(line: 909, column: 18, scope: !3615)
!3622 = !DILocation(line: 910, column: 10, scope: !3598)
!3623 = !DILocation(line: 910, column: 3, scope: !3598)
!3624 = distinct !DISubprogram(name: "decNumberCompareTotalMag", scope: !3, file: !3, line: 926, type: !2989, scopeLine: 927, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!3625 = !DILocalVariable(name: "res", arg: 1, scope: !3624, file: !3, line: 926, type: !47)
!3626 = !DILocation(line: 926, column: 49, scope: !3624)
!3627 = !DILocalVariable(name: "lhs", arg: 2, scope: !3624, file: !3, line: 926, type: !267)
!3628 = !DILocation(line: 926, column: 71, scope: !3624)
!3629 = !DILocalVariable(name: "rhs", arg: 3, scope: !3624, file: !3, line: 927, type: !267)
!3630 = !DILocation(line: 927, column: 27, scope: !3624)
!3631 = !DILocalVariable(name: "set", arg: 4, scope: !3624, file: !3, line: 927, type: !269)
!3632 = !DILocation(line: 927, column: 44, scope: !3624)
!3633 = !DILocalVariable(name: "status", scope: !3624, file: !3, line: 928, type: !36)
!3634 = !DILocation(line: 928, column: 8, scope: !3624)
!3635 = !DILocalVariable(name: "needbytes", scope: !3624, file: !3, line: 929, type: !36)
!3636 = !DILocation(line: 929, column: 8, scope: !3624)
!3637 = !DILocalVariable(name: "bufa", scope: !3624, file: !3, line: 930, type: !3638)
!3638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 288, elements: !3639)
!3639 = !{!3640}
!3640 = !DISubrange(count: 3)
!3641 = !DILocation(line: 930, column: 13, scope: !3624)
!3642 = !DILocalVariable(name: "allocbufa", scope: !3624, file: !3, line: 931, type: !47)
!3643 = !DILocation(line: 931, column: 14, scope: !3624)
!3644 = !DILocalVariable(name: "bufb", scope: !3624, file: !3, line: 932, type: !3638)
!3645 = !DILocation(line: 932, column: 13, scope: !3624)
!3646 = !DILocalVariable(name: "allocbufb", scope: !3624, file: !3, line: 933, type: !47)
!3647 = !DILocation(line: 933, column: 14, scope: !3624)
!3648 = !DILocalVariable(name: "a", scope: !3624, file: !3, line: 934, type: !47)
!3649 = !DILocation(line: 934, column: 14, scope: !3624)
!3650 = !DILocalVariable(name: "b", scope: !3624, file: !3, line: 934, type: !47)
!3651 = !DILocation(line: 934, column: 18, scope: !3624)
!3652 = !DILocation(line: 940, column: 3, scope: !3624)
!3653 = !DILocation(line: 942, column: 9, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3655, file: !3, line: 942, column: 9)
!3655 = distinct !DILexicalBlock(scope: !3624, file: !3, line: 940, column: 6)
!3656 = !DILocation(line: 942, column: 9, scope: !3655)
!3657 = !DILocation(line: 943, column: 9, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3654, file: !3, line: 942, column: 35)
!3659 = !DILocation(line: 943, column: 8, scope: !3658)
!3660 = !DILocation(line: 944, column: 36, scope: !3658)
!3661 = !DILocation(line: 944, column: 52, scope: !3658)
!3662 = !DILocation(line: 944, column: 35, scope: !3658)
!3663 = !DILocation(line: 944, column: 55, scope: !3658)
!3664 = !DILocation(line: 944, column: 34, scope: !3658)
!3665 = !DILocation(line: 944, column: 17, scope: !3658)
!3666 = !DILocation(line: 944, column: 16, scope: !3658)
!3667 = !DILocation(line: 945, column: 11, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3658, file: !3, line: 945, column: 11)
!3669 = !DILocation(line: 945, column: 20, scope: !3668)
!3670 = !DILocation(line: 945, column: 11, scope: !3658)
!3671 = !DILocation(line: 946, column: 32, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3668, file: !3, line: 945, column: 35)
!3673 = !DILocation(line: 946, column: 25, scope: !3672)
!3674 = !DILocation(line: 946, column: 12, scope: !3672)
!3675 = !DILocation(line: 946, column: 11, scope: !3672)
!3676 = !DILocation(line: 947, column: 6, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3672, file: !3, line: 947, column: 6)
!3678 = !DILocation(line: 947, column: 15, scope: !3677)
!3679 = !DILocation(line: 947, column: 6, scope: !3672)
!3680 = !DILocation(line: 948, column: 10, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3677, file: !3, line: 947, column: 23)
!3682 = !DILocation(line: 949, column: 4, scope: !3681)
!3683 = !DILocation(line: 950, column: 4, scope: !3672)
!3684 = !DILocation(line: 950, column: 3, scope: !3672)
!3685 = !DILocation(line: 951, column: 2, scope: !3672)
!3686 = !DILocation(line: 952, column: 21, scope: !3658)
!3687 = !DILocation(line: 952, column: 24, scope: !3658)
!3688 = !DILocation(line: 952, column: 7, scope: !3658)
!3689 = !DILocation(line: 953, column: 7, scope: !3658)
!3690 = !DILocation(line: 953, column: 10, scope: !3658)
!3691 = !DILocation(line: 953, column: 14, scope: !3658)
!3692 = !DILocation(line: 954, column: 11, scope: !3658)
!3693 = !DILocation(line: 954, column: 10, scope: !3658)
!3694 = !DILocation(line: 955, column: 7, scope: !3658)
!3695 = !DILocation(line: 956, column: 9, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3655, file: !3, line: 956, column: 9)
!3697 = !DILocation(line: 956, column: 9, scope: !3655)
!3698 = !DILocation(line: 957, column: 9, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3696, file: !3, line: 956, column: 35)
!3700 = !DILocation(line: 957, column: 8, scope: !3699)
!3701 = !DILocation(line: 958, column: 36, scope: !3699)
!3702 = !DILocation(line: 958, column: 52, scope: !3699)
!3703 = !DILocation(line: 958, column: 35, scope: !3699)
!3704 = !DILocation(line: 958, column: 55, scope: !3699)
!3705 = !DILocation(line: 958, column: 34, scope: !3699)
!3706 = !DILocation(line: 958, column: 17, scope: !3699)
!3707 = !DILocation(line: 958, column: 16, scope: !3699)
!3708 = !DILocation(line: 959, column: 11, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3699, file: !3, line: 959, column: 11)
!3710 = !DILocation(line: 959, column: 20, scope: !3709)
!3711 = !DILocation(line: 959, column: 11, scope: !3699)
!3712 = !DILocation(line: 960, column: 32, scope: !3713)
!3713 = distinct !DILexicalBlock(scope: !3709, file: !3, line: 959, column: 35)
!3714 = !DILocation(line: 960, column: 25, scope: !3713)
!3715 = !DILocation(line: 960, column: 12, scope: !3713)
!3716 = !DILocation(line: 960, column: 11, scope: !3713)
!3717 = !DILocation(line: 961, column: 6, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3713, file: !3, line: 961, column: 6)
!3719 = !DILocation(line: 961, column: 15, scope: !3718)
!3720 = !DILocation(line: 961, column: 6, scope: !3713)
!3721 = !DILocation(line: 962, column: 10, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3718, file: !3, line: 961, column: 23)
!3723 = !DILocation(line: 963, column: 4, scope: !3722)
!3724 = !DILocation(line: 964, column: 4, scope: !3713)
!3725 = !DILocation(line: 964, column: 3, scope: !3713)
!3726 = !DILocation(line: 965, column: 2, scope: !3713)
!3727 = !DILocation(line: 966, column: 21, scope: !3699)
!3728 = !DILocation(line: 966, column: 24, scope: !3699)
!3729 = !DILocation(line: 966, column: 7, scope: !3699)
!3730 = !DILocation(line: 967, column: 7, scope: !3699)
!3731 = !DILocation(line: 967, column: 10, scope: !3699)
!3732 = !DILocation(line: 967, column: 14, scope: !3699)
!3733 = !DILocation(line: 968, column: 11, scope: !3699)
!3734 = !DILocation(line: 968, column: 10, scope: !3699)
!3735 = !DILocation(line: 969, column: 7, scope: !3699)
!3736 = !DILocation(line: 970, column: 18, scope: !3655)
!3737 = !DILocation(line: 970, column: 23, scope: !3655)
!3738 = !DILocation(line: 970, column: 28, scope: !3655)
!3739 = !DILocation(line: 970, column: 33, scope: !3655)
!3740 = !DILocation(line: 970, column: 5, scope: !3655)
!3741 = !DILocation(line: 971, column: 5, scope: !3655)
!3742 = !DILocation(line: 973, column: 7, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3624, file: !3, line: 973, column: 7)
!3744 = !DILocation(line: 973, column: 16, scope: !3743)
!3745 = !DILocation(line: 973, column: 7, scope: !3624)
!3746 = !DILocation(line: 973, column: 29, scope: !3743)
!3747 = !DILocation(line: 973, column: 24, scope: !3743)
!3748 = !DILocation(line: 974, column: 7, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3624, file: !3, line: 974, column: 7)
!3750 = !DILocation(line: 974, column: 16, scope: !3749)
!3751 = !DILocation(line: 974, column: 7, scope: !3624)
!3752 = !DILocation(line: 974, column: 29, scope: !3749)
!3753 = !DILocation(line: 974, column: 24, scope: !3749)
!3754 = !DILocation(line: 975, column: 7, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3624, file: !3, line: 975, column: 7)
!3756 = !DILocation(line: 975, column: 13, scope: !3755)
!3757 = !DILocation(line: 975, column: 7, scope: !3624)
!3758 = !DILocation(line: 975, column: 28, scope: !3755)
!3759 = !DILocation(line: 975, column: 33, scope: !3755)
!3760 = !DILocation(line: 975, column: 41, scope: !3755)
!3761 = !DILocation(line: 975, column: 18, scope: !3755)
!3762 = !DILocation(line: 976, column: 10, scope: !3624)
!3763 = !DILocation(line: 976, column: 3, scope: !3624)
!3764 = distinct !DISubprogram(name: "decNumberCopy", scope: !3, file: !3, line: 3346, type: !3765, scopeLine: 3346, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!3765 = !DISubroutineType(types: !3766)
!3766 = !{!47, !47, !267}
!3767 = !DILocalVariable(name: "dest", arg: 1, scope: !3764, file: !3, line: 3346, type: !47)
!3768 = !DILocation(line: 3346, column: 38, scope: !3764)
!3769 = !DILocalVariable(name: "src", arg: 2, scope: !3764, file: !3, line: 3346, type: !267)
!3770 = !DILocation(line: 3346, column: 61, scope: !3764)
!3771 = !DILocation(line: 3352, column: 7, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3764, file: !3, line: 3352, column: 7)
!3773 = !DILocation(line: 3352, column: 13, scope: !3772)
!3774 = !DILocation(line: 3352, column: 11, scope: !3772)
!3775 = !DILocation(line: 3352, column: 7, scope: !3764)
!3776 = !DILocation(line: 3352, column: 25, scope: !3772)
!3777 = !DILocation(line: 3352, column: 18, scope: !3772)
!3778 = !DILocation(line: 3358, column: 14, scope: !3764)
!3779 = !DILocation(line: 3358, column: 19, scope: !3764)
!3780 = !DILocation(line: 3358, column: 3, scope: !3764)
!3781 = !DILocation(line: 3358, column: 9, scope: !3764)
!3782 = !DILocation(line: 3358, column: 13, scope: !3764)
!3783 = !DILocation(line: 3359, column: 18, scope: !3764)
!3784 = !DILocation(line: 3359, column: 23, scope: !3764)
!3785 = !DILocation(line: 3359, column: 3, scope: !3764)
!3786 = !DILocation(line: 3359, column: 9, scope: !3764)
!3787 = !DILocation(line: 3359, column: 17, scope: !3764)
!3788 = !DILocation(line: 3360, column: 16, scope: !3764)
!3789 = !DILocation(line: 3360, column: 21, scope: !3764)
!3790 = !DILocation(line: 3360, column: 3, scope: !3764)
!3791 = !DILocation(line: 3360, column: 9, scope: !3764)
!3792 = !DILocation(line: 3360, column: 15, scope: !3764)
!3793 = !DILocation(line: 3361, column: 16, scope: !3764)
!3794 = !DILocation(line: 3361, column: 21, scope: !3764)
!3795 = !DILocation(line: 3361, column: 3, scope: !3764)
!3796 = !DILocation(line: 3361, column: 9, scope: !3764)
!3797 = !DILocation(line: 3361, column: 15, scope: !3764)
!3798 = !DILocation(line: 3362, column: 7, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3764, file: !3, line: 3362, column: 7)
!3800 = !DILocation(line: 3362, column: 12, scope: !3799)
!3801 = !DILocation(line: 3362, column: 18, scope: !3799)
!3802 = !DILocation(line: 3362, column: 7, scope: !3764)
!3803 = !DILocalVariable(name: "smsup", scope: !3804, file: !3, line: 3363, type: !301)
!3804 = distinct !DILexicalBlock(scope: !3799, file: !3, line: 3362, column: 28)
!3805 = !DILocation(line: 3363, column: 17, scope: !3804)
!3806 = !DILocalVariable(name: "s", scope: !3804, file: !3, line: 3363, type: !301)
!3807 = !DILocation(line: 3363, column: 25, scope: !3804)
!3808 = !DILocalVariable(name: "d", scope: !3804, file: !3, line: 3364, type: !43)
!3809 = !DILocation(line: 3364, column: 12, scope: !3804)
!3810 = !DILocation(line: 3367, column: 7, scope: !3804)
!3811 = !DILocation(line: 3367, column: 13, scope: !3804)
!3812 = !DILocation(line: 3367, column: 16, scope: !3804)
!3813 = !DILocation(line: 3367, column: 6, scope: !3804)
!3814 = !DILocation(line: 3368, column: 11, scope: !3804)
!3815 = !DILocation(line: 3368, column: 16, scope: !3804)
!3816 = !DILocation(line: 3368, column: 20, scope: !3804)
!3817 = !DILocation(line: 3368, column: 19, scope: !3804)
!3818 = !DILocation(line: 3368, column: 10, scope: !3804)
!3819 = !DILocation(line: 3369, column: 12, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3804, file: !3, line: 3369, column: 5)
!3821 = !DILocation(line: 3369, column: 17, scope: !3820)
!3822 = !DILocation(line: 3369, column: 20, scope: !3820)
!3823 = !DILocation(line: 3369, column: 11, scope: !3820)
!3824 = !DILocation(line: 3369, column: 10, scope: !3820)
!3825 = !DILocation(line: 3369, column: 24, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3820, file: !3, line: 3369, column: 5)
!3827 = !DILocation(line: 3369, column: 26, scope: !3826)
!3828 = !DILocation(line: 3369, column: 25, scope: !3826)
!3829 = !DILocation(line: 3369, column: 5, scope: !3820)
!3830 = !DILocation(line: 3369, column: 47, scope: !3826)
!3831 = !DILocation(line: 3369, column: 46, scope: !3826)
!3832 = !DILocation(line: 3369, column: 44, scope: !3826)
!3833 = !DILocation(line: 3369, column: 45, scope: !3826)
!3834 = !DILocation(line: 3369, column: 43, scope: !3826)
!3835 = !DILocation(line: 3369, column: 34, scope: !3826)
!3836 = !DILocation(line: 3369, column: 39, scope: !3826)
!3837 = !DILocation(line: 3369, column: 5, scope: !3826)
!3838 = distinct !{!3838, !3829, !3839}
!3839 = !DILocation(line: 3369, column: 47, scope: !3820)
!3840 = !DILocation(line: 3370, column: 5, scope: !3804)
!3841 = !DILocation(line: 3371, column: 10, scope: !3764)
!3842 = !DILocation(line: 3371, column: 3, scope: !3764)
!3843 = !DILocation(line: 3372, column: 3, scope: !3764)
!3844 = distinct !DISubprogram(name: "decNumberDivide", scope: !3, file: !3, line: 991, type: !2989, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!3845 = !DILocalVariable(name: "res", arg: 1, scope: !3844, file: !3, line: 991, type: !47)
!3846 = !DILocation(line: 991, column: 40, scope: !3844)
!3847 = !DILocalVariable(name: "lhs", arg: 2, scope: !3844, file: !3, line: 991, type: !267)
!3848 = !DILocation(line: 991, column: 62, scope: !3844)
!3849 = !DILocalVariable(name: "rhs", arg: 3, scope: !3844, file: !3, line: 992, type: !267)
!3850 = !DILocation(line: 992, column: 25, scope: !3844)
!3851 = !DILocalVariable(name: "set", arg: 4, scope: !3844, file: !3, line: 992, type: !269)
!3852 = !DILocation(line: 992, column: 42, scope: !3844)
!3853 = !DILocalVariable(name: "status", scope: !3844, file: !3, line: 993, type: !36)
!3854 = !DILocation(line: 993, column: 8, scope: !3844)
!3855 = !DILocation(line: 994, column: 15, scope: !3844)
!3856 = !DILocation(line: 994, column: 20, scope: !3844)
!3857 = !DILocation(line: 994, column: 25, scope: !3844)
!3858 = !DILocation(line: 994, column: 30, scope: !3844)
!3859 = !DILocation(line: 994, column: 3, scope: !3844)
!3860 = !DILocation(line: 995, column: 7, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3844, file: !3, line: 995, column: 7)
!3862 = !DILocation(line: 995, column: 13, scope: !3861)
!3863 = !DILocation(line: 995, column: 7, scope: !3844)
!3864 = !DILocation(line: 995, column: 28, scope: !3861)
!3865 = !DILocation(line: 995, column: 33, scope: !3861)
!3866 = !DILocation(line: 995, column: 41, scope: !3861)
!3867 = !DILocation(line: 995, column: 18, scope: !3861)
!3868 = !DILocation(line: 999, column: 10, scope: !3844)
!3869 = !DILocation(line: 999, column: 3, scope: !3844)
!3870 = distinct !DISubprogram(name: "decDivideOp", scope: !3, file: !3, line: 4211, type: !2323, scopeLine: 4213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!3871 = !DILocalVariable(name: "res", arg: 1, scope: !3870, file: !3, line: 4211, type: !47)
!3872 = !DILocation(line: 4211, column: 43, scope: !3870)
!3873 = !DILocalVariable(name: "lhs", arg: 2, scope: !3870, file: !3, line: 4212, type: !267)
!3874 = !DILocation(line: 4212, column: 28, scope: !3870)
!3875 = !DILocalVariable(name: "rhs", arg: 3, scope: !3870, file: !3, line: 4212, type: !267)
!3876 = !DILocation(line: 4212, column: 50, scope: !3870)
!3877 = !DILocalVariable(name: "set", arg: 4, scope: !3870, file: !3, line: 4213, type: !269)
!3878 = !DILocation(line: 4213, column: 23, scope: !3870)
!3879 = !DILocalVariable(name: "op", arg: 5, scope: !3870, file: !3, line: 4213, type: !44)
!3880 = !DILocation(line: 4213, column: 33, scope: !3870)
!3881 = !DILocalVariable(name: "status", arg: 6, scope: !3870, file: !3, line: 4213, type: !59)
!3882 = !DILocation(line: 4213, column: 43, scope: !3870)
!3883 = !DILocalVariable(name: "accbuff", scope: !3870, file: !3, line: 4218, type: !3884)
!3884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !39, size: 272, elements: !3885)
!3885 = !{!3886}
!3886 = !DISubrange(count: 17)
!3887 = !DILocation(line: 4218, column: 8, scope: !3870)
!3888 = !DILocalVariable(name: "acc", scope: !3870, file: !3, line: 4219, type: !43)
!3889 = !DILocation(line: 4219, column: 9, scope: !3870)
!3890 = !DILocation(line: 4219, column: 13, scope: !3870)
!3891 = !DILocalVariable(name: "allocacc", scope: !3870, file: !3, line: 4220, type: !43)
!3892 = !DILocation(line: 4220, column: 9, scope: !3870)
!3893 = !DILocalVariable(name: "accnext", scope: !3870, file: !3, line: 4221, type: !43)
!3894 = !DILocation(line: 4221, column: 9, scope: !3870)
!3895 = !DILocalVariable(name: "acclength", scope: !3870, file: !3, line: 4222, type: !31)
!3896 = !DILocation(line: 4222, column: 7, scope: !3870)
!3897 = !DILocalVariable(name: "accunits", scope: !3870, file: !3, line: 4223, type: !31)
!3898 = !DILocation(line: 4223, column: 7, scope: !3870)
!3899 = !DILocalVariable(name: "accdigits", scope: !3870, file: !3, line: 4224, type: !31)
!3900 = !DILocation(line: 4224, column: 7, scope: !3870)
!3901 = !DILocalVariable(name: "varbuff", scope: !3870, file: !3, line: 4226, type: !3902)
!3902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !39, size: 400, elements: !3903)
!3903 = !{!3904}
!3904 = !DISubrange(count: 25)
!3905 = !DILocation(line: 4226, column: 8, scope: !3870)
!3906 = !DILocalVariable(name: "var1", scope: !3870, file: !3, line: 4227, type: !43)
!3907 = !DILocation(line: 4227, column: 9, scope: !3870)
!3908 = !DILocation(line: 4227, column: 14, scope: !3870)
!3909 = !DILocalVariable(name: "varalloc", scope: !3870, file: !3, line: 4228, type: !43)
!3910 = !DILocation(line: 4228, column: 9, scope: !3870)
!3911 = !DILocalVariable(name: "msu1", scope: !3870, file: !3, line: 4229, type: !43)
!3912 = !DILocation(line: 4229, column: 9, scope: !3870)
!3913 = !DILocalVariable(name: "var2", scope: !3870, file: !3, line: 4231, type: !301)
!3914 = !DILocation(line: 4231, column: 15, scope: !3870)
!3915 = !DILocalVariable(name: "msu2", scope: !3870, file: !3, line: 4232, type: !301)
!3916 = !DILocation(line: 4232, column: 15, scope: !3870)
!3917 = !DILocalVariable(name: "msu2plus", scope: !3870, file: !3, line: 4233, type: !31)
!3918 = !DILocation(line: 4233, column: 7, scope: !3870)
!3919 = !DILocalVariable(name: "msu2pair", scope: !3870, file: !3, line: 4234, type: !31)
!3920 = !DILocation(line: 4234, column: 8, scope: !3870)
!3921 = !DILocalVariable(name: "var1units", scope: !3870, file: !3, line: 4236, type: !31)
!3922 = !DILocation(line: 4236, column: 7, scope: !3870)
!3923 = !DILocalVariable(name: "var2units", scope: !3870, file: !3, line: 4236, type: !31)
!3924 = !DILocation(line: 4236, column: 18, scope: !3870)
!3925 = !DILocalVariable(name: "var2ulen", scope: !3870, file: !3, line: 4237, type: !31)
!3926 = !DILocation(line: 4237, column: 7, scope: !3870)
!3927 = !DILocalVariable(name: "var1initpad", scope: !3870, file: !3, line: 4238, type: !31)
!3928 = !DILocation(line: 4238, column: 7, scope: !3870)
!3929 = !DILocalVariable(name: "maxdigits", scope: !3870, file: !3, line: 4239, type: !31)
!3930 = !DILocation(line: 4239, column: 7, scope: !3870)
!3931 = !DILocalVariable(name: "mult", scope: !3870, file: !3, line: 4240, type: !31)
!3932 = !DILocation(line: 4240, column: 7, scope: !3870)
!3933 = !DILocalVariable(name: "thisunit", scope: !3870, file: !3, line: 4241, type: !39)
!3934 = !DILocation(line: 4241, column: 8, scope: !3870)
!3935 = !DILocalVariable(name: "residue", scope: !3870, file: !3, line: 4242, type: !31)
!3936 = !DILocation(line: 4242, column: 7, scope: !3870)
!3937 = !DILocalVariable(name: "reqdigits", scope: !3870, file: !3, line: 4243, type: !31)
!3938 = !DILocation(line: 4243, column: 7, scope: !3870)
!3939 = !DILocation(line: 4243, column: 17, scope: !3870)
!3940 = !DILocation(line: 4243, column: 22, scope: !3870)
!3941 = !DILocalVariable(name: "exponent", scope: !3870, file: !3, line: 4244, type: !31)
!3942 = !DILocation(line: 4244, column: 7, scope: !3870)
!3943 = !DILocalVariable(name: "maxexponent", scope: !3870, file: !3, line: 4245, type: !31)
!3944 = !DILocation(line: 4245, column: 7, scope: !3870)
!3945 = !DILocalVariable(name: "bits", scope: !3870, file: !3, line: 4246, type: !44)
!3946 = !DILocation(line: 4246, column: 9, scope: !3870)
!3947 = !DILocalVariable(name: "target", scope: !3870, file: !3, line: 4247, type: !43)
!3948 = !DILocation(line: 4247, column: 9, scope: !3870)
!3949 = !DILocalVariable(name: "source", scope: !3870, file: !3, line: 4248, type: !301)
!3950 = !DILocation(line: 4248, column: 15, scope: !3870)
!3951 = !DILocalVariable(name: "pow", scope: !3870, file: !3, line: 4249, type: !3952)
!3952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64)
!3953 = !DILocation(line: 4249, column: 15, scope: !3870)
!3954 = !DILocalVariable(name: "shift", scope: !3870, file: !3, line: 4250, type: !31)
!3955 = !DILocation(line: 4250, column: 7, scope: !3870)
!3956 = !DILocalVariable(name: "cut", scope: !3870, file: !3, line: 4250, type: !31)
!3957 = !DILocation(line: 4250, column: 14, scope: !3870)
!3958 = !DILocation(line: 4259, column: 3, scope: !3870)
!3959 = !DILocation(line: 4277, column: 11, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3870, file: !3, line: 4259, column: 6)
!3961 = !DILocation(line: 4277, column: 16, scope: !3960)
!3962 = !DILocation(line: 4277, column: 21, scope: !3960)
!3963 = !DILocation(line: 4277, column: 26, scope: !3960)
!3964 = !DILocation(line: 4277, column: 20, scope: !3960)
!3965 = !DILocation(line: 4277, column: 31, scope: !3960)
!3966 = !DILocation(line: 4277, column: 10, scope: !3960)
!3967 = !DILocation(line: 4277, column: 9, scope: !3960)
!3968 = !DILocation(line: 4280, column: 9, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 4280, column: 9)
!3970 = !DILocation(line: 4280, column: 9, scope: !3960)
!3971 = !DILocation(line: 4281, column: 11, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3973, file: !3, line: 4281, column: 11)
!3973 = distinct !DILexicalBlock(scope: !3969, file: !3, line: 4280, column: 22)
!3974 = !DILocation(line: 4281, column: 23, scope: !3972)
!3975 = !DILocation(line: 4281, column: 11, scope: !3973)
!3976 = !DILocation(line: 4282, column: 10, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3972, file: !3, line: 4281, column: 45)
!3978 = !DILocation(line: 4282, column: 15, scope: !3977)
!3979 = !DILocation(line: 4282, column: 20, scope: !3977)
!3980 = !DILocation(line: 4282, column: 25, scope: !3977)
!3981 = !DILocation(line: 4282, column: 30, scope: !3977)
!3982 = !DILocation(line: 4282, column: 2, scope: !3977)
!3983 = !DILocation(line: 4283, column: 2, scope: !3977)
!3984 = !DILocation(line: 4286, column: 11, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3973, file: !3, line: 4286, column: 11)
!3986 = !DILocation(line: 4286, column: 11, scope: !3973)
!3987 = !DILocation(line: 4287, column: 6, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3989, file: !3, line: 4287, column: 6)
!3989 = distinct !DILexicalBlock(scope: !3985, file: !3, line: 4286, column: 37)
!3990 = !DILocation(line: 4287, column: 31, scope: !3988)
!3991 = !DILocation(line: 4288, column: 6, scope: !3988)
!3992 = !DILocation(line: 4288, column: 9, scope: !3988)
!3993 = !DILocation(line: 4287, column: 6, scope: !3989)
!3994 = !DILocation(line: 4289, column: 5, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3988, file: !3, line: 4288, column: 34)
!3996 = !DILocation(line: 4289, column: 11, scope: !3995)
!3997 = !DILocation(line: 4290, column: 4, scope: !3995)
!3998 = !DILocation(line: 4293, column: 16, scope: !3989)
!3999 = !DILocation(line: 4293, column: 2, scope: !3989)
!4000 = !DILocation(line: 4294, column: 12, scope: !3989)
!4001 = !DILocation(line: 4294, column: 16, scope: !3989)
!4002 = !DILocation(line: 4294, column: 2, scope: !3989)
!4003 = !DILocation(line: 4294, column: 7, scope: !3989)
!4004 = !DILocation(line: 4294, column: 11, scope: !3989)
!4005 = !DILocation(line: 4295, column: 2, scope: !3989)
!4006 = !DILocation(line: 4298, column: 9, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !3985, file: !3, line: 4297, column: 13)
!4008 = !DILocation(line: 4299, column: 6, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !4007, file: !3, line: 4299, column: 6)
!4010 = !DILocation(line: 4299, column: 8, scope: !4009)
!4011 = !DILocation(line: 4299, column: 6, scope: !4007)
!4012 = !DILocation(line: 4301, column: 15, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !4009, file: !3, line: 4299, column: 30)
!4014 = !DILocation(line: 4301, column: 20, scope: !4013)
!4015 = !DILocation(line: 4301, column: 25, scope: !4013)
!4016 = !DILocation(line: 4301, column: 40, scope: !4013)
!4017 = !DILocation(line: 4301, column: 4, scope: !4013)
!4018 = !DILocation(line: 4302, column: 4, scope: !4013)
!4019 = !DILocation(line: 4304, column: 18, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !4009, file: !3, line: 4303, column: 8)
!4021 = !DILocation(line: 4304, column: 4, scope: !4020)
!4022 = !DILocation(line: 4305, column: 14, scope: !4020)
!4023 = !DILocation(line: 4305, column: 4, scope: !4020)
!4024 = !DILocation(line: 4305, column: 9, scope: !4020)
!4025 = !DILocation(line: 4305, column: 13, scope: !4020)
!4026 = !DILocation(line: 4308, column: 8, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4020, file: !3, line: 4308, column: 8)
!4028 = !DILocation(line: 4308, column: 10, scope: !4027)
!4029 = !DILocation(line: 4308, column: 8, scope: !4020)
!4030 = !DILocation(line: 4309, column: 20, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4027, file: !3, line: 4308, column: 19)
!4032 = !DILocation(line: 4309, column: 25, scope: !4031)
!4033 = !DILocation(line: 4309, column: 30, scope: !4031)
!4034 = !DILocation(line: 4309, column: 35, scope: !4031)
!4035 = !DILocation(line: 4309, column: 29, scope: !4031)
!4036 = !DILocation(line: 4309, column: 41, scope: !4031)
!4037 = !DILocation(line: 4309, column: 6, scope: !4031)
!4038 = !DILocation(line: 4309, column: 11, scope: !4031)
!4039 = !DILocation(line: 4309, column: 19, scope: !4031)
!4040 = !DILocation(line: 4310, column: 7, scope: !4031)
!4041 = !DILocation(line: 4310, column: 13, scope: !4031)
!4042 = !DILocation(line: 4311, column: 6, scope: !4031)
!4043 = !DILocation(line: 4313, column: 2, scope: !4007)
!4044 = !DILocation(line: 4314, column: 2, scope: !4007)
!4045 = !DILocation(line: 4319, column: 9, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 4319, column: 9)
!4047 = !DILocation(line: 4319, column: 9, scope: !3960)
!4048 = !DILocation(line: 4320, column: 11, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4050, file: !3, line: 4320, column: 11)
!4050 = distinct !DILexicalBlock(scope: !4046, file: !3, line: 4319, column: 22)
!4051 = !DILocation(line: 4320, column: 11, scope: !4050)
!4052 = !DILocation(line: 4321, column: 16, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4049, file: !3, line: 4320, column: 24)
!4054 = !DILocation(line: 4321, column: 2, scope: !4053)
!4055 = !DILocation(line: 4322, column: 3, scope: !4053)
!4056 = !DILocation(line: 4322, column: 9, scope: !4053)
!4057 = !DILocation(line: 4323, column: 2, scope: !4053)
!4058 = !DILocation(line: 4325, column: 16, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4049, file: !3, line: 4324, column: 13)
!4060 = !DILocation(line: 4325, column: 2, scope: !4059)
!4061 = !DILocation(line: 4326, column: 6, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4059, file: !3, line: 4326, column: 6)
!4063 = !DILocation(line: 4326, column: 8, scope: !4062)
!4064 = !DILocation(line: 4326, column: 6, scope: !4059)
!4065 = !DILocation(line: 4326, column: 31, scope: !4062)
!4066 = !DILocation(line: 4326, column: 37, scope: !4062)
!4067 = !DILocation(line: 4326, column: 30, scope: !4062)
!4068 = !DILocation(line: 4328, column: 5, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !4062, file: !3, line: 4327, column: 8)
!4070 = !DILocation(line: 4328, column: 11, scope: !4069)
!4071 = !DILocation(line: 4329, column: 14, scope: !4069)
!4072 = !DILocation(line: 4329, column: 18, scope: !4069)
!4073 = !DILocation(line: 4329, column: 4, scope: !4069)
!4074 = !DILocation(line: 4329, column: 9, scope: !4069)
!4075 = !DILocation(line: 4329, column: 13, scope: !4069)
!4076 = !DILocation(line: 4332, column: 7, scope: !4050)
!4077 = !DILocation(line: 4335, column: 9, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 4335, column: 9)
!4079 = !DILocation(line: 4335, column: 9, scope: !3960)
!4080 = !DILocation(line: 4340, column: 6, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4082, file: !3, line: 4340, column: 6)
!4082 = distinct !DILexicalBlock(scope: !4078, file: !3, line: 4335, column: 22)
!4083 = !DILocation(line: 4340, column: 8, scope: !4081)
!4084 = !DILocation(line: 4340, column: 6, scope: !4082)
!4085 = !DILocation(line: 4341, column: 11, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 4340, column: 17)
!4087 = !DILocation(line: 4342, column: 13, scope: !4086)
!4088 = !DILocation(line: 4342, column: 18, scope: !4086)
!4089 = !DILocation(line: 4342, column: 27, scope: !4086)
!4090 = !DILocation(line: 4342, column: 32, scope: !4086)
!4091 = !DILocation(line: 4342, column: 26, scope: !4086)
!4092 = !DILocation(line: 4342, column: 12, scope: !4086)
!4093 = !DILocation(line: 4343, column: 18, scope: !4086)
!4094 = !DILocation(line: 4343, column: 23, scope: !4086)
!4095 = !DILocation(line: 4343, column: 4, scope: !4086)
!4096 = !DILocation(line: 4344, column: 14, scope: !4086)
!4097 = !DILocation(line: 4344, column: 4, scope: !4086)
!4098 = !DILocation(line: 4344, column: 9, scope: !4086)
!4099 = !DILocation(line: 4344, column: 13, scope: !4086)
!4100 = !DILocation(line: 4345, column: 18, scope: !4086)
!4101 = !DILocation(line: 4345, column: 4, scope: !4086)
!4102 = !DILocation(line: 4345, column: 9, scope: !4086)
!4103 = !DILocation(line: 4345, column: 17, scope: !4086)
!4104 = !DILocation(line: 4346, column: 16, scope: !4086)
!4105 = !DILocation(line: 4346, column: 21, scope: !4086)
!4106 = !DILocation(line: 4346, column: 36, scope: !4086)
!4107 = !DILocation(line: 4346, column: 4, scope: !4086)
!4108 = !DILocation(line: 4347, column: 4, scope: !4086)
!4109 = !DILocation(line: 4348, column: 12, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 4348, column: 12)
!4111 = !DILocation(line: 4348, column: 14, scope: !4110)
!4112 = !DILocation(line: 4348, column: 12, scope: !4081)
!4113 = !DILocation(line: 4349, column: 18, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4110, file: !3, line: 4348, column: 26)
!4115 = !DILocation(line: 4349, column: 4, scope: !4114)
!4116 = !DILocation(line: 4350, column: 14, scope: !4114)
!4117 = !DILocation(line: 4350, column: 4, scope: !4114)
!4118 = !DILocation(line: 4350, column: 9, scope: !4114)
!4119 = !DILocation(line: 4350, column: 13, scope: !4114)
!4120 = !DILocation(line: 4351, column: 4, scope: !4114)
!4121 = !DILocation(line: 4353, column: 13, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4110, file: !3, line: 4352, column: 8)
!4123 = !DILocation(line: 4353, column: 18, scope: !4122)
!4124 = !DILocation(line: 4353, column: 12, scope: !4122)
!4125 = !DILocation(line: 4354, column: 18, scope: !4122)
!4126 = !DILocation(line: 4354, column: 23, scope: !4122)
!4127 = !DILocation(line: 4354, column: 4, scope: !4122)
!4128 = !DILocation(line: 4355, column: 8, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4122, file: !3, line: 4355, column: 8)
!4130 = !DILocation(line: 4355, column: 17, scope: !4129)
!4131 = !DILocation(line: 4355, column: 22, scope: !4129)
!4132 = !DILocation(line: 4355, column: 16, scope: !4129)
!4133 = !DILocation(line: 4355, column: 8, scope: !4122)
!4134 = !DILocation(line: 4355, column: 46, scope: !4129)
!4135 = !DILocation(line: 4355, column: 32, scope: !4129)
!4136 = !DILocation(line: 4355, column: 37, scope: !4129)
!4137 = !DILocation(line: 4355, column: 45, scope: !4129)
!4138 = !DILocation(line: 4360, column: 7, scope: !4082)
!4139 = !DILocation(line: 4366, column: 15, scope: !3960)
!4140 = !DILocation(line: 4366, column: 20, scope: !3960)
!4141 = !DILocation(line: 4366, column: 29, scope: !3960)
!4142 = !DILocation(line: 4366, column: 34, scope: !3960)
!4143 = !DILocation(line: 4366, column: 28, scope: !3960)
!4144 = !DILocation(line: 4366, column: 43, scope: !3960)
!4145 = !DILocation(line: 4366, column: 48, scope: !3960)
!4146 = !DILocation(line: 4366, column: 57, scope: !3960)
!4147 = !DILocation(line: 4366, column: 62, scope: !3960)
!4148 = !DILocation(line: 4366, column: 56, scope: !3960)
!4149 = !DILocation(line: 4366, column: 41, scope: !3960)
!4150 = !DILocation(line: 4366, column: 13, scope: !3960)
!4151 = !DILocation(line: 4371, column: 9, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 4371, column: 9)
!4153 = !DILocation(line: 4371, column: 17, scope: !4152)
!4154 = !DILocation(line: 4371, column: 20, scope: !4152)
!4155 = !DILocation(line: 4371, column: 25, scope: !4152)
!4156 = !DILocation(line: 4371, column: 27, scope: !4152)
!4157 = !DILocation(line: 4371, column: 9, scope: !3960)
!4158 = !DILocation(line: 4372, column: 11, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4160, file: !3, line: 4372, column: 11)
!4160 = distinct !DILexicalBlock(scope: !4152, file: !3, line: 4371, column: 38)
!4161 = !DILocation(line: 4372, column: 13, scope: !4159)
!4162 = !DILocation(line: 4372, column: 11, scope: !4160)
!4163 = !DILocation(line: 4373, column: 16, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !4159, file: !3, line: 4372, column: 25)
!4165 = !DILocation(line: 4373, column: 2, scope: !4164)
!4166 = !DILocation(line: 4377, column: 14, scope: !4164)
!4167 = !DILocation(line: 4377, column: 4, scope: !4164)
!4168 = !DILocation(line: 4377, column: 9, scope: !4164)
!4169 = !DILocation(line: 4377, column: 13, scope: !4164)
!4170 = !DILocation(line: 4378, column: 2, scope: !4164)
!4171 = !DILocation(line: 4381, column: 11, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4160, file: !3, line: 4381, column: 11)
!4173 = !DILocation(line: 4381, column: 16, scope: !4172)
!4174 = !DILocation(line: 4381, column: 26, scope: !4172)
!4175 = !DILocation(line: 4381, column: 31, scope: !4172)
!4176 = !DILocation(line: 4381, column: 24, scope: !4172)
!4177 = !DILocation(line: 4381, column: 11, scope: !4160)
!4178 = !DILocation(line: 4382, column: 6, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4180, file: !3, line: 4382, column: 6)
!4180 = distinct !DILexicalBlock(scope: !4172, file: !3, line: 4381, column: 41)
!4181 = !DILocation(line: 4382, column: 8, scope: !4179)
!4182 = !DILocation(line: 4382, column: 19, scope: !4179)
!4183 = !DILocation(line: 4382, column: 22, scope: !4179)
!4184 = !DILocation(line: 4382, column: 30, scope: !4179)
!4185 = !DILocation(line: 4382, column: 6, scope: !4180)
!4186 = !DILocation(line: 4385, column: 11, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4179, file: !3, line: 4382, column: 35)
!4188 = !DILocation(line: 4386, column: 15, scope: !4187)
!4189 = !DILocation(line: 4386, column: 20, scope: !4187)
!4190 = !DILocation(line: 4386, column: 25, scope: !4187)
!4191 = !DILocation(line: 4386, column: 40, scope: !4187)
!4192 = !DILocation(line: 4386, column: 4, scope: !4187)
!4193 = !DILocation(line: 4387, column: 4, scope: !4187)
!4194 = !DILocation(line: 4388, column: 4, scope: !4187)
!4195 = !DILocation(line: 4391, column: 2, scope: !4180)
!4196 = !DILocation(line: 4392, column: 7, scope: !4160)
!4197 = !DILocation(line: 4398, column: 15, scope: !3960)
!4198 = !DILocation(line: 4398, column: 14, scope: !3960)
!4199 = !DILocation(line: 4399, column: 9, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 4399, column: 9)
!4201 = !DILocation(line: 4399, column: 18, scope: !4200)
!4202 = !DILocation(line: 4399, column: 31, scope: !4200)
!4203 = !DILocation(line: 4399, column: 9, scope: !3960)
!4204 = !DILocation(line: 4401, column: 31, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4200, file: !3, line: 4399, column: 49)
!4206 = !DILocation(line: 4401, column: 40, scope: !4205)
!4207 = !DILocation(line: 4401, column: 24, scope: !4205)
!4208 = !DILocation(line: 4401, column: 16, scope: !4205)
!4209 = !DILocation(line: 4401, column: 15, scope: !4205)
!4210 = !DILocation(line: 4402, column: 11, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4205, file: !3, line: 4402, column: 11)
!4212 = !DILocation(line: 4402, column: 19, scope: !4211)
!4213 = !DILocation(line: 4402, column: 11, scope: !4205)
!4214 = !DILocation(line: 4403, column: 3, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4211, file: !3, line: 4402, column: 27)
!4216 = !DILocation(line: 4403, column: 9, scope: !4215)
!4217 = !DILocation(line: 4404, column: 2, scope: !4215)
!4218 = !DILocation(line: 4405, column: 11, scope: !4205)
!4219 = !DILocation(line: 4405, column: 10, scope: !4205)
!4220 = !DILocation(line: 4406, column: 7, scope: !4205)
!4221 = !DILocation(line: 4419, column: 15, scope: !3960)
!4222 = !DILocation(line: 4419, column: 20, scope: !3960)
!4223 = !DILocation(line: 4419, column: 27, scope: !3960)
!4224 = !DILocation(line: 4419, column: 26, scope: !3960)
!4225 = !DILocation(line: 4419, column: 36, scope: !3960)
!4226 = !DILocation(line: 4419, column: 14, scope: !3960)
!4227 = !DILocation(line: 4420, column: 9, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 4420, column: 9)
!4229 = !DILocation(line: 4420, column: 14, scope: !4228)
!4230 = !DILocation(line: 4420, column: 21, scope: !4228)
!4231 = !DILocation(line: 4420, column: 20, scope: !4228)
!4232 = !DILocation(line: 4420, column: 9, scope: !3960)
!4233 = !DILocation(line: 4420, column: 42, scope: !4228)
!4234 = !DILocation(line: 4420, column: 47, scope: !4228)
!4235 = !DILocation(line: 4420, column: 41, scope: !4228)
!4236 = !DILocation(line: 4420, column: 32, scope: !4228)
!4237 = !DILocation(line: 4421, column: 15, scope: !3960)
!4238 = !DILocation(line: 4421, column: 29, scope: !3960)
!4239 = !DILocation(line: 4421, column: 14, scope: !3960)
!4240 = !DILocation(line: 4423, column: 11, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 4423, column: 9)
!4242 = !DILocation(line: 4423, column: 13, scope: !4241)
!4243 = !DILocation(line: 4423, column: 9, scope: !3960)
!4244 = !DILocation(line: 4423, column: 32, scope: !4241)
!4245 = !DILocation(line: 4423, column: 23, scope: !4241)
!4246 = !DILocation(line: 4424, column: 10, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 4424, column: 9)
!4248 = !DILocation(line: 4424, column: 19, scope: !4247)
!4249 = !DILocation(line: 4424, column: 9, scope: !4247)
!4250 = !DILocation(line: 4424, column: 22, scope: !4247)
!4251 = !DILocation(line: 4424, column: 35, scope: !4247)
!4252 = !DILocation(line: 4424, column: 9, scope: !3960)
!4253 = !DILocation(line: 4426, column: 32, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4247, file: !3, line: 4424, column: 53)
!4255 = !DILocation(line: 4426, column: 41, scope: !4254)
!4256 = !DILocation(line: 4426, column: 31, scope: !4254)
!4257 = !DILocation(line: 4426, column: 44, scope: !4254)
!4258 = !DILocation(line: 4426, column: 24, scope: !4254)
!4259 = !DILocation(line: 4426, column: 16, scope: !4254)
!4260 = !DILocation(line: 4426, column: 15, scope: !4254)
!4261 = !DILocation(line: 4427, column: 11, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4254, file: !3, line: 4427, column: 11)
!4263 = !DILocation(line: 4427, column: 19, scope: !4262)
!4264 = !DILocation(line: 4427, column: 11, scope: !4254)
!4265 = !DILocation(line: 4428, column: 3, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 4427, column: 27)
!4267 = !DILocation(line: 4428, column: 9, scope: !4266)
!4268 = !DILocation(line: 4429, column: 2, scope: !4266)
!4269 = !DILocation(line: 4430, column: 12, scope: !4254)
!4270 = !DILocation(line: 4430, column: 11, scope: !4254)
!4271 = !DILocation(line: 4431, column: 7, scope: !4254)
!4272 = !DILocation(line: 4439, column: 10, scope: !3960)
!4273 = !DILocation(line: 4439, column: 15, scope: !3960)
!4274 = !DILocation(line: 4439, column: 14, scope: !3960)
!4275 = !DILocation(line: 4439, column: 24, scope: !3960)
!4276 = !DILocation(line: 4439, column: 9, scope: !3960)
!4277 = !DILocation(line: 4440, column: 12, scope: !3960)
!4278 = !DILocation(line: 4440, column: 17, scope: !3960)
!4279 = !DILocation(line: 4440, column: 21, scope: !3960)
!4280 = !DILocation(line: 4440, column: 20, scope: !3960)
!4281 = !DILocation(line: 4440, column: 37, scope: !3960)
!4282 = !DILocation(line: 4440, column: 11, scope: !3960)
!4283 = !DILocation(line: 4441, column: 17, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 4441, column: 5)
!4285 = !DILocation(line: 4441, column: 16, scope: !4284)
!4286 = !DILocation(line: 4441, column: 10, scope: !4284)
!4287 = !DILocation(line: 4441, column: 23, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4284, file: !3, line: 4441, column: 5)
!4289 = !DILocation(line: 4441, column: 31, scope: !4288)
!4290 = !DILocation(line: 4441, column: 36, scope: !4288)
!4291 = !DILocation(line: 4441, column: 29, scope: !4288)
!4292 = !DILocation(line: 4441, column: 5, scope: !4284)
!4293 = !DILocation(line: 4441, column: 70, scope: !4288)
!4294 = !DILocation(line: 4441, column: 69, scope: !4288)
!4295 = !DILocation(line: 4441, column: 62, scope: !4288)
!4296 = !DILocation(line: 4441, column: 68, scope: !4288)
!4297 = !DILocation(line: 4441, column: 61, scope: !4288)
!4298 = !DILocation(line: 4441, column: 47, scope: !4288)
!4299 = !DILocation(line: 4441, column: 57, scope: !4288)
!4300 = !DILocation(line: 4441, column: 5, scope: !4288)
!4301 = distinct !{!4301, !4292, !4302}
!4302 = !DILocation(line: 4441, column: 70, scope: !4284)
!4303 = !DILocation(line: 4442, column: 5, scope: !3960)
!4304 = !DILocation(line: 4442, column: 12, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4306, file: !3, line: 4442, column: 5)
!4306 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 4442, column: 5)
!4307 = !DILocation(line: 4442, column: 20, scope: !4305)
!4308 = !DILocation(line: 4442, column: 18, scope: !4305)
!4309 = !DILocation(line: 4442, column: 5, scope: !4306)
!4310 = !DILocation(line: 4442, column: 37, scope: !4305)
!4311 = !DILocation(line: 4442, column: 43, scope: !4305)
!4312 = !DILocation(line: 4442, column: 36, scope: !4305)
!4313 = !DILocation(line: 4442, column: 32, scope: !4305)
!4314 = !DILocation(line: 4442, column: 5, scope: !4305)
!4315 = distinct !{!4315, !4309, !4316}
!4316 = !DILocation(line: 4442, column: 44, scope: !4306)
!4317 = !DILocation(line: 4445, column: 14, scope: !3960)
!4318 = !DILocation(line: 4445, column: 13, scope: !3960)
!4319 = !DILocation(line: 4446, column: 15, scope: !3960)
!4320 = !DILocation(line: 4446, column: 14, scope: !3960)
!4321 = !DILocation(line: 4447, column: 10, scope: !3960)
!4322 = !DILocation(line: 4447, column: 15, scope: !3960)
!4323 = !DILocation(line: 4447, column: 9, scope: !3960)
!4324 = !DILocation(line: 4448, column: 10, scope: !3960)
!4325 = !DILocation(line: 4448, column: 15, scope: !3960)
!4326 = !DILocation(line: 4448, column: 14, scope: !3960)
!4327 = !DILocation(line: 4448, column: 24, scope: !3960)
!4328 = !DILocation(line: 4448, column: 9, scope: !3960)
!4329 = !DILocation(line: 4452, column: 15, scope: !3960)
!4330 = !DILocation(line: 4452, column: 14, scope: !3960)
!4331 = !DILocation(line: 4452, column: 13, scope: !3960)
!4332 = !DILocation(line: 4453, column: 9, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 4453, column: 9)
!4334 = !DILocation(line: 4453, column: 18, scope: !4333)
!4335 = !DILocation(line: 4453, column: 9, scope: !3960)
!4336 = !DILocation(line: 4453, column: 30, scope: !4333)
!4337 = !DILocation(line: 4453, column: 22, scope: !4333)
!4338 = !DILocation(line: 4454, column: 21, scope: !3960)
!4339 = !DILocation(line: 4454, column: 20, scope: !3960)
!4340 = !DILocation(line: 4454, column: 14, scope: !3960)
!4341 = !DILocation(line: 4454, column: 25, scope: !3960)
!4342 = !DILocation(line: 4454, column: 13, scope: !3960)
!4343 = !DILocation(line: 4455, column: 9, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 4455, column: 9)
!4345 = !DILocation(line: 4455, column: 18, scope: !4344)
!4346 = !DILocation(line: 4455, column: 9, scope: !3960)
!4347 = !DILocation(line: 4456, column: 19, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4344, file: !3, line: 4455, column: 22)
!4349 = !DILocation(line: 4456, column: 23, scope: !4348)
!4350 = !DILocation(line: 4456, column: 17, scope: !4348)
!4351 = !DILocation(line: 4456, column: 15, scope: !4348)
!4352 = !DILocation(line: 4457, column: 11, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4348, file: !3, line: 4457, column: 11)
!4354 = !DILocation(line: 4457, column: 20, scope: !4353)
!4355 = !DILocation(line: 4457, column: 11, scope: !4348)
!4356 = !DILocation(line: 4457, column: 32, scope: !4353)
!4357 = !DILocation(line: 4457, column: 24, scope: !4353)
!4358 = !DILocation(line: 4458, column: 7, scope: !4348)
!4359 = !DILocation(line: 4466, column: 13, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 4466, column: 5)
!4361 = !DILocation(line: 4466, column: 10, scope: !4360)
!4362 = !DILocation(line: 4466, column: 27, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4360, file: !3, line: 4466, column: 5)
!4364 = !DILocation(line: 4466, column: 26, scope: !4363)
!4365 = !DILocation(line: 4466, column: 34, scope: !4363)
!4366 = !DILocation(line: 4466, column: 33, scope: !4363)
!4367 = !DILocation(line: 4466, column: 31, scope: !4363)
!4368 = !DILocation(line: 4466, column: 5, scope: !4360)
!4369 = !DILocation(line: 4466, column: 54, scope: !4363)
!4370 = !DILocation(line: 4466, column: 46, scope: !4363)
!4371 = !DILocation(line: 4466, column: 42, scope: !4363)
!4372 = !DILocation(line: 4466, column: 5, scope: !4363)
!4373 = distinct !{!4373, !4368, !4374}
!4374 = !DILocation(line: 4466, column: 54, scope: !4360)
!4375 = !DILocation(line: 4467, column: 13, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 4467, column: 5)
!4377 = !DILocation(line: 4467, column: 10, scope: !4376)
!4378 = !DILocation(line: 4467, column: 27, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4376, file: !3, line: 4467, column: 5)
!4380 = !DILocation(line: 4467, column: 26, scope: !4379)
!4381 = !DILocation(line: 4467, column: 34, scope: !4379)
!4382 = !DILocation(line: 4467, column: 33, scope: !4379)
!4383 = !DILocation(line: 4467, column: 31, scope: !4379)
!4384 = !DILocation(line: 4467, column: 5, scope: !4376)
!4385 = !DILocation(line: 4467, column: 54, scope: !4379)
!4386 = !DILocation(line: 4467, column: 46, scope: !4379)
!4387 = !DILocation(line: 4467, column: 42, scope: !4379)
!4388 = !DILocation(line: 4467, column: 5, scope: !4379)
!4389 = distinct !{!4389, !4384, !4390}
!4390 = !DILocation(line: 4467, column: 54, scope: !4376)
!4391 = !DILocation(line: 4474, column: 11, scope: !4392)
!4392 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 4474, column: 9)
!4393 = !DILocation(line: 4474, column: 13, scope: !4392)
!4394 = !DILocation(line: 4474, column: 9, scope: !3960)
!4395 = !DILocalVariable(name: "u", scope: !4396, file: !3, line: 4475, type: !43)
!4396 = distinct !DILexicalBlock(scope: !4392, file: !3, line: 4474, column: 23)
!4397 = !DILocation(line: 4475, column: 13, scope: !4396)
!4398 = !DILocation(line: 4477, column: 20, scope: !4396)
!4399 = !DILocation(line: 4477, column: 30, scope: !4396)
!4400 = !DILocation(line: 4477, column: 29, scope: !4396)
!4401 = !DILocation(line: 4477, column: 47, scope: !4396)
!4402 = !DILocation(line: 4477, column: 18, scope: !4396)
!4403 = !DILocation(line: 4479, column: 11, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4396, file: !3, line: 4479, column: 11)
!4405 = !DILocation(line: 4479, column: 19, scope: !4404)
!4406 = !DILocation(line: 4479, column: 11, scope: !4396)
!4407 = !DILocation(line: 4479, column: 28, scope: !4404)
!4408 = !DILocation(line: 4479, column: 27, scope: !4404)
!4409 = !DILocation(line: 4479, column: 26, scope: !4404)
!4410 = !DILocation(line: 4479, column: 23, scope: !4404)
!4411 = !DILocation(line: 4480, column: 25, scope: !4404)
!4412 = !DILocation(line: 4480, column: 33, scope: !4404)
!4413 = !DILocation(line: 4480, column: 24, scope: !4404)
!4414 = !DILocation(line: 4480, column: 16, scope: !4404)
!4415 = !DILocation(line: 4481, column: 23, scope: !4396)
!4416 = !DILocation(line: 4481, column: 29, scope: !4396)
!4417 = !DILocation(line: 4481, column: 40, scope: !4396)
!4418 = !DILocation(line: 4481, column: 7, scope: !4396)
!4419 = !DILocation(line: 4482, column: 17, scope: !4396)
!4420 = !DILocation(line: 4482, column: 15, scope: !4396)
!4421 = !DILocation(line: 4483, column: 20, scope: !4396)
!4422 = !DILocation(line: 4483, column: 18, scope: !4396)
!4423 = !DILocation(line: 4485, column: 14, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4396, file: !3, line: 4485, column: 7)
!4425 = !DILocation(line: 4485, column: 13, scope: !4424)
!4426 = !DILocation(line: 4485, column: 12, scope: !4424)
!4427 = !DILocation(line: 4485, column: 20, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 4485, column: 7)
!4429 = !DILocation(line: 4485, column: 23, scope: !4428)
!4430 = !DILocation(line: 4485, column: 7, scope: !4424)
!4431 = !DILocation(line: 4485, column: 54, scope: !4428)
!4432 = !DILocation(line: 4485, column: 55, scope: !4428)
!4433 = !DILocation(line: 4485, column: 53, scope: !4428)
!4434 = !DILocation(line: 4485, column: 37, scope: !4428)
!4435 = !DILocation(line: 4485, column: 49, scope: !4428)
!4436 = !DILocation(line: 4485, column: 7, scope: !4428)
!4437 = distinct !{!4437, !4430, !4438}
!4438 = !DILocation(line: 4485, column: 56, scope: !4424)
!4439 = !DILocation(line: 4486, column: 7, scope: !4396)
!4440 = !DILocation(line: 4488, column: 19, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4392, file: !3, line: 4487, column: 11)
!4442 = !DILocation(line: 4488, column: 24, scope: !4441)
!4443 = !DILocation(line: 4488, column: 33, scope: !4441)
!4444 = !DILocation(line: 4488, column: 38, scope: !4441)
!4445 = !DILocation(line: 4488, column: 32, scope: !4441)
!4446 = !DILocation(line: 4488, column: 18, scope: !4441)
!4447 = !DILocation(line: 4491, column: 12, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4441, file: !3, line: 4491, column: 11)
!4449 = !DILocation(line: 4491, column: 11, scope: !4448)
!4450 = !DILocation(line: 4491, column: 18, scope: !4448)
!4451 = !DILocation(line: 4491, column: 17, scope: !4448)
!4452 = !DILocation(line: 4491, column: 16, scope: !4448)
!4453 = !DILocation(line: 4491, column: 11, scope: !4441)
!4454 = !DILocation(line: 4492, column: 10, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4448, file: !3, line: 4491, column: 24)
!4456 = !DILocation(line: 4493, column: 10, scope: !4455)
!4457 = !DILocation(line: 4494, column: 2, scope: !4455)
!4458 = !DILocation(line: 4498, column: 13, scope: !3960)
!4459 = !DILocation(line: 4499, column: 14, scope: !3960)
!4460 = !DILocation(line: 4500, column: 13, scope: !3960)
!4461 = !DILocation(line: 4500, column: 17, scope: !3960)
!4462 = !DILocation(line: 4500, column: 16, scope: !3960)
!4463 = !DILocation(line: 4500, column: 26, scope: !3960)
!4464 = !DILocation(line: 4500, column: 12, scope: !3960)
!4465 = !DILocation(line: 4501, column: 5, scope: !3960)
!4466 = !DILocation(line: 4502, column: 15, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4468, file: !3, line: 4501, column: 14)
!4468 = distinct !DILexicalBlock(scope: !4469, file: !3, line: 4501, column: 5)
!4469 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 4501, column: 5)
!4470 = !DILocation(line: 4504, column: 7, scope: !4467)
!4471 = !DILocation(line: 4507, column: 2, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4473, file: !3, line: 4504, column: 16)
!4473 = distinct !DILexicalBlock(scope: !4474, file: !3, line: 4504, column: 7)
!4474 = distinct !DILexicalBlock(scope: !4467, file: !3, line: 4504, column: 7)
!4475 = !DILocation(line: 4507, column: 10, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4477, file: !3, line: 4507, column: 2)
!4477 = distinct !DILexicalBlock(scope: !4472, file: !3, line: 4507, column: 2)
!4478 = !DILocation(line: 4507, column: 9, scope: !4476)
!4479 = !DILocation(line: 4507, column: 14, scope: !4476)
!4480 = !DILocation(line: 4507, column: 18, scope: !4476)
!4481 = !DILocation(line: 4507, column: 21, scope: !4476)
!4482 = !DILocation(line: 4507, column: 26, scope: !4476)
!4483 = !DILocation(line: 4507, column: 25, scope: !4476)
!4484 = !DILocation(line: 0, scope: !4476)
!4485 = !DILocation(line: 4507, column: 2, scope: !4477)
!4486 = !DILocation(line: 4507, column: 49, scope: !4476)
!4487 = !DILocation(line: 4507, column: 40, scope: !4476)
!4488 = !DILocation(line: 4507, column: 36, scope: !4476)
!4489 = !DILocation(line: 4507, column: 2, scope: !4476)
!4490 = distinct !{!4490, !4485, !4491}
!4491 = !DILocation(line: 4507, column: 49, scope: !4477)
!4492 = !DILocation(line: 4509, column: 6, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4472, file: !3, line: 4509, column: 6)
!4494 = !DILocation(line: 4509, column: 16, scope: !4493)
!4495 = !DILocation(line: 4509, column: 15, scope: !4493)
!4496 = !DILocation(line: 4509, column: 6, scope: !4472)
!4497 = !DILocation(line: 4509, column: 26, scope: !4493)
!4498 = !DILocation(line: 4510, column: 6, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4472, file: !3, line: 4510, column: 6)
!4500 = !DILocation(line: 4510, column: 17, scope: !4499)
!4501 = !DILocation(line: 4510, column: 15, scope: !4499)
!4502 = !DILocation(line: 4510, column: 6, scope: !4472)
!4503 = !DILocalVariable(name: "pv1", scope: !4504, file: !3, line: 4512, type: !301)
!4504 = distinct !DILexicalBlock(scope: !4499, file: !3, line: 4510, column: 27)
!4505 = !DILocation(line: 4512, column: 16, scope: !4504)
!4506 = !DILocalVariable(name: "pv2", scope: !4504, file: !3, line: 4512, type: !301)
!4507 = !DILocation(line: 4512, column: 22, scope: !4504)
!4508 = !DILocalVariable(name: "v2", scope: !4504, file: !3, line: 4513, type: !39)
!4509 = !DILocation(line: 4513, column: 9, scope: !4504)
!4510 = !DILocation(line: 4514, column: 8, scope: !4504)
!4511 = !DILocation(line: 4514, column: 7, scope: !4504)
!4512 = !DILocation(line: 4515, column: 13, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4504, file: !3, line: 4515, column: 4)
!4514 = !DILocation(line: 4515, column: 12, scope: !4513)
!4515 = !DILocation(line: 4515, column: 9, scope: !4513)
!4516 = !DILocation(line: 4517, column: 8, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4518, file: !3, line: 4515, column: 35)
!4518 = distinct !DILexicalBlock(scope: !4513, file: !3, line: 4515, column: 4)
!4519 = !DILocation(line: 4518, column: 10, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4517, file: !3, line: 4518, column: 10)
!4521 = !DILocation(line: 4518, column: 15, scope: !4520)
!4522 = !DILocation(line: 4518, column: 13, scope: !4520)
!4523 = !DILocation(line: 4518, column: 10, scope: !4517)
!4524 = !DILocation(line: 4518, column: 25, scope: !4520)
!4525 = !DILocation(line: 4518, column: 24, scope: !4520)
!4526 = !DILocation(line: 4518, column: 23, scope: !4520)
!4527 = !DILocation(line: 4518, column: 21, scope: !4520)
!4528 = !DILocation(line: 4519, column: 11, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4517, file: !3, line: 4519, column: 10)
!4530 = !DILocation(line: 4519, column: 10, scope: !4529)
!4531 = !DILocation(line: 4519, column: 16, scope: !4529)
!4532 = !DILocation(line: 4519, column: 14, scope: !4529)
!4533 = !DILocation(line: 4519, column: 10, scope: !4517)
!4534 = !DILocation(line: 4519, column: 20, scope: !4529)
!4535 = !DILocation(line: 4520, column: 10, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4517, file: !3, line: 4520, column: 10)
!4537 = !DILocation(line: 4520, column: 15, scope: !4536)
!4538 = !DILocation(line: 4520, column: 13, scope: !4536)
!4539 = !DILocation(line: 4520, column: 10, scope: !4517)
!4540 = !DILocation(line: 4520, column: 21, scope: !4536)
!4541 = !DILocation(line: 4521, column: 6, scope: !4517)
!4542 = !DILocation(line: 4515, column: 24, scope: !4518)
!4543 = !DILocation(line: 4515, column: 31, scope: !4518)
!4544 = !DILocation(line: 4515, column: 4, scope: !4518)
!4545 = distinct !{!4545, !4546, !4547}
!4546 = !DILocation(line: 4515, column: 4, scope: !4513)
!4547 = !DILocation(line: 4521, column: 6, scope: !4513)
!4548 = !DILocation(line: 4523, column: 9, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4504, file: !3, line: 4523, column: 8)
!4550 = !DILocation(line: 4523, column: 8, scope: !4549)
!4551 = !DILocation(line: 4523, column: 13, scope: !4549)
!4552 = !DILocation(line: 4523, column: 12, scope: !4549)
!4553 = !DILocation(line: 4523, column: 8, scope: !4504)
!4554 = !DILocation(line: 4523, column: 17, scope: !4549)
!4555 = !DILocation(line: 4524, column: 9, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4504, file: !3, line: 4524, column: 8)
!4557 = !DILocation(line: 4524, column: 8, scope: !4556)
!4558 = !DILocation(line: 4524, column: 14, scope: !4556)
!4559 = !DILocation(line: 4524, column: 12, scope: !4556)
!4560 = !DILocation(line: 4524, column: 8, scope: !4504)
!4561 = !DILocation(line: 4528, column: 14, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 4524, column: 18)
!4563 = !DILocation(line: 4529, column: 7, scope: !4562)
!4564 = !DILocation(line: 4529, column: 11, scope: !4562)
!4565 = !DILocation(line: 4530, column: 15, scope: !4562)
!4566 = !DILocation(line: 4531, column: 6, scope: !4562)
!4567 = !DILocation(line: 4536, column: 23, scope: !4504)
!4568 = !DILocation(line: 4536, column: 22, scope: !4504)
!4569 = !DILocation(line: 4536, column: 16, scope: !4504)
!4570 = !DILocation(line: 4536, column: 27, scope: !4504)
!4571 = !DILocation(line: 4536, column: 45, scope: !4504)
!4572 = !DILocation(line: 4536, column: 49, scope: !4504)
!4573 = !DILocation(line: 4536, column: 43, scope: !4504)
!4574 = !DILocation(line: 4536, column: 42, scope: !4504)
!4575 = !DILocation(line: 4536, column: 54, scope: !4504)
!4576 = !DILocation(line: 4536, column: 53, scope: !4504)
!4577 = !DILocation(line: 4536, column: 8, scope: !4504)
!4578 = !DILocation(line: 4537, column: 4, scope: !4504)
!4579 = !DILocation(line: 4541, column: 23, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4499, file: !3, line: 4538, column: 8)
!4581 = !DILocation(line: 4541, column: 22, scope: !4580)
!4582 = !DILocation(line: 4541, column: 16, scope: !4580)
!4583 = !DILocation(line: 4541, column: 27, scope: !4580)
!4584 = !DILocation(line: 4541, column: 45, scope: !4580)
!4585 = !DILocation(line: 4541, column: 49, scope: !4580)
!4586 = !DILocation(line: 4541, column: 43, scope: !4580)
!4587 = !DILocation(line: 4541, column: 42, scope: !4580)
!4588 = !DILocation(line: 4541, column: 54, scope: !4580)
!4589 = !DILocation(line: 4541, column: 53, scope: !4580)
!4590 = !DILocation(line: 4541, column: 8, scope: !4580)
!4591 = !DILocation(line: 4543, column: 6, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4472, file: !3, line: 4543, column: 6)
!4593 = !DILocation(line: 4543, column: 10, scope: !4592)
!4594 = !DILocation(line: 4543, column: 6, scope: !4472)
!4595 = !DILocation(line: 4543, column: 19, scope: !4592)
!4596 = !DILocation(line: 4543, column: 15, scope: !4592)
!4597 = !DILocation(line: 4545, column: 18, scope: !4472)
!4598 = !DILocation(line: 4545, column: 27, scope: !4472)
!4599 = !DILocation(line: 4545, column: 26, scope: !4472)
!4600 = !DILocation(line: 4545, column: 11, scope: !4472)
!4601 = !DILocation(line: 4545, column: 10, scope: !4472)
!4602 = !DILocation(line: 4548, column: 8, scope: !4472)
!4603 = !DILocation(line: 4548, column: 17, scope: !4472)
!4604 = !DILocation(line: 4548, column: 16, scope: !4472)
!4605 = !DILocation(line: 4548, column: 7, scope: !4472)
!4606 = !DILocation(line: 4554, column: 17, scope: !4472)
!4607 = !DILocation(line: 4554, column: 22, scope: !4472)
!4608 = !DILocation(line: 4554, column: 30, scope: !4472)
!4609 = !DILocation(line: 4554, column: 40, scope: !4472)
!4610 = !DILocation(line: 4554, column: 39, scope: !4472)
!4611 = !DILocation(line: 4555, column: 9, scope: !4472)
!4612 = !DILocation(line: 4555, column: 15, scope: !4472)
!4613 = !DILocation(line: 4556, column: 10, scope: !4472)
!4614 = !DILocation(line: 4556, column: 15, scope: !4472)
!4615 = !DILocation(line: 4556, column: 24, scope: !4472)
!4616 = !DILocation(line: 4556, column: 23, scope: !4472)
!4617 = !DILocation(line: 4554, column: 2, scope: !4472)
!4618 = !DILocation(line: 4504, column: 7, scope: !4473)
!4619 = distinct !{!4619, !4620, !4621}
!4620 = !DILocation(line: 4504, column: 7, scope: !4474)
!4621 = !DILocation(line: 4562, column: 2, scope: !4474)
!4622 = !DILocation(line: 4566, column: 11, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4467, file: !3, line: 4566, column: 11)
!4624 = !DILocation(line: 4566, column: 19, scope: !4623)
!4625 = !DILocation(line: 4566, column: 23, scope: !4623)
!4626 = !DILocation(line: 4566, column: 26, scope: !4623)
!4627 = !DILocation(line: 4566, column: 34, scope: !4623)
!4628 = !DILocation(line: 4566, column: 11, scope: !4467)
!4629 = !DILocation(line: 4567, column: 11, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 4566, column: 39)
!4631 = !DILocation(line: 4567, column: 3, scope: !4630)
!4632 = !DILocation(line: 4567, column: 10, scope: !4630)
!4633 = !DILocation(line: 4569, column: 6, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4630, file: !3, line: 4569, column: 6)
!4635 = !DILocation(line: 4569, column: 14, scope: !4634)
!4636 = !DILocation(line: 4569, column: 6, scope: !4630)
!4637 = !DILocation(line: 4570, column: 13, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4634, file: !3, line: 4569, column: 19)
!4639 = !DILocation(line: 4571, column: 12, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 4571, column: 4)
!4641 = !DILocation(line: 4571, column: 9, scope: !4640)
!4642 = !DILocation(line: 4571, column: 25, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4640, file: !3, line: 4571, column: 4)
!4644 = !DILocation(line: 4571, column: 36, scope: !4643)
!4645 = !DILocation(line: 4571, column: 35, scope: !4643)
!4646 = !DILocation(line: 4571, column: 33, scope: !4643)
!4647 = !DILocation(line: 4571, column: 4, scope: !4640)
!4648 = !DILocation(line: 4571, column: 57, scope: !4643)
!4649 = !DILocation(line: 4571, column: 48, scope: !4643)
!4650 = !DILocation(line: 4571, column: 44, scope: !4643)
!4651 = !DILocation(line: 4571, column: 4, scope: !4643)
!4652 = distinct !{!4652, !4647, !4653}
!4653 = !DILocation(line: 4571, column: 57, scope: !4640)
!4654 = !DILocation(line: 4572, column: 4, scope: !4638)
!4655 = !DILocation(line: 4573, column: 17, scope: !4634)
!4656 = !DILocation(line: 4574, column: 10, scope: !4630)
!4657 = !DILocation(line: 4575, column: 9, scope: !4630)
!4658 = !DILocation(line: 4576, column: 6, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4630, file: !3, line: 4576, column: 6)
!4660 = !DILocation(line: 4576, column: 16, scope: !4659)
!4661 = !DILocation(line: 4576, column: 15, scope: !4659)
!4662 = !DILocation(line: 4576, column: 6, scope: !4630)
!4663 = !DILocation(line: 4576, column: 27, scope: !4659)
!4664 = !DILocation(line: 4577, column: 2, scope: !4630)
!4665 = !DILocation(line: 4581, column: 12, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4467, file: !3, line: 4581, column: 11)
!4667 = !DILocation(line: 4581, column: 11, scope: !4666)
!4668 = !DILocation(line: 4581, column: 16, scope: !4666)
!4669 = !DILocation(line: 4581, column: 20, scope: !4666)
!4670 = !DILocation(line: 4581, column: 23, scope: !4666)
!4671 = !DILocation(line: 4581, column: 32, scope: !4666)
!4672 = !DILocation(line: 4581, column: 11, scope: !4467)
!4673 = !DILocation(line: 4582, column: 6, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 4582, column: 6)
!4675 = distinct !DILexicalBlock(scope: !4666, file: !3, line: 4581, column: 37)
!4676 = !DILocation(line: 4582, column: 8, scope: !4674)
!4677 = !DILocation(line: 4582, column: 6, scope: !4675)
!4678 = !DILocation(line: 4582, column: 30, scope: !4674)
!4679 = !DILocation(line: 4583, column: 7, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 4583, column: 6)
!4681 = !DILocation(line: 4583, column: 9, scope: !4680)
!4682 = !DILocation(line: 4583, column: 18, scope: !4680)
!4683 = !DILocation(line: 4583, column: 22, scope: !4680)
!4684 = !DILocation(line: 4583, column: 32, scope: !4680)
!4685 = !DILocation(line: 4583, column: 30, scope: !4680)
!4686 = !DILocation(line: 4583, column: 6, scope: !4675)
!4687 = !DILocation(line: 4583, column: 46, scope: !4680)
!4688 = !DILocation(line: 4585, column: 2, scope: !4675)
!4689 = !DILocation(line: 4588, column: 11, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4467, file: !3, line: 4588, column: 11)
!4691 = !DILocation(line: 4588, column: 19, scope: !4690)
!4692 = !DILocation(line: 4588, column: 23, scope: !4690)
!4693 = !DILocation(line: 4588, column: 28, scope: !4690)
!4694 = !DILocation(line: 4588, column: 30, scope: !4690)
!4695 = !DILocation(line: 4588, column: 11, scope: !4467)
!4696 = !DILocation(line: 4588, column: 40, scope: !4690)
!4697 = !DILocation(line: 4592, column: 15, scope: !4467)
!4698 = !DILocation(line: 4593, column: 15, scope: !4467)
!4699 = !DILocation(line: 4501, column: 5, scope: !4468)
!4700 = distinct !{!4700, !4701, !4702}
!4701 = !DILocation(line: 4501, column: 5, scope: !4469)
!4702 = !DILocation(line: 4594, column: 7, scope: !4469)
!4703 = !DILocation(line: 4601, column: 9, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 4601, column: 9)
!4705 = !DILocation(line: 4601, column: 17, scope: !4704)
!4706 = !DILocation(line: 4601, column: 9, scope: !3960)
!4707 = !DILocation(line: 4602, column: 15, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4704, file: !3, line: 4601, column: 22)
!4709 = !DILocation(line: 4603, column: 16, scope: !4708)
!4710 = !DILocation(line: 4604, column: 8, scope: !4708)
!4711 = !DILocation(line: 4604, column: 15, scope: !4708)
!4712 = !DILocation(line: 4605, column: 7, scope: !4708)
!4713 = !DILocation(line: 4606, column: 18, scope: !4704)
!4714 = !DILocation(line: 4609, column: 12, scope: !3960)
!4715 = !DILocation(line: 4610, column: 9, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 4610, column: 9)
!4717 = !DILocation(line: 4610, column: 11, scope: !4716)
!4718 = !DILocation(line: 4610, column: 9, scope: !3960)
!4719 = !DILocation(line: 4612, column: 12, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4721, file: !3, line: 4612, column: 11)
!4721 = distinct !DILexicalBlock(scope: !4716, file: !3, line: 4610, column: 20)
!4722 = !DILocation(line: 4612, column: 11, scope: !4720)
!4723 = !DILocation(line: 4612, column: 16, scope: !4720)
!4724 = !DILocation(line: 4612, column: 20, scope: !4720)
!4725 = !DILocation(line: 4612, column: 23, scope: !4720)
!4726 = !DILocation(line: 4612, column: 32, scope: !4720)
!4727 = !DILocation(line: 4612, column: 11, scope: !4721)
!4728 = !DILocation(line: 4612, column: 43, scope: !4720)
!4729 = !DILocation(line: 4612, column: 36, scope: !4720)
!4730 = !DILocalVariable(name: "lsu", scope: !4731, file: !3, line: 4619, type: !39)
!4731 = distinct !DILexicalBlock(scope: !4720, file: !3, line: 4613, column: 13)
!4732 = !DILocation(line: 4619, column: 7, scope: !4731)
!4733 = !DILocation(line: 4619, column: 12, scope: !4731)
!4734 = !DILocation(line: 4619, column: 11, scope: !4731)
!4735 = !DILocation(line: 4620, column: 8, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 4620, column: 6)
!4737 = !DILocation(line: 4620, column: 11, scope: !4736)
!4738 = !DILocation(line: 4620, column: 18, scope: !4736)
!4739 = !DILocation(line: 4620, column: 22, scope: !4736)
!4740 = !DILocation(line: 4620, column: 25, scope: !4736)
!4741 = !DILocation(line: 4620, column: 6, scope: !4731)
!4742 = !DILocalVariable(name: "drop", scope: !4743, file: !3, line: 4622, type: !31)
!4743 = distinct !DILexicalBlock(scope: !4736, file: !3, line: 4620, column: 31)
!4744 = !DILocation(line: 4622, column: 8, scope: !4743)
!4745 = !DILocation(line: 4623, column: 4, scope: !4743)
!4746 = !DILocation(line: 4624, column: 10, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4748, file: !3, line: 4624, column: 10)
!4748 = distinct !DILexicalBlock(scope: !4749, file: !3, line: 4623, column: 20)
!4749 = distinct !DILexicalBlock(scope: !4750, file: !3, line: 4623, column: 4)
!4750 = distinct !DILexicalBlock(scope: !4743, file: !3, line: 4623, column: 4)
!4751 = !DILocation(line: 4624, column: 20, scope: !4747)
!4752 = !DILocation(line: 4624, column: 18, scope: !4747)
!4753 = !DILocation(line: 4624, column: 10, scope: !4748)
!4754 = !DILocation(line: 4624, column: 33, scope: !4747)
!4755 = !DILocation(line: 4626, column: 13, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4748, file: !3, line: 4626, column: 12)
!4757 = !DILocation(line: 4626, column: 17, scope: !4756)
!4758 = !DILocation(line: 4627, column: 13, scope: !4756)
!4759 = !DILocation(line: 4627, column: 17, scope: !4756)
!4760 = !DILocation(line: 4627, column: 6, scope: !4756)
!4761 = !DILocation(line: 4627, column: 5, scope: !4756)
!4762 = !DILocation(line: 4626, column: 16, scope: !4756)
!4763 = !DILocation(line: 4627, column: 21, scope: !4756)
!4764 = !DILocation(line: 4626, column: 12, scope: !4748)
!4765 = !DILocation(line: 4627, column: 26, scope: !4756)
!4766 = !DILocation(line: 4631, column: 14, scope: !4748)
!4767 = !DILocation(line: 4632, column: 6, scope: !4748)
!4768 = !DILocation(line: 4623, column: 16, scope: !4749)
!4769 = !DILocation(line: 4623, column: 4, scope: !4749)
!4770 = distinct !{!4770, !4771, !4772}
!4771 = !DILocation(line: 4623, column: 4, scope: !4750)
!4772 = !DILocation(line: 4632, column: 6, scope: !4750)
!4773 = !DILocation(line: 4633, column: 8, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4743, file: !3, line: 4633, column: 8)
!4775 = !DILocation(line: 4633, column: 12, scope: !4774)
!4776 = !DILocation(line: 4633, column: 8, scope: !4743)
!4777 = !DILocation(line: 4634, column: 31, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4774, file: !3, line: 4633, column: 16)
!4779 = !DILocation(line: 4634, column: 40, scope: !4778)
!4780 = !DILocation(line: 4634, column: 50, scope: !4778)
!4781 = !DILocation(line: 4634, column: 15, scope: !4778)
!4782 = !DILocation(line: 4634, column: 14, scope: !4778)
!4783 = !DILocation(line: 4635, column: 29, scope: !4778)
!4784 = !DILocation(line: 4635, column: 38, scope: !4778)
!4785 = !DILocation(line: 4635, column: 16, scope: !4778)
!4786 = !DILocation(line: 4635, column: 15, scope: !4778)
!4787 = !DILocation(line: 4636, column: 15, scope: !4778)
!4788 = !DILocation(line: 4636, column: 14, scope: !4778)
!4789 = !DILocation(line: 4638, column: 6, scope: !4778)
!4790 = !DILocation(line: 4639, column: 4, scope: !4743)
!4791 = !DILocation(line: 4642, column: 7, scope: !4721)
!4792 = !DILocation(line: 4645, column: 11, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4794, file: !3, line: 4645, column: 11)
!4794 = distinct !DILexicalBlock(scope: !4716, file: !3, line: 4643, column: 28)
!4795 = !DILocation(line: 4645, column: 21, scope: !4793)
!4796 = !DILocation(line: 4645, column: 20, scope: !4793)
!4797 = !DILocation(line: 4645, column: 30, scope: !4793)
!4798 = !DILocation(line: 4645, column: 29, scope: !4793)
!4799 = !DILocation(line: 4645, column: 11, scope: !4794)
!4800 = !DILocation(line: 4646, column: 3, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4793, file: !3, line: 4645, column: 41)
!4802 = !DILocation(line: 4646, column: 9, scope: !4801)
!4803 = !DILocation(line: 4647, column: 2, scope: !4801)
!4804 = !DILocation(line: 4649, column: 11, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4794, file: !3, line: 4649, column: 11)
!4806 = !DILocation(line: 4649, column: 14, scope: !4805)
!4807 = !DILocation(line: 4649, column: 11, scope: !4794)
!4808 = !DILocalVariable(name: "postshift", scope: !4809, file: !3, line: 4652, type: !31)
!4809 = distinct !DILexicalBlock(scope: !4805, file: !3, line: 4649, column: 37)
!4810 = !DILocation(line: 4652, column: 6, scope: !4809)
!4811 = !DILocalVariable(name: "wasodd", scope: !4809, file: !3, line: 4653, type: !44)
!4812 = !DILocation(line: 4653, column: 7, scope: !4809)
!4813 = !DILocalVariable(name: "quotlsu", scope: !4809, file: !3, line: 4654, type: !43)
!4814 = !DILocation(line: 4654, column: 8, scope: !4809)
!4815 = !DILocalVariable(name: "quotdigits", scope: !4809, file: !3, line: 4655, type: !31)
!4816 = !DILocation(line: 4655, column: 7, scope: !4809)
!4817 = !DILocation(line: 4657, column: 7, scope: !4809)
!4818 = !DILocation(line: 4657, column: 12, scope: !4809)
!4819 = !DILocation(line: 4657, column: 6, scope: !4809)
!4820 = !DILocation(line: 4661, column: 7, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4809, file: !3, line: 4661, column: 6)
!4822 = !DILocation(line: 4661, column: 6, scope: !4821)
!4823 = !DILocation(line: 4661, column: 11, scope: !4821)
!4824 = !DILocation(line: 4661, column: 15, scope: !4821)
!4825 = !DILocation(line: 4661, column: 18, scope: !4821)
!4826 = !DILocation(line: 4661, column: 27, scope: !4821)
!4827 = !DILocation(line: 4661, column: 6, scope: !4809)
!4828 = !DILocalVariable(name: "exp", scope: !4829, file: !3, line: 4662, type: !31)
!4829 = distinct !DILexicalBlock(scope: !4821, file: !3, line: 4661, column: 32)
!4830 = !DILocation(line: 4662, column: 8, scope: !4829)
!4831 = !DILocation(line: 4662, column: 12, scope: !4829)
!4832 = !DILocation(line: 4662, column: 17, scope: !4829)
!4833 = !DILocation(line: 4663, column: 8, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4829, file: !3, line: 4663, column: 8)
!4835 = !DILocation(line: 4663, column: 13, scope: !4834)
!4836 = !DILocation(line: 4663, column: 22, scope: !4834)
!4837 = !DILocation(line: 4663, column: 21, scope: !4834)
!4838 = !DILocation(line: 4663, column: 8, scope: !4829)
!4839 = !DILocation(line: 4663, column: 31, scope: !4834)
!4840 = !DILocation(line: 4663, column: 36, scope: !4834)
!4841 = !DILocation(line: 4663, column: 30, scope: !4834)
!4842 = !DILocation(line: 4663, column: 27, scope: !4834)
!4843 = !DILocation(line: 4664, column: 18, scope: !4829)
!4844 = !DILocation(line: 4664, column: 4, scope: !4829)
!4845 = !DILocation(line: 4668, column: 18, scope: !4829)
!4846 = !DILocation(line: 4668, column: 4, scope: !4829)
!4847 = !DILocation(line: 4668, column: 9, scope: !4829)
!4848 = !DILocation(line: 4668, column: 17, scope: !4829)
!4849 = !DILocation(line: 4669, column: 22, scope: !4829)
!4850 = !DILocation(line: 4669, column: 26, scope: !4829)
!4851 = !DILocation(line: 4669, column: 14, scope: !4829)
!4852 = !DILocation(line: 4669, column: 4, scope: !4829)
!4853 = !DILocation(line: 4669, column: 9, scope: !4829)
!4854 = !DILocation(line: 4669, column: 13, scope: !4829)
!4855 = !DILocation(line: 4670, column: 4, scope: !4829)
!4856 = !DILocation(line: 4671, column: 4, scope: !4829)
!4857 = !DILocation(line: 4674, column: 7, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4809, file: !3, line: 4674, column: 6)
!4859 = !DILocation(line: 4674, column: 6, scope: !4858)
!4860 = !DILocation(line: 4674, column: 15, scope: !4858)
!4861 = !DILocation(line: 4674, column: 6, scope: !4809)
!4862 = !DILocation(line: 4674, column: 29, scope: !4858)
!4863 = !DILocation(line: 4674, column: 23, scope: !4858)
!4864 = !DILocation(line: 4675, column: 10, scope: !4809)
!4865 = !DILocation(line: 4675, column: 9, scope: !4809)
!4866 = !DILocation(line: 4676, column: 13, scope: !4809)
!4867 = !DILocation(line: 4676, column: 12, scope: !4809)
!4868 = !DILocation(line: 4682, column: 12, scope: !4809)
!4869 = !DILocation(line: 4682, column: 24, scope: !4809)
!4870 = !DILocation(line: 4682, column: 23, scope: !4809)
!4871 = !DILocation(line: 4682, column: 33, scope: !4809)
!4872 = !DILocation(line: 4682, column: 38, scope: !4809)
!4873 = !DILocation(line: 4682, column: 32, scope: !4809)
!4874 = !DILocation(line: 4682, column: 47, scope: !4809)
!4875 = !DILocation(line: 4682, column: 52, scope: !4809)
!4876 = !DILocation(line: 4682, column: 46, scope: !4809)
!4877 = !DILocation(line: 4682, column: 11, scope: !4809)
!4878 = !DILocation(line: 4684, column: 6, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4809, file: !3, line: 4684, column: 6)
!4880 = !DILocation(line: 4684, column: 18, scope: !4879)
!4881 = !DILocation(line: 4684, column: 17, scope: !4879)
!4882 = !DILocation(line: 4684, column: 6, scope: !4809)
!4883 = !DILocation(line: 4684, column: 39, scope: !4879)
!4884 = !DILocation(line: 4684, column: 38, scope: !4879)
!4885 = !DILocation(line: 4684, column: 29, scope: !4879)
!4886 = !DILocation(line: 4687, column: 28, scope: !4809)
!4887 = !DILocation(line: 4687, column: 34, scope: !4809)
!4888 = !DILocation(line: 4687, column: 45, scope: !4809)
!4889 = !DILocation(line: 4687, column: 12, scope: !4809)
!4890 = !DILocation(line: 4687, column: 11, scope: !4809)
!4891 = !DILocation(line: 4688, column: 10, scope: !4809)
!4892 = !DILocation(line: 4688, column: 9, scope: !4809)
!4893 = !DILocation(line: 4689, column: 25, scope: !4809)
!4894 = !DILocation(line: 4689, column: 31, scope: !4809)
!4895 = !DILocation(line: 4689, column: 12, scope: !4809)
!4896 = !DILocation(line: 4689, column: 11, scope: !4809)
!4897 = !DILocation(line: 4690, column: 11, scope: !4809)
!4898 = !DILocation(line: 4690, column: 10, scope: !4809)
!4899 = !DILocation(line: 4692, column: 11, scope: !4809)
!4900 = !DILocation(line: 4692, column: 16, scope: !4809)
!4901 = !DILocation(line: 4692, column: 10, scope: !4809)
!4902 = !DILocation(line: 4693, column: 6, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4809, file: !3, line: 4693, column: 6)
!4904 = !DILocation(line: 4693, column: 11, scope: !4903)
!4905 = !DILocation(line: 4693, column: 20, scope: !4903)
!4906 = !DILocation(line: 4693, column: 19, scope: !4903)
!4907 = !DILocation(line: 4693, column: 6, scope: !4809)
!4908 = !DILocation(line: 4693, column: 39, scope: !4903)
!4909 = !DILocation(line: 4693, column: 44, scope: !4903)
!4910 = !DILocation(line: 4693, column: 38, scope: !4903)
!4911 = !DILocation(line: 4693, column: 30, scope: !4903)
!4912 = !DILocation(line: 4698, column: 6, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4809, file: !3, line: 4698, column: 6)
!4914 = !DILocation(line: 4698, column: 8, scope: !4913)
!4915 = !DILocation(line: 4698, column: 6, scope: !4809)
!4916 = !DILocalVariable(name: "compare", scope: !4917, file: !3, line: 4699, type: !31)
!4917 = distinct !DILexicalBlock(scope: !4913, file: !3, line: 4698, column: 18)
!4918 = !DILocation(line: 4699, column: 8, scope: !4917)
!4919 = !DILocalVariable(name: "tarunits", scope: !4917, file: !3, line: 4699, type: !31)
!4920 = !DILocation(line: 4699, column: 17, scope: !4917)
!4921 = !DILocalVariable(name: "up", scope: !4917, file: !3, line: 4700, type: !43)
!4922 = !DILocation(line: 4700, column: 10, scope: !4917)
!4923 = !DILocation(line: 4704, column: 27, scope: !4917)
!4924 = !DILocation(line: 4704, column: 36, scope: !4917)
!4925 = !DILocation(line: 4704, column: 46, scope: !4917)
!4926 = !DILocation(line: 4704, column: 55, scope: !4917)
!4927 = !DILocation(line: 4705, column: 9, scope: !4917)
!4928 = !DILocation(line: 4704, column: 13, scope: !4917)
!4929 = !DILocation(line: 4704, column: 12, scope: !4917)
!4930 = !DILocation(line: 4711, column: 27, scope: !4917)
!4931 = !DILocation(line: 4711, column: 36, scope: !4917)
!4932 = !DILocation(line: 4711, column: 46, scope: !4917)
!4933 = !DILocation(line: 4711, column: 51, scope: !4917)
!4934 = !DILocation(line: 4711, column: 56, scope: !4917)
!4935 = !DILocation(line: 4712, column: 6, scope: !4917)
!4936 = !DILocation(line: 4712, column: 11, scope: !4917)
!4937 = !DILocation(line: 4712, column: 20, scope: !4917)
!4938 = !DILocation(line: 4712, column: 19, scope: !4917)
!4939 = !DILocation(line: 4711, column: 12, scope: !4917)
!4940 = !DILocation(line: 4711, column: 11, scope: !4917)
!4941 = !DILocation(line: 4713, column: 8, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 4713, column: 8)
!4943 = !DILocation(line: 4713, column: 15, scope: !4942)
!4944 = !DILocation(line: 4713, column: 8, scope: !4917)
!4945 = !DILocation(line: 4714, column: 7, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4942, file: !3, line: 4713, column: 25)
!4947 = !DILocation(line: 4714, column: 13, scope: !4946)
!4948 = !DILocation(line: 4715, column: 6, scope: !4946)
!4949 = !DILocation(line: 4719, column: 12, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 4719, column: 4)
!4951 = !DILocation(line: 4719, column: 11, scope: !4950)
!4952 = !DILocation(line: 4719, column: 9, scope: !4950)
!4953 = !DILocation(line: 4719, column: 21, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4950, file: !3, line: 4719, column: 4)
!4955 = !DILocation(line: 4719, column: 24, scope: !4954)
!4956 = !DILocation(line: 4719, column: 32, scope: !4954)
!4957 = !DILocation(line: 4719, column: 31, scope: !4954)
!4958 = !DILocation(line: 4719, column: 23, scope: !4954)
!4959 = !DILocation(line: 4719, column: 4, scope: !4950)
!4960 = !DILocalVariable(name: "half", scope: !4961, file: !3, line: 4720, type: !31)
!4961 = distinct !DILexicalBlock(scope: !4954, file: !3, line: 4719, column: 48)
!4962 = !DILocation(line: 4720, column: 10, scope: !4961)
!4963 = !DILocation(line: 4721, column: 12, scope: !4961)
!4964 = !DILocation(line: 4721, column: 11, scope: !4961)
!4965 = !DILocation(line: 4721, column: 15, scope: !4961)
!4966 = !DILocation(line: 4721, column: 10, scope: !4961)
!4967 = !DILocation(line: 4722, column: 7, scope: !4961)
!4968 = !DILocation(line: 4722, column: 9, scope: !4961)
!4969 = !DILocation(line: 4723, column: 11, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4961, file: !3, line: 4723, column: 10)
!4971 = !DILocation(line: 4723, column: 10, scope: !4961)
!4972 = !DILocation(line: 4723, column: 17, scope: !4970)
!4973 = !DILocation(line: 4724, column: 8, scope: !4961)
!4974 = !DILocation(line: 4724, column: 10, scope: !4961)
!4975 = !DILocation(line: 4724, column: 13, scope: !4961)
!4976 = !DILocation(line: 4725, column: 6, scope: !4961)
!4977 = !DILocation(line: 4719, column: 44, scope: !4954)
!4978 = !DILocation(line: 4719, column: 4, scope: !4954)
!4979 = distinct !{!4979, !4959, !4980}
!4980 = !DILocation(line: 4725, column: 6, scope: !4950)
!4981 = !DILocation(line: 4728, column: 8, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 4728, column: 8)
!4983 = !DILocation(line: 4728, column: 15, scope: !4982)
!4984 = !DILocation(line: 4728, column: 18, scope: !4982)
!4985 = !DILocation(line: 4728, column: 22, scope: !4982)
!4986 = !DILocation(line: 4728, column: 29, scope: !4982)
!4987 = !DILocation(line: 4728, column: 33, scope: !4982)
!4988 = !DILocation(line: 4728, column: 36, scope: !4982)
!4989 = !DILocation(line: 4728, column: 8, scope: !4917)
!4990 = !DILocalVariable(name: "exp", scope: !4991, file: !3, line: 4729, type: !31)
!4991 = distinct !DILexicalBlock(scope: !4982, file: !3, line: 4728, column: 45)
!4992 = !DILocation(line: 4729, column: 10, scope: !4991)
!4993 = !DILocalVariable(name: "expunits", scope: !4991, file: !3, line: 4729, type: !31)
!4994 = !DILocation(line: 4729, column: 15, scope: !4991)
!4995 = !DILocalVariable(name: "exprem", scope: !4991, file: !3, line: 4729, type: !31)
!4996 = !DILocation(line: 4729, column: 25, scope: !4991)
!4997 = !DILocalVariable(name: "allnines", scope: !4991, file: !3, line: 4734, type: !44)
!4998 = !DILocation(line: 4734, column: 11, scope: !4991)
!4999 = !DILocation(line: 4735, column: 10, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4991, file: !3, line: 4735, column: 10)
!5001 = !DILocation(line: 4735, column: 22, scope: !5000)
!5002 = !DILocation(line: 4735, column: 20, scope: !5000)
!5003 = !DILocation(line: 4735, column: 10, scope: !4991)
!5004 = !DILocation(line: 4736, column: 16, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !5006, file: !3, line: 4736, column: 8)
!5006 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 4735, column: 33)
!5007 = !DILocation(line: 4736, column: 15, scope: !5005)
!5008 = !DILocation(line: 4736, column: 13, scope: !5005)
!5009 = !DILocation(line: 4737, column: 7, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5011, file: !3, line: 4737, column: 7)
!5011 = distinct !DILexicalBlock(scope: !5012, file: !3, line: 4736, column: 33)
!5012 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 4736, column: 8)
!5013 = !DILocation(line: 4737, column: 17, scope: !5010)
!5014 = !DILocation(line: 4737, column: 7, scope: !5011)
!5015 = !DILocation(line: 4738, column: 10, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 4738, column: 9)
!5017 = distinct !DILexicalBlock(scope: !5010, file: !3, line: 4737, column: 27)
!5018 = !DILocation(line: 4738, column: 9, scope: !5016)
!5019 = !DILocation(line: 4738, column: 12, scope: !5016)
!5020 = !DILocation(line: 4738, column: 9, scope: !5017)
!5021 = !DILocation(line: 4738, column: 26, scope: !5016)
!5022 = !DILocation(line: 4739, column: 5, scope: !5017)
!5023 = !DILocation(line: 4741, column: 10, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5025, file: !3, line: 4741, column: 9)
!5025 = distinct !DILexicalBlock(scope: !5010, file: !3, line: 4740, column: 9)
!5026 = !DILocation(line: 4741, column: 9, scope: !5024)
!5027 = !DILocation(line: 4741, column: 21, scope: !5024)
!5028 = !DILocation(line: 4741, column: 14, scope: !5024)
!5029 = !DILocation(line: 4741, column: 32, scope: !5024)
!5030 = !DILocation(line: 4741, column: 12, scope: !5024)
!5031 = !DILocation(line: 4741, column: 9, scope: !5025)
!5032 = !DILocation(line: 4741, column: 44, scope: !5024)
!5033 = !DILocation(line: 4741, column: 36, scope: !5024)
!5034 = !DILocation(line: 4742, column: 5, scope: !5025)
!5035 = !DILocation(line: 4744, column: 13, scope: !5011)
!5036 = !DILocation(line: 4745, column: 3, scope: !5011)
!5037 = !DILocation(line: 4736, column: 29, scope: !5012)
!5038 = !DILocation(line: 4736, column: 8, scope: !5012)
!5039 = distinct !{!5039, !5040, !5041}
!5040 = !DILocation(line: 4736, column: 8, scope: !5005)
!5041 = !DILocation(line: 4745, column: 3, scope: !5005)
!5042 = !DILocation(line: 4746, column: 8, scope: !5006)
!5043 = !DILocation(line: 4747, column: 10, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !4991, file: !3, line: 4747, column: 10)
!5045 = !DILocation(line: 4747, column: 10, scope: !4991)
!5046 = !DILocation(line: 4748, column: 9, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 4747, column: 20)
!5048 = !DILocation(line: 4748, column: 15, scope: !5047)
!5049 = !DILocation(line: 4749, column: 8, scope: !5047)
!5050 = !DILocation(line: 4753, column: 10, scope: !4991)
!5051 = !DILocation(line: 4753, column: 15, scope: !4991)
!5052 = !DILocation(line: 4753, column: 24, scope: !4991)
!5053 = !DILocation(line: 4753, column: 23, scope: !4991)
!5054 = !DILocation(line: 4753, column: 9, scope: !4991)
!5055 = !DILocation(line: 4755, column: 15, scope: !4991)
!5056 = !DILocation(line: 4755, column: 18, scope: !4991)
!5057 = !DILocation(line: 4755, column: 14, scope: !4991)
!5058 = !DILocation(line: 4756, column: 13, scope: !4991)
!5059 = !DILocation(line: 4756, column: 16, scope: !4991)
!5060 = !DILocation(line: 4756, column: 12, scope: !4991)
!5061 = !DILocation(line: 4758, column: 30, scope: !4991)
!5062 = !DILocation(line: 4758, column: 39, scope: !4991)
!5063 = !DILocation(line: 4759, column: 9, scope: !4991)
!5064 = !DILocation(line: 4759, column: 14, scope: !4991)
!5065 = !DILocation(line: 4759, column: 19, scope: !4991)
!5066 = !DILocation(line: 4760, column: 9, scope: !4991)
!5067 = !DILocation(line: 4760, column: 19, scope: !4991)
!5068 = !DILocation(line: 4760, column: 41, scope: !4991)
!5069 = !DILocation(line: 4760, column: 34, scope: !4991)
!5070 = !DILocation(line: 4760, column: 28, scope: !4991)
!5071 = !DILocation(line: 4758, column: 16, scope: !4991)
!5072 = !DILocation(line: 4758, column: 15, scope: !4991)
!5073 = !DILocation(line: 4758, column: 14, scope: !4991)
!5074 = !DILocation(line: 4761, column: 29, scope: !4991)
!5075 = !DILocation(line: 4761, column: 38, scope: !4991)
!5076 = !DILocation(line: 4761, column: 16, scope: !4991)
!5077 = !DILocation(line: 4761, column: 15, scope: !4991)
!5078 = !DILocation(line: 4762, column: 15, scope: !4991)
!5079 = !DILocation(line: 4762, column: 14, scope: !4991)
!5080 = !DILocation(line: 4764, column: 10, scope: !4991)
!5081 = !DILocation(line: 4765, column: 6, scope: !4991)
!5082 = !DILocation(line: 4766, column: 4, scope: !4917)
!5083 = !DILocation(line: 4767, column: 2, scope: !4809)
!5084 = !DILocation(line: 4771, column: 19, scope: !3960)
!5085 = !DILocation(line: 4771, column: 5, scope: !3960)
!5086 = !DILocation(line: 4771, column: 10, scope: !3960)
!5087 = !DILocation(line: 4771, column: 18, scope: !3960)
!5088 = !DILocation(line: 4772, column: 23, scope: !3960)
!5089 = !DILocation(line: 4772, column: 27, scope: !3960)
!5090 = !DILocation(line: 4772, column: 15, scope: !3960)
!5091 = !DILocation(line: 4772, column: 5, scope: !3960)
!5092 = !DILocation(line: 4772, column: 10, scope: !3960)
!5093 = !DILocation(line: 4772, column: 14, scope: !3960)
!5094 = !DILocation(line: 4775, column: 17, scope: !3960)
!5095 = !DILocation(line: 4775, column: 22, scope: !3960)
!5096 = !DILocation(line: 4775, column: 27, scope: !3960)
!5097 = !DILocation(line: 4775, column: 36, scope: !3960)
!5098 = !DILocation(line: 4775, column: 57, scope: !3960)
!5099 = !DILocation(line: 4775, column: 5, scope: !3960)
!5100 = !DILocation(line: 4777, column: 5, scope: !3960)
!5101 = !DILocation(line: 4783, column: 5, scope: !3960)
!5102 = !DILocation(line: 4785, column: 7, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !3870, file: !3, line: 4785, column: 7)
!5104 = !DILocation(line: 4785, column: 15, scope: !5103)
!5105 = !DILocation(line: 4785, column: 7, scope: !3870)
!5106 = !DILocation(line: 4785, column: 28, scope: !5103)
!5107 = !DILocation(line: 4785, column: 23, scope: !5103)
!5108 = !DILocation(line: 4786, column: 7, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !3870, file: !3, line: 4786, column: 7)
!5110 = !DILocation(line: 4786, column: 15, scope: !5109)
!5111 = !DILocation(line: 4786, column: 7, scope: !3870)
!5112 = !DILocation(line: 4786, column: 28, scope: !5109)
!5113 = !DILocation(line: 4786, column: 23, scope: !5109)
!5114 = !DILocation(line: 4791, column: 10, scope: !3870)
!5115 = !DILocation(line: 4791, column: 3, scope: !3870)
!5116 = distinct !DISubprogram(name: "decNumberDivideInteger", scope: !3, file: !3, line: 1014, type: !2989, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!5117 = !DILocalVariable(name: "res", arg: 1, scope: !5116, file: !3, line: 1014, type: !47)
!5118 = !DILocation(line: 1014, column: 47, scope: !5116)
!5119 = !DILocalVariable(name: "lhs", arg: 2, scope: !5116, file: !3, line: 1014, type: !267)
!5120 = !DILocation(line: 1014, column: 69, scope: !5116)
!5121 = !DILocalVariable(name: "rhs", arg: 3, scope: !5116, file: !3, line: 1015, type: !267)
!5122 = !DILocation(line: 1015, column: 25, scope: !5116)
!5123 = !DILocalVariable(name: "set", arg: 4, scope: !5116, file: !3, line: 1015, type: !269)
!5124 = !DILocation(line: 1015, column: 42, scope: !5116)
!5125 = !DILocalVariable(name: "status", scope: !5116, file: !3, line: 1016, type: !36)
!5126 = !DILocation(line: 1016, column: 8, scope: !5116)
!5127 = !DILocation(line: 1017, column: 15, scope: !5116)
!5128 = !DILocation(line: 1017, column: 20, scope: !5116)
!5129 = !DILocation(line: 1017, column: 25, scope: !5116)
!5130 = !DILocation(line: 1017, column: 30, scope: !5116)
!5131 = !DILocation(line: 1017, column: 3, scope: !5116)
!5132 = !DILocation(line: 1018, column: 7, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5116, file: !3, line: 1018, column: 7)
!5134 = !DILocation(line: 1018, column: 13, scope: !5133)
!5135 = !DILocation(line: 1018, column: 7, scope: !5116)
!5136 = !DILocation(line: 1018, column: 28, scope: !5133)
!5137 = !DILocation(line: 1018, column: 33, scope: !5133)
!5138 = !DILocation(line: 1018, column: 41, scope: !5133)
!5139 = !DILocation(line: 1018, column: 18, scope: !5133)
!5140 = !DILocation(line: 1019, column: 10, scope: !5116)
!5141 = !DILocation(line: 1019, column: 3, scope: !5116)
!5142 = distinct !DISubprogram(name: "decNumberExp", scope: !3, file: !3, line: 1047, type: !2287, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!5143 = !DILocalVariable(name: "res", arg: 1, scope: !5142, file: !3, line: 1047, type: !47)
!5144 = !DILocation(line: 1047, column: 37, scope: !5142)
!5145 = !DILocalVariable(name: "rhs", arg: 2, scope: !5142, file: !3, line: 1047, type: !267)
!5146 = !DILocation(line: 1047, column: 59, scope: !5142)
!5147 = !DILocalVariable(name: "set", arg: 3, scope: !5142, file: !3, line: 1048, type: !269)
!5148 = !DILocation(line: 1048, column: 17, scope: !5142)
!5149 = !DILocalVariable(name: "status", scope: !5142, file: !3, line: 1049, type: !36)
!5150 = !DILocation(line: 1049, column: 8, scope: !5142)
!5151 = !DILocation(line: 1062, column: 21, scope: !5152)
!5152 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 1062, column: 7)
!5153 = !DILocation(line: 1062, column: 26, scope: !5152)
!5154 = !DILocation(line: 1062, column: 8, scope: !5152)
!5155 = !DILocation(line: 1062, column: 7, scope: !5142)
!5156 = !DILocation(line: 1062, column: 41, scope: !5152)
!5157 = !DILocation(line: 1073, column: 14, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5152, file: !3, line: 1062, column: 44)
!5159 = !DILocation(line: 1073, column: 19, scope: !5158)
!5160 = !DILocation(line: 1073, column: 24, scope: !5158)
!5161 = !DILocation(line: 1073, column: 5, scope: !5158)
!5162 = !DILocation(line: 1074, column: 5, scope: !5158)
!5163 = !DILocation(line: 1080, column: 7, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 1080, column: 7)
!5165 = !DILocation(line: 1080, column: 13, scope: !5164)
!5166 = !DILocation(line: 1080, column: 7, scope: !5142)
!5167 = !DILocation(line: 1080, column: 28, scope: !5164)
!5168 = !DILocation(line: 1080, column: 33, scope: !5164)
!5169 = !DILocation(line: 1080, column: 41, scope: !5164)
!5170 = !DILocation(line: 1080, column: 18, scope: !5164)
!5171 = !DILocation(line: 1084, column: 10, scope: !5142)
!5172 = !DILocation(line: 1084, column: 3, scope: !5142)
!5173 = distinct !DISubprogram(name: "decCheckMath", scope: !3, file: !3, line: 7508, type: !5174, scopeLine: 7509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!5174 = !DISubroutineType(types: !5175)
!5175 = !{!36, !267, !269, !59}
!5176 = !DILocalVariable(name: "rhs", arg: 1, scope: !5173, file: !3, line: 7508, type: !267)
!5177 = !DILocation(line: 7508, column: 43, scope: !5173)
!5178 = !DILocalVariable(name: "set", arg: 2, scope: !5173, file: !3, line: 7508, type: !269)
!5179 = !DILocation(line: 7508, column: 60, scope: !5173)
!5180 = !DILocalVariable(name: "status", arg: 3, scope: !5173, file: !3, line: 7509, type: !59)
!5181 = !DILocation(line: 7509, column: 11, scope: !5173)
!5182 = !DILocalVariable(name: "save", scope: !5173, file: !3, line: 7510, type: !36)
!5183 = !DILocation(line: 7510, column: 8, scope: !5173)
!5184 = !DILocation(line: 7510, column: 14, scope: !5173)
!5185 = !DILocation(line: 7510, column: 13, scope: !5173)
!5186 = !DILocation(line: 7511, column: 7, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5173, file: !3, line: 7511, column: 7)
!5188 = !DILocation(line: 7511, column: 12, scope: !5187)
!5189 = !DILocation(line: 7511, column: 18, scope: !5187)
!5190 = !DILocation(line: 7512, column: 4, scope: !5187)
!5191 = !DILocation(line: 7512, column: 7, scope: !5187)
!5192 = !DILocation(line: 7512, column: 12, scope: !5187)
!5193 = !DILocation(line: 7512, column: 16, scope: !5187)
!5194 = !DILocation(line: 7513, column: 4, scope: !5187)
!5195 = !DILocation(line: 7513, column: 8, scope: !5187)
!5196 = !DILocation(line: 7513, column: 13, scope: !5187)
!5197 = !DILocation(line: 7513, column: 7, scope: !5187)
!5198 = !DILocation(line: 7513, column: 17, scope: !5187)
!5199 = !DILocation(line: 7511, column: 7, scope: !5173)
!5200 = !DILocation(line: 7513, column: 33, scope: !5187)
!5201 = !DILocation(line: 7513, column: 39, scope: !5187)
!5202 = !DILocation(line: 7513, column: 32, scope: !5187)
!5203 = !DILocation(line: 7514, column: 14, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5187, file: !3, line: 7514, column: 13)
!5205 = !DILocation(line: 7514, column: 19, scope: !5204)
!5206 = !DILocation(line: 7514, column: 25, scope: !5204)
!5207 = !DILocation(line: 7515, column: 6, scope: !5204)
!5208 = !DILocation(line: 7515, column: 9, scope: !5204)
!5209 = !DILocation(line: 7515, column: 14, scope: !5204)
!5210 = !DILocation(line: 7515, column: 23, scope: !5204)
!5211 = !DILocation(line: 7515, column: 28, scope: !5204)
!5212 = !DILocation(line: 7515, column: 22, scope: !5204)
!5213 = !DILocation(line: 7515, column: 34, scope: !5204)
!5214 = !DILocation(line: 7516, column: 6, scope: !5204)
!5215 = !DILocation(line: 7516, column: 9, scope: !5204)
!5216 = !DILocation(line: 7516, column: 14, scope: !5204)
!5217 = !DILocation(line: 7516, column: 23, scope: !5204)
!5218 = !DILocation(line: 7516, column: 28, scope: !5204)
!5219 = !DILocation(line: 7516, column: 22, scope: !5204)
!5220 = !DILocation(line: 7516, column: 34, scope: !5204)
!5221 = !DILocation(line: 7517, column: 6, scope: !5204)
!5222 = !DILocation(line: 7517, column: 10, scope: !5204)
!5223 = !DILocation(line: 7514, column: 13, scope: !5187)
!5224 = !DILocation(line: 7517, column: 24, scope: !5204)
!5225 = !DILocation(line: 7517, column: 30, scope: !5204)
!5226 = !DILocation(line: 7517, column: 23, scope: !5204)
!5227 = !DILocation(line: 7518, column: 12, scope: !5173)
!5228 = !DILocation(line: 7518, column: 11, scope: !5173)
!5229 = !DILocation(line: 7518, column: 20, scope: !5173)
!5230 = !DILocation(line: 7518, column: 18, scope: !5173)
!5231 = !DILocation(line: 7518, column: 3, scope: !5173)
!5232 = distinct !DISubprogram(name: "decExpOp", scope: !3, file: !3, line: 5221, type: !5233, scopeLine: 5222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!5233 = !DISubroutineType(types: !5234)
!5234 = !{!47, !47, !267, !269, !59}
!5235 = !DILocalVariable(name: "res", arg: 1, scope: !5232, file: !3, line: 5221, type: !47)
!5236 = !DILocation(line: 5221, column: 33, scope: !5232)
!5237 = !DILocalVariable(name: "rhs", arg: 2, scope: !5232, file: !3, line: 5221, type: !267)
!5238 = !DILocation(line: 5221, column: 55, scope: !5232)
!5239 = !DILocalVariable(name: "set", arg: 3, scope: !5232, file: !3, line: 5222, type: !269)
!5240 = !DILocation(line: 5222, column: 17, scope: !5232)
!5241 = !DILocalVariable(name: "status", arg: 4, scope: !5232, file: !3, line: 5222, type: !59)
!5242 = !DILocation(line: 5222, column: 28, scope: !5232)
!5243 = !DILocalVariable(name: "ignore", scope: !5232, file: !3, line: 5223, type: !36)
!5244 = !DILocation(line: 5223, column: 8, scope: !5232)
!5245 = !DILocalVariable(name: "h", scope: !5232, file: !3, line: 5224, type: !31)
!5246 = !DILocation(line: 5224, column: 7, scope: !5232)
!5247 = !DILocalVariable(name: "p", scope: !5232, file: !3, line: 5225, type: !31)
!5248 = !DILocation(line: 5225, column: 7, scope: !5232)
!5249 = !DILocalVariable(name: "residue", scope: !5232, file: !3, line: 5226, type: !31)
!5250 = !DILocation(line: 5226, column: 7, scope: !5232)
!5251 = !DILocalVariable(name: "needbytes", scope: !5232, file: !3, line: 5227, type: !36)
!5252 = !DILocation(line: 5227, column: 8, scope: !5232)
!5253 = !DILocalVariable(name: "x", scope: !5232, file: !3, line: 5228, type: !267)
!5254 = !DILocation(line: 5228, column: 20, scope: !5232)
!5255 = !DILocation(line: 5228, column: 22, scope: !5232)
!5256 = !DILocalVariable(name: "aset", scope: !5232, file: !3, line: 5229, type: !270)
!5257 = !DILocation(line: 5229, column: 14, scope: !5232)
!5258 = !DILocalVariable(name: "tset", scope: !5232, file: !3, line: 5229, type: !270)
!5259 = !DILocation(line: 5229, column: 20, scope: !5232)
!5260 = !DILocalVariable(name: "dset", scope: !5232, file: !3, line: 5229, type: !270)
!5261 = !DILocation(line: 5229, column: 26, scope: !5232)
!5262 = !DILocalVariable(name: "comp", scope: !5232, file: !3, line: 5230, type: !31)
!5263 = !DILocation(line: 5230, column: 7, scope: !5232)
!5264 = !DILocalVariable(name: "bufr", scope: !5232, file: !3, line: 5235, type: !5265)
!5265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 480, elements: !75)
!5266 = !DILocation(line: 5235, column: 13, scope: !5232)
!5267 = !DILocalVariable(name: "allocrhs", scope: !5232, file: !3, line: 5236, type: !47)
!5268 = !DILocation(line: 5236, column: 14, scope: !5232)
!5269 = !DILocalVariable(name: "buft", scope: !5232, file: !3, line: 5243, type: !5270)
!5270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 576, elements: !5271)
!5271 = !{!5272}
!5272 = !DISubrange(count: 6)
!5273 = !DILocation(line: 5243, column: 13, scope: !5232)
!5274 = !DILocalVariable(name: "allocbuft", scope: !5232, file: !3, line: 5244, type: !47)
!5275 = !DILocation(line: 5244, column: 14, scope: !5232)
!5276 = !DILocalVariable(name: "t", scope: !5232, file: !3, line: 5245, type: !47)
!5277 = !DILocation(line: 5245, column: 14, scope: !5232)
!5278 = !DILocation(line: 5245, column: 16, scope: !5232)
!5279 = !DILocalVariable(name: "bufa", scope: !5232, file: !3, line: 5247, type: !5280)
!5280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 960, elements: !83)
!5281 = !DILocation(line: 5247, column: 13, scope: !5232)
!5282 = !DILocalVariable(name: "allocbufa", scope: !5232, file: !3, line: 5248, type: !47)
!5283 = !DILocation(line: 5248, column: 14, scope: !5232)
!5284 = !DILocalVariable(name: "a", scope: !5232, file: !3, line: 5249, type: !47)
!5285 = !DILocation(line: 5249, column: 14, scope: !5232)
!5286 = !DILocation(line: 5249, column: 16, scope: !5232)
!5287 = !DILocalVariable(name: "bufd", scope: !5232, file: !3, line: 5252, type: !5288)
!5288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 192, elements: !5289)
!5289 = !{!5290}
!5290 = !DISubrange(count: 2)
!5291 = !DILocation(line: 5252, column: 13, scope: !5232)
!5292 = !DILocalVariable(name: "d", scope: !5232, file: !3, line: 5253, type: !47)
!5293 = !DILocation(line: 5253, column: 14, scope: !5232)
!5294 = !DILocation(line: 5253, column: 16, scope: !5232)
!5295 = !DILocalVariable(name: "numone", scope: !5232, file: !3, line: 5254, type: !48)
!5296 = !DILocation(line: 5254, column: 13, scope: !5232)
!5297 = !DILocation(line: 5261, column: 3, scope: !5232)
!5298 = !DILocation(line: 5262, column: 9, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 5262, column: 9)
!5300 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 5261, column: 6)
!5301 = !DILocation(line: 5262, column: 9, scope: !5300)
!5302 = !DILocation(line: 5263, column: 11, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5304, file: !3, line: 5263, column: 11)
!5304 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 5262, column: 21)
!5305 = !DILocation(line: 5263, column: 11, scope: !5304)
!5306 = !DILocation(line: 5264, column: 6, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5308, file: !3, line: 5264, column: 6)
!5308 = distinct !DILexicalBlock(scope: !5303, file: !3, line: 5263, column: 37)
!5309 = !DILocation(line: 5264, column: 6, scope: !5308)
!5310 = !DILocation(line: 5265, column: 18, scope: !5307)
!5311 = !DILocation(line: 5265, column: 4, scope: !5307)
!5312 = !DILocation(line: 5266, column: 22, scope: !5307)
!5313 = !DILocation(line: 5266, column: 27, scope: !5307)
!5314 = !DILocation(line: 5266, column: 8, scope: !5307)
!5315 = !DILocation(line: 5267, column: 2, scope: !5308)
!5316 = !DILocation(line: 5268, column: 21, scope: !5303)
!5317 = !DILocation(line: 5268, column: 26, scope: !5303)
!5318 = !DILocation(line: 5268, column: 37, scope: !5303)
!5319 = !DILocation(line: 5268, column: 42, scope: !5303)
!5320 = !DILocation(line: 5268, column: 13, scope: !5303)
!5321 = !DILocation(line: 5269, column: 7, scope: !5304)
!5322 = !DILocation(line: 5271, column: 9, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 5271, column: 9)
!5324 = !DILocation(line: 5271, column: 9, scope: !5300)
!5325 = !DILocation(line: 5272, column: 21, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5323, file: !3, line: 5271, column: 22)
!5327 = !DILocation(line: 5272, column: 7, scope: !5326)
!5328 = !DILocation(line: 5273, column: 8, scope: !5326)
!5329 = !DILocation(line: 5273, column: 13, scope: !5326)
!5330 = !DILocation(line: 5273, column: 7, scope: !5326)
!5331 = !DILocation(line: 5273, column: 16, scope: !5326)
!5332 = !DILocation(line: 5274, column: 7, scope: !5326)
!5333 = !DILocation(line: 5290, column: 19, scope: !5300)
!5334 = !DILocation(line: 5290, column: 5, scope: !5300)
!5335 = !DILocation(line: 5291, column: 6, scope: !5300)
!5336 = !DILocation(line: 5291, column: 9, scope: !5300)
!5337 = !DILocation(line: 5291, column: 5, scope: !5300)
!5338 = !DILocation(line: 5291, column: 12, scope: !5300)
!5339 = !DILocation(line: 5292, column: 18, scope: !5300)
!5340 = !DILocation(line: 5292, column: 23, scope: !5300)
!5341 = !DILocation(line: 5292, column: 17, scope: !5300)
!5342 = !DILocation(line: 5292, column: 5, scope: !5300)
!5343 = !DILocation(line: 5292, column: 8, scope: !5300)
!5344 = !DILocation(line: 5292, column: 16, scope: !5300)
!5345 = !DILocation(line: 5293, column: 9, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 5293, column: 9)
!5347 = !DILocation(line: 5293, column: 9, scope: !5300)
!5348 = !DILocation(line: 5293, column: 35, scope: !5346)
!5349 = !DILocation(line: 5293, column: 38, scope: !5346)
!5350 = !DILocation(line: 5293, column: 46, scope: !5346)
!5351 = !DILocation(line: 5294, column: 21, scope: !5300)
!5352 = !DILocation(line: 5294, column: 24, scope: !5300)
!5353 = !DILocation(line: 5294, column: 10, scope: !5300)
!5354 = !DILocation(line: 5294, column: 9, scope: !5300)
!5355 = !DILocation(line: 5295, column: 9, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 5295, column: 9)
!5357 = !DILocation(line: 5295, column: 13, scope: !5356)
!5358 = !DILocation(line: 5295, column: 9, scope: !5300)
!5359 = !DILocation(line: 5296, column: 8, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5356, file: !3, line: 5295, column: 23)
!5361 = !DILocation(line: 5296, column: 14, scope: !5360)
!5362 = !DILocation(line: 5297, column: 7, scope: !5360)
!5363 = !DILocation(line: 5298, column: 9, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 5298, column: 9)
!5365 = !DILocation(line: 5298, column: 13, scope: !5364)
!5366 = !DILocation(line: 5298, column: 9, scope: !5300)
!5367 = !DILocalVariable(name: "shift", scope: !5368, file: !3, line: 5299, type: !31)
!5368 = distinct !DILexicalBlock(scope: !5364, file: !3, line: 5298, column: 18)
!5369 = !DILocation(line: 5299, column: 11, scope: !5368)
!5370 = !DILocation(line: 5299, column: 17, scope: !5368)
!5371 = !DILocation(line: 5299, column: 22, scope: !5368)
!5372 = !DILocation(line: 5299, column: 28, scope: !5368)
!5373 = !DILocation(line: 5300, column: 21, scope: !5368)
!5374 = !DILocation(line: 5300, column: 7, scope: !5368)
!5375 = !DILocation(line: 5301, column: 8, scope: !5368)
!5376 = !DILocation(line: 5301, column: 13, scope: !5368)
!5377 = !DILocation(line: 5301, column: 7, scope: !5368)
!5378 = !DILocation(line: 5301, column: 16, scope: !5368)
!5379 = !DILocation(line: 5302, column: 34, scope: !5368)
!5380 = !DILocation(line: 5302, column: 39, scope: !5368)
!5381 = !DILocation(line: 5302, column: 47, scope: !5368)
!5382 = !DILocation(line: 5302, column: 19, scope: !5368)
!5383 = !DILocation(line: 5302, column: 7, scope: !5368)
!5384 = !DILocation(line: 5302, column: 12, scope: !5368)
!5385 = !DILocation(line: 5302, column: 18, scope: !5368)
!5386 = !DILocation(line: 5303, column: 22, scope: !5368)
!5387 = !DILocation(line: 5303, column: 21, scope: !5368)
!5388 = !DILocation(line: 5303, column: 7, scope: !5368)
!5389 = !DILocation(line: 5303, column: 12, scope: !5368)
!5390 = !DILocation(line: 5303, column: 20, scope: !5368)
!5391 = !DILocation(line: 5304, column: 8, scope: !5368)
!5392 = !DILocation(line: 5304, column: 14, scope: !5368)
!5393 = !DILocation(line: 5305, column: 7, scope: !5368)
!5394 = !DILocation(line: 5309, column: 5, scope: !5300)
!5395 = !DILocation(line: 5311, column: 15, scope: !5300)
!5396 = !DILocation(line: 5311, column: 20, scope: !5300)
!5397 = !DILocation(line: 5311, column: 10, scope: !5300)
!5398 = !DILocation(line: 5311, column: 14, scope: !5300)
!5399 = !DILocation(line: 5312, column: 15, scope: !5300)
!5400 = !DILocation(line: 5312, column: 20, scope: !5300)
!5401 = !DILocation(line: 5312, column: 10, scope: !5300)
!5402 = !DILocation(line: 5312, column: 14, scope: !5300)
!5403 = !DILocation(line: 5313, column: 10, scope: !5300)
!5404 = !DILocation(line: 5313, column: 15, scope: !5300)
!5405 = !DILocation(line: 5317, column: 7, scope: !5300)
!5406 = !DILocation(line: 5317, column: 12, scope: !5300)
!5407 = !DILocation(line: 5317, column: 21, scope: !5300)
!5408 = !DILocation(line: 5317, column: 26, scope: !5300)
!5409 = !DILocation(line: 5317, column: 20, scope: !5300)
!5410 = !DILocation(line: 5317, column: 6, scope: !5300)
!5411 = !DILocation(line: 5323, column: 9, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 5323, column: 9)
!5413 = !DILocation(line: 5323, column: 10, scope: !5412)
!5414 = !DILocation(line: 5323, column: 9, scope: !5300)
!5415 = !DILocation(line: 5327, column: 21, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5412, file: !3, line: 5323, column: 14)
!5417 = !DILocation(line: 5327, column: 7, scope: !5416)
!5418 = !DILocation(line: 5328, column: 8, scope: !5416)
!5419 = !DILocation(line: 5328, column: 11, scope: !5416)
!5420 = !DILocation(line: 5328, column: 7, scope: !5416)
!5421 = !DILocation(line: 5328, column: 14, scope: !5416)
!5422 = !DILocation(line: 5329, column: 11, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 5329, column: 11)
!5424 = !DILocation(line: 5329, column: 11, scope: !5416)
!5425 = !DILocation(line: 5329, column: 37, scope: !5423)
!5426 = !DILocation(line: 5329, column: 40, scope: !5423)
!5427 = !DILocation(line: 5329, column: 48, scope: !5423)
!5428 = !DILocation(line: 5330, column: 8, scope: !5416)
!5429 = !DILocation(line: 5331, column: 8, scope: !5416)
!5430 = !DILocation(line: 5332, column: 7, scope: !5416)
!5431 = !DILocalVariable(name: "maxlever", scope: !5432, file: !3, line: 5334, type: !31)
!5432 = distinct !DILexicalBlock(scope: !5412, file: !3, line: 5333, column: 11)
!5433 = !DILocation(line: 5334, column: 11, scope: !5432)
!5434 = !DILocation(line: 5334, column: 21, scope: !5432)
!5435 = !DILocation(line: 5334, column: 26, scope: !5432)
!5436 = !DILocation(line: 5334, column: 32, scope: !5432)
!5437 = !DILocalVariable(name: "lever", scope: !5432, file: !3, line: 5345, type: !31)
!5438 = !DILocation(line: 5345, column: 11, scope: !5432)
!5439 = !DILocation(line: 5345, column: 17, scope: !5432)
!5440 = !DILocalVariable(name: "use", scope: !5432, file: !3, line: 5346, type: !31)
!5441 = !DILocation(line: 5346, column: 11, scope: !5432)
!5442 = !DILocation(line: 5346, column: 16, scope: !5432)
!5443 = !DILocation(line: 5346, column: 21, scope: !5432)
!5444 = !DILocation(line: 5346, column: 15, scope: !5432)
!5445 = !DILocation(line: 5346, column: 28, scope: !5432)
!5446 = !DILocation(line: 5346, column: 27, scope: !5432)
!5447 = !DILocation(line: 5347, column: 10, scope: !5432)
!5448 = !DILocation(line: 5347, column: 8, scope: !5432)
!5449 = !DILocation(line: 5348, column: 11, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 5348, column: 11)
!5451 = !DILocation(line: 5348, column: 12, scope: !5450)
!5452 = !DILocation(line: 5348, column: 11, scope: !5432)
!5453 = !DILocation(line: 5349, column: 7, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5450, file: !3, line: 5348, column: 16)
!5455 = !DILocation(line: 5349, column: 5, scope: !5454)
!5456 = !DILocation(line: 5350, column: 3, scope: !5454)
!5457 = !DILocation(line: 5351, column: 2, scope: !5454)
!5458 = !DILocation(line: 5353, column: 11, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 5353, column: 11)
!5460 = !DILocation(line: 5353, column: 16, scope: !5459)
!5461 = !DILocation(line: 5353, column: 26, scope: !5459)
!5462 = !DILocation(line: 5353, column: 24, scope: !5459)
!5463 = !DILocation(line: 5353, column: 11, scope: !5432)
!5464 = !DILocalVariable(name: "newrhs", scope: !5465, file: !3, line: 5354, type: !47)
!5465 = distinct !DILexicalBlock(scope: !5459, file: !3, line: 5353, column: 31)
!5466 = !DILocation(line: 5354, column: 13, scope: !5465)
!5467 = !DILocation(line: 5354, column: 20, scope: !5465)
!5468 = !DILocation(line: 5355, column: 31, scope: !5465)
!5469 = !DILocation(line: 5355, column: 47, scope: !5465)
!5470 = !DILocation(line: 5355, column: 30, scope: !5465)
!5471 = !DILocation(line: 5355, column: 50, scope: !5465)
!5472 = !DILocation(line: 5355, column: 29, scope: !5465)
!5473 = !DILocation(line: 5355, column: 12, scope: !5465)
!5474 = !DILocation(line: 5355, column: 11, scope: !5465)
!5475 = !DILocation(line: 5356, column: 6, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5465, file: !3, line: 5356, column: 6)
!5477 = !DILocation(line: 5356, column: 15, scope: !5476)
!5478 = !DILocation(line: 5356, column: 6, scope: !5465)
!5479 = !DILocation(line: 5357, column: 33, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5476, file: !3, line: 5356, column: 30)
!5481 = !DILocation(line: 5357, column: 26, scope: !5480)
!5482 = !DILocation(line: 5357, column: 13, scope: !5480)
!5483 = !DILocation(line: 5357, column: 12, scope: !5480)
!5484 = !DILocation(line: 5358, column: 8, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5480, file: !3, line: 5358, column: 8)
!5486 = !DILocation(line: 5358, column: 16, scope: !5485)
!5487 = !DILocation(line: 5358, column: 8, scope: !5480)
!5488 = !DILocation(line: 5359, column: 7, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5485, file: !3, line: 5358, column: 24)
!5490 = !DILocation(line: 5359, column: 13, scope: !5489)
!5491 = !DILocation(line: 5360, column: 6, scope: !5489)
!5492 = !DILocation(line: 5361, column: 11, scope: !5480)
!5493 = !DILocation(line: 5361, column: 10, scope: !5480)
!5494 = !DILocation(line: 5362, column: 4, scope: !5480)
!5495 = !DILocation(line: 5363, column: 16, scope: !5465)
!5496 = !DILocation(line: 5363, column: 24, scope: !5465)
!5497 = !DILocation(line: 5363, column: 2, scope: !5465)
!5498 = !DILocation(line: 5364, column: 19, scope: !5465)
!5499 = !DILocation(line: 5364, column: 2, scope: !5465)
!5500 = !DILocation(line: 5364, column: 10, scope: !5465)
!5501 = !DILocation(line: 5364, column: 18, scope: !5465)
!5502 = !DILocation(line: 5365, column: 4, scope: !5465)
!5503 = !DILocation(line: 5365, column: 3, scope: !5465)
!5504 = !DILocation(line: 5367, column: 2, scope: !5465)
!5505 = !DILocation(line: 5379, column: 9, scope: !5432)
!5506 = !DILocation(line: 5379, column: 38, scope: !5432)
!5507 = !DILocation(line: 5379, column: 37, scope: !5432)
!5508 = !DILocation(line: 5379, column: 39, scope: !5432)
!5509 = !DILocation(line: 5379, column: 8, scope: !5432)
!5510 = !DILocation(line: 5387, column: 36, scope: !5432)
!5511 = !DILocation(line: 5387, column: 44, scope: !5432)
!5512 = !DILocation(line: 5387, column: 35, scope: !5432)
!5513 = !DILocation(line: 5387, column: 47, scope: !5432)
!5514 = !DILocation(line: 5387, column: 34, scope: !5432)
!5515 = !DILocation(line: 5387, column: 17, scope: !5432)
!5516 = !DILocation(line: 5387, column: 16, scope: !5432)
!5517 = !DILocation(line: 5388, column: 11, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 5388, column: 11)
!5519 = !DILocation(line: 5388, column: 20, scope: !5518)
!5520 = !DILocation(line: 5388, column: 11, scope: !5432)
!5521 = !DILocation(line: 5389, column: 32, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5518, file: !3, line: 5388, column: 35)
!5523 = !DILocation(line: 5389, column: 25, scope: !5522)
!5524 = !DILocation(line: 5389, column: 12, scope: !5522)
!5525 = !DILocation(line: 5389, column: 11, scope: !5522)
!5526 = !DILocation(line: 5390, column: 6, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5522, file: !3, line: 5390, column: 6)
!5528 = !DILocation(line: 5390, column: 15, scope: !5527)
!5529 = !DILocation(line: 5390, column: 6, scope: !5522)
!5530 = !DILocation(line: 5391, column: 5, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 5390, column: 23)
!5532 = !DILocation(line: 5391, column: 11, scope: !5531)
!5533 = !DILocation(line: 5392, column: 4, scope: !5531)
!5534 = !DILocation(line: 5393, column: 4, scope: !5522)
!5535 = !DILocation(line: 5393, column: 3, scope: !5522)
!5536 = !DILocation(line: 5394, column: 2, scope: !5522)
!5537 = !DILocation(line: 5399, column: 36, scope: !5432)
!5538 = !DILocation(line: 5399, column: 44, scope: !5432)
!5539 = !DILocation(line: 5399, column: 35, scope: !5432)
!5540 = !DILocation(line: 5399, column: 47, scope: !5432)
!5541 = !DILocation(line: 5399, column: 34, scope: !5432)
!5542 = !DILocation(line: 5399, column: 17, scope: !5432)
!5543 = !DILocation(line: 5399, column: 16, scope: !5432)
!5544 = !DILocation(line: 5400, column: 11, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 5400, column: 11)
!5546 = !DILocation(line: 5400, column: 20, scope: !5545)
!5547 = !DILocation(line: 5400, column: 11, scope: !5432)
!5548 = !DILocation(line: 5401, column: 32, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5545, file: !3, line: 5400, column: 35)
!5550 = !DILocation(line: 5401, column: 25, scope: !5549)
!5551 = !DILocation(line: 5401, column: 12, scope: !5549)
!5552 = !DILocation(line: 5401, column: 11, scope: !5549)
!5553 = !DILocation(line: 5402, column: 6, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5549, file: !3, line: 5402, column: 6)
!5555 = !DILocation(line: 5402, column: 15, scope: !5554)
!5556 = !DILocation(line: 5402, column: 6, scope: !5549)
!5557 = !DILocation(line: 5403, column: 5, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 5402, column: 23)
!5559 = !DILocation(line: 5403, column: 11, scope: !5558)
!5560 = !DILocation(line: 5404, column: 4, scope: !5558)
!5561 = !DILocation(line: 5405, column: 4, scope: !5549)
!5562 = !DILocation(line: 5405, column: 3, scope: !5549)
!5563 = !DILocation(line: 5406, column: 2, scope: !5549)
!5564 = !DILocation(line: 5408, column: 21, scope: !5432)
!5565 = !DILocation(line: 5408, column: 24, scope: !5432)
!5566 = !DILocation(line: 5408, column: 7, scope: !5432)
!5567 = !DILocation(line: 5409, column: 21, scope: !5432)
!5568 = !DILocation(line: 5409, column: 7, scope: !5432)
!5569 = !DILocation(line: 5409, column: 26, scope: !5432)
!5570 = !DILocation(line: 5409, column: 29, scope: !5432)
!5571 = !DILocation(line: 5409, column: 25, scope: !5432)
!5572 = !DILocation(line: 5409, column: 32, scope: !5432)
!5573 = !DILocation(line: 5410, column: 21, scope: !5432)
!5574 = !DILocation(line: 5410, column: 7, scope: !5432)
!5575 = !DILocation(line: 5410, column: 26, scope: !5432)
!5576 = !DILocation(line: 5410, column: 29, scope: !5432)
!5577 = !DILocation(line: 5410, column: 25, scope: !5432)
!5578 = !DILocation(line: 5410, column: 32, scope: !5432)
!5579 = !DILocation(line: 5411, column: 7, scope: !5432)
!5580 = !DILocation(line: 5411, column: 39, scope: !5432)
!5581 = !DILocation(line: 5411, column: 31, scope: !5432)
!5582 = !DILocation(line: 5411, column: 42, scope: !5432)
!5583 = !DILocation(line: 5414, column: 7, scope: !5432)
!5584 = !DILocation(line: 5415, column: 12, scope: !5432)
!5585 = !DILocation(line: 5417, column: 19, scope: !5432)
!5586 = !DILocation(line: 5417, column: 20, scope: !5432)
!5587 = !DILocation(line: 5417, column: 12, scope: !5432)
!5588 = !DILocation(line: 5417, column: 18, scope: !5432)
!5589 = !DILocation(line: 5419, column: 19, scope: !5432)
!5590 = !DILocation(line: 5419, column: 12, scope: !5432)
!5591 = !DILocation(line: 5419, column: 18, scope: !5432)
!5592 = !DILocation(line: 5420, column: 12, scope: !5432)
!5593 = !DILocation(line: 5420, column: 16, scope: !5432)
!5594 = !DILocation(line: 5424, column: 7, scope: !5432)
!5595 = !DILocation(line: 5430, column: 11, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5597, file: !3, line: 5424, column: 16)
!5597 = distinct !DILexicalBlock(scope: !5598, file: !3, line: 5424, column: 7)
!5598 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 5424, column: 7)
!5599 = !DILocation(line: 5430, column: 14, scope: !5596)
!5600 = !DILocation(line: 5430, column: 17, scope: !5596)
!5601 = !DILocation(line: 5430, column: 30, scope: !5596)
!5602 = !DILocation(line: 5430, column: 2, scope: !5596)
!5603 = !DILocation(line: 5431, column: 16, scope: !5596)
!5604 = !DILocation(line: 5431, column: 19, scope: !5596)
!5605 = !DILocation(line: 5431, column: 22, scope: !5596)
!5606 = !DILocation(line: 5431, column: 2, scope: !5596)
!5607 = !DILocation(line: 5432, column: 14, scope: !5596)
!5608 = !DILocation(line: 5432, column: 17, scope: !5596)
!5609 = !DILocation(line: 5432, column: 20, scope: !5596)
!5610 = !DILocation(line: 5432, column: 2, scope: !5596)
!5611 = !DILocation(line: 5437, column: 8, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5596, file: !3, line: 5437, column: 6)
!5613 = !DILocation(line: 5437, column: 11, scope: !5612)
!5614 = !DILocation(line: 5437, column: 18, scope: !5612)
!5615 = !DILocation(line: 5437, column: 21, scope: !5612)
!5616 = !DILocation(line: 5437, column: 17, scope: !5612)
!5617 = !DILocation(line: 5437, column: 33, scope: !5612)
!5618 = !DILocation(line: 5437, column: 36, scope: !5612)
!5619 = !DILocation(line: 5437, column: 43, scope: !5612)
!5620 = !DILocation(line: 5437, column: 46, scope: !5612)
!5621 = !DILocation(line: 5437, column: 42, scope: !5612)
!5622 = !DILocation(line: 5437, column: 55, scope: !5612)
!5623 = !DILocation(line: 5437, column: 54, scope: !5612)
!5624 = !DILocation(line: 5437, column: 56, scope: !5612)
!5625 = !DILocation(line: 5437, column: 30, scope: !5612)
!5626 = !DILocation(line: 5438, column: 6, scope: !5612)
!5627 = !DILocation(line: 5438, column: 10, scope: !5612)
!5628 = !DILocation(line: 5438, column: 13, scope: !5612)
!5629 = !DILocation(line: 5438, column: 21, scope: !5612)
!5630 = !DILocation(line: 5438, column: 19, scope: !5612)
!5631 = !DILocation(line: 5437, column: 6, scope: !5596)
!5632 = !DILocation(line: 5438, column: 25, scope: !5612)
!5633 = !DILocation(line: 5439, column: 11, scope: !5596)
!5634 = !DILocation(line: 5439, column: 14, scope: !5596)
!5635 = !DILocation(line: 5439, column: 2, scope: !5596)
!5636 = !DILocation(line: 5424, column: 7, scope: !5597)
!5637 = distinct !{!5637, !5638, !5639}
!5638 = !DILocation(line: 5424, column: 7, scope: !5598)
!5639 = !DILocation(line: 5440, column: 2, scope: !5598)
!5640 = !DILocation(line: 5452, column: 9, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 5452, column: 9)
!5642 = !DILocation(line: 5452, column: 10, scope: !5641)
!5643 = !DILocation(line: 5452, column: 9, scope: !5300)
!5644 = !DILocalVariable(name: "seenbit", scope: !5645, file: !3, line: 5453, type: !31)
!5645 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 5452, column: 14)
!5646 = !DILocation(line: 5453, column: 11, scope: !5645)
!5647 = !DILocalVariable(name: "i", scope: !5645, file: !3, line: 5454, type: !31)
!5648 = !DILocation(line: 5454, column: 11, scope: !5645)
!5649 = !DILocalVariable(name: "n", scope: !5645, file: !3, line: 5455, type: !31)
!5650 = !DILocation(line: 5455, column: 11, scope: !5645)
!5651 = !DILocation(line: 5455, column: 20, scope: !5645)
!5652 = !DILocation(line: 5455, column: 13, scope: !5645)
!5653 = !DILocation(line: 5456, column: 19, scope: !5645)
!5654 = !DILocation(line: 5456, column: 20, scope: !5645)
!5655 = !DILocation(line: 5456, column: 12, scope: !5645)
!5656 = !DILocation(line: 5456, column: 18, scope: !5645)
!5657 = !DILocation(line: 5460, column: 21, scope: !5645)
!5658 = !DILocation(line: 5460, column: 7, scope: !5645)
!5659 = !DILocation(line: 5460, column: 26, scope: !5645)
!5660 = !DILocation(line: 5460, column: 29, scope: !5645)
!5661 = !DILocation(line: 5460, column: 25, scope: !5645)
!5662 = !DILocation(line: 5460, column: 32, scope: !5645)
!5663 = !DILocation(line: 5461, column: 13, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5645, file: !3, line: 5461, column: 7)
!5665 = !DILocation(line: 5461, column: 12, scope: !5664)
!5666 = !DILocation(line: 5463, column: 7, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5668, file: !3, line: 5463, column: 6)
!5668 = distinct !DILexicalBlock(scope: !5669, file: !3, line: 5461, column: 21)
!5669 = distinct !DILexicalBlock(scope: !5664, file: !3, line: 5461, column: 7)
!5670 = !DILocation(line: 5463, column: 6, scope: !5667)
!5671 = !DILocation(line: 5463, column: 14, scope: !5667)
!5672 = !DILocation(line: 5463, column: 6, scope: !5668)
!5673 = !DILocation(line: 5464, column: 9, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5675, file: !3, line: 5464, column: 8)
!5675 = distinct !DILexicalBlock(scope: !5667, file: !3, line: 5463, column: 46)
!5676 = !DILocation(line: 5464, column: 8, scope: !5674)
!5677 = !DILocation(line: 5464, column: 15, scope: !5674)
!5678 = !DILocation(line: 5464, column: 29, scope: !5674)
!5679 = !DILocation(line: 5464, column: 32, scope: !5674)
!5680 = !DILocation(line: 5464, column: 8, scope: !5675)
!5681 = !DILocation(line: 5464, column: 43, scope: !5674)
!5682 = !DILocation(line: 5464, column: 49, scope: !5675)
!5683 = !DILocation(line: 5465, column: 4, scope: !5668)
!5684 = !DILocation(line: 5465, column: 5, scope: !5668)
!5685 = !DILocation(line: 5465, column: 3, scope: !5668)
!5686 = !DILocation(line: 5466, column: 6, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5668, file: !3, line: 5466, column: 6)
!5688 = !DILocation(line: 5466, column: 7, scope: !5687)
!5689 = !DILocation(line: 5466, column: 6, scope: !5668)
!5690 = !DILocation(line: 5467, column: 11, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !5687, file: !3, line: 5466, column: 11)
!5692 = !DILocation(line: 5468, column: 18, scope: !5691)
!5693 = !DILocation(line: 5468, column: 21, scope: !5691)
!5694 = !DILocation(line: 5468, column: 24, scope: !5691)
!5695 = !DILocation(line: 5468, column: 34, scope: !5691)
!5696 = !DILocation(line: 5468, column: 4, scope: !5691)
!5697 = !DILocation(line: 5469, column: 4, scope: !5691)
!5698 = !DILocation(line: 5470, column: 6, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5668, file: !3, line: 5470, column: 6)
!5700 = !DILocation(line: 5470, column: 7, scope: !5699)
!5701 = !DILocation(line: 5470, column: 6, scope: !5668)
!5702 = !DILocation(line: 5470, column: 13, scope: !5699)
!5703 = !DILocation(line: 5471, column: 7, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5668, file: !3, line: 5471, column: 6)
!5705 = !DILocation(line: 5471, column: 6, scope: !5668)
!5706 = !DILocation(line: 5471, column: 16, scope: !5704)
!5707 = !DILocation(line: 5472, column: 16, scope: !5668)
!5708 = !DILocation(line: 5472, column: 19, scope: !5668)
!5709 = !DILocation(line: 5472, column: 22, scope: !5668)
!5710 = !DILocation(line: 5472, column: 32, scope: !5668)
!5711 = !DILocation(line: 5472, column: 2, scope: !5668)
!5712 = !DILocation(line: 5473, column: 2, scope: !5668)
!5713 = !DILocation(line: 5461, column: 18, scope: !5669)
!5714 = !DILocation(line: 5461, column: 7, scope: !5669)
!5715 = distinct !{!5715, !5716, !5717}
!5716 = !DILocation(line: 5461, column: 7, scope: !5664)
!5717 = !DILocation(line: 5473, column: 2, scope: !5664)
!5718 = !DILocation(line: 5475, column: 9, scope: !5645)
!5719 = !DILocation(line: 5475, column: 8, scope: !5645)
!5720 = !DILocation(line: 5476, column: 7, scope: !5645)
!5721 = !DILocation(line: 5479, column: 12, scope: !5300)
!5722 = !DILocation(line: 5480, column: 9, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 5480, column: 9)
!5724 = !DILocation(line: 5480, column: 9, scope: !5300)
!5725 = !DILocation(line: 5480, column: 27, scope: !5723)
!5726 = !DILocation(line: 5480, column: 20, scope: !5723)
!5727 = !DILocation(line: 5481, column: 17, scope: !5300)
!5728 = !DILocation(line: 5481, column: 22, scope: !5300)
!5729 = !DILocation(line: 5481, column: 10, scope: !5300)
!5730 = !DILocation(line: 5481, column: 16, scope: !5300)
!5731 = !DILocation(line: 5482, column: 16, scope: !5300)
!5732 = !DILocation(line: 5482, column: 21, scope: !5300)
!5733 = !DILocation(line: 5482, column: 41, scope: !5300)
!5734 = !DILocation(line: 5482, column: 5, scope: !5300)
!5735 = !DILocation(line: 5483, column: 5, scope: !5300)
!5736 = !DILocation(line: 5484, column: 5, scope: !5300)
!5737 = !DILocation(line: 5486, column: 7, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 5486, column: 7)
!5739 = !DILocation(line: 5486, column: 16, scope: !5738)
!5740 = !DILocation(line: 5486, column: 7, scope: !5232)
!5741 = !DILocation(line: 5486, column: 29, scope: !5738)
!5742 = !DILocation(line: 5486, column: 24, scope: !5738)
!5743 = !DILocation(line: 5487, column: 7, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 5487, column: 7)
!5745 = !DILocation(line: 5487, column: 16, scope: !5744)
!5746 = !DILocation(line: 5487, column: 7, scope: !5232)
!5747 = !DILocation(line: 5487, column: 29, scope: !5744)
!5748 = !DILocation(line: 5487, column: 24, scope: !5744)
!5749 = !DILocation(line: 5488, column: 7, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 5488, column: 7)
!5751 = !DILocation(line: 5488, column: 16, scope: !5750)
!5752 = !DILocation(line: 5488, column: 7, scope: !5232)
!5753 = !DILocation(line: 5488, column: 29, scope: !5750)
!5754 = !DILocation(line: 5488, column: 24, scope: !5750)
!5755 = !DILocation(line: 5490, column: 10, scope: !5232)
!5756 = !DILocation(line: 5490, column: 3, scope: !5232)
!5757 = distinct !DISubprogram(name: "decNumberFMA", scope: !3, file: !3, line: 1103, type: !5758, scopeLine: 1105, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!5758 = !DISubroutineType(types: !5759)
!5759 = !{!47, !47, !267, !267, !267, !269}
!5760 = !DILocalVariable(name: "res", arg: 1, scope: !5757, file: !3, line: 1103, type: !47)
!5761 = !DILocation(line: 1103, column: 37, scope: !5757)
!5762 = !DILocalVariable(name: "lhs", arg: 2, scope: !5757, file: !3, line: 1103, type: !267)
!5763 = !DILocation(line: 1103, column: 59, scope: !5757)
!5764 = !DILocalVariable(name: "rhs", arg: 3, scope: !5757, file: !3, line: 1104, type: !267)
!5765 = !DILocation(line: 1104, column: 22, scope: !5757)
!5766 = !DILocalVariable(name: "fhs", arg: 4, scope: !5757, file: !3, line: 1104, type: !267)
!5767 = !DILocation(line: 1104, column: 44, scope: !5757)
!5768 = !DILocalVariable(name: "set", arg: 5, scope: !5757, file: !3, line: 1105, type: !269)
!5769 = !DILocation(line: 1105, column: 17, scope: !5757)
!5770 = !DILocalVariable(name: "status", scope: !5757, file: !3, line: 1106, type: !36)
!5771 = !DILocation(line: 1106, column: 8, scope: !5757)
!5772 = !DILocalVariable(name: "dcmul", scope: !5757, file: !3, line: 1107, type: !270)
!5773 = !DILocation(line: 1107, column: 14, scope: !5757)
!5774 = !DILocalVariable(name: "needbytes", scope: !5757, file: !3, line: 1108, type: !36)
!5775 = !DILocation(line: 1108, column: 8, scope: !5757)
!5776 = !DILocalVariable(name: "bufa", scope: !5757, file: !3, line: 1109, type: !5265)
!5777 = !DILocation(line: 1109, column: 13, scope: !5757)
!5778 = !DILocalVariable(name: "allocbufa", scope: !5757, file: !3, line: 1110, type: !47)
!5779 = !DILocation(line: 1110, column: 14, scope: !5757)
!5780 = !DILocalVariable(name: "acc", scope: !5757, file: !3, line: 1111, type: !47)
!5781 = !DILocation(line: 1111, column: 14, scope: !5757)
!5782 = !DILocalVariable(name: "dzero", scope: !5757, file: !3, line: 1112, type: !48)
!5783 = !DILocation(line: 1112, column: 13, scope: !5757)
!5784 = !DILocation(line: 1119, column: 3, scope: !5757)
!5785 = !DILocation(line: 1126, column: 11, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 1126, column: 9)
!5787 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 1119, column: 6)
!5788 = !DILocation(line: 1126, column: 35, scope: !5786)
!5789 = !DILocation(line: 1126, column: 51, scope: !5786)
!5790 = !DILocation(line: 1126, column: 56, scope: !5786)
!5791 = !DILocation(line: 1126, column: 38, scope: !5786)
!5792 = !DILocation(line: 1127, column: 6, scope: !5786)
!5793 = !DILocation(line: 1127, column: 11, scope: !5786)
!5794 = !DILocation(line: 1127, column: 35, scope: !5786)
!5795 = !DILocation(line: 1127, column: 51, scope: !5786)
!5796 = !DILocation(line: 1127, column: 56, scope: !5786)
!5797 = !DILocation(line: 1127, column: 38, scope: !5786)
!5798 = !DILocation(line: 1128, column: 6, scope: !5786)
!5799 = !DILocation(line: 1128, column: 11, scope: !5786)
!5800 = !DILocation(line: 1128, column: 35, scope: !5786)
!5801 = !DILocation(line: 1128, column: 51, scope: !5786)
!5802 = !DILocation(line: 1128, column: 56, scope: !5786)
!5803 = !DILocation(line: 1128, column: 38, scope: !5786)
!5804 = !DILocation(line: 1126, column: 9, scope: !5787)
!5805 = !DILocation(line: 1128, column: 72, scope: !5786)
!5806 = !DILocation(line: 1130, column: 12, scope: !5787)
!5807 = !DILocation(line: 1130, column: 11, scope: !5787)
!5808 = !DILocation(line: 1131, column: 18, scope: !5787)
!5809 = !DILocation(line: 1131, column: 23, scope: !5787)
!5810 = !DILocation(line: 1131, column: 30, scope: !5787)
!5811 = !DILocation(line: 1131, column: 35, scope: !5787)
!5812 = !DILocation(line: 1131, column: 29, scope: !5787)
!5813 = !DILocation(line: 1131, column: 11, scope: !5787)
!5814 = !DILocation(line: 1131, column: 17, scope: !5787)
!5815 = !DILocation(line: 1133, column: 11, scope: !5787)
!5816 = !DILocation(line: 1133, column: 15, scope: !5787)
!5817 = !DILocation(line: 1134, column: 11, scope: !5787)
!5818 = !DILocation(line: 1134, column: 15, scope: !5787)
!5819 = !DILocation(line: 1136, column: 9, scope: !5787)
!5820 = !DILocation(line: 1136, column: 8, scope: !5787)
!5821 = !DILocation(line: 1137, column: 34, scope: !5787)
!5822 = !DILocation(line: 1137, column: 51, scope: !5787)
!5823 = !DILocation(line: 1137, column: 33, scope: !5787)
!5824 = !DILocation(line: 1137, column: 54, scope: !5787)
!5825 = !DILocation(line: 1137, column: 32, scope: !5787)
!5826 = !DILocation(line: 1137, column: 15, scope: !5787)
!5827 = !DILocation(line: 1137, column: 14, scope: !5787)
!5828 = !DILocation(line: 1138, column: 9, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 1138, column: 9)
!5830 = !DILocation(line: 1138, column: 18, scope: !5829)
!5831 = !DILocation(line: 1138, column: 9, scope: !5787)
!5832 = !DILocation(line: 1139, column: 37, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5829, file: !3, line: 1138, column: 33)
!5834 = !DILocation(line: 1139, column: 30, scope: !5833)
!5835 = !DILocation(line: 1139, column: 17, scope: !5833)
!5836 = !DILocation(line: 1139, column: 16, scope: !5833)
!5837 = !DILocation(line: 1140, column: 11, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5833, file: !3, line: 1140, column: 11)
!5839 = !DILocation(line: 1140, column: 20, scope: !5838)
!5840 = !DILocation(line: 1140, column: 11, scope: !5833)
!5841 = !DILocation(line: 1141, column: 8, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 1140, column: 28)
!5843 = !DILocation(line: 1142, column: 2, scope: !5842)
!5844 = !DILocation(line: 1143, column: 11, scope: !5833)
!5845 = !DILocation(line: 1143, column: 10, scope: !5833)
!5846 = !DILocation(line: 1144, column: 7, scope: !5833)
!5847 = !DILocation(line: 1147, column: 19, scope: !5787)
!5848 = !DILocation(line: 1147, column: 24, scope: !5787)
!5849 = !DILocation(line: 1147, column: 29, scope: !5787)
!5850 = !DILocation(line: 1147, column: 5, scope: !5787)
!5851 = !DILocation(line: 1154, column: 10, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 1154, column: 9)
!5853 = !DILocation(line: 1154, column: 16, scope: !5852)
!5854 = !DILocation(line: 1154, column: 39, scope: !5852)
!5855 = !DILocation(line: 1154, column: 9, scope: !5787)
!5856 = !DILocation(line: 1155, column: 13, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 1155, column: 11)
!5858 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 1154, column: 44)
!5859 = !DILocation(line: 1155, column: 19, scope: !5857)
!5860 = !DILocation(line: 1155, column: 11, scope: !5858)
!5861 = !DILocation(line: 1156, column: 16, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 1155, column: 31)
!5863 = !DILocation(line: 1156, column: 2, scope: !5862)
!5864 = !DILocation(line: 1157, column: 2, scope: !5862)
!5865 = !DILocation(line: 1157, column: 7, scope: !5862)
!5866 = !DILocation(line: 1157, column: 11, scope: !5862)
!5867 = !DILocation(line: 1158, column: 2, scope: !5862)
!5868 = !DILocation(line: 1160, column: 7, scope: !5858)
!5869 = !DILocation(line: 1161, column: 10, scope: !5858)
!5870 = !DILocation(line: 1162, column: 7, scope: !5858)
!5871 = !DILocation(line: 1169, column: 14, scope: !5787)
!5872 = !DILocation(line: 1169, column: 19, scope: !5787)
!5873 = !DILocation(line: 1169, column: 24, scope: !5787)
!5874 = !DILocation(line: 1169, column: 29, scope: !5787)
!5875 = !DILocation(line: 1169, column: 5, scope: !5787)
!5876 = !DILocation(line: 1170, column: 5, scope: !5787)
!5877 = !DILocation(line: 1172, column: 7, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 1172, column: 7)
!5879 = !DILocation(line: 1172, column: 16, scope: !5878)
!5880 = !DILocation(line: 1172, column: 7, scope: !5757)
!5881 = !DILocation(line: 1172, column: 29, scope: !5878)
!5882 = !DILocation(line: 1172, column: 24, scope: !5878)
!5883 = !DILocation(line: 1173, column: 7, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 1173, column: 7)
!5885 = !DILocation(line: 1173, column: 13, scope: !5884)
!5886 = !DILocation(line: 1173, column: 7, scope: !5757)
!5887 = !DILocation(line: 1173, column: 28, scope: !5884)
!5888 = !DILocation(line: 1173, column: 33, scope: !5884)
!5889 = !DILocation(line: 1173, column: 41, scope: !5884)
!5890 = !DILocation(line: 1173, column: 18, scope: !5884)
!5891 = !DILocation(line: 1177, column: 10, scope: !5757)
!5892 = !DILocation(line: 1177, column: 3, scope: !5757)
!5893 = distinct !DISubprogram(name: "decMultiplyOp", scope: !3, file: !3, line: 4831, type: !5894, scopeLine: 4833, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!5894 = !DISubroutineType(types: !5895)
!5895 = !{!47, !47, !267, !267, !269, !59}
!5896 = !DILocalVariable(name: "res", arg: 1, scope: !5893, file: !3, line: 4831, type: !47)
!5897 = !DILocation(line: 4831, column: 45, scope: !5893)
!5898 = !DILocalVariable(name: "lhs", arg: 2, scope: !5893, file: !3, line: 4831, type: !267)
!5899 = !DILocation(line: 4831, column: 67, scope: !5893)
!5900 = !DILocalVariable(name: "rhs", arg: 3, scope: !5893, file: !3, line: 4832, type: !267)
!5901 = !DILocation(line: 4832, column: 23, scope: !5893)
!5902 = !DILocalVariable(name: "set", arg: 4, scope: !5893, file: !3, line: 4832, type: !269)
!5903 = !DILocation(line: 4832, column: 40, scope: !5893)
!5904 = !DILocalVariable(name: "status", arg: 5, scope: !5893, file: !3, line: 4833, type: !59)
!5905 = !DILocation(line: 4833, column: 12, scope: !5893)
!5906 = !DILocalVariable(name: "accunits", scope: !5893, file: !3, line: 4834, type: !31)
!5907 = !DILocation(line: 4834, column: 8, scope: !5893)
!5908 = !DILocalVariable(name: "exponent", scope: !5893, file: !3, line: 4835, type: !31)
!5909 = !DILocation(line: 4835, column: 8, scope: !5893)
!5910 = !DILocalVariable(name: "residue", scope: !5893, file: !3, line: 4836, type: !31)
!5911 = !DILocation(line: 4836, column: 8, scope: !5893)
!5912 = !DILocalVariable(name: "bits", scope: !5893, file: !3, line: 4837, type: !44)
!5913 = !DILocation(line: 4837, column: 10, scope: !5893)
!5914 = !DILocalVariable(name: "acc", scope: !5893, file: !3, line: 4838, type: !43)
!5915 = !DILocation(line: 4838, column: 9, scope: !5893)
!5916 = !DILocalVariable(name: "needbytes", scope: !5893, file: !3, line: 4839, type: !31)
!5917 = !DILocation(line: 4839, column: 8, scope: !5893)
!5918 = !DILocalVariable(name: "allocacc", scope: !5893, file: !3, line: 4840, type: !42)
!5919 = !DILocation(line: 4840, column: 9, scope: !5893)
!5920 = !DILocalVariable(name: "accbuff", scope: !5893, file: !3, line: 4841, type: !5921)
!5921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !39, size: 784, elements: !5922)
!5922 = !{!5923}
!5923 = !DISubrange(count: 49)
!5924 = !DILocation(line: 4841, column: 8, scope: !5893)
!5925 = !DILocalVariable(name: "mer", scope: !5893, file: !3, line: 4843, type: !301)
!5926 = !DILocation(line: 4843, column: 15, scope: !5893)
!5927 = !DILocalVariable(name: "mermsup", scope: !5893, file: !3, line: 4843, type: !301)
!5928 = !DILocation(line: 4843, column: 21, scope: !5893)
!5929 = !DILocalVariable(name: "madlength", scope: !5893, file: !3, line: 4844, type: !31)
!5930 = !DILocation(line: 4844, column: 7, scope: !5893)
!5931 = !DILocalVariable(name: "shift", scope: !5893, file: !3, line: 4845, type: !31)
!5932 = !DILocation(line: 4845, column: 7, scope: !5893)
!5933 = !DILocalVariable(name: "zlhibuff", scope: !5893, file: !3, line: 4862, type: !5934)
!5934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 320, elements: !83)
!5935 = !DILocation(line: 4862, column: 12, scope: !5893)
!5936 = !DILocalVariable(name: "zlhi", scope: !5893, file: !3, line: 4863, type: !59)
!5937 = !DILocation(line: 4863, column: 12, scope: !5893)
!5938 = !DILocation(line: 4863, column: 17, scope: !5893)
!5939 = !DILocalVariable(name: "alloclhi", scope: !5893, file: !3, line: 4864, type: !59)
!5940 = !DILocation(line: 4864, column: 12, scope: !5893)
!5941 = !DILocalVariable(name: "zrhibuff", scope: !5893, file: !3, line: 4865, type: !5934)
!5942 = !DILocation(line: 4865, column: 12, scope: !5893)
!5943 = !DILocalVariable(name: "zrhi", scope: !5893, file: !3, line: 4866, type: !59)
!5944 = !DILocation(line: 4866, column: 12, scope: !5893)
!5945 = !DILocation(line: 4866, column: 17, scope: !5893)
!5946 = !DILocalVariable(name: "allocrhi", scope: !5893, file: !3, line: 4867, type: !59)
!5947 = !DILocation(line: 4867, column: 12, scope: !5893)
!5948 = !DILocalVariable(name: "zaccbuff", scope: !5893, file: !3, line: 4868, type: !5949)
!5949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 1280, elements: !5950)
!5950 = !{!5951}
!5951 = !DISubrange(count: 20)
!5952 = !DILocation(line: 4868, column: 12, scope: !5893)
!5953 = !DILocalVariable(name: "zacc", scope: !5893, file: !3, line: 4870, type: !60)
!5954 = !DILocation(line: 4870, column: 12, scope: !5893)
!5955 = !DILocation(line: 4870, column: 17, scope: !5893)
!5956 = !DILocalVariable(name: "lip", scope: !5893, file: !3, line: 4874, type: !59)
!5957 = !DILocation(line: 4874, column: 12, scope: !5893)
!5958 = !DILocalVariable(name: "rip", scope: !5893, file: !3, line: 4874, type: !59)
!5959 = !DILocation(line: 4874, column: 18, scope: !5893)
!5960 = !DILocalVariable(name: "lmsi", scope: !5893, file: !3, line: 4875, type: !59)
!5961 = !DILocation(line: 4875, column: 12, scope: !5893)
!5962 = !DILocalVariable(name: "rmsi", scope: !5893, file: !3, line: 4875, type: !59)
!5963 = !DILocation(line: 4875, column: 19, scope: !5893)
!5964 = !DILocalVariable(name: "ilhs", scope: !5893, file: !3, line: 4876, type: !31)
!5965 = !DILocation(line: 4876, column: 12, scope: !5893)
!5966 = !DILocalVariable(name: "irhs", scope: !5893, file: !3, line: 4876, type: !31)
!5967 = !DILocation(line: 4876, column: 18, scope: !5893)
!5968 = !DILocalVariable(name: "iacc", scope: !5893, file: !3, line: 4876, type: !31)
!5969 = !DILocation(line: 4876, column: 24, scope: !5893)
!5970 = !DILocalVariable(name: "lazy", scope: !5893, file: !3, line: 4877, type: !31)
!5971 = !DILocation(line: 4877, column: 12, scope: !5893)
!5972 = !DILocalVariable(name: "lcarry", scope: !5893, file: !3, line: 4878, type: !61)
!5973 = !DILocation(line: 4878, column: 12, scope: !5893)
!5974 = !DILocalVariable(name: "carry", scope: !5893, file: !3, line: 4879, type: !36)
!5975 = !DILocation(line: 4879, column: 12, scope: !5893)
!5976 = !DILocalVariable(name: "count", scope: !5893, file: !3, line: 4880, type: !31)
!5977 = !DILocation(line: 4880, column: 12, scope: !5893)
!5978 = !DILocalVariable(name: "cup", scope: !5893, file: !3, line: 4881, type: !301)
!5979 = !DILocation(line: 4881, column: 18, scope: !5893)
!5980 = !DILocalVariable(name: "up", scope: !5893, file: !3, line: 4882, type: !43)
!5981 = !DILocation(line: 4882, column: 12, scope: !5893)
!5982 = !DILocalVariable(name: "lp", scope: !5893, file: !3, line: 4883, type: !60)
!5983 = !DILocation(line: 4883, column: 12, scope: !5893)
!5984 = !DILocalVariable(name: "p", scope: !5893, file: !3, line: 4884, type: !31)
!5985 = !DILocation(line: 4884, column: 12, scope: !5893)
!5986 = !DILocation(line: 4897, column: 17, scope: !5893)
!5987 = !DILocation(line: 4897, column: 22, scope: !5893)
!5988 = !DILocation(line: 4897, column: 27, scope: !5893)
!5989 = !DILocation(line: 4897, column: 32, scope: !5893)
!5990 = !DILocation(line: 4897, column: 26, scope: !5893)
!5991 = !DILocation(line: 4897, column: 37, scope: !5893)
!5992 = !DILocation(line: 4897, column: 8, scope: !5893)
!5993 = !DILocation(line: 4897, column: 7, scope: !5893)
!5994 = !DILocation(line: 4900, column: 7, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5893, file: !3, line: 4900, column: 7)
!5996 = !DILocation(line: 4900, column: 7, scope: !5893)
!5997 = !DILocation(line: 4901, column: 9, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5999, file: !3, line: 4901, column: 9)
!5999 = distinct !DILexicalBlock(scope: !5995, file: !3, line: 4900, column: 20)
!6000 = !DILocation(line: 4901, column: 21, scope: !5998)
!6001 = !DILocation(line: 4901, column: 9, scope: !5999)
!6002 = !DILocation(line: 4902, column: 15, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !5998, file: !3, line: 4901, column: 43)
!6004 = !DILocation(line: 4902, column: 20, scope: !6003)
!6005 = !DILocation(line: 4902, column: 25, scope: !6003)
!6006 = !DILocation(line: 4902, column: 30, scope: !6003)
!6007 = !DILocation(line: 4902, column: 35, scope: !6003)
!6008 = !DILocation(line: 4902, column: 7, scope: !6003)
!6009 = !DILocation(line: 4903, column: 14, scope: !6003)
!6010 = !DILocation(line: 4903, column: 7, scope: !6003)
!6011 = !DILocation(line: 4905, column: 11, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !5999, file: !3, line: 4905, column: 9)
!6013 = !DILocation(line: 4905, column: 16, scope: !6012)
!6014 = !DILocation(line: 4905, column: 21, scope: !6012)
!6015 = !DILocation(line: 4905, column: 30, scope: !6012)
!6016 = !DILocation(line: 4905, column: 34, scope: !6012)
!6017 = !DILocation(line: 4905, column: 37, scope: !6012)
!6018 = !DILocation(line: 4906, column: 7, scope: !6012)
!6019 = !DILocation(line: 4906, column: 11, scope: !6012)
!6020 = !DILocation(line: 4906, column: 16, scope: !6012)
!6021 = !DILocation(line: 4906, column: 21, scope: !6012)
!6022 = !DILocation(line: 4906, column: 30, scope: !6012)
!6023 = !DILocation(line: 4906, column: 34, scope: !6012)
!6024 = !DILocation(line: 4906, column: 37, scope: !6012)
!6025 = !DILocation(line: 4905, column: 9, scope: !5999)
!6026 = !DILocation(line: 4907, column: 8, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 4906, column: 51)
!6028 = !DILocation(line: 4907, column: 14, scope: !6027)
!6029 = !DILocation(line: 4908, column: 14, scope: !6027)
!6030 = !DILocation(line: 4908, column: 7, scope: !6027)
!6031 = !DILocation(line: 4909, column: 19, scope: !5999)
!6032 = !DILocation(line: 4909, column: 5, scope: !5999)
!6033 = !DILocation(line: 4910, column: 15, scope: !5999)
!6034 = !DILocation(line: 4910, column: 19, scope: !5999)
!6035 = !DILocation(line: 4910, column: 5, scope: !5999)
!6036 = !DILocation(line: 4910, column: 10, scope: !5999)
!6037 = !DILocation(line: 4910, column: 14, scope: !5999)
!6038 = !DILocation(line: 4911, column: 12, scope: !5999)
!6039 = !DILocation(line: 4911, column: 5, scope: !5999)
!6040 = !DILocation(line: 4917, column: 7, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !5893, file: !3, line: 4917, column: 7)
!6042 = !DILocation(line: 4917, column: 12, scope: !6041)
!6043 = !DILocation(line: 4917, column: 19, scope: !6041)
!6044 = !DILocation(line: 4917, column: 24, scope: !6041)
!6045 = !DILocation(line: 4917, column: 18, scope: !6041)
!6046 = !DILocation(line: 4917, column: 7, scope: !5893)
!6047 = !DILocalVariable(name: "hold", scope: !6048, file: !3, line: 4918, type: !267)
!6048 = distinct !DILexicalBlock(scope: !6041, file: !3, line: 4917, column: 32)
!6049 = !DILocation(line: 4918, column: 22, scope: !6048)
!6050 = !DILocation(line: 4918, column: 27, scope: !6048)
!6051 = !DILocation(line: 4919, column: 9, scope: !6048)
!6052 = !DILocation(line: 4919, column: 8, scope: !6048)
!6053 = !DILocation(line: 4920, column: 9, scope: !6048)
!6054 = !DILocation(line: 4920, column: 8, scope: !6048)
!6055 = !DILocation(line: 4921, column: 5, scope: !6048)
!6056 = !DILocation(line: 4923, column: 3, scope: !5893)
!6057 = !DILocation(line: 4945, column: 9, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6059, file: !3, line: 4945, column: 9)
!6059 = distinct !DILexicalBlock(scope: !5893, file: !3, line: 4923, column: 6)
!6060 = !DILocation(line: 4945, column: 14, scope: !6058)
!6061 = !DILocation(line: 4945, column: 20, scope: !6058)
!6062 = !DILocation(line: 4945, column: 9, scope: !6059)
!6063 = !DILocation(line: 4947, column: 13, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6058, file: !3, line: 4945, column: 30)
!6065 = !DILocation(line: 4947, column: 18, scope: !6064)
!6066 = !DILocation(line: 4947, column: 24, scope: !6064)
!6067 = !DILocation(line: 4947, column: 33, scope: !6064)
!6068 = !DILocation(line: 4947, column: 36, scope: !6064)
!6069 = !DILocation(line: 4947, column: 11, scope: !6064)
!6070 = !DILocation(line: 4948, column: 13, scope: !6064)
!6071 = !DILocation(line: 4948, column: 18, scope: !6064)
!6072 = !DILocation(line: 4948, column: 24, scope: !6064)
!6073 = !DILocation(line: 4948, column: 33, scope: !6064)
!6074 = !DILocation(line: 4948, column: 36, scope: !6064)
!6075 = !DILocation(line: 4948, column: 11, scope: !6064)
!6076 = !DILocation(line: 4949, column: 12, scope: !6064)
!6077 = !DILocation(line: 4949, column: 17, scope: !6064)
!6078 = !DILocation(line: 4949, column: 16, scope: !6064)
!6079 = !DILocation(line: 4949, column: 11, scope: !6064)
!6080 = !DILocation(line: 4952, column: 17, scope: !6064)
!6081 = !DILocation(line: 4952, column: 21, scope: !6064)
!6082 = !DILocation(line: 4952, column: 16, scope: !6064)
!6083 = !DILocation(line: 4953, column: 11, scope: !6084)
!6084 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 4953, column: 11)
!6085 = !DILocation(line: 4953, column: 20, scope: !6084)
!6086 = !DILocation(line: 4953, column: 11, scope: !6064)
!6087 = !DILocation(line: 4954, column: 26, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6084, file: !3, line: 4953, column: 44)
!6089 = !DILocation(line: 4954, column: 19, scope: !6088)
!6090 = !DILocation(line: 4954, column: 11, scope: !6088)
!6091 = !DILocation(line: 4954, column: 10, scope: !6088)
!6092 = !DILocation(line: 4955, column: 7, scope: !6088)
!6093 = !DILocation(line: 4955, column: 6, scope: !6088)
!6094 = !DILocation(line: 4955, column: 16, scope: !6088)
!6095 = !DILocation(line: 4956, column: 17, scope: !6064)
!6096 = !DILocation(line: 4956, column: 21, scope: !6064)
!6097 = !DILocation(line: 4956, column: 16, scope: !6064)
!6098 = !DILocation(line: 4957, column: 11, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 4957, column: 11)
!6100 = !DILocation(line: 4957, column: 20, scope: !6099)
!6101 = !DILocation(line: 4957, column: 11, scope: !6064)
!6102 = !DILocation(line: 4958, column: 26, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6099, file: !3, line: 4957, column: 44)
!6104 = !DILocation(line: 4958, column: 19, scope: !6103)
!6105 = !DILocation(line: 4958, column: 11, scope: !6103)
!6106 = !DILocation(line: 4958, column: 10, scope: !6103)
!6107 = !DILocation(line: 4959, column: 7, scope: !6103)
!6108 = !DILocation(line: 4959, column: 6, scope: !6103)
!6109 = !DILocation(line: 4959, column: 16, scope: !6103)
!6110 = !DILocation(line: 4968, column: 17, scope: !6064)
!6111 = !DILocation(line: 4968, column: 21, scope: !6064)
!6112 = !DILocation(line: 4968, column: 16, scope: !6064)
!6113 = !DILocation(line: 4973, column: 11, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 4973, column: 11)
!6115 = !DILocation(line: 4973, column: 20, scope: !6114)
!6116 = !DILocation(line: 4973, column: 11, scope: !6064)
!6117 = !DILocation(line: 4974, column: 27, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6114, file: !3, line: 4973, column: 44)
!6119 = !DILocation(line: 4974, column: 20, scope: !6118)
!6120 = !DILocation(line: 4974, column: 11, scope: !6118)
!6121 = !DILocation(line: 4974, column: 10, scope: !6118)
!6122 = !DILocation(line: 4975, column: 16, scope: !6118)
!6123 = !DILocation(line: 4975, column: 7, scope: !6118)
!6124 = !DILocation(line: 4975, column: 6, scope: !6118)
!6125 = !DILocation(line: 4975, column: 25, scope: !6118)
!6126 = !DILocation(line: 4976, column: 11, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 4976, column: 11)
!6128 = !DILocation(line: 4976, column: 15, scope: !6127)
!6129 = !DILocation(line: 4976, column: 21, scope: !6127)
!6130 = !DILocation(line: 4976, column: 23, scope: !6127)
!6131 = !DILocation(line: 4976, column: 27, scope: !6127)
!6132 = !DILocation(line: 4976, column: 33, scope: !6127)
!6133 = !DILocation(line: 4976, column: 35, scope: !6127)
!6134 = !DILocation(line: 4976, column: 39, scope: !6127)
!6135 = !DILocation(line: 4976, column: 11, scope: !6064)
!6136 = !DILocation(line: 4977, column: 3, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6127, file: !3, line: 4976, column: 47)
!6138 = !DILocation(line: 4977, column: 9, scope: !6137)
!6139 = !DILocation(line: 4978, column: 2, scope: !6137)
!6140 = !DILocation(line: 4980, column: 19, scope: !6064)
!6141 = !DILocation(line: 4980, column: 11, scope: !6064)
!6142 = !DILocation(line: 4980, column: 10, scope: !6064)
!6143 = !DILocation(line: 4986, column: 18, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 4986, column: 7)
!6145 = !DILocation(line: 4986, column: 23, scope: !6144)
!6146 = !DILocation(line: 4986, column: 17, scope: !6144)
!6147 = !DILocation(line: 4986, column: 35, scope: !6144)
!6148 = !DILocation(line: 4986, column: 40, scope: !6144)
!6149 = !DILocation(line: 4986, column: 34, scope: !6144)
!6150 = !DILocation(line: 4986, column: 49, scope: !6144)
!6151 = !DILocation(line: 4986, column: 48, scope: !6144)
!6152 = !DILocation(line: 4986, column: 12, scope: !6144)
!6153 = !DILocation(line: 4986, column: 55, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6144, file: !3, line: 4986, column: 7)
!6155 = !DILocation(line: 4986, column: 60, scope: !6154)
!6156 = !DILocation(line: 4986, column: 7, scope: !6144)
!6157 = !DILocation(line: 4987, column: 8, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6154, file: !3, line: 4987, column: 2)
!6159 = !DILocation(line: 4987, column: 13, scope: !6158)
!6160 = !DILocation(line: 4987, column: 16, scope: !6158)
!6161 = !DILocation(line: 4987, column: 7, scope: !6158)
!6162 = !DILocation(line: 4987, column: 20, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6158, file: !3, line: 4987, column: 2)
!6164 = !DILocation(line: 4987, column: 21, scope: !6163)
!6165 = !DILocation(line: 4987, column: 31, scope: !6163)
!6166 = !DILocation(line: 4987, column: 34, scope: !6163)
!6167 = !DILocation(line: 4987, column: 39, scope: !6163)
!6168 = !DILocation(line: 0, scope: !6163)
!6169 = !DILocation(line: 4987, column: 2, scope: !6158)
!6170 = !DILocation(line: 4989, column: 11, scope: !6163)
!6171 = !DILocation(line: 4989, column: 10, scope: !6163)
!6172 = !DILocation(line: 4989, column: 22, scope: !6163)
!6173 = !DILocation(line: 4989, column: 15, scope: !6163)
!6174 = !DILocation(line: 4989, column: 14, scope: !6163)
!6175 = !DILocation(line: 4989, column: 5, scope: !6163)
!6176 = !DILocation(line: 4989, column: 8, scope: !6163)
!6177 = !DILocation(line: 4989, column: 4, scope: !6163)
!6178 = !DILocation(line: 4988, column: 8, scope: !6163)
!6179 = !DILocation(line: 4988, column: 22, scope: !6163)
!6180 = !DILocation(line: 4988, column: 31, scope: !6163)
!6181 = !DILocation(line: 4987, column: 2, scope: !6163)
!6182 = distinct !{!6182, !6169, !6183}
!6183 = !DILocation(line: 4989, column: 23, scope: !6158)
!6184 = !DILocation(line: 4986, column: 67, scope: !6154)
!6185 = !DILocation(line: 4986, column: 7, scope: !6154)
!6186 = distinct !{!6186, !6156, !6187}
!6187 = !DILocation(line: 4989, column: 23, scope: !6144)
!6188 = !DILocation(line: 4990, column: 12, scope: !6064)
!6189 = !DILocation(line: 4990, column: 15, scope: !6064)
!6190 = !DILocation(line: 4990, column: 11, scope: !6064)
!6191 = !DILocation(line: 4991, column: 18, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 4991, column: 7)
!6193 = !DILocation(line: 4991, column: 23, scope: !6192)
!6194 = !DILocation(line: 4991, column: 17, scope: !6192)
!6195 = !DILocation(line: 4991, column: 35, scope: !6192)
!6196 = !DILocation(line: 4991, column: 40, scope: !6192)
!6197 = !DILocation(line: 4991, column: 34, scope: !6192)
!6198 = !DILocation(line: 4991, column: 49, scope: !6192)
!6199 = !DILocation(line: 4991, column: 48, scope: !6192)
!6200 = !DILocation(line: 4991, column: 12, scope: !6192)
!6201 = !DILocation(line: 4991, column: 55, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6192, file: !3, line: 4991, column: 7)
!6203 = !DILocation(line: 4991, column: 60, scope: !6202)
!6204 = !DILocation(line: 4991, column: 7, scope: !6192)
!6205 = !DILocation(line: 4992, column: 8, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6202, file: !3, line: 4992, column: 2)
!6207 = !DILocation(line: 4992, column: 13, scope: !6206)
!6208 = !DILocation(line: 4992, column: 16, scope: !6206)
!6209 = !DILocation(line: 4992, column: 7, scope: !6206)
!6210 = !DILocation(line: 4992, column: 20, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6206, file: !3, line: 4992, column: 2)
!6212 = !DILocation(line: 4992, column: 21, scope: !6211)
!6213 = !DILocation(line: 4992, column: 31, scope: !6211)
!6214 = !DILocation(line: 4992, column: 34, scope: !6211)
!6215 = !DILocation(line: 4992, column: 39, scope: !6211)
!6216 = !DILocation(line: 0, scope: !6211)
!6217 = !DILocation(line: 4992, column: 2, scope: !6206)
!6218 = !DILocation(line: 4994, column: 11, scope: !6211)
!6219 = !DILocation(line: 4994, column: 10, scope: !6211)
!6220 = !DILocation(line: 4994, column: 22, scope: !6211)
!6221 = !DILocation(line: 4994, column: 15, scope: !6211)
!6222 = !DILocation(line: 4994, column: 14, scope: !6211)
!6223 = !DILocation(line: 4994, column: 5, scope: !6211)
!6224 = !DILocation(line: 4994, column: 8, scope: !6211)
!6225 = !DILocation(line: 4994, column: 4, scope: !6211)
!6226 = !DILocation(line: 4993, column: 8, scope: !6211)
!6227 = !DILocation(line: 4993, column: 22, scope: !6211)
!6228 = !DILocation(line: 4993, column: 31, scope: !6211)
!6229 = !DILocation(line: 4992, column: 2, scope: !6211)
!6230 = distinct !{!6230, !6217, !6231}
!6231 = !DILocation(line: 4994, column: 23, scope: !6206)
!6232 = !DILocation(line: 4991, column: 67, scope: !6202)
!6233 = !DILocation(line: 4991, column: 7, scope: !6202)
!6234 = distinct !{!6234, !6204, !6235}
!6235 = !DILocation(line: 4994, column: 23, scope: !6192)
!6236 = !DILocation(line: 4995, column: 12, scope: !6064)
!6237 = !DILocation(line: 4995, column: 15, scope: !6064)
!6238 = !DILocation(line: 4995, column: 11, scope: !6064)
!6239 = !DILocation(line: 4998, column: 15, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 4998, column: 7)
!6241 = !DILocation(line: 4998, column: 14, scope: !6240)
!6242 = !DILocation(line: 4998, column: 12, scope: !6240)
!6243 = !DILocation(line: 4998, column: 21, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6240, file: !3, line: 4998, column: 7)
!6245 = !DILocation(line: 4998, column: 24, scope: !6244)
!6246 = !DILocation(line: 4998, column: 29, scope: !6244)
!6247 = !DILocation(line: 4998, column: 28, scope: !6244)
!6248 = !DILocation(line: 4998, column: 23, scope: !6244)
!6249 = !DILocation(line: 4998, column: 7, scope: !6240)
!6250 = !DILocation(line: 4998, column: 42, scope: !6244)
!6251 = !DILocation(line: 4998, column: 44, scope: !6244)
!6252 = !DILocation(line: 4998, column: 41, scope: !6244)
!6253 = !DILocation(line: 4998, column: 37, scope: !6244)
!6254 = !DILocation(line: 4998, column: 7, scope: !6244)
!6255 = distinct !{!6255, !6249, !6256}
!6256 = !DILocation(line: 4998, column: 45, scope: !6240)
!6257 = !DILocation(line: 5017, column: 11, scope: !6064)
!6258 = !DILocation(line: 5018, column: 16, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 5018, column: 7)
!6260 = !DILocation(line: 5018, column: 15, scope: !6259)
!6261 = !DILocation(line: 5018, column: 12, scope: !6259)
!6262 = !DILocation(line: 5018, column: 22, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6259, file: !3, line: 5018, column: 7)
!6264 = !DILocation(line: 5018, column: 27, scope: !6263)
!6265 = !DILocation(line: 5018, column: 25, scope: !6263)
!6266 = !DILocation(line: 5018, column: 7, scope: !6259)
!6267 = !DILocation(line: 5019, column: 5, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6263, file: !3, line: 5018, column: 40)
!6269 = !DILocation(line: 5019, column: 11, scope: !6268)
!6270 = !DILocation(line: 5019, column: 15, scope: !6268)
!6271 = !DILocation(line: 5019, column: 14, scope: !6268)
!6272 = !DILocation(line: 5019, column: 9, scope: !6268)
!6273 = !DILocation(line: 5019, column: 4, scope: !6268)
!6274 = !DILocation(line: 5020, column: 11, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6268, file: !3, line: 5020, column: 2)
!6276 = !DILocation(line: 5020, column: 10, scope: !6275)
!6277 = !DILocation(line: 5020, column: 7, scope: !6275)
!6278 = !DILocation(line: 5020, column: 17, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6275, file: !3, line: 5020, column: 2)
!6280 = !DILocation(line: 5020, column: 22, scope: !6279)
!6281 = !DILocation(line: 5020, column: 20, scope: !6279)
!6282 = !DILocation(line: 5020, column: 2, scope: !6275)
!6283 = !DILocation(line: 5021, column: 18, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6279, file: !3, line: 5020, column: 41)
!6285 = !DILocation(line: 5021, column: 17, scope: !6284)
!6286 = !DILocation(line: 5021, column: 9, scope: !6284)
!6287 = !DILocation(line: 5021, column: 25, scope: !6284)
!6288 = !DILocation(line: 5021, column: 24, scope: !6284)
!6289 = !DILocation(line: 5021, column: 23, scope: !6284)
!6290 = !DILocation(line: 5021, column: 22, scope: !6284)
!6291 = !DILocation(line: 5021, column: 5, scope: !6284)
!6292 = !DILocation(line: 5021, column: 7, scope: !6284)
!6293 = !DILocation(line: 5022, column: 4, scope: !6284)
!6294 = !DILocation(line: 5020, column: 31, scope: !6279)
!6295 = !DILocation(line: 5020, column: 37, scope: !6279)
!6296 = !DILocation(line: 5020, column: 2, scope: !6279)
!6297 = distinct !{!6297, !6282, !6298}
!6298 = !DILocation(line: 5022, column: 4, scope: !6275)
!6299 = !DILocation(line: 5023, column: 6, scope: !6268)
!6300 = !DILocation(line: 5024, column: 6, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6268, file: !3, line: 5024, column: 6)
!6302 = !DILocation(line: 5024, column: 10, scope: !6301)
!6303 = !DILocation(line: 5024, column: 13, scope: !6301)
!6304 = !DILocation(line: 5024, column: 16, scope: !6301)
!6305 = !DILocation(line: 5024, column: 21, scope: !6301)
!6306 = !DILocation(line: 5024, column: 19, scope: !6301)
!6307 = !DILocation(line: 5024, column: 6, scope: !6268)
!6308 = !DILocation(line: 5024, column: 27, scope: !6301)
!6309 = !DILocation(line: 5025, column: 6, scope: !6268)
!6310 = !DILocation(line: 5027, column: 10, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6268, file: !3, line: 5027, column: 2)
!6312 = !DILocation(line: 5027, column: 9, scope: !6311)
!6313 = !DILocation(line: 5027, column: 7, scope: !6311)
!6314 = !DILocation(line: 5027, column: 16, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6311, file: !3, line: 5027, column: 2)
!6316 = !DILocation(line: 5027, column: 19, scope: !6315)
!6317 = !DILocation(line: 5027, column: 24, scope: !6315)
!6318 = !DILocation(line: 5027, column: 23, scope: !6315)
!6319 = !DILocation(line: 5027, column: 18, scope: !6315)
!6320 = !DILocation(line: 5027, column: 2, scope: !6311)
!6321 = !DILocation(line: 5028, column: 9, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6323, file: !3, line: 5028, column: 8)
!6323 = distinct !DILexicalBlock(scope: !6315, file: !3, line: 5027, column: 36)
!6324 = !DILocation(line: 5028, column: 8, scope: !6322)
!6325 = !DILocation(line: 5028, column: 11, scope: !6322)
!6326 = !DILocation(line: 5028, column: 8, scope: !6323)
!6327 = !DILocation(line: 5028, column: 22, scope: !6322)
!6328 = !DILocation(line: 5029, column: 12, scope: !6323)
!6329 = !DILocation(line: 5029, column: 11, scope: !6323)
!6330 = !DILocation(line: 5029, column: 14, scope: !6323)
!6331 = !DILocation(line: 5029, column: 10, scope: !6323)
!6332 = !DILocation(line: 5034, column: 8, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6323, file: !3, line: 5034, column: 8)
!6334 = !DILocation(line: 5034, column: 14, scope: !6333)
!6335 = !DILocation(line: 5034, column: 8, scope: !6323)
!6336 = !DILocation(line: 5034, column: 37, scope: !6333)
!6337 = !DILocation(line: 5034, column: 31, scope: !6333)
!6338 = !DILocation(line: 5034, column: 30, scope: !6333)
!6339 = !DILocation(line: 5034, column: 25, scope: !6333)
!6340 = !DILocalVariable(name: "carry2", scope: !6341, file: !3, line: 5036, type: !36)
!6341 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 5035, column: 10)
!6342 = !DILocation(line: 5036, column: 11, scope: !6341)
!6343 = !DILocation(line: 5036, column: 25, scope: !6341)
!6344 = !DILocation(line: 5036, column: 31, scope: !6341)
!6345 = !DILocation(line: 5036, column: 18, scope: !6341)
!6346 = !DILocation(line: 5037, column: 15, scope: !6341)
!6347 = !DILocation(line: 5037, column: 8, scope: !6341)
!6348 = !DILocation(line: 5037, column: 10, scope: !6341)
!6349 = !DILocation(line: 5037, column: 13, scope: !6341)
!6350 = !DILocation(line: 5038, column: 37, scope: !6341)
!6351 = !DILocation(line: 5038, column: 36, scope: !6341)
!6352 = !DILocation(line: 5038, column: 7, scope: !6341)
!6353 = !DILocation(line: 5038, column: 9, scope: !6341)
!6354 = !DILocation(line: 5039, column: 19, scope: !6341)
!6355 = !DILocation(line: 5039, column: 43, scope: !6341)
!6356 = !DILocation(line: 5039, column: 42, scope: !6341)
!6357 = !DILocation(line: 5039, column: 25, scope: !6341)
!6358 = !DILocation(line: 5039, column: 12, scope: !6341)
!6359 = !DILocation(line: 5039, column: 11, scope: !6341)
!6360 = !DILocation(line: 5041, column: 13, scope: !6323)
!6361 = !DILocation(line: 5041, column: 6, scope: !6323)
!6362 = !DILocation(line: 5041, column: 8, scope: !6323)
!6363 = !DILocation(line: 5041, column: 11, scope: !6323)
!6364 = !DILocation(line: 5042, column: 26, scope: !6323)
!6365 = !DILocation(line: 5042, column: 25, scope: !6323)
!6366 = !DILocation(line: 5042, column: 5, scope: !6323)
!6367 = !DILocation(line: 5042, column: 7, scope: !6323)
!6368 = !DILocation(line: 5043, column: 4, scope: !6323)
!6369 = !DILocation(line: 5027, column: 32, scope: !6315)
!6370 = !DILocation(line: 5027, column: 2, scope: !6315)
!6371 = distinct !{!6371, !6320, !6372}
!6372 = !DILocation(line: 5043, column: 4, scope: !6311)
!6373 = !DILocation(line: 5044, column: 2, scope: !6268)
!6374 = !DILocation(line: 5018, column: 36, scope: !6263)
!6375 = !DILocation(line: 5018, column: 7, scope: !6263)
!6376 = distinct !{!6376, !6266, !6377}
!6377 = !DILocation(line: 5044, column: 2, scope: !6259)
!6378 = !DILocation(line: 5052, column: 15, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 5052, column: 7)
!6380 = !DILocation(line: 5052, column: 14, scope: !6379)
!6381 = !DILocation(line: 5052, column: 24, scope: !6379)
!6382 = !DILocation(line: 5052, column: 23, scope: !6379)
!6383 = !DILocation(line: 5052, column: 12, scope: !6379)
!6384 = !DILocation(line: 5052, column: 29, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6379, file: !3, line: 5052, column: 7)
!6386 = !DILocation(line: 5052, column: 32, scope: !6385)
!6387 = !DILocation(line: 5052, column: 37, scope: !6385)
!6388 = !DILocation(line: 5052, column: 36, scope: !6385)
!6389 = !DILocation(line: 5052, column: 31, scope: !6385)
!6390 = !DILocation(line: 5052, column: 7, scope: !6379)
!6391 = !DILocalVariable(name: "item", scope: !6392, file: !3, line: 5053, type: !36)
!6392 = distinct !DILexicalBlock(scope: !6385, file: !3, line: 5052, column: 49)
!6393 = !DILocation(line: 5053, column: 7, scope: !6392)
!6394 = !DILocation(line: 5053, column: 19, scope: !6392)
!6395 = !DILocation(line: 5053, column: 18, scope: !6392)
!6396 = !DILocation(line: 5053, column: 12, scope: !6392)
!6397 = !DILocation(line: 5054, column: 8, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 5054, column: 2)
!6399 = !DILocation(line: 5054, column: 7, scope: !6398)
!6400 = !DILocation(line: 5054, column: 12, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 5054, column: 2)
!6402 = !DILocation(line: 5054, column: 13, scope: !6401)
!6403 = !DILocation(line: 5054, column: 2, scope: !6398)
!6404 = !DILocalVariable(name: "part", scope: !6405, file: !3, line: 5055, type: !36)
!6405 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 5054, column: 50)
!6406 = !DILocation(line: 5055, column: 9, scope: !6405)
!6407 = !DILocation(line: 5055, column: 14, scope: !6405)
!6408 = !DILocation(line: 5055, column: 18, scope: !6405)
!6409 = !DILocation(line: 5056, column: 15, scope: !6405)
!6410 = !DILocation(line: 5056, column: 21, scope: !6405)
!6411 = !DILocation(line: 5056, column: 25, scope: !6405)
!6412 = !DILocation(line: 5056, column: 19, scope: !6405)
!6413 = !DILocation(line: 5056, column: 8, scope: !6405)
!6414 = !DILocation(line: 5056, column: 5, scope: !6405)
!6415 = !DILocation(line: 5056, column: 7, scope: !6405)
!6416 = !DILocation(line: 5057, column: 9, scope: !6405)
!6417 = !DILocation(line: 5057, column: 8, scope: !6405)
!6418 = !DILocation(line: 5058, column: 4, scope: !6405)
!6419 = !DILocation(line: 5054, column: 33, scope: !6401)
!6420 = !DILocation(line: 5054, column: 46, scope: !6401)
!6421 = !DILocation(line: 5054, column: 2, scope: !6401)
!6422 = distinct !{!6422, !6403, !6423}
!6423 = !DILocation(line: 5058, column: 4, scope: !6398)
!6424 = !DILocation(line: 5059, column: 12, scope: !6392)
!6425 = !DILocation(line: 5059, column: 6, scope: !6392)
!6426 = !DILocation(line: 5059, column: 3, scope: !6392)
!6427 = !DILocation(line: 5059, column: 5, scope: !6392)
!6428 = !DILocation(line: 5059, column: 20, scope: !6392)
!6429 = !DILocation(line: 5060, column: 2, scope: !6392)
!6430 = !DILocation(line: 5052, column: 45, scope: !6385)
!6431 = !DILocation(line: 5052, column: 7, scope: !6385)
!6432 = distinct !{!6432, !6390, !6433}
!6433 = !DILocation(line: 5060, column: 2, scope: !6379)
!6434 = !DILocation(line: 5061, column: 16, scope: !6064)
!6435 = !DILocation(line: 5061, column: 19, scope: !6064)
!6436 = !DILocation(line: 5061, column: 18, scope: !6064)
!6437 = !DILocation(line: 5061, column: 15, scope: !6064)
!6438 = !DILocation(line: 5062, column: 7, scope: !6064)
!6439 = !DILocation(line: 5067, column: 11, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6058, file: !3, line: 5063, column: 11)
!6441 = !DILocation(line: 5067, column: 10, scope: !6440)
!6442 = !DILocation(line: 5068, column: 18, scope: !6440)
!6443 = !DILocation(line: 5068, column: 35, scope: !6440)
!6444 = !DILocation(line: 5068, column: 34, scope: !6440)
!6445 = !DILocation(line: 5068, column: 17, scope: !6440)
!6446 = !DILocation(line: 5068, column: 52, scope: !6440)
!6447 = !DILocation(line: 5068, column: 16, scope: !6440)
!6448 = !DILocation(line: 5069, column: 11, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 5069, column: 11)
!6450 = !DILocation(line: 5069, column: 20, scope: !6449)
!6451 = !DILocation(line: 5069, column: 11, scope: !6440)
!6452 = !DILocation(line: 5070, column: 26, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 5069, column: 43)
!6454 = !DILocation(line: 5070, column: 19, scope: !6453)
!6455 = !DILocation(line: 5070, column: 11, scope: !6453)
!6456 = !DILocation(line: 5070, column: 10, scope: !6453)
!6457 = !DILocation(line: 5071, column: 6, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6453, file: !3, line: 5071, column: 6)
!6459 = !DILocation(line: 5071, column: 14, scope: !6458)
!6460 = !DILocation(line: 5071, column: 6, scope: !6453)
!6461 = !DILocation(line: 5071, column: 24, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 5071, column: 22)
!6463 = !DILocation(line: 5071, column: 30, scope: !6462)
!6464 = !DILocation(line: 5071, column: 58, scope: !6462)
!6465 = !DILocation(line: 5072, column: 14, scope: !6453)
!6466 = !DILocation(line: 5072, column: 6, scope: !6453)
!6467 = !DILocation(line: 5072, column: 5, scope: !6453)
!6468 = !DILocation(line: 5073, column: 2, scope: !6453)
!6469 = !DILocation(line: 5080, column: 15, scope: !6440)
!6470 = !DILocation(line: 5081, column: 8, scope: !6440)
!6471 = !DILocation(line: 5081, column: 11, scope: !6440)
!6472 = !DILocation(line: 5082, column: 12, scope: !6440)
!6473 = !DILocation(line: 5083, column: 17, scope: !6440)
!6474 = !DILocation(line: 5083, column: 16, scope: !6440)
!6475 = !DILocation(line: 5084, column: 15, scope: !6440)
!6476 = !DILocation(line: 5084, column: 20, scope: !6440)
!6477 = !DILocation(line: 5084, column: 24, scope: !6440)
!6478 = !DILocation(line: 5084, column: 23, scope: !6440)
!6479 = !DILocation(line: 5084, column: 14, scope: !6440)
!6480 = !DILocation(line: 5086, column: 16, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 5086, column: 7)
!6482 = !DILocation(line: 5086, column: 21, scope: !6481)
!6483 = !DILocation(line: 5086, column: 15, scope: !6481)
!6484 = !DILocation(line: 5086, column: 12, scope: !6481)
!6485 = !DILocation(line: 5086, column: 26, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 5086, column: 7)
!6487 = !DILocation(line: 5086, column: 30, scope: !6486)
!6488 = !DILocation(line: 5086, column: 29, scope: !6486)
!6489 = !DILocation(line: 5086, column: 7, scope: !6481)
!6490 = !DILocation(line: 5089, column: 7, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 5089, column: 6)
!6492 = distinct !DILexicalBlock(scope: !6486, file: !3, line: 5086, column: 46)
!6493 = !DILocation(line: 5089, column: 6, scope: !6491)
!6494 = !DILocation(line: 5089, column: 10, scope: !6491)
!6495 = !DILocation(line: 5089, column: 6, scope: !6492)
!6496 = !DILocation(line: 5089, column: 39, scope: !6491)
!6497 = !DILocation(line: 5089, column: 43, scope: !6491)
!6498 = !DILocation(line: 5089, column: 51, scope: !6491)
!6499 = !DILocation(line: 5089, column: 60, scope: !6491)
!6500 = !DILocation(line: 5089, column: 59, scope: !6491)
!6501 = !DILocation(line: 5090, column: 10, scope: !6491)
!6502 = !DILocation(line: 5090, column: 15, scope: !6491)
!6503 = !DILocation(line: 5090, column: 20, scope: !6491)
!6504 = !DILocation(line: 5091, column: 11, scope: !6491)
!6505 = !DILocation(line: 5091, column: 15, scope: !6491)
!6506 = !DILocation(line: 5091, column: 24, scope: !6491)
!6507 = !DILocation(line: 5091, column: 23, scope: !6491)
!6508 = !DILocation(line: 5089, column: 24, scope: !6491)
!6509 = !DILocation(line: 5092, column: 12, scope: !6491)
!6510 = !DILocation(line: 5092, column: 10, scope: !6491)
!6511 = !DILocation(line: 5089, column: 23, scope: !6491)
!6512 = !DILocation(line: 5089, column: 15, scope: !6491)
!6513 = !DILocation(line: 5094, column: 6, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6491, file: !3, line: 5093, column: 8)
!6515 = !DILocation(line: 5094, column: 10, scope: !6514)
!6516 = !DILocation(line: 5094, column: 9, scope: !6514)
!6517 = !DILocation(line: 5094, column: 19, scope: !6514)
!6518 = !DILocation(line: 5095, column: 12, scope: !6514)
!6519 = !DILocation(line: 5098, column: 7, scope: !6492)
!6520 = !DILocation(line: 5099, column: 2, scope: !6492)
!6521 = !DILocation(line: 5086, column: 42, scope: !6486)
!6522 = !DILocation(line: 5086, column: 7, scope: !6486)
!6523 = distinct !{!6523, !6489, !6524}
!6524 = !DILocation(line: 5099, column: 2, scope: !6481)
!6525 = !DILocation(line: 5111, column: 15, scope: !6059)
!6526 = !DILocation(line: 5111, column: 5, scope: !6059)
!6527 = !DILocation(line: 5111, column: 10, scope: !6059)
!6528 = !DILocation(line: 5111, column: 14, scope: !6059)
!6529 = !DILocation(line: 5112, column: 30, scope: !6059)
!6530 = !DILocation(line: 5112, column: 35, scope: !6059)
!6531 = !DILocation(line: 5112, column: 17, scope: !6059)
!6532 = !DILocation(line: 5112, column: 5, scope: !6059)
!6533 = !DILocation(line: 5112, column: 10, scope: !6059)
!6534 = !DILocation(line: 5112, column: 16, scope: !6059)
!6535 = !DILocation(line: 5119, column: 14, scope: !6059)
!6536 = !DILocation(line: 5119, column: 19, scope: !6059)
!6537 = !DILocation(line: 5119, column: 28, scope: !6059)
!6538 = !DILocation(line: 5119, column: 33, scope: !6059)
!6539 = !DILocation(line: 5119, column: 27, scope: !6059)
!6540 = !DILocation(line: 5119, column: 13, scope: !6059)
!6541 = !DILocation(line: 5120, column: 9, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6059, file: !3, line: 5120, column: 9)
!6543 = !DILocation(line: 5120, column: 14, scope: !6542)
!6544 = !DILocation(line: 5120, column: 22, scope: !6542)
!6545 = !DILocation(line: 5120, column: 25, scope: !6542)
!6546 = !DILocation(line: 5120, column: 28, scope: !6542)
!6547 = !DILocation(line: 5120, column: 33, scope: !6542)
!6548 = !DILocation(line: 5120, column: 41, scope: !6542)
!6549 = !DILocation(line: 5120, column: 44, scope: !6542)
!6550 = !DILocation(line: 5120, column: 47, scope: !6542)
!6551 = !DILocation(line: 5120, column: 55, scope: !6542)
!6552 = !DILocation(line: 5120, column: 9, scope: !6059)
!6553 = !DILocation(line: 5121, column: 15, scope: !6542)
!6554 = !DILocation(line: 5121, column: 7, scope: !6542)
!6555 = !DILocation(line: 5122, column: 19, scope: !6059)
!6556 = !DILocation(line: 5122, column: 5, scope: !6059)
!6557 = !DILocation(line: 5122, column: 10, scope: !6059)
!6558 = !DILocation(line: 5122, column: 18, scope: !6059)
!6559 = !DILocation(line: 5126, column: 17, scope: !6059)
!6560 = !DILocation(line: 5126, column: 22, scope: !6059)
!6561 = !DILocation(line: 5126, column: 27, scope: !6059)
!6562 = !DILocation(line: 5126, column: 32, scope: !6059)
!6563 = !DILocation(line: 5126, column: 37, scope: !6059)
!6564 = !DILocation(line: 5126, column: 55, scope: !6059)
!6565 = !DILocation(line: 5126, column: 5, scope: !6059)
!6566 = !DILocation(line: 5127, column: 5, scope: !6059)
!6567 = !DILocation(line: 5128, column: 5, scope: !6059)
!6568 = !DILocation(line: 5130, column: 7, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !5893, file: !3, line: 5130, column: 7)
!6570 = !DILocation(line: 5130, column: 15, scope: !6569)
!6571 = !DILocation(line: 5130, column: 7, scope: !5893)
!6572 = !DILocation(line: 5130, column: 28, scope: !6569)
!6573 = !DILocation(line: 5130, column: 23, scope: !6569)
!6574 = !DILocation(line: 5136, column: 7, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !5893, file: !3, line: 5136, column: 7)
!6576 = !DILocation(line: 5136, column: 15, scope: !6575)
!6577 = !DILocation(line: 5136, column: 7, scope: !5893)
!6578 = !DILocation(line: 5136, column: 28, scope: !6575)
!6579 = !DILocation(line: 5136, column: 23, scope: !6575)
!6580 = !DILocation(line: 5137, column: 7, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !5893, file: !3, line: 5137, column: 7)
!6582 = !DILocation(line: 5137, column: 15, scope: !6581)
!6583 = !DILocation(line: 5137, column: 7, scope: !5893)
!6584 = !DILocation(line: 5137, column: 28, scope: !6581)
!6585 = !DILocation(line: 5137, column: 23, scope: !6581)
!6586 = !DILocation(line: 5139, column: 10, scope: !5893)
!6587 = !DILocation(line: 5139, column: 3, scope: !5893)
!6588 = !DILocation(line: 5140, column: 3, scope: !5893)
!6589 = distinct !DISubprogram(name: "decNumberInvert", scope: !3, file: !3, line: 1194, type: !2287, scopeLine: 1195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!6590 = !DILocalVariable(name: "res", arg: 1, scope: !6589, file: !3, line: 1194, type: !47)
!6591 = !DILocation(line: 1194, column: 40, scope: !6589)
!6592 = !DILocalVariable(name: "rhs", arg: 2, scope: !6589, file: !3, line: 1194, type: !267)
!6593 = !DILocation(line: 1194, column: 62, scope: !6589)
!6594 = !DILocalVariable(name: "set", arg: 3, scope: !6589, file: !3, line: 1195, type: !269)
!6595 = !DILocation(line: 1195, column: 20, scope: !6589)
!6596 = !DILocalVariable(name: "ua", scope: !6589, file: !3, line: 1196, type: !301)
!6597 = !DILocation(line: 1196, column: 15, scope: !6589)
!6598 = !DILocalVariable(name: "msua", scope: !6589, file: !3, line: 1196, type: !301)
!6599 = !DILocation(line: 1196, column: 20, scope: !6589)
!6600 = !DILocalVariable(name: "uc", scope: !6589, file: !3, line: 1197, type: !43)
!6601 = !DILocation(line: 1197, column: 9, scope: !6589)
!6602 = !DILocalVariable(name: "msuc", scope: !6589, file: !3, line: 1197, type: !43)
!6603 = !DILocation(line: 1197, column: 14, scope: !6589)
!6604 = !DILocalVariable(name: "msudigs", scope: !6589, file: !3, line: 1198, type: !31)
!6605 = !DILocation(line: 1198, column: 7, scope: !6589)
!6606 = !DILocation(line: 1203, column: 7, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6589, file: !3, line: 1203, column: 7)
!6608 = !DILocation(line: 1203, column: 12, scope: !6607)
!6609 = !DILocation(line: 1203, column: 20, scope: !6607)
!6610 = !DILocation(line: 1203, column: 24, scope: !6607)
!6611 = !DILocation(line: 1203, column: 27, scope: !6607)
!6612 = !DILocation(line: 1203, column: 51, scope: !6607)
!6613 = !DILocation(line: 1203, column: 54, scope: !6607)
!6614 = !DILocation(line: 1203, column: 7, scope: !6589)
!6615 = !DILocation(line: 1204, column: 15, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6607, file: !3, line: 1203, column: 80)
!6617 = !DILocation(line: 1204, column: 43, scope: !6616)
!6618 = !DILocation(line: 1204, column: 5, scope: !6616)
!6619 = !DILocation(line: 1205, column: 12, scope: !6616)
!6620 = !DILocation(line: 1205, column: 5, scope: !6616)
!6621 = !DILocation(line: 1208, column: 6, scope: !6589)
!6622 = !DILocation(line: 1208, column: 11, scope: !6589)
!6623 = !DILocation(line: 1208, column: 5, scope: !6589)
!6624 = !DILocation(line: 1209, column: 6, scope: !6589)
!6625 = !DILocation(line: 1209, column: 11, scope: !6589)
!6626 = !DILocation(line: 1209, column: 5, scope: !6589)
!6627 = !DILocation(line: 1210, column: 8, scope: !6589)
!6628 = !DILocation(line: 1210, column: 11, scope: !6589)
!6629 = !DILocation(line: 1210, column: 10, scope: !6589)
!6630 = !DILocation(line: 1210, column: 27, scope: !6589)
!6631 = !DILocation(line: 1210, column: 7, scope: !6589)
!6632 = !DILocation(line: 1211, column: 8, scope: !6589)
!6633 = !DILocation(line: 1211, column: 11, scope: !6589)
!6634 = !DILocation(line: 1211, column: 10, scope: !6589)
!6635 = !DILocation(line: 1211, column: 27, scope: !6589)
!6636 = !DILocation(line: 1211, column: 7, scope: !6589)
!6637 = !DILocation(line: 1212, column: 11, scope: !6589)
!6638 = !DILocation(line: 1212, column: 10, scope: !6589)
!6639 = !DILocation(line: 1213, column: 3, scope: !6589)
!6640 = !DILocation(line: 1213, column: 10, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6642, file: !3, line: 1213, column: 3)
!6642 = distinct !DILexicalBlock(scope: !6589, file: !3, line: 1213, column: 3)
!6643 = !DILocation(line: 1213, column: 14, scope: !6641)
!6644 = !DILocation(line: 1213, column: 12, scope: !6641)
!6645 = !DILocation(line: 1213, column: 3, scope: !6642)
!6646 = !DILocalVariable(name: "a", scope: !6647, file: !3, line: 1214, type: !39)
!6647 = distinct !DILexicalBlock(scope: !6641, file: !3, line: 1213, column: 32)
!6648 = !DILocation(line: 1214, column: 10, scope: !6647)
!6649 = !DILocalVariable(name: "i", scope: !6647, file: !3, line: 1215, type: !31)
!6650 = !DILocation(line: 1215, column: 10, scope: !6647)
!6651 = !DILocalVariable(name: "j", scope: !6647, file: !3, line: 1215, type: !31)
!6652 = !DILocation(line: 1215, column: 13, scope: !6647)
!6653 = !DILocation(line: 1216, column: 9, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6647, file: !3, line: 1216, column: 9)
!6655 = !DILocation(line: 1216, column: 12, scope: !6654)
!6656 = !DILocation(line: 1216, column: 11, scope: !6654)
!6657 = !DILocation(line: 1216, column: 9, scope: !6647)
!6658 = !DILocation(line: 1216, column: 19, scope: !6654)
!6659 = !DILocation(line: 1216, column: 18, scope: !6654)
!6660 = !DILocation(line: 1217, column: 14, scope: !6654)
!6661 = !DILocation(line: 1217, column: 13, scope: !6654)
!6662 = !DILocation(line: 1217, column: 12, scope: !6654)
!6663 = !DILocation(line: 1218, column: 6, scope: !6647)
!6664 = !DILocation(line: 1218, column: 8, scope: !6647)
!6665 = !DILocation(line: 1221, column: 11, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6647, file: !3, line: 1221, column: 5)
!6667 = !DILocation(line: 1221, column: 10, scope: !6666)
!6668 = !DILocation(line: 1221, column: 15, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 1221, column: 5)
!6670 = !DILocation(line: 1221, column: 16, scope: !6669)
!6671 = !DILocation(line: 1221, column: 5, scope: !6666)
!6672 = !DILocation(line: 1222, column: 13, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6674, file: !3, line: 1222, column: 11)
!6674 = distinct !DILexicalBlock(scope: !6669, file: !3, line: 1221, column: 31)
!6675 = !DILocation(line: 1222, column: 12, scope: !6673)
!6676 = !DILocation(line: 1222, column: 15, scope: !6673)
!6677 = !DILocation(line: 1222, column: 11, scope: !6674)
!6678 = !DILocation(line: 1222, column: 24, scope: !6673)
!6679 = !DILocation(line: 1222, column: 23, scope: !6673)
!6680 = !DILocation(line: 1222, column: 40, scope: !6673)
!6681 = !DILocation(line: 1222, column: 33, scope: !6673)
!6682 = !DILocation(line: 1222, column: 27, scope: !6673)
!6683 = !DILocation(line: 1222, column: 26, scope: !6673)
!6684 = !DILocation(line: 1222, column: 20, scope: !6673)
!6685 = !DILocation(line: 1222, column: 22, scope: !6673)
!6686 = !DILocation(line: 1222, column: 19, scope: !6673)
!6687 = !DILocation(line: 1223, column: 9, scope: !6674)
!6688 = !DILocation(line: 1223, column: 10, scope: !6674)
!6689 = !DILocation(line: 1223, column: 8, scope: !6674)
!6690 = !DILocation(line: 1224, column: 9, scope: !6674)
!6691 = !DILocation(line: 1224, column: 10, scope: !6674)
!6692 = !DILocation(line: 1224, column: 8, scope: !6674)
!6693 = !DILocation(line: 1225, column: 11, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6674, file: !3, line: 1225, column: 11)
!6695 = !DILocation(line: 1225, column: 12, scope: !6694)
!6696 = !DILocation(line: 1225, column: 11, scope: !6674)
!6697 = !DILocation(line: 1226, column: 12, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6694, file: !3, line: 1225, column: 16)
!6699 = !DILocation(line: 1226, column: 40, scope: !6698)
!6700 = !DILocation(line: 1226, column: 2, scope: !6698)
!6701 = !DILocation(line: 1227, column: 9, scope: !6698)
!6702 = !DILocation(line: 1227, column: 2, scope: !6698)
!6703 = !DILocation(line: 1229, column: 11, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6674, file: !3, line: 1229, column: 11)
!6705 = !DILocation(line: 1229, column: 15, scope: !6704)
!6706 = !DILocation(line: 1229, column: 13, scope: !6704)
!6707 = !DILocation(line: 1229, column: 20, scope: !6704)
!6708 = !DILocation(line: 1229, column: 23, scope: !6704)
!6709 = !DILocation(line: 1229, column: 26, scope: !6704)
!6710 = !DILocation(line: 1229, column: 33, scope: !6704)
!6711 = !DILocation(line: 1229, column: 24, scope: !6704)
!6712 = !DILocation(line: 1229, column: 11, scope: !6674)
!6713 = !DILocation(line: 1229, column: 37, scope: !6704)
!6714 = !DILocation(line: 1230, column: 7, scope: !6674)
!6715 = !DILocation(line: 1221, column: 27, scope: !6669)
!6716 = !DILocation(line: 1221, column: 5, scope: !6669)
!6717 = distinct !{!6717, !6671, !6718}
!6718 = !DILocation(line: 1230, column: 7, scope: !6666)
!6719 = !DILocation(line: 1231, column: 5, scope: !6647)
!6720 = !DILocation(line: 1213, column: 22, scope: !6641)
!6721 = !DILocation(line: 1213, column: 28, scope: !6641)
!6722 = !DILocation(line: 1213, column: 3, scope: !6641)
!6723 = distinct !{!6723, !6645, !6724}
!6724 = !DILocation(line: 1231, column: 5, scope: !6642)
!6725 = !DILocation(line: 1233, column: 28, scope: !6589)
!6726 = !DILocation(line: 1233, column: 33, scope: !6589)
!6727 = !DILocation(line: 1233, column: 38, scope: !6589)
!6728 = !DILocation(line: 1233, column: 41, scope: !6589)
!6729 = !DILocation(line: 1233, column: 46, scope: !6589)
!6730 = !DILocation(line: 1233, column: 40, scope: !6589)
!6731 = !DILocation(line: 1233, column: 15, scope: !6589)
!6732 = !DILocation(line: 1233, column: 3, scope: !6589)
!6733 = !DILocation(line: 1233, column: 8, scope: !6589)
!6734 = !DILocation(line: 1233, column: 14, scope: !6589)
!6735 = !DILocation(line: 1234, column: 3, scope: !6589)
!6736 = !DILocation(line: 1234, column: 8, scope: !6589)
!6737 = !DILocation(line: 1234, column: 16, scope: !6589)
!6738 = !DILocation(line: 1235, column: 3, scope: !6589)
!6739 = !DILocation(line: 1235, column: 8, scope: !6589)
!6740 = !DILocation(line: 1235, column: 12, scope: !6589)
!6741 = !DILocation(line: 1236, column: 10, scope: !6589)
!6742 = !DILocation(line: 1236, column: 3, scope: !6589)
!6743 = !DILocation(line: 1237, column: 3, scope: !6589)
!6744 = distinct !DISubprogram(name: "decNumberLn", scope: !3, file: !3, line: 1267, type: !2287, scopeLine: 1268, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!6745 = !DILocalVariable(name: "res", arg: 1, scope: !6744, file: !3, line: 1267, type: !47)
!6746 = !DILocation(line: 1267, column: 36, scope: !6744)
!6747 = !DILocalVariable(name: "rhs", arg: 2, scope: !6744, file: !3, line: 1267, type: !267)
!6748 = !DILocation(line: 1267, column: 58, scope: !6744)
!6749 = !DILocalVariable(name: "set", arg: 3, scope: !6744, file: !3, line: 1268, type: !269)
!6750 = !DILocation(line: 1268, column: 16, scope: !6744)
!6751 = !DILocalVariable(name: "status", scope: !6744, file: !3, line: 1269, type: !36)
!6752 = !DILocation(line: 1269, column: 8, scope: !6744)
!6753 = !DILocation(line: 1280, column: 21, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6744, file: !3, line: 1280, column: 7)
!6755 = !DILocation(line: 1280, column: 26, scope: !6754)
!6756 = !DILocation(line: 1280, column: 8, scope: !6754)
!6757 = !DILocation(line: 1280, column: 7, scope: !6744)
!6758 = !DILocation(line: 1280, column: 41, scope: !6754)
!6759 = !DILocation(line: 1295, column: 13, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6754, file: !3, line: 1280, column: 44)
!6761 = !DILocation(line: 1295, column: 18, scope: !6760)
!6762 = !DILocation(line: 1295, column: 23, scope: !6760)
!6763 = !DILocation(line: 1295, column: 5, scope: !6760)
!6764 = !DILocation(line: 1296, column: 5, scope: !6760)
!6765 = !DILocation(line: 1302, column: 7, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6744, file: !3, line: 1302, column: 7)
!6767 = !DILocation(line: 1302, column: 13, scope: !6766)
!6768 = !DILocation(line: 1302, column: 7, scope: !6744)
!6769 = !DILocation(line: 1302, column: 28, scope: !6766)
!6770 = !DILocation(line: 1302, column: 33, scope: !6766)
!6771 = !DILocation(line: 1302, column: 41, scope: !6766)
!6772 = !DILocation(line: 1302, column: 18, scope: !6766)
!6773 = !DILocation(line: 1306, column: 10, scope: !6744)
!6774 = !DILocation(line: 1306, column: 3, scope: !6744)
!6775 = distinct !DISubprogram(name: "decLnOp", scope: !3, file: !3, line: 5581, type: !5233, scopeLine: 5582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!6776 = !DILocalVariable(name: "res", arg: 1, scope: !6775, file: !3, line: 5581, type: !47)
!6777 = !DILocation(line: 5581, column: 32, scope: !6775)
!6778 = !DILocalVariable(name: "rhs", arg: 2, scope: !6775, file: !3, line: 5581, type: !267)
!6779 = !DILocation(line: 5581, column: 54, scope: !6775)
!6780 = !DILocalVariable(name: "set", arg: 3, scope: !6775, file: !3, line: 5582, type: !269)
!6781 = !DILocation(line: 5582, column: 19, scope: !6775)
!6782 = !DILocalVariable(name: "status", arg: 4, scope: !6775, file: !3, line: 5582, type: !59)
!6783 = !DILocation(line: 5582, column: 30, scope: !6775)
!6784 = !DILocalVariable(name: "ignore", scope: !6775, file: !3, line: 5583, type: !36)
!6785 = !DILocation(line: 5583, column: 8, scope: !6775)
!6786 = !DILocalVariable(name: "needbytes", scope: !6775, file: !3, line: 5584, type: !36)
!6787 = !DILocation(line: 5584, column: 8, scope: !6775)
!6788 = !DILocalVariable(name: "residue", scope: !6775, file: !3, line: 5585, type: !31)
!6789 = !DILocation(line: 5585, column: 7, scope: !6775)
!6790 = !DILocalVariable(name: "r", scope: !6775, file: !3, line: 5586, type: !31)
!6791 = !DILocation(line: 5586, column: 7, scope: !6775)
!6792 = !DILocalVariable(name: "p", scope: !6775, file: !3, line: 5587, type: !31)
!6793 = !DILocation(line: 5587, column: 7, scope: !6775)
!6794 = !DILocalVariable(name: "pp", scope: !6775, file: !3, line: 5588, type: !31)
!6795 = !DILocation(line: 5588, column: 7, scope: !6775)
!6796 = !DILocalVariable(name: "t", scope: !6775, file: !3, line: 5589, type: !31)
!6797 = !DILocation(line: 5589, column: 7, scope: !6775)
!6798 = !DILocalVariable(name: "bufa", scope: !6775, file: !3, line: 5593, type: !6799)
!6799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 384, elements: !6800)
!6800 = !{!6801}
!6801 = !DISubrange(count: 4)
!6802 = !DILocation(line: 5593, column: 13, scope: !6775)
!6803 = !DILocalVariable(name: "allocbufa", scope: !6775, file: !3, line: 5594, type: !47)
!6804 = !DILocation(line: 5594, column: 14, scope: !6775)
!6805 = !DILocalVariable(name: "a", scope: !6775, file: !3, line: 5595, type: !47)
!6806 = !DILocation(line: 5595, column: 14, scope: !6775)
!6807 = !DILocation(line: 5595, column: 16, scope: !6775)
!6808 = !DILocalVariable(name: "bufb", scope: !6775, file: !3, line: 5596, type: !5265)
!6809 = !DILocation(line: 5596, column: 13, scope: !6775)
!6810 = !DILocalVariable(name: "allocbufb", scope: !6775, file: !3, line: 5597, type: !47)
!6811 = !DILocation(line: 5597, column: 14, scope: !6775)
!6812 = !DILocalVariable(name: "b", scope: !6775, file: !3, line: 5598, type: !47)
!6813 = !DILocation(line: 5598, column: 14, scope: !6775)
!6814 = !DILocation(line: 5598, column: 16, scope: !6775)
!6815 = !DILocalVariable(name: "numone", scope: !6775, file: !3, line: 5600, type: !48)
!6816 = !DILocation(line: 5600, column: 14, scope: !6775)
!6817 = !DILocalVariable(name: "cmp", scope: !6775, file: !3, line: 5601, type: !48)
!6818 = !DILocation(line: 5601, column: 14, scope: !6775)
!6819 = !DILocalVariable(name: "aset", scope: !6775, file: !3, line: 5602, type: !270)
!6820 = !DILocation(line: 5602, column: 14, scope: !6775)
!6821 = !DILocalVariable(name: "bset", scope: !6775, file: !3, line: 5602, type: !270)
!6822 = !DILocation(line: 5602, column: 20, scope: !6775)
!6823 = !DILocation(line: 5609, column: 3, scope: !6775)
!6824 = !DILocation(line: 5610, column: 9, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6826, file: !3, line: 5610, column: 9)
!6826 = distinct !DILexicalBlock(scope: !6775, file: !3, line: 5609, column: 6)
!6827 = !DILocation(line: 5610, column: 9, scope: !6826)
!6828 = !DILocation(line: 5611, column: 11, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6830, file: !3, line: 5611, column: 11)
!6830 = distinct !DILexicalBlock(scope: !6825, file: !3, line: 5610, column: 21)
!6831 = !DILocation(line: 5611, column: 11, scope: !6830)
!6832 = !DILocation(line: 5612, column: 6, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6834, file: !3, line: 5612, column: 6)
!6834 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 5611, column: 37)
!6835 = !DILocation(line: 5612, column: 6, scope: !6834)
!6836 = !DILocation(line: 5613, column: 5, scope: !6833)
!6837 = !DILocation(line: 5613, column: 11, scope: !6833)
!6838 = !DILocation(line: 5613, column: 4, scope: !6833)
!6839 = !DILocation(line: 5614, column: 22, scope: !6833)
!6840 = !DILocation(line: 5614, column: 27, scope: !6833)
!6841 = !DILocation(line: 5614, column: 8, scope: !6833)
!6842 = !DILocation(line: 5615, column: 2, scope: !6834)
!6843 = !DILocation(line: 5616, column: 21, scope: !6829)
!6844 = !DILocation(line: 5616, column: 26, scope: !6829)
!6845 = !DILocation(line: 5616, column: 37, scope: !6829)
!6846 = !DILocation(line: 5616, column: 42, scope: !6829)
!6847 = !DILocation(line: 5616, column: 13, scope: !6829)
!6848 = !DILocation(line: 5617, column: 7, scope: !6830)
!6849 = !DILocation(line: 5619, column: 9, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6826, file: !3, line: 5619, column: 9)
!6851 = !DILocation(line: 5619, column: 9, scope: !6826)
!6852 = !DILocation(line: 5620, column: 21, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6850, file: !3, line: 5619, column: 22)
!6854 = !DILocation(line: 5620, column: 7, scope: !6853)
!6855 = !DILocation(line: 5621, column: 7, scope: !6853)
!6856 = !DILocation(line: 5621, column: 12, scope: !6853)
!6857 = !DILocation(line: 5621, column: 16, scope: !6853)
!6858 = !DILocation(line: 5622, column: 7, scope: !6853)
!6859 = !DILocation(line: 5625, column: 9, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6826, file: !3, line: 5625, column: 9)
!6861 = !DILocation(line: 5625, column: 9, scope: !6826)
!6862 = !DILocation(line: 5626, column: 8, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6860, file: !3, line: 5625, column: 35)
!6864 = !DILocation(line: 5626, column: 14, scope: !6863)
!6865 = !DILocation(line: 5627, column: 7, scope: !6863)
!6866 = !DILocation(line: 5632, column: 9, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6826, file: !3, line: 5632, column: 9)
!6868 = !DILocation(line: 5632, column: 14, scope: !6867)
!6869 = !DILocation(line: 5632, column: 22, scope: !6867)
!6870 = !DILocation(line: 5632, column: 26, scope: !6867)
!6871 = !DILocation(line: 5632, column: 29, scope: !6867)
!6872 = !DILocation(line: 5632, column: 34, scope: !6867)
!6873 = !DILocation(line: 5632, column: 40, scope: !6867)
!6874 = !DILocation(line: 5632, column: 9, scope: !6826)
!6875 = !DILocation(line: 5636, column: 11, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6877, file: !3, line: 5636, column: 11)
!6877 = distinct !DILexicalBlock(scope: !6867, file: !3, line: 5632, column: 46)
!6878 = !DILocation(line: 5636, column: 16, scope: !6876)
!6879 = !DILocation(line: 5636, column: 22, scope: !6876)
!6880 = !DILocation(line: 5636, column: 27, scope: !6876)
!6881 = !DILocation(line: 5636, column: 30, scope: !6876)
!6882 = !DILocation(line: 5636, column: 35, scope: !6876)
!6883 = !DILocation(line: 5636, column: 41, scope: !6876)
!6884 = !DILocation(line: 5636, column: 11, scope: !6877)
!6885 = !DILocation(line: 5638, column: 8, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6876, file: !3, line: 5636, column: 46)
!6887 = !DILocation(line: 5638, column: 7, scope: !6886)
!6888 = !DILocation(line: 5638, column: 18, scope: !6886)
!6889 = !DILocation(line: 5638, column: 23, scope: !6886)
!6890 = !DILocation(line: 5640, column: 22, scope: !6886)
!6891 = !DILocation(line: 5640, column: 2, scope: !6886)
!6892 = !DILocation(line: 5641, column: 3, scope: !6886)
!6893 = !DILocation(line: 5641, column: 9, scope: !6886)
!6894 = !DILocation(line: 5642, column: 2, scope: !6886)
!6895 = !DILocation(line: 5643, column: 11, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6877, file: !3, line: 5643, column: 11)
!6897 = !DILocation(line: 5643, column: 16, scope: !6896)
!6898 = !DILocation(line: 5643, column: 22, scope: !6896)
!6899 = !DILocation(line: 5643, column: 26, scope: !6896)
!6900 = !DILocation(line: 5643, column: 29, scope: !6896)
!6901 = !DILocation(line: 5643, column: 34, scope: !6896)
!6902 = !DILocation(line: 5643, column: 40, scope: !6896)
!6903 = !DILocation(line: 5643, column: 11, scope: !6877)
!6904 = !DILocation(line: 5644, column: 8, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6896, file: !3, line: 5643, column: 45)
!6906 = !DILocation(line: 5644, column: 7, scope: !6905)
!6907 = !DILocation(line: 5644, column: 18, scope: !6905)
!6908 = !DILocation(line: 5644, column: 23, scope: !6905)
!6909 = !DILocation(line: 5646, column: 22, scope: !6905)
!6910 = !DILocation(line: 5646, column: 2, scope: !6905)
!6911 = !DILocation(line: 5647, column: 3, scope: !6905)
!6912 = !DILocation(line: 5647, column: 9, scope: !6905)
!6913 = !DILocation(line: 5648, column: 2, scope: !6905)
!6914 = !DILocation(line: 5649, column: 7, scope: !6877)
!6915 = !DILocation(line: 5656, column: 7, scope: !6826)
!6916 = !DILocation(line: 5656, column: 46, scope: !6826)
!6917 = !DILocation(line: 5656, column: 6, scope: !6826)
!6918 = !DILocation(line: 5664, column: 34, scope: !6826)
!6919 = !DILocation(line: 5664, column: 49, scope: !6826)
!6920 = !DILocation(line: 5664, column: 33, scope: !6826)
!6921 = !DILocation(line: 5664, column: 52, scope: !6826)
!6922 = !DILocation(line: 5664, column: 32, scope: !6826)
!6923 = !DILocation(line: 5664, column: 15, scope: !6826)
!6924 = !DILocation(line: 5664, column: 14, scope: !6826)
!6925 = !DILocation(line: 5665, column: 9, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6826, file: !3, line: 5665, column: 9)
!6927 = !DILocation(line: 5665, column: 18, scope: !6926)
!6928 = !DILocation(line: 5665, column: 9, scope: !6826)
!6929 = !DILocation(line: 5666, column: 37, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6926, file: !3, line: 5665, column: 33)
!6931 = !DILocation(line: 5666, column: 30, scope: !6930)
!6932 = !DILocation(line: 5666, column: 17, scope: !6930)
!6933 = !DILocation(line: 5666, column: 16, scope: !6930)
!6934 = !DILocation(line: 5667, column: 11, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 5667, column: 11)
!6936 = !DILocation(line: 5667, column: 20, scope: !6935)
!6937 = !DILocation(line: 5667, column: 11, scope: !6930)
!6938 = !DILocation(line: 5668, column: 3, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6935, file: !3, line: 5667, column: 28)
!6940 = !DILocation(line: 5668, column: 9, scope: !6939)
!6941 = !DILocation(line: 5669, column: 2, scope: !6939)
!6942 = !DILocation(line: 5670, column: 9, scope: !6930)
!6943 = !DILocation(line: 5670, column: 8, scope: !6930)
!6944 = !DILocation(line: 5671, column: 7, scope: !6930)
!6945 = !DILocation(line: 5672, column: 8, scope: !6826)
!6946 = !DILocation(line: 5672, column: 10, scope: !6826)
!6947 = !DILocation(line: 5672, column: 15, scope: !6826)
!6948 = !DILocation(line: 5672, column: 9, scope: !6826)
!6949 = !DILocation(line: 5672, column: 7, scope: !6826)
!6950 = !DILocation(line: 5673, column: 34, scope: !6826)
!6951 = !DILocation(line: 5673, column: 50, scope: !6826)
!6952 = !DILocation(line: 5673, column: 33, scope: !6826)
!6953 = !DILocation(line: 5673, column: 53, scope: !6826)
!6954 = !DILocation(line: 5673, column: 32, scope: !6826)
!6955 = !DILocation(line: 5673, column: 15, scope: !6826)
!6956 = !DILocation(line: 5673, column: 14, scope: !6826)
!6957 = !DILocation(line: 5674, column: 9, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6826, file: !3, line: 5674, column: 9)
!6959 = !DILocation(line: 5674, column: 18, scope: !6958)
!6960 = !DILocation(line: 5674, column: 9, scope: !6826)
!6961 = !DILocation(line: 5675, column: 37, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6958, file: !3, line: 5674, column: 33)
!6963 = !DILocation(line: 5675, column: 30, scope: !6962)
!6964 = !DILocation(line: 5675, column: 17, scope: !6962)
!6965 = !DILocation(line: 5675, column: 16, scope: !6962)
!6966 = !DILocation(line: 5676, column: 11, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6962, file: !3, line: 5676, column: 11)
!6968 = !DILocation(line: 5676, column: 20, scope: !6967)
!6969 = !DILocation(line: 5676, column: 11, scope: !6962)
!6970 = !DILocation(line: 5677, column: 3, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6967, file: !3, line: 5676, column: 28)
!6972 = !DILocation(line: 5677, column: 9, scope: !6971)
!6973 = !DILocation(line: 5678, column: 2, scope: !6971)
!6974 = !DILocation(line: 5679, column: 9, scope: !6962)
!6975 = !DILocation(line: 5679, column: 8, scope: !6962)
!6976 = !DILocation(line: 5680, column: 7, scope: !6962)
!6977 = !DILocation(line: 5691, column: 5, scope: !6826)
!6978 = !DILocation(line: 5692, column: 7, scope: !6826)
!6979 = !DILocation(line: 5692, column: 12, scope: !6826)
!6980 = !DILocation(line: 5692, column: 21, scope: !6826)
!6981 = !DILocation(line: 5692, column: 26, scope: !6826)
!6982 = !DILocation(line: 5692, column: 20, scope: !6826)
!6983 = !DILocation(line: 5692, column: 6, scope: !6826)
!6984 = !DILocation(line: 5693, column: 24, scope: !6826)
!6985 = !DILocation(line: 5693, column: 27, scope: !6826)
!6986 = !DILocation(line: 5693, column: 5, scope: !6826)
!6987 = !DILocation(line: 5694, column: 24, scope: !6826)
!6988 = !DILocation(line: 5694, column: 5, scope: !6826)
!6989 = !DILocation(line: 5695, column: 5, scope: !6826)
!6990 = !DILocation(line: 5695, column: 8, scope: !6826)
!6991 = !DILocation(line: 5695, column: 16, scope: !6826)
!6992 = !DILocation(line: 5696, column: 19, scope: !6826)
!6993 = !DILocation(line: 5696, column: 22, scope: !6826)
!6994 = !DILocation(line: 5696, column: 25, scope: !6826)
!6995 = !DILocation(line: 5696, column: 5, scope: !6826)
!6996 = !DILocation(line: 5699, column: 12, scope: !6826)
!6997 = !DILocation(line: 5700, column: 10, scope: !6826)
!6998 = !DILocation(line: 5700, column: 16, scope: !6826)
!6999 = !DILocation(line: 5700, column: 25, scope: !6826)
!7000 = !DILocation(line: 5700, column: 30, scope: !6826)
!7001 = !DILocation(line: 5701, column: 16, scope: !6826)
!7002 = !DILocation(line: 5701, column: 19, scope: !6826)
!7003 = !DILocation(line: 5701, column: 5, scope: !6826)
!7004 = !DILocation(line: 5702, column: 5, scope: !6826)
!7005 = !DILocation(line: 5702, column: 8, scope: !6826)
!7006 = !DILocation(line: 5702, column: 16, scope: !6826)
!7007 = !DILocation(line: 5703, column: 17, scope: !6826)
!7008 = !DILocation(line: 5703, column: 7, scope: !6826)
!7009 = !DILocation(line: 5703, column: 6, scope: !6826)
!7010 = !DILocation(line: 5704, column: 9, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !6826, file: !3, line: 5704, column: 9)
!7012 = !DILocation(line: 5704, column: 10, scope: !7011)
!7013 = !DILocation(line: 5704, column: 9, scope: !6826)
!7014 = !DILocation(line: 5704, column: 17, scope: !7011)
!7015 = !DILocation(line: 5704, column: 16, scope: !7011)
!7016 = !DILocation(line: 5704, column: 15, scope: !7011)
!7017 = !DILocation(line: 5705, column: 12, scope: !6826)
!7018 = !DILocation(line: 5705, column: 13, scope: !6826)
!7019 = !DILocation(line: 5705, column: 7, scope: !6826)
!7020 = !DILocation(line: 5705, column: 6, scope: !6826)
!7021 = !DILocation(line: 5706, column: 24, scope: !6826)
!7022 = !DILocation(line: 5706, column: 27, scope: !6826)
!7023 = !DILocation(line: 5706, column: 28, scope: !6826)
!7024 = !DILocation(line: 5706, column: 5, scope: !6826)
!7025 = !DILocation(line: 5707, column: 19, scope: !6826)
!7026 = !DILocation(line: 5707, column: 20, scope: !6826)
!7027 = !DILocation(line: 5707, column: 17, scope: !6826)
!7028 = !DILocation(line: 5707, column: 23, scope: !6826)
!7029 = !DILocation(line: 5707, column: 5, scope: !6826)
!7030 = !DILocation(line: 5707, column: 8, scope: !6826)
!7031 = !DILocation(line: 5707, column: 16, scope: !6826)
!7032 = !DILocation(line: 5708, column: 5, scope: !6826)
!7033 = !DILocation(line: 5708, column: 8, scope: !6826)
!7034 = !DILocation(line: 5708, column: 12, scope: !6826)
!7035 = !DILocation(line: 5709, column: 10, scope: !6826)
!7036 = !DILocation(line: 5709, column: 16, scope: !6826)
!7037 = !DILocation(line: 5709, column: 26, scope: !6826)
!7038 = !DILocation(line: 5709, column: 31, scope: !6826)
!7039 = !DILocation(line: 5710, column: 14, scope: !6826)
!7040 = !DILocation(line: 5710, column: 17, scope: !6826)
!7041 = !DILocation(line: 5710, column: 20, scope: !6826)
!7042 = !DILocation(line: 5710, column: 5, scope: !6826)
!7043 = !DILocation(line: 5715, column: 5, scope: !6826)
!7044 = !DILocation(line: 5715, column: 37, scope: !6826)
!7045 = !DILocation(line: 5715, column: 29, scope: !6826)
!7046 = !DILocation(line: 5715, column: 40, scope: !6826)
!7047 = !DILocation(line: 5719, column: 15, scope: !6826)
!7048 = !DILocation(line: 5719, column: 20, scope: !6826)
!7049 = !DILocation(line: 5719, column: 10, scope: !6826)
!7050 = !DILocation(line: 5719, column: 14, scope: !6826)
!7051 = !DILocation(line: 5720, column: 15, scope: !6826)
!7052 = !DILocation(line: 5720, column: 20, scope: !6826)
!7053 = !DILocation(line: 5720, column: 10, scope: !6826)
!7054 = !DILocation(line: 5720, column: 14, scope: !6826)
!7055 = !DILocation(line: 5721, column: 10, scope: !6826)
!7056 = !DILocation(line: 5721, column: 15, scope: !6826)
!7057 = !DILocation(line: 5723, column: 10, scope: !6826)
!7058 = !DILocation(line: 5724, column: 10, scope: !6826)
!7059 = !DILocation(line: 5724, column: 14, scope: !6826)
!7060 = !DILocation(line: 5725, column: 10, scope: !6826)
!7061 = !DILocation(line: 5725, column: 14, scope: !6826)
!7062 = !DILocation(line: 5729, column: 7, scope: !6826)
!7063 = !DILocation(line: 5732, column: 17, scope: !6826)
!7064 = !DILocation(line: 5732, column: 10, scope: !6826)
!7065 = !DILocation(line: 5732, column: 16, scope: !6826)
!7066 = !DILocation(line: 5733, column: 17, scope: !6826)
!7067 = !DILocation(line: 5733, column: 20, scope: !6826)
!7068 = !DILocation(line: 5733, column: 25, scope: !6826)
!7069 = !DILocation(line: 5733, column: 19, scope: !6826)
!7070 = !DILocation(line: 5733, column: 10, scope: !6826)
!7071 = !DILocation(line: 5733, column: 16, scope: !6826)
!7072 = !DILocation(line: 5734, column: 5, scope: !6826)
!7073 = !DILocation(line: 5744, column: 7, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7075, file: !3, line: 5734, column: 14)
!7075 = distinct !DILexicalBlock(scope: !7076, file: !3, line: 5734, column: 5)
!7076 = distinct !DILexicalBlock(scope: !6826, file: !3, line: 5734, column: 5)
!7077 = !DILocation(line: 5744, column: 10, scope: !7074)
!7078 = !DILocation(line: 5744, column: 14, scope: !7074)
!7079 = !DILocation(line: 5745, column: 16, scope: !7074)
!7080 = !DILocation(line: 5745, column: 19, scope: !7074)
!7081 = !DILocation(line: 5745, column: 7, scope: !7074)
!7082 = !DILocation(line: 5746, column: 7, scope: !7074)
!7083 = !DILocation(line: 5746, column: 10, scope: !7074)
!7084 = !DILocation(line: 5746, column: 14, scope: !7074)
!7085 = !DILocation(line: 5748, column: 21, scope: !7074)
!7086 = !DILocation(line: 5748, column: 24, scope: !7074)
!7087 = !DILocation(line: 5748, column: 27, scope: !7074)
!7088 = !DILocation(line: 5748, column: 7, scope: !7074)
!7089 = !DILocation(line: 5749, column: 16, scope: !7074)
!7090 = !DILocation(line: 5749, column: 19, scope: !7074)
!7091 = !DILocation(line: 5749, column: 7, scope: !7074)
!7092 = !DILocation(line: 5759, column: 11, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7074, file: !3, line: 5759, column: 11)
!7094 = !DILocation(line: 5759, column: 30, scope: !7093)
!7095 = !DILocation(line: 5760, column: 5, scope: !7093)
!7096 = !DILocation(line: 5760, column: 8, scope: !7093)
!7097 = !DILocation(line: 5760, column: 15, scope: !7093)
!7098 = !DILocation(line: 5760, column: 18, scope: !7093)
!7099 = !DILocation(line: 5760, column: 14, scope: !7093)
!7100 = !DILocation(line: 5760, column: 30, scope: !7093)
!7101 = !DILocation(line: 5760, column: 33, scope: !7093)
!7102 = !DILocation(line: 5760, column: 40, scope: !7093)
!7103 = !DILocation(line: 5760, column: 43, scope: !7093)
!7104 = !DILocation(line: 5760, column: 39, scope: !7093)
!7105 = !DILocation(line: 5760, column: 52, scope: !7093)
!7106 = !DILocation(line: 5760, column: 57, scope: !7093)
!7107 = !DILocation(line: 5760, column: 51, scope: !7093)
!7108 = !DILocation(line: 5760, column: 63, scope: !7093)
!7109 = !DILocation(line: 5760, column: 27, scope: !7093)
!7110 = !DILocation(line: 5759, column: 11, scope: !7074)
!7111 = !DILocation(line: 5761, column: 6, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7113, file: !3, line: 5761, column: 6)
!7113 = distinct !DILexicalBlock(scope: !7093, file: !3, line: 5760, column: 68)
!7114 = !DILocation(line: 5761, column: 9, scope: !7112)
!7115 = !DILocation(line: 5761, column: 17, scope: !7112)
!7116 = !DILocation(line: 5761, column: 15, scope: !7112)
!7117 = !DILocation(line: 5761, column: 6, scope: !7113)
!7118 = !DILocation(line: 5761, column: 20, scope: !7112)
!7119 = !DILocation(line: 5762, column: 6, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7113, file: !3, line: 5762, column: 6)
!7121 = !DILocation(line: 5762, column: 6, scope: !7113)
!7122 = !DILocation(line: 5763, column: 23, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7120, file: !3, line: 5762, column: 26)
!7124 = !DILocation(line: 5763, column: 4, scope: !7123)
!7125 = !DILocation(line: 5764, column: 12, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7123, file: !3, line: 5764, column: 8)
!7127 = !DILocation(line: 5764, column: 8, scope: !7126)
!7128 = !DILocation(line: 5764, column: 18, scope: !7126)
!7129 = !DILocation(line: 5764, column: 8, scope: !7123)
!7130 = !DILocation(line: 5764, column: 23, scope: !7126)
!7131 = !DILocation(line: 5764, column: 26, scope: !7126)
!7132 = !DILocation(line: 5764, column: 34, scope: !7126)
!7133 = !DILocation(line: 5765, column: 11, scope: !7126)
!7134 = !DILocation(line: 5765, column: 17, scope: !7126)
!7135 = !DILocation(line: 5766, column: 4, scope: !7123)
!7136 = !DILocation(line: 5769, column: 6, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7113, file: !3, line: 5769, column: 6)
!7138 = !DILocation(line: 5769, column: 6, scope: !7113)
!7139 = !DILocation(line: 5769, column: 38, scope: !7137)
!7140 = !DILocation(line: 5769, column: 41, scope: !7137)
!7141 = !DILocation(line: 5769, column: 50, scope: !7137)
!7142 = !DILocation(line: 5769, column: 49, scope: !7137)
!7143 = !DILocation(line: 5769, column: 26, scope: !7137)
!7144 = !DILocation(line: 5769, column: 29, scope: !7137)
!7145 = !DILocation(line: 5769, column: 37, scope: !7137)
!7146 = !DILocation(line: 5770, column: 2, scope: !7113)
!7147 = !DILocation(line: 5773, column: 16, scope: !7074)
!7148 = !DILocation(line: 5773, column: 19, scope: !7074)
!7149 = !DILocation(line: 5773, column: 22, scope: !7074)
!7150 = !DILocation(line: 5773, column: 7, scope: !7074)
!7151 = !DILocation(line: 5774, column: 11, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7074, file: !3, line: 5774, column: 11)
!7153 = !DILocation(line: 5774, column: 15, scope: !7152)
!7154 = !DILocation(line: 5774, column: 13, scope: !7152)
!7155 = !DILocation(line: 5774, column: 11, scope: !7074)
!7156 = !DILocation(line: 5774, column: 18, scope: !7152)
!7157 = distinct !{!7157, !7158, !7159}
!7158 = !DILocation(line: 5734, column: 5, scope: !7076)
!7159 = !DILocation(line: 5780, column: 7, scope: !7076)
!7160 = !DILocation(line: 5776, column: 10, scope: !7074)
!7161 = !DILocation(line: 5776, column: 12, scope: !7074)
!7162 = !DILocation(line: 5776, column: 9, scope: !7074)
!7163 = !DILocation(line: 5777, column: 11, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7074, file: !3, line: 5777, column: 11)
!7165 = !DILocation(line: 5777, column: 14, scope: !7164)
!7166 = !DILocation(line: 5777, column: 13, scope: !7164)
!7167 = !DILocation(line: 5777, column: 11, scope: !7074)
!7168 = !DILocation(line: 5777, column: 20, scope: !7164)
!7169 = !DILocation(line: 5777, column: 19, scope: !7164)
!7170 = !DILocation(line: 5777, column: 17, scope: !7164)
!7171 = !DILocation(line: 5778, column: 19, scope: !7074)
!7172 = !DILocation(line: 5778, column: 12, scope: !7074)
!7173 = !DILocation(line: 5778, column: 18, scope: !7074)
!7174 = !DILocation(line: 5779, column: 19, scope: !7074)
!7175 = !DILocation(line: 5779, column: 22, scope: !7074)
!7176 = !DILocation(line: 5779, column: 27, scope: !7074)
!7177 = !DILocation(line: 5779, column: 21, scope: !7074)
!7178 = !DILocation(line: 5779, column: 12, scope: !7074)
!7179 = !DILocation(line: 5779, column: 18, scope: !7074)
!7180 = !DILocation(line: 5734, column: 5, scope: !7075)
!7181 = !DILocation(line: 5790, column: 12, scope: !6826)
!7182 = !DILocation(line: 5791, column: 9, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !6826, file: !3, line: 5791, column: 9)
!7184 = !DILocation(line: 5791, column: 9, scope: !6826)
!7185 = !DILocation(line: 5791, column: 27, scope: !7183)
!7186 = !DILocation(line: 5791, column: 20, scope: !7183)
!7187 = !DILocation(line: 5792, column: 17, scope: !6826)
!7188 = !DILocation(line: 5792, column: 22, scope: !6826)
!7189 = !DILocation(line: 5792, column: 10, scope: !6826)
!7190 = !DILocation(line: 5792, column: 16, scope: !6826)
!7191 = !DILocation(line: 5793, column: 16, scope: !6826)
!7192 = !DILocation(line: 5793, column: 21, scope: !6826)
!7193 = !DILocation(line: 5793, column: 41, scope: !6826)
!7194 = !DILocation(line: 5793, column: 5, scope: !6826)
!7195 = !DILocation(line: 5794, column: 5, scope: !6826)
!7196 = !DILocation(line: 5795, column: 5, scope: !6826)
!7197 = !DILocation(line: 5797, column: 7, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !6775, file: !3, line: 5797, column: 7)
!7199 = !DILocation(line: 5797, column: 16, scope: !7198)
!7200 = !DILocation(line: 5797, column: 7, scope: !6775)
!7201 = !DILocation(line: 5797, column: 29, scope: !7198)
!7202 = !DILocation(line: 5797, column: 24, scope: !7198)
!7203 = !DILocation(line: 5798, column: 7, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !6775, file: !3, line: 5798, column: 7)
!7205 = !DILocation(line: 5798, column: 16, scope: !7204)
!7206 = !DILocation(line: 5798, column: 7, scope: !6775)
!7207 = !DILocation(line: 5798, column: 29, scope: !7204)
!7208 = !DILocation(line: 5798, column: 24, scope: !7204)
!7209 = !DILocation(line: 5800, column: 10, scope: !6775)
!7210 = !DILocation(line: 5800, column: 3, scope: !6775)
!7211 = distinct !DISubprogram(name: "decNumberLogB", scope: !3, file: !3, line: 1333, type: !2287, scopeLine: 1334, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!7212 = !DILocalVariable(name: "res", arg: 1, scope: !7211, file: !3, line: 1333, type: !47)
!7213 = !DILocation(line: 1333, column: 38, scope: !7211)
!7214 = !DILocalVariable(name: "rhs", arg: 2, scope: !7211, file: !3, line: 1333, type: !267)
!7215 = !DILocation(line: 1333, column: 60, scope: !7211)
!7216 = !DILocalVariable(name: "set", arg: 3, scope: !7211, file: !3, line: 1334, type: !269)
!7217 = !DILocation(line: 1334, column: 18, scope: !7211)
!7218 = !DILocalVariable(name: "status", scope: !7211, file: !3, line: 1335, type: !36)
!7219 = !DILocation(line: 1335, column: 8, scope: !7211)
!7220 = !DILocation(line: 1342, column: 7, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 1342, column: 7)
!7222 = !DILocation(line: 1342, column: 7, scope: !7211)
!7223 = !DILocation(line: 1342, column: 36, scope: !7221)
!7224 = !DILocation(line: 1342, column: 41, scope: !7221)
!7225 = !DILocation(line: 1342, column: 52, scope: !7221)
!7226 = !DILocation(line: 1342, column: 28, scope: !7221)
!7227 = !DILocation(line: 1343, column: 13, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 1343, column: 13)
!7229 = !DILocation(line: 1343, column: 13, scope: !7221)
!7230 = !DILocation(line: 1343, column: 56, scope: !7228)
!7231 = !DILocation(line: 1343, column: 61, scope: !7228)
!7232 = !DILocation(line: 1343, column: 39, scope: !7228)
!7233 = !DILocation(line: 1344, column: 13, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7228, file: !3, line: 1344, column: 13)
!7235 = !DILocation(line: 1344, column: 13, scope: !7228)
!7236 = !DILocation(line: 1345, column: 19, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7234, file: !3, line: 1344, column: 35)
!7238 = !DILocation(line: 1345, column: 5, scope: !7237)
!7239 = !DILocation(line: 1346, column: 5, scope: !7237)
!7240 = !DILocation(line: 1346, column: 10, scope: !7237)
!7241 = !DILocation(line: 1346, column: 14, scope: !7237)
!7242 = !DILocation(line: 1347, column: 11, scope: !7237)
!7243 = !DILocation(line: 1348, column: 5, scope: !7237)
!7244 = !DILocalVariable(name: "ae", scope: !7245, file: !3, line: 1350, type: !31)
!7245 = distinct !DILexicalBlock(scope: !7234, file: !3, line: 1349, column: 9)
!7246 = !DILocation(line: 1350, column: 9, scope: !7245)
!7247 = !DILocation(line: 1350, column: 12, scope: !7245)
!7248 = !DILocation(line: 1350, column: 17, scope: !7245)
!7249 = !DILocation(line: 1350, column: 26, scope: !7245)
!7250 = !DILocation(line: 1350, column: 31, scope: !7245)
!7251 = !DILocation(line: 1350, column: 25, scope: !7245)
!7252 = !DILocation(line: 1350, column: 37, scope: !7245)
!7253 = !DILocation(line: 1351, column: 24, scope: !7245)
!7254 = !DILocation(line: 1351, column: 29, scope: !7245)
!7255 = !DILocation(line: 1351, column: 5, scope: !7245)
!7256 = !DILocation(line: 1354, column: 7, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 1354, column: 7)
!7258 = !DILocation(line: 1354, column: 13, scope: !7257)
!7259 = !DILocation(line: 1354, column: 7, scope: !7211)
!7260 = !DILocation(line: 1354, column: 28, scope: !7257)
!7261 = !DILocation(line: 1354, column: 33, scope: !7257)
!7262 = !DILocation(line: 1354, column: 41, scope: !7257)
!7263 = !DILocation(line: 1354, column: 18, scope: !7257)
!7264 = !DILocation(line: 1355, column: 10, scope: !7211)
!7265 = !DILocation(line: 1355, column: 3, scope: !7211)
!7266 = distinct !DISubprogram(name: "decNaNs", scope: !3, file: !3, line: 7684, type: !5894, scopeLine: 7686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!7267 = !DILocalVariable(name: "res", arg: 1, scope: !7266, file: !3, line: 7684, type: !47)
!7268 = !DILocation(line: 7684, column: 39, scope: !7266)
!7269 = !DILocalVariable(name: "lhs", arg: 2, scope: !7266, file: !3, line: 7684, type: !267)
!7270 = !DILocation(line: 7684, column: 61, scope: !7266)
!7271 = !DILocalVariable(name: "rhs", arg: 3, scope: !7266, file: !3, line: 7685, type: !267)
!7272 = !DILocation(line: 7685, column: 24, scope: !7266)
!7273 = !DILocalVariable(name: "set", arg: 4, scope: !7266, file: !3, line: 7685, type: !269)
!7274 = !DILocation(line: 7685, column: 41, scope: !7266)
!7275 = !DILocalVariable(name: "status", arg: 5, scope: !7266, file: !3, line: 7686, type: !59)
!7276 = !DILocation(line: 7686, column: 13, scope: !7266)
!7277 = !DILocation(line: 7689, column: 7, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 7689, column: 7)
!7279 = !DILocation(line: 7689, column: 12, scope: !7278)
!7280 = !DILocation(line: 7689, column: 17, scope: !7278)
!7281 = !DILocation(line: 7689, column: 7, scope: !7266)
!7282 = !DILocation(line: 7690, column: 6, scope: !7278)
!7283 = !DILocation(line: 7690, column: 12, scope: !7278)
!7284 = !DILocation(line: 7690, column: 5, scope: !7278)
!7285 = !DILocation(line: 7691, column: 13, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7278, file: !3, line: 7691, column: 13)
!7287 = !DILocation(line: 7691, column: 16, scope: !7286)
!7288 = !DILocation(line: 7691, column: 13, scope: !7278)
!7289 = !DILocation(line: 7692, column: 13, scope: !7290)
!7290 = distinct !DILexicalBlock(scope: !7286, file: !3, line: 7692, column: 13)
!7291 = !DILocation(line: 7692, column: 18, scope: !7290)
!7292 = !DILocation(line: 7692, column: 23, scope: !7290)
!7293 = !DILocation(line: 7692, column: 13, scope: !7286)
!7294 = !DILocation(line: 7693, column: 9, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7290, file: !3, line: 7692, column: 34)
!7296 = !DILocation(line: 7693, column: 8, scope: !7295)
!7297 = !DILocation(line: 7694, column: 6, scope: !7295)
!7298 = !DILocation(line: 7694, column: 12, scope: !7295)
!7299 = !DILocation(line: 7695, column: 5, scope: !7295)
!7300 = !DILocation(line: 7696, column: 13, scope: !7301)
!7301 = distinct !DILexicalBlock(scope: !7290, file: !3, line: 7696, column: 13)
!7302 = !DILocation(line: 7696, column: 18, scope: !7301)
!7303 = !DILocation(line: 7696, column: 23, scope: !7301)
!7304 = !DILocation(line: 7696, column: 13, scope: !7290)
!7305 = !DILocation(line: 7697, column: 13, scope: !7301)
!7306 = !DILocation(line: 7697, column: 12, scope: !7301)
!7307 = !DILocation(line: 7700, column: 7, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 7700, column: 7)
!7309 = !DILocation(line: 7700, column: 12, scope: !7308)
!7310 = !DILocation(line: 7700, column: 20, scope: !7308)
!7311 = !DILocation(line: 7700, column: 25, scope: !7308)
!7312 = !DILocation(line: 7700, column: 18, scope: !7308)
!7313 = !DILocation(line: 7700, column: 7, scope: !7266)
!7314 = !DILocation(line: 7700, column: 47, scope: !7308)
!7315 = !DILocation(line: 7700, column: 52, scope: !7308)
!7316 = !DILocation(line: 7700, column: 33, scope: !7308)
!7317 = !DILocalVariable(name: "ul", scope: !7318, file: !3, line: 7702, type: !301)
!7318 = distinct !DILexicalBlock(scope: !7308, file: !3, line: 7701, column: 9)
!7319 = !DILocation(line: 7702, column: 17, scope: !7318)
!7320 = !DILocalVariable(name: "ur", scope: !7318, file: !3, line: 7703, type: !43)
!7321 = !DILocation(line: 7703, column: 11, scope: !7318)
!7322 = !DILocalVariable(name: "uresp1", scope: !7318, file: !3, line: 7703, type: !43)
!7323 = !DILocation(line: 7703, column: 16, scope: !7318)
!7324 = !DILocation(line: 7705, column: 15, scope: !7318)
!7325 = !DILocation(line: 7705, column: 20, scope: !7318)
!7326 = !DILocation(line: 7705, column: 5, scope: !7318)
!7327 = !DILocation(line: 7705, column: 10, scope: !7318)
!7328 = !DILocation(line: 7705, column: 14, scope: !7318)
!7329 = !DILocation(line: 7706, column: 12, scope: !7318)
!7330 = !DILocation(line: 7706, column: 17, scope: !7318)
!7331 = !DILocation(line: 7706, column: 21, scope: !7318)
!7332 = !DILocation(line: 7706, column: 20, scope: !7318)
!7333 = !DILocation(line: 7706, column: 11, scope: !7318)
!7334 = !DILocation(line: 7707, column: 13, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7318, file: !3, line: 7707, column: 5)
!7336 = !DILocation(line: 7707, column: 18, scope: !7335)
!7337 = !DILocation(line: 7707, column: 12, scope: !7335)
!7338 = !DILocation(line: 7707, column: 26, scope: !7335)
!7339 = !DILocation(line: 7707, column: 31, scope: !7335)
!7340 = !DILocation(line: 7707, column: 25, scope: !7335)
!7341 = !DILocation(line: 7707, column: 10, scope: !7335)
!7342 = !DILocation(line: 7707, column: 36, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7335, file: !3, line: 7707, column: 5)
!7344 = !DILocation(line: 7707, column: 39, scope: !7343)
!7345 = !DILocation(line: 7707, column: 38, scope: !7343)
!7346 = !DILocation(line: 7707, column: 5, scope: !7335)
!7347 = !DILocation(line: 7707, column: 64, scope: !7343)
!7348 = !DILocation(line: 7707, column: 63, scope: !7343)
!7349 = !DILocation(line: 7707, column: 60, scope: !7343)
!7350 = !DILocation(line: 7707, column: 62, scope: !7343)
!7351 = !DILocation(line: 7707, column: 59, scope: !7343)
!7352 = !DILocation(line: 7707, column: 49, scope: !7343)
!7353 = !DILocation(line: 7707, column: 55, scope: !7343)
!7354 = !DILocation(line: 7707, column: 5, scope: !7343)
!7355 = distinct !{!7355, !7346, !7356}
!7356 = !DILocation(line: 7707, column: 64, scope: !7335)
!7357 = !DILocation(line: 7708, column: 17, scope: !7318)
!7358 = !DILocation(line: 7708, column: 33, scope: !7318)
!7359 = !DILocation(line: 7708, column: 5, scope: !7318)
!7360 = !DILocation(line: 7708, column: 10, scope: !7318)
!7361 = !DILocation(line: 7708, column: 16, scope: !7318)
!7362 = !DILocation(line: 7710, column: 9, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7318, file: !3, line: 7710, column: 9)
!7364 = !DILocation(line: 7710, column: 14, scope: !7363)
!7365 = !DILocation(line: 7710, column: 21, scope: !7363)
!7366 = !DILocation(line: 7710, column: 26, scope: !7363)
!7367 = !DILocation(line: 7710, column: 20, scope: !7363)
!7368 = !DILocation(line: 7710, column: 9, scope: !7318)
!7369 = !DILocation(line: 7710, column: 43, scope: !7363)
!7370 = !DILocation(line: 7710, column: 48, scope: !7363)
!7371 = !DILocation(line: 7710, column: 53, scope: !7363)
!7372 = !DILocation(line: 7710, column: 60, scope: !7363)
!7373 = !DILocation(line: 7710, column: 65, scope: !7363)
!7374 = !DILocation(line: 7710, column: 59, scope: !7363)
!7375 = !DILocation(line: 7710, column: 34, scope: !7363)
!7376 = !DILocation(line: 7713, column: 3, scope: !7266)
!7377 = !DILocation(line: 7713, column: 8, scope: !7266)
!7378 = !DILocation(line: 7713, column: 12, scope: !7266)
!7379 = !DILocation(line: 7714, column: 3, scope: !7266)
!7380 = !DILocation(line: 7714, column: 8, scope: !7266)
!7381 = !DILocation(line: 7714, column: 12, scope: !7266)
!7382 = !DILocation(line: 7715, column: 3, scope: !7266)
!7383 = !DILocation(line: 7715, column: 8, scope: !7266)
!7384 = !DILocation(line: 7715, column: 16, scope: !7266)
!7385 = !DILocation(line: 7717, column: 10, scope: !7266)
!7386 = !DILocation(line: 7717, column: 3, scope: !7266)
!7387 = distinct !DISubprogram(name: "decNumberCopyAbs", scope: !3, file: !3, line: 3386, type: !3765, scopeLine: 3386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!7388 = !DILocalVariable(name: "res", arg: 1, scope: !7387, file: !3, line: 3386, type: !47)
!7389 = !DILocation(line: 3386, column: 41, scope: !7387)
!7390 = !DILocalVariable(name: "rhs", arg: 2, scope: !7387, file: !3, line: 3386, type: !267)
!7391 = !DILocation(line: 3386, column: 63, scope: !7387)
!7392 = !DILocation(line: 3390, column: 17, scope: !7387)
!7393 = !DILocation(line: 3390, column: 22, scope: !7387)
!7394 = !DILocation(line: 3390, column: 3, scope: !7387)
!7395 = !DILocation(line: 3391, column: 3, scope: !7387)
!7396 = !DILocation(line: 3391, column: 8, scope: !7387)
!7397 = !DILocation(line: 3391, column: 12, scope: !7387)
!7398 = !DILocation(line: 3392, column: 10, scope: !7387)
!7399 = !DILocation(line: 3392, column: 3, scope: !7387)
!7400 = distinct !DISubprogram(name: "decNumberLog10", scope: !3, file: !3, line: 1389, type: !2287, scopeLine: 1390, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!7401 = !DILocalVariable(name: "res", arg: 1, scope: !7400, file: !3, line: 1389, type: !47)
!7402 = !DILocation(line: 1389, column: 39, scope: !7400)
!7403 = !DILocalVariable(name: "rhs", arg: 2, scope: !7400, file: !3, line: 1389, type: !267)
!7404 = !DILocation(line: 1389, column: 61, scope: !7400)
!7405 = !DILocalVariable(name: "set", arg: 3, scope: !7400, file: !3, line: 1390, type: !269)
!7406 = !DILocation(line: 1390, column: 18, scope: !7400)
!7407 = !DILocalVariable(name: "status", scope: !7400, file: !3, line: 1391, type: !36)
!7408 = !DILocation(line: 1391, column: 8, scope: !7400)
!7409 = !DILocalVariable(name: "ignore", scope: !7400, file: !3, line: 1391, type: !36)
!7410 = !DILocation(line: 1391, column: 18, scope: !7400)
!7411 = !DILocalVariable(name: "needbytes", scope: !7400, file: !3, line: 1392, type: !36)
!7412 = !DILocation(line: 1392, column: 8, scope: !7400)
!7413 = !DILocalVariable(name: "p", scope: !7400, file: !3, line: 1393, type: !31)
!7414 = !DILocation(line: 1393, column: 7, scope: !7400)
!7415 = !DILocalVariable(name: "t", scope: !7400, file: !3, line: 1394, type: !31)
!7416 = !DILocation(line: 1394, column: 7, scope: !7400)
!7417 = !DILocalVariable(name: "bufa", scope: !7400, file: !3, line: 1398, type: !3638)
!7418 = !DILocation(line: 1398, column: 13, scope: !7400)
!7419 = !DILocalVariable(name: "allocbufa", scope: !7400, file: !3, line: 1399, type: !47)
!7420 = !DILocation(line: 1399, column: 14, scope: !7400)
!7421 = !DILocalVariable(name: "a", scope: !7400, file: !3, line: 1400, type: !47)
!7422 = !DILocation(line: 1400, column: 14, scope: !7400)
!7423 = !DILocation(line: 1400, column: 16, scope: !7400)
!7424 = !DILocalVariable(name: "bufb", scope: !7400, file: !3, line: 1401, type: !3638)
!7425 = !DILocation(line: 1401, column: 13, scope: !7400)
!7426 = !DILocalVariable(name: "allocbufb", scope: !7400, file: !3, line: 1402, type: !47)
!7427 = !DILocation(line: 1402, column: 14, scope: !7400)
!7428 = !DILocalVariable(name: "b", scope: !7400, file: !3, line: 1403, type: !47)
!7429 = !DILocation(line: 1403, column: 14, scope: !7400)
!7430 = !DILocation(line: 1403, column: 16, scope: !7400)
!7431 = !DILocalVariable(name: "bufw", scope: !7400, file: !3, line: 1404, type: !5288)
!7432 = !DILocation(line: 1404, column: 13, scope: !7400)
!7433 = !DILocalVariable(name: "w", scope: !7400, file: !3, line: 1405, type: !47)
!7434 = !DILocation(line: 1405, column: 14, scope: !7400)
!7435 = !DILocation(line: 1405, column: 16, scope: !7400)
!7436 = !DILocalVariable(name: "aset", scope: !7400, file: !3, line: 1410, type: !270)
!7437 = !DILocation(line: 1410, column: 14, scope: !7400)
!7438 = !DILocation(line: 1418, column: 21, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7400, file: !3, line: 1418, column: 7)
!7440 = !DILocation(line: 1418, column: 26, scope: !7439)
!7441 = !DILocation(line: 1418, column: 8, scope: !7439)
!7442 = !DILocation(line: 1418, column: 7, scope: !7400)
!7443 = !DILocation(line: 1418, column: 41, scope: !7439)
!7444 = !DILocation(line: 1434, column: 5, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7439, file: !3, line: 1418, column: 44)
!7446 = !DILocation(line: 1437, column: 11, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !7445, file: !3, line: 1437, column: 9)
!7448 = !DILocation(line: 1437, column: 16, scope: !7447)
!7449 = !DILocation(line: 1437, column: 20, scope: !7447)
!7450 = !DILocation(line: 1437, column: 42, scope: !7447)
!7451 = !DILocation(line: 1437, column: 46, scope: !7447)
!7452 = !DILocation(line: 1437, column: 9, scope: !7445)
!7453 = !DILocalVariable(name: "residue", scope: !7454, file: !3, line: 1438, type: !31)
!7454 = distinct !DILexicalBlock(scope: !7447, file: !3, line: 1437, column: 59)
!7455 = !DILocation(line: 1438, column: 11, scope: !7454)
!7456 = !DILocalVariable(name: "copystat", scope: !7454, file: !3, line: 1439, type: !36)
!7457 = !DILocation(line: 1439, column: 12, scope: !7454)
!7458 = !DILocation(line: 1442, column: 12, scope: !7454)
!7459 = !DILocation(line: 1442, column: 18, scope: !7454)
!7460 = !DILocation(line: 1443, column: 18, scope: !7454)
!7461 = !DILocation(line: 1443, column: 21, scope: !7454)
!7462 = !DILocation(line: 1443, column: 7, scope: !7454)
!7463 = !DILocation(line: 1445, column: 13, scope: !7464)
!7464 = distinct !DILexicalBlock(scope: !7454, file: !3, line: 1445, column: 11)
!7465 = !DILocation(line: 1445, column: 21, scope: !7464)
!7466 = !DILocation(line: 1445, column: 35, scope: !7464)
!7467 = !DILocation(line: 1445, column: 38, scope: !7464)
!7468 = !DILocation(line: 1445, column: 41, scope: !7464)
!7469 = !DILocation(line: 1445, column: 47, scope: !7464)
!7470 = !DILocation(line: 1445, column: 11, scope: !7454)
!7471 = !DILocation(line: 1450, column: 21, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7464, file: !3, line: 1445, column: 52)
!7473 = !DILocation(line: 1450, column: 24, scope: !7472)
!7474 = !DILocation(line: 1450, column: 27, scope: !7472)
!7475 = !DILocation(line: 1450, column: 2, scope: !7472)
!7476 = !DILocation(line: 1451, column: 9, scope: !7472)
!7477 = !DILocation(line: 1452, column: 13, scope: !7472)
!7478 = !DILocation(line: 1452, column: 18, scope: !7472)
!7479 = !DILocation(line: 1452, column: 21, scope: !7472)
!7480 = !DILocation(line: 1452, column: 2, scope: !7472)
!7481 = !DILocation(line: 1453, column: 2, scope: !7472)
!7482 = !DILocation(line: 1454, column: 2, scope: !7472)
!7483 = !DILocation(line: 1456, column: 7, scope: !7454)
!7484 = !DILocation(line: 1462, column: 6, scope: !7445)
!7485 = !DILocation(line: 1465, column: 8, scope: !7445)
!7486 = !DILocation(line: 1465, column: 13, scope: !7445)
!7487 = !DILocation(line: 1465, column: 20, scope: !7445)
!7488 = !DILocation(line: 1465, column: 19, scope: !7445)
!7489 = !DILocation(line: 1465, column: 22, scope: !7445)
!7490 = !DILocation(line: 1465, column: 27, scope: !7445)
!7491 = !DILocation(line: 1465, column: 21, scope: !7445)
!7492 = !DILocation(line: 1465, column: 34, scope: !7445)
!7493 = !DILocation(line: 1465, column: 39, scope: !7445)
!7494 = !DILocation(line: 1465, column: 46, scope: !7445)
!7495 = !DILocation(line: 1465, column: 45, scope: !7445)
!7496 = !DILocation(line: 1465, column: 48, scope: !7445)
!7497 = !DILocation(line: 1465, column: 53, scope: !7445)
!7498 = !DILocation(line: 1465, column: 60, scope: !7445)
!7499 = !DILocation(line: 1465, column: 6, scope: !7445)
!7500 = !DILocation(line: 1466, column: 34, scope: !7445)
!7501 = !DILocation(line: 1466, column: 40, scope: !7445)
!7502 = !DILocation(line: 1466, column: 33, scope: !7445)
!7503 = !DILocation(line: 1466, column: 43, scope: !7445)
!7504 = !DILocation(line: 1466, column: 32, scope: !7445)
!7505 = !DILocation(line: 1466, column: 15, scope: !7445)
!7506 = !DILocation(line: 1466, column: 14, scope: !7445)
!7507 = !DILocation(line: 1467, column: 9, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7445, file: !3, line: 1467, column: 9)
!7509 = !DILocation(line: 1467, column: 18, scope: !7508)
!7510 = !DILocation(line: 1467, column: 9, scope: !7445)
!7511 = !DILocation(line: 1468, column: 37, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 1467, column: 33)
!7513 = !DILocation(line: 1468, column: 30, scope: !7512)
!7514 = !DILocation(line: 1468, column: 17, scope: !7512)
!7515 = !DILocation(line: 1468, column: 16, scope: !7512)
!7516 = !DILocation(line: 1469, column: 11, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7512, file: !3, line: 1469, column: 11)
!7518 = !DILocation(line: 1469, column: 20, scope: !7517)
!7519 = !DILocation(line: 1469, column: 11, scope: !7512)
!7520 = !DILocation(line: 1470, column: 8, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7517, file: !3, line: 1469, column: 28)
!7522 = !DILocation(line: 1471, column: 2, scope: !7521)
!7523 = !DILocation(line: 1472, column: 9, scope: !7512)
!7524 = !DILocation(line: 1472, column: 8, scope: !7512)
!7525 = !DILocation(line: 1473, column: 7, scope: !7512)
!7526 = !DILocation(line: 1474, column: 17, scope: !7445)
!7527 = !DILocation(line: 1474, column: 10, scope: !7445)
!7528 = !DILocation(line: 1474, column: 16, scope: !7445)
!7529 = !DILocation(line: 1475, column: 10, scope: !7445)
!7530 = !DILocation(line: 1475, column: 14, scope: !7445)
!7531 = !DILocation(line: 1476, column: 10, scope: !7445)
!7532 = !DILocation(line: 1476, column: 14, scope: !7445)
!7533 = !DILocation(line: 1477, column: 10, scope: !7445)
!7534 = !DILocation(line: 1477, column: 15, scope: !7445)
!7535 = !DILocation(line: 1478, column: 13, scope: !7445)
!7536 = !DILocation(line: 1478, column: 16, scope: !7445)
!7537 = !DILocation(line: 1478, column: 5, scope: !7445)
!7538 = !DILocation(line: 1482, column: 9, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7445, file: !3, line: 1482, column: 9)
!7540 = !DILocation(line: 1482, column: 15, scope: !7539)
!7541 = !DILocation(line: 1482, column: 25, scope: !7539)
!7542 = !DILocation(line: 1482, column: 30, scope: !7539)
!7543 = !DILocation(line: 1482, column: 36, scope: !7539)
!7544 = !DILocation(line: 1482, column: 9, scope: !7445)
!7545 = !DILocation(line: 1482, column: 48, scope: !7539)
!7546 = !DILocation(line: 1483, column: 9, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7445, file: !3, line: 1483, column: 9)
!7548 = !DILocation(line: 1483, column: 12, scope: !7547)
!7549 = !DILocation(line: 1483, column: 16, scope: !7547)
!7550 = !DILocation(line: 1483, column: 28, scope: !7547)
!7551 = !DILocation(line: 1483, column: 31, scope: !7547)
!7552 = !DILocation(line: 1483, column: 9, scope: !7445)
!7553 = !DILocation(line: 1484, column: 21, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 1483, column: 42)
!7555 = !DILocation(line: 1484, column: 26, scope: !7554)
!7556 = !DILocation(line: 1484, column: 7, scope: !7554)
!7557 = !DILocation(line: 1485, column: 7, scope: !7554)
!7558 = !DILocation(line: 1488, column: 7, scope: !7445)
!7559 = !DILocation(line: 1488, column: 12, scope: !7445)
!7560 = !DILocation(line: 1488, column: 18, scope: !7445)
!7561 = !DILocation(line: 1488, column: 6, scope: !7445)
!7562 = !DILocation(line: 1489, column: 34, scope: !7445)
!7563 = !DILocation(line: 1489, column: 40, scope: !7445)
!7564 = !DILocation(line: 1489, column: 33, scope: !7445)
!7565 = !DILocation(line: 1489, column: 43, scope: !7445)
!7566 = !DILocation(line: 1489, column: 32, scope: !7445)
!7567 = !DILocation(line: 1489, column: 15, scope: !7445)
!7568 = !DILocation(line: 1489, column: 14, scope: !7445)
!7569 = !DILocation(line: 1490, column: 9, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7445, file: !3, line: 1490, column: 9)
!7571 = !DILocation(line: 1490, column: 18, scope: !7570)
!7572 = !DILocation(line: 1490, column: 9, scope: !7445)
!7573 = !DILocation(line: 1491, column: 37, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 1490, column: 33)
!7575 = !DILocation(line: 1491, column: 30, scope: !7574)
!7576 = !DILocation(line: 1491, column: 17, scope: !7574)
!7577 = !DILocation(line: 1491, column: 16, scope: !7574)
!7578 = !DILocation(line: 1492, column: 11, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 1492, column: 11)
!7580 = !DILocation(line: 1492, column: 20, scope: !7579)
!7581 = !DILocation(line: 1492, column: 11, scope: !7574)
!7582 = !DILocation(line: 1493, column: 8, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7579, file: !3, line: 1492, column: 28)
!7584 = !DILocation(line: 1494, column: 2, scope: !7583)
!7585 = !DILocation(line: 1495, column: 9, scope: !7574)
!7586 = !DILocation(line: 1495, column: 8, scope: !7574)
!7587 = !DILocation(line: 1496, column: 7, scope: !7574)
!7588 = !DILocation(line: 1497, column: 19, scope: !7445)
!7589 = !DILocation(line: 1497, column: 5, scope: !7445)
!7590 = !DILocation(line: 1501, column: 5, scope: !7445)
!7591 = !DILocation(line: 1501, column: 8, scope: !7445)
!7592 = !DILocation(line: 1501, column: 14, scope: !7445)
!7593 = !DILocation(line: 1503, column: 5, scope: !7445)
!7594 = !DILocation(line: 1503, column: 8, scope: !7445)
!7595 = !DILocation(line: 1503, column: 14, scope: !7445)
!7596 = !DILocation(line: 1505, column: 17, scope: !7445)
!7597 = !DILocation(line: 1505, column: 10, scope: !7445)
!7598 = !DILocation(line: 1505, column: 16, scope: !7445)
!7599 = !DILocation(line: 1506, column: 13, scope: !7445)
!7600 = !DILocation(line: 1506, column: 16, scope: !7445)
!7601 = !DILocation(line: 1506, column: 5, scope: !7445)
!7602 = !DILocation(line: 1508, column: 17, scope: !7445)
!7603 = !DILocation(line: 1508, column: 22, scope: !7445)
!7604 = !DILocation(line: 1508, column: 10, scope: !7445)
!7605 = !DILocation(line: 1508, column: 16, scope: !7445)
!7606 = !DILocation(line: 1509, column: 17, scope: !7445)
!7607 = !DILocation(line: 1509, column: 22, scope: !7445)
!7608 = !DILocation(line: 1509, column: 25, scope: !7445)
!7609 = !DILocation(line: 1509, column: 5, scope: !7445)
!7610 = !DILocation(line: 1510, column: 5, scope: !7445)
!7611 = !DILocation(line: 1512, column: 7, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7400, file: !3, line: 1512, column: 7)
!7613 = !DILocation(line: 1512, column: 16, scope: !7612)
!7614 = !DILocation(line: 1512, column: 7, scope: !7400)
!7615 = !DILocation(line: 1512, column: 29, scope: !7612)
!7616 = !DILocation(line: 1512, column: 24, scope: !7612)
!7617 = !DILocation(line: 1513, column: 7, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7400, file: !3, line: 1513, column: 7)
!7619 = !DILocation(line: 1513, column: 16, scope: !7618)
!7620 = !DILocation(line: 1513, column: 7, scope: !7400)
!7621 = !DILocation(line: 1513, column: 29, scope: !7618)
!7622 = !DILocation(line: 1513, column: 24, scope: !7618)
!7623 = !DILocation(line: 1518, column: 7, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7400, file: !3, line: 1518, column: 7)
!7625 = !DILocation(line: 1518, column: 13, scope: !7624)
!7626 = !DILocation(line: 1518, column: 7, scope: !7400)
!7627 = !DILocation(line: 1518, column: 28, scope: !7624)
!7628 = !DILocation(line: 1518, column: 33, scope: !7624)
!7629 = !DILocation(line: 1518, column: 41, scope: !7624)
!7630 = !DILocation(line: 1518, column: 18, scope: !7624)
!7631 = !DILocation(line: 1522, column: 10, scope: !7400)
!7632 = !DILocation(line: 1522, column: 3, scope: !7400)
!7633 = distinct !DISubprogram(name: "decCopyFit", scope: !3, file: !3, line: 6837, type: !7634, scopeLine: 6838, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!7634 = !DISubroutineType(types: !7635)
!7635 = !{null, !47, !267, !269, !1691, !59}
!7636 = !DILocalVariable(name: "dest", arg: 1, scope: !7633, file: !3, line: 6837, type: !47)
!7637 = !DILocation(line: 6837, column: 35, scope: !7633)
!7638 = !DILocalVariable(name: "src", arg: 2, scope: !7633, file: !3, line: 6837, type: !267)
!7639 = !DILocation(line: 6837, column: 58, scope: !7633)
!7640 = !DILocalVariable(name: "set", arg: 3, scope: !7633, file: !3, line: 6838, type: !269)
!7641 = !DILocation(line: 6838, column: 22, scope: !7633)
!7642 = !DILocalVariable(name: "residue", arg: 4, scope: !7633, file: !3, line: 6838, type: !1691)
!7643 = !DILocation(line: 6838, column: 32, scope: !7633)
!7644 = !DILocalVariable(name: "status", arg: 5, scope: !7633, file: !3, line: 6838, type: !59)
!7645 = !DILocation(line: 6838, column: 47, scope: !7633)
!7646 = !DILocation(line: 6839, column: 14, scope: !7633)
!7647 = !DILocation(line: 6839, column: 19, scope: !7633)
!7648 = !DILocation(line: 6839, column: 3, scope: !7633)
!7649 = !DILocation(line: 6839, column: 9, scope: !7633)
!7650 = !DILocation(line: 6839, column: 13, scope: !7633)
!7651 = !DILocation(line: 6840, column: 18, scope: !7633)
!7652 = !DILocation(line: 6840, column: 23, scope: !7633)
!7653 = !DILocation(line: 6840, column: 3, scope: !7633)
!7654 = !DILocation(line: 6840, column: 9, scope: !7633)
!7655 = !DILocation(line: 6840, column: 17, scope: !7633)
!7656 = !DILocation(line: 6841, column: 15, scope: !7633)
!7657 = !DILocation(line: 6841, column: 21, scope: !7633)
!7658 = !DILocation(line: 6841, column: 26, scope: !7633)
!7659 = !DILocation(line: 6841, column: 31, scope: !7633)
!7660 = !DILocation(line: 6841, column: 36, scope: !7633)
!7661 = !DILocation(line: 6841, column: 41, scope: !7633)
!7662 = !DILocation(line: 6841, column: 49, scope: !7633)
!7663 = !DILocation(line: 6841, column: 58, scope: !7633)
!7664 = !DILocation(line: 6841, column: 3, scope: !7633)
!7665 = !DILocation(line: 6842, column: 3, scope: !7633)
!7666 = distinct !DISubprogram(name: "decNumberMax", scope: !3, file: !3, line: 1537, type: !2989, scopeLine: 1538, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!7667 = !DILocalVariable(name: "res", arg: 1, scope: !7666, file: !3, line: 1537, type: !47)
!7668 = !DILocation(line: 1537, column: 37, scope: !7666)
!7669 = !DILocalVariable(name: "lhs", arg: 2, scope: !7666, file: !3, line: 1537, type: !267)
!7670 = !DILocation(line: 1537, column: 59, scope: !7666)
!7671 = !DILocalVariable(name: "rhs", arg: 3, scope: !7666, file: !3, line: 1538, type: !267)
!7672 = !DILocation(line: 1538, column: 22, scope: !7666)
!7673 = !DILocalVariable(name: "set", arg: 4, scope: !7666, file: !3, line: 1538, type: !269)
!7674 = !DILocation(line: 1538, column: 39, scope: !7666)
!7675 = !DILocalVariable(name: "status", scope: !7666, file: !3, line: 1539, type: !36)
!7676 = !DILocation(line: 1539, column: 8, scope: !7666)
!7677 = !DILocation(line: 1540, column: 16, scope: !7666)
!7678 = !DILocation(line: 1540, column: 21, scope: !7666)
!7679 = !DILocation(line: 1540, column: 26, scope: !7666)
!7680 = !DILocation(line: 1540, column: 31, scope: !7666)
!7681 = !DILocation(line: 1540, column: 3, scope: !7666)
!7682 = !DILocation(line: 1541, column: 7, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7666, file: !3, line: 1541, column: 7)
!7684 = !DILocation(line: 1541, column: 13, scope: !7683)
!7685 = !DILocation(line: 1541, column: 7, scope: !7666)
!7686 = !DILocation(line: 1541, column: 28, scope: !7683)
!7687 = !DILocation(line: 1541, column: 33, scope: !7683)
!7688 = !DILocation(line: 1541, column: 41, scope: !7683)
!7689 = !DILocation(line: 1541, column: 18, scope: !7683)
!7690 = !DILocation(line: 1545, column: 10, scope: !7666)
!7691 = !DILocation(line: 1545, column: 3, scope: !7666)
!7692 = distinct !DISubprogram(name: "decNumberMaxMag", scope: !3, file: !3, line: 1560, type: !2989, scopeLine: 1561, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!7693 = !DILocalVariable(name: "res", arg: 1, scope: !7692, file: !3, line: 1560, type: !47)
!7694 = !DILocation(line: 1560, column: 40, scope: !7692)
!7695 = !DILocalVariable(name: "lhs", arg: 2, scope: !7692, file: !3, line: 1560, type: !267)
!7696 = !DILocation(line: 1560, column: 62, scope: !7692)
!7697 = !DILocalVariable(name: "rhs", arg: 3, scope: !7692, file: !3, line: 1561, type: !267)
!7698 = !DILocation(line: 1561, column: 22, scope: !7692)
!7699 = !DILocalVariable(name: "set", arg: 4, scope: !7692, file: !3, line: 1561, type: !269)
!7700 = !DILocation(line: 1561, column: 39, scope: !7692)
!7701 = !DILocalVariable(name: "status", scope: !7692, file: !3, line: 1562, type: !36)
!7702 = !DILocation(line: 1562, column: 8, scope: !7692)
!7703 = !DILocation(line: 1563, column: 16, scope: !7692)
!7704 = !DILocation(line: 1563, column: 21, scope: !7692)
!7705 = !DILocation(line: 1563, column: 26, scope: !7692)
!7706 = !DILocation(line: 1563, column: 31, scope: !7692)
!7707 = !DILocation(line: 1563, column: 3, scope: !7692)
!7708 = !DILocation(line: 1564, column: 7, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7692, file: !3, line: 1564, column: 7)
!7710 = !DILocation(line: 1564, column: 13, scope: !7709)
!7711 = !DILocation(line: 1564, column: 7, scope: !7692)
!7712 = !DILocation(line: 1564, column: 28, scope: !7709)
!7713 = !DILocation(line: 1564, column: 33, scope: !7709)
!7714 = !DILocation(line: 1564, column: 41, scope: !7709)
!7715 = !DILocation(line: 1564, column: 18, scope: !7709)
!7716 = !DILocation(line: 1568, column: 10, scope: !7692)
!7717 = !DILocation(line: 1568, column: 3, scope: !7692)
!7718 = distinct !DISubprogram(name: "decNumberMin", scope: !3, file: !3, line: 1583, type: !2989, scopeLine: 1584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!7719 = !DILocalVariable(name: "res", arg: 1, scope: !7718, file: !3, line: 1583, type: !47)
!7720 = !DILocation(line: 1583, column: 37, scope: !7718)
!7721 = !DILocalVariable(name: "lhs", arg: 2, scope: !7718, file: !3, line: 1583, type: !267)
!7722 = !DILocation(line: 1583, column: 59, scope: !7718)
!7723 = !DILocalVariable(name: "rhs", arg: 3, scope: !7718, file: !3, line: 1584, type: !267)
!7724 = !DILocation(line: 1584, column: 22, scope: !7718)
!7725 = !DILocalVariable(name: "set", arg: 4, scope: !7718, file: !3, line: 1584, type: !269)
!7726 = !DILocation(line: 1584, column: 39, scope: !7718)
!7727 = !DILocalVariable(name: "status", scope: !7718, file: !3, line: 1585, type: !36)
!7728 = !DILocation(line: 1585, column: 8, scope: !7718)
!7729 = !DILocation(line: 1586, column: 16, scope: !7718)
!7730 = !DILocation(line: 1586, column: 21, scope: !7718)
!7731 = !DILocation(line: 1586, column: 26, scope: !7718)
!7732 = !DILocation(line: 1586, column: 31, scope: !7718)
!7733 = !DILocation(line: 1586, column: 3, scope: !7718)
!7734 = !DILocation(line: 1587, column: 7, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7718, file: !3, line: 1587, column: 7)
!7736 = !DILocation(line: 1587, column: 13, scope: !7735)
!7737 = !DILocation(line: 1587, column: 7, scope: !7718)
!7738 = !DILocation(line: 1587, column: 28, scope: !7735)
!7739 = !DILocation(line: 1587, column: 33, scope: !7735)
!7740 = !DILocation(line: 1587, column: 41, scope: !7735)
!7741 = !DILocation(line: 1587, column: 18, scope: !7735)
!7742 = !DILocation(line: 1591, column: 10, scope: !7718)
!7743 = !DILocation(line: 1591, column: 3, scope: !7718)
!7744 = distinct !DISubprogram(name: "decNumberMinMag", scope: !3, file: !3, line: 1606, type: !2989, scopeLine: 1607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!7745 = !DILocalVariable(name: "res", arg: 1, scope: !7744, file: !3, line: 1606, type: !47)
!7746 = !DILocation(line: 1606, column: 40, scope: !7744)
!7747 = !DILocalVariable(name: "lhs", arg: 2, scope: !7744, file: !3, line: 1606, type: !267)
!7748 = !DILocation(line: 1606, column: 62, scope: !7744)
!7749 = !DILocalVariable(name: "rhs", arg: 3, scope: !7744, file: !3, line: 1607, type: !267)
!7750 = !DILocation(line: 1607, column: 22, scope: !7744)
!7751 = !DILocalVariable(name: "set", arg: 4, scope: !7744, file: !3, line: 1607, type: !269)
!7752 = !DILocation(line: 1607, column: 39, scope: !7744)
!7753 = !DILocalVariable(name: "status", scope: !7744, file: !3, line: 1608, type: !36)
!7754 = !DILocation(line: 1608, column: 8, scope: !7744)
!7755 = !DILocation(line: 1609, column: 16, scope: !7744)
!7756 = !DILocation(line: 1609, column: 21, scope: !7744)
!7757 = !DILocation(line: 1609, column: 26, scope: !7744)
!7758 = !DILocation(line: 1609, column: 31, scope: !7744)
!7759 = !DILocation(line: 1609, column: 3, scope: !7744)
!7760 = !DILocation(line: 1610, column: 7, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7744, file: !3, line: 1610, column: 7)
!7762 = !DILocation(line: 1610, column: 13, scope: !7761)
!7763 = !DILocation(line: 1610, column: 7, scope: !7744)
!7764 = !DILocation(line: 1610, column: 28, scope: !7761)
!7765 = !DILocation(line: 1610, column: 33, scope: !7761)
!7766 = !DILocation(line: 1610, column: 41, scope: !7761)
!7767 = !DILocation(line: 1610, column: 18, scope: !7761)
!7768 = !DILocation(line: 1614, column: 10, scope: !7744)
!7769 = !DILocation(line: 1614, column: 3, scope: !7744)
!7770 = distinct !DISubprogram(name: "decNumberMinus", scope: !3, file: !3, line: 1631, type: !2287, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!7771 = !DILocalVariable(name: "res", arg: 1, scope: !7770, file: !3, line: 1631, type: !47)
!7772 = !DILocation(line: 1631, column: 39, scope: !7770)
!7773 = !DILocalVariable(name: "rhs", arg: 2, scope: !7770, file: !3, line: 1631, type: !267)
!7774 = !DILocation(line: 1631, column: 61, scope: !7770)
!7775 = !DILocalVariable(name: "set", arg: 3, scope: !7770, file: !3, line: 1632, type: !269)
!7776 = !DILocation(line: 1632, column: 19, scope: !7770)
!7777 = !DILocalVariable(name: "dzero", scope: !7770, file: !3, line: 1633, type: !48)
!7778 = !DILocation(line: 1633, column: 13, scope: !7770)
!7779 = !DILocalVariable(name: "status", scope: !7770, file: !3, line: 1634, type: !36)
!7780 = !DILocation(line: 1634, column: 8, scope: !7770)
!7781 = !DILocation(line: 1640, column: 3, scope: !7770)
!7782 = !DILocation(line: 1641, column: 18, scope: !7770)
!7783 = !DILocation(line: 1641, column: 23, scope: !7770)
!7784 = !DILocation(line: 1641, column: 9, scope: !7770)
!7785 = !DILocation(line: 1641, column: 17, scope: !7770)
!7786 = !DILocation(line: 1642, column: 12, scope: !7770)
!7787 = !DILocation(line: 1642, column: 25, scope: !7770)
!7788 = !DILocation(line: 1642, column: 30, scope: !7770)
!7789 = !DILocation(line: 1642, column: 3, scope: !7770)
!7790 = !DILocation(line: 1643, column: 7, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7770, file: !3, line: 1643, column: 7)
!7792 = !DILocation(line: 1643, column: 13, scope: !7791)
!7793 = !DILocation(line: 1643, column: 7, scope: !7770)
!7794 = !DILocation(line: 1643, column: 28, scope: !7791)
!7795 = !DILocation(line: 1643, column: 33, scope: !7791)
!7796 = !DILocation(line: 1643, column: 41, scope: !7791)
!7797 = !DILocation(line: 1643, column: 18, scope: !7791)
!7798 = !DILocation(line: 1647, column: 10, scope: !7770)
!7799 = !DILocation(line: 1647, column: 3, scope: !7770)
!7800 = distinct !DISubprogram(name: "decNumberNextMinus", scope: !3, file: !3, line: 1661, type: !2287, scopeLine: 1662, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!7801 = !DILocalVariable(name: "res", arg: 1, scope: !7800, file: !3, line: 1661, type: !47)
!7802 = !DILocation(line: 1661, column: 43, scope: !7800)
!7803 = !DILocalVariable(name: "rhs", arg: 2, scope: !7800, file: !3, line: 1661, type: !267)
!7804 = !DILocation(line: 1661, column: 65, scope: !7800)
!7805 = !DILocalVariable(name: "set", arg: 3, scope: !7800, file: !3, line: 1662, type: !269)
!7806 = !DILocation(line: 1662, column: 23, scope: !7800)
!7807 = !DILocalVariable(name: "dtiny", scope: !7800, file: !3, line: 1663, type: !48)
!7808 = !DILocation(line: 1663, column: 13, scope: !7800)
!7809 = !DILocalVariable(name: "workset", scope: !7800, file: !3, line: 1664, type: !270)
!7810 = !DILocation(line: 1664, column: 14, scope: !7800)
!7811 = !DILocation(line: 1664, column: 23, scope: !7800)
!7812 = !DILocation(line: 1664, column: 22, scope: !7800)
!7813 = !DILocalVariable(name: "status", scope: !7800, file: !3, line: 1665, type: !36)
!7814 = !DILocation(line: 1665, column: 8, scope: !7800)
!7815 = !DILocation(line: 1671, column: 8, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7800, file: !3, line: 1671, column: 7)
!7817 = !DILocation(line: 1671, column: 13, scope: !7816)
!7818 = !DILocation(line: 1671, column: 17, scope: !7816)
!7819 = !DILocation(line: 1671, column: 34, scope: !7816)
!7820 = !DILocation(line: 1671, column: 7, scope: !7800)
!7821 = !DILocation(line: 1672, column: 20, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7816, file: !3, line: 1671, column: 44)
!7823 = !DILocation(line: 1672, column: 25, scope: !7822)
!7824 = !DILocation(line: 1672, column: 5, scope: !7822)
!7825 = !DILocation(line: 1674, column: 12, scope: !7822)
!7826 = !DILocation(line: 1674, column: 5, scope: !7822)
!7827 = !DILocation(line: 1676, column: 3, scope: !7800)
!7828 = !DILocation(line: 1677, column: 9, scope: !7800)
!7829 = !DILocation(line: 1677, column: 3, scope: !7800)
!7830 = !DILocation(line: 1677, column: 15, scope: !7800)
!7831 = !DILocation(line: 1678, column: 9, scope: !7800)
!7832 = !DILocation(line: 1678, column: 17, scope: !7800)
!7833 = !DILocation(line: 1679, column: 11, scope: !7800)
!7834 = !DILocation(line: 1679, column: 16, scope: !7800)
!7835 = !DILocation(line: 1680, column: 12, scope: !7800)
!7836 = !DILocation(line: 1680, column: 17, scope: !7800)
!7837 = !DILocation(line: 1680, column: 3, scope: !7800)
!7838 = !DILocation(line: 1681, column: 9, scope: !7800)
!7839 = !DILocation(line: 1682, column: 7, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !7800, file: !3, line: 1682, column: 7)
!7841 = !DILocation(line: 1682, column: 13, scope: !7840)
!7842 = !DILocation(line: 1682, column: 7, scope: !7800)
!7843 = !DILocation(line: 1682, column: 28, scope: !7840)
!7844 = !DILocation(line: 1682, column: 33, scope: !7840)
!7845 = !DILocation(line: 1682, column: 41, scope: !7840)
!7846 = !DILocation(line: 1682, column: 18, scope: !7840)
!7847 = !DILocation(line: 1683, column: 10, scope: !7800)
!7848 = !DILocation(line: 1683, column: 3, scope: !7800)
!7849 = !DILocation(line: 1684, column: 3, scope: !7800)
!7850 = distinct !DISubprogram(name: "decSetMaxValue", scope: !3, file: !3, line: 7388, type: !7851, scopeLine: 7388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!7851 = !DISubroutineType(types: !7852)
!7852 = !{null, !47, !269}
!7853 = !DILocalVariable(name: "dn", arg: 1, scope: !7850, file: !3, line: 7388, type: !47)
!7854 = !DILocation(line: 7388, column: 39, scope: !7850)
!7855 = !DILocalVariable(name: "set", arg: 2, scope: !7850, file: !3, line: 7388, type: !269)
!7856 = !DILocation(line: 7388, column: 55, scope: !7850)
!7857 = !DILocalVariable(name: "up", scope: !7850, file: !3, line: 7389, type: !43)
!7858 = !DILocation(line: 7389, column: 9, scope: !7850)
!7859 = !DILocalVariable(name: "count", scope: !7850, file: !3, line: 7390, type: !31)
!7860 = !DILocation(line: 7390, column: 7, scope: !7850)
!7861 = !DILocation(line: 7390, column: 13, scope: !7850)
!7862 = !DILocation(line: 7390, column: 18, scope: !7850)
!7863 = !DILocation(line: 7391, column: 14, scope: !7850)
!7864 = !DILocation(line: 7391, column: 3, scope: !7850)
!7865 = !DILocation(line: 7391, column: 7, scope: !7850)
!7866 = !DILocation(line: 7391, column: 13, scope: !7850)
!7867 = !DILocation(line: 7393, column: 11, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7850, file: !3, line: 7393, column: 3)
!7869 = !DILocation(line: 7393, column: 15, scope: !7868)
!7870 = !DILocation(line: 7393, column: 10, scope: !7868)
!7871 = !DILocation(line: 7393, column: 8, scope: !7868)
!7872 = !DILocation(line: 7394, column: 9, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 7394, column: 9)
!7874 = distinct !DILexicalBlock(scope: !7875, file: !3, line: 7393, column: 28)
!7875 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 7393, column: 3)
!7876 = !DILocation(line: 7394, column: 14, scope: !7873)
!7877 = !DILocation(line: 7394, column: 9, scope: !7874)
!7878 = !DILocation(line: 7394, column: 25, scope: !7873)
!7879 = !DILocation(line: 7394, column: 27, scope: !7873)
!7880 = !DILocation(line: 7394, column: 24, scope: !7873)
!7881 = !DILocation(line: 7396, column: 25, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7873, file: !3, line: 7395, column: 11)
!7883 = !DILocation(line: 7396, column: 18, scope: !7882)
!7884 = !DILocation(line: 7396, column: 31, scope: !7882)
!7885 = !DILocation(line: 7396, column: 11, scope: !7882)
!7886 = !DILocation(line: 7396, column: 8, scope: !7882)
!7887 = !DILocation(line: 7396, column: 10, scope: !7882)
!7888 = !DILocation(line: 7397, column: 7, scope: !7882)
!7889 = !DILocation(line: 7399, column: 10, scope: !7874)
!7890 = !DILocation(line: 7400, column: 5, scope: !7874)
!7891 = !DILocation(line: 7393, column: 24, scope: !7875)
!7892 = !DILocation(line: 7393, column: 3, scope: !7875)
!7893 = distinct !{!7893, !7894, !7895}
!7894 = !DILocation(line: 7393, column: 3, scope: !7868)
!7895 = !DILocation(line: 7400, column: 5, scope: !7868)
!7896 = !DILocation(line: 7401, column: 3, scope: !7850)
!7897 = !DILocation(line: 7401, column: 7, scope: !7850)
!7898 = !DILocation(line: 7401, column: 11, scope: !7850)
!7899 = !DILocation(line: 7402, column: 16, scope: !7850)
!7900 = !DILocation(line: 7402, column: 21, scope: !7850)
!7901 = !DILocation(line: 7402, column: 26, scope: !7850)
!7902 = !DILocation(line: 7402, column: 31, scope: !7850)
!7903 = !DILocation(line: 7402, column: 25, scope: !7850)
!7904 = !DILocation(line: 7402, column: 37, scope: !7850)
!7905 = !DILocation(line: 7402, column: 3, scope: !7850)
!7906 = !DILocation(line: 7402, column: 7, scope: !7850)
!7907 = !DILocation(line: 7402, column: 15, scope: !7850)
!7908 = !DILocation(line: 7403, column: 3, scope: !7850)
!7909 = distinct !DISubprogram(name: "decNumberNextPlus", scope: !3, file: !3, line: 1697, type: !2287, scopeLine: 1698, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!7910 = !DILocalVariable(name: "res", arg: 1, scope: !7909, file: !3, line: 1697, type: !47)
!7911 = !DILocation(line: 1697, column: 42, scope: !7909)
!7912 = !DILocalVariable(name: "rhs", arg: 2, scope: !7909, file: !3, line: 1697, type: !267)
!7913 = !DILocation(line: 1697, column: 64, scope: !7909)
!7914 = !DILocalVariable(name: "set", arg: 3, scope: !7909, file: !3, line: 1698, type: !269)
!7915 = !DILocation(line: 1698, column: 22, scope: !7909)
!7916 = !DILocalVariable(name: "dtiny", scope: !7909, file: !3, line: 1699, type: !48)
!7917 = !DILocation(line: 1699, column: 13, scope: !7909)
!7918 = !DILocalVariable(name: "workset", scope: !7909, file: !3, line: 1700, type: !270)
!7919 = !DILocation(line: 1700, column: 14, scope: !7909)
!7920 = !DILocation(line: 1700, column: 23, scope: !7909)
!7921 = !DILocation(line: 1700, column: 22, scope: !7909)
!7922 = !DILocalVariable(name: "status", scope: !7909, file: !3, line: 1701, type: !36)
!7923 = !DILocation(line: 1701, column: 8, scope: !7909)
!7924 = !DILocation(line: 1707, column: 8, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7909, file: !3, line: 1707, column: 7)
!7926 = !DILocation(line: 1707, column: 13, scope: !7925)
!7927 = !DILocation(line: 1707, column: 17, scope: !7925)
!7928 = !DILocation(line: 1707, column: 34, scope: !7925)
!7929 = !DILocation(line: 1707, column: 7, scope: !7909)
!7930 = !DILocation(line: 1708, column: 20, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7925, file: !3, line: 1707, column: 53)
!7932 = !DILocation(line: 1708, column: 25, scope: !7931)
!7933 = !DILocation(line: 1708, column: 5, scope: !7931)
!7934 = !DILocation(line: 1709, column: 5, scope: !7931)
!7935 = !DILocation(line: 1709, column: 10, scope: !7931)
!7936 = !DILocation(line: 1709, column: 14, scope: !7931)
!7937 = !DILocation(line: 1711, column: 12, scope: !7931)
!7938 = !DILocation(line: 1711, column: 5, scope: !7931)
!7939 = !DILocation(line: 1713, column: 3, scope: !7909)
!7940 = !DILocation(line: 1714, column: 9, scope: !7909)
!7941 = !DILocation(line: 1714, column: 3, scope: !7909)
!7942 = !DILocation(line: 1714, column: 15, scope: !7909)
!7943 = !DILocation(line: 1715, column: 9, scope: !7909)
!7944 = !DILocation(line: 1715, column: 17, scope: !7909)
!7945 = !DILocation(line: 1716, column: 11, scope: !7909)
!7946 = !DILocation(line: 1716, column: 16, scope: !7909)
!7947 = !DILocation(line: 1717, column: 12, scope: !7909)
!7948 = !DILocation(line: 1717, column: 17, scope: !7909)
!7949 = !DILocation(line: 1717, column: 3, scope: !7909)
!7950 = !DILocation(line: 1718, column: 9, scope: !7909)
!7951 = !DILocation(line: 1719, column: 7, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7909, file: !3, line: 1719, column: 7)
!7953 = !DILocation(line: 1719, column: 13, scope: !7952)
!7954 = !DILocation(line: 1719, column: 7, scope: !7909)
!7955 = !DILocation(line: 1719, column: 28, scope: !7952)
!7956 = !DILocation(line: 1719, column: 33, scope: !7952)
!7957 = !DILocation(line: 1719, column: 41, scope: !7952)
!7958 = !DILocation(line: 1719, column: 18, scope: !7952)
!7959 = !DILocation(line: 1720, column: 10, scope: !7909)
!7960 = !DILocation(line: 1720, column: 3, scope: !7909)
!7961 = !DILocation(line: 1721, column: 3, scope: !7909)
!7962 = distinct !DISubprogram(name: "decNumberNextToward", scope: !3, file: !3, line: 1737, type: !2989, scopeLine: 1738, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!7963 = !DILocalVariable(name: "res", arg: 1, scope: !7962, file: !3, line: 1737, type: !47)
!7964 = !DILocation(line: 1737, column: 44, scope: !7962)
!7965 = !DILocalVariable(name: "lhs", arg: 2, scope: !7962, file: !3, line: 1737, type: !267)
!7966 = !DILocation(line: 1737, column: 66, scope: !7962)
!7967 = !DILocalVariable(name: "rhs", arg: 3, scope: !7962, file: !3, line: 1738, type: !267)
!7968 = !DILocation(line: 1738, column: 22, scope: !7962)
!7969 = !DILocalVariable(name: "set", arg: 4, scope: !7962, file: !3, line: 1738, type: !269)
!7970 = !DILocation(line: 1738, column: 39, scope: !7962)
!7971 = !DILocalVariable(name: "dtiny", scope: !7962, file: !3, line: 1739, type: !48)
!7972 = !DILocation(line: 1739, column: 13, scope: !7962)
!7973 = !DILocalVariable(name: "workset", scope: !7962, file: !3, line: 1740, type: !270)
!7974 = !DILocation(line: 1740, column: 14, scope: !7962)
!7975 = !DILocation(line: 1740, column: 23, scope: !7962)
!7976 = !DILocation(line: 1740, column: 22, scope: !7962)
!7977 = !DILocalVariable(name: "result", scope: !7962, file: !3, line: 1741, type: !31)
!7978 = !DILocation(line: 1741, column: 7, scope: !7962)
!7979 = !DILocalVariable(name: "status", scope: !7962, file: !3, line: 1742, type: !36)
!7980 = !DILocation(line: 1742, column: 8, scope: !7962)
!7981 = !DILocation(line: 1747, column: 7, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7962, file: !3, line: 1747, column: 7)
!7983 = !DILocation(line: 1747, column: 27, scope: !7982)
!7984 = !DILocation(line: 1747, column: 30, scope: !7982)
!7985 = !DILocation(line: 1747, column: 7, scope: !7962)
!7986 = !DILocation(line: 1748, column: 13, scope: !7987)
!7987 = distinct !DILexicalBlock(scope: !7982, file: !3, line: 1747, column: 51)
!7988 = !DILocation(line: 1748, column: 18, scope: !7987)
!7989 = !DILocation(line: 1748, column: 23, scope: !7987)
!7990 = !DILocation(line: 1748, column: 28, scope: !7987)
!7991 = !DILocation(line: 1748, column: 5, scope: !7987)
!7992 = !DILocation(line: 1749, column: 5, scope: !7987)
!7993 = !DILocation(line: 1751, column: 23, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7982, file: !3, line: 1750, column: 9)
!7995 = !DILocation(line: 1751, column: 28, scope: !7994)
!7996 = !DILocation(line: 1751, column: 12, scope: !7994)
!7997 = !DILocation(line: 1751, column: 11, scope: !7994)
!7998 = !DILocation(line: 1752, column: 9, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !7994, file: !3, line: 1752, column: 9)
!8000 = !DILocation(line: 1752, column: 15, scope: !7999)
!8001 = !DILocation(line: 1752, column: 9, scope: !7994)
!8002 = !DILocation(line: 1752, column: 31, scope: !7999)
!8003 = !DILocation(line: 1752, column: 25, scope: !7999)
!8004 = !DILocation(line: 1754, column: 11, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !8006, file: !3, line: 1754, column: 11)
!8006 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 1753, column: 11)
!8007 = !DILocation(line: 1754, column: 17, scope: !8005)
!8008 = !DILocation(line: 1754, column: 11, scope: !8006)
!8009 = !DILocation(line: 1754, column: 40, scope: !8005)
!8010 = !DILocation(line: 1754, column: 45, scope: !8005)
!8011 = !DILocation(line: 1754, column: 50, scope: !8005)
!8012 = !DILocation(line: 1754, column: 22, scope: !8005)
!8013 = !DILocalVariable(name: "sub", scope: !8014, file: !3, line: 1756, type: !44)
!8014 = distinct !DILexicalBlock(scope: !8005, file: !3, line: 1755, column: 13)
!8015 = !DILocation(line: 1756, column: 8, scope: !8014)
!8016 = !DILocation(line: 1757, column: 6, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !8014, file: !3, line: 1757, column: 6)
!8018 = !DILocation(line: 1757, column: 12, scope: !8017)
!8019 = !DILocation(line: 1757, column: 6, scope: !8014)
!8020 = !DILocation(line: 1759, column: 9, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !8022, file: !3, line: 1759, column: 8)
!8022 = distinct !DILexicalBlock(scope: !8017, file: !3, line: 1757, column: 16)
!8023 = !DILocation(line: 1759, column: 14, scope: !8021)
!8024 = !DILocation(line: 1759, column: 18, scope: !8021)
!8025 = !DILocation(line: 1759, column: 35, scope: !8021)
!8026 = !DILocation(line: 1759, column: 8, scope: !8022)
!8027 = !DILocation(line: 1760, column: 21, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8021, file: !3, line: 1759, column: 54)
!8029 = !DILocation(line: 1760, column: 26, scope: !8028)
!8030 = !DILocation(line: 1760, column: 6, scope: !8028)
!8031 = !DILocation(line: 1761, column: 6, scope: !8028)
!8032 = !DILocation(line: 1761, column: 11, scope: !8028)
!8033 = !DILocation(line: 1761, column: 15, scope: !8028)
!8034 = !DILocation(line: 1762, column: 13, scope: !8028)
!8035 = !DILocation(line: 1762, column: 6, scope: !8028)
!8036 = !DILocation(line: 1764, column: 12, scope: !8022)
!8037 = !DILocation(line: 1764, column: 17, scope: !8022)
!8038 = !DILocation(line: 1765, column: 7, scope: !8022)
!8039 = !DILocation(line: 1766, column: 4, scope: !8022)
!8040 = !DILocation(line: 1769, column: 9, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8042, file: !3, line: 1769, column: 8)
!8042 = distinct !DILexicalBlock(scope: !8017, file: !3, line: 1767, column: 8)
!8043 = !DILocation(line: 1769, column: 14, scope: !8041)
!8044 = !DILocation(line: 1769, column: 18, scope: !8041)
!8045 = !DILocation(line: 1769, column: 35, scope: !8041)
!8046 = !DILocation(line: 1769, column: 8, scope: !8042)
!8047 = !DILocation(line: 1770, column: 21, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8041, file: !3, line: 1769, column: 45)
!8049 = !DILocation(line: 1770, column: 26, scope: !8048)
!8050 = !DILocation(line: 1770, column: 6, scope: !8048)
!8051 = !DILocation(line: 1771, column: 13, scope: !8048)
!8052 = !DILocation(line: 1771, column: 6, scope: !8048)
!8053 = !DILocation(line: 1773, column: 12, scope: !8042)
!8054 = !DILocation(line: 1773, column: 17, scope: !8042)
!8055 = !DILocation(line: 1774, column: 7, scope: !8042)
!8056 = !DILocation(line: 1776, column: 2, scope: !8014)
!8057 = !DILocation(line: 1777, column: 8, scope: !8014)
!8058 = !DILocation(line: 1777, column: 2, scope: !8014)
!8059 = !DILocation(line: 1777, column: 14, scope: !8014)
!8060 = !DILocation(line: 1778, column: 8, scope: !8014)
!8061 = !DILocation(line: 1778, column: 16, scope: !8014)
!8062 = !DILocation(line: 1779, column: 11, scope: !8014)
!8063 = !DILocation(line: 1779, column: 16, scope: !8014)
!8064 = !DILocation(line: 1779, column: 39, scope: !8014)
!8065 = !DILocation(line: 1779, column: 2, scope: !8014)
!8066 = !DILocation(line: 1782, column: 24, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !8014, file: !3, line: 1782, column: 6)
!8068 = !DILocation(line: 1782, column: 29, scope: !8067)
!8069 = !DILocation(line: 1782, column: 6, scope: !8067)
!8070 = !DILocation(line: 1782, column: 6, scope: !8014)
!8071 = !DILocation(line: 1782, column: 41, scope: !8067)
!8072 = !DILocation(line: 1782, column: 35, scope: !8067)
!8073 = !DILocation(line: 1786, column: 7, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !7962, file: !3, line: 1786, column: 7)
!8075 = !DILocation(line: 1786, column: 13, scope: !8074)
!8076 = !DILocation(line: 1786, column: 7, scope: !7962)
!8077 = !DILocation(line: 1786, column: 28, scope: !8074)
!8078 = !DILocation(line: 1786, column: 33, scope: !8074)
!8079 = !DILocation(line: 1786, column: 41, scope: !8074)
!8080 = !DILocation(line: 1786, column: 18, scope: !8074)
!8081 = !DILocation(line: 1787, column: 10, scope: !7962)
!8082 = !DILocation(line: 1787, column: 3, scope: !7962)
!8083 = !DILocation(line: 1788, column: 3, scope: !7962)
!8084 = distinct !DISubprogram(name: "decCompare", scope: !3, file: !3, line: 6163, type: !8085, scopeLine: 6164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!8085 = !DISubroutineType(types: !8086)
!8086 = !{!31, !267, !267, !44}
!8087 = !DILocalVariable(name: "lhs", arg: 1, scope: !8084, file: !3, line: 6163, type: !267)
!8088 = !DILocation(line: 6163, column: 40, scope: !8084)
!8089 = !DILocalVariable(name: "rhs", arg: 2, scope: !8084, file: !3, line: 6163, type: !267)
!8090 = !DILocation(line: 6163, column: 62, scope: !8084)
!8091 = !DILocalVariable(name: "abs", arg: 3, scope: !8084, file: !3, line: 6164, type: !44)
!8092 = !DILocation(line: 6164, column: 14, scope: !8084)
!8093 = !DILocalVariable(name: "result", scope: !8084, file: !3, line: 6165, type: !31)
!8094 = !DILocation(line: 6165, column: 7, scope: !8084)
!8095 = !DILocalVariable(name: "sigr", scope: !8084, file: !3, line: 6166, type: !31)
!8096 = !DILocation(line: 6166, column: 7, scope: !8084)
!8097 = !DILocalVariable(name: "compare", scope: !8084, file: !3, line: 6167, type: !31)
!8098 = !DILocation(line: 6167, column: 7, scope: !8084)
!8099 = !DILocation(line: 6169, column: 9, scope: !8084)
!8100 = !DILocation(line: 6170, column: 7, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8084, file: !3, line: 6170, column: 7)
!8102 = !DILocation(line: 6170, column: 7, scope: !8084)
!8103 = !DILocation(line: 6170, column: 26, scope: !8101)
!8104 = !DILocation(line: 6170, column: 20, scope: !8101)
!8105 = !DILocation(line: 6171, column: 7, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8084, file: !3, line: 6171, column: 7)
!8107 = !DILocation(line: 6171, column: 7, scope: !8084)
!8108 = !DILocation(line: 6172, column: 9, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !8110, file: !3, line: 6172, column: 9)
!8110 = distinct !DILexicalBlock(scope: !8106, file: !3, line: 6171, column: 12)
!8111 = !DILocation(line: 6172, column: 9, scope: !8110)
!8112 = !DILocation(line: 6172, column: 29, scope: !8109)
!8113 = !DILocation(line: 6172, column: 22, scope: !8109)
!8114 = !DILocation(line: 6174, column: 9, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !8110, file: !3, line: 6174, column: 9)
!8116 = !DILocation(line: 6174, column: 15, scope: !8115)
!8117 = !DILocation(line: 6174, column: 9, scope: !8110)
!8118 = !DILocation(line: 6174, column: 20, scope: !8115)
!8119 = !DILocation(line: 6176, column: 5, scope: !8110)
!8120 = !DILocation(line: 6178, column: 9, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8122, file: !3, line: 6178, column: 9)
!8122 = distinct !DILexicalBlock(scope: !8106, file: !3, line: 6177, column: 9)
!8123 = !DILocation(line: 6178, column: 16, scope: !8121)
!8124 = !DILocation(line: 6178, column: 19, scope: !8121)
!8125 = !DILocation(line: 6178, column: 9, scope: !8122)
!8126 = !DILocation(line: 6178, column: 51, scope: !8121)
!8127 = !DILocation(line: 6178, column: 45, scope: !8121)
!8128 = !DILocation(line: 6179, column: 9, scope: !8122)
!8129 = !DILocation(line: 6180, column: 9, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8122, file: !3, line: 6180, column: 9)
!8131 = !DILocation(line: 6180, column: 9, scope: !8122)
!8132 = !DILocation(line: 6180, column: 26, scope: !8130)
!8133 = !DILocation(line: 6180, column: 22, scope: !8130)
!8134 = !DILocation(line: 6181, column: 15, scope: !8135)
!8135 = distinct !DILexicalBlock(scope: !8130, file: !3, line: 6181, column: 15)
!8136 = !DILocation(line: 6181, column: 15, scope: !8130)
!8137 = !DILocation(line: 6181, column: 45, scope: !8135)
!8138 = !DILocation(line: 6181, column: 41, scope: !8135)
!8139 = !DILocation(line: 6182, column: 9, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8122, file: !3, line: 6182, column: 9)
!8141 = !DILocation(line: 6182, column: 18, scope: !8140)
!8142 = !DILocation(line: 6182, column: 16, scope: !8140)
!8143 = !DILocation(line: 6182, column: 9, scope: !8122)
!8144 = !DILocation(line: 6182, column: 24, scope: !8140)
!8145 = !DILocation(line: 6183, column: 9, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8122, file: !3, line: 6183, column: 9)
!8147 = !DILocation(line: 6183, column: 18, scope: !8146)
!8148 = !DILocation(line: 6183, column: 16, scope: !8146)
!8149 = !DILocation(line: 6183, column: 9, scope: !8122)
!8150 = !DILocation(line: 6183, column: 24, scope: !8146)
!8151 = !DILocation(line: 6184, column: 9, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8122, file: !3, line: 6184, column: 9)
!8153 = !DILocation(line: 6184, column: 15, scope: !8152)
!8154 = !DILocation(line: 6184, column: 9, scope: !8122)
!8155 = !DILocation(line: 6184, column: 20, scope: !8152)
!8156 = !DILocation(line: 6188, column: 8, scope: !8157)
!8157 = distinct !DILexicalBlock(scope: !8084, file: !3, line: 6188, column: 7)
!8158 = !DILocation(line: 6188, column: 13, scope: !8157)
!8159 = !DILocation(line: 6188, column: 20, scope: !8157)
!8160 = !DILocation(line: 6188, column: 25, scope: !8157)
!8161 = !DILocation(line: 6188, column: 18, scope: !8157)
!8162 = !DILocation(line: 6188, column: 31, scope: !8157)
!8163 = !DILocation(line: 6188, column: 7, scope: !8084)
!8164 = !DILocation(line: 6189, column: 9, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8166, file: !3, line: 6189, column: 9)
!8166 = distinct !DILexicalBlock(scope: !8157, file: !3, line: 6188, column: 41)
!8167 = !DILocation(line: 6189, column: 9, scope: !8166)
!8168 = !DILocation(line: 6190, column: 11, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !8170, file: !3, line: 6190, column: 11)
!8170 = distinct !DILexicalBlock(scope: !8165, file: !3, line: 6189, column: 35)
!8171 = !DILocation(line: 6190, column: 11, scope: !8170)
!8172 = !DILocation(line: 6190, column: 43, scope: !8169)
!8173 = !DILocation(line: 6190, column: 37, scope: !8169)
!8174 = !DILocation(line: 6191, column: 21, scope: !8169)
!8175 = !DILocation(line: 6191, column: 20, scope: !8169)
!8176 = !DILocation(line: 6191, column: 19, scope: !8169)
!8177 = !DILocation(line: 6192, column: 7, scope: !8170)
!8178 = !DILocation(line: 6193, column: 12, scope: !8166)
!8179 = !DILocation(line: 6193, column: 5, scope: !8166)
!8180 = !DILocation(line: 6196, column: 7, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8084, file: !3, line: 6196, column: 7)
!8182 = !DILocation(line: 6196, column: 12, scope: !8181)
!8183 = !DILocation(line: 6196, column: 21, scope: !8181)
!8184 = !DILocation(line: 6196, column: 26, scope: !8181)
!8185 = !DILocation(line: 6196, column: 20, scope: !8181)
!8186 = !DILocation(line: 6196, column: 7, scope: !8084)
!8187 = !DILocalVariable(name: "temp", scope: !8188, file: !3, line: 6198, type: !267)
!8188 = distinct !DILexicalBlock(scope: !8181, file: !3, line: 6196, column: 36)
!8189 = !DILocation(line: 6198, column: 22, scope: !8188)
!8190 = !DILocation(line: 6198, column: 27, scope: !8188)
!8191 = !DILocation(line: 6199, column: 9, scope: !8188)
!8192 = !DILocation(line: 6199, column: 8, scope: !8188)
!8193 = !DILocation(line: 6200, column: 9, scope: !8188)
!8194 = !DILocation(line: 6200, column: 8, scope: !8188)
!8195 = !DILocation(line: 6201, column: 13, scope: !8188)
!8196 = !DILocation(line: 6201, column: 12, scope: !8188)
!8197 = !DILocation(line: 6201, column: 11, scope: !8188)
!8198 = !DILocation(line: 6202, column: 5, scope: !8188)
!8199 = !DILocation(line: 6203, column: 26, scope: !8084)
!8200 = !DILocation(line: 6203, column: 31, scope: !8084)
!8201 = !DILocation(line: 6203, column: 36, scope: !8084)
!8202 = !DILocation(line: 6204, column: 5, scope: !8084)
!8203 = !DILocation(line: 6204, column: 10, scope: !8084)
!8204 = !DILocation(line: 6204, column: 15, scope: !8084)
!8205 = !DILocation(line: 6205, column: 5, scope: !8084)
!8206 = !DILocation(line: 6205, column: 10, scope: !8084)
!8207 = !DILocation(line: 6205, column: 19, scope: !8084)
!8208 = !DILocation(line: 6205, column: 24, scope: !8084)
!8209 = !DILocation(line: 6205, column: 18, scope: !8084)
!8210 = !DILocation(line: 6203, column: 11, scope: !8084)
!8211 = !DILocation(line: 6203, column: 10, scope: !8084)
!8212 = !DILocation(line: 6206, column: 7, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8084, file: !3, line: 6206, column: 7)
!8214 = !DILocation(line: 6206, column: 14, scope: !8213)
!8215 = !DILocation(line: 6206, column: 7, scope: !8084)
!8216 = !DILocation(line: 6206, column: 33, scope: !8213)
!8217 = !DILocation(line: 6206, column: 31, scope: !8213)
!8218 = !DILocation(line: 6206, column: 24, scope: !8213)
!8219 = !DILocation(line: 6207, column: 10, scope: !8084)
!8220 = !DILocation(line: 6207, column: 3, scope: !8084)
!8221 = !DILocation(line: 6208, column: 3, scope: !8084)
!8222 = distinct !DISubprogram(name: "decNumberCopySign", scope: !3, file: !3, line: 3428, type: !8223, scopeLine: 3429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!8223 = !DISubroutineType(types: !8224)
!8224 = !{!47, !47, !267, !267}
!8225 = !DILocalVariable(name: "res", arg: 1, scope: !8222, file: !3, line: 3428, type: !47)
!8226 = !DILocation(line: 3428, column: 42, scope: !8222)
!8227 = !DILocalVariable(name: "lhs", arg: 2, scope: !8222, file: !3, line: 3428, type: !267)
!8228 = !DILocation(line: 3428, column: 64, scope: !8222)
!8229 = !DILocalVariable(name: "rhs", arg: 3, scope: !8222, file: !3, line: 3429, type: !267)
!8230 = !DILocation(line: 3429, column: 27, scope: !8222)
!8231 = !DILocalVariable(name: "sign", scope: !8222, file: !3, line: 3430, type: !44)
!8232 = !DILocation(line: 3430, column: 9, scope: !8222)
!8233 = !DILocation(line: 3434, column: 8, scope: !8222)
!8234 = !DILocation(line: 3434, column: 13, scope: !8222)
!8235 = !DILocation(line: 3434, column: 18, scope: !8222)
!8236 = !DILocation(line: 3434, column: 7, scope: !8222)
!8237 = !DILocation(line: 3435, column: 17, scope: !8222)
!8238 = !DILocation(line: 3435, column: 22, scope: !8222)
!8239 = !DILocation(line: 3435, column: 3, scope: !8222)
!8240 = !DILocation(line: 3436, column: 3, scope: !8222)
!8241 = !DILocation(line: 3436, column: 8, scope: !8222)
!8242 = !DILocation(line: 3436, column: 12, scope: !8222)
!8243 = !DILocation(line: 3437, column: 14, scope: !8222)
!8244 = !DILocation(line: 3437, column: 3, scope: !8222)
!8245 = !DILocation(line: 3437, column: 8, scope: !8222)
!8246 = !DILocation(line: 3437, column: 12, scope: !8222)
!8247 = !DILocation(line: 3438, column: 10, scope: !8222)
!8248 = !DILocation(line: 3438, column: 3, scope: !8222)
!8249 = distinct !DISubprogram(name: "decNumberIsNormal", scope: !3, file: !3, line: 3510, type: !265, scopeLine: 3510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!8250 = !DILocalVariable(name: "dn", arg: 1, scope: !8249, file: !3, line: 3510, type: !267)
!8251 = !DILocation(line: 3510, column: 40, scope: !8249)
!8252 = !DILocalVariable(name: "set", arg: 2, scope: !8249, file: !3, line: 3510, type: !269)
!8253 = !DILocation(line: 3510, column: 56, scope: !8249)
!8254 = !DILocalVariable(name: "ae", scope: !8249, file: !3, line: 3511, type: !31)
!8255 = !DILocation(line: 3511, column: 7, scope: !8249)
!8256 = !DILocation(line: 3516, column: 7, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8249, file: !3, line: 3516, column: 7)
!8258 = !DILocation(line: 3516, column: 7, scope: !8249)
!8259 = !DILocation(line: 3516, column: 31, scope: !8257)
!8260 = !DILocation(line: 3517, column: 7, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !8249, file: !3, line: 3517, column: 7)
!8262 = !DILocation(line: 3517, column: 7, scope: !8249)
!8263 = !DILocation(line: 3517, column: 28, scope: !8261)
!8264 = !DILocation(line: 3519, column: 6, scope: !8249)
!8265 = !DILocation(line: 3519, column: 10, scope: !8249)
!8266 = !DILocation(line: 3519, column: 19, scope: !8249)
!8267 = !DILocation(line: 3519, column: 23, scope: !8249)
!8268 = !DILocation(line: 3519, column: 18, scope: !8249)
!8269 = !DILocation(line: 3519, column: 29, scope: !8249)
!8270 = !DILocation(line: 3519, column: 5, scope: !8249)
!8271 = !DILocation(line: 3520, column: 7, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8249, file: !3, line: 3520, column: 7)
!8273 = !DILocation(line: 3520, column: 10, scope: !8272)
!8274 = !DILocation(line: 3520, column: 15, scope: !8272)
!8275 = !DILocation(line: 3520, column: 9, scope: !8272)
!8276 = !DILocation(line: 3520, column: 7, scope: !8249)
!8277 = !DILocation(line: 3520, column: 21, scope: !8272)
!8278 = !DILocation(line: 3521, column: 3, scope: !8249)
!8279 = !DILocation(line: 3522, column: 3, scope: !8249)
!8280 = distinct !DISubprogram(name: "decNumberOr", scope: !3, file: !3, line: 1805, type: !2989, scopeLine: 1806, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!8281 = !DILocalVariable(name: "res", arg: 1, scope: !8280, file: !3, line: 1805, type: !47)
!8282 = !DILocation(line: 1805, column: 36, scope: !8280)
!8283 = !DILocalVariable(name: "lhs", arg: 2, scope: !8280, file: !3, line: 1805, type: !267)
!8284 = !DILocation(line: 1805, column: 58, scope: !8280)
!8285 = !DILocalVariable(name: "rhs", arg: 3, scope: !8280, file: !3, line: 1806, type: !267)
!8286 = !DILocation(line: 1806, column: 21, scope: !8280)
!8287 = !DILocalVariable(name: "set", arg: 4, scope: !8280, file: !3, line: 1806, type: !269)
!8288 = !DILocation(line: 1806, column: 38, scope: !8280)
!8289 = !DILocalVariable(name: "ua", scope: !8280, file: !3, line: 1807, type: !301)
!8290 = !DILocation(line: 1807, column: 15, scope: !8280)
!8291 = !DILocalVariable(name: "ub", scope: !8280, file: !3, line: 1807, type: !301)
!8292 = !DILocation(line: 1807, column: 20, scope: !8280)
!8293 = !DILocalVariable(name: "msua", scope: !8280, file: !3, line: 1808, type: !301)
!8294 = !DILocation(line: 1808, column: 15, scope: !8280)
!8295 = !DILocalVariable(name: "msub", scope: !8280, file: !3, line: 1808, type: !301)
!8296 = !DILocation(line: 1808, column: 22, scope: !8280)
!8297 = !DILocalVariable(name: "uc", scope: !8280, file: !3, line: 1809, type: !43)
!8298 = !DILocation(line: 1809, column: 9, scope: !8280)
!8299 = !DILocalVariable(name: "msuc", scope: !8280, file: !3, line: 1809, type: !43)
!8300 = !DILocation(line: 1809, column: 14, scope: !8280)
!8301 = !DILocalVariable(name: "msudigs", scope: !8280, file: !3, line: 1810, type: !31)
!8302 = !DILocation(line: 1810, column: 7, scope: !8280)
!8303 = !DILocation(line: 1815, column: 7, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 1815, column: 7)
!8305 = !DILocation(line: 1815, column: 12, scope: !8304)
!8306 = !DILocation(line: 1815, column: 20, scope: !8304)
!8307 = !DILocation(line: 1815, column: 24, scope: !8304)
!8308 = !DILocation(line: 1815, column: 27, scope: !8304)
!8309 = !DILocation(line: 1815, column: 51, scope: !8304)
!8310 = !DILocation(line: 1815, column: 54, scope: !8304)
!8311 = !DILocation(line: 1816, column: 4, scope: !8304)
!8312 = !DILocation(line: 1816, column: 7, scope: !8304)
!8313 = !DILocation(line: 1816, column: 12, scope: !8304)
!8314 = !DILocation(line: 1816, column: 20, scope: !8304)
!8315 = !DILocation(line: 1816, column: 24, scope: !8304)
!8316 = !DILocation(line: 1816, column: 27, scope: !8304)
!8317 = !DILocation(line: 1816, column: 51, scope: !8304)
!8318 = !DILocation(line: 1816, column: 54, scope: !8304)
!8319 = !DILocation(line: 1815, column: 7, scope: !8280)
!8320 = !DILocation(line: 1817, column: 15, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8304, file: !3, line: 1816, column: 80)
!8322 = !DILocation(line: 1817, column: 43, scope: !8321)
!8323 = !DILocation(line: 1817, column: 5, scope: !8321)
!8324 = !DILocation(line: 1818, column: 12, scope: !8321)
!8325 = !DILocation(line: 1818, column: 5, scope: !8321)
!8326 = !DILocation(line: 1821, column: 6, scope: !8280)
!8327 = !DILocation(line: 1821, column: 11, scope: !8280)
!8328 = !DILocation(line: 1821, column: 5, scope: !8280)
!8329 = !DILocation(line: 1822, column: 6, scope: !8280)
!8330 = !DILocation(line: 1822, column: 11, scope: !8280)
!8331 = !DILocation(line: 1822, column: 5, scope: !8280)
!8332 = !DILocation(line: 1823, column: 6, scope: !8280)
!8333 = !DILocation(line: 1823, column: 11, scope: !8280)
!8334 = !DILocation(line: 1823, column: 5, scope: !8280)
!8335 = !DILocation(line: 1824, column: 8, scope: !8280)
!8336 = !DILocation(line: 1824, column: 11, scope: !8280)
!8337 = !DILocation(line: 1824, column: 10, scope: !8280)
!8338 = !DILocation(line: 1824, column: 27, scope: !8280)
!8339 = !DILocation(line: 1824, column: 7, scope: !8280)
!8340 = !DILocation(line: 1825, column: 8, scope: !8280)
!8341 = !DILocation(line: 1825, column: 11, scope: !8280)
!8342 = !DILocation(line: 1825, column: 10, scope: !8280)
!8343 = !DILocation(line: 1825, column: 27, scope: !8280)
!8344 = !DILocation(line: 1825, column: 7, scope: !8280)
!8345 = !DILocation(line: 1826, column: 8, scope: !8280)
!8346 = !DILocation(line: 1826, column: 11, scope: !8280)
!8347 = !DILocation(line: 1826, column: 10, scope: !8280)
!8348 = !DILocation(line: 1826, column: 27, scope: !8280)
!8349 = !DILocation(line: 1826, column: 7, scope: !8280)
!8350 = !DILocation(line: 1827, column: 11, scope: !8280)
!8351 = !DILocation(line: 1827, column: 10, scope: !8280)
!8352 = !DILocation(line: 1828, column: 3, scope: !8280)
!8353 = !DILocation(line: 1828, column: 10, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8355, file: !3, line: 1828, column: 3)
!8355 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 1828, column: 3)
!8356 = !DILocation(line: 1828, column: 14, scope: !8354)
!8357 = !DILocation(line: 1828, column: 12, scope: !8354)
!8358 = !DILocation(line: 1828, column: 3, scope: !8355)
!8359 = !DILocalVariable(name: "a", scope: !8360, file: !3, line: 1829, type: !39)
!8360 = distinct !DILexicalBlock(scope: !8354, file: !3, line: 1828, column: 38)
!8361 = !DILocation(line: 1829, column: 10, scope: !8360)
!8362 = !DILocalVariable(name: "b", scope: !8360, file: !3, line: 1829, type: !39)
!8363 = !DILocation(line: 1829, column: 13, scope: !8360)
!8364 = !DILocation(line: 1830, column: 9, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8360, file: !3, line: 1830, column: 9)
!8366 = !DILocation(line: 1830, column: 12, scope: !8365)
!8367 = !DILocation(line: 1830, column: 11, scope: !8365)
!8368 = !DILocation(line: 1830, column: 9, scope: !8360)
!8369 = !DILocation(line: 1830, column: 19, scope: !8365)
!8370 = !DILocation(line: 1830, column: 18, scope: !8365)
!8371 = !DILocation(line: 1831, column: 14, scope: !8365)
!8372 = !DILocation(line: 1831, column: 13, scope: !8365)
!8373 = !DILocation(line: 1831, column: 12, scope: !8365)
!8374 = !DILocation(line: 1832, column: 9, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8360, file: !3, line: 1832, column: 9)
!8376 = !DILocation(line: 1832, column: 12, scope: !8375)
!8377 = !DILocation(line: 1832, column: 11, scope: !8375)
!8378 = !DILocation(line: 1832, column: 9, scope: !8360)
!8379 = !DILocation(line: 1832, column: 19, scope: !8375)
!8380 = !DILocation(line: 1832, column: 18, scope: !8375)
!8381 = !DILocation(line: 1833, column: 14, scope: !8375)
!8382 = !DILocation(line: 1833, column: 13, scope: !8375)
!8383 = !DILocation(line: 1833, column: 12, scope: !8375)
!8384 = !DILocation(line: 1834, column: 6, scope: !8360)
!8385 = !DILocation(line: 1834, column: 8, scope: !8360)
!8386 = !DILocation(line: 1835, column: 9, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8360, file: !3, line: 1835, column: 9)
!8388 = !DILocation(line: 1835, column: 11, scope: !8387)
!8389 = !DILocation(line: 1835, column: 10, scope: !8387)
!8390 = !DILocation(line: 1835, column: 9, scope: !8360)
!8391 = !DILocalVariable(name: "i", scope: !8392, file: !3, line: 1836, type: !31)
!8392 = distinct !DILexicalBlock(scope: !8387, file: !3, line: 1835, column: 14)
!8393 = !DILocation(line: 1836, column: 11, scope: !8392)
!8394 = !DILocalVariable(name: "j", scope: !8392, file: !3, line: 1836, type: !31)
!8395 = !DILocation(line: 1836, column: 14, scope: !8392)
!8396 = !DILocation(line: 1838, column: 13, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 1838, column: 7)
!8398 = !DILocation(line: 1838, column: 12, scope: !8397)
!8399 = !DILocation(line: 1838, column: 17, scope: !8400)
!8400 = distinct !DILexicalBlock(scope: !8397, file: !3, line: 1838, column: 7)
!8401 = !DILocation(line: 1838, column: 18, scope: !8400)
!8402 = !DILocation(line: 1838, column: 7, scope: !8397)
!8403 = !DILocation(line: 1839, column: 7, scope: !8404)
!8404 = distinct !DILexicalBlock(scope: !8405, file: !3, line: 1839, column: 6)
!8405 = distinct !DILexicalBlock(scope: !8400, file: !3, line: 1838, column: 33)
!8406 = !DILocation(line: 1839, column: 9, scope: !8404)
!8407 = !DILocation(line: 1839, column: 8, scope: !8404)
!8408 = !DILocation(line: 1839, column: 11, scope: !8404)
!8409 = !DILocation(line: 1839, column: 6, scope: !8405)
!8410 = !DILocation(line: 1839, column: 20, scope: !8404)
!8411 = !DILocation(line: 1839, column: 19, scope: !8404)
!8412 = !DILocation(line: 1839, column: 36, scope: !8404)
!8413 = !DILocation(line: 1839, column: 29, scope: !8404)
!8414 = !DILocation(line: 1839, column: 23, scope: !8404)
!8415 = !DILocation(line: 1839, column: 22, scope: !8404)
!8416 = !DILocation(line: 1839, column: 16, scope: !8404)
!8417 = !DILocation(line: 1839, column: 18, scope: !8404)
!8418 = !DILocation(line: 1839, column: 15, scope: !8404)
!8419 = !DILocation(line: 1840, column: 4, scope: !8405)
!8420 = !DILocation(line: 1840, column: 5, scope: !8405)
!8421 = !DILocation(line: 1840, column: 3, scope: !8405)
!8422 = !DILocation(line: 1841, column: 4, scope: !8405)
!8423 = !DILocation(line: 1841, column: 5, scope: !8405)
!8424 = !DILocation(line: 1841, column: 3, scope: !8405)
!8425 = !DILocation(line: 1842, column: 5, scope: !8405)
!8426 = !DILocation(line: 1842, column: 6, scope: !8405)
!8427 = !DILocation(line: 1842, column: 3, scope: !8405)
!8428 = !DILocation(line: 1843, column: 4, scope: !8405)
!8429 = !DILocation(line: 1843, column: 5, scope: !8405)
!8430 = !DILocation(line: 1843, column: 3, scope: !8405)
!8431 = !DILocation(line: 1844, column: 6, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8405, file: !3, line: 1844, column: 6)
!8433 = !DILocation(line: 1844, column: 7, scope: !8432)
!8434 = !DILocation(line: 1844, column: 6, scope: !8405)
!8435 = !DILocation(line: 1845, column: 14, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8432, file: !3, line: 1844, column: 11)
!8437 = !DILocation(line: 1845, column: 42, scope: !8436)
!8438 = !DILocation(line: 1845, column: 4, scope: !8436)
!8439 = !DILocation(line: 1846, column: 11, scope: !8436)
!8440 = !DILocation(line: 1846, column: 4, scope: !8436)
!8441 = !DILocation(line: 1848, column: 6, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8405, file: !3, line: 1848, column: 6)
!8443 = !DILocation(line: 1848, column: 10, scope: !8442)
!8444 = !DILocation(line: 1848, column: 8, scope: !8442)
!8445 = !DILocation(line: 1848, column: 15, scope: !8442)
!8446 = !DILocation(line: 1848, column: 18, scope: !8442)
!8447 = !DILocation(line: 1848, column: 21, scope: !8442)
!8448 = !DILocation(line: 1848, column: 28, scope: !8442)
!8449 = !DILocation(line: 1848, column: 19, scope: !8442)
!8450 = !DILocation(line: 1848, column: 6, scope: !8405)
!8451 = !DILocation(line: 1848, column: 32, scope: !8442)
!8452 = !DILocation(line: 1849, column: 2, scope: !8405)
!8453 = !DILocation(line: 1838, column: 29, scope: !8400)
!8454 = !DILocation(line: 1838, column: 7, scope: !8400)
!8455 = distinct !{!8455, !8402, !8456}
!8456 = !DILocation(line: 1849, column: 2, scope: !8397)
!8457 = !DILocation(line: 1850, column: 7, scope: !8392)
!8458 = !DILocation(line: 1851, column: 5, scope: !8360)
!8459 = !DILocation(line: 1828, column: 22, scope: !8354)
!8460 = !DILocation(line: 1828, column: 28, scope: !8354)
!8461 = !DILocation(line: 1828, column: 34, scope: !8354)
!8462 = !DILocation(line: 1828, column: 3, scope: !8354)
!8463 = distinct !{!8463, !8358, !8464}
!8464 = !DILocation(line: 1851, column: 5, scope: !8355)
!8465 = !DILocation(line: 1853, column: 28, scope: !8280)
!8466 = !DILocation(line: 1853, column: 33, scope: !8280)
!8467 = !DILocation(line: 1853, column: 38, scope: !8280)
!8468 = !DILocation(line: 1853, column: 41, scope: !8280)
!8469 = !DILocation(line: 1853, column: 46, scope: !8280)
!8470 = !DILocation(line: 1853, column: 40, scope: !8280)
!8471 = !DILocation(line: 1853, column: 15, scope: !8280)
!8472 = !DILocation(line: 1853, column: 3, scope: !8280)
!8473 = !DILocation(line: 1853, column: 8, scope: !8280)
!8474 = !DILocation(line: 1853, column: 14, scope: !8280)
!8475 = !DILocation(line: 1854, column: 3, scope: !8280)
!8476 = !DILocation(line: 1854, column: 8, scope: !8280)
!8477 = !DILocation(line: 1854, column: 16, scope: !8280)
!8478 = !DILocation(line: 1855, column: 3, scope: !8280)
!8479 = !DILocation(line: 1855, column: 8, scope: !8280)
!8480 = !DILocation(line: 1855, column: 12, scope: !8280)
!8481 = !DILocation(line: 1856, column: 10, scope: !8280)
!8482 = !DILocation(line: 1856, column: 3, scope: !8280)
!8483 = !DILocation(line: 1857, column: 3, scope: !8280)
!8484 = distinct !DISubprogram(name: "decNumberPlus", scope: !3, file: !3, line: 1875, type: !2287, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!8485 = !DILocalVariable(name: "res", arg: 1, scope: !8484, file: !3, line: 1875, type: !47)
!8486 = !DILocation(line: 1875, column: 38, scope: !8484)
!8487 = !DILocalVariable(name: "rhs", arg: 2, scope: !8484, file: !3, line: 1875, type: !267)
!8488 = !DILocation(line: 1875, column: 60, scope: !8484)
!8489 = !DILocalVariable(name: "set", arg: 3, scope: !8484, file: !3, line: 1876, type: !269)
!8490 = !DILocation(line: 1876, column: 18, scope: !8484)
!8491 = !DILocalVariable(name: "dzero", scope: !8484, file: !3, line: 1877, type: !48)
!8492 = !DILocation(line: 1877, column: 13, scope: !8484)
!8493 = !DILocalVariable(name: "status", scope: !8484, file: !3, line: 1878, type: !36)
!8494 = !DILocation(line: 1878, column: 8, scope: !8484)
!8495 = !DILocation(line: 1883, column: 3, scope: !8484)
!8496 = !DILocation(line: 1884, column: 18, scope: !8484)
!8497 = !DILocation(line: 1884, column: 23, scope: !8484)
!8498 = !DILocation(line: 1884, column: 9, scope: !8484)
!8499 = !DILocation(line: 1884, column: 17, scope: !8484)
!8500 = !DILocation(line: 1885, column: 12, scope: !8484)
!8501 = !DILocation(line: 1885, column: 25, scope: !8484)
!8502 = !DILocation(line: 1885, column: 30, scope: !8484)
!8503 = !DILocation(line: 1885, column: 3, scope: !8484)
!8504 = !DILocation(line: 1886, column: 7, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8484, file: !3, line: 1886, column: 7)
!8506 = !DILocation(line: 1886, column: 13, scope: !8505)
!8507 = !DILocation(line: 1886, column: 7, scope: !8484)
!8508 = !DILocation(line: 1886, column: 28, scope: !8505)
!8509 = !DILocation(line: 1886, column: 33, scope: !8505)
!8510 = !DILocation(line: 1886, column: 41, scope: !8505)
!8511 = !DILocation(line: 1886, column: 18, scope: !8505)
!8512 = !DILocation(line: 1890, column: 10, scope: !8484)
!8513 = !DILocation(line: 1890, column: 3, scope: !8484)
!8514 = distinct !DISubprogram(name: "decNumberMultiply", scope: !3, file: !3, line: 1905, type: !2989, scopeLine: 1906, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!8515 = !DILocalVariable(name: "res", arg: 1, scope: !8514, file: !3, line: 1905, type: !47)
!8516 = !DILocation(line: 1905, column: 42, scope: !8514)
!8517 = !DILocalVariable(name: "lhs", arg: 2, scope: !8514, file: !3, line: 1905, type: !267)
!8518 = !DILocation(line: 1905, column: 64, scope: !8514)
!8519 = !DILocalVariable(name: "rhs", arg: 3, scope: !8514, file: !3, line: 1906, type: !267)
!8520 = !DILocation(line: 1906, column: 27, scope: !8514)
!8521 = !DILocalVariable(name: "set", arg: 4, scope: !8514, file: !3, line: 1906, type: !269)
!8522 = !DILocation(line: 1906, column: 44, scope: !8514)
!8523 = !DILocalVariable(name: "status", scope: !8514, file: !3, line: 1907, type: !36)
!8524 = !DILocation(line: 1907, column: 8, scope: !8514)
!8525 = !DILocation(line: 1908, column: 17, scope: !8514)
!8526 = !DILocation(line: 1908, column: 22, scope: !8514)
!8527 = !DILocation(line: 1908, column: 27, scope: !8514)
!8528 = !DILocation(line: 1908, column: 32, scope: !8514)
!8529 = !DILocation(line: 1908, column: 3, scope: !8514)
!8530 = !DILocation(line: 1909, column: 7, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8514, file: !3, line: 1909, column: 7)
!8532 = !DILocation(line: 1909, column: 13, scope: !8531)
!8533 = !DILocation(line: 1909, column: 7, scope: !8514)
!8534 = !DILocation(line: 1909, column: 28, scope: !8531)
!8535 = !DILocation(line: 1909, column: 33, scope: !8531)
!8536 = !DILocation(line: 1909, column: 41, scope: !8531)
!8537 = !DILocation(line: 1909, column: 18, scope: !8531)
!8538 = !DILocation(line: 1913, column: 10, scope: !8514)
!8539 = !DILocation(line: 1913, column: 3, scope: !8514)
!8540 = distinct !DISubprogram(name: "decNumberPower", scope: !3, file: !3, line: 1942, type: !2989, scopeLine: 1943, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!8541 = !DILocalVariable(name: "res", arg: 1, scope: !8540, file: !3, line: 1942, type: !47)
!8542 = !DILocation(line: 1942, column: 39, scope: !8540)
!8543 = !DILocalVariable(name: "lhs", arg: 2, scope: !8540, file: !3, line: 1942, type: !267)
!8544 = !DILocation(line: 1942, column: 61, scope: !8540)
!8545 = !DILocalVariable(name: "rhs", arg: 3, scope: !8540, file: !3, line: 1943, type: !267)
!8546 = !DILocation(line: 1943, column: 24, scope: !8540)
!8547 = !DILocalVariable(name: "set", arg: 4, scope: !8540, file: !3, line: 1943, type: !269)
!8548 = !DILocation(line: 1943, column: 41, scope: !8540)
!8549 = !DILocalVariable(name: "allocdac", scope: !8540, file: !3, line: 1948, type: !47)
!8550 = !DILocation(line: 1948, column: 14, scope: !8540)
!8551 = !DILocalVariable(name: "allocinv", scope: !8540, file: !3, line: 1949, type: !47)
!8552 = !DILocation(line: 1949, column: 14, scope: !8540)
!8553 = !DILocalVariable(name: "reqdigits", scope: !8540, file: !3, line: 1950, type: !31)
!8554 = !DILocation(line: 1950, column: 7, scope: !8540)
!8555 = !DILocation(line: 1950, column: 17, scope: !8540)
!8556 = !DILocation(line: 1950, column: 22, scope: !8540)
!8557 = !DILocalVariable(name: "n", scope: !8540, file: !3, line: 1951, type: !31)
!8558 = !DILocation(line: 1951, column: 7, scope: !8540)
!8559 = !DILocalVariable(name: "rhsint", scope: !8540, file: !3, line: 1952, type: !44)
!8560 = !DILocation(line: 1952, column: 8, scope: !8540)
!8561 = !DILocalVariable(name: "useint", scope: !8540, file: !3, line: 1953, type: !44)
!8562 = !DILocation(line: 1953, column: 8, scope: !8540)
!8563 = !DILocalVariable(name: "isoddint", scope: !8540, file: !3, line: 1954, type: !44)
!8564 = !DILocation(line: 1954, column: 8, scope: !8540)
!8565 = !DILocalVariable(name: "i", scope: !8540, file: !3, line: 1955, type: !31)
!8566 = !DILocation(line: 1955, column: 7, scope: !8540)
!8567 = !DILocalVariable(name: "needbytes", scope: !8540, file: !3, line: 1959, type: !36)
!8568 = !DILocation(line: 1959, column: 8, scope: !8540)
!8569 = !DILocalVariable(name: "seenbit", scope: !8540, file: !3, line: 1960, type: !44)
!8570 = !DILocation(line: 1960, column: 8, scope: !8540)
!8571 = !DILocalVariable(name: "residue", scope: !8540, file: !3, line: 1961, type: !31)
!8572 = !DILocation(line: 1961, column: 7, scope: !8540)
!8573 = !DILocalVariable(name: "status", scope: !8540, file: !3, line: 1962, type: !36)
!8574 = !DILocation(line: 1962, column: 8, scope: !8540)
!8575 = !DILocalVariable(name: "bits", scope: !8540, file: !3, line: 1963, type: !44)
!8576 = !DILocation(line: 1963, column: 9, scope: !8540)
!8577 = !DILocalVariable(name: "aset", scope: !8540, file: !3, line: 1964, type: !270)
!8578 = !DILocation(line: 1964, column: 14, scope: !8540)
!8579 = !DILocalVariable(name: "dnOne", scope: !8540, file: !3, line: 1965, type: !48)
!8580 = !DILocation(line: 1965, column: 13, scope: !8540)
!8581 = !DILocalVariable(name: "dacbuff", scope: !8540, file: !3, line: 1967, type: !6799)
!8582 = !DILocation(line: 1967, column: 13, scope: !8540)
!8583 = !DILocalVariable(name: "dac", scope: !8540, file: !3, line: 1968, type: !47)
!8584 = !DILocation(line: 1968, column: 14, scope: !8540)
!8585 = !DILocation(line: 1968, column: 18, scope: !8540)
!8586 = !DILocalVariable(name: "invbuff", scope: !8540, file: !3, line: 1970, type: !6799)
!8587 = !DILocation(line: 1970, column: 13, scope: !8540)
!8588 = !DILocation(line: 1976, column: 3, scope: !8540)
!8589 = !DILocation(line: 1994, column: 9, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8591, file: !3, line: 1994, column: 9)
!8591 = distinct !DILexicalBlock(scope: !8540, file: !3, line: 1976, column: 6)
!8592 = !DILocation(line: 1994, column: 9, scope: !8591)
!8593 = !DILocation(line: 1995, column: 11, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8595, file: !3, line: 1995, column: 11)
!8595 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 1994, column: 22)
!8596 = !DILocation(line: 1995, column: 31, scope: !8594)
!8597 = !DILocation(line: 1995, column: 34, scope: !8594)
!8598 = !DILocation(line: 1995, column: 11, scope: !8595)
!8599 = !DILocation(line: 1996, column: 10, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8594, file: !3, line: 1995, column: 55)
!8601 = !DILocation(line: 1996, column: 15, scope: !8600)
!8602 = !DILocation(line: 1996, column: 20, scope: !8600)
!8603 = !DILocation(line: 1996, column: 25, scope: !8600)
!8604 = !DILocation(line: 1996, column: 2, scope: !8600)
!8605 = !DILocation(line: 1997, column: 2, scope: !8600)
!8606 = !DILocation(line: 1998, column: 11, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8595, file: !3, line: 1998, column: 11)
!8608 = !DILocation(line: 1998, column: 11, scope: !8595)
!8609 = !DILocalVariable(name: "rhsneg", scope: !8610, file: !3, line: 1999, type: !44)
!8610 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 1998, column: 37)
!8611 = !DILocation(line: 1999, column: 7, scope: !8610)
!8612 = !DILocation(line: 1999, column: 14, scope: !8610)
!8613 = !DILocation(line: 1999, column: 19, scope: !8610)
!8614 = !DILocation(line: 1999, column: 23, scope: !8610)
!8615 = !DILocation(line: 2000, column: 6, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8610, file: !3, line: 2000, column: 6)
!8617 = !DILocation(line: 2001, column: 3, scope: !8616)
!8618 = !DILocation(line: 2001, column: 7, scope: !8616)
!8619 = !DILocation(line: 2000, column: 6, scope: !8610)
!8620 = !DILocation(line: 2002, column: 10, scope: !8616)
!8621 = !DILocation(line: 2002, column: 4, scope: !8616)
!8622 = !DILocation(line: 2004, column: 4, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 2003, column: 8)
!8624 = !DILocation(line: 2005, column: 10, scope: !8623)
!8625 = !DILocation(line: 2005, column: 4, scope: !8623)
!8626 = !DILocation(line: 2005, column: 16, scope: !8623)
!8627 = !DILocation(line: 2006, column: 21, scope: !8623)
!8628 = !DILocation(line: 2006, column: 26, scope: !8623)
!8629 = !DILocation(line: 2006, column: 39, scope: !8623)
!8630 = !DILocation(line: 2006, column: 4, scope: !8623)
!8631 = !DILocation(line: 2007, column: 18, scope: !8623)
!8632 = !DILocation(line: 2007, column: 4, scope: !8623)
!8633 = !DILocation(line: 2008, column: 8, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8623, file: !3, line: 2008, column: 8)
!8635 = !DILocation(line: 2008, column: 8, scope: !8623)
!8636 = !DILocation(line: 2009, column: 10, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8638, file: !3, line: 2009, column: 10)
!8638 = distinct !DILexicalBlock(scope: !8634, file: !3, line: 2008, column: 34)
!8639 = !DILocation(line: 2009, column: 10, scope: !8638)
!8640 = !DILocation(line: 2009, column: 18, scope: !8637)
!8641 = !DILocation(line: 2009, column: 23, scope: !8637)
!8642 = !DILocation(line: 2009, column: 27, scope: !8637)
!8643 = !DILocation(line: 2010, column: 6, scope: !8638)
!8644 = !DILocation(line: 2011, column: 14, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8634, file: !3, line: 2011, column: 14)
!8646 = !DILocation(line: 2011, column: 19, scope: !8645)
!8647 = !DILocation(line: 2011, column: 25, scope: !8645)
!8648 = !DILocation(line: 2011, column: 14, scope: !8634)
!8649 = !DILocalVariable(name: "shift", scope: !8650, file: !3, line: 2013, type: !31)
!8650 = distinct !DILexicalBlock(scope: !8645, file: !3, line: 2011, column: 30)
!8651 = !DILocation(line: 2013, column: 10, scope: !8650)
!8652 = !DILocation(line: 2013, column: 16, scope: !8650)
!8653 = !DILocation(line: 2013, column: 21, scope: !8650)
!8654 = !DILocation(line: 2013, column: 27, scope: !8650)
!8655 = !DILocation(line: 2014, column: 7, scope: !8650)
!8656 = !DILocation(line: 2014, column: 12, scope: !8650)
!8657 = !DILocation(line: 2014, column: 6, scope: !8650)
!8658 = !DILocation(line: 2014, column: 15, scope: !8650)
!8659 = !DILocation(line: 2015, column: 33, scope: !8650)
!8660 = !DILocation(line: 2015, column: 38, scope: !8650)
!8661 = !DILocation(line: 2015, column: 46, scope: !8650)
!8662 = !DILocation(line: 2015, column: 18, scope: !8650)
!8663 = !DILocation(line: 2015, column: 6, scope: !8650)
!8664 = !DILocation(line: 2015, column: 11, scope: !8650)
!8665 = !DILocation(line: 2015, column: 17, scope: !8650)
!8666 = !DILocation(line: 2016, column: 21, scope: !8650)
!8667 = !DILocation(line: 2016, column: 20, scope: !8650)
!8668 = !DILocation(line: 2016, column: 6, scope: !8650)
!8669 = !DILocation(line: 2016, column: 11, scope: !8650)
!8670 = !DILocation(line: 2016, column: 19, scope: !8650)
!8671 = !DILocation(line: 2017, column: 12, scope: !8650)
!8672 = !DILocation(line: 2018, column: 6, scope: !8650)
!8673 = !DILocation(line: 2020, column: 11, scope: !8674)
!8674 = distinct !DILexicalBlock(scope: !8675, file: !3, line: 2020, column: 10)
!8675 = distinct !DILexicalBlock(scope: !8645, file: !3, line: 2019, column: 10)
!8676 = !DILocation(line: 2020, column: 10, scope: !8675)
!8677 = !DILocation(line: 2020, column: 19, scope: !8674)
!8678 = !DILocation(line: 2020, column: 24, scope: !8674)
!8679 = !DILocation(line: 2020, column: 28, scope: !8674)
!8680 = !DILocation(line: 2023, column: 2, scope: !8610)
!8681 = !DILocation(line: 2025, column: 7, scope: !8595)
!8682 = !DILocation(line: 2028, column: 17, scope: !8591)
!8683 = !DILocation(line: 2028, column: 7, scope: !8591)
!8684 = !DILocation(line: 2028, column: 6, scope: !8591)
!8685 = !DILocation(line: 2029, column: 9, scope: !8686)
!8686 = distinct !DILexicalBlock(scope: !8591, file: !3, line: 2029, column: 9)
!8687 = !DILocation(line: 2029, column: 10, scope: !8686)
!8688 = !DILocation(line: 2029, column: 9, scope: !8591)
!8689 = !DILocation(line: 2030, column: 13, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8686, file: !3, line: 2029, column: 20)
!8691 = !DILocation(line: 2031, column: 22, scope: !8690)
!8692 = !DILocation(line: 2031, column: 16, scope: !8690)
!8693 = !DILocation(line: 2031, column: 23, scope: !8690)
!8694 = !DILocation(line: 2031, column: 15, scope: !8690)
!8695 = !DILocation(line: 2032, column: 11, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 2032, column: 11)
!8697 = !DILocation(line: 2032, column: 12, scope: !8696)
!8698 = !DILocation(line: 2032, column: 22, scope: !8696)
!8699 = !DILocation(line: 2032, column: 25, scope: !8696)
!8700 = !DILocation(line: 2032, column: 26, scope: !8696)
!8701 = !DILocation(line: 2032, column: 11, scope: !8690)
!8702 = !DILocation(line: 2033, column: 8, scope: !8696)
!8703 = !DILocation(line: 2033, column: 2, scope: !8696)
!8704 = !DILocation(line: 2034, column: 7, scope: !8690)
!8705 = !DILocation(line: 2036, column: 9, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8591, file: !3, line: 2036, column: 9)
!8707 = !DILocation(line: 2037, column: 7, scope: !8706)
!8708 = !DILocation(line: 2037, column: 10, scope: !8706)
!8709 = !DILocation(line: 2036, column: 9, scope: !8591)
!8710 = !DILocation(line: 2037, column: 24, scope: !8706)
!8711 = !DILocation(line: 2037, column: 20, scope: !8706)
!8712 = !DILocation(line: 2040, column: 9, scope: !8713)
!8713 = distinct !DILexicalBlock(scope: !8591, file: !3, line: 2040, column: 9)
!8714 = !DILocation(line: 2040, column: 9, scope: !8591)
!8715 = !DILocalVariable(name: "rbits", scope: !8716, file: !3, line: 2041, type: !44)
!8716 = distinct !DILexicalBlock(scope: !8713, file: !3, line: 2040, column: 35)
!8717 = !DILocation(line: 2041, column: 13, scope: !8716)
!8718 = !DILocation(line: 2041, column: 19, scope: !8716)
!8719 = !DILocation(line: 2041, column: 24, scope: !8716)
!8720 = !DILocation(line: 2042, column: 21, scope: !8716)
!8721 = !DILocation(line: 2042, column: 7, scope: !8716)
!8722 = !DILocation(line: 2043, column: 11, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8716, file: !3, line: 2043, column: 11)
!8724 = !DILocation(line: 2043, column: 12, scope: !8723)
!8725 = !DILocation(line: 2043, column: 11, scope: !8716)
!8726 = !DILocation(line: 2043, column: 18, scope: !8723)
!8727 = !DILocation(line: 2043, column: 23, scope: !8723)
!8728 = !DILocation(line: 2043, column: 17, scope: !8723)
!8729 = !DILocation(line: 2043, column: 26, scope: !8723)
!8730 = !DILocation(line: 2046, column: 7, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8732, file: !3, line: 2046, column: 6)
!8732 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 2044, column: 13)
!8733 = !DILocation(line: 2046, column: 14, scope: !8731)
!8734 = !DILocation(line: 2046, column: 17, scope: !8731)
!8735 = !DILocation(line: 2046, column: 6, scope: !8732)
!8736 = !DILocation(line: 2047, column: 10, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8731, file: !3, line: 2046, column: 43)
!8738 = !DILocation(line: 2048, column: 4, scope: !8737)
!8739 = !DILocation(line: 2049, column: 8, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8732, file: !3, line: 2049, column: 6)
!8741 = !DILocation(line: 2049, column: 14, scope: !8740)
!8742 = !DILocation(line: 2049, column: 6, scope: !8732)
!8743 = !DILocation(line: 2049, column: 29, scope: !8740)
!8744 = !DILocation(line: 2049, column: 25, scope: !8740)
!8745 = !DILocation(line: 2051, column: 12, scope: !8732)
!8746 = !DILocation(line: 2051, column: 2, scope: !8732)
!8747 = !DILocation(line: 2051, column: 7, scope: !8732)
!8748 = !DILocation(line: 2051, column: 11, scope: !8732)
!8749 = !DILocation(line: 2053, column: 7, scope: !8716)
!8750 = !DILocation(line: 2056, column: 9, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8591, file: !3, line: 2056, column: 9)
!8752 = !DILocation(line: 2056, column: 9, scope: !8591)
!8753 = !DILocation(line: 2057, column: 11, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8755, file: !3, line: 2057, column: 11)
!8755 = distinct !DILexicalBlock(scope: !8751, file: !3, line: 2056, column: 31)
!8756 = !DILocation(line: 2057, column: 12, scope: !8754)
!8757 = !DILocation(line: 2057, column: 11, scope: !8755)
!8758 = !DILocation(line: 2064, column: 8, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8754, file: !3, line: 2057, column: 17)
!8760 = !DILocation(line: 2065, column: 2, scope: !8759)
!8761 = !DILocalVariable(name: "rbits", scope: !8762, file: !3, line: 2067, type: !44)
!8762 = distinct !DILexicalBlock(scope: !8754, file: !3, line: 2066, column: 13)
!8763 = !DILocation(line: 2067, column: 8, scope: !8762)
!8764 = !DILocation(line: 2067, column: 14, scope: !8762)
!8765 = !DILocation(line: 2067, column: 19, scope: !8762)
!8766 = !DILocation(line: 2068, column: 6, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8762, file: !3, line: 2068, column: 6)
!8768 = !DILocation(line: 2068, column: 12, scope: !8767)
!8769 = !DILocation(line: 2068, column: 6, scope: !8762)
!8770 = !DILocation(line: 2074, column: 8, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8767, file: !3, line: 2068, column: 22)
!8772 = !DILocation(line: 2075, column: 4, scope: !8771)
!8773 = !DILocation(line: 2076, column: 16, scope: !8762)
!8774 = !DILocation(line: 2076, column: 2, scope: !8762)
!8775 = !DILocation(line: 2078, column: 12, scope: !8762)
!8776 = !DILocation(line: 2078, column: 2, scope: !8762)
!8777 = !DILocation(line: 2078, column: 7, scope: !8762)
!8778 = !DILocation(line: 2078, column: 11, scope: !8762)
!8779 = !DILocation(line: 2080, column: 7, scope: !8755)
!8780 = !DILocation(line: 2084, column: 10, scope: !8781)
!8781 = distinct !DILexicalBlock(scope: !8591, file: !3, line: 2084, column: 9)
!8782 = !DILocation(line: 2084, column: 9, scope: !8591)
!8783 = !DILocation(line: 2087, column: 11, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8785, file: !3, line: 2087, column: 11)
!8785 = distinct !DILexicalBlock(scope: !8781, file: !3, line: 2084, column: 18)
!8786 = !DILocation(line: 2087, column: 11, scope: !8785)
!8787 = !DILocation(line: 2088, column: 8, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8784, file: !3, line: 2087, column: 37)
!8789 = !DILocation(line: 2089, column: 2, scope: !8788)
!8790 = !DILocation(line: 2090, column: 24, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8785, file: !3, line: 2090, column: 11)
!8792 = !DILocation(line: 2090, column: 29, scope: !8791)
!8793 = !DILocation(line: 2090, column: 11, scope: !8791)
!8794 = !DILocation(line: 2091, column: 8, scope: !8791)
!8795 = !DILocation(line: 2091, column: 24, scope: !8791)
!8796 = !DILocation(line: 2091, column: 29, scope: !8791)
!8797 = !DILocation(line: 2091, column: 11, scope: !8791)
!8798 = !DILocation(line: 2090, column: 11, scope: !8785)
!8799 = !DILocation(line: 2091, column: 44, scope: !8791)
!8800 = !DILocation(line: 2093, column: 7, scope: !8785)
!8801 = !DILocation(line: 2094, column: 12, scope: !8785)
!8802 = !DILocation(line: 2094, column: 16, scope: !8785)
!8803 = !DILocation(line: 2095, column: 12, scope: !8785)
!8804 = !DILocation(line: 2095, column: 16, scope: !8785)
!8805 = !DILocation(line: 2096, column: 12, scope: !8785)
!8806 = !DILocation(line: 2096, column: 17, scope: !8785)
!8807 = !DILocation(line: 2108, column: 19, scope: !8785)
!8808 = !DILocation(line: 2108, column: 49, scope: !8785)
!8809 = !DILocation(line: 2108, column: 51, scope: !8785)
!8810 = !DILocation(line: 2108, column: 12, scope: !8785)
!8811 = !DILocation(line: 2108, column: 18, scope: !8785)
!8812 = !DILocation(line: 2109, column: 7, scope: !8785)
!8813 = !DILocation(line: 2112, column: 11, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8815, file: !3, line: 2112, column: 11)
!8815 = distinct !DILexicalBlock(scope: !8781, file: !3, line: 2111, column: 11)
!8816 = !DILocation(line: 2112, column: 12, scope: !8814)
!8817 = !DILocation(line: 2112, column: 11, scope: !8815)
!8818 = !DILocation(line: 2114, column: 16, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8814, file: !3, line: 2112, column: 17)
!8820 = !DILocation(line: 2114, column: 2, scope: !8819)
!8821 = !DILocation(line: 2115, column: 3, scope: !8819)
!8822 = !DILocation(line: 2115, column: 8, scope: !8819)
!8823 = !DILocation(line: 2115, column: 2, scope: !8819)
!8824 = !DILocation(line: 2115, column: 11, scope: !8819)
!8825 = !DILocation(line: 2116, column: 2, scope: !8819)
!8826 = !DILocation(line: 2118, column: 11, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8815, file: !3, line: 2118, column: 11)
!8828 = !DILocation(line: 2118, column: 12, scope: !8827)
!8829 = !DILocation(line: 2118, column: 11, scope: !8815)
!8830 = !DILocation(line: 2118, column: 19, scope: !8827)
!8831 = !DILocation(line: 2118, column: 18, scope: !8827)
!8832 = !DILocation(line: 2118, column: 17, scope: !8827)
!8833 = !DILocation(line: 2118, column: 16, scope: !8827)
!8834 = !DILocation(line: 2120, column: 13, scope: !8815)
!8835 = !DILocation(line: 2120, column: 12, scope: !8815)
!8836 = !DILocation(line: 2121, column: 12, scope: !8815)
!8837 = !DILocation(line: 2121, column: 17, scope: !8815)
!8838 = !DILocation(line: 2123, column: 19, scope: !8815)
!8839 = !DILocation(line: 2123, column: 30, scope: !8815)
!8840 = !DILocation(line: 2123, column: 35, scope: !8815)
!8841 = !DILocation(line: 2123, column: 42, scope: !8815)
!8842 = !DILocation(line: 2123, column: 47, scope: !8815)
!8843 = !DILocation(line: 2123, column: 41, scope: !8815)
!8844 = !DILocation(line: 2123, column: 28, scope: !8815)
!8845 = !DILocation(line: 2123, column: 56, scope: !8815)
!8846 = !DILocation(line: 2123, column: 12, scope: !8815)
!8847 = !DILocation(line: 2123, column: 18, scope: !8815)
!8848 = !DILocation(line: 2128, column: 16, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8815, file: !3, line: 2128, column: 11)
!8850 = !DILocation(line: 2128, column: 22, scope: !8849)
!8851 = !DILocation(line: 2128, column: 11, scope: !8815)
!8852 = !DILocation(line: 2128, column: 42, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8849, file: !3, line: 2128, column: 35)
!8854 = !DILocation(line: 2128, column: 67, scope: !8853)
!8855 = !DILocation(line: 2133, column: 34, scope: !8591)
!8856 = !DILocation(line: 2133, column: 50, scope: !8591)
!8857 = !DILocation(line: 2133, column: 33, scope: !8591)
!8858 = !DILocation(line: 2133, column: 53, scope: !8591)
!8859 = !DILocation(line: 2133, column: 32, scope: !8591)
!8860 = !DILocation(line: 2133, column: 15, scope: !8591)
!8861 = !DILocation(line: 2133, column: 14, scope: !8591)
!8862 = !DILocation(line: 2135, column: 9, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8591, file: !3, line: 2135, column: 9)
!8864 = !DILocation(line: 2135, column: 18, scope: !8863)
!8865 = !DILocation(line: 2135, column: 9, scope: !8591)
!8866 = !DILocation(line: 2136, column: 36, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8863, file: !3, line: 2135, column: 36)
!8868 = !DILocation(line: 2136, column: 29, scope: !8867)
!8869 = !DILocation(line: 2136, column: 16, scope: !8867)
!8870 = !DILocation(line: 2136, column: 15, scope: !8867)
!8871 = !DILocation(line: 2137, column: 11, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8867, file: !3, line: 2137, column: 11)
!8873 = !DILocation(line: 2137, column: 19, scope: !8872)
!8874 = !DILocation(line: 2137, column: 11, scope: !8867)
!8875 = !DILocation(line: 2138, column: 8, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8872, file: !3, line: 2137, column: 27)
!8877 = !DILocation(line: 2139, column: 2, scope: !8876)
!8878 = !DILocation(line: 2140, column: 11, scope: !8867)
!8879 = !DILocation(line: 2140, column: 10, scope: !8867)
!8880 = !DILocation(line: 2141, column: 7, scope: !8867)
!8881 = !DILocation(line: 2144, column: 10, scope: !8882)
!8882 = distinct !DILexicalBlock(scope: !8591, file: !3, line: 2144, column: 9)
!8883 = !DILocation(line: 2144, column: 9, scope: !8591)
!8884 = !DILocation(line: 2148, column: 15, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8882, file: !3, line: 2144, column: 18)
!8886 = !DILocation(line: 2148, column: 20, scope: !8885)
!8887 = !DILocation(line: 2148, column: 7, scope: !8885)
!8888 = !DILocation(line: 2150, column: 11, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8885, file: !3, line: 2150, column: 11)
!8890 = !DILocation(line: 2150, column: 11, scope: !8885)
!8891 = !DILocation(line: 2152, column: 3, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8889, file: !3, line: 2150, column: 24)
!8893 = !DILocation(line: 2152, column: 8, scope: !8892)
!8894 = !DILocation(line: 2152, column: 2, scope: !8892)
!8895 = !DILocation(line: 2152, column: 11, scope: !8892)
!8896 = !DILocation(line: 2153, column: 7, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8892, file: !3, line: 2153, column: 6)
!8898 = !DILocation(line: 2153, column: 6, scope: !8892)
!8899 = !DILocalVariable(name: "shift", scope: !8900, file: !3, line: 2154, type: !31)
!8900 = distinct !DILexicalBlock(scope: !8897, file: !3, line: 2153, column: 15)
!8901 = !DILocation(line: 2154, column: 8, scope: !8900)
!8902 = !DILocation(line: 2154, column: 14, scope: !8900)
!8903 = !DILocation(line: 2154, column: 19, scope: !8900)
!8904 = !DILocation(line: 2154, column: 25, scope: !8900)
!8905 = !DILocation(line: 2155, column: 31, scope: !8900)
!8906 = !DILocation(line: 2155, column: 36, scope: !8900)
!8907 = !DILocation(line: 2155, column: 44, scope: !8900)
!8908 = !DILocation(line: 2155, column: 16, scope: !8900)
!8909 = !DILocation(line: 2155, column: 4, scope: !8900)
!8910 = !DILocation(line: 2155, column: 9, scope: !8900)
!8911 = !DILocation(line: 2155, column: 15, scope: !8900)
!8912 = !DILocation(line: 2156, column: 19, scope: !8900)
!8913 = !DILocation(line: 2156, column: 18, scope: !8900)
!8914 = !DILocation(line: 2156, column: 4, scope: !8900)
!8915 = !DILocation(line: 2156, column: 9, scope: !8900)
!8916 = !DILocation(line: 2156, column: 17, scope: !8900)
!8917 = !DILocation(line: 2157, column: 10, scope: !8900)
!8918 = !DILocation(line: 2158, column: 4, scope: !8900)
!8919 = !DILocation(line: 2159, column: 2, scope: !8892)
!8920 = !DILocation(line: 2161, column: 16, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !8889, file: !3, line: 2160, column: 13)
!8922 = !DILocation(line: 2161, column: 21, scope: !8921)
!8923 = !DILocation(line: 2161, column: 26, scope: !8921)
!8924 = !DILocation(line: 2161, column: 2, scope: !8921)
!8925 = !DILocation(line: 2162, column: 11, scope: !8921)
!8926 = !DILocation(line: 2162, column: 16, scope: !8921)
!8927 = !DILocation(line: 2162, column: 2, scope: !8921)
!8928 = !DILocation(line: 2165, column: 7, scope: !8885)
!8929 = !DILocation(line: 2168, column: 21, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8882, file: !3, line: 2167, column: 11)
!8931 = !DILocation(line: 2168, column: 7, scope: !8930)
!8932 = !DILocation(line: 2169, column: 8, scope: !8930)
!8933 = !DILocation(line: 2169, column: 13, scope: !8930)
!8934 = !DILocation(line: 2169, column: 7, scope: !8930)
!8935 = !DILocation(line: 2169, column: 16, scope: !8930)
!8936 = !DILocation(line: 2173, column: 11, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8930, file: !3, line: 2173, column: 11)
!8938 = !DILocation(line: 2173, column: 11, scope: !8930)
!8939 = !DILocalVariable(name: "inv", scope: !8940, file: !3, line: 2174, type: !47)
!8940 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 2173, column: 37)
!8941 = !DILocation(line: 2174, column: 13, scope: !8940)
!8942 = !DILocation(line: 2174, column: 17, scope: !8940)
!8943 = !DILocation(line: 2175, column: 24, scope: !8940)
!8944 = !DILocation(line: 2175, column: 2, scope: !8940)
!8945 = !DILocation(line: 2180, column: 16, scope: !8940)
!8946 = !DILocation(line: 2180, column: 29, scope: !8940)
!8947 = !DILocation(line: 2180, column: 4, scope: !8940)
!8948 = !DILocation(line: 2182, column: 8, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8940, file: !3, line: 2182, column: 8)
!8950 = !DILocation(line: 2182, column: 17, scope: !8949)
!8951 = !DILocation(line: 2182, column: 8, scope: !8940)
!8952 = !DILocation(line: 2183, column: 35, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 2182, column: 35)
!8954 = !DILocation(line: 2183, column: 28, scope: !8953)
!8955 = !DILocation(line: 2183, column: 15, scope: !8953)
!8956 = !DILocation(line: 2183, column: 14, scope: !8953)
!8957 = !DILocation(line: 2184, column: 10, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8953, file: !3, line: 2184, column: 10)
!8959 = !DILocation(line: 2184, column: 18, scope: !8958)
!8960 = !DILocation(line: 2184, column: 10, scope: !8953)
!8961 = !DILocation(line: 2185, column: 14, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8958, file: !3, line: 2184, column: 26)
!8963 = !DILocation(line: 2186, column: 8, scope: !8962)
!8964 = !DILocation(line: 2187, column: 10, scope: !8953)
!8965 = !DILocation(line: 2187, column: 9, scope: !8953)
!8966 = !DILocation(line: 2188, column: 6, scope: !8953)
!8967 = !DILocation(line: 2190, column: 18, scope: !8940)
!8968 = !DILocation(line: 2190, column: 23, scope: !8940)
!8969 = !DILocation(line: 2190, column: 4, scope: !8940)
!8970 = !DILocation(line: 2191, column: 18, scope: !8940)
!8971 = !DILocation(line: 2191, column: 4, scope: !8940)
!8972 = !DILocation(line: 2192, column: 8, scope: !8940)
!8973 = !DILocation(line: 2192, column: 7, scope: !8940)
!8974 = !DILocation(line: 2196, column: 2, scope: !8940)
!8975 = !DILocation(line: 2199, column: 14, scope: !8930)
!8976 = !DILocation(line: 2200, column: 13, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8930, file: !3, line: 2200, column: 7)
!8978 = !DILocation(line: 2200, column: 12, scope: !8977)
!8979 = !DILocation(line: 2202, column: 6, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8981, file: !3, line: 2202, column: 6)
!8981 = distinct !DILexicalBlock(scope: !8982, file: !3, line: 2200, column: 21)
!8982 = distinct !DILexicalBlock(scope: !8977, file: !3, line: 2200, column: 7)
!8983 = !DILocation(line: 2202, column: 13, scope: !8980)
!8984 = !DILocation(line: 2202, column: 6, scope: !8981)
!8985 = !DILocation(line: 2203, column: 8, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8987, file: !3, line: 2203, column: 8)
!8987 = distinct !DILexicalBlock(scope: !8980, file: !3, line: 2202, column: 45)
!8988 = !DILocation(line: 2203, column: 14, scope: !8986)
!8989 = !DILocation(line: 2203, column: 28, scope: !8986)
!8990 = !DILocation(line: 2203, column: 31, scope: !8986)
!8991 = !DILocation(line: 2203, column: 8, scope: !8987)
!8992 = !DILocation(line: 2203, column: 44, scope: !8986)
!8993 = !DILocation(line: 2204, column: 4, scope: !8987)
!8994 = !DILocation(line: 2207, column: 4, scope: !8981)
!8995 = !DILocation(line: 2207, column: 5, scope: !8981)
!8996 = !DILocation(line: 2207, column: 3, scope: !8981)
!8997 = !DILocation(line: 2208, column: 6, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8981, file: !3, line: 2208, column: 6)
!8999 = !DILocation(line: 2208, column: 7, scope: !8998)
!9000 = !DILocation(line: 2208, column: 6, scope: !8981)
!9001 = !DILocation(line: 2209, column: 11, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8998, file: !3, line: 2208, column: 11)
!9003 = !DILocation(line: 2210, column: 18, scope: !9002)
!9004 = !DILocation(line: 2210, column: 23, scope: !9002)
!9005 = !DILocation(line: 2210, column: 28, scope: !9002)
!9006 = !DILocation(line: 2210, column: 4, scope: !9002)
!9007 = !DILocation(line: 2211, column: 4, scope: !9002)
!9008 = !DILocation(line: 2212, column: 6, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !8981, file: !3, line: 2212, column: 6)
!9010 = !DILocation(line: 2212, column: 7, scope: !9009)
!9011 = !DILocation(line: 2212, column: 6, scope: !8981)
!9012 = !DILocation(line: 2212, column: 13, scope: !9009)
!9013 = !DILocation(line: 2213, column: 7, scope: !9014)
!9014 = distinct !DILexicalBlock(scope: !8981, file: !3, line: 2213, column: 6)
!9015 = !DILocation(line: 2213, column: 6, scope: !8981)
!9016 = !DILocation(line: 2213, column: 16, scope: !9014)
!9017 = !DILocation(line: 2214, column: 16, scope: !8981)
!9018 = !DILocation(line: 2214, column: 21, scope: !8981)
!9019 = !DILocation(line: 2214, column: 26, scope: !8981)
!9020 = !DILocation(line: 2214, column: 2, scope: !8981)
!9021 = !DILocation(line: 2215, column: 2, scope: !8981)
!9022 = !DILocation(line: 2200, column: 18, scope: !8982)
!9023 = !DILocation(line: 2200, column: 7, scope: !8982)
!9024 = distinct !{!9024, !9025, !9026}
!9025 = !DILocation(line: 2200, column: 7, scope: !8977)
!9026 = !DILocation(line: 2215, column: 2, scope: !8977)
!9027 = !DILocation(line: 2218, column: 11, scope: !9028)
!9028 = distinct !DILexicalBlock(scope: !8930, file: !3, line: 2218, column: 11)
!9029 = !DILocation(line: 2218, column: 18, scope: !9028)
!9030 = !DILocation(line: 2218, column: 11, scope: !8930)
!9031 = !DILocation(line: 2231, column: 13, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !9028, file: !3, line: 2218, column: 50)
!9033 = !DILocation(line: 2231, column: 18, scope: !9032)
!9034 = !DILocation(line: 2231, column: 23, scope: !9032)
!9035 = !DILocation(line: 2231, column: 36, scope: !9032)
!9036 = !DILocation(line: 2231, column: 34, scope: !9032)
!9037 = !DILocation(line: 2231, column: 12, scope: !9032)
!9038 = !DILocation(line: 2231, column: 2, scope: !9032)
!9039 = !DILocation(line: 2231, column: 7, scope: !9032)
!9040 = !DILocation(line: 2231, column: 11, scope: !9032)
!9041 = !DILocation(line: 2234, column: 14, scope: !9032)
!9042 = !DILocation(line: 2234, column: 19, scope: !9032)
!9043 = !DILocation(line: 2234, column: 2, scope: !9032)
!9044 = !DILocation(line: 2235, column: 16, scope: !9032)
!9045 = !DILocation(line: 2235, column: 21, scope: !9032)
!9046 = !DILocation(line: 2235, column: 2, scope: !9032)
!9047 = !DILocation(line: 2236, column: 2, scope: !9032)
!9048 = !DILocation(line: 2249, column: 16, scope: !8591)
!9049 = !DILocation(line: 2249, column: 21, scope: !8591)
!9050 = !DILocation(line: 2249, column: 26, scope: !8591)
!9051 = !DILocation(line: 2249, column: 5, scope: !8591)
!9052 = !DILocation(line: 2250, column: 5, scope: !8591)
!9053 = !DILocation(line: 2254, column: 5, scope: !8591)
!9054 = !DILocation(line: 2256, column: 7, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !8540, file: !3, line: 2256, column: 7)
!9056 = !DILocation(line: 2256, column: 15, scope: !9055)
!9057 = !DILocation(line: 2256, column: 7, scope: !8540)
!9058 = !DILocation(line: 2256, column: 28, scope: !9055)
!9059 = !DILocation(line: 2256, column: 23, scope: !9055)
!9060 = !DILocation(line: 2257, column: 7, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !8540, file: !3, line: 2257, column: 7)
!9062 = !DILocation(line: 2257, column: 15, scope: !9061)
!9063 = !DILocation(line: 2257, column: 7, scope: !8540)
!9064 = !DILocation(line: 2257, column: 28, scope: !9061)
!9065 = !DILocation(line: 2257, column: 23, scope: !9061)
!9066 = !DILocation(line: 2262, column: 7, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !8540, file: !3, line: 2262, column: 7)
!9068 = !DILocation(line: 2262, column: 13, scope: !9067)
!9069 = !DILocation(line: 2262, column: 7, scope: !8540)
!9070 = !DILocation(line: 2262, column: 28, scope: !9067)
!9071 = !DILocation(line: 2262, column: 33, scope: !9067)
!9072 = !DILocation(line: 2262, column: 41, scope: !9067)
!9073 = !DILocation(line: 2262, column: 18, scope: !9067)
!9074 = !DILocation(line: 2266, column: 10, scope: !8540)
!9075 = !DILocation(line: 2266, column: 3, scope: !8540)
!9076 = distinct !DISubprogram(name: "decShiftToMost", scope: !3, file: !3, line: 6679, type: !9077, scopeLine: 6679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!9077 = !DISubroutineType(types: !9078)
!9078 = !{!31, !43, !31, !31}
!9079 = !DILocalVariable(name: "uar", arg: 1, scope: !9076, file: !3, line: 6679, type: !43)
!9080 = !DILocation(line: 6679, column: 33, scope: !9076)
!9081 = !DILocalVariable(name: "digits", arg: 2, scope: !9076, file: !3, line: 6679, type: !31)
!9082 = !DILocation(line: 6679, column: 42, scope: !9076)
!9083 = !DILocalVariable(name: "shift", arg: 3, scope: !9076, file: !3, line: 6679, type: !31)
!9084 = !DILocation(line: 6679, column: 54, scope: !9076)
!9085 = !DILocalVariable(name: "target", scope: !9076, file: !3, line: 6680, type: !43)
!9086 = !DILocation(line: 6680, column: 9, scope: !9076)
!9087 = !DILocalVariable(name: "source", scope: !9076, file: !3, line: 6680, type: !43)
!9088 = !DILocation(line: 6680, column: 18, scope: !9076)
!9089 = !DILocalVariable(name: "first", scope: !9076, file: !3, line: 6680, type: !43)
!9090 = !DILocation(line: 6680, column: 27, scope: !9076)
!9091 = !DILocalVariable(name: "cut", scope: !9076, file: !3, line: 6681, type: !31)
!9092 = !DILocation(line: 6681, column: 7, scope: !9076)
!9093 = !DILocalVariable(name: "next", scope: !9076, file: !3, line: 6682, type: !36)
!9094 = !DILocation(line: 6682, column: 8, scope: !9076)
!9095 = !DILocation(line: 6684, column: 7, scope: !9096)
!9096 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 6684, column: 7)
!9097 = !DILocation(line: 6684, column: 12, scope: !9096)
!9098 = !DILocation(line: 6684, column: 7, scope: !9076)
!9099 = !DILocation(line: 6684, column: 24, scope: !9096)
!9100 = !DILocation(line: 6684, column: 17, scope: !9096)
!9101 = !DILocation(line: 6685, column: 8, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 6685, column: 7)
!9103 = !DILocation(line: 6685, column: 15, scope: !9102)
!9104 = !DILocation(line: 6685, column: 14, scope: !9102)
!9105 = !DILocation(line: 6685, column: 21, scope: !9102)
!9106 = !DILocation(line: 6685, column: 7, scope: !9076)
!9107 = !DILocation(line: 6686, column: 18, scope: !9108)
!9108 = distinct !DILexicalBlock(scope: !9102, file: !3, line: 6685, column: 32)
!9109 = !DILocation(line: 6686, column: 17, scope: !9108)
!9110 = !DILocation(line: 6686, column: 29, scope: !9108)
!9111 = !DILocation(line: 6686, column: 22, scope: !9108)
!9112 = !DILocation(line: 6686, column: 21, scope: !9108)
!9113 = !DILocation(line: 6686, column: 10, scope: !9108)
!9114 = !DILocation(line: 6686, column: 6, scope: !9108)
!9115 = !DILocation(line: 6686, column: 9, scope: !9108)
!9116 = !DILocation(line: 6687, column: 12, scope: !9108)
!9117 = !DILocation(line: 6687, column: 19, scope: !9108)
!9118 = !DILocation(line: 6687, column: 18, scope: !9108)
!9119 = !DILocation(line: 6687, column: 5, scope: !9108)
!9120 = !DILocation(line: 6690, column: 7, scope: !9076)
!9121 = !DILocation(line: 6691, column: 10, scope: !9076)
!9122 = !DILocation(line: 6691, column: 14, scope: !9076)
!9123 = !DILocation(line: 6691, column: 13, scope: !9076)
!9124 = !DILocation(line: 6691, column: 25, scope: !9076)
!9125 = !DILocation(line: 6691, column: 9, scope: !9076)
!9126 = !DILocation(line: 6692, column: 10, scope: !9076)
!9127 = !DILocation(line: 6692, column: 17, scope: !9076)
!9128 = !DILocation(line: 6692, column: 16, scope: !9076)
!9129 = !DILocation(line: 6692, column: 9, scope: !9076)
!9130 = !DILocation(line: 6693, column: 15, scope: !9076)
!9131 = !DILocation(line: 6693, column: 14, scope: !9076)
!9132 = !DILocation(line: 6693, column: 6, scope: !9076)
!9133 = !DILocation(line: 6694, column: 7, scope: !9134)
!9134 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 6694, column: 7)
!9135 = !DILocation(line: 6694, column: 10, scope: !9134)
!9136 = !DILocation(line: 6694, column: 7, scope: !9076)
!9137 = !DILocation(line: 6695, column: 5, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9134, file: !3, line: 6694, column: 15)
!9139 = !DILocation(line: 6695, column: 12, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9141, file: !3, line: 6695, column: 5)
!9141 = distinct !DILexicalBlock(scope: !9138, file: !3, line: 6695, column: 5)
!9142 = !DILocation(line: 6695, column: 20, scope: !9140)
!9143 = !DILocation(line: 6695, column: 18, scope: !9140)
!9144 = !DILocation(line: 6695, column: 5, scope: !9141)
!9145 = !DILocation(line: 6695, column: 54, scope: !9140)
!9146 = !DILocation(line: 6695, column: 53, scope: !9140)
!9147 = !DILocation(line: 6695, column: 46, scope: !9140)
!9148 = !DILocation(line: 6695, column: 52, scope: !9140)
!9149 = !DILocation(line: 6695, column: 45, scope: !9140)
!9150 = !DILocation(line: 6695, column: 31, scope: !9140)
!9151 = !DILocation(line: 6695, column: 41, scope: !9140)
!9152 = !DILocation(line: 6695, column: 5, scope: !9140)
!9153 = distinct !{!9153, !9144, !9154}
!9154 = !DILocation(line: 6695, column: 54, scope: !9141)
!9155 = !DILocation(line: 6696, column: 5, scope: !9138)
!9156 = !DILocation(line: 6698, column: 11, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9134, file: !3, line: 6697, column: 9)
!9158 = !DILocation(line: 6698, column: 15, scope: !9157)
!9159 = !DILocation(line: 6698, column: 14, scope: !9157)
!9160 = !DILocation(line: 6698, column: 32, scope: !9157)
!9161 = !DILocation(line: 6698, column: 10, scope: !9157)
!9162 = !DILocation(line: 6699, column: 5, scope: !9157)
!9163 = !DILocation(line: 6699, column: 12, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9165, file: !3, line: 6699, column: 5)
!9165 = distinct !DILexicalBlock(scope: !9157, file: !3, line: 6699, column: 5)
!9166 = !DILocation(line: 6699, column: 20, scope: !9164)
!9167 = !DILocation(line: 6699, column: 18, scope: !9164)
!9168 = !DILocation(line: 6699, column: 5, scope: !9165)
!9169 = !DILocalVariable(name: "quot", scope: !9170, file: !3, line: 6702, type: !36)
!9170 = distinct !DILexicalBlock(scope: !9164, file: !3, line: 6699, column: 45)
!9171 = !DILocation(line: 6702, column: 7, scope: !9170)
!9172 = !DILocation(line: 6702, column: 12, scope: !9170)
!9173 = !DILocalVariable(name: "rem", scope: !9170, file: !3, line: 6703, type: !36)
!9174 = !DILocation(line: 6703, column: 7, scope: !9170)
!9175 = !DILocation(line: 6703, column: 12, scope: !9170)
!9176 = !DILocation(line: 6703, column: 11, scope: !9170)
!9177 = !DILocation(line: 6703, column: 19, scope: !9170)
!9178 = !DILocation(line: 6703, column: 31, scope: !9170)
!9179 = !DILocation(line: 6703, column: 24, scope: !9170)
!9180 = !DILocation(line: 6703, column: 23, scope: !9170)
!9181 = !DILocation(line: 6703, column: 18, scope: !9170)
!9182 = !DILocation(line: 6704, column: 8, scope: !9170)
!9183 = !DILocation(line: 6704, column: 6, scope: !9170)
!9184 = !DILocation(line: 6709, column: 11, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9170, file: !3, line: 6709, column: 11)
!9186 = !DILocation(line: 6709, column: 19, scope: !9185)
!9187 = !DILocation(line: 6709, column: 17, scope: !9185)
!9188 = !DILocation(line: 6709, column: 11, scope: !9170)
!9189 = !DILocation(line: 6709, column: 40, scope: !9185)
!9190 = !DILocation(line: 6709, column: 34, scope: !9185)
!9191 = !DILocation(line: 6709, column: 27, scope: !9185)
!9192 = !DILocation(line: 6709, column: 33, scope: !9185)
!9193 = !DILocation(line: 6709, column: 26, scope: !9185)
!9194 = !DILocation(line: 6710, column: 12, scope: !9170)
!9195 = !DILocation(line: 6710, column: 31, scope: !9170)
!9196 = !DILocation(line: 6710, column: 30, scope: !9170)
!9197 = !DILocation(line: 6710, column: 16, scope: !9170)
!9198 = !DILocation(line: 6710, column: 15, scope: !9170)
!9199 = !DILocation(line: 6710, column: 11, scope: !9170)
!9200 = !DILocation(line: 6711, column: 7, scope: !9170)
!9201 = !DILocation(line: 6699, column: 31, scope: !9164)
!9202 = !DILocation(line: 6699, column: 41, scope: !9164)
!9203 = !DILocation(line: 6699, column: 5, scope: !9164)
!9204 = distinct !{!9204, !9168, !9205}
!9205 = !DILocation(line: 6711, column: 7, scope: !9165)
!9206 = !DILocation(line: 6715, column: 3, scope: !9076)
!9207 = !DILocation(line: 6715, column: 10, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9209, file: !3, line: 6715, column: 3)
!9209 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 6715, column: 3)
!9210 = !DILocation(line: 6715, column: 18, scope: !9208)
!9211 = !DILocation(line: 6715, column: 16, scope: !9208)
!9212 = !DILocation(line: 6715, column: 3, scope: !9209)
!9213 = !DILocation(line: 6716, column: 19, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9208, file: !3, line: 6715, column: 33)
!9215 = !DILocation(line: 6716, column: 13, scope: !9214)
!9216 = !DILocation(line: 6716, column: 6, scope: !9214)
!9217 = !DILocation(line: 6716, column: 12, scope: !9214)
!9218 = !DILocation(line: 6717, column: 9, scope: !9214)
!9219 = !DILocation(line: 6718, column: 5, scope: !9214)
!9220 = !DILocation(line: 6715, column: 29, scope: !9208)
!9221 = !DILocation(line: 6715, column: 3, scope: !9208)
!9222 = distinct !{!9222, !9212, !9223}
!9223 = !DILocation(line: 6718, column: 5, scope: !9209)
!9224 = !DILocation(line: 6719, column: 10, scope: !9076)
!9225 = !DILocation(line: 6719, column: 17, scope: !9076)
!9226 = !DILocation(line: 6719, column: 16, scope: !9076)
!9227 = !DILocation(line: 6719, column: 3, scope: !9076)
!9228 = !DILocation(line: 6720, column: 3, scope: !9076)
!9229 = distinct !DISubprogram(name: "decGetInt", scope: !3, file: !3, line: 7536, type: !9230, scopeLine: 7536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!9230 = !DISubroutineType(types: !9231)
!9231 = !{!31, !267}
!9232 = !DILocalVariable(name: "dn", arg: 1, scope: !9229, file: !3, line: 7536, type: !267)
!9233 = !DILocation(line: 7536, column: 39, scope: !9229)
!9234 = !DILocalVariable(name: "theInt", scope: !9229, file: !3, line: 7537, type: !31)
!9235 = !DILocation(line: 7537, column: 8, scope: !9229)
!9236 = !DILocalVariable(name: "up", scope: !9229, file: !3, line: 7538, type: !301)
!9237 = !DILocation(line: 7538, column: 15, scope: !9229)
!9238 = !DILocalVariable(name: "got", scope: !9229, file: !3, line: 7539, type: !31)
!9239 = !DILocation(line: 7539, column: 8, scope: !9229)
!9240 = !DILocalVariable(name: "ilength", scope: !9229, file: !3, line: 7540, type: !31)
!9241 = !DILocation(line: 7540, column: 8, scope: !9229)
!9242 = !DILocation(line: 7540, column: 16, scope: !9229)
!9243 = !DILocation(line: 7540, column: 20, scope: !9229)
!9244 = !DILocation(line: 7540, column: 27, scope: !9229)
!9245 = !DILocation(line: 7540, column: 31, scope: !9229)
!9246 = !DILocation(line: 7540, column: 26, scope: !9229)
!9247 = !DILocalVariable(name: "neg", scope: !9229, file: !3, line: 7541, type: !44)
!9248 = !DILocation(line: 7541, column: 8, scope: !9229)
!9249 = !DILocation(line: 7541, column: 12, scope: !9229)
!9250 = !DILocation(line: 7551, column: 7, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9229, file: !3, line: 7551, column: 7)
!9252 = !DILocation(line: 7551, column: 7, scope: !9229)
!9253 = !DILocation(line: 7551, column: 19, scope: !9251)
!9254 = !DILocation(line: 7553, column: 6, scope: !9229)
!9255 = !DILocation(line: 7553, column: 10, scope: !9229)
!9256 = !DILocation(line: 7553, column: 5, scope: !9229)
!9257 = !DILocation(line: 7554, column: 9, scope: !9229)
!9258 = !DILocation(line: 7555, column: 7, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9229, file: !3, line: 7555, column: 7)
!9260 = !DILocation(line: 7555, column: 11, scope: !9259)
!9261 = !DILocation(line: 7555, column: 19, scope: !9259)
!9262 = !DILocation(line: 7555, column: 7, scope: !9229)
!9263 = !DILocation(line: 7557, column: 9, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !9259, file: !3, line: 7555, column: 24)
!9265 = !DILocation(line: 7557, column: 13, scope: !9264)
!9266 = !DILocation(line: 7557, column: 8, scope: !9264)
!9267 = !DILocation(line: 7558, column: 5, scope: !9264)
!9268 = !DILocalVariable(name: "count", scope: !9269, file: !3, line: 7560, type: !31)
!9269 = distinct !DILexicalBlock(scope: !9259, file: !3, line: 7559, column: 9)
!9270 = !DILocation(line: 7560, column: 9, scope: !9269)
!9271 = !DILocation(line: 7560, column: 16, scope: !9269)
!9272 = !DILocation(line: 7560, column: 20, scope: !9269)
!9273 = !DILocation(line: 7560, column: 15, scope: !9269)
!9274 = !DILocation(line: 7562, column: 5, scope: !9269)
!9275 = !DILocation(line: 7562, column: 12, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9277, file: !3, line: 7562, column: 5)
!9277 = distinct !DILexicalBlock(scope: !9269, file: !3, line: 7562, column: 5)
!9278 = !DILocation(line: 7562, column: 17, scope: !9276)
!9279 = !DILocation(line: 7562, column: 5, scope: !9277)
!9280 = !DILocation(line: 7563, column: 12, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9282, file: !3, line: 7563, column: 11)
!9282 = distinct !DILexicalBlock(scope: !9276, file: !3, line: 7562, column: 34)
!9283 = !DILocation(line: 7563, column: 11, scope: !9281)
!9284 = !DILocation(line: 7563, column: 14, scope: !9281)
!9285 = !DILocation(line: 7563, column: 11, scope: !9282)
!9286 = !DILocation(line: 7563, column: 19, scope: !9281)
!9287 = !DILocation(line: 7564, column: 12, scope: !9282)
!9288 = !DILocation(line: 7565, column: 7, scope: !9282)
!9289 = !DILocation(line: 7562, column: 30, scope: !9276)
!9290 = !DILocation(line: 7562, column: 5, scope: !9276)
!9291 = distinct !{!9291, !9279, !9292}
!9292 = !DILocation(line: 7565, column: 7, scope: !9277)
!9293 = !DILocation(line: 7566, column: 9, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9269, file: !3, line: 7566, column: 9)
!9295 = !DILocation(line: 7566, column: 14, scope: !9294)
!9296 = !DILocation(line: 7566, column: 9, scope: !9269)
!9297 = !DILocation(line: 7566, column: 22, scope: !9294)
!9298 = !DILocation(line: 7566, column: 19, scope: !9294)
!9299 = !DILocalVariable(name: "rem", scope: !9300, file: !3, line: 7568, type: !31)
!9300 = distinct !DILexicalBlock(scope: !9294, file: !3, line: 7567, column: 11)
!9301 = !DILocation(line: 7568, column: 11, scope: !9300)
!9302 = !DILocation(line: 7571, column: 9, scope: !9300)
!9303 = !DILocation(line: 7571, column: 8, scope: !9300)
!9304 = !DILocation(line: 7572, column: 7, scope: !9300)
!9305 = !DILocation(line: 7572, column: 6, scope: !9300)
!9306 = !DILocation(line: 7572, column: 10, scope: !9300)
!9307 = !DILocation(line: 7572, column: 24, scope: !9300)
!9308 = !DILocation(line: 7572, column: 17, scope: !9300)
!9309 = !DILocation(line: 7572, column: 16, scope: !9300)
!9310 = !DILocation(line: 7572, column: 9, scope: !9300)
!9311 = !DILocation(line: 7572, column: 5, scope: !9300)
!9312 = !DILocation(line: 7577, column: 11, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9300, file: !3, line: 7577, column: 11)
!9314 = !DILocation(line: 7577, column: 14, scope: !9313)
!9315 = !DILocation(line: 7577, column: 11, scope: !9300)
!9316 = !DILocation(line: 7577, column: 19, scope: !9313)
!9317 = !DILocation(line: 7579, column: 19, scope: !9300)
!9318 = !DILocation(line: 7579, column: 18, scope: !9300)
!9319 = !DILocation(line: 7579, column: 10, scope: !9300)
!9320 = !DILocation(line: 7580, column: 9, scope: !9300)
!9321 = !DILocation(line: 7586, column: 7, scope: !9322)
!9322 = distinct !DILexicalBlock(scope: !9229, file: !3, line: 7586, column: 7)
!9323 = !DILocation(line: 7586, column: 10, scope: !9322)
!9324 = !DILocation(line: 7586, column: 7, scope: !9229)
!9325 = !DILocation(line: 7586, column: 24, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9322, file: !3, line: 7586, column: 15)
!9327 = !DILocation(line: 7586, column: 23, scope: !9326)
!9328 = !DILocation(line: 7586, column: 22, scope: !9326)
!9329 = !DILocation(line: 7586, column: 31, scope: !9326)
!9330 = !DILocation(line: 7586, column: 44, scope: !9326)
!9331 = !DILocation(line: 7586, column: 47, scope: !9326)
!9332 = !DILocation(line: 7588, column: 7, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9229, file: !3, line: 7588, column: 7)
!9334 = !DILocation(line: 7588, column: 14, scope: !9333)
!9335 = !DILocation(line: 7588, column: 7, scope: !9229)
!9336 = !DILocalVariable(name: "save", scope: !9337, file: !3, line: 7589, type: !31)
!9337 = distinct !DILexicalBlock(scope: !9333, file: !3, line: 7588, column: 19)
!9338 = !DILocation(line: 7589, column: 9, scope: !9337)
!9339 = !DILocation(line: 7589, column: 14, scope: !9337)
!9340 = !DILocation(line: 7591, column: 5, scope: !9337)
!9341 = !DILocation(line: 7591, column: 12, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !9343, file: !3, line: 7591, column: 5)
!9343 = distinct !DILexicalBlock(scope: !9337, file: !3, line: 7591, column: 5)
!9344 = !DILocation(line: 7591, column: 16, scope: !9342)
!9345 = !DILocation(line: 7591, column: 15, scope: !9342)
!9346 = !DILocation(line: 7591, column: 5, scope: !9343)
!9347 = !DILocation(line: 7592, column: 16, scope: !9348)
!9348 = distinct !DILexicalBlock(scope: !9342, file: !3, line: 7591, column: 31)
!9349 = !DILocation(line: 7592, column: 15, scope: !9348)
!9350 = !DILocation(line: 7592, column: 26, scope: !9348)
!9351 = !DILocation(line: 7592, column: 19, scope: !9348)
!9352 = !DILocation(line: 7592, column: 18, scope: !9348)
!9353 = !DILocation(line: 7592, column: 13, scope: !9348)
!9354 = !DILocation(line: 7593, column: 10, scope: !9348)
!9355 = !DILocation(line: 7594, column: 7, scope: !9348)
!9356 = !DILocation(line: 7591, column: 27, scope: !9342)
!9357 = !DILocation(line: 7591, column: 5, scope: !9342)
!9358 = distinct !{!9358, !9346, !9359}
!9359 = !DILocation(line: 7594, column: 7, scope: !9343)
!9360 = !DILocation(line: 7595, column: 9, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9337, file: !3, line: 7595, column: 9)
!9362 = !DILocation(line: 7595, column: 16, scope: !9361)
!9363 = !DILocation(line: 7595, column: 9, scope: !9337)
!9364 = !DILocation(line: 7596, column: 11, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 7596, column: 11)
!9366 = distinct !DILexicalBlock(scope: !9361, file: !3, line: 7595, column: 22)
!9367 = !DILocation(line: 7596, column: 30, scope: !9365)
!9368 = !DILocation(line: 7596, column: 33, scope: !9365)
!9369 = !DILocation(line: 7596, column: 23, scope: !9365)
!9370 = !DILocation(line: 7596, column: 17, scope: !9365)
!9371 = !DILocation(line: 7596, column: 51, scope: !9365)
!9372 = !DILocation(line: 7596, column: 53, scope: !9365)
!9373 = !DILocation(line: 7596, column: 49, scope: !9365)
!9374 = !DILocation(line: 7596, column: 44, scope: !9365)
!9375 = !DILocation(line: 7596, column: 42, scope: !9365)
!9376 = !DILocation(line: 7596, column: 11, scope: !9366)
!9377 = !DILocation(line: 7596, column: 65, scope: !9365)
!9378 = !DILocation(line: 7596, column: 58, scope: !9365)
!9379 = !DILocation(line: 7598, column: 17, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 7598, column: 17)
!9381 = !DILocation(line: 7598, column: 21, scope: !9380)
!9382 = !DILocation(line: 7598, column: 24, scope: !9380)
!9383 = !DILocation(line: 7598, column: 30, scope: !9380)
!9384 = !DILocation(line: 7598, column: 17, scope: !9365)
!9385 = !DILocation(line: 7598, column: 50, scope: !9380)
!9386 = !DILocation(line: 7598, column: 43, scope: !9380)
!9387 = !DILocation(line: 7599, column: 18, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9380, file: !3, line: 7599, column: 17)
!9389 = !DILocation(line: 7599, column: 22, scope: !9388)
!9390 = !DILocation(line: 7599, column: 25, scope: !9388)
!9391 = !DILocation(line: 7599, column: 31, scope: !9388)
!9392 = !DILocation(line: 7599, column: 17, scope: !9380)
!9393 = !DILocation(line: 7599, column: 50, scope: !9388)
!9394 = !DILocation(line: 7599, column: 43, scope: !9388)
!9395 = !DILocation(line: 7600, column: 11, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 7600, column: 11)
!9397 = !DILocation(line: 7600, column: 18, scope: !9396)
!9398 = !DILocation(line: 7600, column: 11, scope: !9366)
!9399 = !DILocation(line: 7600, column: 31, scope: !9396)
!9400 = !DILocation(line: 7600, column: 30, scope: !9396)
!9401 = !DILocation(line: 7600, column: 24, scope: !9396)
!9402 = !DILocation(line: 7601, column: 7, scope: !9366)
!9403 = !DILocation(line: 7602, column: 5, scope: !9337)
!9404 = !DILocation(line: 7604, column: 7, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9229, file: !3, line: 7604, column: 7)
!9406 = !DILocation(line: 7604, column: 14, scope: !9405)
!9407 = !DILocation(line: 7604, column: 7, scope: !9229)
!9408 = !DILocation(line: 7605, column: 9, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9410, file: !3, line: 7605, column: 9)
!9410 = distinct !DILexicalBlock(scope: !9405, file: !3, line: 7604, column: 19)
!9411 = !DILocation(line: 7605, column: 15, scope: !9409)
!9412 = !DILocation(line: 7605, column: 9, scope: !9410)
!9413 = !DILocation(line: 7605, column: 19, scope: !9409)
!9414 = !DILocation(line: 7606, column: 5, scope: !9410)
!9415 = !DILocation(line: 7609, column: 7, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9229, file: !3, line: 7609, column: 7)
!9417 = !DILocation(line: 7609, column: 7, scope: !9229)
!9418 = !DILocation(line: 7609, column: 20, scope: !9416)
!9419 = !DILocation(line: 7609, column: 19, scope: !9416)
!9420 = !DILocation(line: 7609, column: 18, scope: !9416)
!9421 = !DILocation(line: 7609, column: 12, scope: !9416)
!9422 = !DILocation(line: 7610, column: 10, scope: !9229)
!9423 = !DILocation(line: 7610, column: 3, scope: !9229)
!9424 = !DILocation(line: 7611, column: 3, scope: !9229)
!9425 = distinct !DISubprogram(name: "decNumberQuantize", scope: !3, file: !3, line: 2287, type: !2989, scopeLine: 2288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!9426 = !DILocalVariable(name: "res", arg: 1, scope: !9425, file: !3, line: 2287, type: !47)
!9427 = !DILocation(line: 2287, column: 42, scope: !9425)
!9428 = !DILocalVariable(name: "lhs", arg: 2, scope: !9425, file: !3, line: 2287, type: !267)
!9429 = !DILocation(line: 2287, column: 64, scope: !9425)
!9430 = !DILocalVariable(name: "rhs", arg: 3, scope: !9425, file: !3, line: 2288, type: !267)
!9431 = !DILocation(line: 2288, column: 27, scope: !9425)
!9432 = !DILocalVariable(name: "set", arg: 4, scope: !9425, file: !3, line: 2288, type: !269)
!9433 = !DILocation(line: 2288, column: 44, scope: !9425)
!9434 = !DILocalVariable(name: "status", scope: !9425, file: !3, line: 2289, type: !36)
!9435 = !DILocation(line: 2289, column: 8, scope: !9425)
!9436 = !DILocation(line: 2290, column: 17, scope: !9425)
!9437 = !DILocation(line: 2290, column: 22, scope: !9425)
!9438 = !DILocation(line: 2290, column: 27, scope: !9425)
!9439 = !DILocation(line: 2290, column: 32, scope: !9425)
!9440 = !DILocation(line: 2290, column: 3, scope: !9425)
!9441 = !DILocation(line: 2291, column: 7, scope: !9442)
!9442 = distinct !DILexicalBlock(scope: !9425, file: !3, line: 2291, column: 7)
!9443 = !DILocation(line: 2291, column: 13, scope: !9442)
!9444 = !DILocation(line: 2291, column: 7, scope: !9425)
!9445 = !DILocation(line: 2291, column: 28, scope: !9442)
!9446 = !DILocation(line: 2291, column: 33, scope: !9442)
!9447 = !DILocation(line: 2291, column: 41, scope: !9442)
!9448 = !DILocation(line: 2291, column: 18, scope: !9442)
!9449 = !DILocation(line: 2292, column: 10, scope: !9425)
!9450 = !DILocation(line: 2292, column: 3, scope: !9425)
!9451 = distinct !DISubprogram(name: "decQuantizeOp", scope: !3, file: !3, line: 5825, type: !2323, scopeLine: 5827, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!9452 = !DILocalVariable(name: "res", arg: 1, scope: !9451, file: !3, line: 5825, type: !47)
!9453 = !DILocation(line: 5825, column: 45, scope: !9451)
!9454 = !DILocalVariable(name: "lhs", arg: 2, scope: !9451, file: !3, line: 5825, type: !267)
!9455 = !DILocation(line: 5825, column: 67, scope: !9451)
!9456 = !DILocalVariable(name: "rhs", arg: 3, scope: !9451, file: !3, line: 5826, type: !267)
!9457 = !DILocation(line: 5826, column: 23, scope: !9451)
!9458 = !DILocalVariable(name: "set", arg: 4, scope: !9451, file: !3, line: 5826, type: !269)
!9459 = !DILocation(line: 5826, column: 40, scope: !9451)
!9460 = !DILocalVariable(name: "quant", arg: 5, scope: !9451, file: !3, line: 5827, type: !44)
!9461 = !DILocation(line: 5827, column: 11, scope: !9451)
!9462 = !DILocalVariable(name: "status", arg: 6, scope: !9451, file: !3, line: 5827, type: !59)
!9463 = !DILocation(line: 5827, column: 24, scope: !9451)
!9464 = !DILocalVariable(name: "inrhs", scope: !9451, file: !3, line: 5832, type: !267)
!9465 = !DILocation(line: 5832, column: 20, scope: !9451)
!9466 = !DILocation(line: 5832, column: 26, scope: !9451)
!9467 = !DILocalVariable(name: "reqdigits", scope: !9451, file: !3, line: 5833, type: !31)
!9468 = !DILocation(line: 5833, column: 7, scope: !9451)
!9469 = !DILocation(line: 5833, column: 17, scope: !9451)
!9470 = !DILocation(line: 5833, column: 22, scope: !9451)
!9471 = !DILocalVariable(name: "reqexp", scope: !9451, file: !3, line: 5834, type: !31)
!9472 = !DILocation(line: 5834, column: 7, scope: !9451)
!9473 = !DILocalVariable(name: "residue", scope: !9451, file: !3, line: 5835, type: !31)
!9474 = !DILocation(line: 5835, column: 7, scope: !9451)
!9475 = !DILocalVariable(name: "etiny", scope: !9451, file: !3, line: 5836, type: !31)
!9476 = !DILocation(line: 5836, column: 7, scope: !9451)
!9477 = !DILocation(line: 5836, column: 13, scope: !9451)
!9478 = !DILocation(line: 5836, column: 18, scope: !9451)
!9479 = !DILocation(line: 5836, column: 24, scope: !9451)
!9480 = !DILocation(line: 5836, column: 33, scope: !9451)
!9481 = !DILocation(line: 5836, column: 22, scope: !9451)
!9482 = !DILocation(line: 5842, column: 3, scope: !9451)
!9483 = !DILocation(line: 5861, column: 9, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9485, file: !3, line: 5861, column: 9)
!9485 = distinct !DILexicalBlock(scope: !9451, file: !3, line: 5842, column: 6)
!9486 = !DILocation(line: 5861, column: 9, scope: !9485)
!9487 = !DILocation(line: 5863, column: 11, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9489, file: !3, line: 5863, column: 11)
!9489 = distinct !DILexicalBlock(scope: !9484, file: !3, line: 5861, column: 22)
!9490 = !DILocation(line: 5863, column: 23, scope: !9488)
!9491 = !DILocation(line: 5863, column: 11, scope: !9489)
!9492 = !DILocation(line: 5864, column: 10, scope: !9488)
!9493 = !DILocation(line: 5864, column: 15, scope: !9488)
!9494 = !DILocation(line: 5864, column: 20, scope: !9488)
!9495 = !DILocation(line: 5864, column: 25, scope: !9488)
!9496 = !DILocation(line: 5864, column: 30, scope: !9488)
!9497 = !DILocation(line: 5864, column: 2, scope: !9488)
!9498 = !DILocation(line: 5866, column: 17, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9488, file: !3, line: 5866, column: 16)
!9500 = !DILocation(line: 5866, column: 22, scope: !9499)
!9501 = !DILocation(line: 5866, column: 29, scope: !9499)
!9502 = !DILocation(line: 5866, column: 34, scope: !9499)
!9503 = !DILocation(line: 5866, column: 27, scope: !9499)
!9504 = !DILocation(line: 5866, column: 40, scope: !9499)
!9505 = !DILocation(line: 5866, column: 16, scope: !9488)
!9506 = !DILocation(line: 5867, column: 3, scope: !9499)
!9507 = !DILocation(line: 5867, column: 9, scope: !9499)
!9508 = !DILocation(line: 5867, column: 2, scope: !9499)
!9509 = !DILocation(line: 5869, column: 26, scope: !9499)
!9510 = !DILocation(line: 5869, column: 31, scope: !9499)
!9511 = !DILocation(line: 5869, column: 12, scope: !9499)
!9512 = !DILocation(line: 5870, column: 7, scope: !9489)
!9513 = !DILocation(line: 5874, column: 9, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9485, file: !3, line: 5874, column: 9)
!9515 = !DILocation(line: 5874, column: 9, scope: !9485)
!9516 = !DILocation(line: 5874, column: 23, scope: !9514)
!9517 = !DILocation(line: 5874, column: 30, scope: !9514)
!9518 = !DILocation(line: 5874, column: 22, scope: !9514)
!9519 = !DILocation(line: 5874, column: 16, scope: !9514)
!9520 = !DILocation(line: 5879, column: 24, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !9514, file: !3, line: 5875, column: 11)
!9522 = !DILocation(line: 5879, column: 14, scope: !9521)
!9523 = !DILocation(line: 5879, column: 13, scope: !9521)
!9524 = !DILocation(line: 5886, column: 9, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9485, file: !3, line: 5886, column: 9)
!9526 = !DILocation(line: 5886, column: 15, scope: !9525)
!9527 = !DILocation(line: 5887, column: 6, scope: !9525)
!9528 = !DILocation(line: 5887, column: 9, scope: !9525)
!9529 = !DILocation(line: 5887, column: 15, scope: !9525)
!9530 = !DILocation(line: 5887, column: 24, scope: !9525)
!9531 = !DILocation(line: 5887, column: 27, scope: !9525)
!9532 = !DILocation(line: 5887, column: 33, scope: !9525)
!9533 = !DILocation(line: 5888, column: 6, scope: !9525)
!9534 = !DILocation(line: 5888, column: 10, scope: !9525)
!9535 = !DILocation(line: 5888, column: 17, scope: !9525)
!9536 = !DILocation(line: 5888, column: 16, scope: !9525)
!9537 = !DILocation(line: 5889, column: 6, scope: !9525)
!9538 = !DILocation(line: 5889, column: 10, scope: !9525)
!9539 = !DILocation(line: 5889, column: 17, scope: !9525)
!9540 = !DILocation(line: 5889, column: 22, scope: !9525)
!9541 = !DILocation(line: 5889, column: 16, scope: !9525)
!9542 = !DILocation(line: 5886, column: 9, scope: !9485)
!9543 = !DILocation(line: 5890, column: 8, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9525, file: !3, line: 5889, column: 29)
!9545 = !DILocation(line: 5890, column: 14, scope: !9544)
!9546 = !DILocation(line: 5891, column: 7, scope: !9544)
!9547 = !DILocation(line: 5894, column: 9, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9485, file: !3, line: 5894, column: 9)
!9549 = !DILocation(line: 5894, column: 9, scope: !9485)
!9550 = !DILocation(line: 5895, column: 21, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9548, file: !3, line: 5894, column: 22)
!9552 = !DILocation(line: 5895, column: 26, scope: !9551)
!9553 = !DILocation(line: 5895, column: 7, scope: !9551)
!9554 = !DILocation(line: 5896, column: 21, scope: !9551)
!9555 = !DILocation(line: 5896, column: 7, scope: !9551)
!9556 = !DILocation(line: 5896, column: 12, scope: !9551)
!9557 = !DILocation(line: 5896, column: 20, scope: !9551)
!9558 = !DILocation(line: 5900, column: 7, scope: !9551)
!9559 = !DILocalVariable(name: "adjust", scope: !9560, file: !3, line: 5902, type: !31)
!9560 = distinct !DILexicalBlock(scope: !9548, file: !3, line: 5901, column: 11)
!9561 = !DILocation(line: 5902, column: 11, scope: !9560)
!9562 = !DILocation(line: 5902, column: 18, scope: !9560)
!9563 = !DILocation(line: 5902, column: 25, scope: !9560)
!9564 = !DILocation(line: 5902, column: 30, scope: !9560)
!9565 = !DILocation(line: 5902, column: 24, scope: !9560)
!9566 = !DILocation(line: 5904, column: 12, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9560, file: !3, line: 5904, column: 11)
!9568 = !DILocation(line: 5904, column: 17, scope: !9567)
!9569 = !DILocation(line: 5904, column: 24, scope: !9567)
!9570 = !DILocation(line: 5904, column: 23, scope: !9567)
!9571 = !DILocation(line: 5904, column: 32, scope: !9567)
!9572 = !DILocation(line: 5904, column: 31, scope: !9567)
!9573 = !DILocation(line: 5904, column: 11, scope: !9560)
!9574 = !DILocation(line: 5905, column: 3, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9567, file: !3, line: 5904, column: 43)
!9576 = !DILocation(line: 5905, column: 9, scope: !9575)
!9577 = !DILocation(line: 5906, column: 2, scope: !9575)
!9578 = !DILocation(line: 5909, column: 11, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9560, file: !3, line: 5909, column: 11)
!9580 = !DILocation(line: 5909, column: 17, scope: !9579)
!9581 = !DILocation(line: 5909, column: 11, scope: !9560)
!9582 = !DILocalVariable(name: "workset", scope: !9583, file: !3, line: 5912, type: !270)
!9583 = distinct !DILexicalBlock(scope: !9579, file: !3, line: 5909, column: 21)
!9584 = !DILocation(line: 5912, column: 13, scope: !9583)
!9585 = !DILocation(line: 5913, column: 11, scope: !9583)
!9586 = !DILocation(line: 5913, column: 10, scope: !9583)
!9587 = !DILocation(line: 5914, column: 17, scope: !9583)
!9588 = !DILocation(line: 5914, column: 22, scope: !9583)
!9589 = !DILocation(line: 5914, column: 29, scope: !9583)
!9590 = !DILocation(line: 5914, column: 28, scope: !9583)
!9591 = !DILocation(line: 5914, column: 10, scope: !9583)
!9592 = !DILocation(line: 5914, column: 16, scope: !9583)
!9593 = !DILocation(line: 5916, column: 13, scope: !9583)
!9594 = !DILocation(line: 5916, column: 18, scope: !9583)
!9595 = !DILocation(line: 5916, column: 43, scope: !9583)
!9596 = !DILocation(line: 5916, column: 2, scope: !9583)
!9597 = !DILocation(line: 5917, column: 16, scope: !9583)
!9598 = !DILocation(line: 5917, column: 31, scope: !9583)
!9599 = !DILocation(line: 5917, column: 40, scope: !9583)
!9600 = !DILocation(line: 5917, column: 2, scope: !9583)
!9601 = !DILocation(line: 5918, column: 9, scope: !9583)
!9602 = !DILocation(line: 5921, column: 6, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9583, file: !3, line: 5921, column: 6)
!9604 = !DILocation(line: 5921, column: 11, scope: !9603)
!9605 = !DILocation(line: 5921, column: 20, scope: !9603)
!9606 = !DILocation(line: 5921, column: 19, scope: !9603)
!9607 = !DILocation(line: 5921, column: 6, scope: !9583)
!9608 = !DILocation(line: 5924, column: 8, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9610, file: !3, line: 5924, column: 8)
!9610 = distinct !DILexicalBlock(scope: !9603, file: !3, line: 5921, column: 28)
!9611 = !DILocation(line: 5924, column: 13, scope: !9609)
!9612 = !DILocation(line: 5924, column: 21, scope: !9609)
!9613 = !DILocation(line: 5924, column: 19, scope: !9609)
!9614 = !DILocation(line: 5924, column: 8, scope: !9610)
!9615 = !DILocation(line: 5925, column: 7, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9609, file: !3, line: 5924, column: 32)
!9617 = !DILocation(line: 5925, column: 13, scope: !9616)
!9618 = !DILocation(line: 5926, column: 7, scope: !9616)
!9619 = !DILocation(line: 5926, column: 13, scope: !9616)
!9620 = !DILocation(line: 5927, column: 6, scope: !9616)
!9621 = !DILocation(line: 5929, column: 31, scope: !9610)
!9622 = !DILocation(line: 5929, column: 36, scope: !9610)
!9623 = !DILocation(line: 5929, column: 41, scope: !9610)
!9624 = !DILocation(line: 5929, column: 46, scope: !9610)
!9625 = !DILocation(line: 5929, column: 16, scope: !9610)
!9626 = !DILocation(line: 5929, column: 4, scope: !9610)
!9627 = !DILocation(line: 5929, column: 9, scope: !9610)
!9628 = !DILocation(line: 5929, column: 15, scope: !9610)
!9629 = !DILocation(line: 5930, column: 4, scope: !9610)
!9630 = !DILocation(line: 5930, column: 9, scope: !9610)
!9631 = !DILocation(line: 5930, column: 17, scope: !9610)
!9632 = !DILocation(line: 5931, column: 4, scope: !9610)
!9633 = !DILocation(line: 5935, column: 2, scope: !9583)
!9634 = !DILocation(line: 5940, column: 16, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9579, file: !3, line: 5936, column: 29)
!9636 = !DILocation(line: 5940, column: 21, scope: !9635)
!9637 = !DILocation(line: 5940, column: 2, scope: !9635)
!9638 = !DILocation(line: 5942, column: 6, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9635, file: !3, line: 5942, column: 6)
!9640 = !DILocation(line: 5942, column: 12, scope: !9639)
!9641 = !DILocation(line: 5942, column: 6, scope: !9635)
!9642 = !DILocation(line: 5943, column: 31, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9639, file: !3, line: 5942, column: 16)
!9644 = !DILocation(line: 5943, column: 36, scope: !9643)
!9645 = !DILocation(line: 5943, column: 41, scope: !9643)
!9646 = !DILocation(line: 5943, column: 46, scope: !9643)
!9647 = !DILocation(line: 5943, column: 55, scope: !9643)
!9648 = !DILocation(line: 5943, column: 54, scope: !9643)
!9649 = !DILocation(line: 5943, column: 16, scope: !9643)
!9650 = !DILocation(line: 5943, column: 4, scope: !9643)
!9651 = !DILocation(line: 5943, column: 9, scope: !9643)
!9652 = !DILocation(line: 5943, column: 15, scope: !9643)
!9653 = !DILocation(line: 5944, column: 19, scope: !9643)
!9654 = !DILocation(line: 5944, column: 4, scope: !9643)
!9655 = !DILocation(line: 5944, column: 9, scope: !9643)
!9656 = !DILocation(line: 5944, column: 17, scope: !9643)
!9657 = !DILocation(line: 5945, column: 4, scope: !9643)
!9658 = !DILocation(line: 5951, column: 9, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !9485, file: !3, line: 5951, column: 9)
!9660 = !DILocation(line: 5951, column: 14, scope: !9659)
!9661 = !DILocation(line: 5951, column: 23, scope: !9659)
!9662 = !DILocation(line: 5951, column: 28, scope: !9659)
!9663 = !DILocation(line: 5951, column: 33, scope: !9659)
!9664 = !DILocation(line: 5951, column: 38, scope: !9659)
!9665 = !DILocation(line: 5951, column: 32, scope: !9659)
!9666 = !DILocation(line: 5951, column: 44, scope: !9659)
!9667 = !DILocation(line: 5951, column: 22, scope: !9659)
!9668 = !DILocation(line: 5951, column: 9, scope: !9485)
!9669 = !DILocation(line: 5952, column: 8, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !9659, file: !3, line: 5951, column: 48)
!9671 = !DILocation(line: 5952, column: 14, scope: !9670)
!9672 = !DILocation(line: 5953, column: 7, scope: !9670)
!9673 = !DILocation(line: 5956, column: 19, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9659, file: !3, line: 5955, column: 11)
!9675 = !DILocation(line: 5956, column: 24, scope: !9674)
!9676 = !DILocation(line: 5956, column: 39, scope: !9674)
!9677 = !DILocation(line: 5956, column: 7, scope: !9674)
!9678 = !DILocation(line: 5957, column: 8, scope: !9674)
!9679 = !DILocation(line: 5957, column: 14, scope: !9674)
!9680 = !DILocation(line: 5959, column: 5, scope: !9485)
!9681 = !DILocation(line: 5965, column: 10, scope: !9451)
!9682 = !DILocation(line: 5965, column: 3, scope: !9451)
!9683 = distinct !DISubprogram(name: "decNumberNormalize", scope: !3, file: !3, line: 2307, type: !2287, scopeLine: 2308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!9684 = !DILocalVariable(name: "res", arg: 1, scope: !9683, file: !3, line: 2307, type: !47)
!9685 = !DILocation(line: 2307, column: 43, scope: !9683)
!9686 = !DILocalVariable(name: "rhs", arg: 2, scope: !9683, file: !3, line: 2307, type: !267)
!9687 = !DILocation(line: 2307, column: 65, scope: !9683)
!9688 = !DILocalVariable(name: "set", arg: 3, scope: !9683, file: !3, line: 2308, type: !269)
!9689 = !DILocation(line: 2308, column: 23, scope: !9683)
!9690 = !DILocation(line: 2309, column: 26, scope: !9683)
!9691 = !DILocation(line: 2309, column: 31, scope: !9683)
!9692 = !DILocation(line: 2309, column: 36, scope: !9683)
!9693 = !DILocation(line: 2309, column: 10, scope: !9683)
!9694 = !DILocation(line: 2309, column: 3, scope: !9683)
!9695 = distinct !DISubprogram(name: "decNumberReduce", scope: !3, file: !3, line: 2312, type: !2287, scopeLine: 2313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!9696 = !DILocalVariable(name: "res", arg: 1, scope: !9695, file: !3, line: 2312, type: !47)
!9697 = !DILocation(line: 2312, column: 40, scope: !9695)
!9698 = !DILocalVariable(name: "rhs", arg: 2, scope: !9695, file: !3, line: 2312, type: !267)
!9699 = !DILocation(line: 2312, column: 62, scope: !9695)
!9700 = !DILocalVariable(name: "set", arg: 3, scope: !9695, file: !3, line: 2313, type: !269)
!9701 = !DILocation(line: 2313, column: 20, scope: !9695)
!9702 = !DILocalVariable(name: "status", scope: !9695, file: !3, line: 2317, type: !36)
!9703 = !DILocation(line: 2317, column: 8, scope: !9695)
!9704 = !DILocalVariable(name: "residue", scope: !9695, file: !3, line: 2318, type: !31)
!9705 = !DILocation(line: 2318, column: 8, scope: !9695)
!9706 = !DILocalVariable(name: "dropped", scope: !9695, file: !3, line: 2319, type: !31)
!9707 = !DILocation(line: 2319, column: 8, scope: !9695)
!9708 = !DILocation(line: 2325, column: 3, scope: !9695)
!9709 = !DILocation(line: 2339, column: 9, scope: !9710)
!9710 = distinct !DILexicalBlock(scope: !9711, file: !3, line: 2339, column: 9)
!9711 = distinct !DILexicalBlock(scope: !9695, file: !3, line: 2325, column: 6)
!9712 = !DILocation(line: 2339, column: 9, scope: !9711)
!9713 = !DILocation(line: 2340, column: 15, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9710, file: !3, line: 2339, column: 30)
!9715 = !DILocation(line: 2340, column: 20, scope: !9714)
!9716 = !DILocation(line: 2340, column: 31, scope: !9714)
!9717 = !DILocation(line: 2340, column: 7, scope: !9714)
!9718 = !DILocation(line: 2341, column: 7, scope: !9714)
!9719 = !DILocation(line: 2345, column: 16, scope: !9711)
!9720 = !DILocation(line: 2345, column: 21, scope: !9711)
!9721 = !DILocation(line: 2345, column: 26, scope: !9711)
!9722 = !DILocation(line: 2345, column: 5, scope: !9711)
!9723 = !DILocation(line: 2346, column: 5, scope: !9711)
!9724 = !DILocation(line: 2347, column: 13, scope: !9711)
!9725 = !DILocation(line: 2347, column: 18, scope: !9711)
!9726 = !DILocation(line: 2347, column: 5, scope: !9711)
!9727 = !DILocation(line: 2349, column: 5, scope: !9711)
!9728 = !DILocation(line: 2354, column: 7, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9695, file: !3, line: 2354, column: 7)
!9730 = !DILocation(line: 2354, column: 13, scope: !9729)
!9731 = !DILocation(line: 2354, column: 7, scope: !9695)
!9732 = !DILocation(line: 2354, column: 28, scope: !9729)
!9733 = !DILocation(line: 2354, column: 33, scope: !9729)
!9734 = !DILocation(line: 2354, column: 41, scope: !9729)
!9735 = !DILocation(line: 2354, column: 18, scope: !9729)
!9736 = !DILocation(line: 2355, column: 10, scope: !9695)
!9737 = !DILocation(line: 2355, column: 3, scope: !9695)
!9738 = distinct !DISubprogram(name: "decTrim", scope: !3, file: !3, line: 6585, type: !9739, scopeLine: 6586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!9739 = !DISubroutineType(types: !9740)
!9740 = !{!47, !47, !269, !44, !44, !1691}
!9741 = !DILocalVariable(name: "dn", arg: 1, scope: !9738, file: !3, line: 6585, type: !47)
!9742 = !DILocation(line: 6585, column: 39, scope: !9738)
!9743 = !DILocalVariable(name: "set", arg: 2, scope: !9738, file: !3, line: 6585, type: !269)
!9744 = !DILocation(line: 6585, column: 55, scope: !9738)
!9745 = !DILocalVariable(name: "all", arg: 3, scope: !9738, file: !3, line: 6585, type: !44)
!9746 = !DILocation(line: 6585, column: 65, scope: !9738)
!9747 = !DILocalVariable(name: "noclamp", arg: 4, scope: !9738, file: !3, line: 6586, type: !44)
!9748 = !DILocation(line: 6586, column: 12, scope: !9738)
!9749 = !DILocalVariable(name: "dropped", arg: 5, scope: !9738, file: !3, line: 6586, type: !1691)
!9750 = !DILocation(line: 6586, column: 26, scope: !9738)
!9751 = !DILocalVariable(name: "d", scope: !9738, file: !3, line: 6587, type: !31)
!9752 = !DILocation(line: 6587, column: 7, scope: !9738)
!9753 = !DILocalVariable(name: "exp", scope: !9738, file: !3, line: 6587, type: !31)
!9754 = !DILocation(line: 6587, column: 10, scope: !9738)
!9755 = !DILocalVariable(name: "cut", scope: !9738, file: !3, line: 6588, type: !36)
!9756 = !DILocation(line: 6588, column: 8, scope: !9738)
!9757 = !DILocalVariable(name: "up", scope: !9738, file: !3, line: 6589, type: !43)
!9758 = !DILocation(line: 6589, column: 9, scope: !9738)
!9759 = !DILocation(line: 6595, column: 4, scope: !9738)
!9760 = !DILocation(line: 6595, column: 11, scope: !9738)
!9761 = !DILocation(line: 6596, column: 8, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9738, file: !3, line: 6596, column: 7)
!9763 = !DILocation(line: 6596, column: 12, scope: !9762)
!9764 = !DILocation(line: 6596, column: 17, scope: !9762)
!9765 = !DILocation(line: 6597, column: 5, scope: !9762)
!9766 = !DILocation(line: 6597, column: 10, scope: !9762)
!9767 = !DILocation(line: 6597, column: 14, scope: !9762)
!9768 = !DILocation(line: 6597, column: 9, scope: !9762)
!9769 = !DILocation(line: 6597, column: 18, scope: !9762)
!9770 = !DILocation(line: 6596, column: 7, scope: !9738)
!9771 = !DILocation(line: 6597, column: 34, scope: !9762)
!9772 = !DILocation(line: 6597, column: 27, scope: !9762)
!9773 = !DILocation(line: 6598, column: 7, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9738, file: !3, line: 6598, column: 7)
!9775 = !DILocation(line: 6598, column: 7, scope: !9738)
!9776 = !DILocation(line: 6599, column: 5, scope: !9777)
!9777 = distinct !DILexicalBlock(scope: !9774, file: !3, line: 6598, column: 19)
!9778 = !DILocation(line: 6599, column: 9, scope: !9777)
!9779 = !DILocation(line: 6599, column: 17, scope: !9777)
!9780 = !DILocation(line: 6600, column: 12, scope: !9777)
!9781 = !DILocation(line: 6600, column: 5, scope: !9777)
!9782 = !DILocation(line: 6604, column: 7, scope: !9738)
!9783 = !DILocation(line: 6604, column: 11, scope: !9738)
!9784 = !DILocation(line: 6604, column: 6, scope: !9738)
!9785 = !DILocation(line: 6605, column: 6, scope: !9738)
!9786 = !DILocation(line: 6606, column: 6, scope: !9738)
!9787 = !DILocation(line: 6606, column: 10, scope: !9738)
!9788 = !DILocation(line: 6606, column: 5, scope: !9738)
!9789 = !DILocation(line: 6607, column: 9, scope: !9790)
!9790 = distinct !DILexicalBlock(scope: !9738, file: !3, line: 6607, column: 3)
!9791 = !DILocation(line: 6607, column: 8, scope: !9790)
!9792 = !DILocation(line: 6607, column: 13, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9790, file: !3, line: 6607, column: 3)
!9794 = !DILocation(line: 6607, column: 15, scope: !9793)
!9795 = !DILocation(line: 6607, column: 19, scope: !9793)
!9796 = !DILocation(line: 6607, column: 25, scope: !9793)
!9797 = !DILocation(line: 6607, column: 14, scope: !9793)
!9798 = !DILocation(line: 6607, column: 3, scope: !9790)
!9799 = !DILocalVariable(name: "quot", scope: !9800, file: !3, line: 6610, type: !36)
!9800 = distinct !DILexicalBlock(scope: !9793, file: !3, line: 6607, column: 34)
!9801 = !DILocation(line: 6610, column: 12, scope: !9800)
!9802 = !DILocation(line: 6610, column: 17, scope: !9800)
!9803 = !DILocation(line: 6611, column: 13, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9800, file: !3, line: 6611, column: 11)
!9805 = !DILocation(line: 6611, column: 12, scope: !9804)
!9806 = !DILocation(line: 6611, column: 16, scope: !9804)
!9807 = !DILocation(line: 6611, column: 28, scope: !9804)
!9808 = !DILocation(line: 6611, column: 21, scope: !9804)
!9809 = !DILocation(line: 6611, column: 20, scope: !9804)
!9810 = !DILocation(line: 6611, column: 15, scope: !9804)
!9811 = !DILocation(line: 6611, column: 33, scope: !9804)
!9812 = !DILocation(line: 6611, column: 11, scope: !9800)
!9813 = !DILocation(line: 6611, column: 38, scope: !9804)
!9814 = !DILocation(line: 6616, column: 10, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !9800, file: !3, line: 6616, column: 9)
!9816 = !DILocation(line: 6616, column: 9, scope: !9800)
!9817 = !DILocation(line: 6618, column: 11, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9819, file: !3, line: 6618, column: 11)
!9819 = distinct !DILexicalBlock(scope: !9815, file: !3, line: 6616, column: 15)
!9820 = !DILocation(line: 6618, column: 14, scope: !9818)
!9821 = !DILocation(line: 6618, column: 11, scope: !9819)
!9822 = !DILocation(line: 6619, column: 6, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9824, file: !3, line: 6619, column: 6)
!9824 = distinct !DILexicalBlock(scope: !9818, file: !3, line: 6618, column: 19)
!9825 = !DILocation(line: 6619, column: 9, scope: !9823)
!9826 = !DILocation(line: 6619, column: 6, scope: !9824)
!9827 = !DILocation(line: 6619, column: 14, scope: !9823)
!9828 = !DILocation(line: 6620, column: 5, scope: !9824)
!9829 = !DILocation(line: 6621, column: 2, scope: !9824)
!9830 = !DILocation(line: 6622, column: 7, scope: !9819)
!9831 = !DILocation(line: 6623, column: 8, scope: !9800)
!9832 = !DILocation(line: 6624, column: 9, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9800, file: !3, line: 6624, column: 9)
!9834 = !DILocation(line: 6624, column: 12, scope: !9833)
!9835 = !DILocation(line: 6624, column: 9, scope: !9800)
!9836 = !DILocation(line: 6625, column: 9, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9833, file: !3, line: 6624, column: 22)
!9838 = !DILocation(line: 6626, column: 10, scope: !9837)
!9839 = !DILocation(line: 6627, column: 7, scope: !9837)
!9840 = !DILocation(line: 6628, column: 5, scope: !9800)
!9841 = !DILocation(line: 6607, column: 30, scope: !9793)
!9842 = !DILocation(line: 6607, column: 3, scope: !9793)
!9843 = distinct !{!9843, !9798, !9844}
!9844 = !DILocation(line: 6628, column: 5, scope: !9790)
!9845 = !DILocation(line: 6629, column: 7, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9738, file: !3, line: 6629, column: 7)
!9847 = !DILocation(line: 6629, column: 8, scope: !9846)
!9848 = !DILocation(line: 6629, column: 7, scope: !9738)
!9849 = !DILocation(line: 6629, column: 20, scope: !9846)
!9850 = !DILocation(line: 6629, column: 13, scope: !9846)
!9851 = !DILocation(line: 6632, column: 7, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9738, file: !3, line: 6632, column: 7)
!9853 = !DILocation(line: 6632, column: 12, scope: !9852)
!9854 = !DILocation(line: 6632, column: 18, scope: !9852)
!9855 = !DILocation(line: 6632, column: 22, scope: !9852)
!9856 = !DILocation(line: 6632, column: 7, scope: !9738)
!9857 = !DILocalVariable(name: "maxd", scope: !9858, file: !3, line: 6633, type: !31)
!9858 = distinct !DILexicalBlock(scope: !9852, file: !3, line: 6632, column: 31)
!9859 = !DILocation(line: 6633, column: 9, scope: !9858)
!9860 = !DILocation(line: 6633, column: 14, scope: !9858)
!9861 = !DILocation(line: 6633, column: 19, scope: !9858)
!9862 = !DILocation(line: 6633, column: 24, scope: !9858)
!9863 = !DILocation(line: 6633, column: 29, scope: !9858)
!9864 = !DILocation(line: 6633, column: 23, scope: !9858)
!9865 = !DILocation(line: 6633, column: 35, scope: !9858)
!9866 = !DILocation(line: 6633, column: 38, scope: !9858)
!9867 = !DILocation(line: 6633, column: 42, scope: !9858)
!9868 = !DILocation(line: 6633, column: 37, scope: !9858)
!9869 = !DILocation(line: 6634, column: 9, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9858, file: !3, line: 6634, column: 9)
!9871 = !DILocation(line: 6634, column: 13, scope: !9870)
!9872 = !DILocation(line: 6634, column: 9, scope: !9858)
!9873 = !DILocation(line: 6634, column: 25, scope: !9870)
!9874 = !DILocation(line: 6634, column: 18, scope: !9870)
!9875 = !DILocation(line: 6635, column: 9, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !9858, file: !3, line: 6635, column: 9)
!9877 = !DILocation(line: 6635, column: 11, scope: !9876)
!9878 = !DILocation(line: 6635, column: 10, scope: !9876)
!9879 = !DILocation(line: 6635, column: 9, scope: !9858)
!9880 = !DILocation(line: 6635, column: 19, scope: !9876)
!9881 = !DILocation(line: 6635, column: 18, scope: !9876)
!9882 = !DILocation(line: 6635, column: 17, scope: !9876)
!9883 = !DILocation(line: 6636, column: 5, scope: !9858)
!9884 = !DILocation(line: 6639, column: 19, scope: !9738)
!9885 = !DILocation(line: 6639, column: 23, scope: !9738)
!9886 = !DILocation(line: 6639, column: 28, scope: !9738)
!9887 = !DILocation(line: 6639, column: 45, scope: !9738)
!9888 = !DILocation(line: 6639, column: 3, scope: !9738)
!9889 = !DILocation(line: 6640, column: 17, scope: !9738)
!9890 = !DILocation(line: 6640, column: 3, scope: !9738)
!9891 = !DILocation(line: 6640, column: 7, scope: !9738)
!9892 = !DILocation(line: 6640, column: 15, scope: !9738)
!9893 = !DILocation(line: 6641, column: 15, scope: !9738)
!9894 = !DILocation(line: 6641, column: 3, scope: !9738)
!9895 = !DILocation(line: 6641, column: 7, scope: !9738)
!9896 = !DILocation(line: 6641, column: 13, scope: !9738)
!9897 = !DILocation(line: 6642, column: 12, scope: !9738)
!9898 = !DILocation(line: 6642, column: 4, scope: !9738)
!9899 = !DILocation(line: 6642, column: 11, scope: !9738)
!9900 = !DILocation(line: 6643, column: 10, scope: !9738)
!9901 = !DILocation(line: 6643, column: 3, scope: !9738)
!9902 = !DILocation(line: 6644, column: 3, scope: !9738)
!9903 = distinct !DISubprogram(name: "decNumberRescale", scope: !3, file: !3, line: 2376, type: !2989, scopeLine: 2377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!9904 = !DILocalVariable(name: "res", arg: 1, scope: !9903, file: !3, line: 2376, type: !47)
!9905 = !DILocation(line: 2376, column: 41, scope: !9903)
!9906 = !DILocalVariable(name: "lhs", arg: 2, scope: !9903, file: !3, line: 2376, type: !267)
!9907 = !DILocation(line: 2376, column: 63, scope: !9903)
!9908 = !DILocalVariable(name: "rhs", arg: 3, scope: !9903, file: !3, line: 2377, type: !267)
!9909 = !DILocation(line: 2377, column: 26, scope: !9903)
!9910 = !DILocalVariable(name: "set", arg: 4, scope: !9903, file: !3, line: 2377, type: !269)
!9911 = !DILocation(line: 2377, column: 43, scope: !9903)
!9912 = !DILocalVariable(name: "status", scope: !9903, file: !3, line: 2378, type: !36)
!9913 = !DILocation(line: 2378, column: 8, scope: !9903)
!9914 = !DILocation(line: 2379, column: 17, scope: !9903)
!9915 = !DILocation(line: 2379, column: 22, scope: !9903)
!9916 = !DILocation(line: 2379, column: 27, scope: !9903)
!9917 = !DILocation(line: 2379, column: 32, scope: !9903)
!9918 = !DILocation(line: 2379, column: 3, scope: !9903)
!9919 = !DILocation(line: 2380, column: 7, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9903, file: !3, line: 2380, column: 7)
!9921 = !DILocation(line: 2380, column: 13, scope: !9920)
!9922 = !DILocation(line: 2380, column: 7, scope: !9903)
!9923 = !DILocation(line: 2380, column: 28, scope: !9920)
!9924 = !DILocation(line: 2380, column: 33, scope: !9920)
!9925 = !DILocation(line: 2380, column: 41, scope: !9920)
!9926 = !DILocation(line: 2380, column: 18, scope: !9920)
!9927 = !DILocation(line: 2381, column: 10, scope: !9903)
!9928 = !DILocation(line: 2381, column: 3, scope: !9903)
!9929 = distinct !DISubprogram(name: "decNumberRemainder", scope: !3, file: !3, line: 2396, type: !2989, scopeLine: 2397, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!9930 = !DILocalVariable(name: "res", arg: 1, scope: !9929, file: !3, line: 2396, type: !47)
!9931 = !DILocation(line: 2396, column: 43, scope: !9929)
!9932 = !DILocalVariable(name: "lhs", arg: 2, scope: !9929, file: !3, line: 2396, type: !267)
!9933 = !DILocation(line: 2396, column: 65, scope: !9929)
!9934 = !DILocalVariable(name: "rhs", arg: 3, scope: !9929, file: !3, line: 2397, type: !267)
!9935 = !DILocation(line: 2397, column: 28, scope: !9929)
!9936 = !DILocalVariable(name: "set", arg: 4, scope: !9929, file: !3, line: 2397, type: !269)
!9937 = !DILocation(line: 2397, column: 45, scope: !9929)
!9938 = !DILocalVariable(name: "status", scope: !9929, file: !3, line: 2398, type: !36)
!9939 = !DILocation(line: 2398, column: 8, scope: !9929)
!9940 = !DILocation(line: 2399, column: 15, scope: !9929)
!9941 = !DILocation(line: 2399, column: 20, scope: !9929)
!9942 = !DILocation(line: 2399, column: 25, scope: !9929)
!9943 = !DILocation(line: 2399, column: 30, scope: !9929)
!9944 = !DILocation(line: 2399, column: 3, scope: !9929)
!9945 = !DILocation(line: 2400, column: 7, scope: !9946)
!9946 = distinct !DILexicalBlock(scope: !9929, file: !3, line: 2400, column: 7)
!9947 = !DILocation(line: 2400, column: 13, scope: !9946)
!9948 = !DILocation(line: 2400, column: 7, scope: !9929)
!9949 = !DILocation(line: 2400, column: 28, scope: !9946)
!9950 = !DILocation(line: 2400, column: 33, scope: !9946)
!9951 = !DILocation(line: 2400, column: 41, scope: !9946)
!9952 = !DILocation(line: 2400, column: 18, scope: !9946)
!9953 = !DILocation(line: 2404, column: 10, scope: !9929)
!9954 = !DILocation(line: 2404, column: 3, scope: !9929)
!9955 = distinct !DISubprogram(name: "decNumberRemainderNear", scope: !3, file: !3, line: 2419, type: !2989, scopeLine: 2420, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!9956 = !DILocalVariable(name: "res", arg: 1, scope: !9955, file: !3, line: 2419, type: !47)
!9957 = !DILocation(line: 2419, column: 47, scope: !9955)
!9958 = !DILocalVariable(name: "lhs", arg: 2, scope: !9955, file: !3, line: 2419, type: !267)
!9959 = !DILocation(line: 2419, column: 69, scope: !9955)
!9960 = !DILocalVariable(name: "rhs", arg: 3, scope: !9955, file: !3, line: 2420, type: !267)
!9961 = !DILocation(line: 2420, column: 25, scope: !9955)
!9962 = !DILocalVariable(name: "set", arg: 4, scope: !9955, file: !3, line: 2420, type: !269)
!9963 = !DILocation(line: 2420, column: 42, scope: !9955)
!9964 = !DILocalVariable(name: "status", scope: !9955, file: !3, line: 2421, type: !36)
!9965 = !DILocation(line: 2421, column: 8, scope: !9955)
!9966 = !DILocation(line: 2422, column: 15, scope: !9955)
!9967 = !DILocation(line: 2422, column: 20, scope: !9955)
!9968 = !DILocation(line: 2422, column: 25, scope: !9955)
!9969 = !DILocation(line: 2422, column: 30, scope: !9955)
!9970 = !DILocation(line: 2422, column: 3, scope: !9955)
!9971 = !DILocation(line: 2423, column: 7, scope: !9972)
!9972 = distinct !DILexicalBlock(scope: !9955, file: !3, line: 2423, column: 7)
!9973 = !DILocation(line: 2423, column: 13, scope: !9972)
!9974 = !DILocation(line: 2423, column: 7, scope: !9955)
!9975 = !DILocation(line: 2423, column: 28, scope: !9972)
!9976 = !DILocation(line: 2423, column: 33, scope: !9972)
!9977 = !DILocation(line: 2423, column: 41, scope: !9972)
!9978 = !DILocation(line: 2423, column: 18, scope: !9972)
!9979 = !DILocation(line: 2427, column: 10, scope: !9955)
!9980 = !DILocation(line: 2427, column: 3, scope: !9955)
!9981 = distinct !DISubprogram(name: "decNumberRotate", scope: !3, file: !3, line: 2455, type: !2989, scopeLine: 2456, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!9982 = !DILocalVariable(name: "res", arg: 1, scope: !9981, file: !3, line: 2455, type: !47)
!9983 = !DILocation(line: 2455, column: 40, scope: !9981)
!9984 = !DILocalVariable(name: "lhs", arg: 2, scope: !9981, file: !3, line: 2455, type: !267)
!9985 = !DILocation(line: 2455, column: 62, scope: !9981)
!9986 = !DILocalVariable(name: "rhs", arg: 3, scope: !9981, file: !3, line: 2456, type: !267)
!9987 = !DILocation(line: 2456, column: 24, scope: !9981)
!9988 = !DILocalVariable(name: "set", arg: 4, scope: !9981, file: !3, line: 2456, type: !269)
!9989 = !DILocation(line: 2456, column: 41, scope: !9981)
!9990 = !DILocalVariable(name: "status", scope: !9981, file: !3, line: 2457, type: !36)
!9991 = !DILocation(line: 2457, column: 8, scope: !9981)
!9992 = !DILocalVariable(name: "rotate", scope: !9981, file: !3, line: 2458, type: !31)
!9993 = !DILocation(line: 2458, column: 8, scope: !9981)
!9994 = !DILocation(line: 2465, column: 7, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9981, file: !3, line: 2465, column: 7)
!9996 = !DILocation(line: 2465, column: 27, scope: !9995)
!9997 = !DILocation(line: 2465, column: 30, scope: !9995)
!9998 = !DILocation(line: 2465, column: 7, scope: !9981)
!9999 = !DILocation(line: 2466, column: 13, scope: !9995)
!10000 = !DILocation(line: 2466, column: 18, scope: !9995)
!10001 = !DILocation(line: 2466, column: 23, scope: !9995)
!10002 = !DILocation(line: 2466, column: 28, scope: !9995)
!10003 = !DILocation(line: 2466, column: 5, scope: !9995)
!10004 = !DILocation(line: 2468, column: 13, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !9995, file: !3, line: 2468, column: 13)
!10006 = !DILocation(line: 2468, column: 38, scope: !10005)
!10007 = !DILocation(line: 2468, column: 41, scope: !10005)
!10008 = !DILocation(line: 2468, column: 46, scope: !10005)
!10009 = !DILocation(line: 2468, column: 54, scope: !10005)
!10010 = !DILocation(line: 2468, column: 13, scope: !9995)
!10011 = !DILocation(line: 2469, column: 11, scope: !10005)
!10012 = !DILocation(line: 2469, column: 5, scope: !10005)
!10013 = !DILocation(line: 2471, column: 22, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 2470, column: 9)
!10015 = !DILocation(line: 2471, column: 12, scope: !10014)
!10016 = !DILocation(line: 2471, column: 11, scope: !10014)
!10017 = !DILocation(line: 2472, column: 9, scope: !10018)
!10018 = distinct !DILexicalBlock(scope: !10014, file: !3, line: 2472, column: 9)
!10019 = !DILocation(line: 2472, column: 15, scope: !10018)
!10020 = !DILocation(line: 2473, column: 6, scope: !10018)
!10021 = !DILocation(line: 2473, column: 9, scope: !10018)
!10022 = !DILocation(line: 2473, column: 15, scope: !10018)
!10023 = !DILocation(line: 2473, column: 24, scope: !10018)
!10024 = !DILocation(line: 2473, column: 27, scope: !10018)
!10025 = !DILocation(line: 2473, column: 33, scope: !10018)
!10026 = !DILocation(line: 2474, column: 6, scope: !10018)
!10027 = !DILocation(line: 2474, column: 13, scope: !10018)
!10028 = !DILocation(line: 2474, column: 9, scope: !10018)
!10029 = !DILocation(line: 2474, column: 21, scope: !10018)
!10030 = !DILocation(line: 2474, column: 26, scope: !10018)
!10031 = !DILocation(line: 2474, column: 20, scope: !10018)
!10032 = !DILocation(line: 2472, column: 9, scope: !10014)
!10033 = !DILocation(line: 2475, column: 13, scope: !10018)
!10034 = !DILocation(line: 2475, column: 7, scope: !10018)
!10035 = !DILocation(line: 2477, column: 21, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !10018, file: !3, line: 2476, column: 11)
!10037 = !DILocation(line: 2477, column: 26, scope: !10036)
!10038 = !DILocation(line: 2477, column: 7, scope: !10036)
!10039 = !DILocation(line: 2479, column: 11, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10036, file: !3, line: 2479, column: 11)
!10041 = !DILocation(line: 2479, column: 17, scope: !10040)
!10042 = !DILocation(line: 2479, column: 11, scope: !10036)
!10043 = !DILocation(line: 2479, column: 28, scope: !10040)
!10044 = !DILocation(line: 2479, column: 33, scope: !10040)
!10045 = !DILocation(line: 2479, column: 40, scope: !10040)
!10046 = !DILocation(line: 2479, column: 39, scope: !10040)
!10047 = !DILocation(line: 2479, column: 27, scope: !10040)
!10048 = !DILocation(line: 2479, column: 21, scope: !10040)
!10049 = !DILocation(line: 2480, column: 11, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !10036, file: !3, line: 2480, column: 11)
!10051 = !DILocation(line: 2480, column: 17, scope: !10050)
!10052 = !DILocation(line: 2480, column: 21, scope: !10050)
!10053 = !DILocation(line: 2480, column: 24, scope: !10050)
!10054 = !DILocation(line: 2480, column: 32, scope: !10050)
!10055 = !DILocation(line: 2480, column: 37, scope: !10050)
!10056 = !DILocation(line: 2480, column: 30, scope: !10050)
!10057 = !DILocation(line: 2481, column: 8, scope: !10050)
!10058 = !DILocation(line: 2481, column: 12, scope: !10050)
!10059 = !DILocation(line: 2480, column: 11, scope: !10036)
!10060 = !DILocalVariable(name: "units", scope: !10061, file: !3, line: 2483, type: !36)
!10061 = distinct !DILexicalBlock(scope: !10050, file: !3, line: 2481, column: 38)
!10062 = !DILocation(line: 2483, column: 7, scope: !10061)
!10063 = !DILocalVariable(name: "shift", scope: !10061, file: !3, line: 2483, type: !36)
!10064 = !DILocation(line: 2483, column: 14, scope: !10061)
!10065 = !DILocalVariable(name: "msudigits", scope: !10061, file: !3, line: 2484, type: !36)
!10066 = !DILocation(line: 2484, column: 7, scope: !10061)
!10067 = !DILocalVariable(name: "msu", scope: !10061, file: !3, line: 2485, type: !43)
!10068 = !DILocation(line: 2485, column: 8, scope: !10061)
!10069 = !DILocation(line: 2485, column: 12, scope: !10061)
!10070 = !DILocation(line: 2485, column: 17, scope: !10061)
!10071 = !DILocation(line: 2485, column: 21, scope: !10061)
!10072 = !DILocation(line: 2485, column: 20, scope: !10061)
!10073 = !DILocation(line: 2485, column: 37, scope: !10061)
!10074 = !DILocalVariable(name: "msumax", scope: !10061, file: !3, line: 2486, type: !43)
!10075 = !DILocation(line: 2486, column: 8, scope: !10061)
!10076 = !DILocation(line: 2486, column: 15, scope: !10061)
!10077 = !DILocation(line: 2486, column: 20, scope: !10061)
!10078 = !DILocation(line: 2486, column: 24, scope: !10061)
!10079 = !DILocation(line: 2486, column: 23, scope: !10061)
!10080 = !DILocation(line: 2486, column: 40, scope: !10061)
!10081 = !DILocation(line: 2487, column: 10, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !10061, file: !3, line: 2487, column: 2)
!10083 = !DILocation(line: 2487, column: 7, scope: !10082)
!10084 = !DILocation(line: 2487, column: 14, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10082, file: !3, line: 2487, column: 2)
!10086 = !DILocation(line: 2487, column: 19, scope: !10085)
!10087 = !DILocation(line: 2487, column: 17, scope: !10085)
!10088 = !DILocation(line: 2487, column: 2, scope: !10082)
!10089 = !DILocation(line: 2487, column: 35, scope: !10085)
!10090 = !DILocation(line: 2487, column: 38, scope: !10085)
!10091 = !DILocation(line: 2487, column: 34, scope: !10085)
!10092 = !DILocation(line: 2487, column: 30, scope: !10085)
!10093 = !DILocation(line: 2487, column: 2, scope: !10085)
!10094 = distinct !{!10094, !10088, !10095}
!10095 = !DILocation(line: 2487, column: 39, scope: !10082)
!10096 = !DILocation(line: 2488, column: 14, scope: !10061)
!10097 = !DILocation(line: 2488, column: 19, scope: !10061)
!10098 = !DILocation(line: 2488, column: 2, scope: !10061)
!10099 = !DILocation(line: 2488, column: 7, scope: !10061)
!10100 = !DILocation(line: 2488, column: 13, scope: !10061)
!10101 = !DILocation(line: 2489, column: 12, scope: !10061)
!10102 = !DILocation(line: 2489, column: 11, scope: !10061)
!10103 = !DILocation(line: 2522, column: 9, scope: !10061)
!10104 = !DILocation(line: 2522, column: 14, scope: !10061)
!10105 = !DILocation(line: 2522, column: 21, scope: !10061)
!10106 = !DILocation(line: 2522, column: 20, scope: !10061)
!10107 = !DILocation(line: 2522, column: 8, scope: !10061)
!10108 = !DILocation(line: 2523, column: 8, scope: !10061)
!10109 = !DILocation(line: 2523, column: 14, scope: !10061)
!10110 = !DILocation(line: 2523, column: 7, scope: !10061)
!10111 = !DILocation(line: 2524, column: 8, scope: !10061)
!10112 = !DILocation(line: 2524, column: 14, scope: !10061)
!10113 = !DILocation(line: 2524, column: 7, scope: !10061)
!10114 = !DILocation(line: 2525, column: 6, scope: !10115)
!10115 = distinct !DILexicalBlock(scope: !10061, file: !3, line: 2525, column: 6)
!10116 = !DILocation(line: 2525, column: 11, scope: !10115)
!10117 = !DILocation(line: 2525, column: 6, scope: !10061)
!10118 = !DILocalVariable(name: "save", scope: !10119, file: !3, line: 2526, type: !36)
!10119 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 2525, column: 15)
!10120 = !DILocation(line: 2526, column: 9, scope: !10119)
!10121 = !DILocation(line: 2526, column: 14, scope: !10119)
!10122 = !DILocation(line: 2526, column: 19, scope: !10119)
!10123 = !DILocation(line: 2526, column: 33, scope: !10119)
!10124 = !DILocation(line: 2526, column: 26, scope: !10119)
!10125 = !DILocation(line: 2526, column: 25, scope: !10119)
!10126 = !DILocation(line: 2527, column: 20, scope: !10119)
!10127 = !DILocation(line: 2527, column: 25, scope: !10119)
!10128 = !DILocation(line: 2527, column: 30, scope: !10119)
!10129 = !DILocation(line: 2527, column: 48, scope: !10119)
!10130 = !DILocation(line: 2527, column: 4, scope: !10119)
!10131 = !DILocation(line: 2528, column: 8, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !10119, file: !3, line: 2528, column: 8)
!10133 = !DILocation(line: 2528, column: 14, scope: !10132)
!10134 = !DILocation(line: 2528, column: 13, scope: !10132)
!10135 = !DILocation(line: 2528, column: 8, scope: !10119)
!10136 = !DILocalVariable(name: "rem", scope: !10137, file: !3, line: 2529, type: !36)
!10137 = distinct !DILexicalBlock(scope: !10132, file: !3, line: 2528, column: 25)
!10138 = !DILocation(line: 2529, column: 11, scope: !10137)
!10139 = !DILocation(line: 2529, column: 15, scope: !10137)
!10140 = !DILocation(line: 2529, column: 27, scope: !10137)
!10141 = !DILocation(line: 2529, column: 33, scope: !10137)
!10142 = !DILocation(line: 2529, column: 32, scope: !10137)
!10143 = !DILocation(line: 2529, column: 20, scope: !10137)
!10144 = !DILocation(line: 2529, column: 19, scope: !10137)
!10145 = !DILocation(line: 2530, column: 21, scope: !10137)
!10146 = !DILocation(line: 2530, column: 33, scope: !10137)
!10147 = !DILocation(line: 2530, column: 39, scope: !10137)
!10148 = !DILocation(line: 2530, column: 38, scope: !10137)
!10149 = !DILocation(line: 2530, column: 26, scope: !10137)
!10150 = !DILocation(line: 2530, column: 25, scope: !10137)
!10151 = !DILocation(line: 2530, column: 14, scope: !10137)
!10152 = !DILocation(line: 2530, column: 7, scope: !10137)
!10153 = !DILocation(line: 2530, column: 13, scope: !10137)
!10154 = !DILocation(line: 2531, column: 20, scope: !10137)
!10155 = !DILocation(line: 2531, column: 26, scope: !10137)
!10156 = !DILocation(line: 2531, column: 18, scope: !10137)
!10157 = !DILocation(line: 2532, column: 18, scope: !10137)
!10158 = !DILocation(line: 2532, column: 38, scope: !10137)
!10159 = !DILocation(line: 2532, column: 44, scope: !10137)
!10160 = !DILocation(line: 2532, column: 43, scope: !10137)
!10161 = !DILocation(line: 2532, column: 36, scope: !10137)
!10162 = !DILocation(line: 2532, column: 22, scope: !10137)
!10163 = !DILocation(line: 2532, column: 21, scope: !10137)
!10164 = !DILocation(line: 2532, column: 11, scope: !10137)
!10165 = !DILocation(line: 2532, column: 10, scope: !10137)
!10166 = !DILocation(line: 2531, column: 8, scope: !10137)
!10167 = !DILocation(line: 2531, column: 14, scope: !10137)
!10168 = !DILocation(line: 2531, column: 17, scope: !10137)
!10169 = !DILocation(line: 2533, column: 6, scope: !10137)
!10170 = !DILocation(line: 2535, column: 15, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10132, file: !3, line: 2534, column: 10)
!10172 = !DILocation(line: 2535, column: 14, scope: !10171)
!10173 = !DILocation(line: 2535, column: 29, scope: !10171)
!10174 = !DILocation(line: 2535, column: 41, scope: !10171)
!10175 = !DILocation(line: 2535, column: 51, scope: !10171)
!10176 = !DILocation(line: 2535, column: 50, scope: !10171)
!10177 = !DILocation(line: 2535, column: 34, scope: !10171)
!10178 = !DILocation(line: 2535, column: 33, scope: !10171)
!10179 = !DILocation(line: 2535, column: 22, scope: !10171)
!10180 = !DILocation(line: 2535, column: 21, scope: !10171)
!10181 = !DILocation(line: 2535, column: 7, scope: !10171)
!10182 = !DILocation(line: 2535, column: 13, scope: !10171)
!10183 = !DILocation(line: 2537, column: 4, scope: !10119)
!10184 = !DILocation(line: 2540, column: 6, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10061, file: !3, line: 2540, column: 6)
!10186 = !DILocation(line: 2540, column: 11, scope: !10185)
!10187 = !DILocation(line: 2540, column: 6, scope: !10061)
!10188 = !DILocation(line: 2544, column: 18, scope: !10189)
!10189 = distinct !DILexicalBlock(scope: !10185, file: !3, line: 2540, column: 15)
!10190 = !DILocation(line: 2544, column: 17, scope: !10189)
!10191 = !DILocation(line: 2544, column: 9, scope: !10189)
!10192 = !DILocation(line: 2545, column: 8, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !10189, file: !3, line: 2545, column: 8)
!10194 = !DILocation(line: 2545, column: 13, scope: !10193)
!10195 = !DILocation(line: 2545, column: 8, scope: !10189)
!10196 = !DILocalVariable(name: "save", scope: !10197, file: !3, line: 2546, type: !36)
!10197 = distinct !DILexicalBlock(scope: !10193, file: !3, line: 2545, column: 17)
!10198 = !DILocation(line: 2546, column: 11, scope: !10197)
!10199 = !DILocation(line: 2546, column: 16, scope: !10197)
!10200 = !DILocation(line: 2546, column: 21, scope: !10197)
!10201 = !DILocation(line: 2546, column: 35, scope: !10197)
!10202 = !DILocation(line: 2546, column: 28, scope: !10197)
!10203 = !DILocation(line: 2546, column: 27, scope: !10197)
!10204 = !DILocation(line: 2547, column: 22, scope: !10197)
!10205 = !DILocation(line: 2547, column: 27, scope: !10197)
!10206 = !DILocation(line: 2547, column: 32, scope: !10197)
!10207 = !DILocation(line: 2547, column: 39, scope: !10197)
!10208 = !DILocation(line: 2547, column: 6, scope: !10197)
!10209 = !DILocation(line: 2548, column: 15, scope: !10197)
!10210 = !DILocation(line: 2548, column: 14, scope: !10197)
!10211 = !DILocation(line: 2548, column: 29, scope: !10197)
!10212 = !DILocation(line: 2548, column: 41, scope: !10197)
!10213 = !DILocation(line: 2548, column: 34, scope: !10197)
!10214 = !DILocation(line: 2548, column: 33, scope: !10197)
!10215 = !DILocation(line: 2548, column: 22, scope: !10197)
!10216 = !DILocation(line: 2548, column: 21, scope: !10197)
!10217 = !DILocation(line: 2548, column: 7, scope: !10197)
!10218 = !DILocation(line: 2548, column: 13, scope: !10197)
!10219 = !DILocation(line: 2549, column: 6, scope: !10197)
!10220 = !DILocation(line: 2553, column: 15, scope: !10189)
!10221 = !DILocation(line: 2553, column: 20, scope: !10189)
!10222 = !DILocation(line: 2553, column: 24, scope: !10189)
!10223 = !DILocation(line: 2553, column: 23, scope: !10189)
!10224 = !DILocation(line: 2553, column: 31, scope: !10189)
!10225 = !DILocation(line: 2553, column: 4, scope: !10189)
!10226 = !DILocation(line: 2554, column: 15, scope: !10189)
!10227 = !DILocation(line: 2554, column: 20, scope: !10189)
!10228 = !DILocation(line: 2554, column: 25, scope: !10189)
!10229 = !DILocation(line: 2554, column: 30, scope: !10189)
!10230 = !DILocation(line: 2554, column: 34, scope: !10189)
!10231 = !DILocation(line: 2554, column: 33, scope: !10189)
!10232 = !DILocation(line: 2554, column: 39, scope: !10189)
!10233 = !DILocation(line: 2554, column: 4, scope: !10189)
!10234 = !DILocation(line: 2555, column: 15, scope: !10189)
!10235 = !DILocation(line: 2555, column: 20, scope: !10189)
!10236 = !DILocation(line: 2555, column: 25, scope: !10189)
!10237 = !DILocation(line: 2555, column: 4, scope: !10189)
!10238 = !DILocation(line: 2556, column: 4, scope: !10189)
!10239 = !DILocation(line: 2559, column: 27, scope: !10061)
!10240 = !DILocation(line: 2559, column: 32, scope: !10061)
!10241 = !DILocation(line: 2559, column: 37, scope: !10061)
!10242 = !DILocation(line: 2559, column: 44, scope: !10061)
!10243 = !DILocation(line: 2559, column: 49, scope: !10061)
!10244 = !DILocation(line: 2559, column: 43, scope: !10061)
!10245 = !DILocation(line: 2559, column: 52, scope: !10061)
!10246 = !DILocation(line: 2559, column: 14, scope: !10061)
!10247 = !DILocation(line: 2559, column: 2, scope: !10061)
!10248 = !DILocation(line: 2559, column: 7, scope: !10061)
!10249 = !DILocation(line: 2559, column: 13, scope: !10061)
!10250 = !DILocation(line: 2560, column: 2, scope: !10061)
!10251 = !DILocation(line: 2563, column: 7, scope: !10252)
!10252 = distinct !DILexicalBlock(scope: !9981, file: !3, line: 2563, column: 7)
!10253 = !DILocation(line: 2563, column: 13, scope: !10252)
!10254 = !DILocation(line: 2563, column: 7, scope: !9981)
!10255 = !DILocation(line: 2563, column: 28, scope: !10252)
!10256 = !DILocation(line: 2563, column: 33, scope: !10252)
!10257 = !DILocation(line: 2563, column: 41, scope: !10252)
!10258 = !DILocation(line: 2563, column: 18, scope: !10252)
!10259 = !DILocation(line: 2564, column: 10, scope: !9981)
!10260 = !DILocation(line: 2564, column: 3, scope: !9981)
!10261 = distinct !DISubprogram(name: "decShiftToLeast", scope: !3, file: !3, line: 6735, type: !9077, scopeLine: 6735, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!10262 = !DILocalVariable(name: "uar", arg: 1, scope: !10261, file: !3, line: 6735, type: !43)
!10263 = !DILocation(line: 6735, column: 34, scope: !10261)
!10264 = !DILocalVariable(name: "units", arg: 2, scope: !10261, file: !3, line: 6735, type: !31)
!10265 = !DILocation(line: 6735, column: 43, scope: !10261)
!10266 = !DILocalVariable(name: "shift", arg: 3, scope: !10261, file: !3, line: 6735, type: !31)
!10267 = !DILocation(line: 6735, column: 54, scope: !10261)
!10268 = !DILocalVariable(name: "target", scope: !10261, file: !3, line: 6736, type: !43)
!10269 = !DILocation(line: 6736, column: 9, scope: !10261)
!10270 = !DILocalVariable(name: "up", scope: !10261, file: !3, line: 6736, type: !43)
!10271 = !DILocation(line: 6736, column: 18, scope: !10261)
!10272 = !DILocalVariable(name: "cut", scope: !10261, file: !3, line: 6737, type: !31)
!10273 = !DILocation(line: 6737, column: 7, scope: !10261)
!10274 = !DILocalVariable(name: "count", scope: !10261, file: !3, line: 6737, type: !31)
!10275 = !DILocation(line: 6737, column: 12, scope: !10261)
!10276 = !DILocalVariable(name: "quot", scope: !10261, file: !3, line: 6738, type: !31)
!10277 = !DILocation(line: 6738, column: 7, scope: !10261)
!10278 = !DILocalVariable(name: "rem", scope: !10261, file: !3, line: 6738, type: !31)
!10279 = !DILocation(line: 6738, column: 13, scope: !10261)
!10280 = !DILocation(line: 6740, column: 7, scope: !10281)
!10281 = distinct !DILexicalBlock(scope: !10261, file: !3, line: 6740, column: 7)
!10282 = !DILocation(line: 6740, column: 12, scope: !10281)
!10283 = !DILocation(line: 6740, column: 7, scope: !10261)
!10284 = !DILocation(line: 6740, column: 24, scope: !10281)
!10285 = !DILocation(line: 6740, column: 17, scope: !10281)
!10286 = !DILocation(line: 6741, column: 7, scope: !10287)
!10287 = distinct !DILexicalBlock(scope: !10261, file: !3, line: 6741, column: 7)
!10288 = !DILocation(line: 6741, column: 14, scope: !10287)
!10289 = !DILocation(line: 6741, column: 19, scope: !10287)
!10290 = !DILocation(line: 6741, column: 12, scope: !10287)
!10291 = !DILocation(line: 6741, column: 7, scope: !10261)
!10292 = !DILocation(line: 6742, column: 6, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10287, file: !3, line: 6741, column: 29)
!10294 = !DILocation(line: 6742, column: 9, scope: !10293)
!10295 = !DILocation(line: 6743, column: 5, scope: !10293)
!10296 = !DILocation(line: 6746, column: 10, scope: !10261)
!10297 = !DILocation(line: 6746, column: 9, scope: !10261)
!10298 = !DILocation(line: 6747, column: 7, scope: !10261)
!10299 = !DILocation(line: 6747, column: 6, scope: !10261)
!10300 = !DILocation(line: 6748, column: 7, scope: !10301)
!10301 = distinct !DILexicalBlock(scope: !10261, file: !3, line: 6748, column: 7)
!10302 = !DILocation(line: 6748, column: 10, scope: !10301)
!10303 = !DILocation(line: 6748, column: 7, scope: !10261)
!10304 = !DILocation(line: 6749, column: 8, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10301, file: !3, line: 6748, column: 21)
!10306 = !DILocation(line: 6749, column: 12, scope: !10305)
!10307 = !DILocation(line: 6749, column: 11, scope: !10305)
!10308 = !DILocation(line: 6749, column: 7, scope: !10305)
!10309 = !DILocation(line: 6750, column: 5, scope: !10305)
!10310 = !DILocation(line: 6750, column: 12, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !10312, file: !3, line: 6750, column: 5)
!10312 = distinct !DILexicalBlock(scope: !10305, file: !3, line: 6750, column: 5)
!10313 = !DILocation(line: 6750, column: 15, scope: !10311)
!10314 = !DILocation(line: 6750, column: 19, scope: !10311)
!10315 = !DILocation(line: 6750, column: 18, scope: !10311)
!10316 = !DILocation(line: 6750, column: 14, scope: !10311)
!10317 = !DILocation(line: 6750, column: 5, scope: !10312)
!10318 = !DILocation(line: 6750, column: 51, scope: !10311)
!10319 = !DILocation(line: 6750, column: 50, scope: !10311)
!10320 = !DILocation(line: 6750, column: 43, scope: !10311)
!10321 = !DILocation(line: 6750, column: 49, scope: !10311)
!10322 = !DILocation(line: 6750, column: 42, scope: !10311)
!10323 = !DILocation(line: 6750, column: 32, scope: !10311)
!10324 = !DILocation(line: 6750, column: 38, scope: !10311)
!10325 = !DILocation(line: 6750, column: 5, scope: !10311)
!10326 = distinct !{!10326, !10317, !10327}
!10327 = !DILocation(line: 6750, column: 51, scope: !10312)
!10328 = !DILocation(line: 6751, column: 12, scope: !10305)
!10329 = !DILocation(line: 6751, column: 19, scope: !10305)
!10330 = !DILocation(line: 6751, column: 18, scope: !10305)
!10331 = !DILocation(line: 6751, column: 5, scope: !10305)
!10332 = !DILocation(line: 6755, column: 6, scope: !10261)
!10333 = !DILocation(line: 6755, column: 10, scope: !10261)
!10334 = !DILocation(line: 6755, column: 9, scope: !10261)
!10335 = !DILocation(line: 6755, column: 5, scope: !10261)
!10336 = !DILocation(line: 6756, column: 9, scope: !10261)
!10337 = !DILocation(line: 6756, column: 14, scope: !10261)
!10338 = !DILocation(line: 6756, column: 23, scope: !10261)
!10339 = !DILocation(line: 6756, column: 22, scope: !10261)
!10340 = !DILocation(line: 6756, column: 8, scope: !10261)
!10341 = !DILocation(line: 6758, column: 10, scope: !10261)
!10342 = !DILocation(line: 6758, column: 9, scope: !10261)
!10343 = !DILocation(line: 6762, column: 3, scope: !10261)
!10344 = !DILocation(line: 6763, column: 19, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10346, file: !3, line: 6762, column: 22)
!10346 = distinct !DILexicalBlock(scope: !10347, file: !3, line: 6762, column: 3)
!10347 = distinct !DILexicalBlock(scope: !10261, file: !3, line: 6762, column: 3)
!10348 = !DILocation(line: 6763, column: 13, scope: !10345)
!10349 = !DILocation(line: 6763, column: 6, scope: !10345)
!10350 = !DILocation(line: 6763, column: 12, scope: !10345)
!10351 = !DILocation(line: 6764, column: 21, scope: !10345)
!10352 = !DILocation(line: 6764, column: 20, scope: !10345)
!10353 = !DILocation(line: 6764, column: 10, scope: !10345)
!10354 = !DILocation(line: 6765, column: 9, scope: !10355)
!10355 = distinct !DILexicalBlock(scope: !10345, file: !3, line: 6765, column: 9)
!10356 = !DILocation(line: 6765, column: 14, scope: !10355)
!10357 = !DILocation(line: 6765, column: 9, scope: !10345)
!10358 = !DILocation(line: 6765, column: 19, scope: !10355)
!10359 = !DILocation(line: 6766, column: 7, scope: !10345)
!10360 = !DILocation(line: 6767, column: 11, scope: !10345)
!10361 = !DILocation(line: 6767, column: 10, scope: !10345)
!10362 = !DILocation(line: 6767, column: 9, scope: !10345)
!10363 = !DILocation(line: 6769, column: 12, scope: !10345)
!10364 = !DILocation(line: 6769, column: 11, scope: !10345)
!10365 = !DILocation(line: 6770, column: 12, scope: !10345)
!10366 = !DILocation(line: 6770, column: 11, scope: !10345)
!10367 = !DILocation(line: 6770, column: 15, scope: !10345)
!10368 = !DILocation(line: 6770, column: 27, scope: !10345)
!10369 = !DILocation(line: 6770, column: 20, scope: !10345)
!10370 = !DILocation(line: 6770, column: 19, scope: !10345)
!10371 = !DILocation(line: 6770, column: 14, scope: !10345)
!10372 = !DILocation(line: 6770, column: 10, scope: !10345)
!10373 = !DILocation(line: 6775, column: 21, scope: !10345)
!10374 = !DILocation(line: 6775, column: 20, scope: !10345)
!10375 = !DILocation(line: 6775, column: 28, scope: !10345)
!10376 = !DILocation(line: 6775, column: 47, scope: !10345)
!10377 = !DILocation(line: 6775, column: 46, scope: !10345)
!10378 = !DILocation(line: 6775, column: 32, scope: !10345)
!10379 = !DILocation(line: 6775, column: 31, scope: !10345)
!10380 = !DILocation(line: 6775, column: 27, scope: !10345)
!10381 = !DILocation(line: 6775, column: 13, scope: !10345)
!10382 = !DILocation(line: 6775, column: 6, scope: !10345)
!10383 = !DILocation(line: 6775, column: 12, scope: !10345)
!10384 = !DILocation(line: 6776, column: 12, scope: !10345)
!10385 = !DILocation(line: 6776, column: 10, scope: !10345)
!10386 = !DILocation(line: 6777, column: 9, scope: !10387)
!10387 = distinct !DILexicalBlock(scope: !10345, file: !3, line: 6777, column: 9)
!10388 = !DILocation(line: 6777, column: 14, scope: !10387)
!10389 = !DILocation(line: 6777, column: 9, scope: !10345)
!10390 = !DILocation(line: 6777, column: 19, scope: !10387)
!10391 = !DILocation(line: 6778, column: 5, scope: !10345)
!10392 = !DILocation(line: 6762, column: 18, scope: !10346)
!10393 = !DILocation(line: 6762, column: 3, scope: !10346)
!10394 = distinct !{!10394, !10395, !10396}
!10395 = !DILocation(line: 6762, column: 3, scope: !10347)
!10396 = !DILocation(line: 6778, column: 5, scope: !10347)
!10397 = !DILocation(line: 6779, column: 10, scope: !10261)
!10398 = !DILocation(line: 6779, column: 17, scope: !10261)
!10399 = !DILocation(line: 6779, column: 16, scope: !10261)
!10400 = !DILocation(line: 6779, column: 20, scope: !10261)
!10401 = !DILocation(line: 6779, column: 3, scope: !10261)
!10402 = !DILocation(line: 6780, column: 3, scope: !10261)
!10403 = distinct !DISubprogram(name: "decReverse", scope: !3, file: !3, line: 6656, type: !10404, scopeLine: 6656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!10404 = !DISubroutineType(types: !10405)
!10405 = !{null, !43, !43}
!10406 = !DILocalVariable(name: "ulo", arg: 1, scope: !10403, file: !3, line: 6656, type: !43)
!10407 = !DILocation(line: 6656, column: 30, scope: !10403)
!10408 = !DILocalVariable(name: "uhi", arg: 2, scope: !10403, file: !3, line: 6656, type: !43)
!10409 = !DILocation(line: 6656, column: 41, scope: !10403)
!10410 = !DILocalVariable(name: "temp", scope: !10403, file: !3, line: 6657, type: !39)
!10411 = !DILocation(line: 6657, column: 8, scope: !10403)
!10412 = !DILocation(line: 6658, column: 3, scope: !10403)
!10413 = !DILocation(line: 6658, column: 10, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10415, file: !3, line: 6658, column: 3)
!10415 = distinct !DILexicalBlock(scope: !10403, file: !3, line: 6658, column: 3)
!10416 = !DILocation(line: 6658, column: 14, scope: !10414)
!10417 = !DILocation(line: 6658, column: 13, scope: !10414)
!10418 = !DILocation(line: 6658, column: 3, scope: !10415)
!10419 = !DILocation(line: 6659, column: 11, scope: !10420)
!10420 = distinct !DILexicalBlock(scope: !10414, file: !3, line: 6658, column: 33)
!10421 = !DILocation(line: 6659, column: 10, scope: !10420)
!10422 = !DILocation(line: 6659, column: 9, scope: !10420)
!10423 = !DILocation(line: 6660, column: 11, scope: !10420)
!10424 = !DILocation(line: 6660, column: 10, scope: !10420)
!10425 = !DILocation(line: 6660, column: 6, scope: !10420)
!10426 = !DILocation(line: 6660, column: 9, scope: !10420)
!10427 = !DILocation(line: 6661, column: 10, scope: !10420)
!10428 = !DILocation(line: 6661, column: 6, scope: !10420)
!10429 = !DILocation(line: 6661, column: 9, scope: !10420)
!10430 = !DILocation(line: 6662, column: 5, scope: !10420)
!10431 = !DILocation(line: 6658, column: 22, scope: !10414)
!10432 = !DILocation(line: 6658, column: 29, scope: !10414)
!10433 = !DILocation(line: 6658, column: 3, scope: !10414)
!10434 = distinct !{!10434, !10418, !10435}
!10435 = !DILocation(line: 6662, column: 5, scope: !10415)
!10436 = !DILocation(line: 6663, column: 3, scope: !10403)
!10437 = distinct !DISubprogram(name: "decNumberSameQuantum", scope: !3, file: !3, line: 2576, type: !8223, scopeLine: 2577, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!10438 = !DILocalVariable(name: "res", arg: 1, scope: !10437, file: !3, line: 2576, type: !47)
!10439 = !DILocation(line: 2576, column: 45, scope: !10437)
!10440 = !DILocalVariable(name: "lhs", arg: 2, scope: !10437, file: !3, line: 2576, type: !267)
!10441 = !DILocation(line: 2576, column: 67, scope: !10437)
!10442 = !DILocalVariable(name: "rhs", arg: 3, scope: !10437, file: !3, line: 2577, type: !267)
!10443 = !DILocation(line: 2577, column: 23, scope: !10437)
!10444 = !DILocalVariable(name: "ret", scope: !10437, file: !3, line: 2578, type: !39)
!10445 = !DILocation(line: 2578, column: 8, scope: !10437)
!10446 = !DILocation(line: 2584, column: 7, scope: !10447)
!10447 = distinct !DILexicalBlock(scope: !10437, file: !3, line: 2584, column: 7)
!10448 = !DILocation(line: 2584, column: 7, scope: !10437)
!10449 = !DILocation(line: 2585, column: 9, scope: !10450)
!10450 = distinct !DILexicalBlock(scope: !10451, file: !3, line: 2585, column: 9)
!10451 = distinct !DILexicalBlock(scope: !10447, file: !3, line: 2584, column: 20)
!10452 = !DILocation(line: 2585, column: 29, scope: !10450)
!10453 = !DILocation(line: 2585, column: 32, scope: !10450)
!10454 = !DILocation(line: 2585, column: 9, scope: !10451)
!10455 = !DILocation(line: 2585, column: 56, scope: !10450)
!10456 = !DILocation(line: 2585, column: 53, scope: !10450)
!10457 = !DILocation(line: 2586, column: 15, scope: !10458)
!10458 = distinct !DILexicalBlock(scope: !10450, file: !3, line: 2586, column: 15)
!10459 = !DILocation(line: 2586, column: 40, scope: !10458)
!10460 = !DILocation(line: 2586, column: 43, scope: !10458)
!10461 = !DILocation(line: 2586, column: 15, scope: !10450)
!10462 = !DILocation(line: 2586, column: 72, scope: !10458)
!10463 = !DILocation(line: 2586, column: 69, scope: !10458)
!10464 = !DILocation(line: 2588, column: 5, scope: !10451)
!10465 = !DILocation(line: 2589, column: 13, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !10447, file: !3, line: 2589, column: 13)
!10467 = !DILocation(line: 2589, column: 18, scope: !10466)
!10468 = !DILocation(line: 2589, column: 28, scope: !10466)
!10469 = !DILocation(line: 2589, column: 33, scope: !10466)
!10470 = !DILocation(line: 2589, column: 26, scope: !10466)
!10471 = !DILocation(line: 2589, column: 13, scope: !10447)
!10472 = !DILocation(line: 2589, column: 46, scope: !10466)
!10473 = !DILocation(line: 2589, column: 43, scope: !10466)
!10474 = !DILocation(line: 2591, column: 17, scope: !10437)
!10475 = !DILocation(line: 2591, column: 3, scope: !10437)
!10476 = !DILocation(line: 2592, column: 13, scope: !10437)
!10477 = !DILocation(line: 2592, column: 4, scope: !10437)
!10478 = !DILocation(line: 2592, column: 9, scope: !10437)
!10479 = !DILocation(line: 2592, column: 3, scope: !10437)
!10480 = !DILocation(line: 2592, column: 12, scope: !10437)
!10481 = !DILocation(line: 2593, column: 10, scope: !10437)
!10482 = !DILocation(line: 2593, column: 3, scope: !10437)
!10483 = distinct !DISubprogram(name: "decNumberScaleB", scope: !3, file: !3, line: 2611, type: !2989, scopeLine: 2612, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!10484 = !DILocalVariable(name: "res", arg: 1, scope: !10483, file: !3, line: 2611, type: !47)
!10485 = !DILocation(line: 2611, column: 40, scope: !10483)
!10486 = !DILocalVariable(name: "lhs", arg: 2, scope: !10483, file: !3, line: 2611, type: !267)
!10487 = !DILocation(line: 2611, column: 62, scope: !10483)
!10488 = !DILocalVariable(name: "rhs", arg: 3, scope: !10483, file: !3, line: 2612, type: !267)
!10489 = !DILocation(line: 2612, column: 25, scope: !10483)
!10490 = !DILocalVariable(name: "set", arg: 4, scope: !10483, file: !3, line: 2612, type: !269)
!10491 = !DILocation(line: 2612, column: 42, scope: !10483)
!10492 = !DILocalVariable(name: "reqexp", scope: !10483, file: !3, line: 2613, type: !31)
!10493 = !DILocation(line: 2613, column: 8, scope: !10483)
!10494 = !DILocalVariable(name: "status", scope: !10483, file: !3, line: 2614, type: !36)
!10495 = !DILocation(line: 2614, column: 8, scope: !10483)
!10496 = !DILocalVariable(name: "residue", scope: !10483, file: !3, line: 2615, type: !31)
!10497 = !DILocation(line: 2615, column: 8, scope: !10483)
!10498 = !DILocation(line: 2622, column: 7, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10483, file: !3, line: 2622, column: 7)
!10500 = !DILocation(line: 2622, column: 27, scope: !10499)
!10501 = !DILocation(line: 2622, column: 30, scope: !10499)
!10502 = !DILocation(line: 2622, column: 7, scope: !10483)
!10503 = !DILocation(line: 2623, column: 13, scope: !10499)
!10504 = !DILocation(line: 2623, column: 18, scope: !10499)
!10505 = !DILocation(line: 2623, column: 23, scope: !10499)
!10506 = !DILocation(line: 2623, column: 28, scope: !10499)
!10507 = !DILocation(line: 2623, column: 5, scope: !10499)
!10508 = !DILocation(line: 2625, column: 13, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10499, file: !3, line: 2625, column: 13)
!10510 = !DILocation(line: 2625, column: 38, scope: !10509)
!10511 = !DILocation(line: 2625, column: 41, scope: !10509)
!10512 = !DILocation(line: 2625, column: 46, scope: !10509)
!10513 = !DILocation(line: 2625, column: 54, scope: !10509)
!10514 = !DILocation(line: 2625, column: 13, scope: !10499)
!10515 = !DILocation(line: 2626, column: 11, scope: !10509)
!10516 = !DILocation(line: 2626, column: 5, scope: !10509)
!10517 = !DILocation(line: 2629, column: 22, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10509, file: !3, line: 2627, column: 9)
!10519 = !DILocation(line: 2629, column: 12, scope: !10518)
!10520 = !DILocation(line: 2629, column: 11, scope: !10518)
!10521 = !DILocation(line: 2630, column: 9, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10518, file: !3, line: 2630, column: 9)
!10523 = !DILocation(line: 2630, column: 15, scope: !10522)
!10524 = !DILocation(line: 2631, column: 6, scope: !10522)
!10525 = !DILocation(line: 2631, column: 9, scope: !10522)
!10526 = !DILocation(line: 2631, column: 15, scope: !10522)
!10527 = !DILocation(line: 2631, column: 24, scope: !10522)
!10528 = !DILocation(line: 2631, column: 27, scope: !10522)
!10529 = !DILocation(line: 2631, column: 33, scope: !10522)
!10530 = !DILocation(line: 2632, column: 6, scope: !10522)
!10531 = !DILocation(line: 2632, column: 13, scope: !10522)
!10532 = !DILocation(line: 2632, column: 9, scope: !10522)
!10533 = !DILocation(line: 2632, column: 25, scope: !10522)
!10534 = !DILocation(line: 2632, column: 30, scope: !10522)
!10535 = !DILocation(line: 2632, column: 37, scope: !10522)
!10536 = !DILocation(line: 2632, column: 42, scope: !10522)
!10537 = !DILocation(line: 2632, column: 36, scope: !10522)
!10538 = !DILocation(line: 2632, column: 23, scope: !10522)
!10539 = !DILocation(line: 2632, column: 20, scope: !10522)
!10540 = !DILocation(line: 2630, column: 9, scope: !10518)
!10541 = !DILocation(line: 2633, column: 13, scope: !10522)
!10542 = !DILocation(line: 2633, column: 7, scope: !10522)
!10543 = !DILocation(line: 2635, column: 21, scope: !10544)
!10544 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 2634, column: 11)
!10545 = !DILocation(line: 2635, column: 26, scope: !10544)
!10546 = !DILocation(line: 2635, column: 7, scope: !10544)
!10547 = !DILocation(line: 2636, column: 12, scope: !10548)
!10548 = distinct !DILexicalBlock(scope: !10544, file: !3, line: 2636, column: 11)
!10549 = !DILocation(line: 2636, column: 11, scope: !10544)
!10550 = !DILocation(line: 2637, column: 17, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10548, file: !3, line: 2636, column: 38)
!10552 = !DILocation(line: 2637, column: 2, scope: !10551)
!10553 = !DILocation(line: 2637, column: 7, scope: !10551)
!10554 = !DILocation(line: 2637, column: 15, scope: !10551)
!10555 = !DILocation(line: 2638, column: 9, scope: !10551)
!10556 = !DILocation(line: 2639, column: 14, scope: !10551)
!10557 = !DILocation(line: 2639, column: 19, scope: !10551)
!10558 = !DILocation(line: 2639, column: 2, scope: !10551)
!10559 = !DILocation(line: 2640, column: 2, scope: !10551)
!10560 = !DILocation(line: 2643, column: 7, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10483, file: !3, line: 2643, column: 7)
!10562 = !DILocation(line: 2643, column: 13, scope: !10561)
!10563 = !DILocation(line: 2643, column: 7, scope: !10483)
!10564 = !DILocation(line: 2643, column: 28, scope: !10561)
!10565 = !DILocation(line: 2643, column: 33, scope: !10561)
!10566 = !DILocation(line: 2643, column: 41, scope: !10561)
!10567 = !DILocation(line: 2643, column: 18, scope: !10561)
!10568 = !DILocation(line: 2644, column: 10, scope: !10483)
!10569 = !DILocation(line: 2644, column: 3, scope: !10483)
!10570 = distinct !DISubprogram(name: "decNumberShift", scope: !3, file: !3, line: 2668, type: !2989, scopeLine: 2669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!10571 = !DILocalVariable(name: "res", arg: 1, scope: !10570, file: !3, line: 2668, type: !47)
!10572 = !DILocation(line: 2668, column: 39, scope: !10570)
!10573 = !DILocalVariable(name: "lhs", arg: 2, scope: !10570, file: !3, line: 2668, type: !267)
!10574 = !DILocation(line: 2668, column: 61, scope: !10570)
!10575 = !DILocalVariable(name: "rhs", arg: 3, scope: !10570, file: !3, line: 2669, type: !267)
!10576 = !DILocation(line: 2669, column: 24, scope: !10570)
!10577 = !DILocalVariable(name: "set", arg: 4, scope: !10570, file: !3, line: 2669, type: !269)
!10578 = !DILocation(line: 2669, column: 41, scope: !10570)
!10579 = !DILocalVariable(name: "status", scope: !10570, file: !3, line: 2670, type: !36)
!10580 = !DILocation(line: 2670, column: 8, scope: !10570)
!10581 = !DILocalVariable(name: "shift", scope: !10570, file: !3, line: 2671, type: !31)
!10582 = !DILocation(line: 2671, column: 8, scope: !10570)
!10583 = !DILocation(line: 2678, column: 7, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10570, file: !3, line: 2678, column: 7)
!10585 = !DILocation(line: 2678, column: 27, scope: !10584)
!10586 = !DILocation(line: 2678, column: 30, scope: !10584)
!10587 = !DILocation(line: 2678, column: 7, scope: !10570)
!10588 = !DILocation(line: 2679, column: 13, scope: !10584)
!10589 = !DILocation(line: 2679, column: 18, scope: !10584)
!10590 = !DILocation(line: 2679, column: 23, scope: !10584)
!10591 = !DILocation(line: 2679, column: 28, scope: !10584)
!10592 = !DILocation(line: 2679, column: 5, scope: !10584)
!10593 = !DILocation(line: 2681, column: 13, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10584, file: !3, line: 2681, column: 13)
!10595 = !DILocation(line: 2681, column: 38, scope: !10594)
!10596 = !DILocation(line: 2681, column: 41, scope: !10594)
!10597 = !DILocation(line: 2681, column: 46, scope: !10594)
!10598 = !DILocation(line: 2681, column: 54, scope: !10594)
!10599 = !DILocation(line: 2681, column: 13, scope: !10584)
!10600 = !DILocation(line: 2682, column: 11, scope: !10594)
!10601 = !DILocation(line: 2682, column: 5, scope: !10594)
!10602 = !DILocation(line: 2684, column: 21, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10594, file: !3, line: 2683, column: 9)
!10604 = !DILocation(line: 2684, column: 11, scope: !10603)
!10605 = !DILocation(line: 2684, column: 10, scope: !10603)
!10606 = !DILocation(line: 2685, column: 9, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10603, file: !3, line: 2685, column: 9)
!10608 = !DILocation(line: 2685, column: 14, scope: !10607)
!10609 = !DILocation(line: 2686, column: 6, scope: !10607)
!10610 = !DILocation(line: 2686, column: 9, scope: !10607)
!10611 = !DILocation(line: 2686, column: 14, scope: !10607)
!10612 = !DILocation(line: 2686, column: 23, scope: !10607)
!10613 = !DILocation(line: 2686, column: 26, scope: !10607)
!10614 = !DILocation(line: 2686, column: 31, scope: !10607)
!10615 = !DILocation(line: 2687, column: 6, scope: !10607)
!10616 = !DILocation(line: 2687, column: 13, scope: !10607)
!10617 = !DILocation(line: 2687, column: 9, scope: !10607)
!10618 = !DILocation(line: 2687, column: 20, scope: !10607)
!10619 = !DILocation(line: 2687, column: 25, scope: !10607)
!10620 = !DILocation(line: 2687, column: 19, scope: !10607)
!10621 = !DILocation(line: 2685, column: 9, scope: !10603)
!10622 = !DILocation(line: 2688, column: 13, scope: !10607)
!10623 = !DILocation(line: 2688, column: 7, scope: !10607)
!10624 = !DILocation(line: 2690, column: 21, scope: !10625)
!10625 = distinct !DILexicalBlock(scope: !10607, file: !3, line: 2689, column: 11)
!10626 = !DILocation(line: 2690, column: 26, scope: !10625)
!10627 = !DILocation(line: 2690, column: 7, scope: !10625)
!10628 = !DILocation(line: 2691, column: 11, scope: !10629)
!10629 = distinct !DILexicalBlock(scope: !10625, file: !3, line: 2691, column: 11)
!10630 = !DILocation(line: 2691, column: 16, scope: !10629)
!10631 = !DILocation(line: 2691, column: 20, scope: !10629)
!10632 = !DILocation(line: 2691, column: 24, scope: !10629)
!10633 = !DILocation(line: 2691, column: 11, scope: !10625)
!10634 = !DILocation(line: 2692, column: 6, scope: !10635)
!10635 = distinct !DILexicalBlock(scope: !10636, file: !3, line: 2692, column: 6)
!10636 = distinct !DILexicalBlock(scope: !10629, file: !3, line: 2691, column: 50)
!10637 = !DILocation(line: 2692, column: 11, scope: !10635)
!10638 = !DILocation(line: 2692, column: 6, scope: !10636)
!10639 = !DILocation(line: 2693, column: 8, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10641, file: !3, line: 2693, column: 8)
!10641 = distinct !DILexicalBlock(scope: !10635, file: !3, line: 2692, column: 15)
!10642 = !DILocation(line: 2693, column: 15, scope: !10640)
!10643 = !DILocation(line: 2693, column: 20, scope: !10640)
!10644 = !DILocation(line: 2693, column: 13, scope: !10640)
!10645 = !DILocation(line: 2693, column: 8, scope: !10641)
!10646 = !DILocation(line: 2694, column: 7, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10640, file: !3, line: 2693, column: 28)
!10648 = !DILocation(line: 2694, column: 12, scope: !10647)
!10649 = !DILocation(line: 2694, column: 6, scope: !10647)
!10650 = !DILocation(line: 2694, column: 15, scope: !10647)
!10651 = !DILocation(line: 2695, column: 6, scope: !10647)
!10652 = !DILocation(line: 2695, column: 11, scope: !10647)
!10653 = !DILocation(line: 2695, column: 17, scope: !10647)
!10654 = !DILocation(line: 2696, column: 6, scope: !10647)
!10655 = !DILocation(line: 2699, column: 10, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10657, file: !3, line: 2699, column: 10)
!10657 = distinct !DILexicalBlock(scope: !10640, file: !3, line: 2697, column: 10)
!10658 = !DILocation(line: 2699, column: 15, scope: !10656)
!10659 = !DILocation(line: 2699, column: 22, scope: !10656)
!10660 = !DILocation(line: 2699, column: 21, scope: !10656)
!10661 = !DILocation(line: 2699, column: 28, scope: !10656)
!10662 = !DILocation(line: 2699, column: 33, scope: !10656)
!10663 = !DILocation(line: 2699, column: 27, scope: !10656)
!10664 = !DILocation(line: 2699, column: 10, scope: !10657)
!10665 = !DILocation(line: 2700, column: 17, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10656, file: !3, line: 2699, column: 41)
!10667 = !DILocation(line: 2700, column: 22, scope: !10666)
!10668 = !DILocation(line: 2700, column: 27, scope: !10666)
!10669 = !DILocation(line: 2700, column: 34, scope: !10666)
!10670 = !DILocation(line: 2700, column: 33, scope: !10666)
!10671 = !DILocation(line: 2700, column: 40, scope: !10666)
!10672 = !DILocation(line: 2700, column: 45, scope: !10666)
!10673 = !DILocation(line: 2700, column: 39, scope: !10666)
!10674 = !DILocation(line: 2700, column: 8, scope: !10666)
!10675 = !DILocation(line: 2703, column: 8, scope: !10666)
!10676 = !DILocation(line: 2704, column: 10, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10657, file: !3, line: 2704, column: 10)
!10678 = !DILocation(line: 2704, column: 15, scope: !10677)
!10679 = !DILocation(line: 2704, column: 21, scope: !10677)
!10680 = !DILocation(line: 2704, column: 24, scope: !10677)
!10681 = !DILocation(line: 2704, column: 28, scope: !10677)
!10682 = !DILocation(line: 2704, column: 33, scope: !10677)
!10683 = !DILocation(line: 2704, column: 27, scope: !10677)
!10684 = !DILocation(line: 2704, column: 10, scope: !10657)
!10685 = !DILocation(line: 2705, column: 35, scope: !10677)
!10686 = !DILocation(line: 2705, column: 40, scope: !10677)
!10687 = !DILocation(line: 2705, column: 45, scope: !10677)
!10688 = !DILocation(line: 2705, column: 50, scope: !10677)
!10689 = !DILocation(line: 2705, column: 58, scope: !10677)
!10690 = !DILocation(line: 2705, column: 20, scope: !10677)
!10691 = !DILocation(line: 2705, column: 8, scope: !10677)
!10692 = !DILocation(line: 2705, column: 13, scope: !10677)
!10693 = !DILocation(line: 2705, column: 19, scope: !10677)
!10694 = !DILocation(line: 2707, column: 4, scope: !10641)
!10695 = !DILocation(line: 2709, column: 9, scope: !10696)
!10696 = distinct !DILexicalBlock(scope: !10697, file: !3, line: 2709, column: 8)
!10697 = distinct !DILexicalBlock(scope: !10635, file: !3, line: 2708, column: 8)
!10698 = !DILocation(line: 2709, column: 8, scope: !10696)
!10699 = !DILocation(line: 2709, column: 16, scope: !10696)
!10700 = !DILocation(line: 2709, column: 21, scope: !10696)
!10701 = !DILocation(line: 2709, column: 14, scope: !10696)
!10702 = !DILocation(line: 2709, column: 8, scope: !10697)
!10703 = !DILocation(line: 2710, column: 7, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10696, file: !3, line: 2709, column: 29)
!10705 = !DILocation(line: 2710, column: 12, scope: !10704)
!10706 = !DILocation(line: 2710, column: 6, scope: !10704)
!10707 = !DILocation(line: 2710, column: 15, scope: !10704)
!10708 = !DILocation(line: 2711, column: 6, scope: !10704)
!10709 = !DILocation(line: 2711, column: 11, scope: !10704)
!10710 = !DILocation(line: 2711, column: 17, scope: !10704)
!10711 = !DILocation(line: 2712, column: 6, scope: !10704)
!10712 = !DILocation(line: 2714, column: 22, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10696, file: !3, line: 2713, column: 10)
!10714 = !DILocation(line: 2714, column: 27, scope: !10713)
!10715 = !DILocation(line: 2714, column: 32, scope: !10713)
!10716 = !DILocation(line: 2714, column: 51, scope: !10713)
!10717 = !DILocation(line: 2714, column: 50, scope: !10713)
!10718 = !DILocation(line: 2714, column: 6, scope: !10713)
!10719 = !DILocation(line: 2715, column: 21, scope: !10713)
!10720 = !DILocation(line: 2715, column: 20, scope: !10713)
!10721 = !DILocation(line: 2715, column: 6, scope: !10713)
!10722 = !DILocation(line: 2715, column: 11, scope: !10713)
!10723 = !DILocation(line: 2715, column: 17, scope: !10713)
!10724 = !DILocation(line: 2718, column: 2, scope: !10636)
!10725 = !DILocation(line: 2721, column: 7, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10570, file: !3, line: 2721, column: 7)
!10727 = !DILocation(line: 2721, column: 13, scope: !10726)
!10728 = !DILocation(line: 2721, column: 7, scope: !10570)
!10729 = !DILocation(line: 2721, column: 28, scope: !10726)
!10730 = !DILocation(line: 2721, column: 33, scope: !10726)
!10731 = !DILocation(line: 2721, column: 41, scope: !10726)
!10732 = !DILocation(line: 2721, column: 18, scope: !10726)
!10733 = !DILocation(line: 2722, column: 10, scope: !10570)
!10734 = !DILocation(line: 2722, column: 3, scope: !10570)
!10735 = distinct !DISubprogram(name: "decDecap", scope: !3, file: !3, line: 7625, type: !93, scopeLine: 7625, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!10736 = !DILocalVariable(name: "dn", arg: 1, scope: !10735, file: !3, line: 7625, type: !47)
!10737 = !DILocation(line: 7625, column: 39, scope: !10735)
!10738 = !DILocalVariable(name: "drop", arg: 2, scope: !10735, file: !3, line: 7625, type: !31)
!10739 = !DILocation(line: 7625, column: 47, scope: !10735)
!10740 = !DILocalVariable(name: "msu", scope: !10735, file: !3, line: 7626, type: !43)
!10741 = !DILocation(line: 7626, column: 9, scope: !10735)
!10742 = !DILocalVariable(name: "cut", scope: !10735, file: !3, line: 7627, type: !31)
!10743 = !DILocation(line: 7627, column: 7, scope: !10735)
!10744 = !DILocation(line: 7628, column: 7, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10735, file: !3, line: 7628, column: 7)
!10746 = !DILocation(line: 7628, column: 13, scope: !10745)
!10747 = !DILocation(line: 7628, column: 17, scope: !10745)
!10748 = !DILocation(line: 7628, column: 11, scope: !10745)
!10749 = !DILocation(line: 7628, column: 7, scope: !10735)
!10750 = !DILocation(line: 7634, column: 5, scope: !10751)
!10751 = distinct !DILexicalBlock(scope: !10745, file: !3, line: 7628, column: 25)
!10752 = !DILocation(line: 7634, column: 9, scope: !10751)
!10753 = !DILocation(line: 7634, column: 15, scope: !10751)
!10754 = !DILocation(line: 7635, column: 5, scope: !10751)
!10755 = !DILocation(line: 7635, column: 9, scope: !10751)
!10756 = !DILocation(line: 7635, column: 15, scope: !10751)
!10757 = !DILocation(line: 7636, column: 12, scope: !10751)
!10758 = !DILocation(line: 7636, column: 5, scope: !10751)
!10759 = !DILocation(line: 7638, column: 7, scope: !10735)
!10760 = !DILocation(line: 7638, column: 11, scope: !10735)
!10761 = !DILocation(line: 7638, column: 15, scope: !10735)
!10762 = !DILocation(line: 7638, column: 14, scope: !10735)
!10763 = !DILocation(line: 7638, column: 35, scope: !10735)
!10764 = !DILocation(line: 7638, column: 6, scope: !10735)
!10765 = !DILocation(line: 7639, column: 7, scope: !10735)
!10766 = !DILocation(line: 7639, column: 6, scope: !10735)
!10767 = !DILocation(line: 7640, column: 7, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10735, file: !3, line: 7640, column: 7)
!10769 = !DILocation(line: 7640, column: 10, scope: !10768)
!10770 = !DILocation(line: 7640, column: 7, scope: !10735)
!10771 = !DILocation(line: 7640, column: 34, scope: !10768)
!10772 = !DILocation(line: 7640, column: 27, scope: !10768)
!10773 = !DILocation(line: 7640, column: 22, scope: !10768)
!10774 = !DILocation(line: 7640, column: 25, scope: !10768)
!10775 = !DILocation(line: 7640, column: 21, scope: !10768)
!10776 = !DILocation(line: 7642, column: 27, scope: !10735)
!10777 = !DILocation(line: 7642, column: 31, scope: !10735)
!10778 = !DILocation(line: 7642, column: 36, scope: !10735)
!10779 = !DILocation(line: 7642, column: 40, scope: !10735)
!10780 = !DILocation(line: 7642, column: 44, scope: !10735)
!10781 = !DILocation(line: 7642, column: 39, scope: !10735)
!10782 = !DILocation(line: 7642, column: 47, scope: !10735)
!10783 = !DILocation(line: 7642, column: 14, scope: !10735)
!10784 = !DILocation(line: 7642, column: 3, scope: !10735)
!10785 = !DILocation(line: 7642, column: 7, scope: !10735)
!10786 = !DILocation(line: 7642, column: 13, scope: !10735)
!10787 = !DILocation(line: 7643, column: 10, scope: !10735)
!10788 = !DILocation(line: 7643, column: 3, scope: !10735)
!10789 = !DILocation(line: 7644, column: 3, scope: !10735)
!10790 = distinct !DISubprogram(name: "decNumberSquareRoot", scope: !3, file: !3, line: 2797, type: !2287, scopeLine: 2798, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!10791 = !DILocalVariable(name: "res", arg: 1, scope: !10790, file: !3, line: 2797, type: !47)
!10792 = !DILocation(line: 2797, column: 44, scope: !10790)
!10793 = !DILocalVariable(name: "rhs", arg: 2, scope: !10790, file: !3, line: 2797, type: !267)
!10794 = !DILocation(line: 2797, column: 66, scope: !10790)
!10795 = !DILocalVariable(name: "set", arg: 3, scope: !10790, file: !3, line: 2798, type: !269)
!10796 = !DILocation(line: 2798, column: 17, scope: !10790)
!10797 = !DILocalVariable(name: "workset", scope: !10790, file: !3, line: 2799, type: !270)
!10798 = !DILocation(line: 2799, column: 14, scope: !10790)
!10799 = !DILocalVariable(name: "approxset", scope: !10790, file: !3, line: 2799, type: !270)
!10800 = !DILocation(line: 2799, column: 23, scope: !10790)
!10801 = !DILocalVariable(name: "dzero", scope: !10790, file: !3, line: 2800, type: !48)
!10802 = !DILocation(line: 2800, column: 13, scope: !10790)
!10803 = !DILocalVariable(name: "maxp", scope: !10790, file: !3, line: 2801, type: !31)
!10804 = !DILocation(line: 2801, column: 8, scope: !10790)
!10805 = !DILocalVariable(name: "workp", scope: !10790, file: !3, line: 2802, type: !31)
!10806 = !DILocation(line: 2802, column: 8, scope: !10790)
!10807 = !DILocalVariable(name: "residue", scope: !10790, file: !3, line: 2803, type: !31)
!10808 = !DILocation(line: 2803, column: 8, scope: !10790)
!10809 = !DILocalVariable(name: "status", scope: !10790, file: !3, line: 2804, type: !36)
!10810 = !DILocation(line: 2804, column: 8, scope: !10790)
!10811 = !DILocalVariable(name: "ignore", scope: !10790, file: !3, line: 2804, type: !36)
!10812 = !DILocation(line: 2804, column: 18, scope: !10790)
!10813 = !DILocalVariable(name: "rstatus", scope: !10790, file: !3, line: 2805, type: !36)
!10814 = !DILocation(line: 2805, column: 8, scope: !10790)
!10815 = !DILocalVariable(name: "exp", scope: !10790, file: !3, line: 2806, type: !31)
!10816 = !DILocation(line: 2806, column: 8, scope: !10790)
!10817 = !DILocalVariable(name: "ideal", scope: !10790, file: !3, line: 2807, type: !31)
!10818 = !DILocation(line: 2807, column: 8, scope: !10790)
!10819 = !DILocalVariable(name: "needbytes", scope: !10790, file: !3, line: 2808, type: !31)
!10820 = !DILocation(line: 2808, column: 8, scope: !10790)
!10821 = !DILocalVariable(name: "dropped", scope: !10790, file: !3, line: 2809, type: !31)
!10822 = !DILocation(line: 2809, column: 8, scope: !10790)
!10823 = !DILocalVariable(name: "buff", scope: !10790, file: !3, line: 2815, type: !3638)
!10824 = !DILocation(line: 2815, column: 13, scope: !10790)
!10825 = !DILocalVariable(name: "bufa", scope: !10790, file: !3, line: 2817, type: !3638)
!10826 = !DILocation(line: 2817, column: 13, scope: !10790)
!10827 = !DILocalVariable(name: "bufb", scope: !10790, file: !3, line: 2819, type: !3638)
!10828 = !DILocation(line: 2819, column: 13, scope: !10790)
!10829 = !DILocalVariable(name: "allocbuff", scope: !10790, file: !3, line: 2820, type: !47)
!10830 = !DILocation(line: 2820, column: 14, scope: !10790)
!10831 = !DILocalVariable(name: "allocbufa", scope: !10790, file: !3, line: 2821, type: !47)
!10832 = !DILocation(line: 2821, column: 14, scope: !10790)
!10833 = !DILocalVariable(name: "allocbufb", scope: !10790, file: !3, line: 2822, type: !47)
!10834 = !DILocation(line: 2822, column: 14, scope: !10790)
!10835 = !DILocalVariable(name: "f", scope: !10790, file: !3, line: 2823, type: !47)
!10836 = !DILocation(line: 2823, column: 14, scope: !10790)
!10837 = !DILocation(line: 2823, column: 16, scope: !10790)
!10838 = !DILocalVariable(name: "a", scope: !10790, file: !3, line: 2824, type: !47)
!10839 = !DILocation(line: 2824, column: 14, scope: !10790)
!10840 = !DILocation(line: 2824, column: 16, scope: !10790)
!10841 = !DILocalVariable(name: "b", scope: !10790, file: !3, line: 2825, type: !47)
!10842 = !DILocation(line: 2825, column: 14, scope: !10790)
!10843 = !DILocation(line: 2825, column: 16, scope: !10790)
!10844 = !DILocalVariable(name: "buft", scope: !10790, file: !3, line: 2827, type: !10845)
!10845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 96, elements: !57)
!10846 = !DILocation(line: 2827, column: 13, scope: !10790)
!10847 = !DILocalVariable(name: "t", scope: !10790, file: !3, line: 2828, type: !47)
!10848 = !DILocation(line: 2828, column: 14, scope: !10790)
!10849 = !DILocation(line: 2828, column: 16, scope: !10790)
!10850 = !DILocation(line: 2834, column: 3, scope: !10790)
!10851 = !DILocation(line: 2850, column: 9, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10853, file: !3, line: 2850, column: 9)
!10853 = distinct !DILexicalBlock(scope: !10790, file: !3, line: 2834, column: 6)
!10854 = !DILocation(line: 2850, column: 9, scope: !10853)
!10855 = !DILocation(line: 2851, column: 11, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10857, file: !3, line: 2851, column: 11)
!10857 = distinct !DILexicalBlock(scope: !10852, file: !3, line: 2850, column: 21)
!10858 = !DILocation(line: 2851, column: 11, scope: !10857)
!10859 = !DILocation(line: 2852, column: 6, scope: !10860)
!10860 = distinct !DILexicalBlock(scope: !10861, file: !3, line: 2852, column: 6)
!10861 = distinct !DILexicalBlock(scope: !10856, file: !3, line: 2851, column: 37)
!10862 = !DILocation(line: 2852, column: 6, scope: !10861)
!10863 = !DILocation(line: 2852, column: 38, scope: !10860)
!10864 = !DILocation(line: 2852, column: 32, scope: !10860)
!10865 = !DILocation(line: 2853, column: 22, scope: !10860)
!10866 = !DILocation(line: 2853, column: 27, scope: !10860)
!10867 = !DILocation(line: 2853, column: 8, scope: !10860)
!10868 = !DILocation(line: 2854, column: 2, scope: !10861)
!10869 = !DILocation(line: 2855, column: 21, scope: !10856)
!10870 = !DILocation(line: 2855, column: 26, scope: !10856)
!10871 = !DILocation(line: 2855, column: 37, scope: !10856)
!10872 = !DILocation(line: 2855, column: 13, scope: !10856)
!10873 = !DILocation(line: 2856, column: 7, scope: !10857)
!10874 = !DILocation(line: 2862, column: 12, scope: !10853)
!10875 = !DILocation(line: 2862, column: 17, scope: !10853)
!10876 = !DILocation(line: 2862, column: 25, scope: !10853)
!10877 = !DILocation(line: 2862, column: 29, scope: !10853)
!10878 = !DILocation(line: 2862, column: 10, scope: !10853)
!10879 = !DILocation(line: 2865, column: 9, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10853, file: !3, line: 2865, column: 9)
!10881 = !DILocation(line: 2865, column: 9, scope: !10853)
!10882 = !DILocation(line: 2866, column: 21, scope: !10883)
!10883 = distinct !DILexicalBlock(scope: !10880, file: !3, line: 2865, column: 22)
!10884 = !DILocation(line: 2866, column: 26, scope: !10883)
!10885 = !DILocation(line: 2866, column: 7, scope: !10883)
!10886 = !DILocation(line: 2867, column: 21, scope: !10883)
!10887 = !DILocation(line: 2867, column: 7, scope: !10883)
!10888 = !DILocation(line: 2867, column: 12, scope: !10883)
!10889 = !DILocation(line: 2867, column: 20, scope: !10883)
!10890 = !DILocation(line: 2869, column: 7, scope: !10883)
!10891 = !DILocation(line: 2870, column: 7, scope: !10883)
!10892 = !DILocation(line: 2874, column: 9, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10853, file: !3, line: 2874, column: 9)
!10894 = !DILocation(line: 2874, column: 9, scope: !10853)
!10895 = !DILocation(line: 2875, column: 13, scope: !10896)
!10896 = distinct !DILexicalBlock(scope: !10893, file: !3, line: 2874, column: 35)
!10897 = !DILocation(line: 2876, column: 7, scope: !10896)
!10898 = !DILocation(line: 2886, column: 11, scope: !10853)
!10899 = !DILocation(line: 2886, column: 10, scope: !10853)
!10900 = !DILocation(line: 2887, column: 11, scope: !10853)
!10901 = !DILocation(line: 2887, column: 10, scope: !10853)
!10902 = !DILocation(line: 2888, column: 10, scope: !10853)
!10903 = !DILocation(line: 2888, column: 15, scope: !10853)
!10904 = !DILocation(line: 2888, column: 9, scope: !10853)
!10905 = !DILocation(line: 2890, column: 34, scope: !10853)
!10906 = !DILocation(line: 2890, column: 50, scope: !10853)
!10907 = !DILocation(line: 2890, column: 33, scope: !10853)
!10908 = !DILocation(line: 2890, column: 53, scope: !10853)
!10909 = !DILocation(line: 2890, column: 32, scope: !10853)
!10910 = !DILocation(line: 2890, column: 15, scope: !10853)
!10911 = !DILocation(line: 2890, column: 14, scope: !10853)
!10912 = !DILocation(line: 2891, column: 9, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10853, file: !3, line: 2891, column: 9)
!10914 = !DILocation(line: 2891, column: 18, scope: !10913)
!10915 = !DILocation(line: 2891, column: 9, scope: !10853)
!10916 = !DILocation(line: 2892, column: 37, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10913, file: !3, line: 2891, column: 38)
!10918 = !DILocation(line: 2892, column: 30, scope: !10917)
!10919 = !DILocation(line: 2892, column: 17, scope: !10917)
!10920 = !DILocation(line: 2892, column: 16, scope: !10917)
!10921 = !DILocation(line: 2893, column: 11, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10917, file: !3, line: 2893, column: 11)
!10923 = !DILocation(line: 2893, column: 20, scope: !10922)
!10924 = !DILocation(line: 2893, column: 11, scope: !10917)
!10925 = !DILocation(line: 2894, column: 8, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10922, file: !3, line: 2893, column: 28)
!10927 = !DILocation(line: 2895, column: 2, scope: !10926)
!10928 = !DILocation(line: 2896, column: 9, scope: !10917)
!10929 = !DILocation(line: 2896, column: 8, scope: !10917)
!10930 = !DILocation(line: 2897, column: 7, scope: !10917)
!10931 = !DILocation(line: 2899, column: 34, scope: !10853)
!10932 = !DILocation(line: 2899, column: 43, scope: !10853)
!10933 = !DILocation(line: 2899, column: 33, scope: !10853)
!10934 = !DILocation(line: 2899, column: 46, scope: !10853)
!10935 = !DILocation(line: 2899, column: 32, scope: !10853)
!10936 = !DILocation(line: 2899, column: 15, scope: !10853)
!10937 = !DILocation(line: 2899, column: 14, scope: !10853)
!10938 = !DILocation(line: 2900, column: 9, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10853, file: !3, line: 2900, column: 9)
!10940 = !DILocation(line: 2900, column: 18, scope: !10939)
!10941 = !DILocation(line: 2900, column: 9, scope: !10853)
!10942 = !DILocation(line: 2901, column: 37, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !10939, file: !3, line: 2900, column: 38)
!10944 = !DILocation(line: 2901, column: 30, scope: !10943)
!10945 = !DILocation(line: 2901, column: 17, scope: !10943)
!10946 = !DILocation(line: 2901, column: 16, scope: !10943)
!10947 = !DILocation(line: 2902, column: 37, scope: !10943)
!10948 = !DILocation(line: 2902, column: 30, scope: !10943)
!10949 = !DILocation(line: 2902, column: 17, scope: !10943)
!10950 = !DILocation(line: 2902, column: 16, scope: !10943)
!10951 = !DILocation(line: 2903, column: 11, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10943, file: !3, line: 2903, column: 11)
!10953 = !DILocation(line: 2903, column: 20, scope: !10952)
!10954 = !DILocation(line: 2903, column: 27, scope: !10952)
!10955 = !DILocation(line: 2903, column: 30, scope: !10952)
!10956 = !DILocation(line: 2903, column: 39, scope: !10952)
!10957 = !DILocation(line: 2903, column: 11, scope: !10943)
!10958 = !DILocation(line: 2904, column: 8, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10952, file: !3, line: 2903, column: 47)
!10960 = !DILocation(line: 2905, column: 2, scope: !10959)
!10961 = !DILocation(line: 2906, column: 9, scope: !10943)
!10962 = !DILocation(line: 2906, column: 8, scope: !10943)
!10963 = !DILocation(line: 2907, column: 9, scope: !10943)
!10964 = !DILocation(line: 2907, column: 8, scope: !10943)
!10965 = !DILocation(line: 2908, column: 7, scope: !10943)
!10966 = !DILocation(line: 2911, column: 19, scope: !10853)
!10967 = !DILocation(line: 2911, column: 22, scope: !10853)
!10968 = !DILocation(line: 2911, column: 5, scope: !10853)
!10969 = !DILocation(line: 2912, column: 9, scope: !10853)
!10970 = !DILocation(line: 2912, column: 12, scope: !10853)
!10971 = !DILocation(line: 2912, column: 21, scope: !10853)
!10972 = !DILocation(line: 2912, column: 24, scope: !10853)
!10973 = !DILocation(line: 2912, column: 20, scope: !10853)
!10974 = !DILocation(line: 2912, column: 8, scope: !10853)
!10975 = !DILocation(line: 2913, column: 19, scope: !10853)
!10976 = !DILocation(line: 2913, column: 22, scope: !10853)
!10977 = !DILocation(line: 2913, column: 17, scope: !10853)
!10978 = !DILocation(line: 2913, column: 5, scope: !10853)
!10979 = !DILocation(line: 2913, column: 8, scope: !10853)
!10980 = !DILocation(line: 2913, column: 16, scope: !10853)
!10981 = !DILocation(line: 2916, column: 5, scope: !10853)
!10982 = !DILocation(line: 2917, column: 13, scope: !10853)
!10983 = !DILocation(line: 2917, column: 17, scope: !10853)
!10984 = !DILocation(line: 2918, column: 13, scope: !10853)
!10985 = !DILocation(line: 2918, column: 17, scope: !10853)
!10986 = !DILocation(line: 2924, column: 20, scope: !10853)
!10987 = !DILocation(line: 2924, column: 13, scope: !10853)
!10988 = !DILocation(line: 2924, column: 19, scope: !10853)
!10989 = !DILocation(line: 2925, column: 5, scope: !10853)
!10990 = !DILocation(line: 2925, column: 8, scope: !10853)
!10991 = !DILocation(line: 2925, column: 12, scope: !10853)
!10992 = !DILocation(line: 2925, column: 16, scope: !10853)
!10993 = !DILocation(line: 2925, column: 19, scope: !10853)
!10994 = !DILocation(line: 2925, column: 25, scope: !10853)
!10995 = !DILocation(line: 2926, column: 5, scope: !10853)
!10996 = !DILocation(line: 2926, column: 8, scope: !10853)
!10997 = !DILocation(line: 2926, column: 12, scope: !10853)
!10998 = !DILocation(line: 2926, column: 16, scope: !10853)
!10999 = !DILocation(line: 2926, column: 19, scope: !10853)
!11000 = !DILocation(line: 2926, column: 25, scope: !10853)
!11001 = !DILocation(line: 2927, column: 10, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !10853, file: !3, line: 2927, column: 9)
!11003 = !DILocation(line: 2927, column: 14, scope: !11002)
!11004 = !DILocation(line: 2927, column: 18, scope: !11002)
!11005 = !DILocation(line: 2927, column: 9, scope: !10853)
!11006 = !DILocation(line: 2929, column: 7, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !11002, file: !3, line: 2927, column: 23)
!11008 = !DILocation(line: 2929, column: 10, scope: !11007)
!11009 = !DILocation(line: 2929, column: 18, scope: !11007)
!11010 = !DILocation(line: 2930, column: 7, scope: !11007)
!11011 = !DILocation(line: 2930, column: 10, scope: !11007)
!11012 = !DILocation(line: 2930, column: 18, scope: !11007)
!11013 = !DILocation(line: 2932, column: 2, scope: !11007)
!11014 = !DILocation(line: 2932, column: 5, scope: !11007)
!11015 = !DILocation(line: 2932, column: 11, scope: !11007)
!11016 = !DILocation(line: 2933, column: 2, scope: !11007)
!11017 = !DILocation(line: 2933, column: 5, scope: !11007)
!11018 = !DILocation(line: 2933, column: 11, scope: !11007)
!11019 = !DILocation(line: 2941, column: 7, scope: !11007)
!11020 = !DILocation(line: 2944, column: 7, scope: !11021)
!11021 = distinct !DILexicalBlock(scope: !11002, file: !3, line: 2942, column: 11)
!11022 = !DILocation(line: 2944, column: 10, scope: !11021)
!11023 = !DILocation(line: 2944, column: 18, scope: !11021)
!11024 = !DILocation(line: 2945, column: 10, scope: !11021)
!11025 = !DILocation(line: 2946, column: 7, scope: !11021)
!11026 = !DILocation(line: 2946, column: 10, scope: !11021)
!11027 = !DILocation(line: 2946, column: 18, scope: !11021)
!11028 = !DILocation(line: 2947, column: 7, scope: !11021)
!11029 = !DILocation(line: 2947, column: 10, scope: !11021)
!11030 = !DILocation(line: 2947, column: 18, scope: !11021)
!11031 = !DILocation(line: 2949, column: 2, scope: !11021)
!11032 = !DILocation(line: 2949, column: 5, scope: !11021)
!11033 = !DILocation(line: 2949, column: 11, scope: !11021)
!11034 = !DILocation(line: 2950, column: 2, scope: !11021)
!11035 = !DILocation(line: 2950, column: 5, scope: !11021)
!11036 = !DILocation(line: 2950, column: 11, scope: !11021)
!11037 = !DILocation(line: 2960, column: 19, scope: !10853)
!11038 = !DILocation(line: 2960, column: 22, scope: !10853)
!11039 = !DILocation(line: 2960, column: 25, scope: !10853)
!11040 = !DILocation(line: 2960, column: 5, scope: !10853)
!11041 = !DILocation(line: 2961, column: 14, scope: !10853)
!11042 = !DILocation(line: 2961, column: 17, scope: !10853)
!11043 = !DILocation(line: 2961, column: 20, scope: !10853)
!11044 = !DILocation(line: 2961, column: 5, scope: !10853)
!11045 = !DILocation(line: 2966, column: 5, scope: !10853)
!11046 = !DILocation(line: 2967, column: 19, scope: !10853)
!11047 = !DILocation(line: 2967, column: 5, scope: !10853)
!11048 = !DILocation(line: 2968, column: 5, scope: !10853)
!11049 = !DILocation(line: 2968, column: 8, scope: !10853)
!11050 = !DILocation(line: 2968, column: 14, scope: !10853)
!11051 = !DILocation(line: 2969, column: 5, scope: !10853)
!11052 = !DILocation(line: 2969, column: 8, scope: !10853)
!11053 = !DILocation(line: 2969, column: 16, scope: !10853)
!11054 = !DILocation(line: 2970, column: 13, scope: !10853)
!11055 = !DILocation(line: 2970, column: 19, scope: !10853)
!11056 = !DILocation(line: 2971, column: 5, scope: !10853)
!11057 = !DILocation(line: 2971, column: 20, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11059, file: !3, line: 2971, column: 5)
!11059 = distinct !DILexicalBlock(scope: !10853, file: !3, line: 2971, column: 5)
!11060 = !DILocation(line: 2971, column: 27, scope: !11058)
!11061 = !DILocation(line: 2971, column: 26, scope: !11058)
!11062 = !DILocation(line: 2971, column: 5, scope: !11059)
!11063 = !DILocation(line: 2973, column: 22, scope: !11064)
!11064 = distinct !DILexicalBlock(scope: !11058, file: !3, line: 2971, column: 34)
!11065 = !DILocation(line: 2973, column: 15, scope: !11064)
!11066 = !DILocation(line: 2973, column: 21, scope: !11064)
!11067 = !DILocation(line: 2976, column: 19, scope: !11064)
!11068 = !DILocation(line: 2976, column: 22, scope: !11064)
!11069 = !DILocation(line: 2976, column: 25, scope: !11064)
!11070 = !DILocation(line: 2976, column: 7, scope: !11064)
!11071 = !DILocation(line: 2977, column: 16, scope: !11064)
!11072 = !DILocation(line: 2977, column: 19, scope: !11064)
!11073 = !DILocation(line: 2977, column: 22, scope: !11064)
!11074 = !DILocation(line: 2977, column: 7, scope: !11064)
!11075 = !DILocation(line: 2978, column: 21, scope: !11064)
!11076 = !DILocation(line: 2978, column: 24, scope: !11064)
!11077 = !DILocation(line: 2978, column: 27, scope: !11064)
!11078 = !DILocation(line: 2978, column: 7, scope: !11064)
!11079 = !DILocation(line: 2971, column: 5, scope: !11058)
!11080 = distinct !{!11080, !11062, !11081}
!11081 = !DILocation(line: 2979, column: 7, scope: !11059)
!11082 = !DILocation(line: 2985, column: 16, scope: !10853)
!11083 = !DILocation(line: 2985, column: 15, scope: !10853)
!11084 = !DILocation(line: 2986, column: 15, scope: !10853)
!11085 = !DILocation(line: 2986, column: 20, scope: !10853)
!11086 = !DILocation(line: 2987, column: 18, scope: !10853)
!11087 = !DILocation(line: 2987, column: 21, scope: !10853)
!11088 = !DILocation(line: 2987, column: 5, scope: !10853)
!11089 = !DILocation(line: 2987, column: 8, scope: !10853)
!11090 = !DILocation(line: 2987, column: 16, scope: !10853)
!11091 = !DILocation(line: 2988, column: 12, scope: !10853)
!11092 = !DILocation(line: 2989, column: 12, scope: !10853)
!11093 = !DILocation(line: 2990, column: 16, scope: !10853)
!11094 = !DILocation(line: 2990, column: 19, scope: !10853)
!11095 = !DILocation(line: 2990, column: 5, scope: !10853)
!11096 = !DILocation(line: 2991, column: 5, scope: !10853)
!11097 = !DILocation(line: 2995, column: 9, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !10853, file: !3, line: 2995, column: 9)
!11099 = !DILocation(line: 2995, column: 16, scope: !11098)
!11100 = !DILocation(line: 2995, column: 9, scope: !10853)
!11101 = !DILocation(line: 2996, column: 14, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11098, file: !3, line: 2995, column: 31)
!11103 = !DILocation(line: 2996, column: 13, scope: !11102)
!11104 = !DILocation(line: 2997, column: 21, scope: !11102)
!11105 = !DILocation(line: 2997, column: 26, scope: !11102)
!11106 = !DILocation(line: 2997, column: 7, scope: !11102)
!11107 = !DILocation(line: 2998, column: 7, scope: !11102)
!11108 = !DILocation(line: 3002, column: 14, scope: !10853)
!11109 = !DILocation(line: 3002, column: 22, scope: !10853)
!11110 = !DILocation(line: 3002, column: 11, scope: !10853)
!11111 = !DILocation(line: 3005, column: 18, scope: !10853)
!11112 = !DILocation(line: 3005, column: 21, scope: !10853)
!11113 = !DILocation(line: 3005, column: 5, scope: !10853)
!11114 = !DILocation(line: 3005, column: 8, scope: !10853)
!11115 = !DILocation(line: 3005, column: 16, scope: !10853)
!11116 = !DILocation(line: 3012, column: 13, scope: !10853)
!11117 = !DILocation(line: 3012, column: 19, scope: !10853)
!11118 = !DILocation(line: 3013, column: 18, scope: !10853)
!11119 = !DILocation(line: 3013, column: 21, scope: !10853)
!11120 = !DILocation(line: 3013, column: 17, scope: !10853)
!11121 = !DILocation(line: 3013, column: 27, scope: !10853)
!11122 = !DILocation(line: 3013, column: 5, scope: !10853)
!11123 = !DILocation(line: 3013, column: 8, scope: !10853)
!11124 = !DILocation(line: 3013, column: 16, scope: !10853)
!11125 = !DILocation(line: 3014, column: 14, scope: !10853)
!11126 = !DILocation(line: 3014, column: 17, scope: !10853)
!11127 = !DILocation(line: 3014, column: 20, scope: !10853)
!11128 = !DILocation(line: 3014, column: 5, scope: !10853)
!11129 = !DILocation(line: 3015, column: 13, scope: !10853)
!11130 = !DILocation(line: 3015, column: 18, scope: !10853)
!11131 = !DILocation(line: 3016, column: 19, scope: !10853)
!11132 = !DILocation(line: 3016, column: 22, scope: !10853)
!11133 = !DILocation(line: 3016, column: 25, scope: !10853)
!11134 = !DILocation(line: 3016, column: 5, scope: !10853)
!11135 = !DILocation(line: 3017, column: 18, scope: !10853)
!11136 = !DILocation(line: 3017, column: 21, scope: !10853)
!11137 = !DILocation(line: 3017, column: 24, scope: !10853)
!11138 = !DILocation(line: 3017, column: 5, scope: !10853)
!11139 = !DILocation(line: 3018, column: 9, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !10853, file: !3, line: 3018, column: 9)
!11141 = !DILocation(line: 3018, column: 9, scope: !10853)
!11142 = !DILocation(line: 3020, column: 7, scope: !11143)
!11143 = distinct !DILexicalBlock(scope: !11140, file: !3, line: 3018, column: 33)
!11144 = !DILocation(line: 3020, column: 10, scope: !11143)
!11145 = !DILocation(line: 3020, column: 18, scope: !11143)
!11146 = !DILocation(line: 3021, column: 7, scope: !11143)
!11147 = !DILocation(line: 3021, column: 10, scope: !11143)
!11148 = !DILocation(line: 3021, column: 16, scope: !11143)
!11149 = !DILocation(line: 3022, column: 16, scope: !11143)
!11150 = !DILocation(line: 3022, column: 19, scope: !11143)
!11151 = !DILocation(line: 3022, column: 22, scope: !11143)
!11152 = !DILocation(line: 3022, column: 7, scope: !11143)
!11153 = !DILocation(line: 3024, column: 23, scope: !11143)
!11154 = !DILocation(line: 3024, column: 26, scope: !11143)
!11155 = !DILocation(line: 3024, column: 17, scope: !11143)
!11156 = !DILocation(line: 3024, column: 21, scope: !11143)
!11157 = !DILocation(line: 3025, column: 23, scope: !11143)
!11158 = !DILocation(line: 3025, column: 26, scope: !11143)
!11159 = !DILocation(line: 3025, column: 17, scope: !11143)
!11160 = !DILocation(line: 3025, column: 21, scope: !11143)
!11161 = !DILocation(line: 3026, column: 16, scope: !11143)
!11162 = !DILocation(line: 3026, column: 27, scope: !11143)
!11163 = !DILocation(line: 3026, column: 7, scope: !11143)
!11164 = !DILocation(line: 3027, column: 7, scope: !11143)
!11165 = !DILocation(line: 3029, column: 16, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11140, file: !3, line: 3028, column: 11)
!11167 = !DILocation(line: 3029, column: 19, scope: !11166)
!11168 = !DILocation(line: 3029, column: 22, scope: !11166)
!11169 = !DILocation(line: 3029, column: 7, scope: !11166)
!11170 = !DILocation(line: 3030, column: 15, scope: !11166)
!11171 = !DILocation(line: 3030, column: 20, scope: !11166)
!11172 = !DILocation(line: 3031, column: 21, scope: !11166)
!11173 = !DILocation(line: 3031, column: 24, scope: !11166)
!11174 = !DILocation(line: 3031, column: 27, scope: !11166)
!11175 = !DILocation(line: 3031, column: 7, scope: !11166)
!11176 = !DILocation(line: 3032, column: 20, scope: !11166)
!11177 = !DILocation(line: 3032, column: 23, scope: !11166)
!11178 = !DILocation(line: 3032, column: 26, scope: !11166)
!11179 = !DILocation(line: 3032, column: 7, scope: !11166)
!11180 = !DILocation(line: 3033, column: 11, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11166, file: !3, line: 3033, column: 11)
!11182 = !DILocation(line: 3033, column: 11, scope: !11166)
!11183 = !DILocation(line: 3034, column: 2, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11181, file: !3, line: 3033, column: 35)
!11185 = !DILocation(line: 3034, column: 5, scope: !11184)
!11186 = !DILocation(line: 3034, column: 13, scope: !11184)
!11187 = !DILocation(line: 3035, column: 2, scope: !11184)
!11188 = !DILocation(line: 3035, column: 5, scope: !11184)
!11189 = !DILocation(line: 3035, column: 11, scope: !11184)
!11190 = !DILocation(line: 3036, column: 11, scope: !11184)
!11191 = !DILocation(line: 3036, column: 14, scope: !11184)
!11192 = !DILocation(line: 3036, column: 17, scope: !11184)
!11193 = !DILocation(line: 3036, column: 2, scope: !11184)
!11194 = !DILocation(line: 3038, column: 18, scope: !11184)
!11195 = !DILocation(line: 3038, column: 21, scope: !11184)
!11196 = !DILocation(line: 3038, column: 12, scope: !11184)
!11197 = !DILocation(line: 3038, column: 16, scope: !11184)
!11198 = !DILocation(line: 3039, column: 18, scope: !11184)
!11199 = !DILocation(line: 3039, column: 21, scope: !11184)
!11200 = !DILocation(line: 3039, column: 12, scope: !11184)
!11201 = !DILocation(line: 3039, column: 16, scope: !11184)
!11202 = !DILocation(line: 3040, column: 11, scope: !11184)
!11203 = !DILocation(line: 3040, column: 22, scope: !11184)
!11204 = !DILocation(line: 3040, column: 2, scope: !11184)
!11205 = !DILocation(line: 3041, column: 2, scope: !11184)
!11206 = !DILocation(line: 3047, column: 18, scope: !10853)
!11207 = !DILocation(line: 3047, column: 21, scope: !10853)
!11208 = !DILocation(line: 3047, column: 5, scope: !10853)
!11209 = !DILocation(line: 3047, column: 8, scope: !10853)
!11210 = !DILocation(line: 3047, column: 16, scope: !10853)
!11211 = !DILocation(line: 3051, column: 19, scope: !10853)
!11212 = !DILocation(line: 3051, column: 22, scope: !10853)
!11213 = !DILocation(line: 3051, column: 5, scope: !10853)
!11214 = !DILocation(line: 3052, column: 13, scope: !10853)
!11215 = !DILocation(line: 3052, column: 16, scope: !10853)
!11216 = !DILocation(line: 3052, column: 5, scope: !10853)
!11217 = !DILocation(line: 3058, column: 9, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !10853, file: !3, line: 3058, column: 9)
!11219 = !DILocation(line: 3058, column: 12, scope: !11218)
!11220 = !DILocation(line: 3058, column: 18, scope: !11218)
!11221 = !DILocation(line: 3058, column: 20, scope: !11218)
!11222 = !DILocation(line: 3058, column: 25, scope: !11218)
!11223 = !DILocation(line: 3058, column: 23, scope: !11218)
!11224 = !DILocation(line: 3058, column: 9, scope: !10853)
!11225 = !DILocation(line: 3059, column: 13, scope: !11226)
!11226 = distinct !DILexicalBlock(scope: !11218, file: !3, line: 3058, column: 32)
!11227 = !DILocation(line: 3060, column: 7, scope: !11226)
!11228 = !DILocalVariable(name: "mstatus", scope: !11229, file: !3, line: 3062, type: !36)
!11229 = distinct !DILexicalBlock(scope: !11218, file: !3, line: 3061, column: 11)
!11230 = !DILocation(line: 3062, column: 12, scope: !11229)
!11231 = !DILocation(line: 3063, column: 21, scope: !11229)
!11232 = !DILocation(line: 3063, column: 24, scope: !11229)
!11233 = !DILocation(line: 3063, column: 27, scope: !11229)
!11234 = !DILocation(line: 3063, column: 7, scope: !11229)
!11235 = !DILocation(line: 3064, column: 11, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 3064, column: 11)
!11237 = !DILocation(line: 3064, column: 18, scope: !11236)
!11238 = !DILocation(line: 3064, column: 11, scope: !11229)
!11239 = !DILocation(line: 3065, column: 8, scope: !11240)
!11240 = distinct !DILexicalBlock(scope: !11236, file: !3, line: 3064, column: 33)
!11241 = !DILocation(line: 3066, column: 2, scope: !11240)
!11242 = !DILocation(line: 3068, column: 15, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11236, file: !3, line: 3067, column: 13)
!11244 = !DILocation(line: 3068, column: 18, scope: !11243)
!11245 = !DILocation(line: 3068, column: 21, scope: !11243)
!11246 = !DILocation(line: 3068, column: 2, scope: !11243)
!11247 = !DILocation(line: 3069, column: 7, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11243, file: !3, line: 3069, column: 6)
!11249 = !DILocation(line: 3069, column: 6, scope: !11243)
!11250 = !DILocation(line: 3069, column: 24, scope: !11248)
!11251 = !DILocation(line: 3069, column: 18, scope: !11248)
!11252 = !DILocalVariable(name: "todrop", scope: !11253, file: !3, line: 3073, type: !31)
!11253 = distinct !DILexicalBlock(scope: !11248, file: !3, line: 3070, column: 8)
!11254 = !DILocation(line: 3073, column: 8, scope: !11253)
!11255 = !DILocation(line: 3073, column: 15, scope: !11253)
!11256 = !DILocation(line: 3073, column: 21, scope: !11253)
!11257 = !DILocation(line: 3073, column: 24, scope: !11253)
!11258 = !DILocation(line: 3073, column: 20, scope: !11253)
!11259 = !DILocation(line: 3074, column: 8, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !11253, file: !3, line: 3074, column: 8)
!11261 = !DILocation(line: 3074, column: 14, scope: !11260)
!11262 = !DILocation(line: 3074, column: 8, scope: !11253)
!11263 = !DILocation(line: 3074, column: 24, scope: !11260)
!11264 = !DILocation(line: 3074, column: 18, scope: !11260)
!11265 = !DILocalVariable(name: "maxexp", scope: !11266, file: !3, line: 3077, type: !31)
!11266 = distinct !DILexicalBlock(scope: !11260, file: !3, line: 3075, column: 10)
!11267 = !DILocation(line: 3077, column: 10, scope: !11266)
!11268 = !DILocation(line: 3077, column: 17, scope: !11266)
!11269 = !DILocation(line: 3077, column: 22, scope: !11266)
!11270 = !DILocation(line: 3077, column: 27, scope: !11266)
!11271 = !DILocation(line: 3077, column: 32, scope: !11266)
!11272 = !DILocation(line: 3077, column: 26, scope: !11266)
!11273 = !DILocation(line: 3077, column: 38, scope: !11266)
!11274 = !DILocalVariable(name: "maxdrop", scope: !11266, file: !3, line: 3078, type: !31)
!11275 = !DILocation(line: 3078, column: 10, scope: !11266)
!11276 = !DILocation(line: 3078, column: 18, scope: !11266)
!11277 = !DILocation(line: 3078, column: 25, scope: !11266)
!11278 = !DILocation(line: 3078, column: 28, scope: !11266)
!11279 = !DILocation(line: 3078, column: 24, scope: !11266)
!11280 = !DILocation(line: 3079, column: 10, scope: !11281)
!11281 = distinct !DILexicalBlock(scope: !11266, file: !3, line: 3079, column: 10)
!11282 = !DILocation(line: 3079, column: 17, scope: !11281)
!11283 = !DILocation(line: 3079, column: 16, scope: !11281)
!11284 = !DILocation(line: 3079, column: 25, scope: !11281)
!11285 = !DILocation(line: 3079, column: 28, scope: !11281)
!11286 = !DILocation(line: 3079, column: 33, scope: !11281)
!11287 = !DILocation(line: 3079, column: 10, scope: !11266)
!11288 = !DILocation(line: 3080, column: 15, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11281, file: !3, line: 3079, column: 40)
!11290 = !DILocation(line: 3080, column: 14, scope: !11289)
!11291 = !DILocation(line: 3081, column: 14, scope: !11289)
!11292 = !DILocation(line: 3082, column: 8, scope: !11289)
!11293 = !DILocation(line: 3083, column: 10, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11266, file: !3, line: 3083, column: 10)
!11295 = !DILocation(line: 3083, column: 18, scope: !11294)
!11296 = !DILocation(line: 3083, column: 17, scope: !11294)
!11297 = !DILocation(line: 3083, column: 10, scope: !11266)
!11298 = !DILocation(line: 3084, column: 15, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !11294, file: !3, line: 3083, column: 26)
!11300 = !DILocation(line: 3084, column: 14, scope: !11299)
!11301 = !DILocation(line: 3085, column: 14, scope: !11299)
!11302 = !DILocation(line: 3086, column: 8, scope: !11299)
!11303 = !DILocation(line: 3087, column: 10, scope: !11304)
!11304 = distinct !DILexicalBlock(scope: !11266, file: !3, line: 3087, column: 10)
!11305 = !DILocation(line: 3087, column: 16, scope: !11304)
!11306 = !DILocation(line: 3087, column: 10, scope: !11266)
!11307 = !DILocation(line: 3088, column: 24, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11304, file: !3, line: 3087, column: 20)
!11309 = !DILocation(line: 3088, column: 27, scope: !11308)
!11310 = !DILocation(line: 3088, column: 32, scope: !11308)
!11311 = !DILocation(line: 3088, column: 48, scope: !11308)
!11312 = !DILocation(line: 3088, column: 8, scope: !11308)
!11313 = !DILocation(line: 3089, column: 21, scope: !11308)
!11314 = !DILocation(line: 3089, column: 8, scope: !11308)
!11315 = !DILocation(line: 3089, column: 11, scope: !11308)
!11316 = !DILocation(line: 3089, column: 19, scope: !11308)
!11317 = !DILocation(line: 3090, column: 19, scope: !11308)
!11318 = !DILocation(line: 3090, column: 8, scope: !11308)
!11319 = !DILocation(line: 3090, column: 11, scope: !11308)
!11320 = !DILocation(line: 3090, column: 17, scope: !11308)
!11321 = !DILocation(line: 3091, column: 8, scope: !11308)
!11322 = !DILocation(line: 3099, column: 9, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !10853, file: !3, line: 3099, column: 9)
!11324 = !DILocation(line: 3099, column: 15, scope: !11323)
!11325 = !DILocation(line: 3099, column: 9, scope: !10853)
!11326 = !DILocalVariable(name: "ae", scope: !11327, file: !3, line: 3100, type: !31)
!11327 = distinct !DILexicalBlock(scope: !11323, file: !3, line: 3099, column: 31)
!11328 = !DILocation(line: 3100, column: 11, scope: !11327)
!11329 = !DILocation(line: 3100, column: 14, scope: !11327)
!11330 = !DILocation(line: 3100, column: 19, scope: !11327)
!11331 = !DILocation(line: 3100, column: 28, scope: !11327)
!11332 = !DILocation(line: 3100, column: 33, scope: !11327)
!11333 = !DILocation(line: 3100, column: 27, scope: !11327)
!11334 = !DILocation(line: 3100, column: 39, scope: !11327)
!11335 = !DILocation(line: 3103, column: 6, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11327, file: !3, line: 3103, column: 6)
!11337 = !DILocation(line: 3103, column: 10, scope: !11336)
!11338 = !DILocation(line: 3103, column: 15, scope: !11336)
!11339 = !DILocation(line: 3103, column: 19, scope: !11336)
!11340 = !DILocation(line: 3103, column: 8, scope: !11336)
!11341 = !DILocation(line: 3103, column: 6, scope: !11327)
!11342 = !DILocation(line: 3103, column: 29, scope: !11336)
!11343 = !DILocation(line: 3103, column: 23, scope: !11336)
!11344 = !DILocation(line: 3108, column: 13, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11327, file: !3, line: 3108, column: 11)
!11346 = !DILocation(line: 3108, column: 19, scope: !11345)
!11347 = !DILocation(line: 3108, column: 11, scope: !11327)
!11348 = !DILocation(line: 3108, column: 40, scope: !11345)
!11349 = !DILocation(line: 3108, column: 34, scope: !11345)
!11350 = !DILocation(line: 3109, column: 7, scope: !11327)
!11351 = !DILocation(line: 3111, column: 19, scope: !10853)
!11352 = !DILocation(line: 3111, column: 24, scope: !10853)
!11353 = !DILocation(line: 3111, column: 5, scope: !10853)
!11354 = !DILocation(line: 3112, column: 5, scope: !10853)
!11355 = !DILocation(line: 3114, column: 7, scope: !11356)
!11356 = distinct !DILexicalBlock(scope: !10790, file: !3, line: 3114, column: 7)
!11357 = !DILocation(line: 3114, column: 16, scope: !11356)
!11358 = !DILocation(line: 3114, column: 7, scope: !10790)
!11359 = !DILocation(line: 3114, column: 29, scope: !11356)
!11360 = !DILocation(line: 3114, column: 24, scope: !11356)
!11361 = !DILocation(line: 3115, column: 7, scope: !11362)
!11362 = distinct !DILexicalBlock(scope: !10790, file: !3, line: 3115, column: 7)
!11363 = !DILocation(line: 3115, column: 16, scope: !11362)
!11364 = !DILocation(line: 3115, column: 7, scope: !10790)
!11365 = !DILocation(line: 3115, column: 29, scope: !11362)
!11366 = !DILocation(line: 3115, column: 24, scope: !11362)
!11367 = !DILocation(line: 3116, column: 7, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !10790, file: !3, line: 3116, column: 7)
!11369 = !DILocation(line: 3116, column: 16, scope: !11368)
!11370 = !DILocation(line: 3116, column: 7, scope: !10790)
!11371 = !DILocation(line: 3116, column: 29, scope: !11368)
!11372 = !DILocation(line: 3116, column: 24, scope: !11368)
!11373 = !DILocation(line: 3120, column: 7, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !10790, file: !3, line: 3120, column: 7)
!11375 = !DILocation(line: 3120, column: 13, scope: !11374)
!11376 = !DILocation(line: 3120, column: 7, scope: !10790)
!11377 = !DILocation(line: 3120, column: 28, scope: !11374)
!11378 = !DILocation(line: 3120, column: 33, scope: !11374)
!11379 = !DILocation(line: 3120, column: 41, scope: !11374)
!11380 = !DILocation(line: 3120, column: 18, scope: !11374)
!11381 = !DILocation(line: 3124, column: 10, scope: !10790)
!11382 = !DILocation(line: 3124, column: 3, scope: !10790)
!11383 = distinct !DISubprogram(name: "decNumberSubtract", scope: !3, file: !3, line: 3139, type: !2989, scopeLine: 3140, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!11384 = !DILocalVariable(name: "res", arg: 1, scope: !11383, file: !3, line: 3139, type: !47)
!11385 = !DILocation(line: 3139, column: 42, scope: !11383)
!11386 = !DILocalVariable(name: "lhs", arg: 2, scope: !11383, file: !3, line: 3139, type: !267)
!11387 = !DILocation(line: 3139, column: 64, scope: !11383)
!11388 = !DILocalVariable(name: "rhs", arg: 3, scope: !11383, file: !3, line: 3140, type: !267)
!11389 = !DILocation(line: 3140, column: 27, scope: !11383)
!11390 = !DILocalVariable(name: "set", arg: 4, scope: !11383, file: !3, line: 3140, type: !269)
!11391 = !DILocation(line: 3140, column: 44, scope: !11383)
!11392 = !DILocalVariable(name: "status", scope: !11383, file: !3, line: 3141, type: !36)
!11393 = !DILocation(line: 3141, column: 8, scope: !11383)
!11394 = !DILocation(line: 3143, column: 12, scope: !11383)
!11395 = !DILocation(line: 3143, column: 17, scope: !11383)
!11396 = !DILocation(line: 3143, column: 22, scope: !11383)
!11397 = !DILocation(line: 3143, column: 27, scope: !11383)
!11398 = !DILocation(line: 3143, column: 3, scope: !11383)
!11399 = !DILocation(line: 3144, column: 7, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11383, file: !3, line: 3144, column: 7)
!11401 = !DILocation(line: 3144, column: 13, scope: !11400)
!11402 = !DILocation(line: 3144, column: 7, scope: !11383)
!11403 = !DILocation(line: 3144, column: 28, scope: !11400)
!11404 = !DILocation(line: 3144, column: 33, scope: !11400)
!11405 = !DILocation(line: 3144, column: 41, scope: !11400)
!11406 = !DILocation(line: 3144, column: 18, scope: !11400)
!11407 = !DILocation(line: 3148, column: 10, scope: !11383)
!11408 = !DILocation(line: 3148, column: 3, scope: !11383)
!11409 = distinct !DISubprogram(name: "decNumberToIntegralExact", scope: !3, file: !3, line: 3172, type: !2287, scopeLine: 3173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!11410 = !DILocalVariable(name: "res", arg: 1, scope: !11409, file: !3, line: 3172, type: !47)
!11411 = !DILocation(line: 3172, column: 49, scope: !11409)
!11412 = !DILocalVariable(name: "rhs", arg: 2, scope: !11409, file: !3, line: 3172, type: !267)
!11413 = !DILocation(line: 3172, column: 71, scope: !11409)
!11414 = !DILocalVariable(name: "set", arg: 3, scope: !11409, file: !3, line: 3173, type: !269)
!11415 = !DILocation(line: 3173, column: 22, scope: !11409)
!11416 = !DILocalVariable(name: "dn", scope: !11409, file: !3, line: 3174, type: !48)
!11417 = !DILocation(line: 3174, column: 13, scope: !11409)
!11418 = !DILocalVariable(name: "workset", scope: !11409, file: !3, line: 3175, type: !270)
!11419 = !DILocation(line: 3175, column: 14, scope: !11409)
!11420 = !DILocalVariable(name: "status", scope: !11409, file: !3, line: 3176, type: !36)
!11421 = !DILocation(line: 3176, column: 8, scope: !11409)
!11422 = !DILocation(line: 3183, column: 7, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11409, file: !3, line: 3183, column: 7)
!11424 = !DILocation(line: 3183, column: 7, scope: !11409)
!11425 = !DILocation(line: 3184, column: 9, scope: !11426)
!11426 = distinct !DILexicalBlock(scope: !11427, file: !3, line: 3184, column: 9)
!11427 = distinct !DILexicalBlock(scope: !11423, file: !3, line: 3183, column: 19)
!11428 = !DILocation(line: 3184, column: 9, scope: !11427)
!11429 = !DILocation(line: 3184, column: 49, scope: !11426)
!11430 = !DILocation(line: 3184, column: 54, scope: !11426)
!11431 = !DILocation(line: 3184, column: 35, scope: !11426)
!11432 = !DILocation(line: 3185, column: 19, scope: !11426)
!11433 = !DILocation(line: 3185, column: 24, scope: !11426)
!11434 = !DILocation(line: 3185, column: 35, scope: !11426)
!11435 = !DILocation(line: 3185, column: 11, scope: !11426)
!11436 = !DILocation(line: 3186, column: 5, scope: !11427)
!11437 = !DILocation(line: 3189, column: 9, scope: !11438)
!11438 = distinct !DILexicalBlock(scope: !11439, file: !3, line: 3189, column: 9)
!11439 = distinct !DILexicalBlock(scope: !11423, file: !3, line: 3187, column: 9)
!11440 = !DILocation(line: 3189, column: 14, scope: !11438)
!11441 = !DILocation(line: 3189, column: 22, scope: !11438)
!11442 = !DILocation(line: 3189, column: 9, scope: !11439)
!11443 = !DILocation(line: 3189, column: 48, scope: !11438)
!11444 = !DILocation(line: 3189, column: 53, scope: !11438)
!11445 = !DILocation(line: 3189, column: 34, scope: !11438)
!11446 = !DILocation(line: 3189, column: 27, scope: !11438)
!11447 = !DILocation(line: 3191, column: 14, scope: !11439)
!11448 = !DILocation(line: 3191, column: 13, scope: !11439)
!11449 = !DILocation(line: 3192, column: 20, scope: !11439)
!11450 = !DILocation(line: 3192, column: 25, scope: !11439)
!11451 = !DILocation(line: 3192, column: 13, scope: !11439)
!11452 = !DILocation(line: 3192, column: 19, scope: !11439)
!11453 = !DILocation(line: 3193, column: 13, scope: !11439)
!11454 = !DILocation(line: 3193, column: 18, scope: !11439)
!11455 = !DILocation(line: 3194, column: 5, scope: !11439)
!11456 = !DILocation(line: 3195, column: 23, scope: !11439)
!11457 = !DILocation(line: 3195, column: 28, scope: !11439)
!11458 = !DILocation(line: 3195, column: 5, scope: !11439)
!11459 = !DILocation(line: 3196, column: 21, scope: !11439)
!11460 = !DILocation(line: 3196, column: 11, scope: !11439)
!11461 = !DILocation(line: 3198, column: 7, scope: !11462)
!11462 = distinct !DILexicalBlock(scope: !11409, file: !3, line: 3198, column: 7)
!11463 = !DILocation(line: 3198, column: 13, scope: !11462)
!11464 = !DILocation(line: 3198, column: 7, scope: !11409)
!11465 = !DILocation(line: 3198, column: 28, scope: !11462)
!11466 = !DILocation(line: 3198, column: 33, scope: !11462)
!11467 = !DILocation(line: 3198, column: 41, scope: !11462)
!11468 = !DILocation(line: 3198, column: 18, scope: !11462)
!11469 = !DILocation(line: 3199, column: 10, scope: !11409)
!11470 = !DILocation(line: 3199, column: 3, scope: !11409)
!11471 = !DILocation(line: 3200, column: 3, scope: !11409)
!11472 = distinct !DISubprogram(name: "decNumberToIntegralValue", scope: !3, file: !3, line: 3202, type: !2287, scopeLine: 3203, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!11473 = !DILocalVariable(name: "res", arg: 1, scope: !11472, file: !3, line: 3202, type: !47)
!11474 = !DILocation(line: 3202, column: 49, scope: !11472)
!11475 = !DILocalVariable(name: "rhs", arg: 2, scope: !11472, file: !3, line: 3202, type: !267)
!11476 = !DILocation(line: 3202, column: 71, scope: !11472)
!11477 = !DILocalVariable(name: "set", arg: 3, scope: !11472, file: !3, line: 3203, type: !269)
!11478 = !DILocation(line: 3203, column: 22, scope: !11472)
!11479 = !DILocalVariable(name: "workset", scope: !11472, file: !3, line: 3204, type: !270)
!11480 = !DILocation(line: 3204, column: 14, scope: !11472)
!11481 = !DILocation(line: 3204, column: 23, scope: !11472)
!11482 = !DILocation(line: 3204, column: 22, scope: !11472)
!11483 = !DILocation(line: 3205, column: 11, scope: !11472)
!11484 = !DILocation(line: 3205, column: 16, scope: !11472)
!11485 = !DILocation(line: 3206, column: 28, scope: !11472)
!11486 = !DILocation(line: 3206, column: 33, scope: !11472)
!11487 = !DILocation(line: 3206, column: 3, scope: !11472)
!11488 = !DILocation(line: 3209, column: 24, scope: !11472)
!11489 = !DILocation(line: 3209, column: 30, scope: !11472)
!11490 = !DILocation(line: 3209, column: 3, scope: !11472)
!11491 = !DILocation(line: 3209, column: 8, scope: !11472)
!11492 = !DILocation(line: 3209, column: 14, scope: !11472)
!11493 = !DILocation(line: 3210, column: 10, scope: !11472)
!11494 = !DILocation(line: 3210, column: 3, scope: !11472)
!11495 = distinct !DISubprogram(name: "decNumberXor", scope: !3, file: !3, line: 3228, type: !2989, scopeLine: 3229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!11496 = !DILocalVariable(name: "res", arg: 1, scope: !11495, file: !3, line: 3228, type: !47)
!11497 = !DILocation(line: 3228, column: 37, scope: !11495)
!11498 = !DILocalVariable(name: "lhs", arg: 2, scope: !11495, file: !3, line: 3228, type: !267)
!11499 = !DILocation(line: 3228, column: 59, scope: !11495)
!11500 = !DILocalVariable(name: "rhs", arg: 3, scope: !11495, file: !3, line: 3229, type: !267)
!11501 = !DILocation(line: 3229, column: 22, scope: !11495)
!11502 = !DILocalVariable(name: "set", arg: 4, scope: !11495, file: !3, line: 3229, type: !269)
!11503 = !DILocation(line: 3229, column: 39, scope: !11495)
!11504 = !DILocalVariable(name: "ua", scope: !11495, file: !3, line: 3230, type: !301)
!11505 = !DILocation(line: 3230, column: 15, scope: !11495)
!11506 = !DILocalVariable(name: "ub", scope: !11495, file: !3, line: 3230, type: !301)
!11507 = !DILocation(line: 3230, column: 20, scope: !11495)
!11508 = !DILocalVariable(name: "msua", scope: !11495, file: !3, line: 3231, type: !301)
!11509 = !DILocation(line: 3231, column: 15, scope: !11495)
!11510 = !DILocalVariable(name: "msub", scope: !11495, file: !3, line: 3231, type: !301)
!11511 = !DILocation(line: 3231, column: 22, scope: !11495)
!11512 = !DILocalVariable(name: "uc", scope: !11495, file: !3, line: 3232, type: !43)
!11513 = !DILocation(line: 3232, column: 9, scope: !11495)
!11514 = !DILocalVariable(name: "msuc", scope: !11495, file: !3, line: 3232, type: !43)
!11515 = !DILocation(line: 3232, column: 14, scope: !11495)
!11516 = !DILocalVariable(name: "msudigs", scope: !11495, file: !3, line: 3233, type: !31)
!11517 = !DILocation(line: 3233, column: 7, scope: !11495)
!11518 = !DILocation(line: 3238, column: 7, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !11495, file: !3, line: 3238, column: 7)
!11520 = !DILocation(line: 3238, column: 12, scope: !11519)
!11521 = !DILocation(line: 3238, column: 20, scope: !11519)
!11522 = !DILocation(line: 3238, column: 24, scope: !11519)
!11523 = !DILocation(line: 3238, column: 27, scope: !11519)
!11524 = !DILocation(line: 3238, column: 51, scope: !11519)
!11525 = !DILocation(line: 3238, column: 54, scope: !11519)
!11526 = !DILocation(line: 3239, column: 4, scope: !11519)
!11527 = !DILocation(line: 3239, column: 7, scope: !11519)
!11528 = !DILocation(line: 3239, column: 12, scope: !11519)
!11529 = !DILocation(line: 3239, column: 20, scope: !11519)
!11530 = !DILocation(line: 3239, column: 24, scope: !11519)
!11531 = !DILocation(line: 3239, column: 27, scope: !11519)
!11532 = !DILocation(line: 3239, column: 51, scope: !11519)
!11533 = !DILocation(line: 3239, column: 54, scope: !11519)
!11534 = !DILocation(line: 3238, column: 7, scope: !11495)
!11535 = !DILocation(line: 3240, column: 15, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11519, file: !3, line: 3239, column: 80)
!11537 = !DILocation(line: 3240, column: 43, scope: !11536)
!11538 = !DILocation(line: 3240, column: 5, scope: !11536)
!11539 = !DILocation(line: 3241, column: 12, scope: !11536)
!11540 = !DILocation(line: 3241, column: 5, scope: !11536)
!11541 = !DILocation(line: 3244, column: 6, scope: !11495)
!11542 = !DILocation(line: 3244, column: 11, scope: !11495)
!11543 = !DILocation(line: 3244, column: 5, scope: !11495)
!11544 = !DILocation(line: 3245, column: 6, scope: !11495)
!11545 = !DILocation(line: 3245, column: 11, scope: !11495)
!11546 = !DILocation(line: 3245, column: 5, scope: !11495)
!11547 = !DILocation(line: 3246, column: 6, scope: !11495)
!11548 = !DILocation(line: 3246, column: 11, scope: !11495)
!11549 = !DILocation(line: 3246, column: 5, scope: !11495)
!11550 = !DILocation(line: 3247, column: 8, scope: !11495)
!11551 = !DILocation(line: 3247, column: 11, scope: !11495)
!11552 = !DILocation(line: 3247, column: 10, scope: !11495)
!11553 = !DILocation(line: 3247, column: 27, scope: !11495)
!11554 = !DILocation(line: 3247, column: 7, scope: !11495)
!11555 = !DILocation(line: 3248, column: 8, scope: !11495)
!11556 = !DILocation(line: 3248, column: 11, scope: !11495)
!11557 = !DILocation(line: 3248, column: 10, scope: !11495)
!11558 = !DILocation(line: 3248, column: 27, scope: !11495)
!11559 = !DILocation(line: 3248, column: 7, scope: !11495)
!11560 = !DILocation(line: 3249, column: 8, scope: !11495)
!11561 = !DILocation(line: 3249, column: 11, scope: !11495)
!11562 = !DILocation(line: 3249, column: 10, scope: !11495)
!11563 = !DILocation(line: 3249, column: 27, scope: !11495)
!11564 = !DILocation(line: 3249, column: 7, scope: !11495)
!11565 = !DILocation(line: 3250, column: 11, scope: !11495)
!11566 = !DILocation(line: 3250, column: 10, scope: !11495)
!11567 = !DILocation(line: 3251, column: 3, scope: !11495)
!11568 = !DILocation(line: 3251, column: 10, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11570, file: !3, line: 3251, column: 3)
!11570 = distinct !DILexicalBlock(scope: !11495, file: !3, line: 3251, column: 3)
!11571 = !DILocation(line: 3251, column: 14, scope: !11569)
!11572 = !DILocation(line: 3251, column: 12, scope: !11569)
!11573 = !DILocation(line: 3251, column: 3, scope: !11570)
!11574 = !DILocalVariable(name: "a", scope: !11575, file: !3, line: 3252, type: !39)
!11575 = distinct !DILexicalBlock(scope: !11569, file: !3, line: 3251, column: 38)
!11576 = !DILocation(line: 3252, column: 10, scope: !11575)
!11577 = !DILocalVariable(name: "b", scope: !11575, file: !3, line: 3252, type: !39)
!11578 = !DILocation(line: 3252, column: 13, scope: !11575)
!11579 = !DILocation(line: 3253, column: 9, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11575, file: !3, line: 3253, column: 9)
!11581 = !DILocation(line: 3253, column: 12, scope: !11580)
!11582 = !DILocation(line: 3253, column: 11, scope: !11580)
!11583 = !DILocation(line: 3253, column: 9, scope: !11575)
!11584 = !DILocation(line: 3253, column: 19, scope: !11580)
!11585 = !DILocation(line: 3253, column: 18, scope: !11580)
!11586 = !DILocation(line: 3254, column: 14, scope: !11580)
!11587 = !DILocation(line: 3254, column: 13, scope: !11580)
!11588 = !DILocation(line: 3254, column: 12, scope: !11580)
!11589 = !DILocation(line: 3255, column: 9, scope: !11590)
!11590 = distinct !DILexicalBlock(scope: !11575, file: !3, line: 3255, column: 9)
!11591 = !DILocation(line: 3255, column: 12, scope: !11590)
!11592 = !DILocation(line: 3255, column: 11, scope: !11590)
!11593 = !DILocation(line: 3255, column: 9, scope: !11575)
!11594 = !DILocation(line: 3255, column: 19, scope: !11590)
!11595 = !DILocation(line: 3255, column: 18, scope: !11590)
!11596 = !DILocation(line: 3256, column: 14, scope: !11590)
!11597 = !DILocation(line: 3256, column: 13, scope: !11590)
!11598 = !DILocation(line: 3256, column: 12, scope: !11590)
!11599 = !DILocation(line: 3257, column: 6, scope: !11575)
!11600 = !DILocation(line: 3257, column: 8, scope: !11575)
!11601 = !DILocation(line: 3258, column: 9, scope: !11602)
!11602 = distinct !DILexicalBlock(scope: !11575, file: !3, line: 3258, column: 9)
!11603 = !DILocation(line: 3258, column: 11, scope: !11602)
!11604 = !DILocation(line: 3258, column: 10, scope: !11602)
!11605 = !DILocation(line: 3258, column: 9, scope: !11575)
!11606 = !DILocalVariable(name: "i", scope: !11607, file: !3, line: 3259, type: !31)
!11607 = distinct !DILexicalBlock(scope: !11602, file: !3, line: 3258, column: 14)
!11608 = !DILocation(line: 3259, column: 11, scope: !11607)
!11609 = !DILocalVariable(name: "j", scope: !11607, file: !3, line: 3259, type: !31)
!11610 = !DILocation(line: 3259, column: 14, scope: !11607)
!11611 = !DILocation(line: 3261, column: 13, scope: !11612)
!11612 = distinct !DILexicalBlock(scope: !11607, file: !3, line: 3261, column: 7)
!11613 = !DILocation(line: 3261, column: 12, scope: !11612)
!11614 = !DILocation(line: 3261, column: 17, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11612, file: !3, line: 3261, column: 7)
!11616 = !DILocation(line: 3261, column: 18, scope: !11615)
!11617 = !DILocation(line: 3261, column: 7, scope: !11612)
!11618 = !DILocation(line: 3262, column: 7, scope: !11619)
!11619 = distinct !DILexicalBlock(scope: !11620, file: !3, line: 3262, column: 6)
!11620 = distinct !DILexicalBlock(scope: !11615, file: !3, line: 3261, column: 33)
!11621 = !DILocation(line: 3262, column: 9, scope: !11619)
!11622 = !DILocation(line: 3262, column: 8, scope: !11619)
!11623 = !DILocation(line: 3262, column: 11, scope: !11619)
!11624 = !DILocation(line: 3262, column: 6, scope: !11620)
!11625 = !DILocation(line: 3262, column: 20, scope: !11619)
!11626 = !DILocation(line: 3262, column: 19, scope: !11619)
!11627 = !DILocation(line: 3262, column: 36, scope: !11619)
!11628 = !DILocation(line: 3262, column: 29, scope: !11619)
!11629 = !DILocation(line: 3262, column: 23, scope: !11619)
!11630 = !DILocation(line: 3262, column: 22, scope: !11619)
!11631 = !DILocation(line: 3262, column: 16, scope: !11619)
!11632 = !DILocation(line: 3262, column: 18, scope: !11619)
!11633 = !DILocation(line: 3262, column: 15, scope: !11619)
!11634 = !DILocation(line: 3263, column: 4, scope: !11620)
!11635 = !DILocation(line: 3263, column: 5, scope: !11620)
!11636 = !DILocation(line: 3263, column: 3, scope: !11620)
!11637 = !DILocation(line: 3264, column: 4, scope: !11620)
!11638 = !DILocation(line: 3264, column: 5, scope: !11620)
!11639 = !DILocation(line: 3264, column: 3, scope: !11620)
!11640 = !DILocation(line: 3265, column: 5, scope: !11620)
!11641 = !DILocation(line: 3265, column: 6, scope: !11620)
!11642 = !DILocation(line: 3265, column: 3, scope: !11620)
!11643 = !DILocation(line: 3266, column: 4, scope: !11620)
!11644 = !DILocation(line: 3266, column: 5, scope: !11620)
!11645 = !DILocation(line: 3266, column: 3, scope: !11620)
!11646 = !DILocation(line: 3267, column: 6, scope: !11647)
!11647 = distinct !DILexicalBlock(scope: !11620, file: !3, line: 3267, column: 6)
!11648 = !DILocation(line: 3267, column: 7, scope: !11647)
!11649 = !DILocation(line: 3267, column: 6, scope: !11620)
!11650 = !DILocation(line: 3268, column: 14, scope: !11651)
!11651 = distinct !DILexicalBlock(scope: !11647, file: !3, line: 3267, column: 11)
!11652 = !DILocation(line: 3268, column: 42, scope: !11651)
!11653 = !DILocation(line: 3268, column: 4, scope: !11651)
!11654 = !DILocation(line: 3269, column: 11, scope: !11651)
!11655 = !DILocation(line: 3269, column: 4, scope: !11651)
!11656 = !DILocation(line: 3271, column: 6, scope: !11657)
!11657 = distinct !DILexicalBlock(scope: !11620, file: !3, line: 3271, column: 6)
!11658 = !DILocation(line: 3271, column: 10, scope: !11657)
!11659 = !DILocation(line: 3271, column: 8, scope: !11657)
!11660 = !DILocation(line: 3271, column: 15, scope: !11657)
!11661 = !DILocation(line: 3271, column: 18, scope: !11657)
!11662 = !DILocation(line: 3271, column: 21, scope: !11657)
!11663 = !DILocation(line: 3271, column: 28, scope: !11657)
!11664 = !DILocation(line: 3271, column: 19, scope: !11657)
!11665 = !DILocation(line: 3271, column: 6, scope: !11620)
!11666 = !DILocation(line: 3271, column: 32, scope: !11657)
!11667 = !DILocation(line: 3272, column: 2, scope: !11620)
!11668 = !DILocation(line: 3261, column: 29, scope: !11615)
!11669 = !DILocation(line: 3261, column: 7, scope: !11615)
!11670 = distinct !{!11670, !11617, !11671}
!11671 = !DILocation(line: 3272, column: 2, scope: !11612)
!11672 = !DILocation(line: 3273, column: 7, scope: !11607)
!11673 = !DILocation(line: 3274, column: 5, scope: !11575)
!11674 = !DILocation(line: 3251, column: 22, scope: !11569)
!11675 = !DILocation(line: 3251, column: 28, scope: !11569)
!11676 = !DILocation(line: 3251, column: 34, scope: !11569)
!11677 = !DILocation(line: 3251, column: 3, scope: !11569)
!11678 = distinct !{!11678, !11573, !11679}
!11679 = !DILocation(line: 3274, column: 5, scope: !11570)
!11680 = !DILocation(line: 3276, column: 28, scope: !11495)
!11681 = !DILocation(line: 3276, column: 33, scope: !11495)
!11682 = !DILocation(line: 3276, column: 38, scope: !11495)
!11683 = !DILocation(line: 3276, column: 41, scope: !11495)
!11684 = !DILocation(line: 3276, column: 46, scope: !11495)
!11685 = !DILocation(line: 3276, column: 40, scope: !11495)
!11686 = !DILocation(line: 3276, column: 15, scope: !11495)
!11687 = !DILocation(line: 3276, column: 3, scope: !11495)
!11688 = !DILocation(line: 3276, column: 8, scope: !11495)
!11689 = !DILocation(line: 3276, column: 14, scope: !11495)
!11690 = !DILocation(line: 3277, column: 3, scope: !11495)
!11691 = !DILocation(line: 3277, column: 8, scope: !11495)
!11692 = !DILocation(line: 3277, column: 16, scope: !11495)
!11693 = !DILocation(line: 3278, column: 3, scope: !11495)
!11694 = !DILocation(line: 3278, column: 8, scope: !11495)
!11695 = !DILocation(line: 3278, column: 12, scope: !11495)
!11696 = !DILocation(line: 3279, column: 10, scope: !11495)
!11697 = !DILocation(line: 3279, column: 3, scope: !11495)
!11698 = !DILocation(line: 3280, column: 3, scope: !11495)
!11699 = distinct !DISubprogram(name: "decNumberClass", scope: !3, file: !3, line: 3293, type: !11700, scopeLine: 3293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!11700 = !DISubroutineType(types: !11701)
!11701 = !{!18, !267, !269}
!11702 = !DILocalVariable(name: "dn", arg: 1, scope: !11699, file: !3, line: 3293, type: !267)
!11703 = !DILocation(line: 3293, column: 47, scope: !11699)
!11704 = !DILocalVariable(name: "set", arg: 2, scope: !11699, file: !3, line: 3293, type: !269)
!11705 = !DILocation(line: 3293, column: 63, scope: !11699)
!11706 = !DILocation(line: 3294, column: 7, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11699, file: !3, line: 3294, column: 7)
!11708 = !DILocation(line: 3294, column: 7, scope: !11699)
!11709 = !DILocation(line: 3295, column: 9, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11711, file: !3, line: 3295, column: 9)
!11711 = distinct !DILexicalBlock(scope: !11707, file: !3, line: 3294, column: 31)
!11712 = !DILocation(line: 3295, column: 9, scope: !11711)
!11713 = !DILocation(line: 3295, column: 30, scope: !11710)
!11714 = !DILocation(line: 3296, column: 9, scope: !11715)
!11715 = distinct !DILexicalBlock(scope: !11711, file: !3, line: 3296, column: 9)
!11716 = !DILocation(line: 3296, column: 9, scope: !11711)
!11717 = !DILocation(line: 3296, column: 30, scope: !11715)
!11718 = !DILocation(line: 3298, column: 9, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11711, file: !3, line: 3298, column: 9)
!11720 = !DILocation(line: 3298, column: 9, scope: !11711)
!11721 = !DILocation(line: 3298, column: 34, scope: !11719)
!11722 = !DILocation(line: 3299, column: 5, scope: !11711)
!11723 = !DILocation(line: 3302, column: 25, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11699, file: !3, line: 3302, column: 7)
!11725 = !DILocation(line: 3302, column: 29, scope: !11724)
!11726 = !DILocation(line: 3302, column: 7, scope: !11724)
!11727 = !DILocation(line: 3302, column: 7, scope: !11699)
!11728 = !DILocation(line: 3303, column: 9, scope: !11729)
!11729 = distinct !DILexicalBlock(scope: !11730, file: !3, line: 3303, column: 9)
!11730 = distinct !DILexicalBlock(scope: !11724, file: !3, line: 3302, column: 35)
!11731 = !DILocation(line: 3303, column: 9, scope: !11730)
!11732 = !DILocation(line: 3303, column: 34, scope: !11729)
!11733 = !DILocation(line: 3304, column: 5, scope: !11730)
!11734 = !DILocation(line: 3307, column: 7, scope: !11735)
!11735 = distinct !DILexicalBlock(scope: !11699, file: !3, line: 3307, column: 7)
!11736 = !DILocation(line: 3307, column: 7, scope: !11699)
!11737 = !DILocation(line: 3308, column: 9, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11739, file: !3, line: 3308, column: 9)
!11739 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 3307, column: 28)
!11740 = !DILocation(line: 3308, column: 9, scope: !11739)
!11741 = !DILocation(line: 3308, column: 34, scope: !11738)
!11742 = !DILocation(line: 3309, column: 5, scope: !11739)
!11743 = !DILocation(line: 3311, column: 7, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11699, file: !3, line: 3311, column: 7)
!11745 = !DILocation(line: 3311, column: 7, scope: !11699)
!11746 = !DILocation(line: 3311, column: 32, scope: !11744)
!11747 = !DILocation(line: 3312, column: 3, scope: !11699)
!11748 = !DILocation(line: 3313, column: 3, scope: !11699)
!11749 = distinct !DISubprogram(name: "decNumberClassToString", scope: !3, file: !3, line: 3321, type: !11750, scopeLine: 3321, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!11750 = !DISubroutineType(types: !11751)
!11751 = !{!1017, !18}
!11752 = !DILocalVariable(name: "eclass", arg: 1, scope: !11749, file: !3, line: 3321, type: !18)
!11753 = !DILocation(line: 3321, column: 50, scope: !11749)
!11754 = !DILocation(line: 3322, column: 7, scope: !11755)
!11755 = distinct !DILexicalBlock(scope: !11749, file: !3, line: 3322, column: 7)
!11756 = !DILocation(line: 3322, column: 13, scope: !11755)
!11757 = !DILocation(line: 3322, column: 7, scope: !11749)
!11758 = !DILocation(line: 3322, column: 40, scope: !11755)
!11759 = !DILocation(line: 3323, column: 7, scope: !11760)
!11760 = distinct !DILexicalBlock(scope: !11749, file: !3, line: 3323, column: 7)
!11761 = !DILocation(line: 3323, column: 13, scope: !11760)
!11762 = !DILocation(line: 3323, column: 7, scope: !11749)
!11763 = !DILocation(line: 3323, column: 40, scope: !11760)
!11764 = !DILocation(line: 3324, column: 7, scope: !11765)
!11765 = distinct !DILexicalBlock(scope: !11749, file: !3, line: 3324, column: 7)
!11766 = !DILocation(line: 3324, column: 13, scope: !11765)
!11767 = !DILocation(line: 3324, column: 7, scope: !11749)
!11768 = !DILocation(line: 3324, column: 40, scope: !11765)
!11769 = !DILocation(line: 3325, column: 7, scope: !11770)
!11770 = distinct !DILexicalBlock(scope: !11749, file: !3, line: 3325, column: 7)
!11771 = !DILocation(line: 3325, column: 13, scope: !11770)
!11772 = !DILocation(line: 3325, column: 7, scope: !11749)
!11773 = !DILocation(line: 3325, column: 40, scope: !11770)
!11774 = !DILocation(line: 3326, column: 7, scope: !11775)
!11775 = distinct !DILexicalBlock(scope: !11749, file: !3, line: 3326, column: 7)
!11776 = !DILocation(line: 3326, column: 13, scope: !11775)
!11777 = !DILocation(line: 3326, column: 7, scope: !11749)
!11778 = !DILocation(line: 3326, column: 40, scope: !11775)
!11779 = !DILocation(line: 3327, column: 7, scope: !11780)
!11780 = distinct !DILexicalBlock(scope: !11749, file: !3, line: 3327, column: 7)
!11781 = !DILocation(line: 3327, column: 13, scope: !11780)
!11782 = !DILocation(line: 3327, column: 7, scope: !11749)
!11783 = !DILocation(line: 3327, column: 40, scope: !11780)
!11784 = !DILocation(line: 3328, column: 7, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11749, file: !3, line: 3328, column: 7)
!11786 = !DILocation(line: 3328, column: 13, scope: !11785)
!11787 = !DILocation(line: 3328, column: 7, scope: !11749)
!11788 = !DILocation(line: 3328, column: 40, scope: !11785)
!11789 = !DILocation(line: 3329, column: 7, scope: !11790)
!11790 = distinct !DILexicalBlock(scope: !11749, file: !3, line: 3329, column: 7)
!11791 = !DILocation(line: 3329, column: 13, scope: !11790)
!11792 = !DILocation(line: 3329, column: 7, scope: !11749)
!11793 = !DILocation(line: 3329, column: 40, scope: !11790)
!11794 = !DILocation(line: 3330, column: 7, scope: !11795)
!11795 = distinct !DILexicalBlock(scope: !11749, file: !3, line: 3330, column: 7)
!11796 = !DILocation(line: 3330, column: 13, scope: !11795)
!11797 = !DILocation(line: 3330, column: 7, scope: !11749)
!11798 = !DILocation(line: 3330, column: 38, scope: !11795)
!11799 = !DILocation(line: 3331, column: 7, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11749, file: !3, line: 3331, column: 7)
!11801 = !DILocation(line: 3331, column: 13, scope: !11800)
!11802 = !DILocation(line: 3331, column: 7, scope: !11749)
!11803 = !DILocation(line: 3331, column: 38, scope: !11800)
!11804 = !DILocation(line: 3332, column: 3, scope: !11749)
!11805 = !DILocation(line: 3333, column: 3, scope: !11749)
!11806 = distinct !DISubprogram(name: "decNumberCopyNegate", scope: !3, file: !3, line: 3407, type: !3765, scopeLine: 3407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!11807 = !DILocalVariable(name: "res", arg: 1, scope: !11806, file: !3, line: 3407, type: !47)
!11808 = !DILocation(line: 3407, column: 44, scope: !11806)
!11809 = !DILocalVariable(name: "rhs", arg: 2, scope: !11806, file: !3, line: 3407, type: !267)
!11810 = !DILocation(line: 3407, column: 66, scope: !11806)
!11811 = !DILocation(line: 3411, column: 17, scope: !11806)
!11812 = !DILocation(line: 3411, column: 22, scope: !11806)
!11813 = !DILocation(line: 3411, column: 3, scope: !11806)
!11814 = !DILocation(line: 3412, column: 3, scope: !11806)
!11815 = !DILocation(line: 3412, column: 8, scope: !11806)
!11816 = !DILocation(line: 3412, column: 12, scope: !11806)
!11817 = !DILocation(line: 3413, column: 10, scope: !11806)
!11818 = !DILocation(line: 3413, column: 3, scope: !11806)
!11819 = distinct !DISubprogram(name: "decNumberGetBCD", scope: !3, file: !3, line: 3451, type: !11820, scopeLine: 3451, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!11820 = !DISubroutineType(types: !11821)
!11821 = !{!11822, !267, !11822}
!11822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 64)
!11823 = !DILocalVariable(name: "dn", arg: 1, scope: !11819, file: !3, line: 3451, type: !267)
!11824 = !DILocation(line: 3451, column: 42, scope: !11819)
!11825 = !DILocalVariable(name: "bcd", arg: 2, scope: !11819, file: !3, line: 3451, type: !11822)
!11826 = !DILocation(line: 3451, column: 53, scope: !11819)
!11827 = !DILocalVariable(name: "ub", scope: !11819, file: !3, line: 3452, type: !11822)
!11828 = !DILocation(line: 3452, column: 10, scope: !11819)
!11829 = !DILocation(line: 3452, column: 13, scope: !11819)
!11830 = !DILocation(line: 3452, column: 17, scope: !11819)
!11831 = !DILocation(line: 3452, column: 21, scope: !11819)
!11832 = !DILocation(line: 3452, column: 16, scope: !11819)
!11833 = !DILocation(line: 3452, column: 27, scope: !11819)
!11834 = !DILocalVariable(name: "up", scope: !11819, file: !3, line: 3453, type: !301)
!11835 = !DILocation(line: 3453, column: 15, scope: !11819)
!11836 = !DILocation(line: 3453, column: 18, scope: !11819)
!11837 = !DILocation(line: 3453, column: 22, scope: !11819)
!11838 = !DILocalVariable(name: "u", scope: !11819, file: !3, line: 3458, type: !36)
!11839 = !DILocation(line: 3458, column: 10, scope: !11819)
!11840 = !DILocation(line: 3458, column: 13, scope: !11819)
!11841 = !DILocation(line: 3458, column: 12, scope: !11819)
!11842 = !DILocalVariable(name: "cut", scope: !11819, file: !3, line: 3459, type: !36)
!11843 = !DILocation(line: 3459, column: 10, scope: !11819)
!11844 = !DILocation(line: 3460, column: 5, scope: !11819)
!11845 = !DILocation(line: 3460, column: 12, scope: !11846)
!11846 = distinct !DILexicalBlock(scope: !11847, file: !3, line: 3460, column: 5)
!11847 = distinct !DILexicalBlock(scope: !11819, file: !3, line: 3460, column: 5)
!11848 = !DILocation(line: 3460, column: 16, scope: !11846)
!11849 = !DILocation(line: 3460, column: 14, scope: !11846)
!11850 = !DILocation(line: 3460, column: 5, scope: !11847)
!11851 = !DILocation(line: 3461, column: 19, scope: !11852)
!11852 = distinct !DILexicalBlock(scope: !11846, file: !3, line: 3460, column: 27)
!11853 = !DILocation(line: 3461, column: 20, scope: !11852)
!11854 = !DILocation(line: 3461, column: 11, scope: !11852)
!11855 = !DILocation(line: 3461, column: 8, scope: !11852)
!11856 = !DILocation(line: 3461, column: 10, scope: !11852)
!11857 = !DILocation(line: 3462, column: 9, scope: !11852)
!11858 = !DILocation(line: 3462, column: 10, scope: !11852)
!11859 = !DILocation(line: 3462, column: 8, scope: !11852)
!11860 = !DILocation(line: 3463, column: 10, scope: !11852)
!11861 = !DILocation(line: 3464, column: 11, scope: !11862)
!11862 = distinct !DILexicalBlock(scope: !11852, file: !3, line: 3464, column: 11)
!11863 = !DILocation(line: 3464, column: 14, scope: !11862)
!11864 = !DILocation(line: 3464, column: 11, scope: !11852)
!11865 = !DILocation(line: 3464, column: 18, scope: !11862)
!11866 = !DILocation(line: 3465, column: 9, scope: !11852)
!11867 = !DILocation(line: 3466, column: 10, scope: !11852)
!11868 = !DILocation(line: 3466, column: 9, scope: !11852)
!11869 = !DILocation(line: 3466, column: 8, scope: !11852)
!11870 = !DILocation(line: 3467, column: 10, scope: !11852)
!11871 = !DILocation(line: 3468, column: 7, scope: !11852)
!11872 = !DILocation(line: 3460, column: 23, scope: !11846)
!11873 = !DILocation(line: 3460, column: 5, scope: !11846)
!11874 = distinct !{!11874, !11850, !11875}
!11875 = !DILocation(line: 3468, column: 7, scope: !11847)
!11876 = !DILocation(line: 3470, column: 10, scope: !11819)
!11877 = !DILocation(line: 3470, column: 3, scope: !11819)
!11878 = distinct !DISubprogram(name: "decNumberSetBCD", scope: !3, file: !3, line: 3485, type: !11879, scopeLine: 3485, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!11879 = !DISubroutineType(types: !11880)
!11880 = !{!47, !47, !11881, !36}
!11881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64)
!11882 = !DILocalVariable(name: "dn", arg: 1, scope: !11878, file: !3, line: 3485, type: !47)
!11883 = !DILocation(line: 3485, column: 40, scope: !11878)
!11884 = !DILocalVariable(name: "bcd", arg: 2, scope: !11878, file: !3, line: 3485, type: !11881)
!11885 = !DILocation(line: 3485, column: 57, scope: !11878)
!11886 = !DILocalVariable(name: "n", arg: 3, scope: !11878, file: !3, line: 3485, type: !36)
!11887 = !DILocation(line: 3485, column: 67, scope: !11878)
!11888 = !DILocalVariable(name: "up", scope: !11878, file: !3, line: 3486, type: !43)
!11889 = !DILocation(line: 3486, column: 9, scope: !11878)
!11890 = !DILocation(line: 3486, column: 12, scope: !11878)
!11891 = !DILocation(line: 3486, column: 16, scope: !11878)
!11892 = !DILocation(line: 3486, column: 20, scope: !11878)
!11893 = !DILocation(line: 3486, column: 19, scope: !11878)
!11894 = !DILocation(line: 3486, column: 35, scope: !11878)
!11895 = !DILocalVariable(name: "ub", scope: !11878, file: !3, line: 3487, type: !11881)
!11896 = !DILocation(line: 3487, column: 16, scope: !11878)
!11897 = !DILocation(line: 3487, column: 19, scope: !11878)
!11898 = !DILocalVariable(name: "cut", scope: !11878, file: !3, line: 3493, type: !31)
!11899 = !DILocation(line: 3493, column: 9, scope: !11878)
!11900 = !DILocation(line: 3493, column: 13, scope: !11878)
!11901 = !DILocation(line: 3494, column: 5, scope: !11878)
!11902 = !DILocation(line: 3494, column: 11, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11904, file: !3, line: 3494, column: 5)
!11904 = distinct !DILexicalBlock(scope: !11878, file: !3, line: 3494, column: 5)
!11905 = !DILocation(line: 3494, column: 15, scope: !11903)
!11906 = !DILocation(line: 3494, column: 19, scope: !11903)
!11907 = !DILocation(line: 3494, column: 13, scope: !11903)
!11908 = !DILocation(line: 3494, column: 5, scope: !11904)
!11909 = !DILocation(line: 3495, column: 8, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11903, file: !3, line: 3494, column: 30)
!11911 = !DILocation(line: 3495, column: 10, scope: !11910)
!11912 = !DILocation(line: 3496, column: 7, scope: !11910)
!11913 = !DILocation(line: 3496, column: 14, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11915, file: !3, line: 3496, column: 7)
!11915 = distinct !DILexicalBlock(scope: !11910, file: !3, line: 3496, column: 7)
!11916 = !DILocation(line: 3496, column: 17, scope: !11914)
!11917 = !DILocation(line: 3496, column: 7, scope: !11915)
!11918 = !DILocation(line: 3496, column: 38, scope: !11914)
!11919 = !DILocation(line: 3496, column: 48, scope: !11914)
!11920 = !DILocation(line: 3496, column: 47, scope: !11914)
!11921 = !DILocation(line: 3496, column: 46, scope: !11914)
!11922 = !DILocation(line: 3496, column: 35, scope: !11914)
!11923 = !DILocation(line: 3496, column: 37, scope: !11914)
!11924 = !DILocation(line: 3496, column: 34, scope: !11914)
!11925 = !DILocation(line: 3496, column: 23, scope: !11914)
!11926 = !DILocation(line: 3496, column: 30, scope: !11914)
!11927 = !DILocation(line: 3496, column: 7, scope: !11914)
!11928 = distinct !{!11928, !11917, !11929}
!11929 = !DILocation(line: 3496, column: 48, scope: !11915)
!11930 = !DILocation(line: 3497, column: 10, scope: !11910)
!11931 = !DILocation(line: 3498, column: 7, scope: !11910)
!11932 = !DILocation(line: 3494, column: 26, scope: !11903)
!11933 = !DILocation(line: 3494, column: 5, scope: !11903)
!11934 = distinct !{!11934, !11908, !11935}
!11935 = !DILocation(line: 3498, column: 7, scope: !11904)
!11936 = !DILocation(line: 3500, column: 14, scope: !11878)
!11937 = !DILocation(line: 3500, column: 3, scope: !11878)
!11938 = !DILocation(line: 3500, column: 7, scope: !11878)
!11939 = !DILocation(line: 3500, column: 13, scope: !11878)
!11940 = !DILocation(line: 3501, column: 10, scope: !11878)
!11941 = !DILocation(line: 3501, column: 3, scope: !11878)
!11942 = distinct !DISubprogram(name: "decNumberIsSubnormal", scope: !3, file: !3, line: 3530, type: !265, scopeLine: 3530, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!11943 = !DILocalVariable(name: "dn", arg: 1, scope: !11942, file: !3, line: 3530, type: !267)
!11944 = !DILocation(line: 3530, column: 43, scope: !11942)
!11945 = !DILocalVariable(name: "set", arg: 2, scope: !11942, file: !3, line: 3530, type: !269)
!11946 = !DILocation(line: 3530, column: 59, scope: !11942)
!11947 = !DILocalVariable(name: "ae", scope: !11942, file: !3, line: 3531, type: !31)
!11948 = !DILocation(line: 3531, column: 7, scope: !11942)
!11949 = !DILocation(line: 3536, column: 7, scope: !11950)
!11950 = distinct !DILexicalBlock(scope: !11942, file: !3, line: 3536, column: 7)
!11951 = !DILocation(line: 3536, column: 7, scope: !11942)
!11952 = !DILocation(line: 3536, column: 31, scope: !11950)
!11953 = !DILocation(line: 3537, column: 7, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !11942, file: !3, line: 3537, column: 7)
!11955 = !DILocation(line: 3537, column: 7, scope: !11942)
!11956 = !DILocation(line: 3537, column: 28, scope: !11954)
!11957 = !DILocation(line: 3539, column: 6, scope: !11942)
!11958 = !DILocation(line: 3539, column: 10, scope: !11942)
!11959 = !DILocation(line: 3539, column: 19, scope: !11942)
!11960 = !DILocation(line: 3539, column: 23, scope: !11942)
!11961 = !DILocation(line: 3539, column: 18, scope: !11942)
!11962 = !DILocation(line: 3539, column: 29, scope: !11942)
!11963 = !DILocation(line: 3539, column: 5, scope: !11942)
!11964 = !DILocation(line: 3540, column: 7, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11942, file: !3, line: 3540, column: 7)
!11966 = !DILocation(line: 3540, column: 10, scope: !11965)
!11967 = !DILocation(line: 3540, column: 15, scope: !11965)
!11968 = !DILocation(line: 3540, column: 9, scope: !11965)
!11969 = !DILocation(line: 3540, column: 7, scope: !11942)
!11970 = !DILocation(line: 3540, column: 21, scope: !11965)
!11971 = !DILocation(line: 3541, column: 3, scope: !11942)
!11972 = !DILocation(line: 3542, column: 3, scope: !11942)
!11973 = distinct !DISubprogram(name: "decNumberTrim", scope: !3, file: !3, line: 3554, type: !185, scopeLine: 3554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!11974 = !DILocalVariable(name: "dn", arg: 1, scope: !11973, file: !3, line: 3554, type: !47)
!11975 = !DILocation(line: 3554, column: 38, scope: !11973)
!11976 = !DILocalVariable(name: "dropped", scope: !11973, file: !3, line: 3555, type: !31)
!11977 = !DILocation(line: 3555, column: 8, scope: !11973)
!11978 = !DILocalVariable(name: "set", scope: !11973, file: !3, line: 3556, type: !270)
!11979 = !DILocation(line: 3556, column: 14, scope: !11973)
!11980 = !DILocation(line: 3560, column: 3, scope: !11973)
!11981 = !DILocation(line: 3561, column: 18, scope: !11973)
!11982 = !DILocation(line: 3561, column: 10, scope: !11973)
!11983 = !DILocation(line: 3561, column: 3, scope: !11973)
!11984 = distinct !DISubprogram(name: "decNumberVersion", scope: !3, file: !3, line: 3569, type: !11985, scopeLine: 3569, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !95)
!11985 = !DISubroutineType(types: !11986)
!11986 = !{!1017}
!11987 = !DILocation(line: 3570, column: 3, scope: !11984)
!11988 = distinct !DISubprogram(name: "decUnitAddSub", scope: !3, file: !3, line: 6331, type: !11989, scopeLine: 6333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!11989 = !DISubroutineType(types: !11990)
!11990 = !{!31, !301, !31, !301, !31, !31, !43, !31}
!11991 = !DILocalVariable(name: "a", arg: 1, scope: !11988, file: !3, line: 6331, type: !301)
!11992 = !DILocation(line: 6331, column: 38, scope: !11988)
!11993 = !DILocalVariable(name: "alength", arg: 2, scope: !11988, file: !3, line: 6331, type: !31)
!11994 = !DILocation(line: 6331, column: 45, scope: !11988)
!11995 = !DILocalVariable(name: "b", arg: 3, scope: !11988, file: !3, line: 6332, type: !301)
!11996 = !DILocation(line: 6332, column: 17, scope: !11988)
!11997 = !DILocalVariable(name: "blength", arg: 4, scope: !11988, file: !3, line: 6332, type: !31)
!11998 = !DILocation(line: 6332, column: 24, scope: !11988)
!11999 = !DILocalVariable(name: "bshift", arg: 5, scope: !11988, file: !3, line: 6332, type: !31)
!12000 = !DILocation(line: 6332, column: 37, scope: !11988)
!12001 = !DILocalVariable(name: "c", arg: 6, scope: !11988, file: !3, line: 6333, type: !43)
!12002 = !DILocation(line: 6333, column: 11, scope: !11988)
!12003 = !DILocalVariable(name: "m", arg: 7, scope: !11988, file: !3, line: 6333, type: !31)
!12004 = !DILocation(line: 6333, column: 18, scope: !11988)
!12005 = !DILocalVariable(name: "alsu", scope: !11988, file: !3, line: 6334, type: !301)
!12006 = !DILocation(line: 6334, column: 15, scope: !11988)
!12007 = !DILocation(line: 6334, column: 20, scope: !11988)
!12008 = !DILocalVariable(name: "clsu", scope: !11988, file: !3, line: 6335, type: !43)
!12009 = !DILocation(line: 6335, column: 9, scope: !11988)
!12010 = !DILocation(line: 6335, column: 14, scope: !11988)
!12011 = !DILocalVariable(name: "minC", scope: !11988, file: !3, line: 6336, type: !43)
!12012 = !DILocation(line: 6336, column: 9, scope: !11988)
!12013 = !DILocalVariable(name: "maxC", scope: !11988, file: !3, line: 6337, type: !43)
!12014 = !DILocation(line: 6337, column: 9, scope: !11988)
!12015 = !DILocalVariable(name: "carry", scope: !11988, file: !3, line: 6338, type: !31)
!12016 = !DILocation(line: 6338, column: 8, scope: !11988)
!12017 = !DILocalVariable(name: "add", scope: !11988, file: !3, line: 6339, type: !31)
!12018 = !DILocation(line: 6339, column: 8, scope: !11988)
!12019 = !DILocalVariable(name: "est", scope: !11988, file: !3, line: 6341, type: !31)
!12020 = !DILocation(line: 6341, column: 8, scope: !11988)
!12021 = !DILocation(line: 6349, column: 8, scope: !11988)
!12022 = !DILocation(line: 6349, column: 10, scope: !11988)
!12023 = !DILocation(line: 6349, column: 9, scope: !11988)
!12024 = !DILocation(line: 6349, column: 7, scope: !11988)
!12025 = !DILocation(line: 6350, column: 8, scope: !11988)
!12026 = !DILocation(line: 6350, column: 10, scope: !11988)
!12027 = !DILocation(line: 6350, column: 9, scope: !11988)
!12028 = !DILocation(line: 6350, column: 7, scope: !11988)
!12029 = !DILocation(line: 6351, column: 7, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !11988, file: !3, line: 6351, column: 7)
!12031 = !DILocation(line: 6351, column: 13, scope: !12030)
!12032 = !DILocation(line: 6351, column: 7, scope: !11988)
!12033 = !DILocation(line: 6352, column: 11, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !12030, file: !3, line: 6351, column: 18)
!12035 = !DILocation(line: 6352, column: 9, scope: !12034)
!12036 = !DILocation(line: 6354, column: 9, scope: !12037)
!12037 = distinct !DILexicalBlock(scope: !12034, file: !3, line: 6354, column: 9)
!12038 = !DILocation(line: 6354, column: 12, scope: !12037)
!12039 = !DILocation(line: 6354, column: 10, scope: !12037)
!12040 = !DILocation(line: 6354, column: 14, scope: !12037)
!12041 = !DILocation(line: 6354, column: 17, scope: !12037)
!12042 = !DILocation(line: 6354, column: 25, scope: !12037)
!12043 = !DILocation(line: 6354, column: 23, scope: !12037)
!12044 = !DILocation(line: 6354, column: 9, scope: !12034)
!12045 = !DILocation(line: 6355, column: 10, scope: !12046)
!12046 = distinct !DILexicalBlock(scope: !12037, file: !3, line: 6354, column: 34)
!12047 = !DILocation(line: 6355, column: 8, scope: !12046)
!12048 = !DILocation(line: 6356, column: 10, scope: !12046)
!12049 = !DILocation(line: 6356, column: 8, scope: !12046)
!12050 = !DILocation(line: 6357, column: 7, scope: !12046)
!12051 = !DILocation(line: 6358, column: 11, scope: !12037)
!12052 = !DILocation(line: 6358, column: 18, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !12054, file: !3, line: 6358, column: 11)
!12054 = distinct !DILexicalBlock(scope: !12037, file: !3, line: 6358, column: 11)
!12055 = !DILocation(line: 6358, column: 20, scope: !12053)
!12056 = !DILocation(line: 6358, column: 25, scope: !12053)
!12057 = !DILocation(line: 6358, column: 24, scope: !12053)
!12058 = !DILocation(line: 6358, column: 19, scope: !12053)
!12059 = !DILocation(line: 6358, column: 11, scope: !12054)
!12060 = !DILocation(line: 6359, column: 11, scope: !12061)
!12061 = distinct !DILexicalBlock(scope: !12062, file: !3, line: 6359, column: 11)
!12062 = distinct !DILexicalBlock(scope: !12053, file: !3, line: 6358, column: 43)
!12063 = !DILocation(line: 6359, column: 13, scope: !12061)
!12064 = !DILocation(line: 6359, column: 18, scope: !12061)
!12065 = !DILocation(line: 6359, column: 17, scope: !12061)
!12066 = !DILocation(line: 6359, column: 12, scope: !12061)
!12067 = !DILocation(line: 6359, column: 11, scope: !12062)
!12068 = !DILocation(line: 6359, column: 31, scope: !12061)
!12069 = !DILocation(line: 6359, column: 30, scope: !12061)
!12070 = !DILocation(line: 6359, column: 28, scope: !12061)
!12071 = !DILocation(line: 6359, column: 29, scope: !12061)
!12072 = !DILocation(line: 6359, column: 27, scope: !12061)
!12073 = !DILocation(line: 6360, column: 14, scope: !12061)
!12074 = !DILocation(line: 6360, column: 15, scope: !12061)
!12075 = !DILocation(line: 6361, column: 7, scope: !12062)
!12076 = !DILocation(line: 6358, column: 34, scope: !12053)
!12077 = !DILocation(line: 6358, column: 39, scope: !12053)
!12078 = !DILocation(line: 6358, column: 11, scope: !12053)
!12079 = distinct !{!12079, !12059, !12080}
!12080 = !DILocation(line: 6361, column: 7, scope: !12054)
!12081 = !DILocation(line: 6362, column: 5, scope: !12034)
!12082 = !DILocation(line: 6363, column: 7, scope: !12083)
!12083 = distinct !DILexicalBlock(scope: !11988, file: !3, line: 6363, column: 7)
!12084 = !DILocation(line: 6363, column: 12, scope: !12083)
!12085 = !DILocation(line: 6363, column: 11, scope: !12083)
!12086 = !DILocation(line: 6363, column: 7, scope: !11988)
!12087 = !DILocalVariable(name: "hold", scope: !12088, file: !3, line: 6364, type: !43)
!12088 = distinct !DILexicalBlock(scope: !12083, file: !3, line: 6363, column: 18)
!12089 = !DILocation(line: 6364, column: 11, scope: !12088)
!12090 = !DILocation(line: 6364, column: 16, scope: !12088)
!12091 = !DILocation(line: 6365, column: 10, scope: !12088)
!12092 = !DILocation(line: 6365, column: 9, scope: !12088)
!12093 = !DILocation(line: 6366, column: 10, scope: !12088)
!12094 = !DILocation(line: 6366, column: 9, scope: !12088)
!12095 = !DILocation(line: 6367, column: 5, scope: !12088)
!12096 = !DILocation(line: 6373, column: 3, scope: !11988)
!12097 = !DILocation(line: 6373, column: 10, scope: !12098)
!12098 = distinct !DILexicalBlock(scope: !12099, file: !3, line: 6373, column: 3)
!12099 = distinct !DILexicalBlock(scope: !11988, file: !3, line: 6373, column: 3)
!12100 = !DILocation(line: 6373, column: 12, scope: !12098)
!12101 = !DILocation(line: 6373, column: 11, scope: !12098)
!12102 = !DILocation(line: 6373, column: 3, scope: !12099)
!12103 = !DILocation(line: 6374, column: 13, scope: !12104)
!12104 = distinct !DILexicalBlock(scope: !12098, file: !3, line: 6373, column: 23)
!12105 = !DILocation(line: 6374, column: 12, scope: !12104)
!12106 = !DILocation(line: 6374, column: 10, scope: !12104)
!12107 = !DILocation(line: 6375, column: 6, scope: !12104)
!12108 = !DILocation(line: 6376, column: 20, scope: !12104)
!12109 = !DILocation(line: 6376, column: 19, scope: !12104)
!12110 = !DILocation(line: 6376, column: 13, scope: !12104)
!12111 = !DILocation(line: 6376, column: 23, scope: !12104)
!12112 = !DILocation(line: 6376, column: 22, scope: !12104)
!12113 = !DILocation(line: 6376, column: 10, scope: !12104)
!12114 = !DILocation(line: 6377, column: 6, scope: !12104)
!12115 = !DILocation(line: 6379, column: 16, scope: !12116)
!12116 = distinct !DILexicalBlock(scope: !12104, file: !3, line: 6379, column: 9)
!12117 = !DILocation(line: 6379, column: 21, scope: !12116)
!12118 = !DILocation(line: 6379, column: 9, scope: !12104)
!12119 = !DILocation(line: 6380, column: 16, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !12116, file: !3, line: 6379, column: 35)
!12121 = !DILocation(line: 6380, column: 10, scope: !12120)
!12122 = !DILocation(line: 6380, column: 8, scope: !12120)
!12123 = !DILocation(line: 6380, column: 9, scope: !12120)
!12124 = !DILocation(line: 6381, column: 12, scope: !12120)
!12125 = !DILocation(line: 6382, column: 7, scope: !12120)
!12126 = !DILocation(line: 6403, column: 11, scope: !12127)
!12127 = distinct !DILexicalBlock(scope: !12104, file: !3, line: 6403, column: 11)
!12128 = !DILocation(line: 6403, column: 16, scope: !12127)
!12129 = !DILocation(line: 6403, column: 11, scope: !12104)
!12130 = !DILocation(line: 6404, column: 15, scope: !12131)
!12131 = distinct !DILexicalBlock(scope: !12127, file: !3, line: 6403, column: 21)
!12132 = !DILocation(line: 6404, column: 20, scope: !12131)
!12133 = !DILocation(line: 6404, column: 24, scope: !12131)
!12134 = !DILocation(line: 6404, column: 31, scope: !12131)
!12135 = !DILocation(line: 6404, column: 5, scope: !12131)
!12136 = !DILocation(line: 6405, column: 12, scope: !12131)
!12137 = !DILocation(line: 6405, column: 18, scope: !12131)
!12138 = !DILocation(line: 6405, column: 21, scope: !12131)
!12139 = !DILocation(line: 6405, column: 17, scope: !12131)
!12140 = !DILocation(line: 6405, column: 5, scope: !12131)
!12141 = !DILocation(line: 6405, column: 3, scope: !12131)
!12142 = !DILocation(line: 6405, column: 4, scope: !12131)
!12143 = !DILocation(line: 6406, column: 8, scope: !12131)
!12144 = !DILocation(line: 6406, column: 7, scope: !12131)
!12145 = !DILocation(line: 6407, column: 7, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !12131, file: !3, line: 6407, column: 6)
!12147 = !DILocation(line: 6407, column: 6, scope: !12146)
!12148 = !DILocation(line: 6407, column: 8, scope: !12146)
!12149 = !DILocation(line: 6407, column: 6, scope: !12131)
!12150 = !DILocation(line: 6407, column: 23, scope: !12146)
!12151 = !DILocation(line: 6408, column: 7, scope: !12131)
!12152 = !DILocation(line: 6409, column: 3, scope: !12131)
!12153 = !DILocation(line: 6409, column: 4, scope: !12131)
!12154 = !DILocation(line: 6410, column: 2, scope: !12131)
!12155 = !DILocation(line: 6413, column: 13, scope: !12104)
!12156 = !DILocation(line: 6413, column: 18, scope: !12104)
!12157 = !DILocation(line: 6413, column: 12, scope: !12104)
!12158 = !DILocation(line: 6414, column: 20, scope: !12104)
!12159 = !DILocation(line: 6414, column: 25, scope: !12104)
!12160 = !DILocation(line: 6414, column: 29, scope: !12104)
!12161 = !DILocation(line: 6414, column: 36, scope: !12104)
!12162 = !DILocation(line: 6414, column: 10, scope: !12104)
!12163 = !DILocation(line: 6415, column: 17, scope: !12104)
!12164 = !DILocation(line: 6415, column: 23, scope: !12104)
!12165 = !DILocation(line: 6415, column: 26, scope: !12104)
!12166 = !DILocation(line: 6415, column: 22, scope: !12104)
!12167 = !DILocation(line: 6415, column: 10, scope: !12104)
!12168 = !DILocation(line: 6415, column: 8, scope: !12104)
!12169 = !DILocation(line: 6415, column: 9, scope: !12104)
!12170 = !DILocation(line: 6416, column: 13, scope: !12104)
!12171 = !DILocation(line: 6416, column: 16, scope: !12104)
!12172 = !DILocation(line: 6416, column: 12, scope: !12104)
!12173 = !DILocation(line: 6417, column: 12, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12104, file: !3, line: 6417, column: 11)
!12175 = !DILocation(line: 6417, column: 11, scope: !12174)
!12176 = !DILocation(line: 6417, column: 13, scope: !12174)
!12177 = !DILocation(line: 6417, column: 11, scope: !12104)
!12178 = !DILocation(line: 6417, column: 28, scope: !12174)
!12179 = !DILocation(line: 6418, column: 12, scope: !12104)
!12180 = !DILocation(line: 6419, column: 8, scope: !12104)
!12181 = !DILocation(line: 6419, column: 9, scope: !12104)
!12182 = !DILocation(line: 6450, column: 5, scope: !12104)
!12183 = !DILocation(line: 6373, column: 19, scope: !12098)
!12184 = !DILocation(line: 6373, column: 3, scope: !12098)
!12185 = distinct !{!12185, !12102, !12186}
!12186 = !DILocation(line: 6450, column: 5, scope: !12099)
!12187 = !DILocation(line: 6454, column: 7, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !11988, file: !3, line: 6454, column: 7)
!12189 = !DILocation(line: 6454, column: 9, scope: !12188)
!12190 = !DILocation(line: 6454, column: 8, scope: !12188)
!12191 = !DILocation(line: 6454, column: 7, scope: !11988)
!12192 = !DILocation(line: 6454, column: 15, scope: !12188)
!12193 = !DILocation(line: 6454, column: 22, scope: !12194)
!12194 = distinct !DILexicalBlock(scope: !12195, file: !3, line: 6454, column: 15)
!12195 = distinct !DILexicalBlock(scope: !12188, file: !3, line: 6454, column: 15)
!12196 = !DILocation(line: 6454, column: 24, scope: !12194)
!12197 = !DILocation(line: 6454, column: 23, scope: !12194)
!12198 = !DILocation(line: 6454, column: 15, scope: !12195)
!12199 = !DILocation(line: 6455, column: 9, scope: !12200)
!12200 = distinct !DILexicalBlock(scope: !12201, file: !3, line: 6455, column: 9)
!12201 = distinct !DILexicalBlock(scope: !12194, file: !3, line: 6454, column: 35)
!12202 = !DILocation(line: 6455, column: 11, scope: !12200)
!12203 = !DILocation(line: 6455, column: 16, scope: !12200)
!12204 = !DILocation(line: 6455, column: 15, scope: !12200)
!12205 = !DILocation(line: 6455, column: 10, scope: !12200)
!12206 = !DILocation(line: 6455, column: 9, scope: !12201)
!12207 = !DILocation(line: 6456, column: 15, scope: !12208)
!12208 = distinct !DILexicalBlock(scope: !12200, file: !3, line: 6455, column: 25)
!12209 = !DILocation(line: 6456, column: 14, scope: !12208)
!12210 = !DILocation(line: 6456, column: 12, scope: !12208)
!12211 = !DILocation(line: 6457, column: 8, scope: !12208)
!12212 = !DILocation(line: 6458, column: 7, scope: !12208)
!12213 = !DILocation(line: 6460, column: 22, scope: !12214)
!12214 = distinct !DILexicalBlock(scope: !12200, file: !3, line: 6459, column: 11)
!12215 = !DILocation(line: 6460, column: 21, scope: !12214)
!12216 = !DILocation(line: 6460, column: 15, scope: !12214)
!12217 = !DILocation(line: 6460, column: 25, scope: !12214)
!12218 = !DILocation(line: 6460, column: 24, scope: !12214)
!12219 = !DILocation(line: 6460, column: 12, scope: !12214)
!12220 = !DILocation(line: 6461, column: 8, scope: !12214)
!12221 = !DILocation(line: 6465, column: 16, scope: !12222)
!12222 = distinct !DILexicalBlock(scope: !12201, file: !3, line: 6465, column: 9)
!12223 = !DILocation(line: 6465, column: 21, scope: !12222)
!12224 = !DILocation(line: 6465, column: 9, scope: !12201)
!12225 = !DILocation(line: 6466, column: 16, scope: !12226)
!12226 = distinct !DILexicalBlock(scope: !12222, file: !3, line: 6465, column: 35)
!12227 = !DILocation(line: 6466, column: 10, scope: !12226)
!12228 = !DILocation(line: 6466, column: 8, scope: !12226)
!12229 = !DILocation(line: 6466, column: 9, scope: !12226)
!12230 = !DILocation(line: 6467, column: 12, scope: !12226)
!12231 = !DILocation(line: 6468, column: 7, scope: !12226)
!12232 = !DILocation(line: 6490, column: 11, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12201, file: !3, line: 6490, column: 11)
!12234 = !DILocation(line: 6490, column: 16, scope: !12233)
!12235 = !DILocation(line: 6490, column: 11, scope: !12201)
!12236 = !DILocation(line: 6491, column: 15, scope: !12237)
!12237 = distinct !DILexicalBlock(scope: !12233, file: !3, line: 6490, column: 21)
!12238 = !DILocation(line: 6491, column: 20, scope: !12237)
!12239 = !DILocation(line: 6491, column: 24, scope: !12237)
!12240 = !DILocation(line: 6491, column: 31, scope: !12237)
!12241 = !DILocation(line: 6491, column: 5, scope: !12237)
!12242 = !DILocation(line: 6492, column: 12, scope: !12237)
!12243 = !DILocation(line: 6492, column: 18, scope: !12237)
!12244 = !DILocation(line: 6492, column: 21, scope: !12237)
!12245 = !DILocation(line: 6492, column: 17, scope: !12237)
!12246 = !DILocation(line: 6492, column: 5, scope: !12237)
!12247 = !DILocation(line: 6492, column: 3, scope: !12237)
!12248 = !DILocation(line: 6492, column: 4, scope: !12237)
!12249 = !DILocation(line: 6493, column: 8, scope: !12237)
!12250 = !DILocation(line: 6493, column: 7, scope: !12237)
!12251 = !DILocation(line: 6494, column: 7, scope: !12252)
!12252 = distinct !DILexicalBlock(scope: !12237, file: !3, line: 6494, column: 6)
!12253 = !DILocation(line: 6494, column: 6, scope: !12252)
!12254 = !DILocation(line: 6494, column: 8, scope: !12252)
!12255 = !DILocation(line: 6494, column: 6, scope: !12237)
!12256 = !DILocation(line: 6494, column: 23, scope: !12252)
!12257 = !DILocation(line: 6495, column: 7, scope: !12237)
!12258 = !DILocation(line: 6496, column: 3, scope: !12237)
!12259 = !DILocation(line: 6496, column: 4, scope: !12237)
!12260 = !DILocation(line: 6497, column: 2, scope: !12237)
!12261 = !DILocation(line: 6500, column: 13, scope: !12201)
!12262 = !DILocation(line: 6500, column: 18, scope: !12201)
!12263 = !DILocation(line: 6500, column: 12, scope: !12201)
!12264 = !DILocation(line: 6501, column: 20, scope: !12201)
!12265 = !DILocation(line: 6501, column: 25, scope: !12201)
!12266 = !DILocation(line: 6501, column: 29, scope: !12201)
!12267 = !DILocation(line: 6501, column: 36, scope: !12201)
!12268 = !DILocation(line: 6501, column: 10, scope: !12201)
!12269 = !DILocation(line: 6502, column: 17, scope: !12201)
!12270 = !DILocation(line: 6502, column: 23, scope: !12201)
!12271 = !DILocation(line: 6502, column: 26, scope: !12201)
!12272 = !DILocation(line: 6502, column: 22, scope: !12201)
!12273 = !DILocation(line: 6502, column: 10, scope: !12201)
!12274 = !DILocation(line: 6502, column: 8, scope: !12201)
!12275 = !DILocation(line: 6502, column: 9, scope: !12201)
!12276 = !DILocation(line: 6503, column: 13, scope: !12201)
!12277 = !DILocation(line: 6503, column: 16, scope: !12201)
!12278 = !DILocation(line: 6503, column: 12, scope: !12201)
!12279 = !DILocation(line: 6504, column: 12, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12201, file: !3, line: 6504, column: 11)
!12281 = !DILocation(line: 6504, column: 11, scope: !12280)
!12282 = !DILocation(line: 6504, column: 13, scope: !12280)
!12283 = !DILocation(line: 6504, column: 11, scope: !12201)
!12284 = !DILocation(line: 6504, column: 28, scope: !12280)
!12285 = !DILocation(line: 6505, column: 12, scope: !12201)
!12286 = !DILocation(line: 6506, column: 8, scope: !12201)
!12287 = !DILocation(line: 6506, column: 9, scope: !12201)
!12288 = !DILocation(line: 6536, column: 5, scope: !12201)
!12289 = !DILocation(line: 6454, column: 31, scope: !12194)
!12290 = !DILocation(line: 6454, column: 15, scope: !12194)
!12291 = distinct !{!12291, !12198, !12292}
!12292 = !DILocation(line: 6536, column: 5, scope: !12195)
!12293 = !DILocation(line: 6540, column: 7, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !11988, file: !3, line: 6540, column: 7)
!12295 = !DILocation(line: 6540, column: 12, scope: !12294)
!12296 = !DILocation(line: 6540, column: 7, scope: !11988)
!12297 = !DILocation(line: 6540, column: 24, scope: !12294)
!12298 = !DILocation(line: 6540, column: 26, scope: !12294)
!12299 = !DILocation(line: 6540, column: 25, scope: !12294)
!12300 = !DILocation(line: 6540, column: 17, scope: !12294)
!12301 = !DILocation(line: 6541, column: 7, scope: !12302)
!12302 = distinct !DILexicalBlock(scope: !11988, file: !3, line: 6541, column: 7)
!12303 = !DILocation(line: 6541, column: 12, scope: !12302)
!12304 = !DILocation(line: 6541, column: 7, scope: !11988)
!12305 = !DILocation(line: 6542, column: 14, scope: !12306)
!12306 = distinct !DILexicalBlock(scope: !12302, file: !3, line: 6541, column: 16)
!12307 = !DILocation(line: 6542, column: 8, scope: !12306)
!12308 = !DILocation(line: 6542, column: 6, scope: !12306)
!12309 = !DILocation(line: 6542, column: 7, scope: !12306)
!12310 = !DILocation(line: 6543, column: 6, scope: !12306)
!12311 = !DILocation(line: 6544, column: 12, scope: !12306)
!12312 = !DILocation(line: 6544, column: 14, scope: !12306)
!12313 = !DILocation(line: 6544, column: 13, scope: !12306)
!12314 = !DILocation(line: 6544, column: 5, scope: !12306)
!12315 = !DILocation(line: 6547, column: 6, scope: !11988)
!12316 = !DILocation(line: 6548, column: 10, scope: !12317)
!12317 = distinct !DILexicalBlock(scope: !11988, file: !3, line: 6548, column: 3)
!12318 = !DILocation(line: 6548, column: 9, scope: !12317)
!12319 = !DILocation(line: 6548, column: 8, scope: !12317)
!12320 = !DILocation(line: 6548, column: 16, scope: !12321)
!12321 = distinct !DILexicalBlock(scope: !12317, file: !3, line: 6548, column: 3)
!12322 = !DILocation(line: 6548, column: 18, scope: !12321)
!12323 = !DILocation(line: 6548, column: 17, scope: !12321)
!12324 = !DILocation(line: 6548, column: 3, scope: !12317)
!12325 = !DILocation(line: 6549, column: 20, scope: !12326)
!12326 = distinct !DILexicalBlock(scope: !12321, file: !3, line: 6548, column: 29)
!12327 = !DILocation(line: 6549, column: 19, scope: !12326)
!12328 = !DILocation(line: 6549, column: 25, scope: !12326)
!12329 = !DILocation(line: 6549, column: 24, scope: !12326)
!12330 = !DILocation(line: 6549, column: 23, scope: !12326)
!12331 = !DILocation(line: 6549, column: 8, scope: !12326)
!12332 = !DILocation(line: 6550, column: 9, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12326, file: !3, line: 6550, column: 9)
!12334 = !DILocation(line: 6550, column: 12, scope: !12333)
!12335 = !DILocation(line: 6550, column: 9, scope: !12326)
!12336 = !DILocation(line: 6551, column: 16, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12333, file: !3, line: 6550, column: 26)
!12338 = !DILocation(line: 6551, column: 10, scope: !12337)
!12339 = !DILocation(line: 6551, column: 8, scope: !12337)
!12340 = !DILocation(line: 6551, column: 9, scope: !12337)
!12341 = !DILocation(line: 6552, column: 10, scope: !12337)
!12342 = !DILocation(line: 6553, column: 7, scope: !12337)
!12343 = !DILocation(line: 6555, column: 8, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !12333, file: !3, line: 6554, column: 11)
!12345 = !DILocation(line: 6555, column: 9, scope: !12344)
!12346 = !DILocation(line: 6556, column: 10, scope: !12344)
!12347 = !DILocation(line: 6558, column: 5, scope: !12326)
!12348 = !DILocation(line: 6548, column: 25, scope: !12321)
!12349 = !DILocation(line: 6548, column: 3, scope: !12321)
!12350 = distinct !{!12350, !12324, !12351}
!12351 = !DILocation(line: 6558, column: 5, scope: !12317)
!12352 = !DILocation(line: 6563, column: 8, scope: !12353)
!12353 = distinct !DILexicalBlock(scope: !11988, file: !3, line: 6563, column: 7)
!12354 = !DILocation(line: 6563, column: 12, scope: !12353)
!12355 = !DILocation(line: 6563, column: 11, scope: !12353)
!12356 = !DILocation(line: 6563, column: 17, scope: !12353)
!12357 = !DILocation(line: 6563, column: 20, scope: !12353)
!12358 = !DILocation(line: 6563, column: 7, scope: !11988)
!12359 = !DILocation(line: 6564, column: 15, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12353, file: !3, line: 6563, column: 25)
!12361 = !DILocation(line: 6564, column: 19, scope: !12360)
!12362 = !DILocation(line: 6564, column: 18, scope: !12360)
!12363 = !DILocation(line: 6564, column: 24, scope: !12360)
!12364 = !DILocation(line: 6564, column: 8, scope: !12360)
!12365 = !DILocation(line: 6564, column: 6, scope: !12360)
!12366 = !DILocation(line: 6564, column: 7, scope: !12360)
!12367 = !DILocation(line: 6565, column: 6, scope: !12360)
!12368 = !DILocation(line: 6566, column: 5, scope: !12360)
!12369 = !DILocation(line: 6567, column: 10, scope: !11988)
!12370 = !DILocation(line: 6567, column: 15, scope: !11988)
!12371 = !DILocation(line: 6567, column: 14, scope: !11988)
!12372 = !DILocation(line: 6567, column: 3, scope: !11988)
!12373 = !DILocation(line: 6568, column: 3, scope: !11988)
!12374 = distinct !DISubprogram(name: "decUnitCompare", scope: !3, file: !3, line: 6227, type: !12375, scopeLine: 6228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!12375 = !DISubroutineType(types: !12376)
!12376 = !{!31, !301, !31, !301, !31, !31}
!12377 = !DILocalVariable(name: "a", arg: 1, scope: !12374, file: !3, line: 6227, type: !301)
!12378 = !DILocation(line: 6227, column: 39, scope: !12374)
!12379 = !DILocalVariable(name: "alength", arg: 2, scope: !12374, file: !3, line: 6227, type: !31)
!12380 = !DILocation(line: 6227, column: 46, scope: !12374)
!12381 = !DILocalVariable(name: "b", arg: 3, scope: !12374, file: !3, line: 6228, type: !301)
!12382 = !DILocation(line: 6228, column: 18, scope: !12374)
!12383 = !DILocalVariable(name: "blength", arg: 4, scope: !12374, file: !3, line: 6228, type: !31)
!12384 = !DILocation(line: 6228, column: 25, scope: !12374)
!12385 = !DILocalVariable(name: "exp", arg: 5, scope: !12374, file: !3, line: 6228, type: !31)
!12386 = !DILocation(line: 6228, column: 38, scope: !12374)
!12387 = !DILocalVariable(name: "acc", scope: !12374, file: !3, line: 6229, type: !43)
!12388 = !DILocation(line: 6229, column: 9, scope: !12374)
!12389 = !DILocalVariable(name: "accbuff", scope: !12374, file: !3, line: 6230, type: !3902)
!12390 = !DILocation(line: 6230, column: 8, scope: !12374)
!12391 = !DILocalVariable(name: "allocacc", scope: !12374, file: !3, line: 6231, type: !43)
!12392 = !DILocation(line: 6231, column: 9, scope: !12374)
!12393 = !DILocalVariable(name: "accunits", scope: !12374, file: !3, line: 6232, type: !31)
!12394 = !DILocation(line: 6232, column: 7, scope: !12374)
!12395 = !DILocalVariable(name: "need", scope: !12374, file: !3, line: 6232, type: !31)
!12396 = !DILocation(line: 6232, column: 17, scope: !12374)
!12397 = !DILocalVariable(name: "l", scope: !12374, file: !3, line: 6233, type: !301)
!12398 = !DILocation(line: 6233, column: 15, scope: !12374)
!12399 = !DILocalVariable(name: "r", scope: !12374, file: !3, line: 6233, type: !301)
!12400 = !DILocation(line: 6233, column: 19, scope: !12374)
!12401 = !DILocalVariable(name: "u", scope: !12374, file: !3, line: 6233, type: !301)
!12402 = !DILocation(line: 6233, column: 23, scope: !12374)
!12403 = !DILocalVariable(name: "expunits", scope: !12374, file: !3, line: 6234, type: !31)
!12404 = !DILocation(line: 6234, column: 7, scope: !12374)
!12405 = !DILocalVariable(name: "exprem", scope: !12374, file: !3, line: 6234, type: !31)
!12406 = !DILocation(line: 6234, column: 17, scope: !12374)
!12407 = !DILocalVariable(name: "result", scope: !12374, file: !3, line: 6234, type: !31)
!12408 = !DILocation(line: 6234, column: 25, scope: !12374)
!12409 = !DILocation(line: 6236, column: 7, scope: !12410)
!12410 = distinct !DILexicalBlock(scope: !12374, file: !3, line: 6236, column: 7)
!12411 = !DILocation(line: 6236, column: 10, scope: !12410)
!12412 = !DILocation(line: 6236, column: 7, scope: !12374)
!12413 = !DILocation(line: 6237, column: 9, scope: !12414)
!12414 = distinct !DILexicalBlock(scope: !12415, file: !3, line: 6237, column: 9)
!12415 = distinct !DILexicalBlock(scope: !12410, file: !3, line: 6236, column: 15)
!12416 = !DILocation(line: 6237, column: 17, scope: !12414)
!12417 = !DILocation(line: 6237, column: 16, scope: !12414)
!12418 = !DILocation(line: 6237, column: 9, scope: !12415)
!12419 = !DILocation(line: 6237, column: 26, scope: !12414)
!12420 = !DILocation(line: 6238, column: 9, scope: !12421)
!12421 = distinct !DILexicalBlock(scope: !12415, file: !3, line: 6238, column: 9)
!12422 = !DILocation(line: 6238, column: 17, scope: !12421)
!12423 = !DILocation(line: 6238, column: 16, scope: !12421)
!12424 = !DILocation(line: 6238, column: 9, scope: !12415)
!12425 = !DILocation(line: 6238, column: 26, scope: !12421)
!12426 = !DILocation(line: 6240, column: 7, scope: !12415)
!12427 = !DILocation(line: 6240, column: 9, scope: !12415)
!12428 = !DILocation(line: 6240, column: 8, scope: !12415)
!12429 = !DILocation(line: 6240, column: 16, scope: !12415)
!12430 = !DILocation(line: 6240, column: 6, scope: !12415)
!12431 = !DILocation(line: 6241, column: 7, scope: !12415)
!12432 = !DILocation(line: 6241, column: 9, scope: !12415)
!12433 = !DILocation(line: 6241, column: 8, scope: !12415)
!12434 = !DILocation(line: 6241, column: 16, scope: !12415)
!12435 = !DILocation(line: 6241, column: 6, scope: !12415)
!12436 = !DILocation(line: 6242, column: 5, scope: !12415)
!12437 = !DILocation(line: 6242, column: 11, scope: !12438)
!12438 = distinct !DILexicalBlock(scope: !12439, file: !3, line: 6242, column: 5)
!12439 = distinct !DILexicalBlock(scope: !12415, file: !3, line: 6242, column: 5)
!12440 = !DILocation(line: 6242, column: 14, scope: !12438)
!12441 = !DILocation(line: 6242, column: 12, scope: !12438)
!12442 = !DILocation(line: 6242, column: 5, scope: !12439)
!12443 = !DILocation(line: 6243, column: 12, scope: !12444)
!12444 = distinct !DILexicalBlock(scope: !12445, file: !3, line: 6243, column: 11)
!12445 = distinct !DILexicalBlock(scope: !12438, file: !3, line: 6242, column: 27)
!12446 = !DILocation(line: 6243, column: 11, scope: !12444)
!12447 = !DILocation(line: 6243, column: 15, scope: !12444)
!12448 = !DILocation(line: 6243, column: 14, scope: !12444)
!12449 = !DILocation(line: 6243, column: 13, scope: !12444)
!12450 = !DILocation(line: 6243, column: 11, scope: !12445)
!12451 = !DILocation(line: 6243, column: 18, scope: !12444)
!12452 = !DILocation(line: 6244, column: 12, scope: !12453)
!12453 = distinct !DILexicalBlock(scope: !12445, file: !3, line: 6244, column: 11)
!12454 = !DILocation(line: 6244, column: 11, scope: !12453)
!12455 = !DILocation(line: 6244, column: 15, scope: !12453)
!12456 = !DILocation(line: 6244, column: 14, scope: !12453)
!12457 = !DILocation(line: 6244, column: 13, scope: !12453)
!12458 = !DILocation(line: 6244, column: 11, scope: !12445)
!12459 = !DILocation(line: 6244, column: 18, scope: !12453)
!12460 = !DILocation(line: 6245, column: 7, scope: !12445)
!12461 = !DILocation(line: 6242, column: 18, scope: !12438)
!12462 = !DILocation(line: 6242, column: 23, scope: !12438)
!12463 = !DILocation(line: 6242, column: 5, scope: !12438)
!12464 = distinct !{!12464, !12442, !12465}
!12465 = !DILocation(line: 6245, column: 7, scope: !12439)
!12466 = !DILocation(line: 6246, column: 5, scope: !12415)
!12467 = !DILocation(line: 6251, column: 7, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12374, file: !3, line: 6251, column: 7)
!12469 = !DILocation(line: 6251, column: 15, scope: !12468)
!12470 = !DILocation(line: 6251, column: 28, scope: !12468)
!12471 = !DILocation(line: 6251, column: 22, scope: !12468)
!12472 = !DILocation(line: 6251, column: 14, scope: !12468)
!12473 = !DILocation(line: 6251, column: 7, scope: !12374)
!12474 = !DILocation(line: 6251, column: 38, scope: !12468)
!12475 = !DILocation(line: 6252, column: 7, scope: !12476)
!12476 = distinct !DILexicalBlock(scope: !12374, file: !3, line: 6252, column: 7)
!12477 = !DILocation(line: 6252, column: 14, scope: !12476)
!12478 = !DILocation(line: 6252, column: 17, scope: !12476)
!12479 = !DILocation(line: 6252, column: 30, scope: !12476)
!12480 = !DILocation(line: 6252, column: 24, scope: !12476)
!12481 = !DILocation(line: 6252, column: 16, scope: !12476)
!12482 = !DILocation(line: 6252, column: 7, scope: !12374)
!12483 = !DILocation(line: 6252, column: 40, scope: !12476)
!12484 = !DILocation(line: 6257, column: 8, scope: !12374)
!12485 = !DILocation(line: 6257, column: 16, scope: !12374)
!12486 = !DILocation(line: 6257, column: 15, scope: !12374)
!12487 = !DILocation(line: 6257, column: 7, scope: !12374)
!12488 = !DILocation(line: 6258, column: 7, scope: !12489)
!12489 = distinct !DILexicalBlock(scope: !12374, file: !3, line: 6258, column: 7)
!12490 = !DILocation(line: 6258, column: 12, scope: !12489)
!12491 = !DILocation(line: 6258, column: 11, scope: !12489)
!12492 = !DILocation(line: 6258, column: 7, scope: !12374)
!12493 = !DILocation(line: 6258, column: 26, scope: !12489)
!12494 = !DILocation(line: 6258, column: 25, scope: !12489)
!12495 = !DILocation(line: 6258, column: 21, scope: !12489)
!12496 = !DILocation(line: 6259, column: 7, scope: !12374)
!12497 = !DILocation(line: 6260, column: 7, scope: !12374)
!12498 = !DILocation(line: 6260, column: 6, scope: !12374)
!12499 = !DILocation(line: 6261, column: 7, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12374, file: !3, line: 6261, column: 7)
!12501 = !DILocation(line: 6261, column: 11, scope: !12500)
!12502 = !DILocation(line: 6261, column: 24, scope: !12500)
!12503 = !DILocation(line: 6261, column: 7, scope: !12374)
!12504 = !DILocation(line: 6262, column: 29, scope: !12505)
!12505 = distinct !DILexicalBlock(scope: !12500, file: !3, line: 6261, column: 42)
!12506 = !DILocation(line: 6262, column: 33, scope: !12505)
!12507 = !DILocation(line: 6262, column: 22, scope: !12505)
!12508 = !DILocation(line: 6262, column: 14, scope: !12505)
!12509 = !DILocation(line: 6262, column: 13, scope: !12505)
!12510 = !DILocation(line: 6263, column: 9, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12505, file: !3, line: 6263, column: 9)
!12512 = !DILocation(line: 6263, column: 17, scope: !12511)
!12513 = !DILocation(line: 6263, column: 9, scope: !12505)
!12514 = !DILocation(line: 6263, column: 25, scope: !12511)
!12515 = !DILocation(line: 6264, column: 9, scope: !12505)
!12516 = !DILocation(line: 6264, column: 8, scope: !12505)
!12517 = !DILocation(line: 6265, column: 5, scope: !12505)
!12518 = !DILocation(line: 6267, column: 12, scope: !12374)
!12519 = !DILocation(line: 6267, column: 15, scope: !12374)
!12520 = !DILocation(line: 6267, column: 11, scope: !12374)
!12521 = !DILocation(line: 6268, column: 10, scope: !12374)
!12522 = !DILocation(line: 6268, column: 13, scope: !12374)
!12523 = !DILocation(line: 6268, column: 9, scope: !12374)
!12524 = !DILocation(line: 6270, column: 26, scope: !12374)
!12525 = !DILocation(line: 6270, column: 29, scope: !12374)
!12526 = !DILocation(line: 6270, column: 38, scope: !12374)
!12527 = !DILocation(line: 6270, column: 41, scope: !12374)
!12528 = !DILocation(line: 6270, column: 50, scope: !12374)
!12529 = !DILocation(line: 6270, column: 60, scope: !12374)
!12530 = !DILocation(line: 6271, column: 18, scope: !12374)
!12531 = !DILocation(line: 6271, column: 11, scope: !12374)
!12532 = !DILocation(line: 6271, column: 5, scope: !12374)
!12533 = !DILocation(line: 6270, column: 12, scope: !12374)
!12534 = !DILocation(line: 6270, column: 11, scope: !12374)
!12535 = !DILocation(line: 6273, column: 7, scope: !12536)
!12536 = distinct !DILexicalBlock(scope: !12374, file: !3, line: 6273, column: 7)
!12537 = !DILocation(line: 6273, column: 15, scope: !12536)
!12538 = !DILocation(line: 6273, column: 7, scope: !12374)
!12539 = !DILocation(line: 6273, column: 25, scope: !12536)
!12540 = !DILocation(line: 6273, column: 19, scope: !12536)
!12541 = !DILocation(line: 6276, column: 12, scope: !12542)
!12542 = distinct !DILexicalBlock(scope: !12543, file: !3, line: 6276, column: 5)
!12543 = distinct !DILexicalBlock(scope: !12536, file: !3, line: 6274, column: 9)
!12544 = !DILocation(line: 6276, column: 11, scope: !12542)
!12545 = !DILocation(line: 6276, column: 10, scope: !12542)
!12546 = !DILocation(line: 6276, column: 17, scope: !12547)
!12547 = distinct !DILexicalBlock(scope: !12542, file: !3, line: 6276, column: 5)
!12548 = !DILocation(line: 6276, column: 19, scope: !12547)
!12549 = !DILocation(line: 6276, column: 23, scope: !12547)
!12550 = !DILocation(line: 6276, column: 22, scope: !12547)
!12551 = !DILocation(line: 6276, column: 31, scope: !12547)
!12552 = !DILocation(line: 6276, column: 18, scope: !12547)
!12553 = !DILocation(line: 6276, column: 34, scope: !12547)
!12554 = !DILocation(line: 6276, column: 38, scope: !12547)
!12555 = !DILocation(line: 6276, column: 37, scope: !12547)
!12556 = !DILocation(line: 6276, column: 39, scope: !12547)
!12557 = !DILocation(line: 0, scope: !12547)
!12558 = !DILocation(line: 6276, column: 5, scope: !12542)
!12559 = !DILocation(line: 6276, column: 46, scope: !12547)
!12560 = !DILocation(line: 6276, column: 5, scope: !12547)
!12561 = distinct !{!12561, !12558, !12562}
!12562 = !DILocation(line: 6276, column: 46, scope: !12542)
!12563 = !DILocation(line: 6277, column: 14, scope: !12543)
!12564 = !DILocation(line: 6277, column: 13, scope: !12543)
!12565 = !DILocation(line: 6277, column: 15, scope: !12543)
!12566 = !DILocation(line: 6277, column: 11, scope: !12543)
!12567 = !DILocation(line: 6280, column: 7, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12374, file: !3, line: 6280, column: 7)
!12569 = !DILocation(line: 6280, column: 15, scope: !12568)
!12570 = !DILocation(line: 6280, column: 7, scope: !12374)
!12571 = !DILocation(line: 6280, column: 28, scope: !12568)
!12572 = !DILocation(line: 6280, column: 23, scope: !12568)
!12573 = !DILocation(line: 6281, column: 10, scope: !12374)
!12574 = !DILocation(line: 6281, column: 3, scope: !12374)
!12575 = !DILocation(line: 6282, column: 3, scope: !12374)
!12576 = distinct !DISubprogram(name: "decApplyRound", scope: !3, file: !3, line: 7064, type: !12577, scopeLine: 7065, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!12577 = !DISubroutineType(types: !12578)
!12578 = !{null, !47, !269, !31, !59}
!12579 = !DILocalVariable(name: "dn", arg: 1, scope: !12576, file: !3, line: 7064, type: !47)
!12580 = !DILocation(line: 7064, column: 38, scope: !12576)
!12581 = !DILocalVariable(name: "set", arg: 2, scope: !12576, file: !3, line: 7064, type: !269)
!12582 = !DILocation(line: 7064, column: 54, scope: !12576)
!12583 = !DILocalVariable(name: "residue", arg: 3, scope: !12576, file: !3, line: 7064, type: !31)
!12584 = !DILocation(line: 7064, column: 63, scope: !12576)
!12585 = !DILocalVariable(name: "status", arg: 4, scope: !12576, file: !3, line: 7065, type: !59)
!12586 = !DILocation(line: 7065, column: 12, scope: !12576)
!12587 = !DILocalVariable(name: "bump", scope: !12576, file: !3, line: 7066, type: !31)
!12588 = !DILocation(line: 7066, column: 8, scope: !12576)
!12589 = !DILocation(line: 7069, column: 7, scope: !12590)
!12590 = distinct !DILexicalBlock(scope: !12576, file: !3, line: 7069, column: 7)
!12591 = !DILocation(line: 7069, column: 14, scope: !12590)
!12592 = !DILocation(line: 7069, column: 7, scope: !12576)
!12593 = !DILocation(line: 7069, column: 19, scope: !12590)
!12594 = !DILocation(line: 7071, column: 7, scope: !12576)
!12595 = !DILocation(line: 7074, column: 11, scope: !12576)
!12596 = !DILocation(line: 7074, column: 16, scope: !12576)
!12597 = !DILocation(line: 7074, column: 3, scope: !12576)
!12598 = !DILocalVariable(name: "lsd5", scope: !12599, file: !3, line: 7081, type: !31)
!12599 = distinct !DILexicalBlock(scope: !12600, file: !3, line: 7075, column: 26)
!12600 = distinct !DILexicalBlock(scope: !12576, file: !3, line: 7074, column: 23)
!12601 = !DILocation(line: 7081, column: 11, scope: !12599)
!12602 = !DILocation(line: 7081, column: 17, scope: !12599)
!12603 = !DILocation(line: 7081, column: 21, scope: !12599)
!12604 = !DILocation(line: 7081, column: 16, scope: !12599)
!12605 = !DILocation(line: 7081, column: 24, scope: !12599)
!12606 = !DILocation(line: 7082, column: 11, scope: !12607)
!12607 = distinct !DILexicalBlock(scope: !12599, file: !3, line: 7082, column: 11)
!12608 = !DILocation(line: 7082, column: 18, scope: !12607)
!12609 = !DILocation(line: 7082, column: 21, scope: !12607)
!12610 = !DILocation(line: 7082, column: 24, scope: !12607)
!12611 = !DILocation(line: 7082, column: 28, scope: !12607)
!12612 = !DILocation(line: 7082, column: 11, scope: !12599)
!12613 = !DILocation(line: 7082, column: 37, scope: !12607)
!12614 = !DILocation(line: 7082, column: 33, scope: !12607)
!12615 = !DILocation(line: 7083, column: 17, scope: !12616)
!12616 = distinct !DILexicalBlock(scope: !12607, file: !3, line: 7083, column: 17)
!12617 = !DILocation(line: 7083, column: 24, scope: !12616)
!12618 = !DILocation(line: 7083, column: 27, scope: !12616)
!12619 = !DILocation(line: 7083, column: 30, scope: !12616)
!12620 = !DILocation(line: 7083, column: 34, scope: !12616)
!12621 = !DILocation(line: 7083, column: 17, scope: !12607)
!12622 = !DILocation(line: 7083, column: 43, scope: !12616)
!12623 = !DILocation(line: 7083, column: 39, scope: !12616)
!12624 = !DILocation(line: 7085, column: 7, scope: !12599)
!12625 = !DILocation(line: 7089, column: 11, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12627, file: !3, line: 7089, column: 11)
!12627 = distinct !DILexicalBlock(scope: !12600, file: !3, line: 7087, column: 26)
!12628 = !DILocation(line: 7089, column: 18, scope: !12626)
!12629 = !DILocation(line: 7089, column: 11, scope: !12627)
!12630 = !DILocation(line: 7089, column: 26, scope: !12626)
!12631 = !DILocation(line: 7089, column: 22, scope: !12626)
!12632 = !DILocation(line: 7090, column: 7, scope: !12627)
!12633 = !DILocation(line: 7093, column: 11, scope: !12634)
!12634 = distinct !DILexicalBlock(scope: !12635, file: !3, line: 7093, column: 11)
!12635 = distinct !DILexicalBlock(scope: !12600, file: !3, line: 7092, column: 31)
!12636 = !DILocation(line: 7093, column: 18, scope: !12634)
!12637 = !DILocation(line: 7093, column: 11, scope: !12635)
!12638 = !DILocation(line: 7093, column: 26, scope: !12634)
!12639 = !DILocation(line: 7093, column: 22, scope: !12634)
!12640 = !DILocation(line: 7094, column: 7, scope: !12635)
!12641 = !DILocation(line: 7097, column: 11, scope: !12642)
!12642 = distinct !DILexicalBlock(scope: !12643, file: !3, line: 7097, column: 11)
!12643 = distinct !DILexicalBlock(scope: !12600, file: !3, line: 7096, column: 31)
!12644 = !DILocation(line: 7097, column: 18, scope: !12642)
!12645 = !DILocation(line: 7097, column: 11, scope: !12643)
!12646 = !DILocation(line: 7097, column: 26, scope: !12642)
!12647 = !DILocation(line: 7097, column: 22, scope: !12642)
!12648 = !DILocation(line: 7098, column: 17, scope: !12649)
!12649 = distinct !DILexicalBlock(scope: !12642, file: !3, line: 7098, column: 17)
!12650 = !DILocation(line: 7098, column: 24, scope: !12649)
!12651 = !DILocation(line: 7098, column: 17, scope: !12642)
!12652 = !DILocation(line: 7100, column: 7, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12654, file: !3, line: 7100, column: 6)
!12654 = distinct !DILexicalBlock(scope: !12649, file: !3, line: 7098, column: 29)
!12655 = !DILocation(line: 7100, column: 11, scope: !12653)
!12656 = !DILocation(line: 7100, column: 6, scope: !12653)
!12657 = !DILocation(line: 7100, column: 15, scope: !12653)
!12658 = !DILocation(line: 7100, column: 6, scope: !12654)
!12659 = !DILocation(line: 7100, column: 27, scope: !12653)
!12660 = !DILocation(line: 7100, column: 23, scope: !12653)
!12661 = !DILocation(line: 7101, column: 2, scope: !12654)
!12662 = !DILocation(line: 7102, column: 7, scope: !12643)
!12663 = !DILocation(line: 7105, column: 11, scope: !12664)
!12664 = distinct !DILexicalBlock(scope: !12665, file: !3, line: 7105, column: 11)
!12665 = distinct !DILexicalBlock(scope: !12600, file: !3, line: 7104, column: 29)
!12666 = !DILocation(line: 7105, column: 18, scope: !12664)
!12667 = !DILocation(line: 7105, column: 11, scope: !12665)
!12668 = !DILocation(line: 7105, column: 27, scope: !12664)
!12669 = !DILocation(line: 7105, column: 23, scope: !12664)
!12670 = !DILocation(line: 7106, column: 7, scope: !12665)
!12671 = !DILocation(line: 7109, column: 11, scope: !12672)
!12672 = distinct !DILexicalBlock(scope: !12673, file: !3, line: 7109, column: 11)
!12673 = distinct !DILexicalBlock(scope: !12600, file: !3, line: 7108, column: 24)
!12674 = !DILocation(line: 7109, column: 18, scope: !12672)
!12675 = !DILocation(line: 7109, column: 11, scope: !12673)
!12676 = !DILocation(line: 7109, column: 26, scope: !12672)
!12677 = !DILocation(line: 7109, column: 22, scope: !12672)
!12678 = !DILocation(line: 7110, column: 7, scope: !12673)
!12679 = !DILocation(line: 7115, column: 11, scope: !12680)
!12680 = distinct !DILexicalBlock(scope: !12681, file: !3, line: 7115, column: 11)
!12681 = distinct !DILexicalBlock(scope: !12600, file: !3, line: 7112, column: 29)
!12682 = !DILocation(line: 7115, column: 11, scope: !12681)
!12683 = !DILocation(line: 7116, column: 6, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12685, file: !3, line: 7116, column: 6)
!12685 = distinct !DILexicalBlock(scope: !12680, file: !3, line: 7115, column: 36)
!12686 = !DILocation(line: 7116, column: 13, scope: !12684)
!12687 = !DILocation(line: 7116, column: 6, scope: !12685)
!12688 = !DILocation(line: 7116, column: 21, scope: !12684)
!12689 = !DILocation(line: 7116, column: 17, scope: !12684)
!12690 = !DILocation(line: 7117, column: 2, scope: !12685)
!12691 = !DILocation(line: 7119, column: 6, scope: !12692)
!12692 = distinct !DILexicalBlock(scope: !12693, file: !3, line: 7119, column: 6)
!12693 = distinct !DILexicalBlock(scope: !12680, file: !3, line: 7118, column: 13)
!12694 = !DILocation(line: 7119, column: 13, scope: !12692)
!12695 = !DILocation(line: 7119, column: 6, scope: !12693)
!12696 = !DILocation(line: 7119, column: 21, scope: !12692)
!12697 = !DILocation(line: 7119, column: 17, scope: !12692)
!12698 = !DILocation(line: 7121, column: 7, scope: !12681)
!12699 = !DILocation(line: 7126, column: 12, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12701, file: !3, line: 7126, column: 11)
!12701 = distinct !DILexicalBlock(scope: !12600, file: !3, line: 7123, column: 27)
!12702 = !DILocation(line: 7126, column: 11, scope: !12701)
!12703 = !DILocation(line: 7127, column: 6, scope: !12704)
!12704 = distinct !DILexicalBlock(scope: !12705, file: !3, line: 7127, column: 6)
!12705 = distinct !DILexicalBlock(scope: !12700, file: !3, line: 7126, column: 37)
!12706 = !DILocation(line: 7127, column: 13, scope: !12704)
!12707 = !DILocation(line: 7127, column: 6, scope: !12705)
!12708 = !DILocation(line: 7127, column: 21, scope: !12704)
!12709 = !DILocation(line: 7127, column: 17, scope: !12704)
!12710 = !DILocation(line: 7128, column: 2, scope: !12705)
!12711 = !DILocation(line: 7130, column: 6, scope: !12712)
!12712 = distinct !DILexicalBlock(scope: !12713, file: !3, line: 7130, column: 6)
!12713 = distinct !DILexicalBlock(scope: !12700, file: !3, line: 7129, column: 13)
!12714 = !DILocation(line: 7130, column: 13, scope: !12712)
!12715 = !DILocation(line: 7130, column: 6, scope: !12713)
!12716 = !DILocation(line: 7130, column: 21, scope: !12712)
!12717 = !DILocation(line: 7130, column: 17, scope: !12712)
!12718 = !DILocation(line: 7132, column: 7, scope: !12701)
!12719 = !DILocation(line: 7135, column: 8, scope: !12720)
!12720 = distinct !DILexicalBlock(scope: !12600, file: !3, line: 7134, column: 14)
!12721 = !DILocation(line: 7135, column: 14, scope: !12720)
!12722 = !DILocation(line: 7139, column: 7, scope: !12720)
!12723 = !DILocation(line: 7143, column: 7, scope: !12724)
!12724 = distinct !DILexicalBlock(scope: !12576, file: !3, line: 7143, column: 7)
!12725 = !DILocation(line: 7143, column: 11, scope: !12724)
!12726 = !DILocation(line: 7143, column: 7, scope: !12576)
!12727 = !DILocation(line: 7143, column: 16, scope: !12724)
!12728 = !DILocation(line: 7150, column: 7, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12576, file: !3, line: 7150, column: 7)
!12730 = !DILocation(line: 7150, column: 11, scope: !12729)
!12731 = !DILocation(line: 7150, column: 7, scope: !12576)
!12732 = !DILocalVariable(name: "up", scope: !12733, file: !3, line: 7151, type: !43)
!12733 = distinct !DILexicalBlock(scope: !12729, file: !3, line: 7150, column: 15)
!12734 = !DILocation(line: 7151, column: 11, scope: !12733)
!12735 = !DILocalVariable(name: "count", scope: !12733, file: !3, line: 7152, type: !36)
!12736 = !DILocation(line: 7152, column: 10, scope: !12733)
!12737 = !DILocation(line: 7152, column: 16, scope: !12733)
!12738 = !DILocation(line: 7152, column: 20, scope: !12733)
!12739 = !DILocation(line: 7153, column: 13, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12733, file: !3, line: 7153, column: 5)
!12741 = !DILocation(line: 7153, column: 17, scope: !12740)
!12742 = !DILocation(line: 7153, column: 12, scope: !12740)
!12743 = !DILocation(line: 7153, column: 10, scope: !12740)
!12744 = !DILocation(line: 7154, column: 11, scope: !12745)
!12745 = distinct !DILexicalBlock(scope: !12746, file: !3, line: 7154, column: 11)
!12746 = distinct !DILexicalBlock(scope: !12747, file: !3, line: 7153, column: 30)
!12747 = distinct !DILexicalBlock(scope: !12740, file: !3, line: 7153, column: 5)
!12748 = !DILocation(line: 7154, column: 16, scope: !12745)
!12749 = !DILocation(line: 7154, column: 11, scope: !12746)
!12750 = !DILocation(line: 7156, column: 7, scope: !12751)
!12751 = distinct !DILexicalBlock(scope: !12752, file: !3, line: 7156, column: 6)
!12752 = distinct !DILexicalBlock(scope: !12745, file: !3, line: 7154, column: 27)
!12753 = !DILocation(line: 7156, column: 6, scope: !12751)
!12754 = !DILocation(line: 7156, column: 18, scope: !12751)
!12755 = !DILocation(line: 7156, column: 11, scope: !12751)
!12756 = !DILocation(line: 7156, column: 24, scope: !12751)
!12757 = !DILocation(line: 7156, column: 9, scope: !12751)
!12758 = !DILocation(line: 7156, column: 6, scope: !12752)
!12759 = !DILocation(line: 7156, column: 28, scope: !12751)
!12760 = !DILocation(line: 7158, column: 19, scope: !12752)
!12761 = !DILocation(line: 7158, column: 24, scope: !12752)
!12762 = !DILocation(line: 7158, column: 12, scope: !12752)
!12763 = !DILocation(line: 7158, column: 6, scope: !12752)
!12764 = !DILocation(line: 7158, column: 3, scope: !12752)
!12765 = !DILocation(line: 7158, column: 5, scope: !12752)
!12766 = !DILocation(line: 7159, column: 10, scope: !12767)
!12767 = distinct !DILexicalBlock(scope: !12752, file: !3, line: 7159, column: 2)
!12768 = !DILocation(line: 7159, column: 12, scope: !12767)
!12769 = !DILocation(line: 7159, column: 9, scope: !12767)
!12770 = !DILocation(line: 7159, column: 7, scope: !12767)
!12771 = !DILocation(line: 7159, column: 16, scope: !12772)
!12772 = distinct !DILexicalBlock(scope: !12767, file: !3, line: 7159, column: 2)
!12773 = !DILocation(line: 7159, column: 20, scope: !12772)
!12774 = !DILocation(line: 7159, column: 24, scope: !12772)
!12775 = !DILocation(line: 7159, column: 18, scope: !12772)
!12776 = !DILocation(line: 7159, column: 2, scope: !12767)
!12777 = !DILocation(line: 7159, column: 36, scope: !12772)
!12778 = !DILocation(line: 7159, column: 38, scope: !12772)
!12779 = !DILocation(line: 7159, column: 35, scope: !12772)
!12780 = !DILocation(line: 7159, column: 31, scope: !12772)
!12781 = !DILocation(line: 7159, column: 2, scope: !12772)
!12782 = distinct !{!12782, !12776, !12783}
!12783 = !DILocation(line: 7159, column: 39, scope: !12767)
!12784 = !DILocation(line: 7160, column: 2, scope: !12752)
!12785 = !DILocation(line: 7160, column: 6, scope: !12752)
!12786 = !DILocation(line: 7160, column: 14, scope: !12752)
!12787 = !DILocation(line: 7162, column: 7, scope: !12788)
!12788 = distinct !DILexicalBlock(scope: !12752, file: !3, line: 7162, column: 6)
!12789 = !DILocation(line: 7162, column: 11, scope: !12788)
!12790 = !DILocation(line: 7162, column: 20, scope: !12788)
!12791 = !DILocation(line: 7162, column: 24, scope: !12788)
!12792 = !DILocation(line: 7162, column: 19, scope: !12788)
!12793 = !DILocation(line: 7162, column: 32, scope: !12788)
!12794 = !DILocation(line: 7162, column: 37, scope: !12788)
!12795 = !DILocation(line: 7162, column: 41, scope: !12788)
!12796 = !DILocation(line: 7162, column: 31, scope: !12788)
!12797 = !DILocation(line: 7162, column: 6, scope: !12752)
!12798 = !DILocation(line: 7163, column: 19, scope: !12799)
!12799 = distinct !DILexicalBlock(scope: !12788, file: !3, line: 7162, column: 45)
!12800 = !DILocation(line: 7163, column: 23, scope: !12799)
!12801 = !DILocation(line: 7163, column: 28, scope: !12799)
!12802 = !DILocation(line: 7163, column: 4, scope: !12799)
!12803 = !DILocation(line: 7164, column: 4, scope: !12799)
!12804 = !DILocation(line: 7165, column: 2, scope: !12752)
!12805 = !DILocation(line: 7168, column: 12, scope: !12806)
!12806 = distinct !DILexicalBlock(scope: !12746, file: !3, line: 7168, column: 11)
!12807 = !DILocation(line: 7168, column: 11, scope: !12806)
!12808 = !DILocation(line: 7168, column: 14, scope: !12806)
!12809 = !DILocation(line: 7168, column: 11, scope: !12746)
!12810 = !DILocation(line: 7168, column: 28, scope: !12806)
!12811 = !DILocation(line: 7169, column: 12, scope: !12746)
!12812 = !DILocation(line: 7170, column: 7, scope: !12746)
!12813 = !DILocation(line: 7153, column: 26, scope: !12747)
!12814 = !DILocation(line: 7153, column: 5, scope: !12747)
!12815 = distinct !{!12815, !12816, !12817}
!12816 = !DILocation(line: 7153, column: 5, scope: !12740)
!12817 = !DILocation(line: 7170, column: 7, scope: !12740)
!12818 = !DILocation(line: 7171, column: 5, scope: !12733)
!12819 = !DILocalVariable(name: "up", scope: !12820, file: !3, line: 7175, type: !43)
!12820 = distinct !DILexicalBlock(scope: !12729, file: !3, line: 7172, column: 9)
!12821 = !DILocation(line: 7175, column: 11, scope: !12820)
!12822 = !DILocalVariable(name: "sup", scope: !12820, file: !3, line: 7175, type: !43)
!12823 = !DILocation(line: 7175, column: 16, scope: !12820)
!12824 = !DILocalVariable(name: "count", scope: !12820, file: !3, line: 7176, type: !36)
!12825 = !DILocation(line: 7176, column: 10, scope: !12820)
!12826 = !DILocation(line: 7176, column: 16, scope: !12820)
!12827 = !DILocation(line: 7176, column: 20, scope: !12820)
!12828 = !DILocation(line: 7177, column: 13, scope: !12829)
!12829 = distinct !DILexicalBlock(scope: !12820, file: !3, line: 7177, column: 5)
!12830 = !DILocation(line: 7177, column: 17, scope: !12829)
!12831 = !DILocation(line: 7177, column: 12, scope: !12829)
!12832 = !DILocation(line: 7177, column: 10, scope: !12829)
!12833 = !DILocation(line: 7178, column: 11, scope: !12834)
!12834 = distinct !DILexicalBlock(scope: !12835, file: !3, line: 7178, column: 11)
!12835 = distinct !DILexicalBlock(scope: !12836, file: !3, line: 7177, column: 30)
!12836 = distinct !DILexicalBlock(scope: !12829, file: !3, line: 7177, column: 5)
!12837 = !DILocation(line: 7178, column: 16, scope: !12834)
!12838 = !DILocation(line: 7178, column: 11, scope: !12835)
!12839 = !DILocation(line: 7180, column: 7, scope: !12840)
!12840 = distinct !DILexicalBlock(scope: !12841, file: !3, line: 7180, column: 6)
!12841 = distinct !DILexicalBlock(scope: !12834, file: !3, line: 7178, column: 27)
!12842 = !DILocation(line: 7180, column: 6, scope: !12840)
!12843 = !DILocation(line: 7180, column: 18, scope: !12840)
!12844 = !DILocation(line: 7180, column: 23, scope: !12840)
!12845 = !DILocation(line: 7180, column: 11, scope: !12840)
!12846 = !DILocation(line: 7180, column: 9, scope: !12840)
!12847 = !DILocation(line: 7180, column: 6, scope: !12841)
!12848 = !DILocation(line: 7180, column: 28, scope: !12840)
!12849 = !DILocation(line: 7182, column: 6, scope: !12841)
!12850 = !DILocation(line: 7182, column: 5, scope: !12841)
!12851 = !DILocation(line: 7183, column: 19, scope: !12841)
!12852 = !DILocation(line: 7183, column: 12, scope: !12841)
!12853 = !DILocation(line: 7183, column: 6, scope: !12841)
!12854 = !DILocation(line: 7183, column: 25, scope: !12841)
!12855 = !DILocation(line: 7183, column: 3, scope: !12841)
!12856 = !DILocation(line: 7183, column: 5, scope: !12841)
!12857 = !DILocation(line: 7185, column: 10, scope: !12858)
!12858 = distinct !DILexicalBlock(scope: !12841, file: !3, line: 7185, column: 2)
!12859 = !DILocation(line: 7185, column: 12, scope: !12858)
!12860 = !DILocation(line: 7185, column: 9, scope: !12858)
!12861 = !DILocation(line: 7185, column: 7, scope: !12858)
!12862 = !DILocation(line: 7185, column: 16, scope: !12863)
!12863 = distinct !DILexicalBlock(scope: !12858, file: !3, line: 7185, column: 2)
!12864 = !DILocation(line: 7185, column: 20, scope: !12863)
!12865 = !DILocation(line: 7185, column: 24, scope: !12863)
!12866 = !DILocation(line: 7185, column: 18, scope: !12863)
!12867 = !DILocation(line: 7185, column: 2, scope: !12858)
!12868 = !DILocation(line: 7185, column: 45, scope: !12863)
!12869 = !DILocation(line: 7185, column: 39, scope: !12863)
!12870 = !DILocation(line: 7185, column: 60, scope: !12863)
!12871 = !DILocation(line: 7185, column: 36, scope: !12863)
!12872 = !DILocation(line: 7185, column: 38, scope: !12863)
!12873 = !DILocation(line: 7185, column: 35, scope: !12863)
!12874 = !DILocation(line: 7185, column: 31, scope: !12863)
!12875 = !DILocation(line: 7185, column: 2, scope: !12863)
!12876 = distinct !{!12876, !12867, !12877}
!12877 = !DILocation(line: 7185, column: 61, scope: !12858)
!12878 = !DILocation(line: 7186, column: 2, scope: !12841)
!12879 = !DILocation(line: 7186, column: 6, scope: !12841)
!12880 = !DILocation(line: 7186, column: 14, scope: !12841)
!12881 = !DILocation(line: 7193, column: 6, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12841, file: !3, line: 7193, column: 6)
!12883 = !DILocation(line: 7193, column: 10, scope: !12882)
!12884 = !DILocation(line: 7193, column: 18, scope: !12882)
!12885 = !DILocation(line: 7193, column: 22, scope: !12882)
!12886 = !DILocation(line: 7193, column: 27, scope: !12882)
!12887 = !DILocation(line: 7193, column: 32, scope: !12882)
!12888 = !DILocation(line: 7193, column: 37, scope: !12882)
!12889 = !DILocation(line: 7193, column: 31, scope: !12882)
!12890 = !DILocation(line: 7193, column: 43, scope: !12882)
!12891 = !DILocation(line: 7193, column: 20, scope: !12882)
!12892 = !DILocation(line: 7193, column: 6, scope: !12841)
!12893 = !DILocation(line: 7194, column: 8, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12895, file: !3, line: 7194, column: 8)
!12895 = distinct !DILexicalBlock(scope: !12882, file: !3, line: 7193, column: 47)
!12896 = !DILocation(line: 7194, column: 13, scope: !12894)
!12897 = !DILocation(line: 7194, column: 17, scope: !12894)
!12898 = !DILocation(line: 7194, column: 20, scope: !12894)
!12899 = !DILocation(line: 7194, column: 24, scope: !12894)
!12900 = !DILocation(line: 7194, column: 30, scope: !12894)
!12901 = !DILocation(line: 7194, column: 8, scope: !12895)
!12902 = !DILocation(line: 7194, column: 36, scope: !12894)
!12903 = !DILocation(line: 7194, column: 39, scope: !12894)
!12904 = !DILocation(line: 7194, column: 35, scope: !12894)
!12905 = !DILocation(line: 7196, column: 24, scope: !12906)
!12906 = distinct !DILexicalBlock(scope: !12894, file: !3, line: 7195, column: 10)
!12907 = !DILocation(line: 7196, column: 29, scope: !12906)
!12908 = !DILocation(line: 7196, column: 17, scope: !12906)
!12909 = !DILocation(line: 7196, column: 11, scope: !12906)
!12910 = !DILocation(line: 7196, column: 32, scope: !12906)
!12911 = !DILocation(line: 7196, column: 7, scope: !12906)
!12912 = !DILocation(line: 7196, column: 10, scope: !12906)
!12913 = !DILocation(line: 7197, column: 6, scope: !12906)
!12914 = !DILocation(line: 7197, column: 10, scope: !12906)
!12915 = !DILocation(line: 7197, column: 16, scope: !12906)
!12916 = !DILocation(line: 7199, column: 4, scope: !12895)
!12917 = !DILocation(line: 7199, column: 8, scope: !12895)
!12918 = !DILocation(line: 7199, column: 16, scope: !12895)
!12919 = !DILocation(line: 7200, column: 5, scope: !12895)
!12920 = !DILocation(line: 7200, column: 11, scope: !12895)
!12921 = !DILocation(line: 7201, column: 4, scope: !12895)
!12922 = !DILocation(line: 7202, column: 2, scope: !12841)
!12923 = !DILocation(line: 7206, column: 12, scope: !12924)
!12924 = distinct !DILexicalBlock(scope: !12835, file: !3, line: 7206, column: 11)
!12925 = !DILocation(line: 7206, column: 11, scope: !12924)
!12926 = !DILocation(line: 7206, column: 14, scope: !12924)
!12927 = !DILocation(line: 7206, column: 11, scope: !12835)
!12928 = !DILocation(line: 7206, column: 19, scope: !12924)
!12929 = !DILocation(line: 7207, column: 12, scope: !12835)
!12930 = !DILocation(line: 7208, column: 7, scope: !12835)
!12931 = !DILocation(line: 7177, column: 26, scope: !12836)
!12932 = !DILocation(line: 7177, column: 5, scope: !12836)
!12933 = distinct !{!12933, !12934, !12935}
!12934 = !DILocation(line: 7177, column: 5, scope: !12829)
!12935 = !DILocation(line: 7208, column: 7, scope: !12829)
!12936 = !DILocation(line: 7213, column: 17, scope: !12576)
!12937 = !DILocation(line: 7213, column: 21, scope: !12576)
!12938 = !DILocation(line: 7213, column: 26, scope: !12576)
!12939 = !DILocation(line: 7213, column: 58, scope: !12576)
!12940 = !DILocation(line: 7213, column: 62, scope: !12576)
!12941 = !DILocation(line: 7213, column: 67, scope: !12576)
!12942 = !DILocation(line: 7213, column: 3, scope: !12576)
!12943 = !DILocation(line: 7214, column: 3, scope: !12576)
!12944 = distinct !DISubprogram(name: "decSetOverflow", scope: !3, file: !3, line: 7342, type: !12945, scopeLine: 7342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!12945 = !DISubroutineType(types: !12946)
!12946 = !{null, !47, !269, !59}
!12947 = !DILocalVariable(name: "dn", arg: 1, scope: !12944, file: !3, line: 7342, type: !47)
!12948 = !DILocation(line: 7342, column: 39, scope: !12944)
!12949 = !DILocalVariable(name: "set", arg: 2, scope: !12944, file: !3, line: 7342, type: !269)
!12950 = !DILocation(line: 7342, column: 55, scope: !12944)
!12951 = !DILocalVariable(name: "status", arg: 3, scope: !12944, file: !3, line: 7342, type: !59)
!12952 = !DILocation(line: 7342, column: 66, scope: !12944)
!12953 = !DILocalVariable(name: "needmax", scope: !12944, file: !3, line: 7343, type: !44)
!12954 = !DILocation(line: 7343, column: 8, scope: !12944)
!12955 = !DILocalVariable(name: "sign", scope: !12944, file: !3, line: 7344, type: !44)
!12956 = !DILocation(line: 7344, column: 9, scope: !12944)
!12957 = !DILocation(line: 7344, column: 14, scope: !12944)
!12958 = !DILocation(line: 7344, column: 18, scope: !12944)
!12959 = !DILocation(line: 7344, column: 22, scope: !12944)
!12960 = !DILocation(line: 7346, column: 7, scope: !12961)
!12961 = distinct !DILexicalBlock(scope: !12944, file: !3, line: 7346, column: 7)
!12962 = !DILocation(line: 7346, column: 7, scope: !12944)
!12963 = !DILocalVariable(name: "emax", scope: !12964, file: !3, line: 7347, type: !31)
!12964 = distinct !DILexicalBlock(scope: !12961, file: !3, line: 7346, column: 19)
!12965 = !DILocation(line: 7347, column: 9, scope: !12964)
!12966 = !DILocation(line: 7347, column: 14, scope: !12964)
!12967 = !DILocation(line: 7347, column: 19, scope: !12964)
!12968 = !DILocation(line: 7348, column: 9, scope: !12969)
!12969 = distinct !DILexicalBlock(scope: !12964, file: !3, line: 7348, column: 9)
!12970 = !DILocation(line: 7348, column: 14, scope: !12969)
!12971 = !DILocation(line: 7348, column: 9, scope: !12964)
!12972 = !DILocation(line: 7348, column: 27, scope: !12969)
!12973 = !DILocation(line: 7348, column: 32, scope: !12969)
!12974 = !DILocation(line: 7348, column: 38, scope: !12969)
!12975 = !DILocation(line: 7348, column: 25, scope: !12969)
!12976 = !DILocation(line: 7348, column: 21, scope: !12969)
!12977 = !DILocation(line: 7349, column: 9, scope: !12978)
!12978 = distinct !DILexicalBlock(scope: !12964, file: !3, line: 7349, column: 9)
!12979 = !DILocation(line: 7349, column: 13, scope: !12978)
!12980 = !DILocation(line: 7349, column: 22, scope: !12978)
!12981 = !DILocation(line: 7349, column: 21, scope: !12978)
!12982 = !DILocation(line: 7349, column: 9, scope: !12964)
!12983 = !DILocation(line: 7350, column: 20, scope: !12984)
!12984 = distinct !DILexicalBlock(scope: !12978, file: !3, line: 7349, column: 28)
!12985 = !DILocation(line: 7350, column: 7, scope: !12984)
!12986 = !DILocation(line: 7350, column: 11, scope: !12984)
!12987 = !DILocation(line: 7350, column: 19, scope: !12984)
!12988 = !DILocation(line: 7351, column: 8, scope: !12984)
!12989 = !DILocation(line: 7351, column: 14, scope: !12984)
!12990 = !DILocation(line: 7352, column: 7, scope: !12984)
!12991 = !DILocation(line: 7353, column: 5, scope: !12964)
!12992 = !DILocation(line: 7356, column: 17, scope: !12944)
!12993 = !DILocation(line: 7356, column: 3, scope: !12944)
!12994 = !DILocation(line: 7357, column: 11, scope: !12944)
!12995 = !DILocation(line: 7357, column: 16, scope: !12944)
!12996 = !DILocation(line: 7357, column: 3, scope: !12944)
!12997 = !DILocation(line: 7359, column: 14, scope: !12998)
!12998 = distinct !DILexicalBlock(scope: !12999, file: !3, line: 7358, column: 26)
!12999 = distinct !DILexicalBlock(scope: !12944, file: !3, line: 7357, column: 23)
!13000 = !DILocation(line: 7360, column: 7, scope: !12998)
!13001 = !DILocation(line: 7362, column: 14, scope: !13002)
!13002 = distinct !DILexicalBlock(scope: !12999, file: !3, line: 7361, column: 26)
!13003 = !DILocation(line: 7363, column: 7, scope: !13002)
!13004 = !DILocation(line: 7365, column: 11, scope: !13005)
!13005 = distinct !DILexicalBlock(scope: !13006, file: !3, line: 7365, column: 11)
!13006 = distinct !DILexicalBlock(scope: !12999, file: !3, line: 7364, column: 29)
!13007 = !DILocation(line: 7365, column: 11, scope: !13006)
!13008 = !DILocation(line: 7365, column: 24, scope: !13005)
!13009 = !DILocation(line: 7365, column: 17, scope: !13005)
!13010 = !DILocation(line: 7366, column: 7, scope: !13006)
!13011 = !DILocation(line: 7368, column: 12, scope: !13012)
!13012 = distinct !DILexicalBlock(scope: !13013, file: !3, line: 7368, column: 11)
!13013 = distinct !DILexicalBlock(scope: !12999, file: !3, line: 7367, column: 27)
!13014 = !DILocation(line: 7368, column: 11, scope: !13013)
!13015 = !DILocation(line: 7368, column: 25, scope: !13012)
!13016 = !DILocation(line: 7368, column: 18, scope: !13012)
!13017 = !DILocation(line: 7369, column: 7, scope: !13013)
!13018 = !DILocation(line: 7370, column: 14, scope: !12999)
!13019 = !DILocation(line: 7372, column: 7, scope: !13020)
!13020 = distinct !DILexicalBlock(scope: !12944, file: !3, line: 7372, column: 7)
!13021 = !DILocation(line: 7372, column: 7, scope: !12944)
!13022 = !DILocation(line: 7373, column: 20, scope: !13023)
!13023 = distinct !DILexicalBlock(scope: !13020, file: !3, line: 7372, column: 16)
!13024 = !DILocation(line: 7373, column: 24, scope: !13023)
!13025 = !DILocation(line: 7373, column: 5, scope: !13023)
!13026 = !DILocation(line: 7374, column: 14, scope: !13023)
!13027 = !DILocation(line: 7374, column: 5, scope: !13023)
!13028 = !DILocation(line: 7374, column: 9, scope: !13023)
!13029 = !DILocation(line: 7374, column: 13, scope: !13023)
!13030 = !DILocation(line: 7375, column: 5, scope: !13023)
!13031 = !DILocation(line: 7376, column: 18, scope: !13020)
!13032 = !DILocation(line: 7376, column: 22, scope: !13020)
!13033 = !DILocation(line: 7376, column: 9, scope: !13020)
!13034 = !DILocation(line: 7376, column: 13, scope: !13020)
!13035 = !DILocation(line: 7376, column: 17, scope: !13020)
!13036 = !DILocation(line: 7377, column: 4, scope: !12944)
!13037 = !DILocation(line: 7377, column: 10, scope: !12944)
!13038 = !DILocation(line: 7378, column: 3, scope: !12944)
!13039 = distinct !DISubprogram(name: "decSetSubnormal", scope: !3, file: !3, line: 7422, type: !2093, scopeLine: 7423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !95)
!13040 = !DILocalVariable(name: "dn", arg: 1, scope: !13039, file: !3, line: 7422, type: !47)
!13041 = !DILocation(line: 7422, column: 40, scope: !13039)
!13042 = !DILocalVariable(name: "set", arg: 2, scope: !13039, file: !3, line: 7422, type: !269)
!13043 = !DILocation(line: 7422, column: 56, scope: !13039)
!13044 = !DILocalVariable(name: "residue", arg: 3, scope: !13039, file: !3, line: 7422, type: !1691)
!13045 = !DILocation(line: 7422, column: 66, scope: !13039)
!13046 = !DILocalVariable(name: "status", arg: 4, scope: !13039, file: !3, line: 7423, type: !59)
!13047 = !DILocation(line: 7423, column: 14, scope: !13039)
!13048 = !DILocalVariable(name: "workset", scope: !13039, file: !3, line: 7424, type: !270)
!13049 = !DILocation(line: 7424, column: 14, scope: !13039)
!13050 = !DILocalVariable(name: "etiny", scope: !13039, file: !3, line: 7425, type: !31)
!13051 = !DILocation(line: 7425, column: 12, scope: !13039)
!13052 = !DILocalVariable(name: "adjust", scope: !13039, file: !3, line: 7425, type: !31)
!13053 = !DILocation(line: 7425, column: 19, scope: !13039)
!13054 = !DILocation(line: 7439, column: 9, scope: !13039)
!13055 = !DILocation(line: 7439, column: 14, scope: !13039)
!13056 = !DILocation(line: 7439, column: 20, scope: !13039)
!13057 = !DILocation(line: 7439, column: 25, scope: !13039)
!13058 = !DILocation(line: 7439, column: 31, scope: !13039)
!13059 = !DILocation(line: 7439, column: 18, scope: !13039)
!13060 = !DILocation(line: 7439, column: 8, scope: !13039)
!13061 = !DILocation(line: 7441, column: 6, scope: !13062)
!13062 = distinct !DILexicalBlock(scope: !13039, file: !3, line: 7441, column: 6)
!13063 = !DILocation(line: 7441, column: 6, scope: !13039)
!13064 = !DILocation(line: 7449, column: 9, scope: !13065)
!13065 = distinct !DILexicalBlock(scope: !13066, file: !3, line: 7449, column: 9)
!13066 = distinct !DILexicalBlock(scope: !13062, file: !3, line: 7441, column: 17)
!13067 = !DILocation(line: 7449, column: 13, scope: !13065)
!13068 = !DILocation(line: 7449, column: 22, scope: !13065)
!13069 = !DILocation(line: 7449, column: 21, scope: !13065)
!13070 = !DILocation(line: 7449, column: 9, scope: !13066)
!13071 = !DILocation(line: 7450, column: 20, scope: !13072)
!13072 = distinct !DILexicalBlock(scope: !13065, file: !3, line: 7449, column: 29)
!13073 = !DILocation(line: 7450, column: 7, scope: !13072)
!13074 = !DILocation(line: 7450, column: 11, scope: !13072)
!13075 = !DILocation(line: 7450, column: 19, scope: !13072)
!13076 = !DILocation(line: 7451, column: 8, scope: !13072)
!13077 = !DILocation(line: 7451, column: 14, scope: !13072)
!13078 = !DILocation(line: 7452, column: 7, scope: !13072)
!13079 = !DILocation(line: 7453, column: 5, scope: !13066)
!13080 = !DILocation(line: 7456, column: 4, scope: !13039)
!13081 = !DILocation(line: 7456, column: 10, scope: !13039)
!13082 = !DILocation(line: 7457, column: 10, scope: !13039)
!13083 = !DILocation(line: 7457, column: 16, scope: !13039)
!13084 = !DILocation(line: 7457, column: 20, scope: !13039)
!13085 = !DILocation(line: 7457, column: 15, scope: !13039)
!13086 = !DILocation(line: 7457, column: 9, scope: !13039)
!13087 = !DILocation(line: 7458, column: 7, scope: !13088)
!13088 = distinct !DILexicalBlock(scope: !13039, file: !3, line: 7458, column: 7)
!13089 = !DILocation(line: 7458, column: 13, scope: !13088)
!13090 = !DILocation(line: 7458, column: 7, scope: !13039)
!13091 = !DILocation(line: 7462, column: 10, scope: !13092)
!13092 = distinct !DILexicalBlock(scope: !13093, file: !3, line: 7462, column: 9)
!13093 = distinct !DILexicalBlock(scope: !13088, file: !3, line: 7458, column: 18)
!13094 = !DILocation(line: 7462, column: 9, scope: !13092)
!13095 = !DILocation(line: 7462, column: 16, scope: !13092)
!13096 = !DILocation(line: 7462, column: 9, scope: !13093)
!13097 = !DILocation(line: 7462, column: 31, scope: !13092)
!13098 = !DILocation(line: 7462, column: 37, scope: !13092)
!13099 = !DILocation(line: 7462, column: 30, scope: !13092)
!13100 = !DILocation(line: 7463, column: 5, scope: !13093)
!13101 = !DILocation(line: 7468, column: 12, scope: !13039)
!13102 = !DILocation(line: 7468, column: 11, scope: !13039)
!13103 = !DILocation(line: 7469, column: 18, scope: !13039)
!13104 = !DILocation(line: 7469, column: 22, scope: !13039)
!13105 = !DILocation(line: 7469, column: 29, scope: !13039)
!13106 = !DILocation(line: 7469, column: 28, scope: !13039)
!13107 = !DILocation(line: 7469, column: 11, scope: !13039)
!13108 = !DILocation(line: 7469, column: 17, scope: !13039)
!13109 = !DILocation(line: 7470, column: 17, scope: !13039)
!13110 = !DILocation(line: 7470, column: 11, scope: !13039)
!13111 = !DILocation(line: 7470, column: 15, scope: !13039)
!13112 = !DILocation(line: 7472, column: 15, scope: !13039)
!13113 = !DILocation(line: 7472, column: 29, scope: !13039)
!13114 = !DILocation(line: 7472, column: 33, scope: !13039)
!13115 = !DILocation(line: 7472, column: 38, scope: !13039)
!13116 = !DILocation(line: 7472, column: 42, scope: !13039)
!13117 = !DILocation(line: 7472, column: 50, scope: !13039)
!13118 = !DILocation(line: 7472, column: 59, scope: !13039)
!13119 = !DILocation(line: 7472, column: 3, scope: !13039)
!13120 = !DILocation(line: 7473, column: 17, scope: !13039)
!13121 = !DILocation(line: 7473, column: 32, scope: !13039)
!13122 = !DILocation(line: 7473, column: 31, scope: !13039)
!13123 = !DILocation(line: 7473, column: 41, scope: !13039)
!13124 = !DILocation(line: 7473, column: 3, scope: !13039)
!13125 = !DILocation(line: 7477, column: 8, scope: !13126)
!13126 = distinct !DILexicalBlock(scope: !13039, file: !3, line: 7477, column: 7)
!13127 = !DILocation(line: 7477, column: 7, scope: !13126)
!13128 = !DILocation(line: 7477, column: 14, scope: !13126)
!13129 = !DILocation(line: 7477, column: 7, scope: !13039)
!13130 = !DILocation(line: 7477, column: 29, scope: !13126)
!13131 = !DILocation(line: 7477, column: 35, scope: !13126)
!13132 = !DILocation(line: 7477, column: 28, scope: !13126)
!13133 = !DILocation(line: 7481, column: 7, scope: !13134)
!13134 = distinct !DILexicalBlock(scope: !13039, file: !3, line: 7481, column: 7)
!13135 = !DILocation(line: 7481, column: 11, scope: !13134)
!13136 = !DILocation(line: 7481, column: 20, scope: !13134)
!13137 = !DILocation(line: 7481, column: 19, scope: !13134)
!13138 = !DILocation(line: 7481, column: 7, scope: !13039)
!13139 = !DILocation(line: 7482, column: 31, scope: !13140)
!13140 = distinct !DILexicalBlock(scope: !13134, file: !3, line: 7481, column: 27)
!13141 = !DILocation(line: 7482, column: 35, scope: !13140)
!13142 = !DILocation(line: 7482, column: 40, scope: !13140)
!13143 = !DILocation(line: 7482, column: 44, scope: !13140)
!13144 = !DILocation(line: 7482, column: 16, scope: !13140)
!13145 = !DILocation(line: 7482, column: 5, scope: !13140)
!13146 = !DILocation(line: 7482, column: 9, scope: !13140)
!13147 = !DILocation(line: 7482, column: 15, scope: !13140)
!13148 = !DILocation(line: 7483, column: 5, scope: !13140)
!13149 = !DILocation(line: 7483, column: 9, scope: !13140)
!13150 = !DILocation(line: 7483, column: 17, scope: !13140)
!13151 = !DILocation(line: 7484, column: 5, scope: !13140)
!13152 = !DILocation(line: 7487, column: 7, scope: !13153)
!13153 = distinct !DILexicalBlock(scope: !13039, file: !3, line: 7487, column: 7)
!13154 = !DILocation(line: 7487, column: 7, scope: !13039)
!13155 = !DILocation(line: 7487, column: 20, scope: !13153)
!13156 = !DILocation(line: 7487, column: 26, scope: !13153)
!13157 = !DILocation(line: 7487, column: 19, scope: !13153)
!13158 = !DILocation(line: 7488, column: 3, scope: !13039)
